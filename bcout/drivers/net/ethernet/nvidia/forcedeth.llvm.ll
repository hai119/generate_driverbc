; ModuleID = '../bcout/drivers/net/ethernet/nvidia/forcedeth.llvm.bc'
source_filename = "drivers/net/ethernet/nvidia/forcedeth.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_forcedeth_pci_driver_init6:\09\09\09"
module asm ".long\09forcedeth_pci_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.88, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.87, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.87 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.85, %struct.list_head, %struct.list_head, %union.anon.86 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.83 }
%union.anon.83 = type { %struct.anon.84 }
%struct.anon.84 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.75, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.75 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.76, i32 }
%union.anon.76 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.68, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.36, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.89, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.129, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.89 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.41, %union.anon.44, %union.anon.45, [48 x i8], %union.anon.46, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.48, i32, i32, i32, i16, i16, %union.anon.50, %union.anon.51, %union.anon.52, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.41 = type { %struct.anon.42 }
%struct.anon.42 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.43 }
%union.anon.43 = type { %struct.net_device* }
%union.anon.44 = type { %struct.sock* }
%union.anon.45 = type { i64 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, void (%struct.sk_buff*)* }
%union.anon.48 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i32 }
%union.anon.52 = type { i16 }
%struct.ifreq = type { %union.anon.90, %union.anon.91 }
%union.anon.90 = type { [16 x i8] }
%union.anon.91 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.93 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.93 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.94 }
%union.anon.94 = type { %struct.anon.95 }
%struct.anon.95 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.126 }
%union.anon.126 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.127, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.127 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.128 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.128 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.129 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.39, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.39 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.40 }
%union.anon.40 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.53 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.53 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.54, %union.anon.55, i32 }
%struct.request_queue = type opaque
%union.anon.54 = type { %struct.list_head }
%union.anon.55 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.56 }
%struct.anon.56 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.60 }
%struct.anon.60 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.67, i32, [12 x i8] }
%union.anon.67 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.68 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.69, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.72 }
%union.anon.69 = type { %struct.anon.70 }
%struct.anon.70 = type { i64, i64 }
%union.anon.72 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.34 }
%union.anon.34 = type { %struct.anon.35, [48 x i8] }
%struct.anon.35 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.85 = type { %struct.list_head }
%union.anon.86 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.77, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.78, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.79, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.82, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.77 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.78 = type { %struct.callback_head }
%union.anon.79 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.82 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.80 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.80 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.38 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.38 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.88 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, %struct.Qdisc*, %struct.Qdisc**, %struct.sk_buff*, %struct.anon.130, i32, %struct.sk_buff_head, %struct.napi_struct }
%struct.anon.130 = type { i16, i8 }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.register_test = type { i32, i32 }
%struct.nv_ethtool_str = type { [32 x i8] }
%struct.anon.131 = type { i32, i32 }
%struct.fe_priv = type { %struct.spinlock, %struct.net_device*, %struct.napi_struct, %struct.spinlock, %struct.nv_ethtool_stats, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, i32, i32, i64, %struct.pci_dev*, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, %union.ring_type, %union.ring_type, %union.ring_type, %struct.nv_skb_map*, %struct.nv_skb_map*, %struct.nv_skb_map*, %struct.nv_skb_map*, %union.ring_type, i32, i32, %struct.timer_list, %struct.timer_list, %struct.timer_list, i32, i32, %struct.u64_stats_sync, %struct.nv_txrx_stats*, i32, i64, %union.ring_type, %union.ring_type, %union.ring_type, %struct.nv_skb_map*, %struct.nv_skb_map*, %struct.nv_skb_map*, %struct.nv_skb_map*, %union.ring_type, i32, i32, i32, i32, %struct.nv_skb_map*, %struct.nv_skb_map*, i32, %struct.u64_stats_sync, i32, [8 x %struct.msix_entry], i32, [385 x i32], [19 x i8], [19 x i8], [22 x i8] }
%struct.nv_ethtool_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nv_txrx_stats = type { i64, i64, i64, i64, i64, i64, i64 }
%union.ring_type = type { %struct.ring_desc* }
%struct.ring_desc = type { i32, i32 }
%struct.nv_skb_map = type { %struct.sk_buff*, i64, i32, %struct.ring_desc_ex*, %struct.nv_skb_map* }
%struct.ring_desc_ex = type { i32, i32, i32, i32 }
%struct.msix_entry = type { i32, i16 }
%struct.vlan_ethhdr = type { [6 x i8], [6 x i8], i16, i16, i16 }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.sockaddr = type { i16, [14 x i8] }

@__param_str_max_interrupt_work = internal constant [29 x i8] c"forcedeth.max_interrupt_work\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@max_interrupt_work = internal global i32 4, align 4, !dbg !8123
@__param_max_interrupt_work = internal constant %struct.kernel_param { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__param_str_max_interrupt_work, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @max_interrupt_work to i8*) } }, section "__param", align 8, !dbg !7956
@__UNIQUE_ID_max_interrupt_worktype333 = internal constant [42 x i8] c"forcedeth.parmtype=max_interrupt_work:int\00", section ".modinfo", align 1, !dbg !8005
@__UNIQUE_ID_max_interrupt_work334 = internal constant [81 x i8] c"forcedeth.parm=max_interrupt_work:forcedeth maximum events handled per interrupt\00", section ".modinfo", align 1, !dbg !8010
@__param_str_optimization_mode = internal constant [28 x i8] c"forcedeth.optimization_mode\00", align 16, !dbg !8125
@optimization_mode = internal global i32 2, align 4, !dbg !8127
@__param_optimization_mode = internal constant %struct.kernel_param { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__param_str_optimization_mode, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @optimization_mode to i8*) } }, section "__param", align 8, !dbg !8015
@__UNIQUE_ID_optimization_modetype335 = internal constant [41 x i8] c"forcedeth.parmtype=optimization_mode:int\00", section ".modinfo", align 1, !dbg !8017
@__UNIQUE_ID_optimization_mode336 = internal constant [254 x i8] c"forcedeth.parm=optimization_mode:In throughput mode (0), every tx & rx packet will generate an interrupt. In CPU mode (1), interrupts are controlled by a timer. In dynamic mode (2), the mode toggles between throughput and CPU mode based on network load.\00", section ".modinfo", align 1, !dbg !8022
@__param_str_poll_interval = internal constant [24 x i8] c"forcedeth.poll_interval\00", align 16, !dbg !8129
@poll_interval = internal global i32 -1, align 4, !dbg !8134
@__param_poll_interval = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_poll_interval, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @poll_interval to i8*) } }, section "__param", align 8, !dbg !8027
@__UNIQUE_ID_poll_intervaltype337 = internal constant [37 x i8] c"forcedeth.parmtype=poll_interval:int\00", section ".modinfo", align 1, !dbg !8029
@__UNIQUE_ID_poll_interval338 = internal constant [160 x i8] c"forcedeth.parm=poll_interval:Interval determines how frequent timer interrupt is generated by [(time_in_micro_secs * 100) / (2^10)]. Min is 0 and Max is 65535.\00", section ".modinfo", align 1, !dbg !8032
@__param_str_msi = internal constant [14 x i8] c"forcedeth.msi\00", align 1, !dbg !8136
@msi = internal global i32 1, align 4, !dbg !8139
@__param_msi = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_msi, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @msi to i8*) } }, section "__param", align 8, !dbg !8037
@__UNIQUE_ID_msitype339 = internal constant [27 x i8] c"forcedeth.parmtype=msi:int\00", section ".modinfo", align 1, !dbg !8039
@__UNIQUE_ID_msi340 = internal constant [92 x i8] c"forcedeth.parm=msi:MSI interrupts are enabled by setting to 1 and disabled by setting to 0.\00", section ".modinfo", align 1, !dbg !8044
@__param_str_msix = internal constant [15 x i8] c"forcedeth.msix\00", align 1, !dbg !8141
@msix = internal global i32 1, align 4, !dbg !8146
@__param_msix = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_msix, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @msix to i8*) } }, section "__param", align 8, !dbg !8049
@__UNIQUE_ID_msixtype341 = internal constant [28 x i8] c"forcedeth.parmtype=msix:int\00", section ".modinfo", align 1, !dbg !8051
@__UNIQUE_ID_msix342 = internal constant [94 x i8] c"forcedeth.parm=msix:MSIX interrupts are enabled by setting to 1 and disabled by setting to 0.\00", section ".modinfo", align 1, !dbg !8054
@__param_str_dma_64bit = internal constant [20 x i8] c"forcedeth.dma_64bit\00", align 16, !dbg !8148
@dma_64bit = internal global i32 1, align 4, !dbg !8151
@__param_dma_64bit = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_dma_64bit, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @dma_64bit to i8*) } }, section "__param", align 8, !dbg !8059
@__UNIQUE_ID_dma_64bittype343 = internal constant [33 x i8] c"forcedeth.parmtype=dma_64bit:int\00", section ".modinfo", align 1, !dbg !8061
@__UNIQUE_ID_dma_64bit344 = internal constant [91 x i8] c"forcedeth.parm=dma_64bit:High DMA is enabled by setting to 1 and disabled by setting to 0.\00", section ".modinfo", align 1, !dbg !8066
@__param_str_phy_cross = internal constant [20 x i8] c"forcedeth.phy_cross\00", align 16, !dbg !8153
@phy_cross = internal global i32 0, align 4, !dbg !8155
@__param_phy_cross = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_phy_cross, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @phy_cross to i8*) } }, section "__param", align 8, !dbg !8071
@__UNIQUE_ID_phy_crosstype345 = internal constant [33 x i8] c"forcedeth.parmtype=phy_cross:int\00", section ".modinfo", align 1, !dbg !8073
@__UNIQUE_ID_phy_cross346 = internal constant [127 x i8] c"forcedeth.parm=phy_cross:Phy crossover detection for Realtek 8201 phy is enabled by setting to 1 and disabled by setting to 0.\00", section ".modinfo", align 1, !dbg !8075
@__param_str_phy_power_down = internal constant [25 x i8] c"forcedeth.phy_power_down\00", align 16, !dbg !8157
@phy_power_down = internal global i32 0, align 4, !dbg !8121
@__param_phy_power_down = internal constant %struct.kernel_param { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__param_str_phy_power_down, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @phy_power_down to i8*) } }, section "__param", align 8, !dbg !8080
@__UNIQUE_ID_phy_power_downtype347 = internal constant [38 x i8] c"forcedeth.parmtype=phy_power_down:int\00", section ".modinfo", align 1, !dbg !8082
@__UNIQUE_ID_phy_power_down348 = internal constant [119 x i8] c"forcedeth.parm=phy_power_down:Power down phy and disable link when interface is down (1), or leave phy powered up (0).\00", section ".modinfo", align 1, !dbg !8087
@__param_str_debug_tx_timeout = internal constant [27 x i8] c"forcedeth.debug_tx_timeout\00", align 16, !dbg !8162
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@debug_tx_timeout = internal global i8 0, align 1, !dbg !8164
@__param_debug_tx_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_debug_tx_timeout, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @debug_tx_timeout } }, section "__param", align 8, !dbg !8092
@__UNIQUE_ID_debug_tx_timeouttype349 = internal constant [41 x i8] c"forcedeth.parmtype=debug_tx_timeout:bool\00", section ".modinfo", align 1, !dbg !8094
@__UNIQUE_ID_debug_tx_timeout350 = internal constant [91 x i8] c"forcedeth.parm=debug_tx_timeout:Dump tx related registers and ring when tx_timeout happens\00", section ".modinfo", align 1, !dbg !8096
@__UNIQUE_ID___addressable_forcedeth_pci_driver_init351 = internal global i8* bitcast (i32 ()* @forcedeth_pci_driver_init to i8*), section ".discard.addressable", align 8, !dbg !8098
@forcedeth_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([41 x %struct.pci_device_id], [41 x %struct.pci_device_id]* @pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @nv_probe, void (%struct.pci_dev*)* @nv_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* @nv_shutdown, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @nv_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.pci_dynids zeroinitializer }, align 8, !dbg !8166
@__exitcall_forcedeth_pci_driver_exit = internal global void ()* @forcedeth_pci_driver_exit, section ".exitcall.exit", align 8, !dbg !8100
@__UNIQUE_ID_author352 = internal constant [59 x i8] c"forcedeth.author=Manfred Spraul <manfred@colorfullife.com>\00", section ".modinfo", align 1, !dbg !8105
@__UNIQUE_ID_description353 = internal constant [64 x i8] c"forcedeth.description=Reverse Engineered nForce ethernet driver\00", section ".modinfo", align 1, !dbg !8110
@__UNIQUE_ID_file354 = internal constant [53 x i8] c"forcedeth.file=drivers/net/ethernet/nvidia/forcedeth\00", section ".modinfo", align 1, !dbg !8113
@__UNIQUE_ID_license355 = internal constant [22 x i8] c"forcedeth.license=GPL\00", section ".modinfo", align 1, !dbg !8118
@.str = private unnamed_addr constant [10 x i8] c"forcedeth\00", align 1
@pci_tbl = internal constant [41 x %struct.pci_device_id] [%struct.pci_device_id { i32 4318, i32 451, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 4318, i32 102, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 4318, i32 214, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 4318, i32 134, i32 -1, i32 -1, i32 0, i32 0, i64 23 }, %struct.pci_device_id { i32 4318, i32 140, i32 -1, i32 -1, i32 0, i32 0, i64 23 }, %struct.pci_device_id { i32 4318, i32 230, i32 -1, i32 -1, i32 0, i32 0, i64 23 }, %struct.pci_device_id { i32 4318, i32 223, i32 -1, i32 -1, i32 0, i32 0, i64 23 }, %struct.pci_device_id { i32 4318, i32 86, i32 -1, i32 -1, i32 0, i32 0, i64 524830 }, %struct.pci_device_id { i32 4318, i32 87, i32 -1, i32 -1, i32 0, i32 0, i64 524830 }, %struct.pci_device_id { i32 4318, i32 55, i32 -1, i32 -1, i32 0, i32 0, i64 524830 }, %struct.pci_device_id { i32 4318, i32 56, i32 -1, i32 -1, i32 0, i32 0, i64 524830 }, %struct.pci_device_id { i32 4318, i32 616, i32 -1, i32 -1, i32 0, i32 0, i64 8389386 }, %struct.pci_device_id { i32 4318, i32 617, i32 -1, i32 -1, i32 0, i32 0, i64 8389386 }, %struct.pci_device_id { i32 4318, i32 882, i32 -1, i32 -1, i32 0, i32 0, i64 17381374 }, %struct.pci_device_id { i32 4318, i32 883, i32 -1, i32 -1, i32 0, i32 0, i64 17381374 }, %struct.pci_device_id { i32 4318, i32 997, i32 -1, i32 -1, i32 0, i32 0, i64 16873290 }, %struct.pci_device_id { i32 4318, i32 998, i32 -1, i32 -1, i32 0, i32 0, i64 16873290 }, %struct.pci_device_id { i32 4318, i32 1006, i32 -1, i32 -1, i32 0, i32 0, i64 16873290 }, %struct.pci_device_id { i32 4318, i32 1007, i32 -1, i32 -1, i32 0, i32 0, i64 16873290 }, %struct.pci_device_id { i32 4318, i32 1104, i32 -1, i32 -1, i32 0, i32 0, i64 19494734 }, %struct.pci_device_id { i32 4318, i32 1105, i32 -1, i32 -1, i32 0, i32 0, i64 19494734 }, %struct.pci_device_id { i32 4318, i32 1106, i32 -1, i32 -1, i32 0, i32 0, i64 19494734 }, %struct.pci_device_id { i32 4318, i32 1107, i32 -1, i32 -1, i32 0, i32 0, i64 19494734 }, %struct.pci_device_id { i32 4318, i32 1356, i32 -1, i32 -1, i32 0, i32 0, i64 18970442 }, %struct.pci_device_id { i32 4318, i32 1357, i32 -1, i32 -1, i32 0, i32 0, i64 18970442 }, %struct.pci_device_id { i32 4318, i32 1358, i32 -1, i32 -1, i32 0, i32 0, i64 18970442 }, %struct.pci_device_id { i32 4318, i32 1359, i32 -1, i32 -1, i32 0, i32 0, i64 18970442 }, %struct.pci_device_id { i32 4318, i32 2012, i32 -1, i32 -1, i32 0, i32 0, i64 19003210 }, %struct.pci_device_id { i32 4318, i32 2013, i32 -1, i32 -1, i32 0, i32 0, i64 19003210 }, %struct.pci_device_id { i32 4318, i32 2014, i32 -1, i32 -1, i32 0, i32 0, i64 19003210 }, %struct.pci_device_id { i32 4318, i32 2015, i32 -1, i32 -1, i32 0, i32 0, i64 19003210 }, %struct.pci_device_id { i32 4318, i32 1888, i32 -1, i32 -1, i32 0, i32 0, i64 24837978 }, %struct.pci_device_id { i32 4318, i32 1889, i32 -1, i32 -1, i32 0, i32 0, i64 24837978 }, %struct.pci_device_id { i32 4318, i32 1890, i32 -1, i32 -1, i32 0, i32 0, i64 24837978 }, %struct.pci_device_id { i32 4318, i32 1891, i32 -1, i32 -1, i32 0, i32 0, i64 24837978 }, %struct.pci_device_id { i32 4318, i32 2736, i32 -1, i32 -1, i32 0, i32 0, i64 24960862 }, %struct.pci_device_id { i32 4318, i32 2737, i32 -1, i32 -1, i32 0, i32 0, i64 24960862 }, %struct.pci_device_id { i32 4318, i32 2738, i32 -1, i32 -1, i32 0, i32 0, i64 24960862 }, %struct.pci_device_id { i32 4318, i32 2739, i32 -1, i32 -1, i32 0, i32 0, i64 24960862 }, %struct.pci_device_id { i32 4318, i32 3453, i32 -1, i32 -1, i32 0, i32 0, i64 6610782 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !8168
@nv_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @nv_suspend, i32 (%struct.device*)* @nv_resume, i32 (%struct.device*)* @nv_suspend, i32 (%struct.device*)* @nv_resume, i32 (%struct.device*)* @nv_suspend, i32 (%struct.device*)* @nv_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !8224
@nv_probe.printed_version = internal global i32 0, align 4, !dbg !8171
@.str.1 = private unnamed_addr constant [69 x i8] c"\016forcedeth: Reverse Engineered nForce ethernet driver. Version %s.\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"0.64\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"\013forcedeth: np->txrx_stats, alloc memory error.\0A\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Couldn't find register window\0A\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"64-bit DMA failed, using 32-bit addressing\0A\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"64-bit DMA (consistent) failed, using 32-bit ring buffers\0A\00", align 1
@nv_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @nv_open, i32 (%struct.net_device*)* @nv_close, i32 (%struct.sk_buff*, %struct.net_device*)* @nv_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @nv_set_multicast, i32 (%struct.net_device*, i8*)* @nv_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* null, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @nv_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @nv_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* @nv_get_stats64, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* @nv_fix_features, i32 (%struct.net_device*, i64)* @nv_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !8189
@nv_netdev_ops_optimized = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @nv_open, i32 (%struct.net_device*)* @nv_close, i32 (%struct.sk_buff*, %struct.net_device*)* @nv_start_xmit_optimized, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @nv_set_multicast, i32 (%struct.net_device*, i8*)* @nv_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* null, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @nv_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @nv_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* @nv_get_stats64, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* @nv_fix_features, i32 (%struct.net_device*, i64)* @nv_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !8191
@ops = internal constant %struct.ethtool_ops { i32 0, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @nv_get_drvinfo, i32 (%struct.net_device*)* @nv_get_regs_len, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* @nv_get_regs, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @nv_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @nv_set_wol, i32 (%struct.net_device*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*)* @nv_nway_reset, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, void (%struct.net_device*, %struct.ethtool_ringparam*)* @nv_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* @nv_set_ringparam, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* @nv_get_pauseparam, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* @nv_set_pauseparam, void (%struct.net_device*, %struct.ethtool_test*, i64*)* @nv_self_test, void (%struct.net_device*, i32, i8*)* @nv_get_strings, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @nv_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @nv_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* @ethtool_op_get_ts_info, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @nv_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @nv_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !8193
@.str.7 = private unnamed_addr constant [78 x i8] c"Invalid MAC address detected: %pM - Please complain to your hardware vendor.\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"Using random MAC address: %pM\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.9 = private unnamed_addr constant [34 x i8] c"open: Could not find a valid PHY\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"unable to register netdev: %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"ifname %s, PHY OUI 0x%x @ %d, addr %pM\0A\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"%s%s%s%s%s%s%s%s%s%s%sdesc-v%u\0A\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"highdma \00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"csum \00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"vlan \00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"loopback \00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"pwrctl \00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"mgmt \00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"timirq \00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"gbit \00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"lnktim \00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"msi \00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"msi-x \00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"MAC in recoverable error state\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.26 = private unnamed_addr constant [34 x i8] c"%s: ReceiverStatus remained busy\0A\00", align 1
@__func__.nv_stop_rx = private unnamed_addr constant [11 x i8] c"nv_stop_rx\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !8174
@.str.28 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@main_seedset = internal constant [8 x [15 x i32]] [[15 x i32] [i32 145, i32 155, i32 165, i32 175, i32 185, i32 196, i32 235, i32 245, i32 255, i32 265, i32 275, i32 285, i32 660, i32 690, i32 874], [15 x i32] [i32 245, i32 255, i32 265, i32 575, i32 385, i32 298, i32 335, i32 345, i32 355, i32 366, i32 375, i32 385, i32 761, i32 790, i32 974], [15 x i32] [i32 145, i32 155, i32 165, i32 175, i32 185, i32 196, i32 235, i32 245, i32 255, i32 265, i32 275, i32 285, i32 660, i32 690, i32 874], [15 x i32] [i32 245, i32 255, i32 265, i32 575, i32 385, i32 298, i32 335, i32 345, i32 355, i32 366, i32 375, i32 386, i32 761, i32 790, i32 974], [15 x i32] [i32 266, i32 265, i32 276, i32 585, i32 397, i32 208, i32 345, i32 355, i32 365, i32 376, i32 385, i32 396, i32 771, i32 700, i32 984], [15 x i32] [i32 266, i32 265, i32 276, i32 586, i32 397, i32 208, i32 346, i32 355, i32 365, i32 376, i32 285, i32 396, i32 771, i32 700, i32 984], [15 x i32] [i32 366, i32 365, i32 376, i32 686, i32 497, i32 308, i32 447, i32 455, i32 466, i32 476, i32 485, i32 496, i32 871, i32 800, i32 84], [15 x i32] [i32 466, i32 465, i32 476, i32 786, i32 597, i32 408, i32 547, i32 555, i32 566, i32 576, i32 585, i32 597, i32 971, i32 900, i32 184]], align 16, !dbg !8180
@gear_seedset = internal constant [8 x [15 x i32]] [[15 x i32] [i32 251, i32 262, i32 273, i32 324, i32 319, i32 508, i32 375, i32 364, i32 341, i32 371, i32 398, i32 193, i32 375, i32 30, i32 295], [15 x i32] [i32 351, i32 375, i32 373, i32 469, i32 551, i32 639, i32 477, i32 464, i32 441, i32 472, i32 498, i32 293, i32 476, i32 130, i32 395], [15 x i32] [i32 351, i32 375, i32 373, i32 469, i32 551, i32 639, i32 477, i32 464, i32 441, i32 472, i32 498, i32 293, i32 476, i32 130, i32 397], [15 x i32] [i32 251, i32 262, i32 273, i32 324, i32 319, i32 508, i32 375, i32 364, i32 341, i32 371, i32 398, i32 193, i32 375, i32 30, i32 295], [15 x i32] [i32 251, i32 262, i32 273, i32 324, i32 319, i32 508, i32 375, i32 364, i32 341, i32 371, i32 398, i32 193, i32 375, i32 30, i32 295], [15 x i32] [i32 351, i32 375, i32 373, i32 469, i32 551, i32 639, i32 477, i32 464, i32 441, i32 472, i32 498, i32 293, i32 476, i32 130, i32 395], [15 x i32] [i32 351, i32 375, i32 373, i32 469, i32 551, i32 639, i32 477, i32 464, i32 441, i32 472, i32 498, i32 293, i32 476, i32 130, i32 395], [15 x i32] [i32 351, i32 375, i32 373, i32 469, i32 551, i32 639, i32 477, i32 464, i32 441, i32 472, i32 498, i32 293, i32 476, i32 130, i32 395]], align 16, !dbg !8184
@.str.30 = private unnamed_addr constant [9 x i8] c"link up\0A\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"link down\0A\00", align 1
@nv_update_stats.__warned = internal global i8 0, section ".data.once", align 1, !dbg !8186
@.str.32 = private unnamed_addr constant [47 x i8] c"forcedeth: estats spin_lock(_bh) from top-half\00", align 1
@.str.33 = private unnamed_addr constant [40 x i8] c"drivers/net/ethernet/nvidia/forcedeth.c\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.34 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"%s: SetupReg5, Bit 31 remained off\0A\00", align 1
@__func__.nv_open = private unnamed_addr constant [8 x i8] c"nv_open\00", align 1
@.str.36 = private unnamed_addr constant [31 x i8] c"no link during initialization\0A\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"%s-rx\00", align 1
@.str.38 = private unnamed_addr constant [30 x i8] c"request_irq failed for rx %d\0A\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"%s-tx\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"request_irq failed for tx %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"%s-other\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"request_irq failed for link %d\0A\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"request_irq failed %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"MSI-X enabled\0A\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"MSI enabled\0A\00", align 1
@.str.46 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.47 = private unnamed_addr constant [26 x i8] c"Loopback already enabled\0A\00", align 1
@.str.48 = private unnamed_addr constant [37 x i8] c"Internal PHY loopback mode enabled.\0A\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"Loopback already disabled\0A\00", align 1
@.str.50 = private unnamed_addr constant [38 x i8] c"Internal PHY loopback mode disabled.\0A\00", align 1
@.str.51 = private unnamed_addr constant [37 x i8] c"include/linux/dynamic_queue_limits.h\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@softnet_data = external dso_local global %struct.softnet_data, section ".data..shared_aligned", align 64
@.str.53 = private unnamed_addr constant [34 x i8] c"Got tx_timeout. irq status: %08x\0A\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"Ring at %lx\0A\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"Dumping tx registers\0A\00", align 1
@.str.56 = private unnamed_addr constant [46 x i8] c"%3x: %08x %08x %08x %08x %08x %08x %08x %08x\0A\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"Dumping tx ring\0A\00", align 1
@.str.58 = private unnamed_addr constant [56 x i8] c"%03x: %08x %08x // %08x %08x // %08x %08x // %08x %08x\0A\00", align 1
@.str.59 = private unnamed_addr constant [76 x i8] c"%03x: %08x %08x %08x // %08x %08x %08x // %08x %08x %08x // %08x %08x %08x\0A\00", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 8
@.str.60 = private unnamed_addr constant [18 x i8] c"phy reset failed\0A\00", align 1
@.str.61 = private unnamed_addr constant [63 x i8] c"can not set pause settings when forced link is in half duplex\0A\00", align 1
@.str.62 = private unnamed_addr constant [43 x i8] c"hardware does not support tx pause frames\0A\00", align 1
@nv_registers_test = internal constant [7 x %struct.register_test] [%struct.register_test { i32 8, i32 1 }, %struct.register_test { i32 128, i32 60 }, %struct.register_test { i32 144, i32 1023 }, %struct.register_test { i32 176, i32 -1 }, %struct.register_test { i32 316, i32 255 }, %struct.register_test { i32 512, i32 30583 }, %struct.register_test zeroinitializer], align 16, !dbg !8195
@nv_estats_str = internal constant [33 x %struct.nv_ethtool_str] [%struct.nv_ethtool_str { [32 x i8] c"tx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_zero_rexmt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_one_rexmt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_many_rexmt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_late_collision\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_fifo_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_carrier_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_excess_deferral\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_retry_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_frame_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_extra_byte\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_late_collision\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_runt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_frame_too_long\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_over_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_crc_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_frame_align_error\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_length_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_errors_total\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_errors_total\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_deferral\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"rx_drop_frame\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"tx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }], align 16, !dbg !8203
@nv_etests_str = internal constant [4 x %struct.nv_ethtool_str] [%struct.nv_ethtool_str { [32 x i8] c"link      (online/offline)\00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"register  (offline)       \00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"interrupt (offline)       \00\00\00\00\00\00" }, %struct.nv_ethtool_str { [32 x i8] c"loopback  (offline)       \00\00\00\00\00\00" }], align 16, !dbg !8210
@.str.63 = private unnamed_addr constant [36 x i8] c"%s: phy write to errata reg failed\0A\00", align 1
@.str.64 = private unnamed_addr constant [21 x i8] c"%s: phy init failed\0A\00", align 1
@.str.65 = private unnamed_addr constant [35 x i8] c"%s: phy write to advertise failed\0A\00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"%s: phy reset failed\0A\00", align 1
@init_realtek_8211b.ri = internal constant [7 x %struct.anon.131] [%struct.anon.131 { i32 31, i32 0 }, %struct.anon.131 { i32 25, i32 36352 }, %struct.anon.131 { i32 31, i32 1 }, %struct.anon.131 { i32 19, i32 44311 }, %struct.anon.131 { i32 20, i32 64340 }, %struct.anon.131 { i32 24, i32 62919 }, %struct.anon.131 { i32 31, i32 0 }], align 16, !dbg !8213
@.str.67 = private unnamed_addr constant [37 x i8] c"%s: TransmitterStatus remained busy\0A\00", align 1
@__func__.nv_stop_tx = private unnamed_addr constant [11 x i8] c"nv_stop_tx\00", align 1
@system_state = external dso_local global i32, align 4
@llvm.used = appending global [34 x i8*] [i8* bitcast (%struct.kernel_param* @__param_max_interrupt_work to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_max_interrupt_worktype333, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__UNIQUE_ID_max_interrupt_work334, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_optimization_mode to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_optimization_modetype335, i32 0, i32 0), i8* getelementptr inbounds ([254 x i8], [254 x i8]* @__UNIQUE_ID_optimization_mode336, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_poll_interval to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_poll_intervaltype337, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @__UNIQUE_ID_poll_interval338, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_msi to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_msitype339, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__UNIQUE_ID_msi340, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_msix to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_msixtype341, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__UNIQUE_ID_msix342, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_dma_64bit to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_dma_64bittype343, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__UNIQUE_ID_dma_64bit344, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_phy_cross to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_phy_crosstype345, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @__UNIQUE_ID_phy_cross346, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_phy_power_down to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_phy_power_downtype347, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__UNIQUE_ID_phy_power_down348, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_debug_tx_timeout to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_debug_tx_timeouttype349, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__UNIQUE_ID_debug_tx_timeout350, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_forcedeth_pci_driver_init351 to i8*), i8* bitcast (void ()* @forcedeth_pci_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_forcedeth_pci_driver_exit to i8*), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_author352, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_description353, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__UNIQUE_ID_file354, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_license355, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @forcedeth_pci_driver_init() #0 section ".init.text" !dbg !8235 {
entry:
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @forcedeth_pci_driver, %struct.module* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #13, !dbg !8238
  ret i32 %call, !dbg !8238
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @forcedeth_pci_driver_exit() #0 section ".exit.text" !dbg !8239 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @forcedeth_pci_driver) #13, !dbg !8240
  ret void, !dbg !8240
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_probe(%struct.pci_dev* %pci_dev, %struct.pci_device_id* %id) #2 !dbg !8173 {
entry:
  %lock.addr.i713 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i713, metadata !8241, metadata !DIExpression()), !dbg !8246
  %lock.addr.i711 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i711, metadata !8251, metadata !DIExpression()), !dbg !8253
  %lock.addr.i709 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i709, metadata !8241, metadata !DIExpression()), !dbg !8255
  %lock.addr.i707 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i707, metadata !8251, metadata !DIExpression()), !dbg !8257
  %lock.addr.i705 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i705, metadata !8259, metadata !DIExpression()), !dbg !8264
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !8267
  %retval = alloca i32, align 4
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %addr = alloca i64, align 8
  %base = alloca i8*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %powerstate = alloca i32, align 4
  %txreg = alloca i32, align 4
  %phystate_orig = alloca i32, align 4
  %phystate = alloca i32, align 4
  %phyinitialized = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral13 = alloca %struct.spinlock, align 1
  %id1 = alloca i32, align 4
  %id2 = alloca i32, align 4
  %phyaddr = alloca i32, align 4
  %mii_status = alloca i32, align 4
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !8272, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !8274, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !8276, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.declare(metadata i8** %base, metadata !8280, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8282, metadata !DIExpression()), !dbg !8283
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8284, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.declare(metadata i32* %powerstate, metadata !8286, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.declare(metadata i32* %txreg, metadata !8288, metadata !DIExpression()), !dbg !8289
  call void @llvm.dbg.declare(metadata i32* %phystate_orig, metadata !8290, metadata !DIExpression()), !dbg !8291
  store i32 0, i32* %phystate_orig, align 4, !dbg !8291
  call void @llvm.dbg.declare(metadata i32* %phystate, metadata !8292, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.declare(metadata i32* %phyinitialized, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 0, i32* %phyinitialized, align 4, !dbg !8295
  %0 = load i32, i32* @nv_probe.printed_version, align 4, !dbg !8296
  %inc = add i32 %0, 1, !dbg !8296
  store i32 %inc, i32* @nv_probe.printed_version, align 4, !dbg !8296
  %tobool = icmp ne i32 %0, 0, !dbg !8296
  br i1 %tobool, label %if.end, label %if.then, !dbg !8298

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14, !dbg !8299
  br label %if.end, !dbg !8299

if.end:                                           ; preds = %if.then, %entry
  %call1 = call %struct.net_device* @alloc_etherdev_mqs(i32 2792, i32 1, i32 1) #13, !dbg !8300
  store %struct.net_device* %call1, %struct.net_device** %dev, align 8, !dbg !8301
  store i32 -12, i32* %err, align 4, !dbg !8302
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8303
  %tobool2 = icmp ne %struct.net_device* %1, null, !dbg !8303
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8305

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !8306

if.end4:                                          ; preds = %if.end
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8307
  %call5 = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !8308
  %3 = bitcast i8* %call5 to %struct.fe_priv*, !dbg !8308
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !8309
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8310
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8311
  %dev6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 1, !dbg !8312
  store %struct.net_device* %4, %struct.net_device** %dev6, align 8, !dbg !8313
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8314
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8315
  %pci_dev7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 20, !dbg !8316
  store %struct.pci_dev* %6, %struct.pci_dev** %pci_dev7, align 8, !dbg !8317
  br label %do.body, !dbg !8318

do.body:                                          ; preds = %if.end4
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8319
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 0, !dbg !8319
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8320
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8321
  %rlock.i = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !8321
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8319
  %lock9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 0, !dbg !8319
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8319
  %rlock = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !8319
  %13 = bitcast %struct.spinlock* %lock9 to i8*, !dbg !8319
  %14 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 1 %14, i64 0, i1 false), !dbg !8319
  br label %do.end, !dbg !8319

do.end:                                           ; preds = %do.body
  br label %do.body10, !dbg !8322

do.body10:                                        ; preds = %do.end
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8323
  %hwstats_lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 3, !dbg !8323
  store %struct.spinlock* %hwstats_lock, %struct.spinlock** %lock.addr.i705, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i705, align 8, !dbg !8324
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8325
  %rlock.i706 = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !8325
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8323
  %hwstats_lock12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 3, !dbg !8323
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral13, i32 0, i32 0, !dbg !8323
  %rlock14 = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !8323
  %20 = bitcast %struct.spinlock* %hwstats_lock12 to i8*, !dbg !8323
  %21 = bitcast %struct.spinlock* %.compoundliteral13 to i8*, !dbg !8323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 1 %21, i64 0, i1 false), !dbg !8323
  br label %do.end15, !dbg !8323

do.end15:                                         ; preds = %do.body10
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8326
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !8326
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8326
  %dev17 = getelementptr inbounds %struct.net_device, %struct.net_device* %23, i32 0, i32 106, !dbg !8326
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev17, i32 0, i32 1, !dbg !8326
  store %struct.device* %dev16, %struct.device** %parent, align 8, !dbg !8326
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8327
  %swstats_rx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 49, !dbg !8328
  call void @u64_stats_init(%struct.u64_stats_sync* %swstats_rx_syncp) #13, !dbg !8329
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8330
  %swstats_tx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 68, !dbg !8331
  call void @u64_stats_init(%struct.u64_stats_sync* %swstats_tx_syncp) #13, !dbg !8332
  %call18 = call i8* @__alloc_percpu(i64 56, i64 8) #13, !dbg !8333
  %26 = bitcast i8* %call18 to %struct.nv_txrx_stats*, !dbg !8333
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8334
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 50, !dbg !8335
  store %struct.nv_txrx_stats* %26, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !8336
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8337
  %txrx_stats19 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 50, !dbg !8339
  %29 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats19, align 8, !dbg !8339
  %tobool20 = icmp ne %struct.nv_txrx_stats* %29, null, !dbg !8337
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !8340

if.then21:                                        ; preds = %do.end15
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0)) #14, !dbg !8341
  store i32 -12, i32* %err, align 4, !dbg !8343
  br label %out_alloc_percpu, !dbg !8344

if.end23:                                         ; preds = %do.end15
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8345
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 44, !dbg !8345
  call void @init_timer_key(%struct.timer_list* %oom_kick, void (%struct.timer_list*)* @nv_do_rx_refill, i32 0, i8* null, %struct.lock_class_key* null) #13, !dbg !8345
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8346
  %nic_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 45, !dbg !8346
  call void @init_timer_key(%struct.timer_list* %nic_poll, void (%struct.timer_list*)* @nv_do_nic_poll, i32 0, i8* null, %struct.lock_class_key* null) #13, !dbg !8346
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8347
  %stats_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 46, !dbg !8347
  call void @init_timer_key(%struct.timer_list* %stats_poll, void (%struct.timer_list*)* @nv_do_stats_poll, i32 524288, i8* null, %struct.lock_class_key* null) #13, !dbg !8347
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8348
  %call24 = call i32 @pci_enable_device(%struct.pci_dev* %33) #13, !dbg !8349
  store i32 %call24, i32* %err, align 4, !dbg !8350
  %34 = load i32, i32* %err, align 4, !dbg !8351
  %tobool25 = icmp ne i32 %34, 0, !dbg !8351
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !8353

if.then26:                                        ; preds = %if.end23
  br label %out_free, !dbg !8354

if.end27:                                         ; preds = %if.end23
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8355
  call void @pci_set_master(%struct.pci_dev* %35) #13, !dbg !8356
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8357
  %call28 = call i32 @pci_request_regions(%struct.pci_dev* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #13, !dbg !8358
  store i32 %call28, i32* %err, align 4, !dbg !8359
  %37 = load i32, i32* %err, align 4, !dbg !8360
  %cmp = icmp slt i32 %37, 0, !dbg !8362
  br i1 %cmp, label %if.then29, label %if.end30, !dbg !8363

if.then29:                                        ; preds = %if.end27
  br label %out_disable, !dbg !8364

if.end30:                                         ; preds = %if.end27
  %38 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8365
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %38, i32 0, i32 6, !dbg !8367
  %39 = load i64, i64* %driver_data, align 8, !dbg !8367
  %and = and i64 %39, 3488, !dbg !8368
  %tobool31 = icmp ne i64 %and, 0, !dbg !8368
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !8369

if.then32:                                        ; preds = %if.end30
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8370
  %register_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 29, !dbg !8371
  store i32 1540, i32* %register_size, align 4, !dbg !8372
  br label %if.end41, !dbg !8370

if.else:                                          ; preds = %if.end30
  %41 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8373
  %driver_data33 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %41, i32 0, i32 6, !dbg !8375
  %42 = load i64, i64* %driver_data33, align 8, !dbg !8375
  %and34 = and i64 %42, 512, !dbg !8376
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8376
  br i1 %tobool35, label %if.then36, label %if.else38, !dbg !8377

if.then36:                                        ; preds = %if.else
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8378
  %register_size37 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 29, !dbg !8379
  store i32 724, i32* %register_size37, align 4, !dbg !8380
  br label %if.end40, !dbg !8378

if.else38:                                        ; preds = %if.else
  %44 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8381
  %register_size39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %44, i32 0, i32 29, !dbg !8382
  store i32 624, i32* %register_size39, align 4, !dbg !8383
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then36
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then32
  store i32 -22, i32* %err, align 4, !dbg !8384
  store i64 0, i64* %addr, align 8, !dbg !8385
  store i32 0, i32* %i, align 4, !dbg !8386
  br label %for.cond, !dbg !8388

for.cond:                                         ; preds = %for.inc, %if.end41
  %45 = load i32, i32* %i, align 4, !dbg !8389
  %cmp42 = icmp slt i32 %45, 17, !dbg !8391
  br i1 %cmp42, label %for.body, label %for.end, !dbg !8392

for.body:                                         ; preds = %for.cond
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8393
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 44, !dbg !8393
  %47 = load i32, i32* %i, align 4, !dbg !8393
  %idxprom = sext i32 %47 to i64, !dbg !8393
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !8393
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !8393
  %48 = load i64, i64* %flags, align 8, !dbg !8393
  %and43 = and i64 %48, 512, !dbg !8396
  %tobool44 = icmp ne i64 %and43, 0, !dbg !8396
  br i1 %tobool44, label %land.lhs.true, label %if.end74, !dbg !8397

land.lhs.true:                                    ; preds = %for.body
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8398
  %resource45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 44, !dbg !8398
  %50 = load i32, i32* %i, align 4, !dbg !8398
  %idxprom46 = sext i32 %50 to i64, !dbg !8398
  %arrayidx47 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource45, i64 0, i64 %idxprom46, !dbg !8398
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx47, i32 0, i32 0, !dbg !8398
  %51 = load i64, i64* %start, align 8, !dbg !8398
  %cmp48 = icmp eq i64 %51, 0, !dbg !8398
  br i1 %cmp48, label %land.lhs.true49, label %cond.false, !dbg !8398

land.lhs.true49:                                  ; preds = %land.lhs.true
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8398
  %resource50 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 44, !dbg !8398
  %53 = load i32, i32* %i, align 4, !dbg !8398
  %idxprom51 = sext i32 %53 to i64, !dbg !8398
  %arrayidx52 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource50, i64 0, i64 %idxprom51, !dbg !8398
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx52, i32 0, i32 1, !dbg !8398
  %54 = load i64, i64* %end, align 8, !dbg !8398
  %55 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8398
  %resource53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %55, i32 0, i32 44, !dbg !8398
  %56 = load i32, i32* %i, align 4, !dbg !8398
  %idxprom54 = sext i32 %56 to i64, !dbg !8398
  %arrayidx55 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource53, i64 0, i64 %idxprom54, !dbg !8398
  %start56 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx55, i32 0, i32 0, !dbg !8398
  %57 = load i64, i64* %start56, align 8, !dbg !8398
  %cmp57 = icmp eq i64 %54, %57, !dbg !8398
  br i1 %cmp57, label %cond.true, label %cond.false, !dbg !8398

cond.true:                                        ; preds = %land.lhs.true49
  br label %cond.end, !dbg !8398

cond.false:                                       ; preds = %land.lhs.true49, %land.lhs.true
  %58 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8398
  %resource58 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 44, !dbg !8398
  %59 = load i32, i32* %i, align 4, !dbg !8398
  %idxprom59 = sext i32 %59 to i64, !dbg !8398
  %arrayidx60 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource58, i64 0, i64 %idxprom59, !dbg !8398
  %end61 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx60, i32 0, i32 1, !dbg !8398
  %60 = load i64, i64* %end61, align 8, !dbg !8398
  %61 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8398
  %resource62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %61, i32 0, i32 44, !dbg !8398
  %62 = load i32, i32* %i, align 4, !dbg !8398
  %idxprom63 = sext i32 %62 to i64, !dbg !8398
  %arrayidx64 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource62, i64 0, i64 %idxprom63, !dbg !8398
  %start65 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx64, i32 0, i32 0, !dbg !8398
  %63 = load i64, i64* %start65, align 8, !dbg !8398
  %sub = sub i64 %60, %63, !dbg !8398
  %add = add i64 %sub, 1, !dbg !8398
  br label %cond.end, !dbg !8398

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !8398
  %64 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8399
  %register_size66 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %64, i32 0, i32 29, !dbg !8400
  %65 = load i32, i32* %register_size66, align 4, !dbg !8400
  %conv = zext i32 %65 to i64, !dbg !8399
  %cmp67 = icmp uge i64 %cond, %conv, !dbg !8401
  br i1 %cmp67, label %if.then69, label %if.end74, !dbg !8402

if.then69:                                        ; preds = %cond.end
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8403
  %resource70 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 44, !dbg !8403
  %67 = load i32, i32* %i, align 4, !dbg !8403
  %idxprom71 = sext i32 %67 to i64, !dbg !8403
  %arrayidx72 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource70, i64 0, i64 %idxprom71, !dbg !8403
  %start73 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx72, i32 0, i32 0, !dbg !8403
  %68 = load i64, i64* %start73, align 8, !dbg !8403
  store i64 %68, i64* %addr, align 8, !dbg !8405
  br label %for.end, !dbg !8406

if.end74:                                         ; preds = %cond.end, %for.body
  br label %for.inc, !dbg !8407

for.inc:                                          ; preds = %if.end74
  %69 = load i32, i32* %i, align 4, !dbg !8408
  %inc75 = add i32 %69, 1, !dbg !8408
  store i32 %inc75, i32* %i, align 4, !dbg !8408
  br label %for.cond, !dbg !8409, !llvm.loop !8410

for.end:                                          ; preds = %if.then69, %for.cond
  %70 = load i32, i32* %i, align 4, !dbg !8412
  %cmp76 = icmp eq i32 %70, 17, !dbg !8414
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !8415

if.then78:                                        ; preds = %for.end
  %71 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8416
  %dev79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 41, !dbg !8416
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev79, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0)) #14, !dbg !8416
  br label %out_relreg, !dbg !8418

if.end80:                                         ; preds = %for.end
  %72 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8419
  %driver_data81 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %72, i32 0, i32 6, !dbg !8420
  %73 = load i64, i64* %driver_data81, align 8, !dbg !8420
  %conv82 = trunc i64 %73 to i32, !dbg !8419
  %74 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8421
  %driver_data83 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %74, i32 0, i32 27, !dbg !8422
  store i32 %conv82, i32* %driver_data83, align 4, !dbg !8423
  %75 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8424
  %device = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %75, i32 0, i32 1, !dbg !8425
  %76 = load i32, i32* %device, align 4, !dbg !8425
  %77 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8426
  %device_id = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %77, i32 0, i32 28, !dbg !8427
  store i32 %76, i32* %device_id, align 8, !dbg !8428
  %78 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8429
  %driver_data84 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %78, i32 0, i32 6, !dbg !8431
  %79 = load i64, i64* %driver_data84, align 8, !dbg !8431
  %and85 = and i64 %79, 8, !dbg !8432
  %tobool86 = icmp ne i64 %and85, 0, !dbg !8432
  br i1 %tobool86, label %if.then87, label %if.else102, !dbg !8433

if.then87:                                        ; preds = %if.end80
  %80 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8434
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %80, i32 0, i32 24, !dbg !8436
  store i32 3, i32* %desc_ver, align 8, !dbg !8437
  %81 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8438
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %81, i32 0, i32 25, !dbg !8439
  store i32 12591616, i32* %txrxctl_bits, align 4, !dbg !8440
  %82 = load i32, i32* @dma_64bit, align 4, !dbg !8441
  %tobool88 = icmp ne i32 %82, 0, !dbg !8441
  br i1 %tobool88, label %if.then89, label %if.end101, !dbg !8443

if.then89:                                        ; preds = %if.then87
  %83 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8444
  %call90 = call i32 @pci_set_dma_mask(%struct.pci_dev* %83, i64 549755813887) #13, !dbg !8447
  %tobool91 = icmp ne i32 %call90, 0, !dbg !8447
  br i1 %tobool91, label %if.then92, label %if.else94, !dbg !8448

if.then92:                                        ; preds = %if.then89
  %84 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8449
  %dev93 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %84, i32 0, i32 41, !dbg !8449
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev93, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0)) #14, !dbg !8449
  br label %if.end95, !dbg !8449

if.else94:                                        ; preds = %if.then89
  %85 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8450
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %85, i32 0, i32 15, !dbg !8451
  %86 = load i64, i64* %features, align 8, !dbg !8452
  %or = or i64 %86, 32, !dbg !8452
  store i64 %or, i64* %features, align 8, !dbg !8452
  br label %if.end95

if.end95:                                         ; preds = %if.else94, %if.then92
  %87 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8453
  %call96 = call i32 @pci_set_consistent_dma_mask(%struct.pci_dev* %87, i64 549755813887) #13, !dbg !8455
  %tobool97 = icmp ne i32 %call96, 0, !dbg !8455
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !8456

if.then98:                                        ; preds = %if.end95
  %88 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8457
  %dev99 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %88, i32 0, i32 41, !dbg !8457
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev99, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0)) #14, !dbg !8457
  br label %if.end100, !dbg !8459

if.end100:                                        ; preds = %if.then98, %if.end95
  br label %if.end101, !dbg !8460

if.end101:                                        ; preds = %if.end100, %if.then87
  br label %if.end113, !dbg !8461

if.else102:                                       ; preds = %if.end80
  %89 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8462
  %driver_data103 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %89, i32 0, i32 6, !dbg !8464
  %90 = load i64, i64* %driver_data103, align 8, !dbg !8464
  %and104 = and i64 %90, 4, !dbg !8465
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8465
  br i1 %tobool105, label %if.then106, label %if.else109, !dbg !8466

if.then106:                                       ; preds = %if.else102
  %91 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8467
  %desc_ver107 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %91, i32 0, i32 24, !dbg !8469
  store i32 2, i32* %desc_ver107, align 8, !dbg !8470
  %92 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8471
  %txrxctl_bits108 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %92, i32 0, i32 25, !dbg !8472
  store i32 8448, i32* %txrxctl_bits108, align 4, !dbg !8473
  br label %if.end112, !dbg !8474

if.else109:                                       ; preds = %if.else102
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8475
  %desc_ver110 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 24, !dbg !8477
  store i32 1, i32* %desc_ver110, align 8, !dbg !8478
  %94 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8479
  %txrxctl_bits111 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %94, i32 0, i32 25, !dbg !8480
  store i32 0, i32* %txrxctl_bits111, align 4, !dbg !8481
  br label %if.end112

if.end112:                                        ; preds = %if.else109, %if.then106
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end101
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8482
  %pkt_limit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 43, !dbg !8483
  store i32 1500, i32* %pkt_limit, align 4, !dbg !8484
  %96 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8485
  %driver_data114 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %96, i32 0, i32 6, !dbg !8487
  %97 = load i64, i64* %driver_data114, align 8, !dbg !8487
  %and115 = and i64 %97, 4, !dbg !8488
  %tobool116 = icmp ne i64 %and115, 0, !dbg !8488
  br i1 %tobool116, label %if.then117, label %if.end119, !dbg !8489

if.then117:                                       ; preds = %if.end113
  %98 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8490
  %pkt_limit118 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %98, i32 0, i32 43, !dbg !8491
  store i32 9100, i32* %pkt_limit118, align 4, !dbg !8492
  br label %if.end119, !dbg !8490

if.end119:                                        ; preds = %if.then117, %if.end113
  %99 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8493
  %driver_data120 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %99, i32 0, i32 6, !dbg !8495
  %100 = load i64, i64* %driver_data120, align 8, !dbg !8495
  %and121 = and i64 %100, 16, !dbg !8496
  %tobool122 = icmp ne i64 %and121, 0, !dbg !8496
  br i1 %tobool122, label %if.then123, label %if.end127, !dbg !8497

if.then123:                                       ; preds = %if.end119
  %101 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8498
  %txrxctl_bits124 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %101, i32 0, i32 25, !dbg !8500
  %102 = load i32, i32* %txrxctl_bits124, align 4, !dbg !8501
  %or125 = or i32 %102, 1024, !dbg !8501
  store i32 %or125, i32* %txrxctl_bits124, align 4, !dbg !8501
  %103 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8502
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %103, i32 0, i32 16, !dbg !8503
  %104 = load i64, i64* %hw_features, align 8, !dbg !8504
  %or126 = or i64 %104, 1099511693315, !dbg !8504
  store i64 %or126, i64* %hw_features, align 8, !dbg !8504
  br label %if.end127, !dbg !8505

if.end127:                                        ; preds = %if.then123, %if.end119
  %105 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8506
  %vlanctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %105, i32 0, i32 26, !dbg !8507
  store i32 0, i32* %vlanctl_bits, align 8, !dbg !8508
  %106 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8509
  %driver_data128 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %106, i32 0, i32 6, !dbg !8511
  %107 = load i64, i64* %driver_data128, align 8, !dbg !8511
  %and129 = and i64 %107, 32, !dbg !8512
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8512
  br i1 %tobool130, label %if.then131, label %if.end135, !dbg !8513

if.then131:                                       ; preds = %if.end127
  %108 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8514
  %vlanctl_bits132 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %108, i32 0, i32 26, !dbg !8516
  store i32 8192, i32* %vlanctl_bits132, align 8, !dbg !8517
  %109 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8518
  %hw_features133 = getelementptr inbounds %struct.net_device, %struct.net_device* %109, i32 0, i32 16, !dbg !8519
  %110 = load i64, i64* %hw_features133, align 8, !dbg !8520
  %or134 = or i64 %110, 384, !dbg !8520
  store i64 %or134, i64* %hw_features133, align 8, !dbg !8520
  br label %if.end135, !dbg !8521

if.end135:                                        ; preds = %if.then131, %if.end127
  %111 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8522
  %hw_features136 = getelementptr inbounds %struct.net_device, %struct.net_device* %111, i32 0, i32 16, !dbg !8523
  %112 = load i64, i64* %hw_features136, align 8, !dbg !8523
  %113 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8524
  %features137 = getelementptr inbounds %struct.net_device, %struct.net_device* %113, i32 0, i32 15, !dbg !8525
  %114 = load i64, i64* %features137, align 8, !dbg !8526
  %or138 = or i64 %114, %112, !dbg !8526
  store i64 %or138, i64* %features137, align 8, !dbg !8526
  %115 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8527
  %hw_features139 = getelementptr inbounds %struct.net_device, %struct.net_device* %115, i32 0, i32 16, !dbg !8528
  %116 = load i64, i64* %hw_features139, align 8, !dbg !8529
  %or140 = or i64 %116, 4398046511104, !dbg !8529
  store i64 %or140, i64* %hw_features139, align 8, !dbg !8529
  %117 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8530
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %117, i32 0, i32 45, !dbg !8531
  store i32 64, i32* %min_mtu, align 4, !dbg !8532
  %118 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8533
  %pkt_limit141 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %118, i32 0, i32 43, !dbg !8534
  %119 = load i32, i32* %pkt_limit141, align 4, !dbg !8534
  %120 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8535
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %120, i32 0, i32 46, !dbg !8536
  store i32 %119, i32* %max_mtu, align 8, !dbg !8537
  %121 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8538
  %pause_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %121, i32 0, i32 71, !dbg !8539
  store i32 81, i32* %pause_flags, align 8, !dbg !8540
  %122 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8541
  %driver_data142 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %122, i32 0, i32 6, !dbg !8543
  %123 = load i64, i64* %driver_data142, align 8, !dbg !8543
  %and143 = and i64 %123, 65536, !dbg !8544
  %tobool144 = icmp ne i64 %and143, 0, !dbg !8544
  br i1 %tobool144, label %if.then152, label %lor.lhs.false, !dbg !8545

lor.lhs.false:                                    ; preds = %if.end135
  %124 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8546
  %driver_data145 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %124, i32 0, i32 6, !dbg !8547
  %125 = load i64, i64* %driver_data145, align 8, !dbg !8547
  %and146 = and i64 %125, 131072, !dbg !8548
  %tobool147 = icmp ne i64 %and146, 0, !dbg !8548
  br i1 %tobool147, label %if.then152, label %lor.lhs.false148, !dbg !8549

lor.lhs.false148:                                 ; preds = %lor.lhs.false
  %126 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8550
  %driver_data149 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %126, i32 0, i32 6, !dbg !8551
  %127 = load i64, i64* %driver_data149, align 8, !dbg !8551
  %and150 = and i64 %127, 262144, !dbg !8552
  %tobool151 = icmp ne i64 %and150, 0, !dbg !8552
  br i1 %tobool151, label %if.then152, label %if.end155, !dbg !8553

if.then152:                                       ; preds = %lor.lhs.false148, %lor.lhs.false, %if.end135
  %128 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8554
  %pause_flags153 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %128, i32 0, i32 71, !dbg !8556
  %129 = load i32, i32* %pause_flags153, align 8, !dbg !8557
  %or154 = or i32 %129, 34, !dbg !8557
  store i32 %or154, i32* %pause_flags153, align 8, !dbg !8557
  br label %if.end155, !dbg !8558

if.end155:                                        ; preds = %if.then152, %lor.lhs.false148
  store i32 -12, i32* %err, align 4, !dbg !8559
  %130 = load i64, i64* %addr, align 8, !dbg !8560
  %131 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8561
  %register_size156 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %131, i32 0, i32 29, !dbg !8562
  %132 = load i32, i32* %register_size156, align 4, !dbg !8562
  %conv157 = zext i32 %132 to i64, !dbg !8561
  %call158 = call i8* @ioremap(i64 %130, i64 %conv157) #13, !dbg !8563
  %133 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8564
  %base159 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %133, i32 0, i32 33, !dbg !8565
  store i8* %call158, i8** %base159, align 8, !dbg !8566
  %134 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8567
  %base160 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %134, i32 0, i32 33, !dbg !8569
  %135 = load i8*, i8** %base160, align 8, !dbg !8569
  %tobool161 = icmp ne i8* %135, null, !dbg !8567
  br i1 %tobool161, label %if.end163, label %if.then162, !dbg !8570

if.then162:                                       ; preds = %if.end155
  br label %out_relreg, !dbg !8571

if.end163:                                        ; preds = %if.end155
  %136 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8572
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %136, i32 0, i32 48, !dbg !8573
  store i32 512, i32* %rx_ring_size, align 4, !dbg !8574
  %137 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8575
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %137, i32 0, i32 62, !dbg !8576
  store i32 256, i32* %tx_ring_size, align 4, !dbg !8577
  %138 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8578
  %call164 = call zeroext i1 @nv_optimized(%struct.fe_priv* %138) #13, !dbg !8580
  br i1 %call164, label %if.else183, label %if.then165, !dbg !8581

if.then165:                                       ; preds = %if.end163
  %139 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8582
  %dev166 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %139, i32 0, i32 41, !dbg !8584
  %140 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8585
  %rx_ring_size167 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %140, i32 0, i32 48, !dbg !8586
  %141 = load i32, i32* %rx_ring_size167, align 4, !dbg !8586
  %142 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8587
  %tx_ring_size168 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %142, i32 0, i32 62, !dbg !8588
  %143 = load i32, i32* %tx_ring_size168, align 4, !dbg !8588
  %add169 = add i32 %141, %143, !dbg !8589
  %conv170 = sext i32 %add169 to i64, !dbg !8590
  %mul = mul i64 8, %conv170, !dbg !8591
  %144 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8592
  %ring_addr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %144, i32 0, i32 19, !dbg !8593
  %call171 = call i8* @dma_alloc_coherent(%struct.device* %dev166, i64 %mul, i64* %ring_addr, i32 3264) #13, !dbg !8594
  %145 = bitcast i8* %call171 to %struct.ring_desc*, !dbg !8594
  %146 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8595
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %146, i32 0, i32 41, !dbg !8596
  %orig = bitcast %union.ring_type* %rx_ring to %struct.ring_desc**, !dbg !8597
  store %struct.ring_desc* %145, %struct.ring_desc** %orig, align 8, !dbg !8598
  %147 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8599
  %rx_ring172 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %147, i32 0, i32 41, !dbg !8601
  %orig173 = bitcast %union.ring_type* %rx_ring172 to %struct.ring_desc**, !dbg !8602
  %148 = load %struct.ring_desc*, %struct.ring_desc** %orig173, align 8, !dbg !8602
  %tobool174 = icmp ne %struct.ring_desc* %148, null, !dbg !8599
  br i1 %tobool174, label %if.end176, label %if.then175, !dbg !8603

if.then175:                                       ; preds = %if.then165
  br label %out_unmap, !dbg !8604

if.end176:                                        ; preds = %if.then165
  %149 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8605
  %rx_ring177 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %149, i32 0, i32 41, !dbg !8606
  %orig178 = bitcast %union.ring_type* %rx_ring177 to %struct.ring_desc**, !dbg !8607
  %150 = load %struct.ring_desc*, %struct.ring_desc** %orig178, align 8, !dbg !8607
  %151 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8608
  %rx_ring_size179 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %151, i32 0, i32 48, !dbg !8609
  %152 = load i32, i32* %rx_ring_size179, align 4, !dbg !8609
  %idxprom180 = sext i32 %152 to i64, !dbg !8605
  %arrayidx181 = getelementptr %struct.ring_desc, %struct.ring_desc* %150, i64 %idxprom180, !dbg !8605
  %153 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8610
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %153, i32 0, i32 60, !dbg !8611
  %orig182 = bitcast %union.ring_type* %tx_ring to %struct.ring_desc**, !dbg !8612
  store %struct.ring_desc* %arrayidx181, %struct.ring_desc** %orig182, align 8, !dbg !8613
  br label %if.end205, !dbg !8614

if.else183:                                       ; preds = %if.end163
  %154 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8615
  %dev184 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %154, i32 0, i32 41, !dbg !8617
  %155 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8618
  %rx_ring_size185 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %155, i32 0, i32 48, !dbg !8619
  %156 = load i32, i32* %rx_ring_size185, align 4, !dbg !8619
  %157 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8620
  %tx_ring_size186 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %157, i32 0, i32 62, !dbg !8621
  %158 = load i32, i32* %tx_ring_size186, align 4, !dbg !8621
  %add187 = add i32 %156, %158, !dbg !8622
  %conv188 = sext i32 %add187 to i64, !dbg !8623
  %mul189 = mul i64 16, %conv188, !dbg !8624
  %159 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8625
  %ring_addr190 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %159, i32 0, i32 19, !dbg !8626
  %call191 = call i8* @dma_alloc_coherent(%struct.device* %dev184, i64 %mul189, i64* %ring_addr190, i32 3264) #13, !dbg !8627
  %160 = bitcast i8* %call191 to %struct.ring_desc_ex*, !dbg !8627
  %161 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8628
  %rx_ring192 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %161, i32 0, i32 41, !dbg !8629
  %ex = bitcast %union.ring_type* %rx_ring192 to %struct.ring_desc_ex**, !dbg !8630
  store %struct.ring_desc_ex* %160, %struct.ring_desc_ex** %ex, align 8, !dbg !8631
  %162 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8632
  %rx_ring193 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %162, i32 0, i32 41, !dbg !8634
  %ex194 = bitcast %union.ring_type* %rx_ring193 to %struct.ring_desc_ex**, !dbg !8635
  %163 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex194, align 8, !dbg !8635
  %tobool195 = icmp ne %struct.ring_desc_ex* %163, null, !dbg !8632
  br i1 %tobool195, label %if.end197, label %if.then196, !dbg !8636

if.then196:                                       ; preds = %if.else183
  br label %out_unmap, !dbg !8637

if.end197:                                        ; preds = %if.else183
  %164 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8638
  %rx_ring198 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %164, i32 0, i32 41, !dbg !8639
  %ex199 = bitcast %union.ring_type* %rx_ring198 to %struct.ring_desc_ex**, !dbg !8640
  %165 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex199, align 8, !dbg !8640
  %166 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8641
  %rx_ring_size200 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %166, i32 0, i32 48, !dbg !8642
  %167 = load i32, i32* %rx_ring_size200, align 4, !dbg !8642
  %idxprom201 = sext i32 %167 to i64, !dbg !8638
  %arrayidx202 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %165, i64 %idxprom201, !dbg !8638
  %168 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8643
  %tx_ring203 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %168, i32 0, i32 60, !dbg !8644
  %ex204 = bitcast %union.ring_type* %tx_ring203 to %struct.ring_desc_ex**, !dbg !8645
  store %struct.ring_desc_ex* %arrayidx202, %struct.ring_desc_ex** %ex204, align 8, !dbg !8646
  br label %if.end205

if.end205:                                        ; preds = %if.end197, %if.end176
  %169 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8647
  %rx_ring_size206 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %169, i32 0, i32 48, !dbg !8648
  %170 = load i32, i32* %rx_ring_size206, align 4, !dbg !8648
  %conv207 = sext i32 %170 to i64, !dbg !8647
  %call208 = call i8* @kcalloc(i64 %conv207, i64 40, i32 3264) #13, !dbg !8649
  %171 = bitcast i8* %call208 to %struct.nv_skb_map*, !dbg !8649
  %172 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8650
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %172, i32 0, i32 40, !dbg !8651
  store %struct.nv_skb_map* %171, %struct.nv_skb_map** %rx_skb, align 8, !dbg !8652
  %173 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8653
  %tx_ring_size209 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %173, i32 0, i32 62, !dbg !8654
  %174 = load i32, i32* %tx_ring_size209, align 4, !dbg !8654
  %conv210 = sext i32 %174 to i64, !dbg !8653
  %call211 = call i8* @kcalloc(i64 %conv210, i64 40, i32 3264) #13, !dbg !8655
  %175 = bitcast i8* %call211 to %struct.nv_skb_map*, !dbg !8655
  %176 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8656
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %176, i32 0, i32 59, !dbg !8657
  store %struct.nv_skb_map* %175, %struct.nv_skb_map** %tx_skb, align 8, !dbg !8658
  %177 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8659
  %rx_skb212 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %177, i32 0, i32 40, !dbg !8661
  %178 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb212, align 8, !dbg !8661
  %tobool213 = icmp ne %struct.nv_skb_map* %178, null, !dbg !8659
  br i1 %tobool213, label %lor.lhs.false214, label %if.then217, !dbg !8662

lor.lhs.false214:                                 ; preds = %if.end205
  %179 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8663
  %tx_skb215 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %179, i32 0, i32 59, !dbg !8664
  %180 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb215, align 8, !dbg !8664
  %tobool216 = icmp ne %struct.nv_skb_map* %180, null, !dbg !8663
  br i1 %tobool216, label %if.end218, label %if.then217, !dbg !8665

if.then217:                                       ; preds = %lor.lhs.false214, %if.end205
  br label %out_freering, !dbg !8666

if.end218:                                        ; preds = %lor.lhs.false214
  %181 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8667
  %call219 = call zeroext i1 @nv_optimized(%struct.fe_priv* %181) #13, !dbg !8669
  br i1 %call219, label %if.else221, label %if.then220, !dbg !8670

if.then220:                                       ; preds = %if.end218
  %182 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8671
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %182, i32 0, i32 32, !dbg !8672
  store %struct.net_device_ops* @nv_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !8673
  br label %if.end223, !dbg !8671

if.else221:                                       ; preds = %if.end218
  %183 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8674
  %netdev_ops222 = getelementptr inbounds %struct.net_device, %struct.net_device* %183, i32 0, i32 32, !dbg !8675
  store %struct.net_device_ops* @nv_netdev_ops_optimized, %struct.net_device_ops** %netdev_ops222, align 8, !dbg !8676
  br label %if.end223

if.end223:                                        ; preds = %if.else221, %if.then220
  %184 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8677
  %185 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8678
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %185, i32 0, i32 2, !dbg !8679
  call void @netif_napi_add(%struct.net_device* %184, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @nv_napi_poll, i32 64) #13, !dbg !8680
  %186 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8681
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %186, i32 0, i32 33, !dbg !8682
  store %struct.ethtool_ops* @ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !8683
  %187 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8684
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %187, i32 0, i32 94, !dbg !8685
  store i32 1250, i32* %watchdog_timeo, align 8, !dbg !8686
  %188 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8687
  %189 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8688
  %190 = bitcast %struct.net_device* %189 to i8*, !dbg !8688
  call void @pci_set_drvdata(%struct.pci_dev* %188, i8* %190) #13, !dbg !8689
  %191 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8690
  %call224 = call i8* @get_hwbase(%struct.net_device* %191) #13, !dbg !8691
  store i8* %call224, i8** %base, align 8, !dbg !8692
  %192 = load i8*, i8** %base, align 8, !dbg !8693
  %add.ptr = getelementptr i8, i8* %192, i64 168, !dbg !8694
  %call225 = call i32 @readl(i8* %add.ptr) #13, !dbg !8695
  %193 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8696
  %orig_mac = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %193, i32 0, i32 21, !dbg !8697
  %arrayidx226 = getelementptr [2 x i32], [2 x i32]* %orig_mac, i64 0, i64 0, !dbg !8696
  store i32 %call225, i32* %arrayidx226, align 8, !dbg !8698
  %194 = load i8*, i8** %base, align 8, !dbg !8699
  %add.ptr227 = getelementptr i8, i8* %194, i64 172, !dbg !8700
  %call228 = call i32 @readl(i8* %add.ptr227) #13, !dbg !8701
  %195 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8702
  %orig_mac229 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %195, i32 0, i32 21, !dbg !8703
  %arrayidx230 = getelementptr [2 x i32], [2 x i32]* %orig_mac229, i64 0, i64 1, !dbg !8702
  store i32 %call228, i32* %arrayidx230, align 4, !dbg !8704
  %196 = load i8*, i8** %base, align 8, !dbg !8705
  %add.ptr231 = getelementptr i8, i8* %196, i64 268, !dbg !8706
  %call232 = call i32 @readl(i8* %add.ptr231) #13, !dbg !8707
  store i32 %call232, i32* %txreg, align 4, !dbg !8708
  %197 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8709
  %driver_data233 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %197, i32 0, i32 6, !dbg !8711
  %198 = load i64, i64* %driver_data233, align 8, !dbg !8711
  %and234 = and i64 %198, 16384, !dbg !8712
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8712
  br i1 %tobool235, label %if.then236, label %if.else277, !dbg !8713

if.then236:                                       ; preds = %if.end223
  %199 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8714
  %orig_mac237 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %199, i32 0, i32 21, !dbg !8716
  %arrayidx238 = getelementptr [2 x i32], [2 x i32]* %orig_mac237, i64 0, i64 0, !dbg !8714
  %200 = load i32, i32* %arrayidx238, align 8, !dbg !8714
  %shr = lshr i32 %200, 0, !dbg !8717
  %and239 = and i32 %shr, 255, !dbg !8718
  %conv240 = trunc i32 %and239 to i8, !dbg !8719
  %201 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8720
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %201, i32 0, i32 74, !dbg !8721
  %202 = load i8*, i8** %dev_addr, align 8, !dbg !8721
  %arrayidx241 = getelementptr i8, i8* %202, i64 0, !dbg !8720
  store i8 %conv240, i8* %arrayidx241, align 1, !dbg !8722
  %203 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8723
  %orig_mac242 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %203, i32 0, i32 21, !dbg !8724
  %arrayidx243 = getelementptr [2 x i32], [2 x i32]* %orig_mac242, i64 0, i64 0, !dbg !8723
  %204 = load i32, i32* %arrayidx243, align 8, !dbg !8723
  %shr244 = lshr i32 %204, 8, !dbg !8725
  %and245 = and i32 %shr244, 255, !dbg !8726
  %conv246 = trunc i32 %and245 to i8, !dbg !8727
  %205 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8728
  %dev_addr247 = getelementptr inbounds %struct.net_device, %struct.net_device* %205, i32 0, i32 74, !dbg !8729
  %206 = load i8*, i8** %dev_addr247, align 8, !dbg !8729
  %arrayidx248 = getelementptr i8, i8* %206, i64 1, !dbg !8728
  store i8 %conv246, i8* %arrayidx248, align 1, !dbg !8730
  %207 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8731
  %orig_mac249 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %207, i32 0, i32 21, !dbg !8732
  %arrayidx250 = getelementptr [2 x i32], [2 x i32]* %orig_mac249, i64 0, i64 0, !dbg !8731
  %208 = load i32, i32* %arrayidx250, align 8, !dbg !8731
  %shr251 = lshr i32 %208, 16, !dbg !8733
  %and252 = and i32 %shr251, 255, !dbg !8734
  %conv253 = trunc i32 %and252 to i8, !dbg !8735
  %209 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8736
  %dev_addr254 = getelementptr inbounds %struct.net_device, %struct.net_device* %209, i32 0, i32 74, !dbg !8737
  %210 = load i8*, i8** %dev_addr254, align 8, !dbg !8737
  %arrayidx255 = getelementptr i8, i8* %210, i64 2, !dbg !8736
  store i8 %conv253, i8* %arrayidx255, align 1, !dbg !8738
  %211 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8739
  %orig_mac256 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %211, i32 0, i32 21, !dbg !8740
  %arrayidx257 = getelementptr [2 x i32], [2 x i32]* %orig_mac256, i64 0, i64 0, !dbg !8739
  %212 = load i32, i32* %arrayidx257, align 8, !dbg !8739
  %shr258 = lshr i32 %212, 24, !dbg !8741
  %and259 = and i32 %shr258, 255, !dbg !8742
  %conv260 = trunc i32 %and259 to i8, !dbg !8743
  %213 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8744
  %dev_addr261 = getelementptr inbounds %struct.net_device, %struct.net_device* %213, i32 0, i32 74, !dbg !8745
  %214 = load i8*, i8** %dev_addr261, align 8, !dbg !8745
  %arrayidx262 = getelementptr i8, i8* %214, i64 3, !dbg !8744
  store i8 %conv260, i8* %arrayidx262, align 1, !dbg !8746
  %215 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8747
  %orig_mac263 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %215, i32 0, i32 21, !dbg !8748
  %arrayidx264 = getelementptr [2 x i32], [2 x i32]* %orig_mac263, i64 0, i64 1, !dbg !8747
  %216 = load i32, i32* %arrayidx264, align 4, !dbg !8747
  %shr265 = lshr i32 %216, 0, !dbg !8749
  %and266 = and i32 %shr265, 255, !dbg !8750
  %conv267 = trunc i32 %and266 to i8, !dbg !8751
  %217 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8752
  %dev_addr268 = getelementptr inbounds %struct.net_device, %struct.net_device* %217, i32 0, i32 74, !dbg !8753
  %218 = load i8*, i8** %dev_addr268, align 8, !dbg !8753
  %arrayidx269 = getelementptr i8, i8* %218, i64 4, !dbg !8752
  store i8 %conv267, i8* %arrayidx269, align 1, !dbg !8754
  %219 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8755
  %orig_mac270 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %219, i32 0, i32 21, !dbg !8756
  %arrayidx271 = getelementptr [2 x i32], [2 x i32]* %orig_mac270, i64 0, i64 1, !dbg !8755
  %220 = load i32, i32* %arrayidx271, align 4, !dbg !8755
  %shr272 = lshr i32 %220, 8, !dbg !8757
  %and273 = and i32 %shr272, 255, !dbg !8758
  %conv274 = trunc i32 %and273 to i8, !dbg !8759
  %221 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8760
  %dev_addr275 = getelementptr inbounds %struct.net_device, %struct.net_device* %221, i32 0, i32 74, !dbg !8761
  %222 = load i8*, i8** %dev_addr275, align 8, !dbg !8761
  %arrayidx276 = getelementptr i8, i8* %222, i64 5, !dbg !8760
  store i8 %conv274, i8* %arrayidx276, align 1, !dbg !8762
  br label %if.end400, !dbg !8763

if.else277:                                       ; preds = %if.end223
  %223 = load i32, i32* %txreg, align 4, !dbg !8764
  %and278 = and i32 %223, 32768, !dbg !8766
  %tobool279 = icmp ne i32 %and278, 0, !dbg !8766
  br i1 %tobool279, label %if.then280, label %if.else354, !dbg !8767

if.then280:                                       ; preds = %if.else277
  %224 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8768
  %orig_mac281 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %224, i32 0, i32 21, !dbg !8770
  %arrayidx282 = getelementptr [2 x i32], [2 x i32]* %orig_mac281, i64 0, i64 0, !dbg !8768
  %225 = load i32, i32* %arrayidx282, align 8, !dbg !8768
  %shr283 = lshr i32 %225, 0, !dbg !8771
  %and284 = and i32 %shr283, 255, !dbg !8772
  %conv285 = trunc i32 %and284 to i8, !dbg !8773
  %226 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8774
  %dev_addr286 = getelementptr inbounds %struct.net_device, %struct.net_device* %226, i32 0, i32 74, !dbg !8775
  %227 = load i8*, i8** %dev_addr286, align 8, !dbg !8775
  %arrayidx287 = getelementptr i8, i8* %227, i64 0, !dbg !8774
  store i8 %conv285, i8* %arrayidx287, align 1, !dbg !8776
  %228 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8777
  %orig_mac288 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %228, i32 0, i32 21, !dbg !8778
  %arrayidx289 = getelementptr [2 x i32], [2 x i32]* %orig_mac288, i64 0, i64 0, !dbg !8777
  %229 = load i32, i32* %arrayidx289, align 8, !dbg !8777
  %shr290 = lshr i32 %229, 8, !dbg !8779
  %and291 = and i32 %shr290, 255, !dbg !8780
  %conv292 = trunc i32 %and291 to i8, !dbg !8781
  %230 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8782
  %dev_addr293 = getelementptr inbounds %struct.net_device, %struct.net_device* %230, i32 0, i32 74, !dbg !8783
  %231 = load i8*, i8** %dev_addr293, align 8, !dbg !8783
  %arrayidx294 = getelementptr i8, i8* %231, i64 1, !dbg !8782
  store i8 %conv292, i8* %arrayidx294, align 1, !dbg !8784
  %232 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8785
  %orig_mac295 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %232, i32 0, i32 21, !dbg !8786
  %arrayidx296 = getelementptr [2 x i32], [2 x i32]* %orig_mac295, i64 0, i64 0, !dbg !8785
  %233 = load i32, i32* %arrayidx296, align 8, !dbg !8785
  %shr297 = lshr i32 %233, 16, !dbg !8787
  %and298 = and i32 %shr297, 255, !dbg !8788
  %conv299 = trunc i32 %and298 to i8, !dbg !8789
  %234 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8790
  %dev_addr300 = getelementptr inbounds %struct.net_device, %struct.net_device* %234, i32 0, i32 74, !dbg !8791
  %235 = load i8*, i8** %dev_addr300, align 8, !dbg !8791
  %arrayidx301 = getelementptr i8, i8* %235, i64 2, !dbg !8790
  store i8 %conv299, i8* %arrayidx301, align 1, !dbg !8792
  %236 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8793
  %orig_mac302 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %236, i32 0, i32 21, !dbg !8794
  %arrayidx303 = getelementptr [2 x i32], [2 x i32]* %orig_mac302, i64 0, i64 0, !dbg !8793
  %237 = load i32, i32* %arrayidx303, align 8, !dbg !8793
  %shr304 = lshr i32 %237, 24, !dbg !8795
  %and305 = and i32 %shr304, 255, !dbg !8796
  %conv306 = trunc i32 %and305 to i8, !dbg !8797
  %238 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8798
  %dev_addr307 = getelementptr inbounds %struct.net_device, %struct.net_device* %238, i32 0, i32 74, !dbg !8799
  %239 = load i8*, i8** %dev_addr307, align 8, !dbg !8799
  %arrayidx308 = getelementptr i8, i8* %239, i64 3, !dbg !8798
  store i8 %conv306, i8* %arrayidx308, align 1, !dbg !8800
  %240 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8801
  %orig_mac309 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %240, i32 0, i32 21, !dbg !8802
  %arrayidx310 = getelementptr [2 x i32], [2 x i32]* %orig_mac309, i64 0, i64 1, !dbg !8801
  %241 = load i32, i32* %arrayidx310, align 4, !dbg !8801
  %shr311 = lshr i32 %241, 0, !dbg !8803
  %and312 = and i32 %shr311, 255, !dbg !8804
  %conv313 = trunc i32 %and312 to i8, !dbg !8805
  %242 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8806
  %dev_addr314 = getelementptr inbounds %struct.net_device, %struct.net_device* %242, i32 0, i32 74, !dbg !8807
  %243 = load i8*, i8** %dev_addr314, align 8, !dbg !8807
  %arrayidx315 = getelementptr i8, i8* %243, i64 4, !dbg !8806
  store i8 %conv313, i8* %arrayidx315, align 1, !dbg !8808
  %244 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8809
  %orig_mac316 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %244, i32 0, i32 21, !dbg !8810
  %arrayidx317 = getelementptr [2 x i32], [2 x i32]* %orig_mac316, i64 0, i64 1, !dbg !8809
  %245 = load i32, i32* %arrayidx317, align 4, !dbg !8809
  %shr318 = lshr i32 %245, 8, !dbg !8811
  %and319 = and i32 %shr318, 255, !dbg !8812
  %conv320 = trunc i32 %and319 to i8, !dbg !8813
  %246 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8814
  %dev_addr321 = getelementptr inbounds %struct.net_device, %struct.net_device* %246, i32 0, i32 74, !dbg !8815
  %247 = load i8*, i8** %dev_addr321, align 8, !dbg !8815
  %arrayidx322 = getelementptr i8, i8* %247, i64 5, !dbg !8814
  store i8 %conv320, i8* %arrayidx322, align 1, !dbg !8816
  %248 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8817
  %dev_addr323 = getelementptr inbounds %struct.net_device, %struct.net_device* %248, i32 0, i32 74, !dbg !8818
  %249 = load i8*, i8** %dev_addr323, align 8, !dbg !8818
  %arrayidx324 = getelementptr i8, i8* %249, i64 5, !dbg !8817
  %250 = load i8, i8* %arrayidx324, align 1, !dbg !8817
  %conv325 = zext i8 %250 to i32, !dbg !8817
  %shl = shl i32 %conv325, 0, !dbg !8819
  %251 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8820
  %dev_addr326 = getelementptr inbounds %struct.net_device, %struct.net_device* %251, i32 0, i32 74, !dbg !8821
  %252 = load i8*, i8** %dev_addr326, align 8, !dbg !8821
  %arrayidx327 = getelementptr i8, i8* %252, i64 4, !dbg !8820
  %253 = load i8, i8* %arrayidx327, align 1, !dbg !8820
  %conv328 = zext i8 %253 to i32, !dbg !8820
  %shl329 = shl i32 %conv328, 8, !dbg !8822
  %add330 = add i32 %shl, %shl329, !dbg !8823
  %254 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8824
  %dev_addr331 = getelementptr inbounds %struct.net_device, %struct.net_device* %254, i32 0, i32 74, !dbg !8825
  %255 = load i8*, i8** %dev_addr331, align 8, !dbg !8825
  %arrayidx332 = getelementptr i8, i8* %255, i64 3, !dbg !8824
  %256 = load i8, i8* %arrayidx332, align 1, !dbg !8824
  %conv333 = zext i8 %256 to i32, !dbg !8824
  %shl334 = shl i32 %conv333, 16, !dbg !8826
  %add335 = add i32 %add330, %shl334, !dbg !8827
  %257 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8828
  %dev_addr336 = getelementptr inbounds %struct.net_device, %struct.net_device* %257, i32 0, i32 74, !dbg !8829
  %258 = load i8*, i8** %dev_addr336, align 8, !dbg !8829
  %arrayidx337 = getelementptr i8, i8* %258, i64 2, !dbg !8828
  %259 = load i8, i8* %arrayidx337, align 1, !dbg !8828
  %conv338 = zext i8 %259 to i32, !dbg !8828
  %shl339 = shl i32 %conv338, 24, !dbg !8830
  %add340 = add i32 %add335, %shl339, !dbg !8831
  %260 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8832
  %orig_mac341 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %260, i32 0, i32 21, !dbg !8833
  %arrayidx342 = getelementptr [2 x i32], [2 x i32]* %orig_mac341, i64 0, i64 0, !dbg !8832
  store i32 %add340, i32* %arrayidx342, align 8, !dbg !8834
  %261 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8835
  %dev_addr343 = getelementptr inbounds %struct.net_device, %struct.net_device* %261, i32 0, i32 74, !dbg !8836
  %262 = load i8*, i8** %dev_addr343, align 8, !dbg !8836
  %arrayidx344 = getelementptr i8, i8* %262, i64 1, !dbg !8835
  %263 = load i8, i8* %arrayidx344, align 1, !dbg !8835
  %conv345 = zext i8 %263 to i32, !dbg !8835
  %shl346 = shl i32 %conv345, 0, !dbg !8837
  %264 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8838
  %dev_addr347 = getelementptr inbounds %struct.net_device, %struct.net_device* %264, i32 0, i32 74, !dbg !8839
  %265 = load i8*, i8** %dev_addr347, align 8, !dbg !8839
  %arrayidx348 = getelementptr i8, i8* %265, i64 0, !dbg !8838
  %266 = load i8, i8* %arrayidx348, align 1, !dbg !8838
  %conv349 = zext i8 %266 to i32, !dbg !8838
  %shl350 = shl i32 %conv349, 8, !dbg !8840
  %add351 = add i32 %shl346, %shl350, !dbg !8841
  %267 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8842
  %orig_mac352 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %267, i32 0, i32 21, !dbg !8843
  %arrayidx353 = getelementptr [2 x i32], [2 x i32]* %orig_mac352, i64 0, i64 1, !dbg !8842
  store i32 %add351, i32* %arrayidx353, align 4, !dbg !8844
  br label %if.end399, !dbg !8845

if.else354:                                       ; preds = %if.else277
  %268 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8846
  %orig_mac355 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %268, i32 0, i32 21, !dbg !8848
  %arrayidx356 = getelementptr [2 x i32], [2 x i32]* %orig_mac355, i64 0, i64 1, !dbg !8846
  %269 = load i32, i32* %arrayidx356, align 4, !dbg !8846
  %shr357 = lshr i32 %269, 8, !dbg !8849
  %and358 = and i32 %shr357, 255, !dbg !8850
  %conv359 = trunc i32 %and358 to i8, !dbg !8851
  %270 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8852
  %dev_addr360 = getelementptr inbounds %struct.net_device, %struct.net_device* %270, i32 0, i32 74, !dbg !8853
  %271 = load i8*, i8** %dev_addr360, align 8, !dbg !8853
  %arrayidx361 = getelementptr i8, i8* %271, i64 0, !dbg !8852
  store i8 %conv359, i8* %arrayidx361, align 1, !dbg !8854
  %272 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8855
  %orig_mac362 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %272, i32 0, i32 21, !dbg !8856
  %arrayidx363 = getelementptr [2 x i32], [2 x i32]* %orig_mac362, i64 0, i64 1, !dbg !8855
  %273 = load i32, i32* %arrayidx363, align 4, !dbg !8855
  %shr364 = lshr i32 %273, 0, !dbg !8857
  %and365 = and i32 %shr364, 255, !dbg !8858
  %conv366 = trunc i32 %and365 to i8, !dbg !8859
  %274 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8860
  %dev_addr367 = getelementptr inbounds %struct.net_device, %struct.net_device* %274, i32 0, i32 74, !dbg !8861
  %275 = load i8*, i8** %dev_addr367, align 8, !dbg !8861
  %arrayidx368 = getelementptr i8, i8* %275, i64 1, !dbg !8860
  store i8 %conv366, i8* %arrayidx368, align 1, !dbg !8862
  %276 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8863
  %orig_mac369 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %276, i32 0, i32 21, !dbg !8864
  %arrayidx370 = getelementptr [2 x i32], [2 x i32]* %orig_mac369, i64 0, i64 0, !dbg !8863
  %277 = load i32, i32* %arrayidx370, align 8, !dbg !8863
  %shr371 = lshr i32 %277, 24, !dbg !8865
  %and372 = and i32 %shr371, 255, !dbg !8866
  %conv373 = trunc i32 %and372 to i8, !dbg !8867
  %278 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8868
  %dev_addr374 = getelementptr inbounds %struct.net_device, %struct.net_device* %278, i32 0, i32 74, !dbg !8869
  %279 = load i8*, i8** %dev_addr374, align 8, !dbg !8869
  %arrayidx375 = getelementptr i8, i8* %279, i64 2, !dbg !8868
  store i8 %conv373, i8* %arrayidx375, align 1, !dbg !8870
  %280 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8871
  %orig_mac376 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %280, i32 0, i32 21, !dbg !8872
  %arrayidx377 = getelementptr [2 x i32], [2 x i32]* %orig_mac376, i64 0, i64 0, !dbg !8871
  %281 = load i32, i32* %arrayidx377, align 8, !dbg !8871
  %shr378 = lshr i32 %281, 16, !dbg !8873
  %and379 = and i32 %shr378, 255, !dbg !8874
  %conv380 = trunc i32 %and379 to i8, !dbg !8875
  %282 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8876
  %dev_addr381 = getelementptr inbounds %struct.net_device, %struct.net_device* %282, i32 0, i32 74, !dbg !8877
  %283 = load i8*, i8** %dev_addr381, align 8, !dbg !8877
  %arrayidx382 = getelementptr i8, i8* %283, i64 3, !dbg !8876
  store i8 %conv380, i8* %arrayidx382, align 1, !dbg !8878
  %284 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8879
  %orig_mac383 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %284, i32 0, i32 21, !dbg !8880
  %arrayidx384 = getelementptr [2 x i32], [2 x i32]* %orig_mac383, i64 0, i64 0, !dbg !8879
  %285 = load i32, i32* %arrayidx384, align 8, !dbg !8879
  %shr385 = lshr i32 %285, 8, !dbg !8881
  %and386 = and i32 %shr385, 255, !dbg !8882
  %conv387 = trunc i32 %and386 to i8, !dbg !8883
  %286 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8884
  %dev_addr388 = getelementptr inbounds %struct.net_device, %struct.net_device* %286, i32 0, i32 74, !dbg !8885
  %287 = load i8*, i8** %dev_addr388, align 8, !dbg !8885
  %arrayidx389 = getelementptr i8, i8* %287, i64 4, !dbg !8884
  store i8 %conv387, i8* %arrayidx389, align 1, !dbg !8886
  %288 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8887
  %orig_mac390 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %288, i32 0, i32 21, !dbg !8888
  %arrayidx391 = getelementptr [2 x i32], [2 x i32]* %orig_mac390, i64 0, i64 0, !dbg !8887
  %289 = load i32, i32* %arrayidx391, align 8, !dbg !8887
  %shr392 = lshr i32 %289, 0, !dbg !8889
  %and393 = and i32 %shr392, 255, !dbg !8890
  %conv394 = trunc i32 %and393 to i8, !dbg !8891
  %290 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8892
  %dev_addr395 = getelementptr inbounds %struct.net_device, %struct.net_device* %290, i32 0, i32 74, !dbg !8893
  %291 = load i8*, i8** %dev_addr395, align 8, !dbg !8893
  %arrayidx396 = getelementptr i8, i8* %291, i64 5, !dbg !8892
  store i8 %conv394, i8* %arrayidx396, align 1, !dbg !8894
  %292 = load i32, i32* %txreg, align 4, !dbg !8895
  %or397 = or i32 %292, 32768, !dbg !8896
  %293 = load i8*, i8** %base, align 8, !dbg !8897
  %add.ptr398 = getelementptr i8, i8* %293, i64 268, !dbg !8898
  call void @writel(i32 %or397, i8* %add.ptr398) #13, !dbg !8899
  br label %if.end399

if.end399:                                        ; preds = %if.else354, %if.then280
  br label %if.end400

if.end400:                                        ; preds = %if.end399, %if.then236
  %294 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8900
  %dev_addr401 = getelementptr inbounds %struct.net_device, %struct.net_device* %294, i32 0, i32 74, !dbg !8902
  %295 = load i8*, i8** %dev_addr401, align 8, !dbg !8902
  %call402 = call zeroext i1 @is_valid_ether_addr(i8* %295) #13, !dbg !8903
  br i1 %call402, label %if.end408, label %if.then403, !dbg !8904

if.then403:                                       ; preds = %if.end400
  %296 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8905
  %dev404 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %296, i32 0, i32 41, !dbg !8905
  %297 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8905
  %dev_addr405 = getelementptr inbounds %struct.net_device, %struct.net_device* %297, i32 0, i32 74, !dbg !8905
  %298 = load i8*, i8** %dev_addr405, align 8, !dbg !8905
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev404, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i8* %298) #14, !dbg !8905
  %299 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8907
  call void @eth_hw_addr_random(%struct.net_device* %299) #13, !dbg !8908
  %300 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8909
  %dev406 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %300, i32 0, i32 41, !dbg !8909
  %301 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8909
  %dev_addr407 = getelementptr inbounds %struct.net_device, %struct.net_device* %301, i32 0, i32 74, !dbg !8909
  %302 = load i8*, i8** %dev_addr407, align 8, !dbg !8909
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev406, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8* %302) #14, !dbg !8909
  br label %if.end408, !dbg !8910

if.end408:                                        ; preds = %if.then403, %if.end400
  %303 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8911
  call void @nv_copy_mac_to_hw(%struct.net_device* %303) #13, !dbg !8912
  %304 = load i8*, i8** %base, align 8, !dbg !8913
  %add.ptr409 = getelementptr i8, i8* %304, i64 512, !dbg !8914
  call void @writel(i32 0, i8* %add.ptr409) #13, !dbg !8915
  %305 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8916
  %wolenabled = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %305, i32 0, i32 11, !dbg !8917
  store i32 0, i32* %wolenabled, align 8, !dbg !8918
  %306 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8919
  %dev410 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %306, i32 0, i32 41, !dbg !8920
  %call411 = call i32 @device_set_wakeup_enable(%struct.device* %dev410, i1 zeroext false) #13, !dbg !8921
  %307 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8922
  %driver_data412 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %307, i32 0, i32 6, !dbg !8924
  %308 = load i64, i64* %driver_data412, align 8, !dbg !8924
  %and413 = and i64 %308, 256, !dbg !8925
  %tobool414 = icmp ne i64 %and413, 0, !dbg !8925
  br i1 %tobool414, label %if.then415, label %if.end430, !dbg !8926

if.then415:                                       ; preds = %if.end408
  %309 = load i8*, i8** %base, align 8, !dbg !8927
  %add.ptr416 = getelementptr i8, i8* %309, i64 1536, !dbg !8929
  %call417 = call i32 @readl(i8* %add.ptr416) #13, !dbg !8930
  store i32 %call417, i32* %powerstate, align 4, !dbg !8931
  %310 = load i32, i32* %powerstate, align 4, !dbg !8932
  %and418 = and i32 %310, -3862, !dbg !8932
  store i32 %and418, i32* %powerstate, align 4, !dbg !8932
  %311 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8933
  %driver_data419 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %311, i32 0, i32 6, !dbg !8935
  %312 = load i64, i64* %driver_data419, align 8, !dbg !8935
  %and420 = and i64 %312, 8388608, !dbg !8936
  %tobool421 = icmp ne i64 %and420, 0, !dbg !8936
  br i1 %tobool421, label %land.lhs.true422, label %if.end428, !dbg !8937

land.lhs.true422:                                 ; preds = %if.then415
  %313 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8938
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %313, i32 0, i32 12, !dbg !8939
  %314 = load i8, i8* %revision, align 8, !dbg !8939
  %conv423 = zext i8 %314 to i32, !dbg !8938
  %cmp424 = icmp sge i32 %conv423, 163, !dbg !8940
  br i1 %cmp424, label %if.then426, label %if.end428, !dbg !8941

if.then426:                                       ; preds = %land.lhs.true422
  %315 = load i32, i32* %powerstate, align 4, !dbg !8942
  %or427 = or i32 %315, 1, !dbg !8942
  store i32 %or427, i32* %powerstate, align 4, !dbg !8942
  br label %if.end428, !dbg !8943

if.end428:                                        ; preds = %if.then426, %land.lhs.true422, %if.then415
  %316 = load i32, i32* %powerstate, align 4, !dbg !8944
  %317 = load i8*, i8** %base, align 8, !dbg !8945
  %add.ptr429 = getelementptr i8, i8* %317, i64 1536, !dbg !8946
  call void @writel(i32 %316, i8* %add.ptr429) #13, !dbg !8947
  br label %if.end430, !dbg !8948

if.end430:                                        ; preds = %if.end428, %if.end408
  %318 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8949
  %desc_ver431 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %318, i32 0, i32 24, !dbg !8951
  %319 = load i32, i32* %desc_ver431, align 8, !dbg !8951
  %cmp432 = icmp eq i32 %319, 1, !dbg !8952
  br i1 %cmp432, label %if.then434, label %if.else435, !dbg !8953

if.then434:                                       ; preds = %if.end430
  %320 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8954
  %tx_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %320, i32 0, i32 61, !dbg !8955
  store i32 -2147483648, i32* %tx_flags, align 8, !dbg !8956
  br label %if.end437, !dbg !8954

if.else435:                                       ; preds = %if.end430
  %321 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8957
  %tx_flags436 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %321, i32 0, i32 61, !dbg !8958
  store i32 -2147483648, i32* %tx_flags436, align 8, !dbg !8959
  br label %if.end437

if.end437:                                        ; preds = %if.else435, %if.then434
  %322 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8960
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %322, i32 0, i32 69, !dbg !8961
  store i32 0, i32* %msi_flags, align 4, !dbg !8962
  %323 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8963
  %driver_data438 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %323, i32 0, i32 6, !dbg !8965
  %324 = load i64, i64* %driver_data438, align 8, !dbg !8965
  %and439 = and i64 %324, 64, !dbg !8966
  %tobool440 = icmp ne i64 %and439, 0, !dbg !8966
  br i1 %tobool440, label %land.lhs.true441, label %if.end446, !dbg !8967

land.lhs.true441:                                 ; preds = %if.end437
  %325 = load i32, i32* @msi, align 4, !dbg !8968
  %tobool442 = icmp ne i32 %325, 0, !dbg !8968
  br i1 %tobool442, label %if.then443, label %if.end446, !dbg !8969

if.then443:                                       ; preds = %land.lhs.true441
  %326 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8970
  %msi_flags444 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %326, i32 0, i32 69, !dbg !8971
  %327 = load i32, i32* %msi_flags444, align 4, !dbg !8972
  %or445 = or i32 %327, 16, !dbg !8972
  store i32 %or445, i32* %msi_flags444, align 4, !dbg !8972
  br label %if.end446, !dbg !8970

if.end446:                                        ; preds = %if.then443, %land.lhs.true441, %if.end437
  %328 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8973
  %driver_data447 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %328, i32 0, i32 6, !dbg !8975
  %329 = load i64, i64* %driver_data447, align 8, !dbg !8975
  %and448 = and i64 %329, 128, !dbg !8976
  %tobool449 = icmp ne i64 %and448, 0, !dbg !8976
  br i1 %tobool449, label %land.lhs.true450, label %if.end453, !dbg !8977

land.lhs.true450:                                 ; preds = %if.end446
  %330 = load i32, i32* @msix, align 4, !dbg !8978
  %tobool451 = icmp ne i32 %330, 0, !dbg !8978
  br i1 %tobool451, label %if.then452, label %if.end453, !dbg !8979

if.then452:                                       ; preds = %land.lhs.true450
  br label %if.end453, !dbg !8980

if.end453:                                        ; preds = %if.then452, %land.lhs.true450, %if.end446
  %331 = load i32, i32* @optimization_mode, align 4, !dbg !8982
  %cmp454 = icmp eq i32 %331, 1, !dbg !8984
  br i1 %cmp454, label %if.then456, label %if.else464, !dbg !8985

if.then456:                                       ; preds = %if.end453
  %332 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8986
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %332, i32 0, i32 23, !dbg !8988
  store i32 96, i32* %irqmask, align 4, !dbg !8989
  %333 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8990
  %msi_flags457 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %333, i32 0, i32 69, !dbg !8992
  %334 = load i32, i32* %msi_flags457, align 4, !dbg !8992
  %and458 = and i32 %334, 32, !dbg !8993
  %tobool459 = icmp ne i32 %and458, 0, !dbg !8993
  br i1 %tobool459, label %if.then460, label %if.end463, !dbg !8994

if.then460:                                       ; preds = %if.then456
  %335 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !8995
  %msi_flags461 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %335, i32 0, i32 69, !dbg !8996
  %336 = load i32, i32* %msi_flags461, align 4, !dbg !8997
  %or462 = or i32 %336, 1, !dbg !8997
  store i32 %or462, i32* %msi_flags461, align 4, !dbg !8997
  br label %if.end463, !dbg !8995

if.end463:                                        ; preds = %if.then460, %if.then456
  br label %if.end485, !dbg !8998

if.else464:                                       ; preds = %if.end453
  %337 = load i32, i32* @optimization_mode, align 4, !dbg !8999
  %cmp465 = icmp eq i32 %337, 2, !dbg !9001
  br i1 %cmp465, label %land.lhs.true467, label %if.else475, !dbg !9002

land.lhs.true467:                                 ; preds = %if.else464
  %338 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9003
  %driver_data468 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %338, i32 0, i32 6, !dbg !9004
  %339 = load i64, i64* %driver_data468, align 8, !dbg !9004
  %and469 = and i64 %339, 1, !dbg !9005
  %tobool470 = icmp ne i64 %and469, 0, !dbg !9005
  br i1 %tobool470, label %if.else475, label %if.then471, !dbg !9006

if.then471:                                       ; preds = %land.lhs.true467
  %340 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9007
  %irqmask472 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %340, i32 0, i32 23, !dbg !9009
  store i32 223, i32* %irqmask472, align 4, !dbg !9010
  %341 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9011
  %msi_flags473 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %341, i32 0, i32 69, !dbg !9012
  %342 = load i32, i32* %msi_flags473, align 4, !dbg !9013
  %and474 = and i32 %342, -33, !dbg !9013
  store i32 %and474, i32* %msi_flags473, align 4, !dbg !9013
  br label %if.end484, !dbg !9014

if.else475:                                       ; preds = %land.lhs.true467, %if.else464
  store i32 0, i32* @optimization_mode, align 4, !dbg !9015
  %343 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9017
  %irqmask476 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %343, i32 0, i32 23, !dbg !9018
  store i32 223, i32* %irqmask476, align 4, !dbg !9019
  %344 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9020
  %msi_flags477 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %344, i32 0, i32 69, !dbg !9022
  %345 = load i32, i32* %msi_flags477, align 4, !dbg !9022
  %and478 = and i32 %345, 32, !dbg !9023
  %tobool479 = icmp ne i32 %and478, 0, !dbg !9023
  br i1 %tobool479, label %if.then480, label %if.end483, !dbg !9024

if.then480:                                       ; preds = %if.else475
  %346 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9025
  %msi_flags481 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %346, i32 0, i32 69, !dbg !9026
  %347 = load i32, i32* %msi_flags481, align 4, !dbg !9027
  %or482 = or i32 %347, 3, !dbg !9027
  store i32 %or482, i32* %msi_flags481, align 4, !dbg !9027
  br label %if.end483, !dbg !9025

if.end483:                                        ; preds = %if.then480, %if.else475
  br label %if.end484

if.end484:                                        ; preds = %if.end483, %if.then471
  br label %if.end485

if.end485:                                        ; preds = %if.end484, %if.end463
  %348 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9028
  %driver_data486 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %348, i32 0, i32 6, !dbg !9030
  %349 = load i64, i64* %driver_data486, align 8, !dbg !9030
  %and487 = and i64 %349, 1, !dbg !9031
  %tobool488 = icmp ne i64 %and487, 0, !dbg !9031
  br i1 %tobool488, label %if.then489, label %if.end492, !dbg !9032

if.then489:                                       ; preds = %if.end485
  %350 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9033
  %irqmask490 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %350, i32 0, i32 23, !dbg !9034
  %351 = load i32, i32* %irqmask490, align 4, !dbg !9035
  %or491 = or i32 %351, 32, !dbg !9035
  store i32 %or491, i32* %irqmask490, align 4, !dbg !9035
  br label %if.end492, !dbg !9033

if.end492:                                        ; preds = %if.then489, %if.end485
  %352 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9036
  %driver_data493 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %352, i32 0, i32 6, !dbg !9038
  %353 = load i64, i64* %driver_data493, align 8, !dbg !9038
  %and494 = and i64 %353, 2, !dbg !9039
  %tobool495 = icmp ne i64 %and494, 0, !dbg !9039
  br i1 %tobool495, label %if.then496, label %if.else498, !dbg !9040

if.then496:                                       ; preds = %if.end492
  %354 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9041
  %need_linktimer = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %354, i32 0, i32 51, !dbg !9043
  store i32 1, i32* %need_linktimer, align 8, !dbg !9044
  %355 = load volatile i64, i64* @jiffies, align 8, !dbg !9045
  %add497 = add i64 %355, 750, !dbg !9046
  %356 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9047
  %link_timeout = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %356, i32 0, i32 52, !dbg !9048
  store i64 %add497, i64* %link_timeout, align 8, !dbg !9049
  br label %if.end500, !dbg !9050

if.else498:                                       ; preds = %if.end492
  %357 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9051
  %need_linktimer499 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %357, i32 0, i32 51, !dbg !9053
  store i32 0, i32* %need_linktimer499, align 8, !dbg !9054
  br label %if.end500

if.end500:                                        ; preds = %if.else498, %if.then496
  %358 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9055
  %driver_data501 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %358, i32 0, i32 6, !dbg !9057
  %359 = load i64, i64* %driver_data501, align 8, !dbg !9057
  %and502 = and i64 %359, 524288, !dbg !9058
  %tobool503 = icmp ne i64 %and502, 0, !dbg !9058
  br i1 %tobool503, label %if.then504, label %if.end517, !dbg !9059

if.then504:                                       ; preds = %if.end500
  %360 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9060
  %tx_limit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %360, i32 0, i32 63, !dbg !9062
  store i32 1, i32* %tx_limit, align 8, !dbg !9063
  %361 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9064
  %driver_data505 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %361, i32 0, i32 6, !dbg !9066
  %362 = load i64, i64* %driver_data505, align 8, !dbg !9066
  %and506 = and i64 %362, 1572864, !dbg !9067
  %cmp507 = icmp eq i64 %and506, 1572864, !dbg !9068
  br i1 %cmp507, label %land.lhs.true509, label %if.end516, !dbg !9069

land.lhs.true509:                                 ; preds = %if.then504
  %363 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9070
  %revision510 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %363, i32 0, i32 12, !dbg !9071
  %364 = load i8, i8* %revision510, align 8, !dbg !9071
  %conv511 = zext i8 %364 to i32, !dbg !9070
  %cmp512 = icmp sge i32 %conv511, 162, !dbg !9072
  br i1 %cmp512, label %if.then514, label %if.end516, !dbg !9073

if.then514:                                       ; preds = %land.lhs.true509
  %365 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9074
  %tx_limit515 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %365, i32 0, i32 63, !dbg !9075
  store i32 0, i32* %tx_limit515, align 8, !dbg !9076
  br label %if.end516, !dbg !9074

if.end516:                                        ; preds = %if.then514, %land.lhs.true509, %if.then504
  br label %if.end517, !dbg !9077

if.end517:                                        ; preds = %if.end516, %if.end500
  %366 = load i8*, i8** %base, align 8, !dbg !9078
  %add.ptr518 = getelementptr i8, i8* %366, i64 388, !dbg !9079
  call void @writel(i32 0, i8* %add.ptr518) #13, !dbg !9080
  %367 = load i8*, i8** %base, align 8, !dbg !9081
  %add.ptr519 = getelementptr i8, i8* %367, i64 392, !dbg !9082
  %call520 = call i32 @readl(i8* %add.ptr519) #13, !dbg !9083
  store i32 %call520, i32* %phystate, align 4, !dbg !9084
  %368 = load i32, i32* %phystate, align 4, !dbg !9085
  %and521 = and i32 %368, 1048576, !dbg !9087
  %tobool522 = icmp ne i32 %and521, 0, !dbg !9087
  br i1 %tobool522, label %if.then523, label %if.end526, !dbg !9088

if.then523:                                       ; preds = %if.end517
  store i32 1, i32* %phystate_orig, align 4, !dbg !9089
  %369 = load i32, i32* %phystate, align 4, !dbg !9091
  %and524 = and i32 %369, -1048577, !dbg !9091
  store i32 %and524, i32* %phystate, align 4, !dbg !9091
  %370 = load i32, i32* %phystate, align 4, !dbg !9092
  %371 = load i8*, i8** %base, align 8, !dbg !9093
  %add.ptr525 = getelementptr i8, i8* %371, i64 392, !dbg !9094
  call void @writel(i32 %370, i8* %add.ptr525) #13, !dbg !9095
  br label %if.end526, !dbg !9096

if.end526:                                        ; preds = %if.then523, %if.end517
  %372 = load i8*, i8** %base, align 8, !dbg !9097
  %add.ptr527 = getelementptr i8, i8* %372, i64 384, !dbg !9098
  call void @writel(i32 15, i8* %add.ptr527) #13, !dbg !9099
  %373 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9100
  %driver_data528 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %373, i32 0, i32 6, !dbg !9102
  %374 = load i64, i64* %driver_data528, align 8, !dbg !9102
  %and529 = and i64 %374, 8192, !dbg !9103
  %tobool530 = icmp ne i64 %and529, 0, !dbg !9103
  br i1 %tobool530, label %if.then531, label %if.end568, !dbg !9104

if.then531:                                       ; preds = %if.end526
  %375 = load i8*, i8** %base, align 8, !dbg !9105
  %add.ptr532 = getelementptr i8, i8* %375, i64 132, !dbg !9108
  %call533 = call i32 @readl(i8* %add.ptr532) #13, !dbg !9109
  %and534 = and i32 %call533, 1073741824, !dbg !9110
  %tobool535 = icmp ne i32 %and534, 0, !dbg !9110
  br i1 %tobool535, label %land.lhs.true536, label %if.end567, !dbg !9111

land.lhs.true536:                                 ; preds = %if.then531
  %376 = load i8*, i8** %base, align 8, !dbg !9112
  %add.ptr537 = getelementptr i8, i8* %376, i64 132, !dbg !9113
  %call538 = call i32 @readl(i8* %add.ptr537) #13, !dbg !9114
  %and539 = and i32 %call538, 262144, !dbg !9115
  %tobool540 = icmp ne i32 %and539, 0, !dbg !9115
  br i1 %tobool540, label %land.lhs.true541, label %if.end567, !dbg !9116

land.lhs.true541:                                 ; preds = %land.lhs.true536
  %377 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9117
  %call542 = call i32 @nv_mgmt_acquire_sema(%struct.net_device* %377) #13, !dbg !9118
  %tobool543 = icmp ne i32 %call542, 0, !dbg !9118
  br i1 %tobool543, label %land.lhs.true544, label %if.end567, !dbg !9119

land.lhs.true544:                                 ; preds = %land.lhs.true541
  %378 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9120
  %call545 = call i32 @nv_mgmt_get_version(%struct.net_device* %378) #13, !dbg !9121
  %tobool546 = icmp ne i32 %call545, 0, !dbg !9121
  br i1 %tobool546, label %if.then547, label %if.end567, !dbg !9122

if.then547:                                       ; preds = %land.lhs.true544
  %379 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9123
  %mac_in_use = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %379, i32 0, i32 30, !dbg !9125
  store i32 1, i32* %mac_in_use, align 8, !dbg !9126
  %380 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9127
  %mgmt_version = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %380, i32 0, i32 31, !dbg !9129
  %381 = load i32, i32* %mgmt_version, align 4, !dbg !9129
  %cmp548 = icmp sgt i32 %381, 0, !dbg !9130
  br i1 %cmp548, label %if.then550, label %if.end555, !dbg !9131

if.then550:                                       ; preds = %if.then547
  %382 = load i8*, i8** %base, align 8, !dbg !9132
  %add.ptr551 = getelementptr i8, i8* %382, i64 632, !dbg !9133
  %call552 = call i32 @readl(i8* %add.ptr551) #13, !dbg !9134
  %and553 = and i32 %call552, 131072, !dbg !9135
  %383 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9136
  %mac_in_use554 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %383, i32 0, i32 30, !dbg !9137
  store i32 %and553, i32* %mac_in_use554, align 8, !dbg !9138
  br label %if.end555, !dbg !9136

if.end555:                                        ; preds = %if.then550, %if.then547
  %384 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9139
  %mac_in_use556 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %384, i32 0, i32 30, !dbg !9141
  %385 = load i32, i32* %mac_in_use556, align 8, !dbg !9141
  %tobool557 = icmp ne i32 %385, 0, !dbg !9139
  br i1 %tobool557, label %land.lhs.true558, label %if.else565, !dbg !9142

land.lhs.true558:                                 ; preds = %if.end555
  %386 = load i8*, i8** %base, align 8, !dbg !9143
  %add.ptr559 = getelementptr i8, i8* %386, i64 132, !dbg !9144
  %call560 = call i32 @readl(i8* %add.ptr559) #13, !dbg !9145
  %and561 = and i32 %call560, 983040, !dbg !9146
  %cmp562 = icmp eq i32 %and561, 262144, !dbg !9147
  br i1 %cmp562, label %if.then564, label %if.else565, !dbg !9148

if.then564:                                       ; preds = %land.lhs.true558
  store i32 1, i32* %phyinitialized, align 4, !dbg !9149
  br label %if.end566, !dbg !9151

if.else565:                                       ; preds = %land.lhs.true558, %if.end555
  br label %if.end566

if.end566:                                        ; preds = %if.else565, %if.then564
  br label %if.end567, !dbg !9152

if.end567:                                        ; preds = %if.end566, %land.lhs.true544, %land.lhs.true541, %land.lhs.true536, %if.then531
  br label %if.end568, !dbg !9153

if.end568:                                        ; preds = %if.end567, %if.end526
  store i32 1, i32* %i, align 4, !dbg !9154
  br label %for.cond569, !dbg !9155

for.cond569:                                      ; preds = %for.inc618, %if.end568
  %387 = load i32, i32* %i, align 4, !dbg !9156
  %cmp570 = icmp sle i32 %387, 32, !dbg !9157
  br i1 %cmp570, label %for.body572, label %for.end620, !dbg !9158

for.body572:                                      ; preds = %for.cond569
  call void @llvm.dbg.declare(metadata i32* %id1, metadata !9159, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.declare(metadata i32* %id2, metadata !9161, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.declare(metadata i32* %phyaddr, metadata !9163, metadata !DIExpression()), !dbg !9164
  %388 = load i32, i32* %i, align 4, !dbg !9165
  %and573 = and i32 %388, 31, !dbg !9166
  store i32 %and573, i32* %phyaddr, align 4, !dbg !9164
  %389 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9167
  %lock574 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %389, i32 0, i32 0, !dbg !9168
  store %struct.spinlock* %lock574, %struct.spinlock** %lock.addr.i707, align 8
  call void @arch_local_irq_disable() #15, !dbg !9169
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9172, !srcloc !9174
  %390 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i707, align 8, !dbg !9175
  %391 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %390, i32 0, i32 0, !dbg !9175
  %rlock.i708 = bitcast %union.anon.2* %391 to %struct.raw_spinlock*, !dbg !9175
  %392 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9177
  %393 = load i32, i32* %phyaddr, align 4, !dbg !9178
  %call575 = call i32 @mii_rw(%struct.net_device* %392, i32 %393, i32 2, i32 -1) #13, !dbg !9179
  store i32 %call575, i32* %id1, align 4, !dbg !9180
  %394 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9181
  %lock576 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %394, i32 0, i32 0, !dbg !9182
  store %struct.spinlock* %lock576, %struct.spinlock** %lock.addr.i709, align 8
  call void @arch_local_irq_enable() #15, !dbg !9183
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9186, !srcloc !9188
  %395 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i709, align 8, !dbg !9189
  %396 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %395, i32 0, i32 0, !dbg !9189
  %rlock.i710 = bitcast %union.anon.2* %396 to %struct.raw_spinlock*, !dbg !9189
  %397 = load i32, i32* %id1, align 4, !dbg !9191
  %cmp577 = icmp slt i32 %397, 0, !dbg !9193
  br i1 %cmp577, label %if.then582, label %lor.lhs.false579, !dbg !9194

lor.lhs.false579:                                 ; preds = %for.body572
  %398 = load i32, i32* %id1, align 4, !dbg !9195
  %cmp580 = icmp eq i32 %398, 65535, !dbg !9196
  br i1 %cmp580, label %if.then582, label %if.end583, !dbg !9197

if.then582:                                       ; preds = %lor.lhs.false579, %for.body572
  br label %for.inc618, !dbg !9198

if.end583:                                        ; preds = %lor.lhs.false579
  %399 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9199
  %lock584 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %399, i32 0, i32 0, !dbg !9200
  store %struct.spinlock* %lock584, %struct.spinlock** %lock.addr.i711, align 8
  call void @arch_local_irq_disable() #15, !dbg !9201
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9202, !srcloc !9174
  %400 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i711, align 8, !dbg !9203
  %401 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %400, i32 0, i32 0, !dbg !9203
  %rlock.i712 = bitcast %union.anon.2* %401 to %struct.raw_spinlock*, !dbg !9203
  %402 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9204
  %403 = load i32, i32* %phyaddr, align 4, !dbg !9205
  %call585 = call i32 @mii_rw(%struct.net_device* %402, i32 %403, i32 3, i32 -1) #13, !dbg !9206
  store i32 %call585, i32* %id2, align 4, !dbg !9207
  %404 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9208
  %lock586 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %404, i32 0, i32 0, !dbg !9209
  store %struct.spinlock* %lock586, %struct.spinlock** %lock.addr.i713, align 8
  call void @arch_local_irq_enable() #15, !dbg !9210
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9211, !srcloc !9188
  %405 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i713, align 8, !dbg !9212
  %406 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %405, i32 0, i32 0, !dbg !9212
  %rlock.i714 = bitcast %union.anon.2* %406 to %struct.raw_spinlock*, !dbg !9212
  %407 = load i32, i32* %id2, align 4, !dbg !9213
  %cmp587 = icmp slt i32 %407, 0, !dbg !9215
  br i1 %cmp587, label %if.then592, label %lor.lhs.false589, !dbg !9216

lor.lhs.false589:                                 ; preds = %if.end583
  %408 = load i32, i32* %id2, align 4, !dbg !9217
  %cmp590 = icmp eq i32 %408, 65535, !dbg !9218
  br i1 %cmp590, label %if.then592, label %if.end593, !dbg !9219

if.then592:                                       ; preds = %lor.lhs.false589, %if.end583
  br label %for.inc618, !dbg !9220

if.end593:                                        ; preds = %lor.lhs.false589
  %409 = load i32, i32* %id2, align 4, !dbg !9221
  %and594 = and i32 %409, 1008, !dbg !9222
  %410 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9223
  %phy_model = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %410, i32 0, i32 13, !dbg !9224
  store i32 %and594, i32* %phy_model, align 8, !dbg !9225
  %411 = load i32, i32* %id1, align 4, !dbg !9226
  %and595 = and i32 %411, 1023, !dbg !9227
  %shl596 = shl i32 %and595, 6, !dbg !9228
  store i32 %shl596, i32* %id1, align 4, !dbg !9229
  %412 = load i32, i32* %id2, align 4, !dbg !9230
  %and597 = and i32 %412, 64512, !dbg !9231
  %shr598 = ashr i32 %and597, 10, !dbg !9232
  store i32 %shr598, i32* %id2, align 4, !dbg !9233
  %413 = load i32, i32* %phyaddr, align 4, !dbg !9234
  %414 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9235
  %phyaddr599 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %414, i32 0, i32 10, !dbg !9236
  store i32 %413, i32* %phyaddr599, align 4, !dbg !9237
  %415 = load i32, i32* %id1, align 4, !dbg !9238
  %416 = load i32, i32* %id2, align 4, !dbg !9239
  %or600 = or i32 %415, %416, !dbg !9240
  %417 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9241
  %phy_oui = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %417, i32 0, i32 12, !dbg !9242
  store i32 %or600, i32* %phy_oui, align 4, !dbg !9243
  %418 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9244
  %phy_oui601 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %418, i32 0, i32 12, !dbg !9246
  %419 = load i32, i32* %phy_oui601, align 4, !dbg !9246
  %cmp602 = icmp eq i32 %419, 32, !dbg !9247
  br i1 %cmp602, label %if.then604, label %if.end606, !dbg !9248

if.then604:                                       ; preds = %if.end593
  %420 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9249
  %phy_oui605 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %420, i32 0, i32 12, !dbg !9250
  store i32 1842, i32* %phy_oui605, align 4, !dbg !9251
  br label %if.end606, !dbg !9249

if.end606:                                        ; preds = %if.then604, %if.end593
  %421 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9252
  %phy_oui607 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %421, i32 0, i32 12, !dbg !9254
  %422 = load i32, i32* %phy_oui607, align 4, !dbg !9254
  %cmp608 = icmp eq i32 %422, 1842, !dbg !9255
  br i1 %cmp608, label %land.lhs.true610, label %if.end617, !dbg !9256

land.lhs.true610:                                 ; preds = %if.end606
  %423 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9257
  %phy_model611 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %423, i32 0, i32 13, !dbg !9258
  %424 = load i32, i32* %phy_model611, align 8, !dbg !9258
  %cmp612 = icmp eq i32 %424, 272, !dbg !9259
  br i1 %cmp612, label %if.then614, label %if.end617, !dbg !9260

if.then614:                                       ; preds = %land.lhs.true610
  %425 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9261
  %426 = load i32, i32* %phyaddr, align 4, !dbg !9262
  %call615 = call i32 @mii_rw(%struct.net_device* %425, i32 %426, i32 23, i32 -1) #13, !dbg !9263
  %and616 = and i32 %call615, 1, !dbg !9264
  %427 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9265
  %phy_rev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %427, i32 0, i32 14, !dbg !9266
  store i32 %and616, i32* %phy_rev, align 4, !dbg !9267
  br label %if.end617, !dbg !9265

if.end617:                                        ; preds = %if.then614, %land.lhs.true610, %if.end606
  br label %for.end620, !dbg !9268

for.inc618:                                       ; preds = %if.then592, %if.then582
  %428 = load i32, i32* %i, align 4, !dbg !9269
  %inc619 = add i32 %428, 1, !dbg !9269
  store i32 %inc619, i32* %i, align 4, !dbg !9269
  br label %for.cond569, !dbg !9270, !llvm.loop !9271

for.end620:                                       ; preds = %if.end617, %for.cond569
  %429 = load i32, i32* %i, align 4, !dbg !9273
  %cmp621 = icmp eq i32 %429, 33, !dbg !9275
  br i1 %cmp621, label %if.then623, label %if.end625, !dbg !9276

if.then623:                                       ; preds = %for.end620
  %430 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9277
  %dev624 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %430, i32 0, i32 41, !dbg !9277
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev624, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0)) #14, !dbg !9277
  br label %out_error, !dbg !9279

if.end625:                                        ; preds = %for.end620
  %431 = load i32, i32* %phyinitialized, align 4, !dbg !9280
  %tobool626 = icmp ne i32 %431, 0, !dbg !9280
  br i1 %tobool626, label %if.else629, label %if.then627, !dbg !9282

if.then627:                                       ; preds = %if.end625
  %432 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9283
  %call628 = call i32 @phy_init(%struct.net_device* %432) #13, !dbg !9285
  br label %if.end636, !dbg !9286

if.else629:                                       ; preds = %if.end625
  call void @llvm.dbg.declare(metadata i32* %mii_status, metadata !9287, metadata !DIExpression()), !dbg !9289
  %433 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9290
  %434 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9291
  %phyaddr630 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %434, i32 0, i32 10, !dbg !9292
  %435 = load i32, i32* %phyaddr630, align 4, !dbg !9292
  %call631 = call i32 @mii_rw(%struct.net_device* %433, i32 %435, i32 1, i32 -1) #13, !dbg !9293
  store i32 %call631, i32* %mii_status, align 4, !dbg !9289
  %436 = load i32, i32* %mii_status, align 4, !dbg !9294
  %and632 = and i32 %436, 256, !dbg !9296
  %tobool633 = icmp ne i32 %and632, 0, !dbg !9296
  br i1 %tobool633, label %if.then634, label %if.end635, !dbg !9297

if.then634:                                       ; preds = %if.else629
  %437 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9298
  %gigabit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %437, i32 0, i32 15, !dbg !9299
  store i16 256, i16* %gigabit, align 8, !dbg !9300
  br label %if.end635, !dbg !9298

if.end635:                                        ; preds = %if.then634, %if.else629
  br label %if.end636

if.end636:                                        ; preds = %if.end635, %if.then627
  %438 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9301
  %linkspeed = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %438, i32 0, i32 6, !dbg !9302
  store i32 66536, i32* %linkspeed, align 4, !dbg !9303
  %439 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9304
  %duplex = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %439, i32 0, i32 7, !dbg !9305
  store i32 0, i32* %duplex, align 8, !dbg !9306
  %440 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9307
  %autoneg = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %440, i32 0, i32 8, !dbg !9308
  store i32 1, i32* %autoneg, align 4, !dbg !9309
  %441 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9310
  %call637 = call i32 @register_netdev(%struct.net_device* %441) #13, !dbg !9311
  store i32 %call637, i32* %err, align 4, !dbg !9312
  %442 = load i32, i32* %err, align 4, !dbg !9313
  %tobool638 = icmp ne i32 %442, 0, !dbg !9313
  br i1 %tobool638, label %if.then639, label %if.end641, !dbg !9315

if.then639:                                       ; preds = %if.end636
  %443 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9316
  %dev640 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %443, i32 0, i32 41, !dbg !9316
  %444 = load i32, i32* %err, align 4, !dbg !9316
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev640, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i32 %444) #14, !dbg !9316
  br label %out_error, !dbg !9318

if.end641:                                        ; preds = %if.end636
  %445 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9319
  call void @netif_carrier_off(%struct.net_device* %445) #13, !dbg !9320
  %446 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9321
  call void @nv_update_pause(%struct.net_device* %446, i32 0) #13, !dbg !9322
  %447 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9323
  call void @nv_start_tx(%struct.net_device* %447) #13, !dbg !9324
  %448 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9325
  call void @nv_stop_tx(%struct.net_device* %448) #13, !dbg !9326
  %449 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9327
  %driver_data642 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %449, i32 0, i32 6, !dbg !9329
  %450 = load i64, i64* %driver_data642, align 8, !dbg !9329
  %and643 = and i64 %450, 32, !dbg !9330
  %tobool644 = icmp ne i64 %and643, 0, !dbg !9330
  br i1 %tobool644, label %if.then645, label %if.end647, !dbg !9331

if.then645:                                       ; preds = %if.end641
  %451 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9332
  %452 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9333
  %features646 = getelementptr inbounds %struct.net_device, %struct.net_device* %452, i32 0, i32 15, !dbg !9334
  %453 = load i64, i64* %features646, align 8, !dbg !9334
  call void @nv_vlan_mode(%struct.net_device* %451, i64 %453) #13, !dbg !9335
  br label %if.end647, !dbg !9335

if.end647:                                        ; preds = %if.then645, %if.end641
  %454 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9336
  %dev648 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %454, i32 0, i32 41, !dbg !9336
  %455 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9336
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %455, i32 0, i32 0, !dbg !9336
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !9336
  %456 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9336
  %phy_oui649 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %456, i32 0, i32 12, !dbg !9336
  %457 = load i32, i32* %phy_oui649, align 4, !dbg !9336
  %458 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9336
  %phyaddr650 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %458, i32 0, i32 10, !dbg !9336
  %459 = load i32, i32* %phyaddr650, align 4, !dbg !9336
  %460 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9336
  %dev_addr651 = getelementptr inbounds %struct.net_device, %struct.net_device* %460, i32 0, i32 74, !dbg !9336
  %461 = load i8*, i8** %dev_addr651, align 8, !dbg !9336
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev648, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i8* %arraydecay, i32 %457, i32 %459, i8* %461) #14, !dbg !9336
  %462 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9337
  %dev652 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %462, i32 0, i32 41, !dbg !9337
  %463 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9337
  %features653 = getelementptr inbounds %struct.net_device, %struct.net_device* %463, i32 0, i32 15, !dbg !9337
  %464 = load i64, i64* %features653, align 8, !dbg !9337
  %and654 = and i64 %464, 32, !dbg !9337
  %tobool655 = icmp ne i64 %and654, 0, !dbg !9337
  %465 = zext i1 %tobool655 to i64, !dbg !9337
  %cond656 = select i1 %tobool655, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %466 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9337
  %features657 = getelementptr inbounds %struct.net_device, %struct.net_device* %466, i32 0, i32 15, !dbg !9337
  %467 = load i64, i64* %features657, align 8, !dbg !9337
  %and658 = and i64 %467, 3, !dbg !9337
  %tobool659 = icmp ne i64 %and658, 0, !dbg !9337
  %468 = zext i1 %tobool659 to i64, !dbg !9337
  %cond660 = select i1 %tobool659, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %469 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9337
  %features661 = getelementptr inbounds %struct.net_device, %struct.net_device* %469, i32 0, i32 15, !dbg !9337
  %470 = load i64, i64* %features661, align 8, !dbg !9337
  %and662 = and i64 %470, 384, !dbg !9337
  %tobool663 = icmp ne i64 %and662, 0, !dbg !9337
  %471 = zext i1 %tobool663 to i64, !dbg !9337
  %cond664 = select i1 %tobool663, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %472 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9337
  %features665 = getelementptr inbounds %struct.net_device, %struct.net_device* %472, i32 0, i32 15, !dbg !9337
  %473 = load i64, i64* %features665, align 8, !dbg !9337
  %and666 = and i64 %473, 4398046511104, !dbg !9337
  %tobool667 = icmp ne i64 %and666, 0, !dbg !9337
  %474 = zext i1 %tobool667 to i64, !dbg !9337
  %cond668 = select i1 %tobool667, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %475 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9337
  %driver_data669 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %475, i32 0, i32 6, !dbg !9337
  %476 = load i64, i64* %driver_data669, align 8, !dbg !9337
  %and670 = and i64 %476, 256, !dbg !9337
  %tobool671 = icmp ne i64 %and670, 0, !dbg !9337
  %477 = zext i1 %tobool671 to i64, !dbg !9337
  %cond672 = select i1 %tobool671, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %478 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9337
  %driver_data673 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %478, i32 0, i32 6, !dbg !9337
  %479 = load i64, i64* %driver_data673, align 8, !dbg !9337
  %and674 = and i64 %479, 8192, !dbg !9337
  %tobool675 = icmp ne i64 %and674, 0, !dbg !9337
  %480 = zext i1 %tobool675 to i64, !dbg !9337
  %cond676 = select i1 %tobool675, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %481 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !9337
  %driver_data677 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %481, i32 0, i32 6, !dbg !9337
  %482 = load i64, i64* %driver_data677, align 8, !dbg !9337
  %and678 = and i64 %482, 1, !dbg !9337
  %tobool679 = icmp ne i64 %and678, 0, !dbg !9337
  %483 = zext i1 %tobool679 to i64, !dbg !9337
  %cond680 = select i1 %tobool679, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %484 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9337
  %gigabit681 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %484, i32 0, i32 15, !dbg !9337
  %485 = load i16, i16* %gigabit681, align 8, !dbg !9337
  %conv682 = zext i16 %485 to i32, !dbg !9337
  %cmp683 = icmp eq i32 %conv682, 256, !dbg !9337
  %486 = zext i1 %cmp683 to i64, !dbg !9337
  %cond685 = select i1 %cmp683, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %487 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9337
  %need_linktimer686 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %487, i32 0, i32 51, !dbg !9337
  %488 = load i32, i32* %need_linktimer686, align 8, !dbg !9337
  %tobool687 = icmp ne i32 %488, 0, !dbg !9337
  %489 = zext i1 %tobool687 to i64, !dbg !9337
  %cond688 = select i1 %tobool687, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %490 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9337
  %msi_flags689 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %490, i32 0, i32 69, !dbg !9337
  %491 = load i32, i32* %msi_flags689, align 4, !dbg !9337
  %and690 = and i32 %491, 16, !dbg !9337
  %tobool691 = icmp ne i32 %and690, 0, !dbg !9337
  %492 = zext i1 %tobool691 to i64, !dbg !9337
  %cond692 = select i1 %tobool691, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %493 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9337
  %msi_flags693 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %493, i32 0, i32 69, !dbg !9337
  %494 = load i32, i32* %msi_flags693, align 4, !dbg !9337
  %and694 = and i32 %494, 32, !dbg !9337
  %tobool695 = icmp ne i32 %and694, 0, !dbg !9337
  %495 = zext i1 %tobool695 to i64, !dbg !9337
  %cond696 = select i1 %tobool695, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !9337
  %496 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9337
  %desc_ver697 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %496, i32 0, i32 24, !dbg !9337
  %497 = load i32, i32* %desc_ver697, align 8, !dbg !9337
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev652, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i8* %cond656, i8* %cond660, i8* %cond664, i8* %cond668, i8* %cond672, i8* %cond676, i8* %cond680, i8* %cond685, i8* %cond688, i8* %cond692, i8* %cond696, i32 %497) #14, !dbg !9337
  store i32 0, i32* %retval, align 4, !dbg !9338
  br label %return, !dbg !9338

out_error:                                        ; preds = %if.then639, %if.then623
  call void @llvm.dbg.label(metadata !9339), !dbg !9340
  %498 = load i32, i32* %phystate_orig, align 4, !dbg !9341
  %tobool698 = icmp ne i32 %498, 0, !dbg !9341
  br i1 %tobool698, label %if.then699, label %if.end702, !dbg !9343

if.then699:                                       ; preds = %out_error
  %499 = load i32, i32* %phystate, align 4, !dbg !9344
  %or700 = or i32 %499, 1048576, !dbg !9345
  %500 = load i8*, i8** %base, align 8, !dbg !9346
  %add.ptr701 = getelementptr i8, i8* %500, i64 392, !dbg !9347
  call void @writel(i32 %or700, i8* %add.ptr701) #13, !dbg !9348
  br label %if.end702, !dbg !9348

if.end702:                                        ; preds = %if.then699, %out_error
  br label %out_freering, !dbg !9341

out_freering:                                     ; preds = %if.end702, %if.then217
  call void @llvm.dbg.label(metadata !9349), !dbg !9350
  %501 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9351
  call void @free_rings(%struct.net_device* %501) #13, !dbg !9352
  br label %out_unmap, !dbg !9352

out_unmap:                                        ; preds = %out_freering, %if.then196, %if.then175
  call void @llvm.dbg.label(metadata !9353), !dbg !9354
  %502 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9355
  %call703 = call i8* @get_hwbase(%struct.net_device* %502) #13, !dbg !9356
  call void @iounmap(i8* %call703) #13, !dbg !9357
  br label %out_relreg, !dbg !9357

out_relreg:                                       ; preds = %out_unmap, %if.then162, %if.then78
  call void @llvm.dbg.label(metadata !9358), !dbg !9359
  %503 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9360
  call void @pci_release_regions(%struct.pci_dev* %503) #13, !dbg !9361
  br label %out_disable, !dbg !9361

out_disable:                                      ; preds = %out_relreg, %if.then29
  call void @llvm.dbg.label(metadata !9362), !dbg !9363
  %504 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9364
  call void @pci_disable_device(%struct.pci_dev* %504) #13, !dbg !9365
  br label %out_free, !dbg !9365

out_free:                                         ; preds = %out_disable, %if.then26
  call void @llvm.dbg.label(metadata !9366), !dbg !9367
  %505 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9368
  %txrx_stats704 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %505, i32 0, i32 50, !dbg !9369
  %506 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats704, align 8, !dbg !9369
  %507 = bitcast %struct.nv_txrx_stats* %506 to i8*, !dbg !9368
  call void @free_percpu(i8* %507) #13, !dbg !9370
  br label %out_alloc_percpu, !dbg !9370

out_alloc_percpu:                                 ; preds = %out_free, %if.then21
  call void @llvm.dbg.label(metadata !9371), !dbg !9372
  %508 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9373
  call void @free_netdev(%struct.net_device* %508) #13, !dbg !9374
  br label %out, !dbg !9374

out:                                              ; preds = %out_alloc_percpu, %if.then3
  call void @llvm.dbg.label(metadata !9375), !dbg !9376
  %509 = load i32, i32* %err, align 4, !dbg !9377
  store i32 %509, i32* %retval, align 4, !dbg !9378
  br label %return, !dbg !9378

return:                                           ; preds = %out, %if.end647
  %510 = load i32, i32* %retval, align 4, !dbg !9379
  ret i32 %510, !dbg !9379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_remove(%struct.pci_dev* %pci_dev) #2 !dbg !9380 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9383, metadata !DIExpression()), !dbg !9384
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9385
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #13, !dbg !9386
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !9386
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !9384
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !9387, metadata !DIExpression()), !dbg !9388
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9389
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !9390
  %3 = bitcast i8* %call1 to %struct.fe_priv*, !dbg !9390
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !9388
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9391
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 50, !dbg !9392
  %5 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !9392
  %6 = bitcast %struct.nv_txrx_stats* %5 to i8*, !dbg !9391
  call void @free_percpu(i8* %6) #13, !dbg !9393
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9394
  call void @unregister_netdev(%struct.net_device* %7) #13, !dbg !9395
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9396
  call void @nv_restore_mac_addr(%struct.pci_dev* %8) #13, !dbg !9397
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9398
  call void @nv_restore_phy(%struct.net_device* %9) #13, !dbg !9399
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9400
  call void @nv_mgmt_release_sema(%struct.net_device* %10) #13, !dbg !9401
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9402
  call void @free_rings(%struct.net_device* %11) #13, !dbg !9403
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9404
  %call2 = call i8* @get_hwbase(%struct.net_device* %12) #13, !dbg !9405
  call void @iounmap(i8* %call2) #13, !dbg !9406
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9407
  call void @pci_release_regions(%struct.pci_dev* %13) #13, !dbg !9408
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !9409
  call void @pci_disable_device(%struct.pci_dev* %14) #13, !dbg !9410
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9411
  call void @free_netdev(%struct.net_device* %15) #13, !dbg !9412
  ret void, !dbg !9413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_shutdown(%struct.pci_dev* %pdev) #2 !dbg !9414 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9415, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9417, metadata !DIExpression()), !dbg !9418
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9419
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #13, !dbg !9420
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !9420
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !9418
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !9421, metadata !DIExpression()), !dbg !9422
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9423
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !9424
  %3 = bitcast i8* %call1 to %struct.fe_priv*, !dbg !9424
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !9422
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9425
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %4) #13, !dbg !9427
  br i1 %call2, label %if.then, label %if.end, !dbg !9428

if.then:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9429
  %call3 = call i32 @nv_close(%struct.net_device* %5) #13, !dbg !9430
  br label %if.end, !dbg !9430

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* @system_state, align 4, !dbg !9431
  %cmp = icmp ne i32 %6, 4, !dbg !9433
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9434

if.then4:                                         ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9435
  call void @nv_restore_mac_addr(%struct.pci_dev* %7) #13, !dbg !9436
  br label %if.end5, !dbg !9436

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9437
  call void @pci_disable_device(%struct.pci_dev* %8) #13, !dbg !9438
  %9 = load i32, i32* @system_state, align 4, !dbg !9439
  %cmp6 = icmp eq i32 %9, 4, !dbg !9441
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !9442

if.then7:                                         ; preds = %if.end5
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9443
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9445
  %wolenabled = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 11, !dbg !9446
  %12 = load i32, i32* %wolenabled, align 8, !dbg !9446
  %tobool = icmp ne i32 %12, 0, !dbg !9445
  %call8 = call i32 @pci_wake_from_d3(%struct.pci_dev* %10, i1 zeroext %tobool) #13, !dbg !9447
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9448
  %call9 = call i32 @pci_set_power_state(%struct.pci_dev* %13, i32 3) #13, !dbg !9449
  br label %if.end10, !dbg !9450

if.end10:                                         ; preds = %if.then7, %if.end5
  ret void, !dbg !9451
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #2 !dbg !9452 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9457
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !9458
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !9459
  ret i8* %add.ptr, !dbg !9460
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_init(%struct.u64_stats_sync* %syncp) #2 !dbg !9461 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !9465, metadata !DIExpression()), !dbg !9466
  ret void, !dbg !9467
}

; Function Attrs: noredzone
declare dso_local i8* @__alloc_percpu(i64, i64) #1

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_do_rx_refill(%struct.timer_list* %t) #2 !dbg !9468 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fe_priv*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !9469, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9473, metadata !DIExpression()), !dbg !9475
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !9475
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !9475
  store i8* %1, i8** %__mptr, align 8, !dbg !9475
  br label %do.body, !dbg !9475

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9476

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9475
  %add.ptr = getelementptr i8, i8* %2, i64 -864, !dbg !9475
  %3 = bitcast i8* %add.ptr to %struct.fe_priv*, !dbg !9475
  store %struct.fe_priv* %3, %struct.fe_priv** %tmp, align 8, !dbg !9476
  %4 = load %struct.fe_priv*, %struct.fe_priv** %tmp, align 8, !dbg !9475
  store %struct.fe_priv* %4, %struct.fe_priv** %np, align 8, !dbg !9472
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9478
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 2, !dbg !9479
  call void @napi_schedule(%struct.napi_struct* %napi) #13, !dbg !9480
  ret void, !dbg !9481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_do_nic_poll(%struct.timer_list* %t) #2 !dbg !9482 {
entry:
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !9483, metadata !DIExpression()), !dbg !9485
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !9493
  %t.addr = alloca %struct.timer_list*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fe_priv*, align 8
  %dev = alloca %struct.net_device*, align 8
  %base = alloca i8*, align 8
  %mask = alloca i32, align 4
  %flags = alloca i64, align 8
  %irq = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9499, metadata !DIExpression()), !dbg !9501
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !9501
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !9501
  store i8* %1, i8** %__mptr, align 8, !dbg !9501
  br label %do.body, !dbg !9501

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9502

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9501
  %add.ptr = getelementptr i8, i8* %2, i64 -904, !dbg !9501
  %3 = bitcast i8* %add.ptr to %struct.fe_priv*, !dbg !9501
  store %struct.fe_priv* %3, %struct.fe_priv** %tmp, align 8, !dbg !9502
  %4 = load %struct.fe_priv*, %struct.fe_priv** %tmp, align 8, !dbg !9501
  store %struct.fe_priv* %4, %struct.fe_priv** %np, align 8, !dbg !9498
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9504, metadata !DIExpression()), !dbg !9505
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9506
  %dev1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 1, !dbg !9507
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9507
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !9505
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9508, metadata !DIExpression()), !dbg !9509
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9510
  %call = call i8* @get_hwbase(%struct.net_device* %7) #13, !dbg !9511
  store i8* %call, i8** %base, align 8, !dbg !9509
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !9512, metadata !DIExpression()), !dbg !9513
  store i32 0, i32* %mask, align 4, !dbg !9513
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9514, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !9516, metadata !DIExpression()), !dbg !9517
  store i32 0, i32* %irq, align 4, !dbg !9517
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9518
  %call2 = call i32 @using_multi_irqs(%struct.net_device* %8) #13, !dbg !9520
  %tobool = icmp ne i32 %call2, 0, !dbg !9520
  br i1 %tobool, label %if.else6, label %if.then, !dbg !9521

if.then:                                          ; preds = %do.end
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9522
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 69, !dbg !9525
  %10 = load i32, i32* %msi_flags, align 4, !dbg !9525
  %and = and i32 %10, 128, !dbg !9526
  %tobool3 = icmp ne i32 %and, 0, !dbg !9526
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !9527

if.then4:                                         ; preds = %if.then
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9528
  %msi_x_entry = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 70, !dbg !9529
  %arrayidx = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry, i64 0, i64 0, !dbg !9528
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 0, !dbg !9530
  %12 = load i32, i32* %vector, align 8, !dbg !9530
  store i32 %12, i32* %irq, align 4, !dbg !9531
  br label %if.end, !dbg !9532

if.else:                                          ; preds = %if.then
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9533
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 20, !dbg !9534
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !9534
  %irq5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 43, !dbg !9535
  %15 = load i32, i32* %irq5, align 4, !dbg !9535
  store i32 %15, i32* %irq, align 4, !dbg !9536
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9537
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 23, !dbg !9538
  %17 = load i32, i32* %irqmask, align 4, !dbg !9538
  store i32 %17, i32* %mask, align 4, !dbg !9539
  br label %if.end32, !dbg !9540

if.else6:                                         ; preds = %do.end
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9541
  %nic_poll_irq = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 47, !dbg !9544
  %19 = load i32, i32* %nic_poll_irq, align 8, !dbg !9544
  %and7 = and i32 %19, 135, !dbg !9545
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9545
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !9546

if.then9:                                         ; preds = %if.else6
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9547
  %msi_x_entry10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 70, !dbg !9549
  %arrayidx11 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry10, i64 0, i64 0, !dbg !9547
  %vector12 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx11, i32 0, i32 0, !dbg !9550
  %21 = load i32, i32* %vector12, align 8, !dbg !9550
  store i32 %21, i32* %irq, align 4, !dbg !9551
  %22 = load i32, i32* %mask, align 4, !dbg !9552
  %or = or i32 %22, 135, !dbg !9552
  store i32 %or, i32* %mask, align 4, !dbg !9552
  br label %if.end13, !dbg !9553

if.end13:                                         ; preds = %if.then9, %if.else6
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9554
  %nic_poll_irq14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 47, !dbg !9556
  %24 = load i32, i32* %nic_poll_irq14, align 8, !dbg !9556
  %and15 = and i32 %24, 280, !dbg !9557
  %tobool16 = icmp ne i32 %and15, 0, !dbg !9557
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !9558

if.then17:                                        ; preds = %if.end13
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9559
  %msi_x_entry18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 70, !dbg !9561
  %arrayidx19 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry18, i64 0, i64 1, !dbg !9559
  %vector20 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx19, i32 0, i32 0, !dbg !9562
  %26 = load i32, i32* %vector20, align 8, !dbg !9562
  store i32 %26, i32* %irq, align 4, !dbg !9563
  %27 = load i32, i32* %mask, align 4, !dbg !9564
  %or21 = or i32 %27, 280, !dbg !9564
  store i32 %or21, i32* %mask, align 4, !dbg !9564
  br label %if.end22, !dbg !9565

if.end22:                                         ; preds = %if.then17, %if.end13
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9566
  %nic_poll_irq23 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 47, !dbg !9568
  %29 = load i32, i32* %nic_poll_irq23, align 8, !dbg !9568
  %and24 = and i32 %29, 33376, !dbg !9569
  %tobool25 = icmp ne i32 %and24, 0, !dbg !9569
  br i1 %tobool25, label %if.then26, label %if.end31, !dbg !9570

if.then26:                                        ; preds = %if.end22
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9571
  %msi_x_entry27 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 70, !dbg !9573
  %arrayidx28 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry27, i64 0, i64 2, !dbg !9571
  %vector29 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx28, i32 0, i32 0, !dbg !9574
  %31 = load i32, i32* %vector29, align 8, !dbg !9574
  store i32 %31, i32* %irq, align 4, !dbg !9575
  %32 = load i32, i32* %mask, align 4, !dbg !9576
  %or30 = or i32 %32, 33376, !dbg !9576
  store i32 %or30, i32* %mask, align 4, !dbg !9576
  br label %if.end31, !dbg !9577

if.end31:                                         ; preds = %if.then26, %if.end22
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end
  %33 = load i32, i32* %irq, align 4, !dbg !9578
  call void @disable_irq_nosync_lockdep_irqsave(i32 %33, i64* %flags) #13, !dbg !9579
  %34 = load i32, i32* %irq, align 4, !dbg !9580
  call void @synchronize_irq(i32 %34) #13, !dbg !9581
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9582
  %recover_error = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 17, !dbg !9583
  %36 = load i32, i32* %recover_error, align 8, !dbg !9583
  %tobool33 = icmp ne i32 %36, 0, !dbg !9582
  br i1 %tobool33, label %if.then34, label %if.end68, !dbg !9584

if.then34:                                        ; preds = %if.end32
  %37 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9585
  %recover_error35 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %37, i32 0, i32 17, !dbg !9586
  store i32 0, i32* %recover_error35, align 8, !dbg !9587
  %38 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9588
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %38, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0)) #14, !dbg !9589
  %39 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9590
  %call36 = call zeroext i1 @netif_running(%struct.net_device* %39) #13, !dbg !9591
  br i1 %call36, label %if.then37, label %if.end67, !dbg !9592

if.then37:                                        ; preds = %if.then34
  %40 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9593
  call void @netif_tx_lock_bh(%struct.net_device* %40) #13, !dbg !9594
  %41 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9595
  call void @netif_addr_lock(%struct.net_device* %41) #13, !dbg !9596
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9597
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 0, !dbg !9598
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9599, !srcloc !9601
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9602
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !9602
  %rlock.i = bitcast %union.anon.2* %44 to %struct.raw_spinlock*, !dbg !9602
  %45 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9604
  call void @nv_stop_rxtx(%struct.net_device* %45) #13, !dbg !9605
  %46 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9606
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %46, i32 0, i32 27, !dbg !9608
  %47 = load i32, i32* %driver_data, align 4, !dbg !9608
  %and38 = and i32 %47, 256, !dbg !9609
  %tobool39 = icmp ne i32 %and38, 0, !dbg !9609
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !9610

if.then40:                                        ; preds = %if.then37
  %48 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9611
  call void @nv_mac_reset(%struct.net_device* %48) #13, !dbg !9612
  br label %if.end41, !dbg !9612

if.end41:                                         ; preds = %if.then40, %if.then37
  %49 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9613
  call void @nv_txrx_reset(%struct.net_device* %49) #13, !dbg !9614
  %50 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9615
  call void @nv_drain_rxtx(%struct.net_device* %50) #13, !dbg !9616
  %51 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9617
  call void @set_bufsize(%struct.net_device* %51) #13, !dbg !9618
  %52 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9619
  %call42 = call i32 @nv_init_ring(%struct.net_device* %52) #13, !dbg !9621
  %tobool43 = icmp ne i32 %call42, 0, !dbg !9621
  br i1 %tobool43, label %if.then44, label %if.end49, !dbg !9622

if.then44:                                        ; preds = %if.end41
  %53 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9623
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %53, i32 0, i32 5, !dbg !9626
  %54 = load i32, i32* %in_shutdown, align 8, !dbg !9626
  %tobool45 = icmp ne i32 %54, 0, !dbg !9623
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !9627

if.then46:                                        ; preds = %if.then44
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9628
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 44, !dbg !9629
  %56 = load volatile i64, i64* @jiffies, align 8, !dbg !9630
  %add = add i64 %56, 13, !dbg !9631
  %call47 = call i32 @mod_timer(%struct.timer_list* %oom_kick, i64 %add) #13, !dbg !9632
  br label %if.end48, !dbg !9632

if.end48:                                         ; preds = %if.then46, %if.then44
  br label %if.end49, !dbg !9633

if.end49:                                         ; preds = %if.end48, %if.end41
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9634
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 42, !dbg !9635
  %58 = load i32, i32* %rx_buf_sz, align 8, !dbg !9635
  %59 = load i8*, i8** %base, align 8, !dbg !9636
  %add.ptr50 = getelementptr i8, i8* %59, i64 144, !dbg !9637
  call void @writel(i32 %58, i8* %add.ptr50) #13, !dbg !9638
  %60 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9639
  call void @setup_hw_rings(%struct.net_device* %60, i32 3) #13, !dbg !9640
  %61 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9641
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %61, i32 0, i32 48, !dbg !9642
  %62 = load i32, i32* %rx_ring_size, align 4, !dbg !9642
  %sub = sub i32 %62, 1, !dbg !9643
  %shl = shl i32 %sub, 16, !dbg !9644
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9645
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 62, !dbg !9646
  %64 = load i32, i32* %tx_ring_size, align 4, !dbg !9646
  %sub51 = sub i32 %64, 1, !dbg !9647
  %shl52 = shl i32 %sub51, 0, !dbg !9648
  %add53 = add i32 %shl, %shl52, !dbg !9649
  %65 = load i8*, i8** %base, align 8, !dbg !9650
  %add.ptr54 = getelementptr i8, i8* %65, i64 264, !dbg !9651
  call void @writel(i32 %add53, i8* %add.ptr54) #13, !dbg !9652
  %66 = load i8*, i8** %base, align 8, !dbg !9653
  call void @pci_push(i8* %66) #13, !dbg !9654
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9655
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 25, !dbg !9656
  %68 = load i32, i32* %txrxctl_bits, align 4, !dbg !9656
  %or55 = or i32 1, %68, !dbg !9657
  %69 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9658
  %call56 = call i8* @get_hwbase(%struct.net_device* %69) #13, !dbg !9659
  %add.ptr57 = getelementptr i8, i8* %call56, i64 324, !dbg !9660
  call void @writel(i32 %or55, i8* %add.ptr57) #13, !dbg !9661
  %70 = load i8*, i8** %base, align 8, !dbg !9662
  call void @pci_push(i8* %70) #13, !dbg !9663
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9664
  %msi_flags58 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 69, !dbg !9666
  %72 = load i32, i32* %msi_flags58, align 4, !dbg !9666
  %and59 = and i32 %72, 128, !dbg !9667
  %tobool60 = icmp ne i32 %and59, 0, !dbg !9667
  br i1 %tobool60, label %if.else63, label %if.then61, !dbg !9668

if.then61:                                        ; preds = %if.end49
  %73 = load i8*, i8** %base, align 8, !dbg !9669
  %add.ptr62 = getelementptr i8, i8* %73, i64 0, !dbg !9670
  call void @writel(i32 33791, i8* %add.ptr62) #13, !dbg !9671
  br label %if.end65, !dbg !9671

if.else63:                                        ; preds = %if.end49
  %74 = load i8*, i8** %base, align 8, !dbg !9672
  %add.ptr64 = getelementptr i8, i8* %74, i64 1008, !dbg !9673
  call void @writel(i32 33791, i8* %add.ptr64) #13, !dbg !9674
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  %75 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9675
  call void @nv_start_rxtx(%struct.net_device* %75) #13, !dbg !9676
  %76 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9677
  %lock66 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %76, i32 0, i32 0, !dbg !9678
  store %struct.spinlock* %lock66, %struct.spinlock** %lock.addr.i106, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9679, !srcloc !9681
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !9682
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !9682
  %rlock.i107 = bitcast %union.anon.2* %78 to %struct.raw_spinlock*, !dbg !9682
  %79 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9684
  call void @netif_addr_unlock(%struct.net_device* %79) #13, !dbg !9685
  %80 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9686
  call void @netif_tx_unlock_bh(%struct.net_device* %80) #13, !dbg !9687
  br label %if.end67, !dbg !9688

if.end67:                                         ; preds = %if.end65, %if.then34
  br label %if.end68, !dbg !9689

if.end68:                                         ; preds = %if.end67, %if.end32
  %81 = load i32, i32* %mask, align 4, !dbg !9690
  %82 = load i8*, i8** %base, align 8, !dbg !9691
  %add.ptr69 = getelementptr i8, i8* %82, i64 4, !dbg !9692
  call void @writel(i32 %81, i8* %add.ptr69) #13, !dbg !9693
  %83 = load i8*, i8** %base, align 8, !dbg !9694
  call void @pci_push(i8* %83) #13, !dbg !9695
  %84 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9696
  %call70 = call i32 @using_multi_irqs(%struct.net_device* %84) #13, !dbg !9698
  %tobool71 = icmp ne i32 %call70, 0, !dbg !9698
  br i1 %tobool71, label %if.else80, label %if.then72, !dbg !9699

if.then72:                                        ; preds = %if.end68
  %85 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9700
  %nic_poll_irq73 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %85, i32 0, i32 47, !dbg !9702
  store i32 0, i32* %nic_poll_irq73, align 8, !dbg !9703
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9704
  %call74 = call zeroext i1 @nv_optimized(%struct.fe_priv* %86) #13, !dbg !9706
  br i1 %call74, label %if.then75, label %if.else77, !dbg !9707

if.then75:                                        ; preds = %if.then72
  %87 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9708
  %88 = bitcast %struct.net_device* %87 to i8*, !dbg !9708
  %call76 = call i32 @nv_nic_irq_optimized(i32 0, i8* %88) #13, !dbg !9709
  br label %if.end79, !dbg !9709

if.else77:                                        ; preds = %if.then72
  %89 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9710
  %90 = bitcast %struct.net_device* %89 to i8*, !dbg !9710
  %call78 = call i32 @nv_nic_irq(i32 0, i8* %90) #13, !dbg !9711
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then75
  br label %if.end105, !dbg !9712

if.else80:                                        ; preds = %if.end68
  %91 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9713
  %nic_poll_irq81 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %91, i32 0, i32 47, !dbg !9716
  %92 = load i32, i32* %nic_poll_irq81, align 8, !dbg !9716
  %and82 = and i32 %92, 135, !dbg !9717
  %tobool83 = icmp ne i32 %and82, 0, !dbg !9717
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !9718

if.then84:                                        ; preds = %if.else80
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9719
  %nic_poll_irq85 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 47, !dbg !9721
  %94 = load i32, i32* %nic_poll_irq85, align 8, !dbg !9722
  %and86 = and i32 %94, -136, !dbg !9722
  store i32 %and86, i32* %nic_poll_irq85, align 8, !dbg !9722
  %95 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9723
  %96 = bitcast %struct.net_device* %95 to i8*, !dbg !9723
  %call87 = call i32 @nv_nic_irq_rx(i32 0, i8* %96) #13, !dbg !9724
  br label %if.end88, !dbg !9725

if.end88:                                         ; preds = %if.then84, %if.else80
  %97 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9726
  %nic_poll_irq89 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %97, i32 0, i32 47, !dbg !9728
  %98 = load i32, i32* %nic_poll_irq89, align 8, !dbg !9728
  %and90 = and i32 %98, 280, !dbg !9729
  %tobool91 = icmp ne i32 %and90, 0, !dbg !9729
  br i1 %tobool91, label %if.then92, label %if.end96, !dbg !9730

if.then92:                                        ; preds = %if.end88
  %99 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9731
  %nic_poll_irq93 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %99, i32 0, i32 47, !dbg !9733
  %100 = load i32, i32* %nic_poll_irq93, align 8, !dbg !9734
  %and94 = and i32 %100, -281, !dbg !9734
  store i32 %and94, i32* %nic_poll_irq93, align 8, !dbg !9734
  %101 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9735
  %102 = bitcast %struct.net_device* %101 to i8*, !dbg !9735
  %call95 = call i32 @nv_nic_irq_tx(i32 0, i8* %102) #13, !dbg !9736
  br label %if.end96, !dbg !9737

if.end96:                                         ; preds = %if.then92, %if.end88
  %103 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9738
  %nic_poll_irq97 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %103, i32 0, i32 47, !dbg !9740
  %104 = load i32, i32* %nic_poll_irq97, align 8, !dbg !9740
  %and98 = and i32 %104, 33376, !dbg !9741
  %tobool99 = icmp ne i32 %and98, 0, !dbg !9741
  br i1 %tobool99, label %if.then100, label %if.end104, !dbg !9742

if.then100:                                       ; preds = %if.end96
  %105 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9743
  %nic_poll_irq101 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %105, i32 0, i32 47, !dbg !9745
  %106 = load i32, i32* %nic_poll_irq101, align 8, !dbg !9746
  %and102 = and i32 %106, -33377, !dbg !9746
  store i32 %and102, i32* %nic_poll_irq101, align 8, !dbg !9746
  %107 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9747
  %108 = bitcast %struct.net_device* %107 to i8*, !dbg !9747
  %call103 = call i32 @nv_nic_irq_other(i32 0, i8* %108) #13, !dbg !9748
  br label %if.end104, !dbg !9749

if.end104:                                        ; preds = %if.then100, %if.end96
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end79
  %109 = load i32, i32* %irq, align 4, !dbg !9750
  call void @enable_irq_lockdep_irqrestore(i32 %109, i64* %flags) #13, !dbg !9751
  ret void, !dbg !9752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_do_stats_poll(%struct.timer_list* %t) #2 !dbg !9753 {
entry:
  %lock.addr.i8 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i8, metadata !9483, metadata !DIExpression()), !dbg !9754
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9758, metadata !DIExpression()), !dbg !9762
  %tmp.i = alloca i32, align 4
  %t.addr = alloca %struct.timer_list*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fe_priv*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !9764, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !9766, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9768, metadata !DIExpression()), !dbg !9770
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !9770
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !9770
  store i8* %1, i8** %__mptr, align 8, !dbg !9770
  br label %do.body, !dbg !9770

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9771

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9770
  %add.ptr = getelementptr i8, i8* %2, i64 -944, !dbg !9770
  %3 = bitcast i8* %add.ptr to %struct.fe_priv*, !dbg !9770
  store %struct.fe_priv* %3, %struct.fe_priv** %tmp, align 8, !dbg !9771
  %4 = load %struct.fe_priv*, %struct.fe_priv** %tmp, align 8, !dbg !9770
  store %struct.fe_priv* %4, %struct.fe_priv** %np, align 8, !dbg !9767
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9773, metadata !DIExpression()), !dbg !9774
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9775
  %dev1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 1, !dbg !9776
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9776
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !9774
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9777
  %hwstats_lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 3, !dbg !9778
  store %struct.spinlock* %hwstats_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9779, !srcloc !9782
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9783
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9783
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !9783
  store i32 1, i32* %tmp.i, align 4, !dbg !9779
  %10 = load i32, i32* %tmp.i, align 4, !dbg !9785
  %tobool = icmp ne i32 %10, 0, !dbg !9786
  br i1 %tobool, label %if.then, label %if.end, !dbg !9787

if.then:                                          ; preds = %do.end
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9788
  call void @nv_update_stats(%struct.net_device* %11) #13, !dbg !9789
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9790
  %hwstats_lock2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 3, !dbg !9791
  store %struct.spinlock* %hwstats_lock2, %struct.spinlock** %lock.addr.i8, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9792, !srcloc !9681
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i8, align 8, !dbg !9793
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !9793
  %rlock.i9 = bitcast %union.anon.2* %14 to %struct.raw_spinlock*, !dbg !9793
  br label %if.end, !dbg !9794

if.end:                                           ; preds = %if.then, %do.end
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9795
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 5, !dbg !9797
  %16 = load i32, i32* %in_shutdown, align 8, !dbg !9797
  %tobool3 = icmp ne i32 %16, 0, !dbg !9795
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !9798

if.then4:                                         ; preds = %if.end
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9799
  %stats_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 46, !dbg !9800
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !9801
  %add = add i64 %18, 2500, !dbg !9802
  %call5 = call i64 @round_jiffies(i64 %add) #13, !dbg !9803
  %call6 = call i32 @mod_timer(%struct.timer_list* %stats_poll, i64 %call5) #13, !dbg !9804
  br label %if.end7, !dbg !9804

if.end7:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !9805
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_set_dma_mask(%struct.pci_dev* %dev, i64 %mask) #2 !dbg !9806 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9810, metadata !DIExpression()), !dbg !9811
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9814
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9815
  %1 = load i64, i64* %mask.addr, align 8, !dbg !9816
  %call = call i32 @dma_set_mask(%struct.device* %dev1, i64 %1) #13, !dbg !9817
  ret i32 %call, !dbg !9818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_set_consistent_dma_mask(%struct.pci_dev* %dev, i64 %mask) #2 !dbg !9819 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9820, metadata !DIExpression()), !dbg !9821
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !9822, metadata !DIExpression()), !dbg !9823
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9824
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9825
  %1 = load i64, i64* %mask.addr, align 8, !dbg !9826
  %call = call i32 @dma_set_coherent_mask(%struct.device* %dev1, i64 %1) #13, !dbg !9827
  ret i32 %call, !dbg !9828
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @nv_optimized(%struct.fe_priv* %np) #2 !dbg !9829 {
entry:
  %retval = alloca i1, align 1
  %np.addr = alloca %struct.fe_priv*, align 8
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  %0 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !9834
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %0, i32 0, i32 24, !dbg !9836
  %1 = load i32, i32* %desc_ver, align 8, !dbg !9836
  %cmp = icmp eq i32 %1, 1, !dbg !9837
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9838

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !9839
  %desc_ver1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 24, !dbg !9840
  %3 = load i32, i32* %desc_ver1, align 8, !dbg !9840
  %cmp2 = icmp eq i32 %3, 2, !dbg !9841
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9842

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !9843
  br label %return, !dbg !9843

if.end:                                           ; preds = %lor.lhs.false
  store i1 true, i1* %retval, align 1, !dbg !9844
  br label %return, !dbg !9844

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !9845
  ret i1 %4, !dbg !9845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !9846 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9850, metadata !DIExpression()), !dbg !9851
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9858
  %1 = load i64, i64* %size.addr, align 8, !dbg !9859
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !9860
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !9861
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !9862
  %and = and i32 %4, 8192, !dbg !9863
  %tobool = icmp ne i32 %and, 0, !dbg !9864
  %5 = zext i1 %tobool to i64, !dbg !9864
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !9864
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #13, !dbg !9865
  ret i8* %call, !dbg !9866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #2 !dbg !9867 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9870, metadata !DIExpression()), !dbg !9871
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9872, metadata !DIExpression()), !dbg !9873
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  %0 = load i64, i64* %n.addr, align 8, !dbg !9876
  %1 = load i64, i64* %size.addr, align 8, !dbg !9877
  %2 = load i32, i32* %flags.addr, align 4, !dbg !9878
  %or = or i32 %2, 256, !dbg !9879
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #13, !dbg !9880
  ret i8* %call, !dbg !9881
}

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_napi_poll(%struct.napi_struct* %napi, i32 %budget) #2 !dbg !9882 {
entry:
  %lock.addr.i300 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i300, metadata !9883, metadata !DIExpression()), !dbg !9887
  %flags.addr.i301 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i301, metadata !9891, metadata !DIExpression()), !dbg !9892
  %tmp.i302 = alloca i32, align 4
  %tmp8.i303 = alloca i32, align 4
  %lock.addr.i298 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i298, metadata !8259, metadata !DIExpression()), !dbg !9893
  %lock.addr.i293 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i293, metadata !9883, metadata !DIExpression()), !dbg !9900
  %flags.addr.i294 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i294, metadata !9891, metadata !DIExpression()), !dbg !9904
  %tmp.i295 = alloca i32, align 4
  %tmp8.i296 = alloca i32, align 4
  %lock.addr.i291 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i291, metadata !8259, metadata !DIExpression()), !dbg !9905
  %lock.addr.i286 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i286, metadata !9883, metadata !DIExpression()), !dbg !9912
  %flags.addr.i287 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i287, metadata !9891, metadata !DIExpression()), !dbg !9916
  %tmp.i288 = alloca i32, align 4
  %tmp8.i289 = alloca i32, align 4
  %lock.addr.i284 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i284, metadata !8259, metadata !DIExpression()), !dbg !9917
  %lock.addr.i279 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i279, metadata !9883, metadata !DIExpression()), !dbg !9924
  %flags.addr.i280 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i280, metadata !9891, metadata !DIExpression()), !dbg !9928
  %tmp.i281 = alloca i32, align 4
  %tmp8.i282 = alloca i32, align 4
  %lock.addr.i277 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i277, metadata !8259, metadata !DIExpression()), !dbg !9929
  %lock.addr.i272 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i272, metadata !9883, metadata !DIExpression()), !dbg !9936
  %flags.addr.i273 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i273, metadata !9891, metadata !DIExpression()), !dbg !9941
  %tmp.i274 = alloca i32, align 4
  %tmp8.i275 = alloca i32, align 4
  %lock.addr.i270 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i270, metadata !8259, metadata !DIExpression()), !dbg !9942
  %lock.addr.i268 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i268, metadata !9883, metadata !DIExpression()), !dbg !9949
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !9952
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !9953
  %retval = alloca i32, align 4
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fe_priv*, align 8
  %dev = alloca %struct.net_device*, align 8
  %base = alloca i8*, align 8
  %flags = alloca i64, align 8
  %retcode = alloca i32, align 4
  %rx_count = alloca i32, align 4
  %tx_work = alloca i32, align 4
  %rx_work = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp6 = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__dummy32 = alloca i64, align 8
  %__dummy233 = alloca i64, align 8
  %tmp36 = alloca i32, align 4
  %__dummy40 = alloca i64, align 8
  %__dummy241 = alloca i64, align 8
  %tmp44 = alloca i32, align 4
  %__dummy75 = alloca i64, align 8
  %__dummy276 = alloca i64, align 8
  %tmp79 = alloca i32, align 4
  %__dummy83 = alloca i64, align 8
  %__dummy284 = alloca i64, align 8
  %tmp87 = alloca i32, align 4
  %__dummy123 = alloca i64, align 8
  %__dummy2124 = alloca i64, align 8
  %tmp127 = alloca i32, align 4
  %__dummy131 = alloca i64, align 8
  %__dummy2132 = alloca i64, align 8
  %tmp135 = alloca i32, align 4
  %__dummy172 = alloca i64, align 8
  %__dummy2173 = alloca i64, align 8
  %tmp176 = alloca i32, align 4
  %__dummy180 = alloca i64, align 8
  %__dummy2181 = alloca i64, align 8
  %tmp184 = alloca i32, align 4
  %__dummy220 = alloca i64, align 8
  %__dummy2221 = alloca i64, align 8
  %tmp224 = alloca i32, align 4
  %__dummy228 = alloca i64, align 8
  %__dummy2229 = alloca i64, align 8
  %tmp232 = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !9960, metadata !DIExpression()), !dbg !9961
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !9964, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9966, metadata !DIExpression()), !dbg !9968
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !9968
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !9968
  store i8* %1, i8** %__mptr, align 8, !dbg !9968
  br label %do.body, !dbg !9968

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9969

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9968
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !9968
  %3 = bitcast i8* %add.ptr to %struct.fe_priv*, !dbg !9968
  store %struct.fe_priv* %3, %struct.fe_priv** %tmp, align 8, !dbg !9969
  %4 = load %struct.fe_priv*, %struct.fe_priv** %tmp, align 8, !dbg !9968
  store %struct.fe_priv* %4, %struct.fe_priv** %np, align 8, !dbg !9965
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9971, metadata !DIExpression()), !dbg !9972
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9973
  %dev1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 1, !dbg !9974
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9974
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !9972
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9975, metadata !DIExpression()), !dbg !9976
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9977
  %call = call i8* @get_hwbase(%struct.net_device* %7) #13, !dbg !9978
  store i8* %call, i8** %base, align 8, !dbg !9976
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9979, metadata !DIExpression()), !dbg !9980
  call void @llvm.dbg.declare(metadata i32* %retcode, metadata !9981, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.declare(metadata i32* %rx_count, metadata !9983, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.declare(metadata i32* %tx_work, metadata !9985, metadata !DIExpression()), !dbg !9986
  store i32 0, i32* %tx_work, align 4, !dbg !9986
  call void @llvm.dbg.declare(metadata i32* %rx_work, metadata !9987, metadata !DIExpression()), !dbg !9988
  store i32 0, i32* %rx_work, align 4, !dbg !9988
  br label %do.body2, !dbg !9989

do.body2:                                         ; preds = %land.end, %do.end
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !9990
  %call3 = call zeroext i1 @nv_optimized(%struct.fe_priv* %8) #13, !dbg !9991
  br i1 %call3, label %if.else, label %if.then, !dbg !9992

if.then:                                          ; preds = %do.body2
  br label %do.body4, !dbg !9993

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !9994

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9995, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9998, metadata !DIExpression()), !dbg !9997
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9997
  %conv = zext i1 %cmp to i32, !dbg !9997
  store i32 1, i32* %tmp6, align 4, !dbg !9997
  %9 = load i32, i32* %tmp6, align 4, !dbg !9997
  br label %do.body7, !dbg !9999

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !10000

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !10001

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !10003, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !10007, metadata !DIExpression()), !dbg !10006
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !10006
  %conv13 = zext i1 %cmp12 to i32, !dbg !10006
  store i32 1, i32* %tmp14, align 4, !dbg !10006
  %10 = load i32, i32* %tmp14, align 4, !dbg !10006
  %call15 = call i64 @arch_local_irq_save() #13, !dbg !10008
  store i64 %call15, i64* %flags, align 8, !dbg !10008
  br label %do.end16, !dbg !10008

do.end16:                                         ; preds = %do.body9
  br label %do.end17, !dbg !10001

do.end17:                                         ; preds = %do.end16
  br label %do.body18, !dbg !10000

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10009, !srcloc !10010
  br label %do.body19, !dbg !10009

do.body19:                                        ; preds = %do.body18
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10011
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 0, !dbg !10011
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10012
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !10013
  %rlock.i = bitcast %union.anon.2* %13 to %struct.raw_spinlock*, !dbg !10013
  br label %do.end21, !dbg !10011

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !10009

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10000

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9999

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !9994

do.end25:                                         ; preds = %do.end24
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10014
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10015
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 62, !dbg !10016
  %16 = load i32, i32* %tx_ring_size, align 4, !dbg !10016
  %call26 = call i32 @nv_tx_done(%struct.net_device* %14, i32 %16) #13, !dbg !10017
  %17 = load i32, i32* %tx_work, align 4, !dbg !10018
  %add = add i32 %17, %call26, !dbg !10018
  store i32 %add, i32* %tx_work, align 4, !dbg !10018
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10019
  %lock27 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 0, !dbg !10020
  %19 = load i64, i64* %flags, align 8, !dbg !10021
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i268, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !10025
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !10025
  store i32 1, i32* %tmp.i, align 4, !dbg !10025
  %20 = load i32, i32* %tmp.i, align 4, !dbg !10025
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !10032
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !10032
  store i32 1, i32* %tmp8.i, align 4, !dbg !10032
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !10032
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !10034
  call void @arch_local_irq_restore(i64 %22) #15, !dbg !10034
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10035, !srcloc !10037
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i268, align 8, !dbg !10038
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !10038
  %rlock.i269 = bitcast %union.anon.2* %24 to %struct.raw_spinlock*, !dbg !10038
  %25 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10040
  %26 = load i32, i32* %budget.addr, align 4, !dbg !10041
  %27 = load i32, i32* %rx_work, align 4, !dbg !10042
  %sub = sub i32 %26, %27, !dbg !10043
  %call28 = call i32 @nv_rx_process(%struct.net_device* %25, i32 %sub) #13, !dbg !10044
  store i32 %call28, i32* %rx_count, align 4, !dbg !10045
  %28 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10046
  %call29 = call i32 @nv_alloc_rx(%struct.net_device* %28) #13, !dbg !10047
  store i32 %call29, i32* %retcode, align 4, !dbg !10048
  br label %if.end, !dbg !10049

if.else:                                          ; preds = %do.body2
  br label %do.body30, !dbg !10050

do.body30:                                        ; preds = %if.else
  br label %do.body31, !dbg !10051

do.body31:                                        ; preds = %do.body30
  call void @llvm.dbg.declare(metadata i64* %__dummy32, metadata !10052, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.declare(metadata i64* %__dummy233, metadata !10055, metadata !DIExpression()), !dbg !10054
  %cmp34 = icmp eq i64* %__dummy32, %__dummy233, !dbg !10054
  %conv35 = zext i1 %cmp34 to i32, !dbg !10054
  store i32 1, i32* %tmp36, align 4, !dbg !10054
  %29 = load i32, i32* %tmp36, align 4, !dbg !10054
  br label %do.body37, !dbg !10056

do.body37:                                        ; preds = %do.body31
  br label %do.body38, !dbg !10057

do.body38:                                        ; preds = %do.body37
  br label %do.body39, !dbg !10058

do.body39:                                        ; preds = %do.body38
  call void @llvm.dbg.declare(metadata i64* %__dummy40, metadata !10060, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata i64* %__dummy241, metadata !10064, metadata !DIExpression()), !dbg !10063
  %cmp42 = icmp eq i64* %__dummy40, %__dummy241, !dbg !10063
  %conv43 = zext i1 %cmp42 to i32, !dbg !10063
  store i32 1, i32* %tmp44, align 4, !dbg !10063
  %30 = load i32, i32* %tmp44, align 4, !dbg !10063
  %call45 = call i64 @arch_local_irq_save() #13, !dbg !10065
  store i64 %call45, i64* %flags, align 8, !dbg !10065
  br label %do.end46, !dbg !10065

do.end46:                                         ; preds = %do.body39
  br label %do.end47, !dbg !10058

do.end47:                                         ; preds = %do.end46
  br label %do.body48, !dbg !10057

do.body48:                                        ; preds = %do.end47
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10066, !srcloc !10067
  br label %do.body49, !dbg !10066

do.body49:                                        ; preds = %do.body48
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10068
  %lock50 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 0, !dbg !10068
  store %struct.spinlock* %lock50, %struct.spinlock** %lock.addr.i270, align 8
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i270, align 8, !dbg !10069
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !10070
  %rlock.i271 = bitcast %union.anon.2* %33 to %struct.raw_spinlock*, !dbg !10070
  br label %do.end52, !dbg !10068

do.end52:                                         ; preds = %do.body49
  br label %do.end53, !dbg !10066

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !10057

do.end54:                                         ; preds = %do.end53
  br label %do.end55, !dbg !10056

do.end55:                                         ; preds = %do.end54
  br label %do.end56, !dbg !10051

do.end56:                                         ; preds = %do.end55
  %34 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10071
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10072
  %tx_ring_size57 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 62, !dbg !10073
  %36 = load i32, i32* %tx_ring_size57, align 4, !dbg !10073
  %call58 = call i32 @nv_tx_done_optimized(%struct.net_device* %34, i32 %36) #13, !dbg !10074
  %37 = load i32, i32* %tx_work, align 4, !dbg !10075
  %add59 = add i32 %37, %call58, !dbg !10075
  store i32 %add59, i32* %tx_work, align 4, !dbg !10075
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10076
  %lock60 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 0, !dbg !10077
  %39 = load i64, i64* %flags, align 8, !dbg !10078
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i272, align 8
  store i64 %39, i64* %flags.addr.i273, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !10079
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !10079
  store i32 1, i32* %tmp.i274, align 4, !dbg !10079
  %40 = load i32, i32* %tmp.i274, align 4, !dbg !10079
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !10080
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !10080
  store i32 1, i32* %tmp8.i275, align 4, !dbg !10080
  %41 = load i32, i32* %tmp8.i275, align 4, !dbg !10080
  %42 = load i64, i64* %flags.addr.i273, align 8, !dbg !10081
  call void @arch_local_irq_restore(i64 %42) #15, !dbg !10081
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10082, !srcloc !10037
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i272, align 8, !dbg !10083
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !10083
  %rlock.i276 = bitcast %union.anon.2* %44 to %struct.raw_spinlock*, !dbg !10083
  %45 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10084
  %46 = load i32, i32* %budget.addr, align 4, !dbg !10085
  %47 = load i32, i32* %rx_work, align 4, !dbg !10086
  %sub61 = sub i32 %46, %47, !dbg !10087
  %call62 = call i32 @nv_rx_process_optimized(%struct.net_device* %45, i32 %sub61) #13, !dbg !10088
  store i32 %call62, i32* %rx_count, align 4, !dbg !10089
  %48 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10090
  %call63 = call i32 @nv_alloc_rx_optimized(%struct.net_device* %48) #13, !dbg !10091
  store i32 %call63, i32* %retcode, align 4, !dbg !10092
  br label %if.end

if.end:                                           ; preds = %do.end56, %do.end25
  br label %do.cond, !dbg !10093

do.cond:                                          ; preds = %if.end
  %49 = load i32, i32* %retcode, align 4, !dbg !10094
  %cmp64 = icmp eq i32 %49, 0, !dbg !10095
  br i1 %cmp64, label %land.lhs.true, label %land.end, !dbg !10096

land.lhs.true:                                    ; preds = %do.cond
  %50 = load i32, i32* %rx_count, align 4, !dbg !10097
  %cmp66 = icmp sgt i32 %50, 0, !dbg !10098
  br i1 %cmp66, label %land.rhs, label %land.end, !dbg !10099

land.rhs:                                         ; preds = %land.lhs.true
  %51 = load i32, i32* %rx_count, align 4, !dbg !10100
  %52 = load i32, i32* %rx_work, align 4, !dbg !10101
  %add68 = add i32 %52, %51, !dbg !10101
  store i32 %add68, i32* %rx_work, align 4, !dbg !10101
  %53 = load i32, i32* %budget.addr, align 4, !dbg !10102
  %cmp69 = icmp slt i32 %add68, %53, !dbg !10103
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %do.cond
  %54 = phi i1 [ false, %land.lhs.true ], [ false, %do.cond ], [ %cmp69, %land.rhs ], !dbg !10104
  br i1 %54, label %do.body2, label %do.end71, !dbg !10093, !llvm.loop !10105

do.end71:                                         ; preds = %land.end
  %55 = load i32, i32* %retcode, align 4, !dbg !10107
  %tobool = icmp ne i32 %55, 0, !dbg !10107
  br i1 %tobool, label %if.then72, label %if.end113, !dbg !10108

if.then72:                                        ; preds = %do.end71
  br label %do.body73, !dbg !10109

do.body73:                                        ; preds = %if.then72
  br label %do.body74, !dbg !10110

do.body74:                                        ; preds = %do.body73
  call void @llvm.dbg.declare(metadata i64* %__dummy75, metadata !10111, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.declare(metadata i64* %__dummy276, metadata !10114, metadata !DIExpression()), !dbg !10113
  %cmp77 = icmp eq i64* %__dummy75, %__dummy276, !dbg !10113
  %conv78 = zext i1 %cmp77 to i32, !dbg !10113
  store i32 1, i32* %tmp79, align 4, !dbg !10113
  %56 = load i32, i32* %tmp79, align 4, !dbg !10113
  br label %do.body80, !dbg !10115

do.body80:                                        ; preds = %do.body74
  br label %do.body81, !dbg !10116

do.body81:                                        ; preds = %do.body80
  br label %do.body82, !dbg !10117

do.body82:                                        ; preds = %do.body81
  call void @llvm.dbg.declare(metadata i64* %__dummy83, metadata !10119, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.declare(metadata i64* %__dummy284, metadata !10123, metadata !DIExpression()), !dbg !10122
  %cmp85 = icmp eq i64* %__dummy83, %__dummy284, !dbg !10122
  %conv86 = zext i1 %cmp85 to i32, !dbg !10122
  store i32 1, i32* %tmp87, align 4, !dbg !10122
  %57 = load i32, i32* %tmp87, align 4, !dbg !10122
  %call88 = call i64 @arch_local_irq_save() #13, !dbg !10124
  store i64 %call88, i64* %flags, align 8, !dbg !10124
  br label %do.end90, !dbg !10124

do.end90:                                         ; preds = %do.body82
  br label %do.end92, !dbg !10117

do.end92:                                         ; preds = %do.end90
  br label %do.body93, !dbg !10116

do.body93:                                        ; preds = %do.end92
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10125, !srcloc !10126
  br label %do.body94, !dbg !10125

do.body94:                                        ; preds = %do.body93
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10127
  %lock95 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 0, !dbg !10127
  store %struct.spinlock* %lock95, %struct.spinlock** %lock.addr.i277, align 8
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i277, align 8, !dbg !10128
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !10129
  %rlock.i278 = bitcast %union.anon.2* %60 to %struct.raw_spinlock*, !dbg !10129
  br label %do.end98, !dbg !10127

do.end98:                                         ; preds = %do.body94
  br label %do.end100, !dbg !10125

do.end100:                                        ; preds = %do.end98
  br label %do.end102, !dbg !10116

do.end102:                                        ; preds = %do.end100
  br label %do.end104, !dbg !10115

do.end104:                                        ; preds = %do.end102
  br label %do.end106, !dbg !10110

do.end106:                                        ; preds = %do.end104
  %61 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10130
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %61, i32 0, i32 5, !dbg !10132
  %62 = load i32, i32* %in_shutdown, align 8, !dbg !10132
  %tobool107 = icmp ne i32 %62, 0, !dbg !10130
  br i1 %tobool107, label %if.end111, label %if.then108, !dbg !10133

if.then108:                                       ; preds = %do.end106
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10134
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 44, !dbg !10135
  %64 = load volatile i64, i64* @jiffies, align 8, !dbg !10136
  %add109 = add i64 %64, 13, !dbg !10137
  %call110 = call i32 @mod_timer(%struct.timer_list* %oom_kick, i64 %add109) #13, !dbg !10138
  br label %if.end111, !dbg !10138

if.end111:                                        ; preds = %if.then108, %do.end106
  %65 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10139
  %lock112 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %65, i32 0, i32 0, !dbg !10140
  %66 = load i64, i64* %flags, align 8, !dbg !10141
  store %struct.spinlock* %lock112, %struct.spinlock** %lock.addr.i279, align 8
  store i64 %66, i64* %flags.addr.i280, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !10142
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !10142
  store i32 1, i32* %tmp.i281, align 4, !dbg !10142
  %67 = load i32, i32* %tmp.i281, align 4, !dbg !10142
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !10143
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !10143
  store i32 1, i32* %tmp8.i282, align 4, !dbg !10143
  %68 = load i32, i32* %tmp8.i282, align 4, !dbg !10143
  %69 = load i64, i64* %flags.addr.i280, align 8, !dbg !10144
  call void @arch_local_irq_restore(i64 %69) #15, !dbg !10144
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10145, !srcloc !10037
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i279, align 8, !dbg !10146
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !10146
  %rlock.i283 = bitcast %union.anon.2* %71 to %struct.raw_spinlock*, !dbg !10146
  br label %if.end113, !dbg !10147

if.end113:                                        ; preds = %if.end111, %do.end71
  %72 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10148
  %73 = load i32, i32* %tx_work, align 4, !dbg !10149
  %74 = load i32, i32* %rx_work, align 4, !dbg !10150
  %add114 = add i32 %73, %74, !dbg !10151
  %call115 = call i32 @nv_change_interrupt_mode(%struct.net_device* %72, i32 %add114) #13, !dbg !10152
  %75 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10153
  %events = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %75, i32 0, i32 22, !dbg !10153
  %76 = load i32, i32* %events, align 8, !dbg !10153
  %and = and i32 %76, 64, !dbg !10153
  %tobool116 = icmp ne i32 %and, 0, !dbg !10153
  %lnot = xor i1 %tobool116, true, !dbg !10153
  %lnot117 = xor i1 %lnot, true, !dbg !10153
  %lnot.ext = zext i1 %lnot117 to i32, !dbg !10153
  %conv118 = sext i32 %lnot.ext to i64, !dbg !10153
  %tobool119 = icmp ne i64 %conv118, 0, !dbg !10153
  br i1 %tobool119, label %if.then120, label %if.end156, !dbg !10154

if.then120:                                       ; preds = %if.end113
  br label %do.body121, !dbg !10155

do.body121:                                       ; preds = %if.then120
  br label %do.body122, !dbg !10156

do.body122:                                       ; preds = %do.body121
  call void @llvm.dbg.declare(metadata i64* %__dummy123, metadata !10157, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata i64* %__dummy2124, metadata !10160, metadata !DIExpression()), !dbg !10159
  %cmp125 = icmp eq i64* %__dummy123, %__dummy2124, !dbg !10159
  %conv126 = zext i1 %cmp125 to i32, !dbg !10159
  store i32 1, i32* %tmp127, align 4, !dbg !10159
  %77 = load i32, i32* %tmp127, align 4, !dbg !10159
  br label %do.body128, !dbg !10161

do.body128:                                       ; preds = %do.body122
  br label %do.body129, !dbg !10162

do.body129:                                       ; preds = %do.body128
  br label %do.body130, !dbg !10163

do.body130:                                       ; preds = %do.body129
  call void @llvm.dbg.declare(metadata i64* %__dummy131, metadata !10165, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.declare(metadata i64* %__dummy2132, metadata !10169, metadata !DIExpression()), !dbg !10168
  %cmp133 = icmp eq i64* %__dummy131, %__dummy2132, !dbg !10168
  %conv134 = zext i1 %cmp133 to i32, !dbg !10168
  store i32 1, i32* %tmp135, align 4, !dbg !10168
  %78 = load i32, i32* %tmp135, align 4, !dbg !10168
  %call136 = call i64 @arch_local_irq_save() #13, !dbg !10170
  store i64 %call136, i64* %flags, align 8, !dbg !10170
  br label %do.end138, !dbg !10170

do.end138:                                        ; preds = %do.body130
  br label %do.end140, !dbg !10163

do.end140:                                        ; preds = %do.end138
  br label %do.body141, !dbg !10162

do.body141:                                       ; preds = %do.end140
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10171, !srcloc !10172
  br label %do.body142, !dbg !10171

do.body142:                                       ; preds = %do.body141
  %79 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10173
  %lock143 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %79, i32 0, i32 0, !dbg !10173
  store %struct.spinlock* %lock143, %struct.spinlock** %lock.addr.i284, align 8
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i284, align 8, !dbg !10174
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !10175
  %rlock.i285 = bitcast %union.anon.2* %81 to %struct.raw_spinlock*, !dbg !10175
  br label %do.end146, !dbg !10173

do.end146:                                        ; preds = %do.body142
  br label %do.end148, !dbg !10171

do.end148:                                        ; preds = %do.end146
  br label %do.end150, !dbg !10162

do.end150:                                        ; preds = %do.end148
  br label %do.end152, !dbg !10161

do.end152:                                        ; preds = %do.end150
  br label %do.end154, !dbg !10156

do.end154:                                        ; preds = %do.end152
  %82 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10176
  call void @nv_link_irq(%struct.net_device* %82) #13, !dbg !10177
  %83 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10178
  %lock155 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %83, i32 0, i32 0, !dbg !10179
  %84 = load i64, i64* %flags, align 8, !dbg !10180
  store %struct.spinlock* %lock155, %struct.spinlock** %lock.addr.i286, align 8
  store i64 %84, i64* %flags.addr.i287, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !10181
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !10181
  store i32 1, i32* %tmp.i288, align 4, !dbg !10181
  %85 = load i32, i32* %tmp.i288, align 4, !dbg !10181
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !10182
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !10182
  store i32 1, i32* %tmp8.i289, align 4, !dbg !10182
  %86 = load i32, i32* %tmp8.i289, align 4, !dbg !10182
  %87 = load i64, i64* %flags.addr.i287, align 8, !dbg !10183
  call void @arch_local_irq_restore(i64 %87) #15, !dbg !10183
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10184, !srcloc !10037
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i286, align 8, !dbg !10185
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !10185
  %rlock.i290 = bitcast %union.anon.2* %89 to %struct.raw_spinlock*, !dbg !10185
  br label %if.end156, !dbg !10186

if.end156:                                        ; preds = %do.end154, %if.end113
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10187
  %need_linktimer = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 51, !dbg !10187
  %91 = load i32, i32* %need_linktimer, align 8, !dbg !10187
  %tobool157 = icmp ne i32 %91, 0, !dbg !10187
  br i1 %tobool157, label %land.rhs158, label %land.end162, !dbg !10187

land.rhs158:                                      ; preds = %if.end156
  %92 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10187
  %link_timeout = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %92, i32 0, i32 52, !dbg !10187
  %93 = load i64, i64* %link_timeout, align 8, !dbg !10187
  %94 = load volatile i64, i64* @jiffies, align 8, !dbg !10187
  %sub159 = sub i64 %93, %94, !dbg !10187
  %cmp160 = icmp slt i64 %sub159, 0, !dbg !10187
  br label %land.end162

land.end162:                                      ; preds = %land.rhs158, %if.end156
  %95 = phi i1 [ false, %if.end156 ], [ %cmp160, %land.rhs158 ], !dbg !10188
  %lnot163 = xor i1 %95, true, !dbg !10187
  %lnot165 = xor i1 %lnot163, true, !dbg !10187
  %lnot.ext166 = zext i1 %lnot165 to i32, !dbg !10187
  %conv167 = sext i32 %lnot.ext166 to i64, !dbg !10187
  %tobool168 = icmp ne i64 %conv167, 0, !dbg !10187
  br i1 %tobool168, label %if.then169, label %if.end207, !dbg !10189

if.then169:                                       ; preds = %land.end162
  br label %do.body170, !dbg !10190

do.body170:                                       ; preds = %if.then169
  br label %do.body171, !dbg !10191

do.body171:                                       ; preds = %do.body170
  call void @llvm.dbg.declare(metadata i64* %__dummy172, metadata !10192, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.declare(metadata i64* %__dummy2173, metadata !10195, metadata !DIExpression()), !dbg !10194
  %cmp174 = icmp eq i64* %__dummy172, %__dummy2173, !dbg !10194
  %conv175 = zext i1 %cmp174 to i32, !dbg !10194
  store i32 1, i32* %tmp176, align 4, !dbg !10194
  %96 = load i32, i32* %tmp176, align 4, !dbg !10194
  br label %do.body177, !dbg !10196

do.body177:                                       ; preds = %do.body171
  br label %do.body178, !dbg !10197

do.body178:                                       ; preds = %do.body177
  br label %do.body179, !dbg !10198

do.body179:                                       ; preds = %do.body178
  call void @llvm.dbg.declare(metadata i64* %__dummy180, metadata !10200, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.declare(metadata i64* %__dummy2181, metadata !10204, metadata !DIExpression()), !dbg !10203
  %cmp182 = icmp eq i64* %__dummy180, %__dummy2181, !dbg !10203
  %conv183 = zext i1 %cmp182 to i32, !dbg !10203
  store i32 1, i32* %tmp184, align 4, !dbg !10203
  %97 = load i32, i32* %tmp184, align 4, !dbg !10203
  %call185 = call i64 @arch_local_irq_save() #13, !dbg !10205
  store i64 %call185, i64* %flags, align 8, !dbg !10205
  br label %do.end187, !dbg !10205

do.end187:                                        ; preds = %do.body179
  br label %do.end189, !dbg !10198

do.end189:                                        ; preds = %do.end187
  br label %do.body190, !dbg !10197

do.body190:                                       ; preds = %do.end189
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10206, !srcloc !10207
  br label %do.body191, !dbg !10206

do.body191:                                       ; preds = %do.body190
  %98 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10208
  %lock192 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %98, i32 0, i32 0, !dbg !10208
  store %struct.spinlock* %lock192, %struct.spinlock** %lock.addr.i291, align 8
  %99 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i291, align 8, !dbg !10209
  %100 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %99, i32 0, i32 0, !dbg !10210
  %rlock.i292 = bitcast %union.anon.2* %100 to %struct.raw_spinlock*, !dbg !10210
  br label %do.end195, !dbg !10208

do.end195:                                        ; preds = %do.body191
  br label %do.end197, !dbg !10206

do.end197:                                        ; preds = %do.end195
  br label %do.end199, !dbg !10197

do.end199:                                        ; preds = %do.end197
  br label %do.end201, !dbg !10196

do.end201:                                        ; preds = %do.end199
  br label %do.end203, !dbg !10191

do.end203:                                        ; preds = %do.end201
  %101 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10211
  call void @nv_linkchange(%struct.net_device* %101) #13, !dbg !10212
  %102 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10213
  %lock204 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %102, i32 0, i32 0, !dbg !10214
  %103 = load i64, i64* %flags, align 8, !dbg !10215
  store %struct.spinlock* %lock204, %struct.spinlock** %lock.addr.i293, align 8
  store i64 %103, i64* %flags.addr.i294, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !10216
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !10216
  store i32 1, i32* %tmp.i295, align 4, !dbg !10216
  %104 = load i32, i32* %tmp.i295, align 4, !dbg !10216
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !10217
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !10217
  store i32 1, i32* %tmp8.i296, align 4, !dbg !10217
  %105 = load i32, i32* %tmp8.i296, align 4, !dbg !10217
  %106 = load i64, i64* %flags.addr.i294, align 8, !dbg !10218
  call void @arch_local_irq_restore(i64 %106) #15, !dbg !10218
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10219, !srcloc !10037
  %107 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i293, align 8, !dbg !10220
  %108 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %107, i32 0, i32 0, !dbg !10220
  %rlock.i297 = bitcast %union.anon.2* %108 to %struct.raw_spinlock*, !dbg !10220
  %109 = load volatile i64, i64* @jiffies, align 8, !dbg !10221
  %add205 = add i64 %109, 750, !dbg !10222
  %110 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10223
  %link_timeout206 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %110, i32 0, i32 52, !dbg !10224
  store i64 %add205, i64* %link_timeout206, align 8, !dbg !10225
  br label %if.end207, !dbg !10226

if.end207:                                        ; preds = %do.end203, %land.end162
  %111 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10227
  %events208 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %111, i32 0, i32 22, !dbg !10227
  %112 = load i32, i32* %events208, align 8, !dbg !10227
  %and209 = and i32 %112, 33280, !dbg !10227
  %tobool210 = icmp ne i32 %and209, 0, !dbg !10227
  %lnot211 = xor i1 %tobool210, true, !dbg !10227
  %lnot213 = xor i1 %lnot211, true, !dbg !10227
  %lnot.ext214 = zext i1 %lnot213 to i32, !dbg !10227
  %conv215 = sext i32 %lnot.ext214 to i64, !dbg !10227
  %tobool216 = icmp ne i64 %conv215, 0, !dbg !10227
  br i1 %tobool216, label %if.then217, label %if.end260, !dbg !10228

if.then217:                                       ; preds = %if.end207
  br label %do.body218, !dbg !10229

do.body218:                                       ; preds = %if.then217
  br label %do.body219, !dbg !10230

do.body219:                                       ; preds = %do.body218
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !10231, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.declare(metadata i64* %__dummy2221, metadata !10234, metadata !DIExpression()), !dbg !10233
  %cmp222 = icmp eq i64* %__dummy220, %__dummy2221, !dbg !10233
  %conv223 = zext i1 %cmp222 to i32, !dbg !10233
  store i32 1, i32* %tmp224, align 4, !dbg !10233
  %113 = load i32, i32* %tmp224, align 4, !dbg !10233
  br label %do.body225, !dbg !10235

do.body225:                                       ; preds = %do.body219
  br label %do.body226, !dbg !10236

do.body226:                                       ; preds = %do.body225
  br label %do.body227, !dbg !10237

do.body227:                                       ; preds = %do.body226
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !10239, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata i64* %__dummy2229, metadata !10243, metadata !DIExpression()), !dbg !10242
  %cmp230 = icmp eq i64* %__dummy228, %__dummy2229, !dbg !10242
  %conv231 = zext i1 %cmp230 to i32, !dbg !10242
  store i32 1, i32* %tmp232, align 4, !dbg !10242
  %114 = load i32, i32* %tmp232, align 4, !dbg !10242
  %call233 = call i64 @arch_local_irq_save() #13, !dbg !10244
  store i64 %call233, i64* %flags, align 8, !dbg !10244
  br label %do.end235, !dbg !10244

do.end235:                                        ; preds = %do.body227
  br label %do.end237, !dbg !10237

do.end237:                                        ; preds = %do.end235
  br label %do.body238, !dbg !10236

do.body238:                                       ; preds = %do.end237
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10245, !srcloc !10246
  br label %do.body239, !dbg !10245

do.body239:                                       ; preds = %do.body238
  %115 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10247
  %lock240 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %115, i32 0, i32 0, !dbg !10247
  store %struct.spinlock* %lock240, %struct.spinlock** %lock.addr.i298, align 8
  %116 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i298, align 8, !dbg !10248
  %117 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %116, i32 0, i32 0, !dbg !10249
  %rlock.i299 = bitcast %union.anon.2* %117 to %struct.raw_spinlock*, !dbg !10249
  br label %do.end243, !dbg !10247

do.end243:                                        ; preds = %do.body239
  br label %do.end245, !dbg !10245

do.end245:                                        ; preds = %do.end243
  br label %do.end247, !dbg !10236

do.end247:                                        ; preds = %do.end245
  br label %do.end249, !dbg !10235

do.end249:                                        ; preds = %do.end247
  br label %do.end251, !dbg !10230

do.end251:                                        ; preds = %do.end249
  %118 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10250
  %in_shutdown252 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %118, i32 0, i32 5, !dbg !10252
  %119 = load i32, i32* %in_shutdown252, align 8, !dbg !10252
  %tobool253 = icmp ne i32 %119, 0, !dbg !10250
  br i1 %tobool253, label %if.end257, label %if.then254, !dbg !10253

if.then254:                                       ; preds = %do.end251
  %120 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10254
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %120, i32 0, i32 23, !dbg !10256
  %121 = load i32, i32* %irqmask, align 4, !dbg !10256
  %122 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10257
  %nic_poll_irq = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %122, i32 0, i32 47, !dbg !10258
  store i32 %121, i32* %nic_poll_irq, align 8, !dbg !10259
  %123 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10260
  %recover_error = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %123, i32 0, i32 17, !dbg !10261
  store i32 1, i32* %recover_error, align 8, !dbg !10262
  %124 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10263
  %nic_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %124, i32 0, i32 45, !dbg !10264
  %125 = load volatile i64, i64* @jiffies, align 8, !dbg !10265
  %add255 = add i64 %125, 3, !dbg !10266
  %call256 = call i32 @mod_timer(%struct.timer_list* %nic_poll, i64 %add255) #13, !dbg !10267
  br label %if.end257, !dbg !10268

if.end257:                                        ; preds = %if.then254, %do.end251
  %126 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10269
  %lock258 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %126, i32 0, i32 0, !dbg !10270
  %127 = load i64, i64* %flags, align 8, !dbg !10271
  store %struct.spinlock* %lock258, %struct.spinlock** %lock.addr.i300, align 8
  store i64 %127, i64* %flags.addr.i301, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !10272
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !10272
  store i32 1, i32* %tmp.i302, align 4, !dbg !10272
  %128 = load i32, i32* %tmp.i302, align 4, !dbg !10272
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !10273
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !10273
  store i32 1, i32* %tmp8.i303, align 4, !dbg !10273
  %129 = load i32, i32* %tmp8.i303, align 4, !dbg !10273
  %130 = load i64, i64* %flags.addr.i301, align 8, !dbg !10274
  call void @arch_local_irq_restore(i64 %130) #15, !dbg !10274
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10275, !srcloc !10037
  %131 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i300, align 8, !dbg !10276
  %132 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %131, i32 0, i32 0, !dbg !10276
  %rlock.i304 = bitcast %union.anon.2* %132 to %struct.raw_spinlock*, !dbg !10276
  %133 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !10277
  %call259 = call zeroext i1 @napi_complete(%struct.napi_struct* %133) #13, !dbg !10278
  %134 = load i32, i32* %rx_work, align 4, !dbg !10279
  store i32 %134, i32* %retval, align 4, !dbg !10280
  br label %return, !dbg !10280

if.end260:                                        ; preds = %if.end207
  %135 = load i32, i32* %rx_work, align 4, !dbg !10281
  %136 = load i32, i32* %budget.addr, align 4, !dbg !10283
  %cmp261 = icmp slt i32 %135, %136, !dbg !10284
  br i1 %cmp261, label %if.then263, label %if.end267, !dbg !10285

if.then263:                                       ; preds = %if.end260
  %137 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !10286
  %138 = load i32, i32* %rx_work, align 4, !dbg !10288
  %call264 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %137, i32 %138) #13, !dbg !10289
  %139 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10290
  %irqmask265 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %139, i32 0, i32 23, !dbg !10291
  %140 = load i32, i32* %irqmask265, align 4, !dbg !10291
  %141 = load i8*, i8** %base, align 8, !dbg !10292
  %add.ptr266 = getelementptr i8, i8* %141, i64 4, !dbg !10293
  call void @writel(i32 %140, i8* %add.ptr266) #13, !dbg !10294
  br label %if.end267, !dbg !10295

if.end267:                                        ; preds = %if.then263, %if.end260
  %142 = load i32, i32* %rx_work, align 4, !dbg !10296
  store i32 %142, i32* %retval, align 4, !dbg !10297
  br label %return, !dbg !10297

return:                                           ; preds = %if.end267, %if.end257
  %143 = load i32, i32* %retval, align 4, !dbg !10298
  ret i32 %143, !dbg !10298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !10299 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10304, metadata !DIExpression()), !dbg !10305
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10306
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10307
  %1 = load i8*, i8** %data.addr, align 8, !dbg !10308
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #13, !dbg !10309
  ret void, !dbg !10310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @get_hwbase(%struct.net_device* %dev) #2 !dbg !10311 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10314, metadata !DIExpression()), !dbg !10315
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10316
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !10317
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !10318
  %base = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 33, !dbg !10319
  %2 = load i8*, i8** %base, align 8, !dbg !10319
  ret i8* %2, !dbg !10320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !10321 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10330, metadata !DIExpression()), !dbg !10329
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10329
  %1 = bitcast i8* %0 to i32*, !dbg !10329
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !10329, !srcloc !10331
  store i32 %2, i32* %ret, align 4, !dbg !10329
  %3 = load i32, i32* %ret, align 4, !dbg !10329
  ret i32 %3, !dbg !10329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !10332 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10336, metadata !DIExpression()), !dbg !10337
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10338, metadata !DIExpression()), !dbg !10337
  %0 = load i32, i32* %val.addr, align 4, !dbg !10337
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10337
  %2 = bitcast i8* %1 to i32*, !dbg !10337
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !10337, !srcloc !10339
  ret void, !dbg !10337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #2 !dbg !10340 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10344, metadata !DIExpression()), !dbg !10345
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10346
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #13, !dbg !10347
  br i1 %call, label %land.end, label %land.rhs, !dbg !10348

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10349
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #13, !dbg !10350
  %lnot = xor i1 %call1, true, !dbg !10351
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !10352
  ret i1 %2, !dbg !10353
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_hw_addr_random(%struct.net_device* %dev) #2 !dbg !10354 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10355, metadata !DIExpression()), !dbg !10356
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10357
  %addr_assign_type = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 54, !dbg !10358
  store i8 1, i8* %addr_assign_type, align 2, !dbg !10359
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10360
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 74, !dbg !10361
  %2 = load i8*, i8** %dev_addr, align 8, !dbg !10361
  call void @eth_random_addr(i8* %2) #13, !dbg !10362
  ret void, !dbg !10363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_copy_mac_to_hw(%struct.net_device* %dev) #2 !dbg !10364 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %base = alloca i8*, align 8
  %mac = alloca [2 x i32], align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10365, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10367, metadata !DIExpression()), !dbg !10368
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10369
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !10370
  store i8* %call, i8** %base, align 8, !dbg !10368
  call void @llvm.dbg.declare(metadata [2 x i32]* %mac, metadata !10371, metadata !DIExpression()), !dbg !10372
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10373
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 74, !dbg !10374
  %2 = load i8*, i8** %dev_addr, align 8, !dbg !10374
  %arrayidx = getelementptr i8, i8* %2, i64 0, !dbg !10373
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10373
  %conv = zext i8 %3 to i32, !dbg !10373
  %shl = shl i32 %conv, 0, !dbg !10375
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10376
  %dev_addr1 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 74, !dbg !10377
  %5 = load i8*, i8** %dev_addr1, align 8, !dbg !10377
  %arrayidx2 = getelementptr i8, i8* %5, i64 1, !dbg !10376
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !10376
  %conv3 = zext i8 %6 to i32, !dbg !10376
  %shl4 = shl i32 %conv3, 8, !dbg !10378
  %add = add i32 %shl, %shl4, !dbg !10379
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10380
  %dev_addr5 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 74, !dbg !10381
  %8 = load i8*, i8** %dev_addr5, align 8, !dbg !10381
  %arrayidx6 = getelementptr i8, i8* %8, i64 2, !dbg !10380
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !10380
  %conv7 = zext i8 %9 to i32, !dbg !10380
  %shl8 = shl i32 %conv7, 16, !dbg !10382
  %add9 = add i32 %add, %shl8, !dbg !10383
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10384
  %dev_addr10 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 74, !dbg !10385
  %11 = load i8*, i8** %dev_addr10, align 8, !dbg !10385
  %arrayidx11 = getelementptr i8, i8* %11, i64 3, !dbg !10384
  %12 = load i8, i8* %arrayidx11, align 1, !dbg !10384
  %conv12 = zext i8 %12 to i32, !dbg !10384
  %shl13 = shl i32 %conv12, 24, !dbg !10386
  %add14 = add i32 %add9, %shl13, !dbg !10387
  %arrayidx15 = getelementptr [2 x i32], [2 x i32]* %mac, i64 0, i64 0, !dbg !10388
  store i32 %add14, i32* %arrayidx15, align 4, !dbg !10389
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10390
  %dev_addr16 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 74, !dbg !10391
  %14 = load i8*, i8** %dev_addr16, align 8, !dbg !10391
  %arrayidx17 = getelementptr i8, i8* %14, i64 4, !dbg !10390
  %15 = load i8, i8* %arrayidx17, align 1, !dbg !10390
  %conv18 = zext i8 %15 to i32, !dbg !10390
  %shl19 = shl i32 %conv18, 0, !dbg !10392
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10393
  %dev_addr20 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 74, !dbg !10394
  %17 = load i8*, i8** %dev_addr20, align 8, !dbg !10394
  %arrayidx21 = getelementptr i8, i8* %17, i64 5, !dbg !10393
  %18 = load i8, i8* %arrayidx21, align 1, !dbg !10393
  %conv22 = zext i8 %18 to i32, !dbg !10393
  %shl23 = shl i32 %conv22, 8, !dbg !10395
  %add24 = add i32 %shl19, %shl23, !dbg !10396
  %arrayidx25 = getelementptr [2 x i32], [2 x i32]* %mac, i64 0, i64 1, !dbg !10397
  store i32 %add24, i32* %arrayidx25, align 4, !dbg !10398
  %arrayidx26 = getelementptr [2 x i32], [2 x i32]* %mac, i64 0, i64 0, !dbg !10399
  %19 = load i32, i32* %arrayidx26, align 4, !dbg !10399
  %20 = load i8*, i8** %base, align 8, !dbg !10400
  %add.ptr = getelementptr i8, i8* %20, i64 168, !dbg !10401
  call void @writel(i32 %19, i8* %add.ptr) #13, !dbg !10402
  %arrayidx27 = getelementptr [2 x i32], [2 x i32]* %mac, i64 0, i64 1, !dbg !10403
  %21 = load i32, i32* %arrayidx27, align 4, !dbg !10403
  %22 = load i8*, i8** %base, align 8, !dbg !10404
  %add.ptr28 = getelementptr i8, i8* %22, i64 172, !dbg !10405
  call void @writel(i32 %21, i8* %add.ptr28) #13, !dbg !10406
  ret void, !dbg !10407
}

; Function Attrs: noredzone
declare dso_local i32 @device_set_wakeup_enable(%struct.device*, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_mgmt_acquire_sema(%struct.net_device* %dev) #2 !dbg !10408 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %i = alloca i32, align 4
  %tx_ctrl = alloca i32, align 4
  %mgmt_sema = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10409, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !10411, metadata !DIExpression()), !dbg !10412
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10413
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !10414
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !10414
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !10412
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10415, metadata !DIExpression()), !dbg !10416
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10417
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !10418
  store i8* %call1, i8** %base, align 8, !dbg !10416
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10419, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.declare(metadata i32* %tx_ctrl, metadata !10421, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.declare(metadata i32* %mgmt_sema, metadata !10423, metadata !DIExpression()), !dbg !10424
  store i32 0, i32* %i, align 4, !dbg !10425
  br label %for.cond, !dbg !10427

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10428
  %cmp = icmp slt i32 %3, 10, !dbg !10430
  br i1 %cmp, label %for.body, label %for.end, !dbg !10431

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10432
  %add.ptr = getelementptr i8, i8* %4, i64 132, !dbg !10434
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !10435
  %and = and i32 %call2, 3840, !dbg !10436
  store i32 %and, i32* %mgmt_sema, align 4, !dbg !10437
  %5 = load i32, i32* %mgmt_sema, align 4, !dbg !10438
  %cmp3 = icmp eq i32 %5, 0, !dbg !10440
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10441

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10442

if.end:                                           ; preds = %for.body
  call void @msleep(i32 500) #13, !dbg !10443
  br label %for.inc, !dbg !10444

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !10445
  %inc = add i32 %6, 1, !dbg !10445
  store i32 %inc, i32* %i, align 4, !dbg !10445
  br label %for.cond, !dbg !10446, !llvm.loop !10447

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i32, i32* %mgmt_sema, align 4, !dbg !10449
  %cmp4 = icmp ne i32 %7, 0, !dbg !10451
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10452

if.then5:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !10453
  br label %return, !dbg !10453

if.end6:                                          ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !10454
  br label %for.cond7, !dbg !10456

for.cond7:                                        ; preds = %for.inc22, %if.end6
  %8 = load i32, i32* %i, align 4, !dbg !10457
  %cmp8 = icmp slt i32 %8, 2, !dbg !10459
  br i1 %cmp8, label %for.body9, label %for.end24, !dbg !10460

for.body9:                                        ; preds = %for.cond7
  %9 = load i8*, i8** %base, align 8, !dbg !10461
  %add.ptr10 = getelementptr i8, i8* %9, i64 132, !dbg !10463
  %call11 = call i32 @readl(i8* %add.ptr10) #13, !dbg !10464
  store i32 %call11, i32* %tx_ctrl, align 4, !dbg !10465
  %10 = load i32, i32* %tx_ctrl, align 4, !dbg !10466
  %or = or i32 %10, 61440, !dbg !10466
  store i32 %or, i32* %tx_ctrl, align 4, !dbg !10466
  %11 = load i32, i32* %tx_ctrl, align 4, !dbg !10467
  %12 = load i8*, i8** %base, align 8, !dbg !10468
  %add.ptr12 = getelementptr i8, i8* %12, i64 132, !dbg !10469
  call void @writel(i32 %11, i8* %add.ptr12) #13, !dbg !10470
  %13 = load i8*, i8** %base, align 8, !dbg !10471
  %add.ptr13 = getelementptr i8, i8* %13, i64 132, !dbg !10472
  %call14 = call i32 @readl(i8* %add.ptr13) #13, !dbg !10473
  store i32 %call14, i32* %tx_ctrl, align 4, !dbg !10474
  %14 = load i32, i32* %tx_ctrl, align 4, !dbg !10475
  %and15 = and i32 %14, 61440, !dbg !10477
  %cmp16 = icmp eq i32 %and15, 61440, !dbg !10478
  br i1 %cmp16, label %land.lhs.true, label %if.else, !dbg !10479

land.lhs.true:                                    ; preds = %for.body9
  %15 = load i32, i32* %tx_ctrl, align 4, !dbg !10480
  %and17 = and i32 %15, 3840, !dbg !10481
  %cmp18 = icmp eq i32 %and17, 0, !dbg !10482
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !10483

if.then19:                                        ; preds = %land.lhs.true
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10484
  %mgmt_sema20 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 32, !dbg !10486
  store i32 1, i32* %mgmt_sema20, align 8, !dbg !10487
  store i32 1, i32* %retval, align 4, !dbg !10488
  br label %return, !dbg !10488

if.else:                                          ; preds = %land.lhs.true, %for.body9
  call void @__const_udelay(i64 214750) #13, !dbg !10489
  br label %if.end21

if.end21:                                         ; preds = %if.else
  br label %for.inc22, !dbg !10494

for.inc22:                                        ; preds = %if.end21
  %17 = load i32, i32* %i, align 4, !dbg !10495
  %inc23 = add i32 %17, 1, !dbg !10495
  store i32 %inc23, i32* %i, align 4, !dbg !10495
  br label %for.cond7, !dbg !10496, !llvm.loop !10497

for.end24:                                        ; preds = %for.cond7
  store i32 0, i32* %retval, align 4, !dbg !10499
  br label %return, !dbg !10499

return:                                           ; preds = %for.end24, %if.then19, %if.then5
  %18 = load i32, i32* %retval, align 4, !dbg !10500
  ret i32 %18, !dbg !10500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_mgmt_get_version(%struct.net_device* %dev) #2 !dbg !10501 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %data_ready = alloca i32, align 4
  %data_ready2 = alloca i32, align 4
  %start = alloca i64, align 8
  %ready = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !10504, metadata !DIExpression()), !dbg !10505
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10506
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !10507
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !10507
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !10505
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10508, metadata !DIExpression()), !dbg !10509
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10510
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !10511
  store i8* %call1, i8** %base, align 8, !dbg !10509
  call void @llvm.dbg.declare(metadata i32* %data_ready, metadata !10512, metadata !DIExpression()), !dbg !10513
  %3 = load i8*, i8** %base, align 8, !dbg !10514
  %add.ptr = getelementptr i8, i8* %3, i64 132, !dbg !10515
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !10516
  store i32 %call2, i32* %data_ready, align 4, !dbg !10513
  call void @llvm.dbg.declare(metadata i32* %data_ready2, metadata !10517, metadata !DIExpression()), !dbg !10518
  store i32 0, i32* %data_ready2, align 4, !dbg !10518
  call void @llvm.dbg.declare(metadata i64* %start, metadata !10519, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.declare(metadata i32* %ready, metadata !10521, metadata !DIExpression()), !dbg !10522
  store i32 0, i32* %ready, align 4, !dbg !10522
  %4 = load i8*, i8** %base, align 8, !dbg !10523
  %add.ptr3 = getelementptr i8, i8* %4, i64 516, !dbg !10524
  call void @writel(i32 1, i8* %add.ptr3) #13, !dbg !10525
  %5 = load i32, i32* %data_ready, align 4, !dbg !10526
  %xor = xor i32 %5, 1048576, !dbg !10527
  %6 = load i8*, i8** %base, align 8, !dbg !10528
  %add.ptr4 = getelementptr i8, i8* %6, i64 132, !dbg !10529
  call void @writel(i32 %xor, i8* %add.ptr4) #13, !dbg !10530
  %7 = load volatile i64, i64* @jiffies, align 8, !dbg !10531
  store i64 %7, i64* %start, align 8, !dbg !10532
  br label %while.cond, !dbg !10533

while.cond:                                       ; preds = %if.end, %entry
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !10534
  %9 = load i64, i64* %start, align 8, !dbg !10534
  %add = add i64 %9, 1250, !dbg !10534
  %sub = sub i64 %8, %add, !dbg !10534
  %cmp = icmp slt i64 %sub, 0, !dbg !10534
  br i1 %cmp, label %while.body, label %while.end, !dbg !10533

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %base, align 8, !dbg !10535
  %add.ptr5 = getelementptr i8, i8* %10, i64 132, !dbg !10537
  %call6 = call i32 @readl(i8* %add.ptr5) #13, !dbg !10538
  store i32 %call6, i32* %data_ready2, align 4, !dbg !10539
  %11 = load i32, i32* %data_ready, align 4, !dbg !10540
  %and = and i32 %11, 65536, !dbg !10542
  %12 = load i32, i32* %data_ready2, align 4, !dbg !10543
  %and7 = and i32 %12, 65536, !dbg !10544
  %cmp8 = icmp ne i32 %and, %and7, !dbg !10545
  br i1 %cmp8, label %if.then, label %if.end, !dbg !10546

if.then:                                          ; preds = %while.body
  store i32 1, i32* %ready, align 4, !dbg !10547
  br label %while.end, !dbg !10549

if.end:                                           ; preds = %while.body
  %call9 = call i64 @schedule_timeout_uninterruptible(i64 1) #13, !dbg !10550
  br label %while.cond, !dbg !10533, !llvm.loop !10551

while.end:                                        ; preds = %if.then, %while.cond
  %13 = load i32, i32* %ready, align 4, !dbg !10553
  %tobool = icmp ne i32 %13, 0, !dbg !10553
  br i1 %tobool, label %lor.lhs.false, label %if.then12, !dbg !10555

lor.lhs.false:                                    ; preds = %while.end
  %14 = load i32, i32* %data_ready2, align 4, !dbg !10556
  %and10 = and i32 %14, 131072, !dbg !10557
  %tobool11 = icmp ne i32 %and10, 0, !dbg !10557
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !10558

if.then12:                                        ; preds = %lor.lhs.false, %while.end
  store i32 0, i32* %retval, align 4, !dbg !10559
  br label %return, !dbg !10559

if.end13:                                         ; preds = %lor.lhs.false
  %15 = load i8*, i8** %base, align 8, !dbg !10560
  %add.ptr14 = getelementptr i8, i8* %15, i64 520, !dbg !10561
  %call15 = call i32 @readl(i8* %add.ptr14) #13, !dbg !10562
  %and16 = and i32 %call15, 8, !dbg !10563
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10564
  %mgmt_version = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 31, !dbg !10565
  store i32 %and16, i32* %mgmt_version, align 4, !dbg !10566
  store i32 1, i32* %retval, align 4, !dbg !10567
  br label %return, !dbg !10567

return:                                           ; preds = %if.end13, %if.then12
  %17 = load i32, i32* %retval, align 4, !dbg !10568
  ret i32 %17, !dbg !10568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mii_rw(%struct.net_device* %dev, i32 %addr, i32 %miireg, i32 %value) #2 !dbg !10569 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %addr.addr = alloca i32, align 4
  %miireg.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %base = alloca i8*, align 8
  %reg = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10570, metadata !DIExpression()), !dbg !10571
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !10572, metadata !DIExpression()), !dbg !10573
  store i32 %miireg, i32* %miireg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %miireg.addr, metadata !10574, metadata !DIExpression()), !dbg !10575
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10578, metadata !DIExpression()), !dbg !10579
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10580
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !10581
  store i8* %call, i8** %base, align 8, !dbg !10579
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10582, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10584, metadata !DIExpression()), !dbg !10585
  %1 = load i8*, i8** %base, align 8, !dbg !10586
  %add.ptr = getelementptr i8, i8* %1, i64 384, !dbg !10587
  call void @writel(i32 7, i8* %add.ptr) #13, !dbg !10588
  %2 = load i8*, i8** %base, align 8, !dbg !10589
  %add.ptr2 = getelementptr i8, i8* %2, i64 400, !dbg !10590
  %call3 = call i32 @readl(i8* %add.ptr2) #13, !dbg !10591
  store i32 %call3, i32* %reg, align 4, !dbg !10592
  %3 = load i32, i32* %reg, align 4, !dbg !10593
  %and = and i32 %3, 32768, !dbg !10595
  %tobool = icmp ne i32 %and, 0, !dbg !10595
  br i1 %tobool, label %if.then, label %if.end, !dbg !10596

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %base, align 8, !dbg !10597
  %add.ptr4 = getelementptr i8, i8* %4, i64 400, !dbg !10599
  call void @writel(i32 32768, i8* %add.ptr4) #13, !dbg !10600
  call void @__const_udelay(i64 214750) #13, !dbg !10601
  br label %if.end, !dbg !10606

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %addr.addr, align 4, !dbg !10607
  %shl = shl i32 %5, 5, !dbg !10608
  %6 = load i32, i32* %miireg.addr, align 4, !dbg !10609
  %or = or i32 %shl, %6, !dbg !10610
  store i32 %or, i32* %reg, align 4, !dbg !10611
  %7 = load i32, i32* %value.addr, align 4, !dbg !10612
  %cmp = icmp ne i32 %7, -1, !dbg !10614
  br i1 %cmp, label %if.then5, label %if.end8, !dbg !10615

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %value.addr, align 4, !dbg !10616
  %9 = load i8*, i8** %base, align 8, !dbg !10618
  %add.ptr6 = getelementptr i8, i8* %9, i64 404, !dbg !10619
  call void @writel(i32 %8, i8* %add.ptr6) #13, !dbg !10620
  %10 = load i32, i32* %reg, align 4, !dbg !10621
  %or7 = or i32 %10, 1024, !dbg !10621
  store i32 %or7, i32* %reg, align 4, !dbg !10621
  br label %if.end8, !dbg !10622

if.end8:                                          ; preds = %if.then5, %if.end
  %11 = load i32, i32* %reg, align 4, !dbg !10623
  %12 = load i8*, i8** %base, align 8, !dbg !10624
  %add.ptr9 = getelementptr i8, i8* %12, i64 400, !dbg !10625
  call void @writel(i32 %11, i8* %add.ptr9) #13, !dbg !10626
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10627
  %call10 = call i32 @reg_delay(%struct.net_device* %13, i32 400, i32 32768, i32 0, i32 10, i32 10000) #13, !dbg !10629
  %tobool11 = icmp ne i32 %call10, 0, !dbg !10629
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !10630

if.then12:                                        ; preds = %if.end8
  store i32 -1, i32* %retval1, align 4, !dbg !10631
  br label %if.end26, !dbg !10633

if.else:                                          ; preds = %if.end8
  %14 = load i32, i32* %value.addr, align 4, !dbg !10634
  %cmp13 = icmp ne i32 %14, -1, !dbg !10636
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !10637

if.then14:                                        ; preds = %if.else
  store i32 0, i32* %retval1, align 4, !dbg !10638
  br label %if.end25, !dbg !10640

if.else15:                                        ; preds = %if.else
  %15 = load i8*, i8** %base, align 8, !dbg !10641
  %add.ptr16 = getelementptr i8, i8* %15, i64 384, !dbg !10643
  %call17 = call i32 @readl(i8* %add.ptr16) #13, !dbg !10644
  %and18 = and i32 %call17, 1, !dbg !10645
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10645
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !10646

if.then20:                                        ; preds = %if.else15
  store i32 -1, i32* %retval1, align 4, !dbg !10647
  br label %if.end24, !dbg !10649

if.else21:                                        ; preds = %if.else15
  %16 = load i8*, i8** %base, align 8, !dbg !10650
  %add.ptr22 = getelementptr i8, i8* %16, i64 404, !dbg !10652
  %call23 = call i32 @readl(i8* %add.ptr22) #13, !dbg !10653
  store i32 %call23, i32* %retval1, align 4, !dbg !10654
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then14
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then12
  %17 = load i32, i32* %retval1, align 4, !dbg !10655
  ret i32 %17, !dbg !10656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_init(%struct.net_device* %dev) #2 !dbg !10657 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %phyinterface = alloca i32, align 4
  %mii_status = alloca i32, align 4
  %mii_control = alloca i32, align 4
  %mii_control_1000 = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10658, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !10660, metadata !DIExpression()), !dbg !10661
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10662
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !10663
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !10661
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10664, metadata !DIExpression()), !dbg !10665
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10666
  %call1 = call i8* @get_hwbase(%struct.net_device* %1) #13, !dbg !10667
  store i8* %call1, i8** %base, align 8, !dbg !10665
  call void @llvm.dbg.declare(metadata i32* %phyinterface, metadata !10668, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.declare(metadata i32* %mii_status, metadata !10670, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.declare(metadata i32* %mii_control, metadata !10672, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.declare(metadata i32* %mii_control_1000, metadata !10674, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10676, metadata !DIExpression()), !dbg !10677
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10678
  %phy_model = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 13, !dbg !10680
  %3 = load i32, i32* %phy_model, align 8, !dbg !10680
  %cmp = icmp eq i32 %3, 544, !dbg !10681
  br i1 %cmp, label %if.then, label %if.end7, !dbg !10682

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10683
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10685
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 10, !dbg !10686
  %6 = load i32, i32* %phyaddr, align 4, !dbg !10686
  %call2 = call i32 @mii_rw(%struct.net_device* %4, i32 %6, i32 28, i32 -1) #13, !dbg !10687
  store i32 %call2, i32* %reg, align 4, !dbg !10688
  %7 = load i32, i32* %reg, align 4, !dbg !10689
  %and = and i32 %7, -769, !dbg !10689
  store i32 %and, i32* %reg, align 4, !dbg !10689
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10690
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10692
  %phyaddr3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 10, !dbg !10693
  %10 = load i32, i32* %phyaddr3, align 4, !dbg !10693
  %11 = load i32, i32* %reg, align 4, !dbg !10694
  %call4 = call i32 @mii_rw(%struct.net_device* %8, i32 %10, i32 28, i32 %11) #13, !dbg !10695
  %tobool = icmp ne i32 %call4, 0, !dbg !10695
  br i1 %tobool, label %if.then5, label %if.end, !dbg !10696

if.then5:                                         ; preds = %if.then
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10697
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10699
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 20, !dbg !10700
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !10700
  %call6 = call i8* @pci_name(%struct.pci_dev* %14) #13, !dbg !10701
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.63, i64 0, i64 0), i8* %call6) #14, !dbg !10702
  store i32 2, i32* %retval, align 4, !dbg !10703
  br label %return, !dbg !10703

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !10704

if.end7:                                          ; preds = %if.end, %entry
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10705
  %phy_oui = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 12, !dbg !10707
  %16 = load i32, i32* %phy_oui, align 4, !dbg !10707
  %cmp8 = icmp eq i32 %16, 1842, !dbg !10708
  br i1 %cmp8, label %if.then9, label %if.end45, !dbg !10709

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10710
  %phy_model10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 13, !dbg !10713
  %18 = load i32, i32* %phy_model10, align 8, !dbg !10713
  %cmp11 = icmp eq i32 %18, 272, !dbg !10714
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !10715

land.lhs.true:                                    ; preds = %if.then9
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10716
  %phy_rev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 14, !dbg !10717
  %20 = load i32, i32* %phy_rev, align 4, !dbg !10717
  %cmp12 = icmp eq i32 %20, 0, !dbg !10718
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !10719

if.then13:                                        ; preds = %land.lhs.true
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10720
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10723
  %call14 = call i32 @init_realtek_8211b(%struct.net_device* %21, %struct.fe_priv* %22) #13, !dbg !10724
  %tobool15 = icmp ne i32 %call14, 0, !dbg !10724
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !10725

if.then16:                                        ; preds = %if.then13
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10726
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10728
  %pci_dev17 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 20, !dbg !10729
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev17, align 8, !dbg !10729
  %call18 = call i8* @pci_name(%struct.pci_dev* %25) #13, !dbg !10730
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call18) #14, !dbg !10731
  store i32 2, i32* %retval, align 4, !dbg !10732
  br label %return, !dbg !10732

if.end19:                                         ; preds = %if.then13
  br label %if.end44, !dbg !10733

if.else:                                          ; preds = %land.lhs.true, %if.then9
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10734
  %phy_model20 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 13, !dbg !10736
  %27 = load i32, i32* %phy_model20, align 8, !dbg !10736
  %cmp21 = icmp eq i32 %27, 272, !dbg !10737
  br i1 %cmp21, label %land.lhs.true22, label %if.else32, !dbg !10738

land.lhs.true22:                                  ; preds = %if.else
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10739
  %phy_rev23 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 14, !dbg !10740
  %29 = load i32, i32* %phy_rev23, align 4, !dbg !10740
  %cmp24 = icmp eq i32 %29, 1, !dbg !10741
  br i1 %cmp24, label %if.then25, label %if.else32, !dbg !10742

if.then25:                                        ; preds = %land.lhs.true22
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10743
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10746
  %call26 = call i32 @init_realtek_8211c(%struct.net_device* %30, %struct.fe_priv* %31) #13, !dbg !10747
  %tobool27 = icmp ne i32 %call26, 0, !dbg !10747
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !10748

if.then28:                                        ; preds = %if.then25
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10749
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10751
  %pci_dev29 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 20, !dbg !10752
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev29, align 8, !dbg !10752
  %call30 = call i8* @pci_name(%struct.pci_dev* %34) #13, !dbg !10753
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call30) #14, !dbg !10754
  store i32 2, i32* %retval, align 4, !dbg !10755
  br label %return, !dbg !10755

if.end31:                                         ; preds = %if.then25
  br label %if.end43, !dbg !10756

if.else32:                                        ; preds = %land.lhs.true22, %if.else
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10757
  %phy_model33 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 13, !dbg !10759
  %36 = load i32, i32* %phy_model33, align 8, !dbg !10759
  %cmp34 = icmp eq i32 %36, 512, !dbg !10760
  br i1 %cmp34, label %if.then35, label %if.end42, !dbg !10761

if.then35:                                        ; preds = %if.else32
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10762
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10765
  %call36 = call i32 @init_realtek_8201(%struct.net_device* %37, %struct.fe_priv* %38) #13, !dbg !10766
  %tobool37 = icmp ne i32 %call36, 0, !dbg !10766
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !10767

if.then38:                                        ; preds = %if.then35
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10768
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10770
  %pci_dev39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 20, !dbg !10771
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev39, align 8, !dbg !10771
  %call40 = call i8* @pci_name(%struct.pci_dev* %41) #13, !dbg !10772
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %39, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call40) #14, !dbg !10773
  store i32 2, i32* %retval, align 4, !dbg !10774
  br label %return, !dbg !10774

if.end41:                                         ; preds = %if.then35
  br label %if.end42, !dbg !10775

if.end42:                                         ; preds = %if.end41, %if.else32
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end31
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end19
  br label %if.end45, !dbg !10776

if.end45:                                         ; preds = %if.end44, %if.end7
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10777
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10778
  %phyaddr46 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 10, !dbg !10779
  %44 = load i32, i32* %phyaddr46, align 4, !dbg !10779
  %call47 = call i32 @mii_rw(%struct.net_device* %42, i32 %44, i32 4, i32 -1) #13, !dbg !10780
  store i32 %call47, i32* %reg, align 4, !dbg !10781
  %45 = load i32, i32* %reg, align 4, !dbg !10782
  %or = or i32 %45, 3552, !dbg !10782
  store i32 %or, i32* %reg, align 4, !dbg !10782
  %46 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10783
  %47 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10785
  %phyaddr48 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %47, i32 0, i32 10, !dbg !10786
  %48 = load i32, i32* %phyaddr48, align 4, !dbg !10786
  %49 = load i32, i32* %reg, align 4, !dbg !10787
  %call49 = call i32 @mii_rw(%struct.net_device* %46, i32 %48, i32 4, i32 %49) #13, !dbg !10788
  %tobool50 = icmp ne i32 %call49, 0, !dbg !10788
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !10789

if.then51:                                        ; preds = %if.end45
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10790
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10792
  %pci_dev52 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 20, !dbg !10793
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev52, align 8, !dbg !10793
  %call53 = call i8* @pci_name(%struct.pci_dev* %52) #13, !dbg !10794
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %50, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.65, i64 0, i64 0), i8* %call53) #14, !dbg !10795
  store i32 2, i32* %retval, align 4, !dbg !10796
  br label %return, !dbg !10796

if.end54:                                         ; preds = %if.end45
  %53 = load i8*, i8** %base, align 8, !dbg !10797
  %add.ptr = getelementptr i8, i8* %53, i64 192, !dbg !10798
  %call55 = call i32 @readl(i8* %add.ptr) #13, !dbg !10799
  store i32 %call55, i32* %phyinterface, align 4, !dbg !10800
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10801
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10802
  %phyaddr56 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 10, !dbg !10803
  %56 = load i32, i32* %phyaddr56, align 4, !dbg !10803
  %call57 = call i32 @mii_rw(%struct.net_device* %54, i32 %56, i32 1, i32 -1) #13, !dbg !10804
  store i32 %call57, i32* %mii_status, align 4, !dbg !10805
  %57 = load i32, i32* %mii_status, align 4, !dbg !10806
  %and58 = and i32 %57, 256, !dbg !10808
  %tobool59 = icmp ne i32 %and58, 0, !dbg !10808
  br i1 %tobool59, label %if.then60, label %if.else78, !dbg !10809

if.then60:                                        ; preds = %if.end54
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10810
  %gigabit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 15, !dbg !10812
  store i16 256, i16* %gigabit, align 8, !dbg !10813
  %59 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10814
  %60 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10815
  %phyaddr61 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %60, i32 0, i32 10, !dbg !10816
  %61 = load i32, i32* %phyaddr61, align 4, !dbg !10816
  %call62 = call i32 @mii_rw(%struct.net_device* %59, i32 %61, i32 9, i32 -1) #13, !dbg !10817
  store i32 %call62, i32* %mii_control_1000, align 4, !dbg !10818
  %62 = load i32, i32* %mii_control_1000, align 4, !dbg !10819
  %and63 = and i32 %62, -257, !dbg !10819
  store i32 %and63, i32* %mii_control_1000, align 4, !dbg !10819
  %63 = load i32, i32* %phyinterface, align 4, !dbg !10820
  %and64 = and i32 %63, 268435456, !dbg !10822
  %tobool65 = icmp ne i32 %and64, 0, !dbg !10822
  br i1 %tobool65, label %if.then66, label %if.else68, !dbg !10823

if.then66:                                        ; preds = %if.then60
  %64 = load i32, i32* %mii_control_1000, align 4, !dbg !10824
  %or67 = or i32 %64, 512, !dbg !10824
  store i32 %or67, i32* %mii_control_1000, align 4, !dbg !10824
  br label %if.end70, !dbg !10825

if.else68:                                        ; preds = %if.then60
  %65 = load i32, i32* %mii_control_1000, align 4, !dbg !10826
  %and69 = and i32 %65, -513, !dbg !10826
  store i32 %and69, i32* %mii_control_1000, align 4, !dbg !10826
  br label %if.end70

if.end70:                                         ; preds = %if.else68, %if.then66
  %66 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10827
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10829
  %phyaddr71 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 10, !dbg !10830
  %68 = load i32, i32* %phyaddr71, align 4, !dbg !10830
  %69 = load i32, i32* %mii_control_1000, align 4, !dbg !10831
  %call72 = call i32 @mii_rw(%struct.net_device* %66, i32 %68, i32 9, i32 %69) #13, !dbg !10832
  %tobool73 = icmp ne i32 %call72, 0, !dbg !10832
  br i1 %tobool73, label %if.then74, label %if.end77, !dbg !10833

if.then74:                                        ; preds = %if.end70
  %70 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10834
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10836
  %pci_dev75 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 20, !dbg !10837
  %72 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev75, align 8, !dbg !10837
  %call76 = call i8* @pci_name(%struct.pci_dev* %72) #13, !dbg !10838
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %70, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call76) #14, !dbg !10839
  store i32 2, i32* %retval, align 4, !dbg !10840
  br label %return, !dbg !10840

if.end77:                                         ; preds = %if.end70
  br label %if.end80, !dbg !10841

if.else78:                                        ; preds = %if.end54
  %73 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10842
  %gigabit79 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %73, i32 0, i32 15, !dbg !10843
  store i16 0, i16* %gigabit79, align 8, !dbg !10844
  br label %if.end80

if.end80:                                         ; preds = %if.else78, %if.end77
  %74 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10845
  %75 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10846
  %phyaddr81 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %75, i32 0, i32 10, !dbg !10847
  %76 = load i32, i32* %phyaddr81, align 4, !dbg !10847
  %call82 = call i32 @mii_rw(%struct.net_device* %74, i32 %76, i32 0, i32 -1) #13, !dbg !10848
  store i32 %call82, i32* %mii_control, align 4, !dbg !10849
  %77 = load i32, i32* %mii_control, align 4, !dbg !10850
  %or83 = or i32 %77, 4096, !dbg !10850
  store i32 %or83, i32* %mii_control, align 4, !dbg !10850
  %78 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10851
  %phy_oui84 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %78, i32 0, i32 12, !dbg !10853
  %79 = load i32, i32* %phy_oui84, align 4, !dbg !10853
  %cmp85 = icmp eq i32 %79, 1842, !dbg !10854
  br i1 %cmp85, label %land.lhs.true86, label %if.else101, !dbg !10855

land.lhs.true86:                                  ; preds = %if.end80
  %80 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10856
  %phy_model87 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %80, i32 0, i32 13, !dbg !10857
  %81 = load i32, i32* %phy_model87, align 8, !dbg !10857
  %cmp88 = icmp eq i32 %81, 272, !dbg !10858
  br i1 %cmp88, label %land.lhs.true89, label %if.else101, !dbg !10859

land.lhs.true89:                                  ; preds = %land.lhs.true86
  %82 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10860
  %phy_rev90 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %82, i32 0, i32 14, !dbg !10861
  %83 = load i32, i32* %phy_rev90, align 4, !dbg !10861
  %cmp91 = icmp eq i32 %83, 1, !dbg !10862
  br i1 %cmp91, label %if.then92, label %if.else101, !dbg !10863

if.then92:                                        ; preds = %land.lhs.true89
  %84 = load i32, i32* %mii_control, align 4, !dbg !10864
  %or93 = or i32 %84, 512, !dbg !10864
  store i32 %or93, i32* %mii_control, align 4, !dbg !10864
  %85 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10866
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10868
  %phyaddr94 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %86, i32 0, i32 10, !dbg !10869
  %87 = load i32, i32* %phyaddr94, align 4, !dbg !10869
  %88 = load i32, i32* %mii_control, align 4, !dbg !10870
  %call95 = call i32 @mii_rw(%struct.net_device* %85, i32 %87, i32 0, i32 %88) #13, !dbg !10871
  %tobool96 = icmp ne i32 %call95, 0, !dbg !10871
  br i1 %tobool96, label %if.then97, label %if.end100, !dbg !10872

if.then97:                                        ; preds = %if.then92
  %89 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10873
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10875
  %pci_dev98 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 20, !dbg !10876
  %91 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev98, align 8, !dbg !10876
  %call99 = call i8* @pci_name(%struct.pci_dev* %91) #13, !dbg !10877
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %89, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call99) #14, !dbg !10878
  store i32 2, i32* %retval, align 4, !dbg !10879
  br label %return, !dbg !10879

if.end100:                                        ; preds = %if.then92
  br label %if.end108, !dbg !10880

if.else101:                                       ; preds = %land.lhs.true89, %land.lhs.true86, %if.end80
  %92 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10881
  %93 = load i32, i32* %mii_control, align 4, !dbg !10884
  %call102 = call i32 @phy_reset(%struct.net_device* %92, i32 %93) #13, !dbg !10885
  %tobool103 = icmp ne i32 %call102, 0, !dbg !10885
  br i1 %tobool103, label %if.then104, label %if.end107, !dbg !10886

if.then104:                                       ; preds = %if.else101
  %94 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10887
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10889
  %pci_dev105 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 20, !dbg !10890
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev105, align 8, !dbg !10890
  %call106 = call i8* @pci_name(%struct.pci_dev* %96) #13, !dbg !10891
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %94, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0), i8* %call106) #14, !dbg !10892
  store i32 2, i32* %retval, align 4, !dbg !10893
  br label %return, !dbg !10893

if.end107:                                        ; preds = %if.else101
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end100
  %97 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10894
  %phy_oui109 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %97, i32 0, i32 12, !dbg !10896
  %98 = load i32, i32* %phy_oui109, align 4, !dbg !10896
  %cmp110 = icmp eq i32 %98, 1009, !dbg !10897
  br i1 %cmp110, label %if.then111, label %if.else118, !dbg !10898

if.then111:                                       ; preds = %if.end108
  %99 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10899
  %100 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10902
  %101 = load i32, i32* %phyinterface, align 4, !dbg !10903
  %call112 = call i32 @init_cicada(%struct.net_device* %99, %struct.fe_priv* %100, i32 %101) #13, !dbg !10904
  %tobool113 = icmp ne i32 %call112, 0, !dbg !10904
  br i1 %tobool113, label %if.then114, label %if.end117, !dbg !10905

if.then114:                                       ; preds = %if.then111
  %102 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10906
  %103 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10908
  %pci_dev115 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %103, i32 0, i32 20, !dbg !10909
  %104 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev115, align 8, !dbg !10909
  %call116 = call i8* @pci_name(%struct.pci_dev* %104) #13, !dbg !10910
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %102, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call116) #14, !dbg !10911
  store i32 2, i32* %retval, align 4, !dbg !10912
  br label %return, !dbg !10912

if.end117:                                        ; preds = %if.then111
  br label %if.end160, !dbg !10913

if.else118:                                       ; preds = %if.end108
  %105 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10914
  %phy_oui119 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %105, i32 0, i32 12, !dbg !10916
  %106 = load i32, i32* %phy_oui119, align 4, !dbg !10916
  %cmp120 = icmp eq i32 %106, 449, !dbg !10917
  br i1 %cmp120, label %if.then121, label %if.else128, !dbg !10918

if.then121:                                       ; preds = %if.else118
  %107 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10919
  %108 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10922
  %call122 = call i32 @init_vitesse(%struct.net_device* %107, %struct.fe_priv* %108) #13, !dbg !10923
  %tobool123 = icmp ne i32 %call122, 0, !dbg !10923
  br i1 %tobool123, label %if.then124, label %if.end127, !dbg !10924

if.then124:                                       ; preds = %if.then121
  %109 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10925
  %110 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10927
  %pci_dev125 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %110, i32 0, i32 20, !dbg !10928
  %111 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev125, align 8, !dbg !10928
  %call126 = call i8* @pci_name(%struct.pci_dev* %111) #13, !dbg !10929
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %109, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call126) #14, !dbg !10930
  store i32 2, i32* %retval, align 4, !dbg !10931
  br label %return, !dbg !10931

if.end127:                                        ; preds = %if.then121
  br label %if.end159, !dbg !10932

if.else128:                                       ; preds = %if.else118
  %112 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10933
  %phy_oui129 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %112, i32 0, i32 12, !dbg !10935
  %113 = load i32, i32* %phy_oui129, align 4, !dbg !10935
  %cmp130 = icmp eq i32 %113, 1842, !dbg !10936
  br i1 %cmp130, label %if.then131, label %if.end158, !dbg !10937

if.then131:                                       ; preds = %if.else128
  %114 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10938
  %phy_model132 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %114, i32 0, i32 13, !dbg !10941
  %115 = load i32, i32* %phy_model132, align 8, !dbg !10941
  %cmp133 = icmp eq i32 %115, 272, !dbg !10942
  br i1 %cmp133, label %land.lhs.true134, label %if.else144, !dbg !10943

land.lhs.true134:                                 ; preds = %if.then131
  %116 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10944
  %phy_rev135 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %116, i32 0, i32 14, !dbg !10945
  %117 = load i32, i32* %phy_rev135, align 4, !dbg !10945
  %cmp136 = icmp eq i32 %117, 0, !dbg !10946
  br i1 %cmp136, label %if.then137, label %if.else144, !dbg !10947

if.then137:                                       ; preds = %land.lhs.true134
  %118 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10948
  %119 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10951
  %call138 = call i32 @init_realtek_8211b(%struct.net_device* %118, %struct.fe_priv* %119) #13, !dbg !10952
  %tobool139 = icmp ne i32 %call138, 0, !dbg !10952
  br i1 %tobool139, label %if.then140, label %if.end143, !dbg !10953

if.then140:                                       ; preds = %if.then137
  %120 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10954
  %121 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10956
  %pci_dev141 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %121, i32 0, i32 20, !dbg !10957
  %122 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev141, align 8, !dbg !10957
  %call142 = call i8* @pci_name(%struct.pci_dev* %122) #13, !dbg !10958
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %120, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call142) #14, !dbg !10959
  store i32 2, i32* %retval, align 4, !dbg !10960
  br label %return, !dbg !10960

if.end143:                                        ; preds = %if.then137
  br label %if.end157, !dbg !10961

if.else144:                                       ; preds = %land.lhs.true134, %if.then131
  %123 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10962
  %phy_model145 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %123, i32 0, i32 13, !dbg !10964
  %124 = load i32, i32* %phy_model145, align 8, !dbg !10964
  %cmp146 = icmp eq i32 %124, 512, !dbg !10965
  br i1 %cmp146, label %if.then147, label %if.end156, !dbg !10966

if.then147:                                       ; preds = %if.else144
  %125 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10967
  %126 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10970
  %call148 = call i32 @init_realtek_8201(%struct.net_device* %125, %struct.fe_priv* %126) #13, !dbg !10971
  %tobool149 = icmp ne i32 %call148, 0, !dbg !10971
  br i1 %tobool149, label %if.then152, label %lor.lhs.false, !dbg !10972

lor.lhs.false:                                    ; preds = %if.then147
  %127 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10973
  %128 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10974
  %call150 = call i32 @init_realtek_8201_cross(%struct.net_device* %127, %struct.fe_priv* %128) #13, !dbg !10975
  %tobool151 = icmp ne i32 %call150, 0, !dbg !10975
  br i1 %tobool151, label %if.then152, label %if.end155, !dbg !10976

if.then152:                                       ; preds = %lor.lhs.false, %if.then147
  %129 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10977
  %130 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10979
  %pci_dev153 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %130, i32 0, i32 20, !dbg !10980
  %131 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev153, align 8, !dbg !10980
  %call154 = call i8* @pci_name(%struct.pci_dev* %131) #13, !dbg !10981
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %129, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %call154) #14, !dbg !10982
  store i32 2, i32* %retval, align 4, !dbg !10983
  br label %return, !dbg !10983

if.end155:                                        ; preds = %lor.lhs.false
  br label %if.end156, !dbg !10984

if.end156:                                        ; preds = %if.end155, %if.else144
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.end143
  br label %if.end158, !dbg !10985

if.end158:                                        ; preds = %if.end157, %if.else128
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.end127
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.end117
  %132 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10986
  %133 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10987
  %phyaddr161 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %133, i32 0, i32 10, !dbg !10988
  %134 = load i32, i32* %phyaddr161, align 4, !dbg !10988
  %135 = load i32, i32* %reg, align 4, !dbg !10989
  %call162 = call i32 @mii_rw(%struct.net_device* %132, i32 %134, i32 4, i32 %135) #13, !dbg !10990
  %136 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10991
  %137 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !10992
  %phyaddr163 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %137, i32 0, i32 10, !dbg !10993
  %138 = load i32, i32* %phyaddr163, align 4, !dbg !10993
  %call164 = call i32 @mii_rw(%struct.net_device* %136, i32 %138, i32 0, i32 -1) #13, !dbg !10994
  store i32 %call164, i32* %mii_control, align 4, !dbg !10995
  %139 = load i32, i32* %mii_control, align 4, !dbg !10996
  %or165 = or i32 %139, 4608, !dbg !10996
  store i32 %or165, i32* %mii_control, align 4, !dbg !10996
  %140 = load i32, i32* @phy_power_down, align 4, !dbg !10997
  %tobool166 = icmp ne i32 %140, 0, !dbg !10997
  br i1 %tobool166, label %if.then167, label %if.end169, !dbg !10999

if.then167:                                       ; preds = %if.end160
  %141 = load i32, i32* %mii_control, align 4, !dbg !11000
  %or168 = or i32 %141, 2048, !dbg !11000
  store i32 %or168, i32* %mii_control, align 4, !dbg !11000
  br label %if.end169, !dbg !11001

if.end169:                                        ; preds = %if.then167, %if.end160
  %142 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11002
  %143 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11004
  %phyaddr170 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %143, i32 0, i32 10, !dbg !11005
  %144 = load i32, i32* %phyaddr170, align 4, !dbg !11005
  %145 = load i32, i32* %mii_control, align 4, !dbg !11006
  %call171 = call i32 @mii_rw(%struct.net_device* %142, i32 %144, i32 0, i32 %145) #13, !dbg !11007
  %tobool172 = icmp ne i32 %call171, 0, !dbg !11007
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !11008

if.then173:                                       ; preds = %if.end169
  store i32 2, i32* %retval, align 4, !dbg !11009
  br label %return, !dbg !11009

if.end174:                                        ; preds = %if.end169
  store i32 0, i32* %retval, align 4, !dbg !11010
  br label %return, !dbg !11010

return:                                           ; preds = %if.end174, %if.then173, %if.then152, %if.then140, %if.then124, %if.then114, %if.then104, %if.then97, %if.then74, %if.then51, %if.then38, %if.then28, %if.then16, %if.then5
  %146 = load i32, i32* %retval, align 4, !dbg !11011
  ret i32 %146, !dbg !11011
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_update_pause(%struct.net_device* %dev, i32 %pause_flags) #2 !dbg !11012 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %pause_flags.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %pff = alloca i32, align 4
  %regmisc = alloca i32, align 4
  %pause_enable = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11013, metadata !DIExpression()), !dbg !11014
  store i32 %pause_flags, i32* %pause_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pause_flags.addr, metadata !11015, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11017, metadata !DIExpression()), !dbg !11018
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11019
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !11020
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !11020
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !11018
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11021, metadata !DIExpression()), !dbg !11022
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11023
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !11024
  store i8* %call1, i8** %base, align 8, !dbg !11022
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11025
  %pause_flags2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 71, !dbg !11026
  %4 = load i32, i32* %pause_flags2, align 8, !dbg !11027
  %and = and i32 %4, -13, !dbg !11027
  store i32 %and, i32* %pause_flags2, align 8, !dbg !11027
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11028
  %pause_flags3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 71, !dbg !11030
  %6 = load i32, i32* %pause_flags3, align 8, !dbg !11030
  %and4 = and i32 %6, 1, !dbg !11031
  %tobool = icmp ne i32 %and4, 0, !dbg !11031
  br i1 %tobool, label %if.then, label %if.end14, !dbg !11032

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pff, metadata !11033, metadata !DIExpression()), !dbg !11035
  %7 = load i8*, i8** %base, align 8, !dbg !11036
  %add.ptr = getelementptr i8, i8* %7, i64 140, !dbg !11037
  %call5 = call i32 @readl(i8* %add.ptr) #13, !dbg !11038
  %and6 = and i32 %call5, -9, !dbg !11039
  store i32 %and6, i32* %pff, align 4, !dbg !11035
  %8 = load i32, i32* %pause_flags.addr, align 4, !dbg !11040
  %and7 = and i32 %8, 4, !dbg !11042
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11042
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !11043

if.then9:                                         ; preds = %if.then
  %9 = load i32, i32* %pff, align 4, !dbg !11044
  %or = or i32 %9, 8, !dbg !11046
  %10 = load i8*, i8** %base, align 8, !dbg !11047
  %add.ptr10 = getelementptr i8, i8* %10, i64 140, !dbg !11048
  call void @writel(i32 %or, i8* %add.ptr10) #13, !dbg !11049
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11050
  %pause_flags11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 71, !dbg !11051
  %12 = load i32, i32* %pause_flags11, align 8, !dbg !11052
  %or12 = or i32 %12, 4, !dbg !11052
  store i32 %or12, i32* %pause_flags11, align 8, !dbg !11052
  br label %if.end, !dbg !11053

if.else:                                          ; preds = %if.then
  %13 = load i32, i32* %pff, align 4, !dbg !11054
  %14 = load i8*, i8** %base, align 8, !dbg !11056
  %add.ptr13 = getelementptr i8, i8* %14, i64 140, !dbg !11057
  call void @writel(i32 %13, i8* %add.ptr13) #13, !dbg !11058
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end14, !dbg !11059

if.end14:                                         ; preds = %if.end, %entry
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11060
  %pause_flags15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 71, !dbg !11062
  %16 = load i32, i32* %pause_flags15, align 8, !dbg !11062
  %and16 = and i32 %16, 2, !dbg !11063
  %tobool17 = icmp ne i32 %and16, 0, !dbg !11063
  br i1 %tobool17, label %if.then18, label %if.end47, !dbg !11064

if.then18:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i32* %regmisc, metadata !11065, metadata !DIExpression()), !dbg !11067
  %17 = load i8*, i8** %base, align 8, !dbg !11068
  %add.ptr19 = getelementptr i8, i8* %17, i64 128, !dbg !11069
  %call20 = call i32 @readl(i8* %add.ptr19) #13, !dbg !11070
  %and21 = and i32 %call20, -2, !dbg !11071
  store i32 %and21, i32* %regmisc, align 4, !dbg !11067
  %18 = load i32, i32* %pause_flags.addr, align 4, !dbg !11072
  %and22 = and i32 %18, 8, !dbg !11074
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11074
  br i1 %tobool23, label %if.then24, label %if.else43, !dbg !11075

if.then24:                                        ; preds = %if.then18
  call void @llvm.dbg.declare(metadata i32* %pause_enable, metadata !11076, metadata !DIExpression()), !dbg !11078
  store i32 25165840, i32* %pause_enable, align 4, !dbg !11078
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11079
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 27, !dbg !11081
  %20 = load i32, i32* %driver_data, align 4, !dbg !11081
  %and25 = and i32 %20, 131072, !dbg !11082
  %tobool26 = icmp ne i32 %and25, 0, !dbg !11082
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !11083

if.then27:                                        ; preds = %if.then24
  store i32 90178544, i32* %pause_enable, align 4, !dbg !11084
  br label %if.end28, !dbg !11085

if.end28:                                         ; preds = %if.then27, %if.then24
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11086
  %driver_data29 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 27, !dbg !11088
  %22 = load i32, i32* %driver_data29, align 4, !dbg !11088
  %and30 = and i32 %22, 262144, !dbg !11089
  %tobool31 = icmp ne i32 %and30, 0, !dbg !11089
  br i1 %tobool31, label %if.then32, label %if.end37, !dbg !11090

if.then32:                                        ; preds = %if.end28
  store i32 166725760, i32* %pause_enable, align 4, !dbg !11091
  %23 = load i8*, i8** %base, align 8, !dbg !11093
  %add.ptr33 = getelementptr i8, i8* %23, i64 372, !dbg !11094
  %call34 = call i32 @readl(i8* %add.ptr33) #13, !dbg !11095
  %or35 = or i32 %call34, 65536, !dbg !11096
  %24 = load i8*, i8** %base, align 8, !dbg !11097
  %add.ptr36 = getelementptr i8, i8* %24, i64 372, !dbg !11098
  call void @writel(i32 %or35, i8* %add.ptr36) #13, !dbg !11099
  br label %if.end37, !dbg !11100

if.end37:                                         ; preds = %if.then32, %if.end28
  %25 = load i32, i32* %pause_enable, align 4, !dbg !11101
  %26 = load i8*, i8** %base, align 8, !dbg !11102
  %add.ptr38 = getelementptr i8, i8* %26, i64 368, !dbg !11103
  call void @writel(i32 %25, i8* %add.ptr38) #13, !dbg !11104
  %27 = load i32, i32* %regmisc, align 4, !dbg !11105
  %or39 = or i32 %27, 1, !dbg !11106
  %28 = load i8*, i8** %base, align 8, !dbg !11107
  %add.ptr40 = getelementptr i8, i8* %28, i64 128, !dbg !11108
  call void @writel(i32 %or39, i8* %add.ptr40) #13, !dbg !11109
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11110
  %pause_flags41 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 71, !dbg !11111
  %30 = load i32, i32* %pause_flags41, align 8, !dbg !11112
  %or42 = or i32 %30, 8, !dbg !11112
  store i32 %or42, i32* %pause_flags41, align 8, !dbg !11112
  br label %if.end46, !dbg !11113

if.else43:                                        ; preds = %if.then18
  %31 = load i8*, i8** %base, align 8, !dbg !11114
  %add.ptr44 = getelementptr i8, i8* %31, i64 368, !dbg !11116
  call void @writel(i32 268370048, i8* %add.ptr44) #13, !dbg !11117
  %32 = load i32, i32* %regmisc, align 4, !dbg !11118
  %33 = load i8*, i8** %base, align 8, !dbg !11119
  %add.ptr45 = getelementptr i8, i8* %33, i64 128, !dbg !11120
  call void @writel(i32 %32, i8* %add.ptr45) #13, !dbg !11121
  br label %if.end46

if.end46:                                         ; preds = %if.else43, %if.end37
  br label %if.end47, !dbg !11122

if.end47:                                         ; preds = %if.end46, %if.end14
  ret void, !dbg !11123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_start_tx(%struct.net_device* %dev) #2 !dbg !11124 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %tx_ctrl = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11125, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11127, metadata !DIExpression()), !dbg !11128
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11129
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !11130
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !11130
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !11128
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11131, metadata !DIExpression()), !dbg !11132
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11133
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !11134
  store i8* %call1, i8** %base, align 8, !dbg !11132
  call void @llvm.dbg.declare(metadata i32* %tx_ctrl, metadata !11135, metadata !DIExpression()), !dbg !11136
  %3 = load i8*, i8** %base, align 8, !dbg !11137
  %add.ptr = getelementptr i8, i8* %3, i64 132, !dbg !11138
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !11139
  store i32 %call2, i32* %tx_ctrl, align 4, !dbg !11136
  %4 = load i32, i32* %tx_ctrl, align 4, !dbg !11140
  %or = or i32 %4, 1, !dbg !11140
  store i32 %or, i32* %tx_ctrl, align 4, !dbg !11140
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11141
  %mac_in_use = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 30, !dbg !11143
  %6 = load i32, i32* %mac_in_use, align 8, !dbg !11143
  %tobool = icmp ne i32 %6, 0, !dbg !11141
  br i1 %tobool, label %if.then, label %if.end, !dbg !11144

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %tx_ctrl, align 4, !dbg !11145
  %and = and i32 %7, -16777217, !dbg !11145
  store i32 %and, i32* %tx_ctrl, align 4, !dbg !11145
  br label %if.end, !dbg !11146

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %tx_ctrl, align 4, !dbg !11147
  %9 = load i8*, i8** %base, align 8, !dbg !11148
  %add.ptr3 = getelementptr i8, i8* %9, i64 132, !dbg !11149
  call void @writel(i32 %8, i8* %add.ptr3) #13, !dbg !11150
  %10 = load i8*, i8** %base, align 8, !dbg !11151
  call void @pci_push(i8* %10) #13, !dbg !11152
  ret void, !dbg !11153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_stop_tx(%struct.net_device* %dev) #2 !dbg !11154 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %tx_ctrl = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11155, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11157, metadata !DIExpression()), !dbg !11158
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11159
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !11160
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !11160
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !11158
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11161, metadata !DIExpression()), !dbg !11162
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11163
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !11164
  store i8* %call1, i8** %base, align 8, !dbg !11162
  call void @llvm.dbg.declare(metadata i32* %tx_ctrl, metadata !11165, metadata !DIExpression()), !dbg !11166
  %3 = load i8*, i8** %base, align 8, !dbg !11167
  %add.ptr = getelementptr i8, i8* %3, i64 132, !dbg !11168
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !11169
  store i32 %call2, i32* %tx_ctrl, align 4, !dbg !11166
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11170
  %mac_in_use = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 30, !dbg !11172
  %5 = load i32, i32* %mac_in_use, align 8, !dbg !11172
  %tobool = icmp ne i32 %5, 0, !dbg !11170
  br i1 %tobool, label %if.else, label %if.then, !dbg !11173

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %tx_ctrl, align 4, !dbg !11174
  %and = and i32 %6, -2, !dbg !11174
  store i32 %and, i32* %tx_ctrl, align 4, !dbg !11174
  br label %if.end, !dbg !11175

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %tx_ctrl, align 4, !dbg !11176
  %or = or i32 %7, 16777216, !dbg !11176
  store i32 %or, i32* %tx_ctrl, align 4, !dbg !11176
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %tx_ctrl, align 4, !dbg !11177
  %9 = load i8*, i8** %base, align 8, !dbg !11178
  %add.ptr3 = getelementptr i8, i8* %9, i64 132, !dbg !11179
  call void @writel(i32 %8, i8* %add.ptr3) #13, !dbg !11180
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11181
  %call4 = call i32 @reg_delay(%struct.net_device* %10, i32 136, i32 1, i32 0, i32 10, i32 500000) #13, !dbg !11183
  %tobool5 = icmp ne i32 %call4, 0, !dbg !11183
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !11184

if.then6:                                         ; preds = %if.end
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11185
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %11, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.nv_stop_tx, i64 0, i64 0)) #14, !dbg !11186
  br label %if.end7, !dbg !11186

if.end7:                                          ; preds = %if.then6, %if.end
  call void @__const_udelay(i64 429500) #13, !dbg !11187
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11192
  %mac_in_use8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 30, !dbg !11194
  %13 = load i32, i32* %mac_in_use8, align 8, !dbg !11194
  %tobool9 = icmp ne i32 %13, 0, !dbg !11192
  br i1 %tobool9, label %if.end15, label %if.then10, !dbg !11195

if.then10:                                        ; preds = %if.end7
  %14 = load i8*, i8** %base, align 8, !dbg !11196
  %add.ptr11 = getelementptr i8, i8* %14, i64 268, !dbg !11197
  %call12 = call i32 @readl(i8* %add.ptr11) #13, !dbg !11198
  %and13 = and i32 %call12, 32768, !dbg !11199
  %15 = load i8*, i8** %base, align 8, !dbg !11200
  %add.ptr14 = getelementptr i8, i8* %15, i64 268, !dbg !11201
  call void @writel(i32 %and13, i8* %add.ptr14) #13, !dbg !11202
  br label %if.end15, !dbg !11202

if.end15:                                         ; preds = %if.then10, %if.end7
  ret void, !dbg !11203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_vlan_mode(%struct.net_device* %dev, i64 %features) #2 !dbg !11204 {
entry:
  %lock.addr.i15 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i15, metadata !8241, metadata !DIExpression()), !dbg !11207
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !11209
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11211, metadata !DIExpression()), !dbg !11212
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !11213, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11215, metadata !DIExpression()), !dbg !11216
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11217
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !11218
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !11216
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11219
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 0, !dbg !11220
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !11221
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11222, !srcloc !9174
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11223
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !11223
  %rlock.i = bitcast %union.anon.2* %3 to %struct.raw_spinlock*, !dbg !11223
  %4 = load i64, i64* %features.addr, align 8, !dbg !11224
  %and = and i64 %4, 256, !dbg !11226
  %tobool = icmp ne i64 %and, 0, !dbg !11226
  br i1 %tobool, label %if.then, label %if.else, !dbg !11227

if.then:                                          ; preds = %entry
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11228
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 25, !dbg !11229
  %6 = load i32, i32* %txrxctl_bits, align 4, !dbg !11230
  %or = or i32 %6, 64, !dbg !11230
  store i32 %or, i32* %txrxctl_bits, align 4, !dbg !11230
  br label %if.end, !dbg !11228

if.else:                                          ; preds = %entry
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11231
  %txrxctl_bits1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 25, !dbg !11232
  %8 = load i32, i32* %txrxctl_bits1, align 4, !dbg !11233
  %and2 = and i32 %8, -65, !dbg !11233
  store i32 %and2, i32* %txrxctl_bits1, align 4, !dbg !11233
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i64, i64* %features.addr, align 8, !dbg !11234
  %and3 = and i64 %9, 128, !dbg !11236
  %tobool4 = icmp ne i64 %and3, 0, !dbg !11236
  br i1 %tobool4, label %if.then5, label %if.else8, !dbg !11237

if.then5:                                         ; preds = %if.end
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11238
  %txrxctl_bits6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 25, !dbg !11239
  %11 = load i32, i32* %txrxctl_bits6, align 4, !dbg !11240
  %or7 = or i32 %11, 128, !dbg !11240
  store i32 %or7, i32* %txrxctl_bits6, align 4, !dbg !11240
  br label %if.end11, !dbg !11238

if.else8:                                         ; preds = %if.end
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11241
  %txrxctl_bits9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 25, !dbg !11242
  %13 = load i32, i32* %txrxctl_bits9, align 4, !dbg !11243
  %and10 = and i32 %13, -129, !dbg !11243
  store i32 %and10, i32* %txrxctl_bits9, align 4, !dbg !11243
  br label %if.end11

if.end11:                                         ; preds = %if.else8, %if.then5
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11244
  %txrxctl_bits12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 25, !dbg !11245
  %15 = load i32, i32* %txrxctl_bits12, align 4, !dbg !11245
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11246
  %call13 = call i8* @get_hwbase(%struct.net_device* %16) #13, !dbg !11247
  %add.ptr = getelementptr i8, i8* %call13, i64 324, !dbg !11248
  call void @writel(i32 %15, i8* %add.ptr) #13, !dbg !11249
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11250
  %lock14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 0, !dbg !11251
  store %struct.spinlock* %lock14, %struct.spinlock** %lock.addr.i15, align 8
  call void @arch_local_irq_enable() #15, !dbg !11252
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11253, !srcloc !9188
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i15, align 8, !dbg !11254
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !11254
  %rlock.i16 = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !11254
  ret void, !dbg !11255
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_rings(%struct.net_device* %dev) #2 !dbg !11256 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11257, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11259, metadata !DIExpression()), !dbg !11260
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11261
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !11262
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !11260
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11263
  %call1 = call zeroext i1 @nv_optimized(%struct.fe_priv* %1) #13, !dbg !11265
  br i1 %call1, label %if.else, label %if.then, !dbg !11266

if.then:                                          ; preds = %entry
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11267
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 41, !dbg !11270
  %orig = bitcast %union.ring_type* %rx_ring to %struct.ring_desc**, !dbg !11271
  %3 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !11271
  %tobool = icmp ne %struct.ring_desc* %3, null, !dbg !11267
  br i1 %tobool, label %if.then2, label %if.end, !dbg !11272

if.then2:                                         ; preds = %if.then
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11273
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 20, !dbg !11274
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !11274
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !11275
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11276
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 48, !dbg !11277
  %7 = load i32, i32* %rx_ring_size, align 4, !dbg !11277
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11278
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 62, !dbg !11279
  %9 = load i32, i32* %tx_ring_size, align 4, !dbg !11279
  %add = add i32 %7, %9, !dbg !11280
  %conv = sext i32 %add to i64, !dbg !11281
  %mul = mul i64 8, %conv, !dbg !11282
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11283
  %rx_ring4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 41, !dbg !11284
  %orig5 = bitcast %union.ring_type* %rx_ring4 to %struct.ring_desc**, !dbg !11285
  %11 = load %struct.ring_desc*, %struct.ring_desc** %orig5, align 8, !dbg !11285
  %12 = bitcast %struct.ring_desc* %11 to i8*, !dbg !11283
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11286
  %ring_addr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 19, !dbg !11287
  %14 = load i64, i64* %ring_addr, align 8, !dbg !11287
  call void @dma_free_coherent(%struct.device* %dev3, i64 %mul, i8* %12, i64 %14) #13, !dbg !11288
  br label %if.end, !dbg !11288

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end20, !dbg !11289

if.else:                                          ; preds = %entry
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11290
  %rx_ring6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 41, !dbg !11293
  %ex = bitcast %union.ring_type* %rx_ring6 to %struct.ring_desc_ex**, !dbg !11294
  %16 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !11294
  %tobool7 = icmp ne %struct.ring_desc_ex* %16, null, !dbg !11290
  br i1 %tobool7, label %if.then8, label %if.end19, !dbg !11295

if.then8:                                         ; preds = %if.else
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11296
  %pci_dev9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 20, !dbg !11297
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev9, align 8, !dbg !11297
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !11298
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11299
  %rx_ring_size11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 48, !dbg !11300
  %20 = load i32, i32* %rx_ring_size11, align 4, !dbg !11300
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11301
  %tx_ring_size12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 62, !dbg !11302
  %22 = load i32, i32* %tx_ring_size12, align 4, !dbg !11302
  %add13 = add i32 %20, %22, !dbg !11303
  %conv14 = sext i32 %add13 to i64, !dbg !11304
  %mul15 = mul i64 16, %conv14, !dbg !11305
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11306
  %rx_ring16 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 41, !dbg !11307
  %ex17 = bitcast %union.ring_type* %rx_ring16 to %struct.ring_desc_ex**, !dbg !11308
  %24 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex17, align 8, !dbg !11308
  %25 = bitcast %struct.ring_desc_ex* %24 to i8*, !dbg !11306
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11309
  %ring_addr18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 19, !dbg !11310
  %27 = load i64, i64* %ring_addr18, align 8, !dbg !11310
  call void @dma_free_coherent(%struct.device* %dev10, i64 %mul15, i8* %25, i64 %27) #13, !dbg !11311
  br label %if.end19, !dbg !11311

if.end19:                                         ; preds = %if.then8, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11312
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 40, !dbg !11313
  %29 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb, align 8, !dbg !11313
  %30 = bitcast %struct.nv_skb_map* %29 to i8*, !dbg !11312
  call void @kfree(i8* %30) #13, !dbg !11314
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11315
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 59, !dbg !11316
  %32 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb, align 8, !dbg !11316
  %33 = bitcast %struct.nv_skb_map* %32 to i8*, !dbg !11315
  call void @kfree(i8* %33) #13, !dbg !11317
  ret void, !dbg !11318
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @free_percpu(i8*) #1

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_schedule(%struct.napi_struct* %n) #2 !dbg !11319 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !11322, metadata !DIExpression()), !dbg !11323
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !11324
  %call = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %0) #13, !dbg !11326
  br i1 %call, label %if.then, label %if.end, !dbg !11327

if.then:                                          ; preds = %entry
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !11328
  call void @__napi_schedule(%struct.napi_struct* %1) #13, !dbg !11329
  br label %if.end, !dbg !11329

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11330
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @using_multi_irqs(%struct.net_device* %dev) #2 !dbg !11331 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11332, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11334, metadata !DIExpression()), !dbg !11335
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11336
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !11337
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !11335
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11338
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 69, !dbg !11340
  %2 = load i32, i32* %msi_flags, align 4, !dbg !11340
  %and = and i32 %2, 128, !dbg !11341
  %tobool = icmp ne i32 %and, 0, !dbg !11341
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11342

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11343
  %msi_flags1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 69, !dbg !11344
  %4 = load i32, i32* %msi_flags1, align 4, !dbg !11344
  %and2 = and i32 %4, 128, !dbg !11345
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11345
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !11346

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11347
  %msi_flags4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 69, !dbg !11348
  %6 = load i32, i32* %msi_flags4, align 4, !dbg !11348
  %and5 = and i32 %6, 15, !dbg !11349
  %cmp = icmp eq i32 %and5, 1, !dbg !11350
  br i1 %cmp, label %if.then, label %if.else, !dbg !11351

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !11352
  br label %return, !dbg !11352

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !11353
  br label %return, !dbg !11353

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11354
  ret i32 %7, !dbg !11354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_irq_nosync_lockdep_irqsave(i32 %irq, i64* %flags) #2 !dbg !11355 {
entry:
  %irq.addr = alloca i32, align 4
  %flags.addr = alloca i64*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11358, metadata !DIExpression()), !dbg !11359
  store i64* %flags, i64** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flags.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11362
  call void @disable_irq_nosync(i32 %0) #13, !dbg !11363
  ret void, !dbg !11364
}

; Function Attrs: noredzone
declare dso_local void @synchronize_irq(i32) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #2 !dbg !11365 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11370
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !11371
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #13, !dbg !11372
  ret i1 %call, !dbg !11373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_lock_bh(%struct.net_device* %dev) #2 !dbg !11374 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11375, metadata !DIExpression()), !dbg !11376
  call void @local_bh_disable() #13, !dbg !11377
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11378
  call void @netif_tx_lock(%struct.net_device* %0) #13, !dbg !11379
  ret void, !dbg !11380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_addr_lock(%struct.net_device* %dev) #2 !dbg !11381 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !11382
  %dev.addr = alloca %struct.net_device*, align 8
  %nest_level = alloca i8, align 1
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.declare(metadata i8* %nest_level, metadata !11389, metadata !DIExpression()), !dbg !11390
  store i8 0, i8* %nest_level, align 1, !dbg !11390
  br label %do.body, !dbg !11391

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11392

do.body1:                                         ; preds = %do.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11393, !srcloc !11394
  br label %do.body2, !dbg !11393

do.body2:                                         ; preds = %do.body1
  %0 = load i8, i8* %nest_level, align 1, !dbg !11395
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11395
  %addr_list_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 61, !dbg !11395
  store %struct.spinlock* %addr_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11396
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !11397
  %rlock.i = bitcast %union.anon.2* %3 to %struct.raw_spinlock*, !dbg !11397
  br label %do.end, !dbg !11395

do.end:                                           ; preds = %do.body2
  br label %do.end3, !dbg !11393

do.end3:                                          ; preds = %do.end
  br label %do.end4, !dbg !11392

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !11398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_stop_rxtx(%struct.net_device* %dev) #2 !dbg !11399 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11400, metadata !DIExpression()), !dbg !11401
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11402
  call void @nv_stop_rx(%struct.net_device* %0) #13, !dbg !11403
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11404
  call void @nv_stop_tx(%struct.net_device* %1) #13, !dbg !11405
  ret void, !dbg !11406
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_mac_reset(%struct.net_device* %dev) #2 !dbg !11407 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %temp1 = alloca i32, align 4
  %temp2 = alloca i32, align 4
  %temp3 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11408, metadata !DIExpression()), !dbg !11409
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11410, metadata !DIExpression()), !dbg !11411
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11412
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !11413
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !11413
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !11411
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11414, metadata !DIExpression()), !dbg !11415
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11416
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !11417
  store i8* %call1, i8** %base, align 8, !dbg !11415
  call void @llvm.dbg.declare(metadata i32* %temp1, metadata !11418, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.declare(metadata i32* %temp2, metadata !11420, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.declare(metadata i32* %temp3, metadata !11422, metadata !DIExpression()), !dbg !11423
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11424
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 25, !dbg !11425
  %4 = load i32, i32* %txrxctl_bits, align 4, !dbg !11425
  %or = or i32 20, %4, !dbg !11426
  %5 = load i8*, i8** %base, align 8, !dbg !11427
  %add.ptr = getelementptr i8, i8* %5, i64 324, !dbg !11428
  call void @writel(i32 %or, i8* %add.ptr) #13, !dbg !11429
  %6 = load i8*, i8** %base, align 8, !dbg !11430
  call void @pci_push(i8* %6) #13, !dbg !11431
  %7 = load i8*, i8** %base, align 8, !dbg !11432
  %add.ptr2 = getelementptr i8, i8* %7, i64 168, !dbg !11433
  %call3 = call i32 @readl(i8* %add.ptr2) #13, !dbg !11434
  store i32 %call3, i32* %temp1, align 4, !dbg !11435
  %8 = load i8*, i8** %base, align 8, !dbg !11436
  %add.ptr4 = getelementptr i8, i8* %8, i64 172, !dbg !11437
  %call5 = call i32 @readl(i8* %add.ptr4) #13, !dbg !11438
  store i32 %call5, i32* %temp2, align 4, !dbg !11439
  %9 = load i8*, i8** %base, align 8, !dbg !11440
  %add.ptr6 = getelementptr i8, i8* %9, i64 268, !dbg !11441
  %call7 = call i32 @readl(i8* %add.ptr6) #13, !dbg !11442
  store i32 %call7, i32* %temp3, align 4, !dbg !11443
  %10 = load i8*, i8** %base, align 8, !dbg !11444
  %add.ptr8 = getelementptr i8, i8* %10, i64 52, !dbg !11445
  call void @writel(i32 243, i8* %add.ptr8) #13, !dbg !11446
  %11 = load i8*, i8** %base, align 8, !dbg !11447
  call void @pci_push(i8* %11) #13, !dbg !11448
  call void @__const_udelay(i64 274880) #13, !dbg !11449
  %12 = load i8*, i8** %base, align 8, !dbg !11454
  %add.ptr9 = getelementptr i8, i8* %12, i64 52, !dbg !11455
  call void @writel(i32 0, i8* %add.ptr9) #13, !dbg !11456
  %13 = load i8*, i8** %base, align 8, !dbg !11457
  call void @pci_push(i8* %13) #13, !dbg !11458
  call void @__const_udelay(i64 274880) #13, !dbg !11459
  %14 = load i32, i32* %temp1, align 4, !dbg !11464
  %15 = load i8*, i8** %base, align 8, !dbg !11465
  %add.ptr10 = getelementptr i8, i8* %15, i64 168, !dbg !11466
  call void @writel(i32 %14, i8* %add.ptr10) #13, !dbg !11467
  %16 = load i32, i32* %temp2, align 4, !dbg !11468
  %17 = load i8*, i8** %base, align 8, !dbg !11469
  %add.ptr11 = getelementptr i8, i8* %17, i64 172, !dbg !11470
  call void @writel(i32 %16, i8* %add.ptr11) #13, !dbg !11471
  %18 = load i32, i32* %temp3, align 4, !dbg !11472
  %19 = load i8*, i8** %base, align 8, !dbg !11473
  %add.ptr12 = getelementptr i8, i8* %19, i64 268, !dbg !11474
  call void @writel(i32 %18, i8* %add.ptr12) #13, !dbg !11475
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11476
  %txrxctl_bits13 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 25, !dbg !11477
  %21 = load i32, i32* %txrxctl_bits13, align 4, !dbg !11477
  %or14 = or i32 4, %21, !dbg !11478
  %22 = load i8*, i8** %base, align 8, !dbg !11479
  %add.ptr15 = getelementptr i8, i8* %22, i64 324, !dbg !11480
  call void @writel(i32 %or14, i8* %add.ptr15) #13, !dbg !11481
  %23 = load i8*, i8** %base, align 8, !dbg !11482
  call void @pci_push(i8* %23) #13, !dbg !11483
  ret void, !dbg !11484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_txrx_reset(%struct.net_device* %dev) #2 !dbg !11485 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11486, metadata !DIExpression()), !dbg !11487
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11488, metadata !DIExpression()), !dbg !11489
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11490
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !11491
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !11491
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !11489
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11492, metadata !DIExpression()), !dbg !11493
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11494
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !11495
  store i8* %call1, i8** %base, align 8, !dbg !11493
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11496
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 25, !dbg !11497
  %4 = load i32, i32* %txrxctl_bits, align 4, !dbg !11497
  %or = or i32 20, %4, !dbg !11498
  %5 = load i8*, i8** %base, align 8, !dbg !11499
  %add.ptr = getelementptr i8, i8* %5, i64 324, !dbg !11500
  call void @writel(i32 %or, i8* %add.ptr) #13, !dbg !11501
  %6 = load i8*, i8** %base, align 8, !dbg !11502
  call void @pci_push(i8* %6) #13, !dbg !11503
  call void @__const_udelay(i64 17180) #13, !dbg !11504
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11509
  %txrxctl_bits2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 25, !dbg !11510
  %8 = load i32, i32* %txrxctl_bits2, align 4, !dbg !11510
  %or3 = or i32 4, %8, !dbg !11511
  %9 = load i8*, i8** %base, align 8, !dbg !11512
  %add.ptr4 = getelementptr i8, i8* %9, i64 324, !dbg !11513
  call void @writel(i32 %or3, i8* %add.ptr4) #13, !dbg !11514
  %10 = load i8*, i8** %base, align 8, !dbg !11515
  call void @pci_push(i8* %10) #13, !dbg !11516
  ret void, !dbg !11517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_drain_rxtx(%struct.net_device* %dev) #2 !dbg !11518 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11519, metadata !DIExpression()), !dbg !11520
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11521
  call void @nv_drain_tx(%struct.net_device* %0) #13, !dbg !11522
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11523
  call void @nv_drain_rx(%struct.net_device* %1) #13, !dbg !11524
  ret void, !dbg !11525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bufsize(%struct.net_device* %dev) #2 !dbg !11526 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11527, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11529, metadata !DIExpression()), !dbg !11530
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11531
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !11532
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !11532
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !11530
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11533
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 44, !dbg !11535
  %3 = load i32, i32* %mtu, align 8, !dbg !11535
  %cmp = icmp ule i32 %3, 1500, !dbg !11536
  br i1 %cmp, label %if.then, label %if.else, !dbg !11537

if.then:                                          ; preds = %entry
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11538
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 42, !dbg !11539
  store i32 1564, i32* %rx_buf_sz, align 8, !dbg !11540
  br label %if.end, !dbg !11538

if.else:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11541
  %mtu1 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 44, !dbg !11542
  %6 = load i32, i32* %mtu1, align 8, !dbg !11542
  %add = add i32 %6, 64, !dbg !11543
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11544
  %rx_buf_sz2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 42, !dbg !11545
  store i32 %add, i32* %rx_buf_sz2, align 8, !dbg !11546
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_init_ring(%struct.net_device* %dev) #2 !dbg !11548 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11549, metadata !DIExpression()), !dbg !11550
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11551, metadata !DIExpression()), !dbg !11552
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11553
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !11554
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !11554
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !11552
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11555
  call void @nv_init_tx(%struct.net_device* %2) #13, !dbg !11556
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11557
  call void @nv_init_rx(%struct.net_device* %3) #13, !dbg !11558
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11559
  %call1 = call zeroext i1 @nv_optimized(%struct.fe_priv* %4) #13, !dbg !11561
  br i1 %call1, label %if.else, label %if.then, !dbg !11562

if.then:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11563
  %call2 = call i32 @nv_alloc_rx(%struct.net_device* %5) #13, !dbg !11564
  store i32 %call2, i32* %retval, align 4, !dbg !11565
  br label %return, !dbg !11565

if.else:                                          ; preds = %entry
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11566
  %call3 = call i32 @nv_alloc_rx_optimized(%struct.net_device* %6) #13, !dbg !11567
  store i32 %call3, i32* %retval, align 4, !dbg !11568
  br label %return, !dbg !11568

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11569
  ret i32 %7, !dbg !11569
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @setup_hw_rings(%struct.net_device* %dev, i32 %rxtx_flags) #2 !dbg !11570 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %rxtx_flags.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11571, metadata !DIExpression()), !dbg !11572
  store i32 %rxtx_flags, i32* %rxtx_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rxtx_flags.addr, metadata !11573, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11575, metadata !DIExpression()), !dbg !11576
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11577
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !11578
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !11576
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11579, metadata !DIExpression()), !dbg !11580
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11581
  %call1 = call i8* @get_hwbase(%struct.net_device* %1) #13, !dbg !11582
  store i8* %call1, i8** %base, align 8, !dbg !11580
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11583
  %call2 = call zeroext i1 @nv_optimized(%struct.fe_priv* %2) #13, !dbg !11585
  br i1 %call2, label %if.else, label %if.then, !dbg !11586

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %rxtx_flags.addr, align 4, !dbg !11587
  %and = and i32 %3, 1, !dbg !11590
  %tobool = icmp ne i32 %and, 0, !dbg !11590
  br i1 %tobool, label %if.then3, label %if.end, !dbg !11591

if.then3:                                         ; preds = %if.then
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11592
  %ring_addr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 19, !dbg !11593
  %5 = load i64, i64* %ring_addr, align 8, !dbg !11593
  %call4 = call i32 @dma_low(i64 %5) #13, !dbg !11594
  %6 = load i8*, i8** %base, align 8, !dbg !11595
  %add.ptr = getelementptr i8, i8* %6, i64 260, !dbg !11596
  call void @writel(i32 %call4, i8* %add.ptr) #13, !dbg !11597
  br label %if.end, !dbg !11597

if.end:                                           ; preds = %if.then3, %if.then
  %7 = load i32, i32* %rxtx_flags.addr, align 4, !dbg !11598
  %and5 = and i32 %7, 2, !dbg !11600
  %tobool6 = icmp ne i32 %and5, 0, !dbg !11600
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !11601

if.then7:                                         ; preds = %if.end
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11602
  %ring_addr8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 19, !dbg !11603
  %9 = load i64, i64* %ring_addr8, align 8, !dbg !11603
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11604
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 48, !dbg !11605
  %11 = load i32, i32* %rx_ring_size, align 4, !dbg !11605
  %conv = sext i32 %11 to i64, !dbg !11604
  %mul = mul i64 %conv, 8, !dbg !11606
  %add = add i64 %9, %mul, !dbg !11607
  %call9 = call i32 @dma_low(i64 %add) #13, !dbg !11608
  %12 = load i8*, i8** %base, align 8, !dbg !11609
  %add.ptr10 = getelementptr i8, i8* %12, i64 256, !dbg !11610
  call void @writel(i32 %call9, i8* %add.ptr10) #13, !dbg !11611
  br label %if.end11, !dbg !11611

if.end11:                                         ; preds = %if.then7, %if.end
  br label %if.end40, !dbg !11612

if.else:                                          ; preds = %entry
  %13 = load i32, i32* %rxtx_flags.addr, align 4, !dbg !11613
  %and12 = and i32 %13, 1, !dbg !11616
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11616
  br i1 %tobool13, label %if.then14, label %if.end21, !dbg !11617

if.then14:                                        ; preds = %if.else
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11618
  %ring_addr15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 19, !dbg !11620
  %15 = load i64, i64* %ring_addr15, align 8, !dbg !11620
  %call16 = call i32 @dma_low(i64 %15) #13, !dbg !11621
  %16 = load i8*, i8** %base, align 8, !dbg !11622
  %add.ptr17 = getelementptr i8, i8* %16, i64 260, !dbg !11623
  call void @writel(i32 %call16, i8* %add.ptr17) #13, !dbg !11624
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11625
  %ring_addr18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 19, !dbg !11626
  %18 = load i64, i64* %ring_addr18, align 8, !dbg !11626
  %call19 = call i32 @dma_high(i64 %18) #13, !dbg !11627
  %19 = load i8*, i8** %base, align 8, !dbg !11628
  %add.ptr20 = getelementptr i8, i8* %19, i64 332, !dbg !11629
  call void @writel(i32 %call19, i8* %add.ptr20) #13, !dbg !11630
  br label %if.end21, !dbg !11631

if.end21:                                         ; preds = %if.then14, %if.else
  %20 = load i32, i32* %rxtx_flags.addr, align 4, !dbg !11632
  %and22 = and i32 %20, 2, !dbg !11634
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11634
  br i1 %tobool23, label %if.then24, label %if.end39, !dbg !11635

if.then24:                                        ; preds = %if.end21
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11636
  %ring_addr25 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 19, !dbg !11638
  %22 = load i64, i64* %ring_addr25, align 8, !dbg !11638
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11639
  %rx_ring_size26 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 48, !dbg !11640
  %24 = load i32, i32* %rx_ring_size26, align 4, !dbg !11640
  %conv27 = sext i32 %24 to i64, !dbg !11639
  %mul28 = mul i64 %conv27, 16, !dbg !11641
  %add29 = add i64 %22, %mul28, !dbg !11642
  %call30 = call i32 @dma_low(i64 %add29) #13, !dbg !11643
  %25 = load i8*, i8** %base, align 8, !dbg !11644
  %add.ptr31 = getelementptr i8, i8* %25, i64 256, !dbg !11645
  call void @writel(i32 %call30, i8* %add.ptr31) #13, !dbg !11646
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11647
  %ring_addr32 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 19, !dbg !11648
  %27 = load i64, i64* %ring_addr32, align 8, !dbg !11648
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11649
  %rx_ring_size33 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 48, !dbg !11650
  %29 = load i32, i32* %rx_ring_size33, align 4, !dbg !11650
  %conv34 = sext i32 %29 to i64, !dbg !11649
  %mul35 = mul i64 %conv34, 16, !dbg !11651
  %add36 = add i64 %27, %mul35, !dbg !11652
  %call37 = call i32 @dma_high(i64 %add36) #13, !dbg !11653
  %30 = load i8*, i8** %base, align 8, !dbg !11654
  %add.ptr38 = getelementptr i8, i8* %30, i64 328, !dbg !11655
  call void @writel(i32 %call37, i8* %add.ptr38) #13, !dbg !11656
  br label %if.end39, !dbg !11657

if.end39:                                         ; preds = %if.then24, %if.end21
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end11
  ret void, !dbg !11658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_push(i8* %base) #2 !dbg !11659 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11662, metadata !DIExpression()), !dbg !11663
  %0 = load i8*, i8** %base.addr, align 8, !dbg !11664
  %call = call i32 @readl(i8* %0) #13, !dbg !11665
  ret void, !dbg !11666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_start_rxtx(%struct.net_device* %dev) #2 !dbg !11667 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11668, metadata !DIExpression()), !dbg !11669
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11670
  call void @nv_start_rx(%struct.net_device* %0) #13, !dbg !11671
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11672
  call void @nv_start_tx(%struct.net_device* %1) #13, !dbg !11673
  ret void, !dbg !11674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_addr_unlock(%struct.net_device* %dev) #2 !dbg !11675 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9483, metadata !DIExpression()), !dbg !11676
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11678, metadata !DIExpression()), !dbg !11679
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11680
  %addr_list_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 61, !dbg !11681
  store %struct.spinlock* %addr_list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11682, !srcloc !9681
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11683
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !11683
  %rlock.i = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !11683
  ret void, !dbg !11684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_unlock_bh(%struct.net_device* %dev) #2 !dbg !11685 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11688
  call void @netif_tx_unlock(%struct.net_device* %0) #13, !dbg !11689
  call void @local_bh_enable() #13, !dbg !11690
  ret void, !dbg !11691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_nic_irq_optimized(i32 %foo, i8* %data) #2 !dbg !11692 {
entry:
  %retval = alloca i32, align 4
  %foo.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store i32 %foo, i32* %foo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %foo.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11698, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !11700, metadata !DIExpression()), !dbg !11701
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11702
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !11703
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !11701
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11704, metadata !DIExpression()), !dbg !11705
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11706
  %call = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !11707
  %3 = bitcast i8* %call to %struct.fe_priv*, !dbg !11707
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !11705
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11708, metadata !DIExpression()), !dbg !11709
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11710
  %call1 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !11711
  store i8* %call1, i8** %base, align 8, !dbg !11709
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11712
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 69, !dbg !11714
  %6 = load i32, i32* %msi_flags, align 4, !dbg !11714
  %and = and i32 %6, 128, !dbg !11715
  %tobool = icmp ne i32 %and, 0, !dbg !11715
  br i1 %tobool, label %if.else, label %if.then, !dbg !11716

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %base, align 8, !dbg !11717
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !11719
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !11720
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11721
  %events = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 22, !dbg !11722
  store i32 %call2, i32* %events, align 8, !dbg !11723
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11724
  %events3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 22, !dbg !11725
  %10 = load i32, i32* %events3, align 8, !dbg !11725
  %11 = load i8*, i8** %base, align 8, !dbg !11726
  %add.ptr4 = getelementptr i8, i8* %11, i64 0, !dbg !11727
  call void @writel(i32 %10, i8* %add.ptr4) #13, !dbg !11728
  br label %if.end, !dbg !11729

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base, align 8, !dbg !11730
  %add.ptr5 = getelementptr i8, i8* %12, i64 1008, !dbg !11732
  %call6 = call i32 @readl(i8* %add.ptr5) #13, !dbg !11733
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11734
  %events7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 22, !dbg !11735
  store i32 %call6, i32* %events7, align 8, !dbg !11736
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11737
  %events8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 22, !dbg !11738
  %15 = load i32, i32* %events8, align 8, !dbg !11738
  %16 = load i8*, i8** %base, align 8, !dbg !11739
  %add.ptr9 = getelementptr i8, i8* %16, i64 1008, !dbg !11740
  call void @writel(i32 %15, i8* %add.ptr9) #13, !dbg !11741
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11742
  %events10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 22, !dbg !11744
  %18 = load i32, i32* %events10, align 8, !dbg !11744
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11745
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 23, !dbg !11746
  %20 = load i32, i32* %irqmask, align 4, !dbg !11746
  %and11 = and i32 %18, %20, !dbg !11747
  %tobool12 = icmp ne i32 %and11, 0, !dbg !11747
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !11748

if.then13:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11749
  br label %return, !dbg !11749

if.end14:                                         ; preds = %if.end
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11750
  call void @nv_msi_workaround(%struct.fe_priv* %21) #13, !dbg !11751
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11752
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 2, !dbg !11754
  %call15 = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %napi) #13, !dbg !11755
  br i1 %call15, label %if.then16, label %if.end19, !dbg !11756

if.then16:                                        ; preds = %if.end14
  %23 = load i8*, i8** %base, align 8, !dbg !11757
  %add.ptr17 = getelementptr i8, i8* %23, i64 4, !dbg !11759
  call void @writel(i32 0, i8* %add.ptr17) #13, !dbg !11760
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11761
  %napi18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 2, !dbg !11762
  call void @__napi_schedule(%struct.napi_struct* %napi18) #13, !dbg !11763
  br label %if.end19, !dbg !11764

if.end19:                                         ; preds = %if.then16, %if.end14
  store i32 1, i32* %retval, align 4, !dbg !11765
  br label %return, !dbg !11765

return:                                           ; preds = %if.end19, %if.then13
  %25 = load i32, i32* %retval, align 4, !dbg !11766
  ret i32 %25, !dbg !11766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_nic_irq(i32 %foo, i8* %data) #2 !dbg !11767 {
entry:
  %retval = alloca i32, align 4
  %foo.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store i32 %foo, i32* %foo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %foo.addr, metadata !11768, metadata !DIExpression()), !dbg !11769
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11770, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !11772, metadata !DIExpression()), !dbg !11773
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11774
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !11775
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !11773
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11776, metadata !DIExpression()), !dbg !11777
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11778
  %call = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !11779
  %3 = bitcast i8* %call to %struct.fe_priv*, !dbg !11779
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !11777
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11780, metadata !DIExpression()), !dbg !11781
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11782
  %call1 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !11783
  store i8* %call1, i8** %base, align 8, !dbg !11781
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11784
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 69, !dbg !11786
  %6 = load i32, i32* %msi_flags, align 4, !dbg !11786
  %and = and i32 %6, 128, !dbg !11787
  %tobool = icmp ne i32 %and, 0, !dbg !11787
  br i1 %tobool, label %if.else, label %if.then, !dbg !11788

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %base, align 8, !dbg !11789
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !11791
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !11792
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11793
  %events = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 22, !dbg !11794
  store i32 %call2, i32* %events, align 8, !dbg !11795
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11796
  %events3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 22, !dbg !11797
  %10 = load i32, i32* %events3, align 8, !dbg !11797
  %11 = load i8*, i8** %base, align 8, !dbg !11798
  %add.ptr4 = getelementptr i8, i8* %11, i64 0, !dbg !11799
  call void @writel(i32 %10, i8* %add.ptr4) #13, !dbg !11800
  br label %if.end, !dbg !11801

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base, align 8, !dbg !11802
  %add.ptr5 = getelementptr i8, i8* %12, i64 1008, !dbg !11804
  %call6 = call i32 @readl(i8* %add.ptr5) #13, !dbg !11805
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11806
  %events7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 22, !dbg !11807
  store i32 %call6, i32* %events7, align 8, !dbg !11808
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11809
  %events8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 22, !dbg !11810
  %15 = load i32, i32* %events8, align 8, !dbg !11810
  %16 = load i8*, i8** %base, align 8, !dbg !11811
  %add.ptr9 = getelementptr i8, i8* %16, i64 1008, !dbg !11812
  call void @writel(i32 %15, i8* %add.ptr9) #13, !dbg !11813
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11814
  %events10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 22, !dbg !11816
  %18 = load i32, i32* %events10, align 8, !dbg !11816
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11817
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 23, !dbg !11818
  %20 = load i32, i32* %irqmask, align 4, !dbg !11818
  %and11 = and i32 %18, %20, !dbg !11819
  %tobool12 = icmp ne i32 %and11, 0, !dbg !11819
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !11820

if.then13:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11821
  br label %return, !dbg !11821

if.end14:                                         ; preds = %if.end
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11822
  call void @nv_msi_workaround(%struct.fe_priv* %21) #13, !dbg !11823
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11824
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 2, !dbg !11826
  %call15 = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %napi) #13, !dbg !11827
  br i1 %call15, label %if.then16, label %if.end19, !dbg !11828

if.then16:                                        ; preds = %if.end14
  %23 = load i8*, i8** %base, align 8, !dbg !11829
  %add.ptr17 = getelementptr i8, i8* %23, i64 4, !dbg !11831
  call void @writel(i32 0, i8* %add.ptr17) #13, !dbg !11832
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11833
  %napi18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 2, !dbg !11834
  call void @__napi_schedule(%struct.napi_struct* %napi18) #13, !dbg !11835
  br label %if.end19, !dbg !11836

if.end19:                                         ; preds = %if.then16, %if.end14
  store i32 1, i32* %retval, align 4, !dbg !11837
  br label %return, !dbg !11837

return:                                           ; preds = %if.end19, %if.then13
  %25 = load i32, i32* %retval, align 4, !dbg !11838
  ret i32 %25, !dbg !11838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_nic_irq_rx(i32 %foo, i8* %data) #2 !dbg !11839 {
entry:
  %lock.addr.i93 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i93, metadata !8259, metadata !DIExpression()), !dbg !11840
  %lock.addr.i88 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i88, metadata !9883, metadata !DIExpression()), !dbg !11852
  %flags.addr.i89 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i89, metadata !9891, metadata !DIExpression()), !dbg !11858
  %tmp.i90 = alloca i32, align 4
  %tmp8.i91 = alloca i32, align 4
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !9883, metadata !DIExpression()), !dbg !11859
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !11861
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !11862
  %foo.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %events = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy51 = alloca i64, align 8
  %__dummy252 = alloca i64, align 8
  %tmp55 = alloca i32, align 4
  %__dummy59 = alloca i64, align 8
  %__dummy260 = alloca i64, align 8
  %tmp63 = alloca i32, align 4
  store i32 %foo, i32* %foo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %foo.addr, metadata !11869, metadata !DIExpression()), !dbg !11870
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11871, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !11873, metadata !DIExpression()), !dbg !11874
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11875
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !11876
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !11874
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !11877, metadata !DIExpression()), !dbg !11878
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11879
  %call = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !11880
  %3 = bitcast i8* %call to %struct.fe_priv*, !dbg !11880
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !11878
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11881, metadata !DIExpression()), !dbg !11882
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11883
  %call1 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !11884
  store i8* %call1, i8** %base, align 8, !dbg !11882
  call void @llvm.dbg.declare(metadata i32* %events, metadata !11885, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11887, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11889, metadata !DIExpression()), !dbg !11890
  store i32 0, i32* %i, align 4, !dbg !11891
  br label %for.cond, !dbg !11892

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i8*, i8** %base, align 8, !dbg !11893
  %add.ptr = getelementptr i8, i8* %5, i64 1008, !dbg !11894
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !11895
  %and = and i32 %call2, 135, !dbg !11896
  store i32 %and, i32* %events, align 4, !dbg !11897
  %6 = load i32, i32* %events, align 4, !dbg !11898
  %7 = load i8*, i8** %base, align 8, !dbg !11899
  %add.ptr3 = getelementptr i8, i8* %7, i64 1008, !dbg !11900
  call void @writel(i32 %6, i8* %add.ptr3) #13, !dbg !11901
  %8 = load i32, i32* %events, align 4, !dbg !11902
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11904
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 23, !dbg !11905
  %10 = load i32, i32* %irqmask, align 4, !dbg !11905
  %and4 = and i32 %8, %10, !dbg !11906
  %tobool = icmp ne i32 %and4, 0, !dbg !11906
  br i1 %tobool, label %if.end, label %if.then, !dbg !11907

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !11908

if.end:                                           ; preds = %for.cond
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11909
  %call5 = call i32 @nv_rx_process_optimized(%struct.net_device* %11, i32 64) #13, !dbg !11910
  %tobool6 = icmp ne i32 %call5, 0, !dbg !11910
  br i1 %tobool6, label %if.then7, label %if.end39, !dbg !11911

if.then7:                                         ; preds = %if.end
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11912
  %call8 = call i32 @nv_alloc_rx_optimized(%struct.net_device* %12) #13, !dbg !11912
  %tobool9 = icmp ne i32 %call8, 0, !dbg !11912
  %lnot = xor i1 %tobool9, true, !dbg !11912
  %lnot10 = xor i1 %lnot, true, !dbg !11912
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !11912
  %conv = sext i32 %lnot.ext to i64, !dbg !11912
  %tobool11 = icmp ne i64 %conv, 0, !dbg !11912
  br i1 %tobool11, label %if.then12, label %if.end38, !dbg !11913

if.then12:                                        ; preds = %if.then7
  br label %do.body, !dbg !11914

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !11915

do.body13:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11916, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11919, metadata !DIExpression()), !dbg !11918
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11918
  %conv14 = zext i1 %cmp to i32, !dbg !11918
  store i32 1, i32* %tmp, align 4, !dbg !11918
  %13 = load i32, i32* %tmp, align 4, !dbg !11918
  br label %do.body15, !dbg !11920

do.body15:                                        ; preds = %do.body13
  br label %do.body16, !dbg !11921

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !11922

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !11924, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !11928, metadata !DIExpression()), !dbg !11927
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !11927
  %conv21 = zext i1 %cmp20 to i32, !dbg !11927
  store i32 1, i32* %tmp22, align 4, !dbg !11927
  %14 = load i32, i32* %tmp22, align 4, !dbg !11927
  %call23 = call i64 @arch_local_irq_save() #13, !dbg !11929
  store i64 %call23, i64* %flags, align 8, !dbg !11929
  br label %do.end, !dbg !11929

do.end:                                           ; preds = %do.body17
  br label %do.end24, !dbg !11922

do.end24:                                         ; preds = %do.end
  br label %do.body25, !dbg !11921

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11930, !srcloc !11931
  br label %do.body26, !dbg !11930

do.body26:                                        ; preds = %do.body25
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11932
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 0, !dbg !11932
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11933
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !11934
  %rlock.i = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !11934
  br label %do.end28, !dbg !11932

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !11930

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !11921

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !11920

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !11915

do.end32:                                         ; preds = %do.end31
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11935
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 5, !dbg !11937
  %19 = load i32, i32* %in_shutdown, align 8, !dbg !11937
  %tobool33 = icmp ne i32 %19, 0, !dbg !11935
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !11938

if.then34:                                        ; preds = %do.end32
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11939
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 44, !dbg !11940
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !11941
  %add = add i64 %21, 13, !dbg !11942
  %call35 = call i32 @mod_timer(%struct.timer_list* %oom_kick, i64 %add) #13, !dbg !11943
  br label %if.end36, !dbg !11943

if.end36:                                         ; preds = %if.then34, %do.end32
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11944
  %lock37 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 0, !dbg !11945
  %23 = load i64, i64* %flags, align 8, !dbg !11946
  store %struct.spinlock* %lock37, %struct.spinlock** %lock.addr.i88, align 8
  store i64 %23, i64* %flags.addr.i89, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !11947
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !11947
  store i32 1, i32* %tmp.i90, align 4, !dbg !11947
  %24 = load i32, i32* %tmp.i90, align 4, !dbg !11947
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !11948
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !11948
  store i32 1, i32* %tmp8.i91, align 4, !dbg !11948
  %25 = load i32, i32* %tmp8.i91, align 4, !dbg !11948
  %26 = load i64, i64* %flags.addr.i89, align 8, !dbg !11949
  call void @arch_local_irq_restore(i64 %26) #15, !dbg !11949
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11950, !srcloc !10037
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i88, align 8, !dbg !11951
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !11951
  %rlock.i92 = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !11951
  br label %if.end38, !dbg !11952

if.end38:                                         ; preds = %if.end36, %if.then7
  br label %if.end39, !dbg !11953

if.end39:                                         ; preds = %if.end38, %if.end
  %29 = load i32, i32* %i, align 4, !dbg !11954
  %30 = load i32, i32* @max_interrupt_work, align 4, !dbg !11954
  %cmp40 = icmp sgt i32 %29, %30, !dbg !11954
  %lnot42 = xor i1 %cmp40, true, !dbg !11954
  %lnot44 = xor i1 %lnot42, true, !dbg !11954
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !11954
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !11954
  %tobool47 = icmp ne i64 %conv46, 0, !dbg !11954
  br i1 %tobool47, label %if.then48, label %if.end84, !dbg !11955

if.then48:                                        ; preds = %if.end39
  br label %do.body49, !dbg !11956

do.body49:                                        ; preds = %if.then48
  br label %do.body50, !dbg !11957

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy51, metadata !11958, metadata !DIExpression()), !dbg !11960
  call void @llvm.dbg.declare(metadata i64* %__dummy252, metadata !11961, metadata !DIExpression()), !dbg !11960
  %cmp53 = icmp eq i64* %__dummy51, %__dummy252, !dbg !11960
  %conv54 = zext i1 %cmp53 to i32, !dbg !11960
  store i32 1, i32* %tmp55, align 4, !dbg !11960
  %31 = load i32, i32* %tmp55, align 4, !dbg !11960
  br label %do.body56, !dbg !11962

do.body56:                                        ; preds = %do.body50
  br label %do.body57, !dbg !11963

do.body57:                                        ; preds = %do.body56
  br label %do.body58, !dbg !11964

do.body58:                                        ; preds = %do.body57
  call void @llvm.dbg.declare(metadata i64* %__dummy59, metadata !11966, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.declare(metadata i64* %__dummy260, metadata !11970, metadata !DIExpression()), !dbg !11969
  %cmp61 = icmp eq i64* %__dummy59, %__dummy260, !dbg !11969
  %conv62 = zext i1 %cmp61 to i32, !dbg !11969
  store i32 1, i32* %tmp63, align 4, !dbg !11969
  %32 = load i32, i32* %tmp63, align 4, !dbg !11969
  %call64 = call i64 @arch_local_irq_save() #13, !dbg !11971
  store i64 %call64, i64* %flags, align 8, !dbg !11971
  br label %do.end65, !dbg !11971

do.end65:                                         ; preds = %do.body58
  br label %do.end66, !dbg !11964

do.end66:                                         ; preds = %do.end65
  br label %do.body67, !dbg !11963

do.body67:                                        ; preds = %do.end66
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11972, !srcloc !11973
  br label %do.body68, !dbg !11972

do.body68:                                        ; preds = %do.body67
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11974
  %lock69 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 0, !dbg !11974
  store %struct.spinlock* %lock69, %struct.spinlock** %lock.addr.i93, align 8
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i93, align 8, !dbg !11975
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !11976
  %rlock.i94 = bitcast %union.anon.2* %35 to %struct.raw_spinlock*, !dbg !11976
  br label %do.end71, !dbg !11974

do.end71:                                         ; preds = %do.body68
  br label %do.end72, !dbg !11972

do.end72:                                         ; preds = %do.end71
  br label %do.end73, !dbg !11963

do.end73:                                         ; preds = %do.end72
  br label %do.end74, !dbg !11962

do.end74:                                         ; preds = %do.end73
  br label %do.end75, !dbg !11957

do.end75:                                         ; preds = %do.end74
  %36 = load i8*, i8** %base, align 8, !dbg !11977
  %add.ptr76 = getelementptr i8, i8* %36, i64 4, !dbg !11978
  call void @writel(i32 135, i8* %add.ptr76) #13, !dbg !11979
  %37 = load i8*, i8** %base, align 8, !dbg !11980
  call void @pci_push(i8* %37) #13, !dbg !11981
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11982
  %in_shutdown77 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 5, !dbg !11984
  %39 = load i32, i32* %in_shutdown77, align 8, !dbg !11984
  %tobool78 = icmp ne i32 %39, 0, !dbg !11982
  br i1 %tobool78, label %if.end82, label %if.then79, !dbg !11985

if.then79:                                        ; preds = %do.end75
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11986
  %nic_poll_irq = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 47, !dbg !11988
  %41 = load i32, i32* %nic_poll_irq, align 8, !dbg !11989
  %or = or i32 %41, 135, !dbg !11989
  store i32 %or, i32* %nic_poll_irq, align 8, !dbg !11989
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11990
  %nic_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 45, !dbg !11991
  %43 = load volatile i64, i64* @jiffies, align 8, !dbg !11992
  %add80 = add i64 %43, 3, !dbg !11993
  %call81 = call i32 @mod_timer(%struct.timer_list* %nic_poll, i64 %add80) #13, !dbg !11994
  br label %if.end82, !dbg !11995

if.end82:                                         ; preds = %if.then79, %do.end75
  %44 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !11996
  %lock83 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %44, i32 0, i32 0, !dbg !11997
  %45 = load i64, i64* %flags, align 8, !dbg !11998
  store %struct.spinlock* %lock83, %struct.spinlock** %lock.addr.i86, align 8
  store i64 %45, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !11999
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !11999
  store i32 1, i32* %tmp.i, align 4, !dbg !11999
  %46 = load i32, i32* %tmp.i, align 4, !dbg !11999
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12000
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12000
  store i32 1, i32* %tmp8.i, align 4, !dbg !12000
  %47 = load i32, i32* %tmp8.i, align 4, !dbg !12000
  %48 = load i64, i64* %flags.addr.i, align 8, !dbg !12001
  call void @arch_local_irq_restore(i64 %48) #15, !dbg !12001
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12002, !srcloc !10037
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !12003
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !12003
  %rlock.i87 = bitcast %union.anon.2* %50 to %struct.raw_spinlock*, !dbg !12003
  br label %for.end, !dbg !12004

if.end84:                                         ; preds = %if.end39
  br label %for.inc, !dbg !12005

for.inc:                                          ; preds = %if.end84
  %51 = load i32, i32* %i, align 4, !dbg !12006
  %inc = add i32 %51, 1, !dbg !12006
  store i32 %inc, i32* %i, align 4, !dbg !12006
  br label %for.cond, !dbg !12007, !llvm.loop !12008

for.end:                                          ; preds = %if.end82, %if.then
  %52 = load i32, i32* %i, align 4, !dbg !12011
  %tobool85 = icmp ne i32 %52, 0, !dbg !12011
  %53 = zext i1 %tobool85 to i64, !dbg !12011
  %cond = select i1 %tobool85, i32 1, i32 0, !dbg !12011
  ret i32 %cond, !dbg !12012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_nic_irq_tx(i32 %foo, i8* %data) #2 !dbg !12013 {
entry:
  %lock.addr.i74 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i74, metadata !8259, metadata !DIExpression()), !dbg !12014
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !9883, metadata !DIExpression()), !dbg !12026
  %flags.addr.i70 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i70, metadata !9891, metadata !DIExpression()), !dbg !12028
  %tmp.i71 = alloca i32, align 4
  %tmp8.i72 = alloca i32, align 4
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !9883, metadata !DIExpression()), !dbg !12029
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !12031
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !12032
  %foo.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %events = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__dummy34 = alloca i64, align 8
  %__dummy235 = alloca i64, align 8
  %tmp38 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  store i32 %foo, i32* %foo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %foo.addr, metadata !12039, metadata !DIExpression()), !dbg !12040
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12041, metadata !DIExpression()), !dbg !12042
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12043, metadata !DIExpression()), !dbg !12044
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12045
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !12046
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !12044
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !12047, metadata !DIExpression()), !dbg !12048
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12049
  %call = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !12050
  %3 = bitcast i8* %call to %struct.fe_priv*, !dbg !12050
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !12048
  call void @llvm.dbg.declare(metadata i8** %base, metadata !12051, metadata !DIExpression()), !dbg !12052
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12053
  %call1 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !12054
  store i8* %call1, i8** %base, align 8, !dbg !12052
  call void @llvm.dbg.declare(metadata i32* %events, metadata !12055, metadata !DIExpression()), !dbg !12056
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12057, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12059, metadata !DIExpression()), !dbg !12060
  store i32 0, i32* %i, align 4, !dbg !12061
  br label %for.cond, !dbg !12062

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i8*, i8** %base, align 8, !dbg !12063
  %add.ptr = getelementptr i8, i8* %5, i64 1008, !dbg !12064
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !12065
  %and = and i32 %call2, 280, !dbg !12066
  store i32 %and, i32* %events, align 4, !dbg !12067
  %6 = load i32, i32* %events, align 4, !dbg !12068
  %7 = load i8*, i8** %base, align 8, !dbg !12069
  %add.ptr3 = getelementptr i8, i8* %7, i64 1008, !dbg !12070
  call void @writel(i32 %6, i8* %add.ptr3) #13, !dbg !12071
  %8 = load i32, i32* %events, align 4, !dbg !12072
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12074
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 23, !dbg !12075
  %10 = load i32, i32* %irqmask, align 4, !dbg !12075
  %and4 = and i32 %8, %10, !dbg !12076
  %tobool = icmp ne i32 %and4, 0, !dbg !12076
  br i1 %tobool, label %if.end, label %if.then, !dbg !12077

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !12078

if.end:                                           ; preds = %for.cond
  br label %do.body, !dbg !12079

do.body:                                          ; preds = %if.end
  br label %do.body5, !dbg !12080

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12081, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12084, metadata !DIExpression()), !dbg !12083
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12083
  %conv = zext i1 %cmp to i32, !dbg !12083
  store i32 1, i32* %tmp, align 4, !dbg !12083
  %11 = load i32, i32* %tmp, align 4, !dbg !12083
  br label %do.body6, !dbg !12085

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !12086

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !12087

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !12089, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !12093, metadata !DIExpression()), !dbg !12092
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !12092
  %conv12 = zext i1 %cmp11 to i32, !dbg !12092
  store i32 1, i32* %tmp13, align 4, !dbg !12092
  %12 = load i32, i32* %tmp13, align 4, !dbg !12092
  %call14 = call i64 @arch_local_irq_save() #13, !dbg !12094
  store i64 %call14, i64* %flags, align 8, !dbg !12094
  br label %do.end, !dbg !12094

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !12087

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !12086

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12095, !srcloc !12096
  br label %do.body17, !dbg !12095

do.body17:                                        ; preds = %do.body16
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12097
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 0, !dbg !12097
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12098
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !12099
  %rlock.i = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !12099
  br label %do.end19, !dbg !12097

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !12095

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12086

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !12085

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !12080

do.end23:                                         ; preds = %do.end22
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12100
  %call24 = call i32 @nv_tx_done_optimized(%struct.net_device* %16, i32 64) #13, !dbg !12101
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12102
  %lock25 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 0, !dbg !12103
  %18 = load i64, i64* %flags, align 8, !dbg !12104
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i69, align 8
  store i64 %18, i64* %flags.addr.i70, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !12105
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !12105
  store i32 1, i32* %tmp.i71, align 4, !dbg !12105
  %19 = load i32, i32* %tmp.i71, align 4, !dbg !12105
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12106
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12106
  store i32 1, i32* %tmp8.i72, align 4, !dbg !12106
  %20 = load i32, i32* %tmp8.i72, align 4, !dbg !12106
  %21 = load i64, i64* %flags.addr.i70, align 8, !dbg !12107
  call void @arch_local_irq_restore(i64 %21) #15, !dbg !12107
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12108, !srcloc !10037
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !12109
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !12109
  %rlock.i73 = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !12109
  %24 = load i32, i32* %i, align 4, !dbg !12110
  %25 = load i32, i32* @max_interrupt_work, align 4, !dbg !12110
  %cmp26 = icmp sgt i32 %24, %25, !dbg !12110
  %lnot = xor i1 %cmp26, true, !dbg !12110
  %lnot28 = xor i1 %lnot, true, !dbg !12110
  %lnot.ext = zext i1 %lnot28 to i32, !dbg !12110
  %conv29 = sext i32 %lnot.ext to i64, !dbg !12110
  %tobool30 = icmp ne i64 %conv29, 0, !dbg !12110
  br i1 %tobool30, label %if.then31, label %if.end65, !dbg !12111

if.then31:                                        ; preds = %do.end23
  br label %do.body32, !dbg !12112

do.body32:                                        ; preds = %if.then31
  br label %do.body33, !dbg !12113

do.body33:                                        ; preds = %do.body32
  call void @llvm.dbg.declare(metadata i64* %__dummy34, metadata !12114, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !12117, metadata !DIExpression()), !dbg !12116
  %cmp36 = icmp eq i64* %__dummy34, %__dummy235, !dbg !12116
  %conv37 = zext i1 %cmp36 to i32, !dbg !12116
  store i32 1, i32* %tmp38, align 4, !dbg !12116
  %26 = load i32, i32* %tmp38, align 4, !dbg !12116
  br label %do.body39, !dbg !12118

do.body39:                                        ; preds = %do.body33
  br label %do.body40, !dbg !12119

do.body40:                                        ; preds = %do.body39
  br label %do.body41, !dbg !12120

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !12122, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !12126, metadata !DIExpression()), !dbg !12125
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !12125
  %conv45 = zext i1 %cmp44 to i32, !dbg !12125
  store i32 1, i32* %tmp46, align 4, !dbg !12125
  %27 = load i32, i32* %tmp46, align 4, !dbg !12125
  %call47 = call i64 @arch_local_irq_save() #13, !dbg !12127
  store i64 %call47, i64* %flags, align 8, !dbg !12127
  br label %do.end48, !dbg !12127

do.end48:                                         ; preds = %do.body41
  br label %do.end49, !dbg !12120

do.end49:                                         ; preds = %do.end48
  br label %do.body50, !dbg !12119

do.body50:                                        ; preds = %do.end49
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12128, !srcloc !12129
  br label %do.body51, !dbg !12128

do.body51:                                        ; preds = %do.body50
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12130
  %lock52 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 0, !dbg !12130
  store %struct.spinlock* %lock52, %struct.spinlock** %lock.addr.i74, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i74, align 8, !dbg !12131
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !12132
  %rlock.i75 = bitcast %union.anon.2* %30 to %struct.raw_spinlock*, !dbg !12132
  br label %do.end54, !dbg !12130

do.end54:                                         ; preds = %do.body51
  br label %do.end55, !dbg !12128

do.end55:                                         ; preds = %do.end54
  br label %do.end56, !dbg !12119

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !12118

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !12113

do.end58:                                         ; preds = %do.end57
  %31 = load i8*, i8** %base, align 8, !dbg !12133
  %add.ptr59 = getelementptr i8, i8* %31, i64 4, !dbg !12134
  call void @writel(i32 280, i8* %add.ptr59) #13, !dbg !12135
  %32 = load i8*, i8** %base, align 8, !dbg !12136
  call void @pci_push(i8* %32) #13, !dbg !12137
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12138
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 5, !dbg !12140
  %34 = load i32, i32* %in_shutdown, align 8, !dbg !12140
  %tobool60 = icmp ne i32 %34, 0, !dbg !12138
  br i1 %tobool60, label %if.end63, label %if.then61, !dbg !12141

if.then61:                                        ; preds = %do.end58
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12142
  %nic_poll_irq = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 47, !dbg !12144
  %36 = load i32, i32* %nic_poll_irq, align 8, !dbg !12145
  %or = or i32 %36, 280, !dbg !12145
  store i32 %or, i32* %nic_poll_irq, align 8, !dbg !12145
  %37 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12146
  %nic_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %37, i32 0, i32 45, !dbg !12147
  %38 = load volatile i64, i64* @jiffies, align 8, !dbg !12148
  %add = add i64 %38, 3, !dbg !12149
  %call62 = call i32 @mod_timer(%struct.timer_list* %nic_poll, i64 %add) #13, !dbg !12150
  br label %if.end63, !dbg !12151

if.end63:                                         ; preds = %if.then61, %do.end58
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12152
  %lock64 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 0, !dbg !12153
  %40 = load i64, i64* %flags, align 8, !dbg !12154
  store %struct.spinlock* %lock64, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %40, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !12155
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !12155
  store i32 1, i32* %tmp.i, align 4, !dbg !12155
  %41 = load i32, i32* %tmp.i, align 4, !dbg !12155
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12156
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12156
  store i32 1, i32* %tmp8.i, align 4, !dbg !12156
  %42 = load i32, i32* %tmp8.i, align 4, !dbg !12156
  %43 = load i64, i64* %flags.addr.i, align 8, !dbg !12157
  call void @arch_local_irq_restore(i64 %43) #15, !dbg !12157
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12158, !srcloc !10037
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !12159
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !12159
  %rlock.i68 = bitcast %union.anon.2* %45 to %struct.raw_spinlock*, !dbg !12159
  br label %for.end, !dbg !12160

if.end65:                                         ; preds = %do.end23
  br label %for.inc, !dbg !12161

for.inc:                                          ; preds = %if.end65
  %46 = load i32, i32* %i, align 4, !dbg !12162
  %inc = add i32 %46, 1, !dbg !12162
  store i32 %inc, i32* %i, align 4, !dbg !12162
  br label %for.cond, !dbg !12163, !llvm.loop !12164

for.end:                                          ; preds = %if.end63, %if.then
  %47 = load i32, i32* %i, align 4, !dbg !12167
  %tobool66 = icmp ne i32 %47, 0, !dbg !12167
  %48 = zext i1 %tobool66 to i64, !dbg !12167
  %cond = select i1 %tobool66, i32 1, i32 0, !dbg !12167
  ret i32 %cond, !dbg !12168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_nic_irq_other(i32 %foo, i8* %data) #2 !dbg !12169 {
entry:
  %lock.addr.i204 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i204, metadata !8259, metadata !DIExpression()), !dbg !12170
  %lock.addr.i199 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i199, metadata !9883, metadata !DIExpression()), !dbg !12182
  %flags.addr.i200 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i200, metadata !9891, metadata !DIExpression()), !dbg !12186
  %tmp.i201 = alloca i32, align 4
  %tmp8.i202 = alloca i32, align 4
  %lock.addr.i197 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i197, metadata !8259, metadata !DIExpression()), !dbg !12187
  %lock.addr.i192 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i192, metadata !9883, metadata !DIExpression()), !dbg !12194
  %flags.addr.i193 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i193, metadata !9891, metadata !DIExpression()), !dbg !12198
  %tmp.i194 = alloca i32, align 4
  %tmp8.i195 = alloca i32, align 4
  %lock.addr.i190 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i190, metadata !8259, metadata !DIExpression()), !dbg !12199
  %lock.addr.i185 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i185, metadata !9883, metadata !DIExpression()), !dbg !12206
  %flags.addr.i186 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i186, metadata !9891, metadata !DIExpression()), !dbg !12210
  %tmp.i187 = alloca i32, align 4
  %tmp8.i188 = alloca i32, align 4
  %lock.addr.i183 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i183, metadata !8259, metadata !DIExpression()), !dbg !12211
  %lock.addr.i178 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i178, metadata !9883, metadata !DIExpression()), !dbg !12218
  %flags.addr.i179 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i179, metadata !9891, metadata !DIExpression()), !dbg !12220
  %tmp.i180 = alloca i32, align 4
  %tmp8.i181 = alloca i32, align 4
  %lock.addr.i176 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i176, metadata !9883, metadata !DIExpression()), !dbg !12221
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !12223
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !12224
  %foo.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %events = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__dummy31 = alloca i64, align 8
  %__dummy232 = alloca i64, align 8
  %tmp35 = alloca i32, align 4
  %__dummy39 = alloca i64, align 8
  %__dummy240 = alloca i64, align 8
  %tmp43 = alloca i32, align 4
  %__dummy64 = alloca i64, align 8
  %__dummy265 = alloca i64, align 8
  %tmp68 = alloca i32, align 4
  %__dummy72 = alloca i64, align 8
  %__dummy273 = alloca i64, align 8
  %tmp76 = alloca i32, align 4
  %__dummy97 = alloca i64, align 8
  %__dummy298 = alloca i64, align 8
  %tmp101 = alloca i32, align 4
  %__dummy105 = alloca i64, align 8
  %__dummy2106 = alloca i64, align 8
  %tmp109 = alloca i32, align 4
  %__dummy138 = alloca i64, align 8
  %__dummy2139 = alloca i64, align 8
  %tmp142 = alloca i32, align 4
  %__dummy146 = alloca i64, align 8
  %__dummy2147 = alloca i64, align 8
  %tmp150 = alloca i32, align 4
  store i32 %foo, i32* %foo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %foo.addr, metadata !12231, metadata !DIExpression()), !dbg !12232
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12233, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12235, metadata !DIExpression()), !dbg !12236
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12237
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !12238
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !12236
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !12239, metadata !DIExpression()), !dbg !12240
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12241
  %call = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !12242
  %3 = bitcast i8* %call to %struct.fe_priv*, !dbg !12242
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !12240
  call void @llvm.dbg.declare(metadata i8** %base, metadata !12243, metadata !DIExpression()), !dbg !12244
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12245
  %call1 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !12246
  store i8* %call1, i8** %base, align 8, !dbg !12244
  call void @llvm.dbg.declare(metadata i32* %events, metadata !12247, metadata !DIExpression()), !dbg !12248
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12249, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12251, metadata !DIExpression()), !dbg !12252
  store i32 0, i32* %i, align 4, !dbg !12253
  br label %for.cond, !dbg !12254

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i8*, i8** %base, align 8, !dbg !12255
  %add.ptr = getelementptr i8, i8* %5, i64 1008, !dbg !12256
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !12257
  %and = and i32 %call2, 33376, !dbg !12258
  store i32 %and, i32* %events, align 4, !dbg !12259
  %6 = load i32, i32* %events, align 4, !dbg !12260
  %7 = load i8*, i8** %base, align 8, !dbg !12261
  %add.ptr3 = getelementptr i8, i8* %7, i64 1008, !dbg !12262
  call void @writel(i32 %6, i8* %add.ptr3) #13, !dbg !12263
  %8 = load i32, i32* %events, align 4, !dbg !12264
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12266
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 23, !dbg !12267
  %10 = load i32, i32* %irqmask, align 4, !dbg !12267
  %and4 = and i32 %8, %10, !dbg !12268
  %tobool = icmp ne i32 %and4, 0, !dbg !12268
  br i1 %tobool, label %if.end, label %if.then, !dbg !12269

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !12270

if.end:                                           ; preds = %for.cond
  br label %do.body, !dbg !12271

do.body:                                          ; preds = %if.end
  br label %do.body5, !dbg !12272

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12273, metadata !DIExpression()), !dbg !12275
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12276, metadata !DIExpression()), !dbg !12275
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12275
  %conv = zext i1 %cmp to i32, !dbg !12275
  store i32 1, i32* %tmp, align 4, !dbg !12275
  %11 = load i32, i32* %tmp, align 4, !dbg !12275
  br label %do.body6, !dbg !12277

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !12278

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !12279

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !12281, metadata !DIExpression()), !dbg !12284
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !12285, metadata !DIExpression()), !dbg !12284
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !12284
  %conv12 = zext i1 %cmp11 to i32, !dbg !12284
  store i32 1, i32* %tmp13, align 4, !dbg !12284
  %12 = load i32, i32* %tmp13, align 4, !dbg !12284
  %call14 = call i64 @arch_local_irq_save() #13, !dbg !12286
  store i64 %call14, i64* %flags, align 8, !dbg !12286
  br label %do.end, !dbg !12286

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !12279

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !12278

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12287, !srcloc !12288
  br label %do.body17, !dbg !12287

do.body17:                                        ; preds = %do.body16
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12289
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 0, !dbg !12289
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12290
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !12291
  %rlock.i = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !12291
  br label %do.end19, !dbg !12289

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !12287

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12278

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !12277

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !12272

do.end23:                                         ; preds = %do.end22
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12292
  %call24 = call i32 @nv_tx_done_optimized(%struct.net_device* %16, i32 64) #13, !dbg !12293
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12294
  %lock25 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 0, !dbg !12295
  %18 = load i64, i64* %flags, align 8, !dbg !12296
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i178, align 8
  store i64 %18, i64* %flags.addr.i179, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !12297
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !12297
  store i32 1, i32* %tmp.i180, align 4, !dbg !12297
  %19 = load i32, i32* %tmp.i180, align 4, !dbg !12297
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12298
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12298
  store i32 1, i32* %tmp8.i181, align 4, !dbg !12298
  %20 = load i32, i32* %tmp8.i181, align 4, !dbg !12298
  %21 = load i64, i64* %flags.addr.i179, align 8, !dbg !12299
  call void @arch_local_irq_restore(i64 %21) #15, !dbg !12299
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12300, !srcloc !10037
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i178, align 8, !dbg !12301
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !12301
  %rlock.i182 = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !12301
  %24 = load i32, i32* %events, align 4, !dbg !12302
  %and26 = and i32 %24, 64, !dbg !12303
  %tobool27 = icmp ne i32 %and26, 0, !dbg !12303
  br i1 %tobool27, label %if.then28, label %if.end57, !dbg !12304

if.then28:                                        ; preds = %do.end23
  br label %do.body29, !dbg !12305

do.body29:                                        ; preds = %if.then28
  br label %do.body30, !dbg !12306

do.body30:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i64* %__dummy31, metadata !12307, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.declare(metadata i64* %__dummy232, metadata !12310, metadata !DIExpression()), !dbg !12309
  %cmp33 = icmp eq i64* %__dummy31, %__dummy232, !dbg !12309
  %conv34 = zext i1 %cmp33 to i32, !dbg !12309
  store i32 1, i32* %tmp35, align 4, !dbg !12309
  %25 = load i32, i32* %tmp35, align 4, !dbg !12309
  br label %do.body36, !dbg !12311

do.body36:                                        ; preds = %do.body30
  br label %do.body37, !dbg !12312

do.body37:                                        ; preds = %do.body36
  br label %do.body38, !dbg !12313

do.body38:                                        ; preds = %do.body37
  call void @llvm.dbg.declare(metadata i64* %__dummy39, metadata !12315, metadata !DIExpression()), !dbg !12318
  call void @llvm.dbg.declare(metadata i64* %__dummy240, metadata !12319, metadata !DIExpression()), !dbg !12318
  %cmp41 = icmp eq i64* %__dummy39, %__dummy240, !dbg !12318
  %conv42 = zext i1 %cmp41 to i32, !dbg !12318
  store i32 1, i32* %tmp43, align 4, !dbg !12318
  %26 = load i32, i32* %tmp43, align 4, !dbg !12318
  %call44 = call i64 @arch_local_irq_save() #13, !dbg !12320
  store i64 %call44, i64* %flags, align 8, !dbg !12320
  br label %do.end45, !dbg !12320

do.end45:                                         ; preds = %do.body38
  br label %do.end46, !dbg !12313

do.end46:                                         ; preds = %do.end45
  br label %do.body47, !dbg !12312

do.body47:                                        ; preds = %do.end46
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12321, !srcloc !12322
  br label %do.body48, !dbg !12321

do.body48:                                        ; preds = %do.body47
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12323
  %lock49 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 0, !dbg !12323
  store %struct.spinlock* %lock49, %struct.spinlock** %lock.addr.i183, align 8
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i183, align 8, !dbg !12324
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !12325
  %rlock.i184 = bitcast %union.anon.2* %29 to %struct.raw_spinlock*, !dbg !12325
  br label %do.end51, !dbg !12323

do.end51:                                         ; preds = %do.body48
  br label %do.end52, !dbg !12321

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !12312

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !12311

do.end54:                                         ; preds = %do.end53
  br label %do.end55, !dbg !12306

do.end55:                                         ; preds = %do.end54
  %30 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12326
  call void @nv_link_irq(%struct.net_device* %30) #13, !dbg !12327
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12328
  %lock56 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 0, !dbg !12329
  %32 = load i64, i64* %flags, align 8, !dbg !12330
  store %struct.spinlock* %lock56, %struct.spinlock** %lock.addr.i185, align 8
  store i64 %32, i64* %flags.addr.i186, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !12331
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !12331
  store i32 1, i32* %tmp.i187, align 4, !dbg !12331
  %33 = load i32, i32* %tmp.i187, align 4, !dbg !12331
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12332
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12332
  store i32 1, i32* %tmp8.i188, align 4, !dbg !12332
  %34 = load i32, i32* %tmp8.i188, align 4, !dbg !12332
  %35 = load i64, i64* %flags.addr.i186, align 8, !dbg !12333
  call void @arch_local_irq_restore(i64 %35) #15, !dbg !12333
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12334, !srcloc !10037
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i185, align 8, !dbg !12335
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !12335
  %rlock.i189 = bitcast %union.anon.2* %37 to %struct.raw_spinlock*, !dbg !12335
  br label %if.end57, !dbg !12336

if.end57:                                         ; preds = %do.end55, %do.end23
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12337
  %need_linktimer = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 51, !dbg !12338
  %39 = load i32, i32* %need_linktimer, align 8, !dbg !12338
  %tobool58 = icmp ne i32 %39, 0, !dbg !12337
  br i1 %tobool58, label %land.lhs.true, label %if.end91, !dbg !12339

land.lhs.true:                                    ; preds = %if.end57
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12340
  %link_timeout = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 52, !dbg !12340
  %41 = load i64, i64* %link_timeout, align 8, !dbg !12340
  %42 = load volatile i64, i64* @jiffies, align 8, !dbg !12340
  %sub = sub i64 %41, %42, !dbg !12340
  %cmp59 = icmp slt i64 %sub, 0, !dbg !12340
  br i1 %cmp59, label %if.then61, label %if.end91, !dbg !12341

if.then61:                                        ; preds = %land.lhs.true
  br label %do.body62, !dbg !12342

do.body62:                                        ; preds = %if.then61
  br label %do.body63, !dbg !12343

do.body63:                                        ; preds = %do.body62
  call void @llvm.dbg.declare(metadata i64* %__dummy64, metadata !12344, metadata !DIExpression()), !dbg !12346
  call void @llvm.dbg.declare(metadata i64* %__dummy265, metadata !12347, metadata !DIExpression()), !dbg !12346
  %cmp66 = icmp eq i64* %__dummy64, %__dummy265, !dbg !12346
  %conv67 = zext i1 %cmp66 to i32, !dbg !12346
  store i32 1, i32* %tmp68, align 4, !dbg !12346
  %43 = load i32, i32* %tmp68, align 4, !dbg !12346
  br label %do.body69, !dbg !12348

do.body69:                                        ; preds = %do.body63
  br label %do.body70, !dbg !12349

do.body70:                                        ; preds = %do.body69
  br label %do.body71, !dbg !12350

do.body71:                                        ; preds = %do.body70
  call void @llvm.dbg.declare(metadata i64* %__dummy72, metadata !12352, metadata !DIExpression()), !dbg !12355
  call void @llvm.dbg.declare(metadata i64* %__dummy273, metadata !12356, metadata !DIExpression()), !dbg !12355
  %cmp74 = icmp eq i64* %__dummy72, %__dummy273, !dbg !12355
  %conv75 = zext i1 %cmp74 to i32, !dbg !12355
  store i32 1, i32* %tmp76, align 4, !dbg !12355
  %44 = load i32, i32* %tmp76, align 4, !dbg !12355
  %call77 = call i64 @arch_local_irq_save() #13, !dbg !12357
  store i64 %call77, i64* %flags, align 8, !dbg !12357
  br label %do.end78, !dbg !12357

do.end78:                                         ; preds = %do.body71
  br label %do.end79, !dbg !12350

do.end79:                                         ; preds = %do.end78
  br label %do.body80, !dbg !12349

do.body80:                                        ; preds = %do.end79
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12358, !srcloc !12359
  br label %do.body81, !dbg !12358

do.body81:                                        ; preds = %do.body80
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12360
  %lock82 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 0, !dbg !12360
  store %struct.spinlock* %lock82, %struct.spinlock** %lock.addr.i190, align 8
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i190, align 8, !dbg !12361
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !12362
  %rlock.i191 = bitcast %union.anon.2* %47 to %struct.raw_spinlock*, !dbg !12362
  br label %do.end84, !dbg !12360

do.end84:                                         ; preds = %do.body81
  br label %do.end85, !dbg !12358

do.end85:                                         ; preds = %do.end84
  br label %do.end86, !dbg !12349

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !12348

do.end87:                                         ; preds = %do.end86
  br label %do.end88, !dbg !12343

do.end88:                                         ; preds = %do.end87
  %48 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12363
  call void @nv_linkchange(%struct.net_device* %48) #13, !dbg !12364
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12365
  %lock89 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 0, !dbg !12366
  %50 = load i64, i64* %flags, align 8, !dbg !12367
  store %struct.spinlock* %lock89, %struct.spinlock** %lock.addr.i192, align 8
  store i64 %50, i64* %flags.addr.i193, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !12368
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !12368
  store i32 1, i32* %tmp.i194, align 4, !dbg !12368
  %51 = load i32, i32* %tmp.i194, align 4, !dbg !12368
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12369
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12369
  store i32 1, i32* %tmp8.i195, align 4, !dbg !12369
  %52 = load i32, i32* %tmp8.i195, align 4, !dbg !12369
  %53 = load i64, i64* %flags.addr.i193, align 8, !dbg !12370
  call void @arch_local_irq_restore(i64 %53) #15, !dbg !12370
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12371, !srcloc !10037
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i192, align 8, !dbg !12372
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !12372
  %rlock.i196 = bitcast %union.anon.2* %55 to %struct.raw_spinlock*, !dbg !12372
  %56 = load volatile i64, i64* @jiffies, align 8, !dbg !12373
  %add = add i64 %56, 750, !dbg !12374
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12375
  %link_timeout90 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 52, !dbg !12376
  store i64 %add, i64* %link_timeout90, align 8, !dbg !12377
  br label %if.end91, !dbg !12378

if.end91:                                         ; preds = %do.end88, %land.lhs.true, %if.end57
  %58 = load i32, i32* %events, align 4, !dbg !12379
  %and92 = and i32 %58, 33280, !dbg !12380
  %tobool93 = icmp ne i32 %and92, 0, !dbg !12380
  br i1 %tobool93, label %if.then94, label %if.end129, !dbg !12381

if.then94:                                        ; preds = %if.end91
  br label %do.body95, !dbg !12382

do.body95:                                        ; preds = %if.then94
  br label %do.body96, !dbg !12383

do.body96:                                        ; preds = %do.body95
  call void @llvm.dbg.declare(metadata i64* %__dummy97, metadata !12384, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.declare(metadata i64* %__dummy298, metadata !12387, metadata !DIExpression()), !dbg !12386
  %cmp99 = icmp eq i64* %__dummy97, %__dummy298, !dbg !12386
  %conv100 = zext i1 %cmp99 to i32, !dbg !12386
  store i32 1, i32* %tmp101, align 4, !dbg !12386
  %59 = load i32, i32* %tmp101, align 4, !dbg !12386
  br label %do.body102, !dbg !12388

do.body102:                                       ; preds = %do.body96
  br label %do.body103, !dbg !12389

do.body103:                                       ; preds = %do.body102
  br label %do.body104, !dbg !12390

do.body104:                                       ; preds = %do.body103
  call void @llvm.dbg.declare(metadata i64* %__dummy105, metadata !12392, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.declare(metadata i64* %__dummy2106, metadata !12396, metadata !DIExpression()), !dbg !12395
  %cmp107 = icmp eq i64* %__dummy105, %__dummy2106, !dbg !12395
  %conv108 = zext i1 %cmp107 to i32, !dbg !12395
  store i32 1, i32* %tmp109, align 4, !dbg !12395
  %60 = load i32, i32* %tmp109, align 4, !dbg !12395
  %call110 = call i64 @arch_local_irq_save() #13, !dbg !12397
  store i64 %call110, i64* %flags, align 8, !dbg !12397
  br label %do.end111, !dbg !12397

do.end111:                                        ; preds = %do.body104
  br label %do.end112, !dbg !12390

do.end112:                                        ; preds = %do.end111
  br label %do.body113, !dbg !12389

do.body113:                                       ; preds = %do.end112
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12398, !srcloc !12399
  br label %do.body114, !dbg !12398

do.body114:                                       ; preds = %do.body113
  %61 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12400
  %lock115 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %61, i32 0, i32 0, !dbg !12400
  store %struct.spinlock* %lock115, %struct.spinlock** %lock.addr.i197, align 8
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i197, align 8, !dbg !12401
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !12402
  %rlock.i198 = bitcast %union.anon.2* %63 to %struct.raw_spinlock*, !dbg !12402
  br label %do.end117, !dbg !12400

do.end117:                                        ; preds = %do.body114
  br label %do.end118, !dbg !12398

do.end118:                                        ; preds = %do.end117
  br label %do.end119, !dbg !12389

do.end119:                                        ; preds = %do.end118
  br label %do.end120, !dbg !12388

do.end120:                                        ; preds = %do.end119
  br label %do.end121, !dbg !12383

do.end121:                                        ; preds = %do.end120
  %64 = load i8*, i8** %base, align 8, !dbg !12403
  %add.ptr122 = getelementptr i8, i8* %64, i64 4, !dbg !12404
  call void @writel(i32 33376, i8* %add.ptr122) #13, !dbg !12405
  %65 = load i8*, i8** %base, align 8, !dbg !12406
  call void @pci_push(i8* %65) #13, !dbg !12407
  %66 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12408
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %66, i32 0, i32 5, !dbg !12410
  %67 = load i32, i32* %in_shutdown, align 8, !dbg !12410
  %tobool123 = icmp ne i32 %67, 0, !dbg !12408
  br i1 %tobool123, label %if.end127, label %if.then124, !dbg !12411

if.then124:                                       ; preds = %do.end121
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12412
  %nic_poll_irq = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 47, !dbg !12414
  %69 = load i32, i32* %nic_poll_irq, align 8, !dbg !12415
  %or = or i32 %69, 33376, !dbg !12415
  store i32 %or, i32* %nic_poll_irq, align 8, !dbg !12415
  %70 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12416
  %recover_error = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %70, i32 0, i32 17, !dbg !12417
  store i32 1, i32* %recover_error, align 8, !dbg !12418
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12419
  %nic_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 45, !dbg !12420
  %72 = load volatile i64, i64* @jiffies, align 8, !dbg !12421
  %add125 = add i64 %72, 3, !dbg !12422
  %call126 = call i32 @mod_timer(%struct.timer_list* %nic_poll, i64 %add125) #13, !dbg !12423
  br label %if.end127, !dbg !12424

if.end127:                                        ; preds = %if.then124, %do.end121
  %73 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12425
  %lock128 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %73, i32 0, i32 0, !dbg !12426
  %74 = load i64, i64* %flags, align 8, !dbg !12427
  store %struct.spinlock* %lock128, %struct.spinlock** %lock.addr.i199, align 8
  store i64 %74, i64* %flags.addr.i200, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !12428
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !12428
  store i32 1, i32* %tmp.i201, align 4, !dbg !12428
  %75 = load i32, i32* %tmp.i201, align 4, !dbg !12428
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12429
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12429
  store i32 1, i32* %tmp8.i202, align 4, !dbg !12429
  %76 = load i32, i32* %tmp8.i202, align 4, !dbg !12429
  %77 = load i64, i64* %flags.addr.i200, align 8, !dbg !12430
  call void @arch_local_irq_restore(i64 %77) #15, !dbg !12430
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12431, !srcloc !10037
  %78 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i199, align 8, !dbg !12432
  %79 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %78, i32 0, i32 0, !dbg !12432
  %rlock.i203 = bitcast %union.anon.2* %79 to %struct.raw_spinlock*, !dbg !12432
  br label %for.end, !dbg !12433

if.end129:                                        ; preds = %if.end91
  %80 = load i32, i32* %i, align 4, !dbg !12434
  %81 = load i32, i32* @max_interrupt_work, align 4, !dbg !12434
  %cmp130 = icmp sgt i32 %80, %81, !dbg !12434
  %lnot = xor i1 %cmp130, true, !dbg !12434
  %lnot132 = xor i1 %lnot, true, !dbg !12434
  %lnot.ext = zext i1 %lnot132 to i32, !dbg !12434
  %conv133 = sext i32 %lnot.ext to i64, !dbg !12434
  %tobool134 = icmp ne i64 %conv133, 0, !dbg !12434
  br i1 %tobool134, label %if.then135, label %if.end174, !dbg !12435

if.then135:                                       ; preds = %if.end129
  br label %do.body136, !dbg !12436

do.body136:                                       ; preds = %if.then135
  br label %do.body137, !dbg !12437

do.body137:                                       ; preds = %do.body136
  call void @llvm.dbg.declare(metadata i64* %__dummy138, metadata !12438, metadata !DIExpression()), !dbg !12440
  call void @llvm.dbg.declare(metadata i64* %__dummy2139, metadata !12441, metadata !DIExpression()), !dbg !12440
  %cmp140 = icmp eq i64* %__dummy138, %__dummy2139, !dbg !12440
  %conv141 = zext i1 %cmp140 to i32, !dbg !12440
  store i32 1, i32* %tmp142, align 4, !dbg !12440
  %82 = load i32, i32* %tmp142, align 4, !dbg !12440
  br label %do.body143, !dbg !12442

do.body143:                                       ; preds = %do.body137
  br label %do.body144, !dbg !12443

do.body144:                                       ; preds = %do.body143
  br label %do.body145, !dbg !12444

do.body145:                                       ; preds = %do.body144
  call void @llvm.dbg.declare(metadata i64* %__dummy146, metadata !12446, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.declare(metadata i64* %__dummy2147, metadata !12450, metadata !DIExpression()), !dbg !12449
  %cmp148 = icmp eq i64* %__dummy146, %__dummy2147, !dbg !12449
  %conv149 = zext i1 %cmp148 to i32, !dbg !12449
  store i32 1, i32* %tmp150, align 4, !dbg !12449
  %83 = load i32, i32* %tmp150, align 4, !dbg !12449
  %call151 = call i64 @arch_local_irq_save() #13, !dbg !12451
  store i64 %call151, i64* %flags, align 8, !dbg !12451
  br label %do.end152, !dbg !12451

do.end152:                                        ; preds = %do.body145
  br label %do.end153, !dbg !12444

do.end153:                                        ; preds = %do.end152
  br label %do.body154, !dbg !12443

do.body154:                                       ; preds = %do.end153
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12452, !srcloc !12453
  br label %do.body155, !dbg !12452

do.body155:                                       ; preds = %do.body154
  %84 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12454
  %lock156 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %84, i32 0, i32 0, !dbg !12454
  store %struct.spinlock* %lock156, %struct.spinlock** %lock.addr.i204, align 8
  %85 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i204, align 8, !dbg !12455
  %86 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %85, i32 0, i32 0, !dbg !12456
  %rlock.i205 = bitcast %union.anon.2* %86 to %struct.raw_spinlock*, !dbg !12456
  br label %do.end158, !dbg !12454

do.end158:                                        ; preds = %do.body155
  br label %do.end159, !dbg !12452

do.end159:                                        ; preds = %do.end158
  br label %do.end160, !dbg !12443

do.end160:                                        ; preds = %do.end159
  br label %do.end161, !dbg !12442

do.end161:                                        ; preds = %do.end160
  br label %do.end162, !dbg !12437

do.end162:                                        ; preds = %do.end161
  %87 = load i8*, i8** %base, align 8, !dbg !12457
  %add.ptr163 = getelementptr i8, i8* %87, i64 4, !dbg !12458
  call void @writel(i32 33376, i8* %add.ptr163) #13, !dbg !12459
  %88 = load i8*, i8** %base, align 8, !dbg !12460
  call void @pci_push(i8* %88) #13, !dbg !12461
  %89 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12462
  %in_shutdown164 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %89, i32 0, i32 5, !dbg !12464
  %90 = load i32, i32* %in_shutdown164, align 8, !dbg !12464
  %tobool165 = icmp ne i32 %90, 0, !dbg !12462
  br i1 %tobool165, label %if.end172, label %if.then166, !dbg !12465

if.then166:                                       ; preds = %do.end162
  %91 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12466
  %nic_poll_irq167 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %91, i32 0, i32 47, !dbg !12468
  %92 = load i32, i32* %nic_poll_irq167, align 8, !dbg !12469
  %or168 = or i32 %92, 33376, !dbg !12469
  store i32 %or168, i32* %nic_poll_irq167, align 8, !dbg !12469
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12470
  %nic_poll169 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 45, !dbg !12471
  %94 = load volatile i64, i64* @jiffies, align 8, !dbg !12472
  %add170 = add i64 %94, 3, !dbg !12473
  %call171 = call i32 @mod_timer(%struct.timer_list* %nic_poll169, i64 %add170) #13, !dbg !12474
  br label %if.end172, !dbg !12475

if.end172:                                        ; preds = %if.then166, %do.end162
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12476
  %lock173 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 0, !dbg !12477
  %96 = load i64, i64* %flags, align 8, !dbg !12478
  store %struct.spinlock* %lock173, %struct.spinlock** %lock.addr.i176, align 8
  store i64 %96, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !12479
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !12479
  store i32 1, i32* %tmp.i, align 4, !dbg !12479
  %97 = load i32, i32* %tmp.i, align 4, !dbg !12479
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !12480
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !12480
  store i32 1, i32* %tmp8.i, align 4, !dbg !12480
  %98 = load i32, i32* %tmp8.i, align 4, !dbg !12480
  %99 = load i64, i64* %flags.addr.i, align 8, !dbg !12481
  call void @arch_local_irq_restore(i64 %99) #15, !dbg !12481
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12482, !srcloc !10037
  %100 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i176, align 8, !dbg !12483
  %101 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %100, i32 0, i32 0, !dbg !12483
  %rlock.i177 = bitcast %union.anon.2* %101 to %struct.raw_spinlock*, !dbg !12483
  br label %for.end, !dbg !12484

if.end174:                                        ; preds = %if.end129
  br label %for.inc, !dbg !12485

for.inc:                                          ; preds = %if.end174
  %102 = load i32, i32* %i, align 4, !dbg !12486
  %inc = add i32 %102, 1, !dbg !12486
  store i32 %inc, i32* %i, align 4, !dbg !12486
  br label %for.cond, !dbg !12487, !llvm.loop !12488

for.end:                                          ; preds = %if.end172, %if.end127, %if.then
  %103 = load i32, i32* %i, align 4, !dbg !12491
  %tobool175 = icmp ne i32 %103, 0, !dbg !12491
  %104 = zext i1 %tobool175 to i64, !dbg !12491
  %cond = select i1 %tobool175, i32 1, i32 0, !dbg !12491
  ret i32 %cond, !dbg !12492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_irq_lockdep_irqrestore(i32 %irq, i64* %flags) #2 !dbg !12493 {
entry:
  %irq.addr = alloca i32, align 4
  %flags.addr = alloca i64*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12494, metadata !DIExpression()), !dbg !12495
  store i64* %flags, i64** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flags.addr, metadata !12496, metadata !DIExpression()), !dbg !12497
  %0 = load i32, i32* %irq.addr, align 4, !dbg !12498
  call void @enable_irq(i32 %0) #13, !dbg !12499
  ret void, !dbg !12500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.fe_priv* @get_nvpriv(%struct.net_device* %dev) #2 !dbg !12501 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12504, metadata !DIExpression()), !dbg !12505
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12506
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !12507
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !12507
  ret %struct.fe_priv* %1, !dbg !12508
}

; Function Attrs: noredzone
declare dso_local void @disable_irq_nosync(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !12509 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !12516, metadata !DIExpression()), !dbg !12519
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !12521, metadata !DIExpression()), !dbg !12522
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !12523, metadata !DIExpression()), !dbg !12524
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12525, metadata !DIExpression()), !dbg !12527
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12529, metadata !DIExpression()), !dbg !12530
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12531, metadata !DIExpression()), !dbg !12536
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12538, metadata !DIExpression()), !dbg !12539
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12540, metadata !DIExpression()), !dbg !12541
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12542, metadata !DIExpression()), !dbg !12543
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12544
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12545
  %div = sdiv i64 %1, 64, !dbg !12545
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12546
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12544
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12547
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12548
  %conv.i = trunc i64 %4 to i32, !dbg !12548
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #15, !dbg !12549
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12550
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12550
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #15, !dbg !12550
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12551
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !12551
  br i1 %8, label %cond.true, label %cond.false, !dbg !12551

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !12551
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !12551
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !12552
  %and.i = and i64 %11, 63, !dbg !12553
  %shl.i = shl i64 1, %and.i, !dbg !12554
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !12555
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12556
  %shr.i = ashr i64 %13, 6, !dbg !12557
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !12555
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !12555
  %and1.i = and i64 %shl.i, %14, !dbg !12558
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !12559
  %conv = zext i1 %cmp.i to i32, !dbg !12551
  br label %cond.end, !dbg !12551

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !12551
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !12551
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !12560
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !12561
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !12562, !srcloc !12563
  store i8 %19, i8* %oldbit.i, align 1, !dbg !12562
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !12564
  %tobool.i = trunc i8 %20 to i1, !dbg !12564
  %conv2 = zext i1 %tobool.i to i32, !dbg !12551
  br label %cond.end, !dbg !12551

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !12551
  %tobool = icmp ne i32 %cond, 0, !dbg !12551
  ret i1 %tobool, !dbg !12565
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !12566 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12570, metadata !DIExpression()), !dbg !12571
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12572, metadata !DIExpression()), !dbg !12573
  ret i1 true, !dbg !12574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !12575 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12579, metadata !DIExpression()), !dbg !12580
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12581, metadata !DIExpression()), !dbg !12582
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12583, metadata !DIExpression()), !dbg !12584
  ret void, !dbg !12585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_disable() #2 !dbg !12586 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !12588, metadata !DIExpression()), !dbg !12591
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !12597, metadata !DIExpression()), !dbg !12600
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !12601, metadata !DIExpression()), !dbg !12605
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !12606, metadata !DIExpression()), !dbg !12607
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !12608, metadata !DIExpression()), !dbg !12609
  %tmp = alloca i64, align 8
  br label %__here, !dbg !12610

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !12612), !dbg !12610
  store i64 ptrtoint (i8* blockaddress(@local_bh_disable, %__here) to i64), i64* %tmp, align 8, !dbg !12610
  %0 = load i64, i64* %tmp, align 8, !dbg !12610
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !12613
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !12600
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #10, !dbg !12600
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !12600

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !12600
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !12600
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !12600

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !12600
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !12600
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !12600

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !12600
  br label %__local_bh_disable_ip.exit, !dbg !12600

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !12600

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !12600
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !12600
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !12605
  %conv.i.i = sext i32 %7 to i64, !dbg !12605
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !12605
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !12605
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !12605
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !12605
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #10, !dbg !12605, !srcloc !12614
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12615, !srcloc !12616
  ret void, !dbg !12617

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_lock(%struct.net_device* %dev) #2 !dbg !12618 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !12619
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12621, metadata !DIExpression()), !dbg !12622
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12623, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !12625, metadata !DIExpression()), !dbg !12626
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12627
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 91, !dbg !12628
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12629, !srcloc !9601
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12630
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !12630
  %rlock.i = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !12630
  store i32 0, i32* %cpu, align 4, !dbg !12631
  store i32 0, i32* %i, align 4, !dbg !12632
  br label %for.cond, !dbg !12634

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !12635
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12637
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 87, !dbg !12638
  %5 = load i32, i32* %num_tx_queues, align 8, !dbg !12638
  %cmp = icmp ult i32 %3, %5, !dbg !12639
  br i1 %cmp, label %for.body, label %for.end, !dbg !12640

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !12641, metadata !DIExpression()), !dbg !12643
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12644
  %7 = load i32, i32* %i, align 4, !dbg !12645
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %6, i32 %7) #13, !dbg !12646
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !12643
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !12647
  %9 = load i32, i32* %cpu, align 4, !dbg !12648
  call void @__netif_tx_lock(%struct.netdev_queue* %8, i32 %9) #13, !dbg !12649
  %10 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !12650
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %10, i32 0, i32 10, !dbg !12651
  call void @set_bit(i64 2, i64* %state) #13, !dbg !12652
  %11 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !12653
  call void @__netif_tx_unlock(%struct.netdev_queue* %11) #13, !dbg !12654
  br label %for.inc, !dbg !12655

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !12656
  %inc = add i32 %12, 1, !dbg !12656
  store i32 %inc, i32* %i, align 4, !dbg !12656
  br label %for.cond, !dbg !12657, !llvm.loop !12658

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12660
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #2 !dbg !12661 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12664, metadata !DIExpression()), !dbg !12665
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12666, metadata !DIExpression()), !dbg !12667
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12668
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !12669
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !12669
  %2 = load i32, i32* %index.addr, align 4, !dbg !12670
  %idxprom = zext i32 %2 to i64, !dbg !12668
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !12668
  ret %struct.netdev_queue* %arrayidx, !dbg !12671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_lock(%struct.netdev_queue* %txq, i32 %cpu) #2 !dbg !12672 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !12675
  %txq.addr = alloca %struct.netdev_queue*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !12677, metadata !DIExpression()), !dbg !12678
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !12679, metadata !DIExpression()), !dbg !12680
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !12681
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 7, !dbg !12682
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12683, !srcloc !9601
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12684
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !12684
  %rlock.i = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !12684
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !12685
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !12686
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 8, !dbg !12687
  store i32 %3, i32* %xmit_lock_owner, align 8, !dbg !12688
  ret void, !dbg !12689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !12690 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12695, metadata !DIExpression()), !dbg !12697
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12699, metadata !DIExpression()), !dbg !12700
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12701, metadata !DIExpression()), !dbg !12703
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12705, metadata !DIExpression()), !dbg !12706
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12707, metadata !DIExpression()), !dbg !12708
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12709, metadata !DIExpression()), !dbg !12710
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12711
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12712
  %div = sdiv i64 %1, 64, !dbg !12712
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12713
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12711
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12714
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12715
  %conv.i = trunc i64 %4 to i32, !dbg !12715
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !12716
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12717
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12717
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #15, !dbg !12717
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12718
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12719
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12720
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !12722
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12723

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12724
  %12 = bitcast i64* %11 to i8*, !dbg !12724
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12724
  %shr.i = ashr i64 %13, 3, !dbg !12724
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12724
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12726
  %and.i = and i64 %14, 7, !dbg !12726
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12726
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12726
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !12727, !srcloc !12728
  br label %arch_set_bit.exit, !dbg !12729

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12730
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12732
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !12733, !srcloc !12734
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_unlock(%struct.netdev_queue* %txq) #2 !dbg !12736 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9483, metadata !DIExpression()), !dbg !12739
  %txq.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !12741, metadata !DIExpression()), !dbg !12742
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !12743
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 8, !dbg !12744
  store i32 -1, i32* %xmit_lock_owner, align 8, !dbg !12745
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !12746
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 7, !dbg !12747
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12748, !srcloc !9681
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12749
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !12749
  %rlock.i = bitcast %union.anon.2* %3 to %struct.raw_spinlock*, !dbg !12749
  ret void, !dbg !12750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !12751 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12752, metadata !DIExpression()), !dbg !12753
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12754, metadata !DIExpression()), !dbg !12755
  ret i1 true, !dbg !12756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_stop_rx(%struct.net_device* %dev) #2 !dbg !12757 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %rx_ctrl = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12758, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !12760, metadata !DIExpression()), !dbg !12761
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12762
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !12763
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !12763
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !12761
  call void @llvm.dbg.declare(metadata i8** %base, metadata !12764, metadata !DIExpression()), !dbg !12765
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12766
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !12767
  store i8* %call1, i8** %base, align 8, !dbg !12765
  call void @llvm.dbg.declare(metadata i32* %rx_ctrl, metadata !12768, metadata !DIExpression()), !dbg !12769
  %3 = load i8*, i8** %base, align 8, !dbg !12770
  %add.ptr = getelementptr i8, i8* %3, i64 148, !dbg !12771
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !12772
  store i32 %call2, i32* %rx_ctrl, align 4, !dbg !12769
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12773
  %mac_in_use = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 30, !dbg !12775
  %5 = load i32, i32* %mac_in_use, align 8, !dbg !12775
  %tobool = icmp ne i32 %5, 0, !dbg !12773
  br i1 %tobool, label %if.else, label %if.then, !dbg !12776

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %rx_ctrl, align 4, !dbg !12777
  %and = and i32 %6, -2, !dbg !12777
  store i32 %and, i32* %rx_ctrl, align 4, !dbg !12777
  br label %if.end, !dbg !12778

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %rx_ctrl, align 4, !dbg !12779
  %or = or i32 %7, 16777216, !dbg !12779
  store i32 %or, i32* %rx_ctrl, align 4, !dbg !12779
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %rx_ctrl, align 4, !dbg !12780
  %9 = load i8*, i8** %base, align 8, !dbg !12781
  %add.ptr3 = getelementptr i8, i8* %9, i64 148, !dbg !12782
  call void @writel(i32 %8, i8* %add.ptr3) #13, !dbg !12783
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12784
  %call4 = call i32 @reg_delay(%struct.net_device* %10, i32 152, i32 1, i32 0, i32 10, i32 500000) #13, !dbg !12786
  %tobool5 = icmp ne i32 %call4, 0, !dbg !12786
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !12787

if.then6:                                         ; preds = %if.end
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12788
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.nv_stop_rx, i64 0, i64 0)) #14, !dbg !12789
  br label %if.end7, !dbg !12789

if.end7:                                          ; preds = %if.then6, %if.end
  call void @__const_udelay(i64 429500) #13, !dbg !12790
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12795
  %mac_in_use8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 30, !dbg !12797
  %13 = load i32, i32* %mac_in_use8, align 8, !dbg !12797
  %tobool9 = icmp ne i32 %13, 0, !dbg !12795
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !12798

if.then10:                                        ; preds = %if.end7
  %14 = load i8*, i8** %base, align 8, !dbg !12799
  %add.ptr11 = getelementptr i8, i8* %14, i64 272, !dbg !12800
  call void @writel(i32 0, i8* %add.ptr11) #13, !dbg !12801
  br label %if.end12, !dbg !12801

if.end12:                                         ; preds = %if.then10, %if.end7
  ret void, !dbg !12802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @reg_delay(%struct.net_device* %dev, i32 %offset, i32 %mask, i32 %target, i32 %delay, i32 %delaymax) #2 !dbg !12803 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %offset.addr = alloca i32, align 4
  %mask.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %delay.addr = alloca i32, align 4
  %delaymax.addr = alloca i32, align 4
  %base = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12806, metadata !DIExpression()), !dbg !12807
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !12808, metadata !DIExpression()), !dbg !12809
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !12810, metadata !DIExpression()), !dbg !12811
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !12812, metadata !DIExpression()), !dbg !12813
  store i32 %delay, i32* %delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delay.addr, metadata !12814, metadata !DIExpression()), !dbg !12815
  store i32 %delaymax, i32* %delaymax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delaymax.addr, metadata !12816, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.declare(metadata i8** %base, metadata !12818, metadata !DIExpression()), !dbg !12819
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12820
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !12821
  store i8* %call, i8** %base, align 8, !dbg !12819
  %1 = load i8*, i8** %base, align 8, !dbg !12822
  call void @pci_push(i8* %1) #13, !dbg !12823
  br label %do.body, !dbg !12824

do.body:                                          ; preds = %do.cond, %entry
  %2 = load i32, i32* %delay.addr, align 4, !dbg !12825
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !12825
  br i1 %3, label %if.then, label %if.else2, !dbg !12829

if.then:                                          ; preds = %do.body
  %4 = load i32, i32* %delay.addr, align 4, !dbg !12830
  %div = sdiv i32 %4, 20000, !dbg !12830
  %cmp = icmp sge i32 %div, 1, !dbg !12830
  br i1 %cmp, label %if.then1, label %if.else, !dbg !12833

if.then1:                                         ; preds = %if.then
  call void @__bad_udelay() #13, !dbg !12830
  br label %if.end, !dbg !12830

if.else:                                          ; preds = %if.then
  %5 = load i32, i32* %delay.addr, align 4, !dbg !12830
  %conv = sext i32 %5 to i64, !dbg !12830
  %mul = mul i64 %conv, 4295, !dbg !12830
  call void @__const_udelay(i64 %mul) #13, !dbg !12830
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end4, !dbg !12833

if.else2:                                         ; preds = %do.body
  %6 = load i32, i32* %delay.addr, align 4, !dbg !12834
  %conv3 = sext i32 %6 to i64, !dbg !12834
  call void @__udelay(i64 %conv3) #13, !dbg !12834
  br label %if.end4

if.end4:                                          ; preds = %if.else2, %if.end
  %7 = load i32, i32* %delay.addr, align 4, !dbg !12836
  %8 = load i32, i32* %delaymax.addr, align 4, !dbg !12837
  %sub = sub i32 %8, %7, !dbg !12837
  store i32 %sub, i32* %delaymax.addr, align 4, !dbg !12837
  %9 = load i32, i32* %delaymax.addr, align 4, !dbg !12838
  %cmp5 = icmp slt i32 %9, 0, !dbg !12840
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12841

if.then7:                                         ; preds = %if.end4
  store i32 1, i32* %retval, align 4, !dbg !12842
  br label %return, !dbg !12842

if.end8:                                          ; preds = %if.end4
  br label %do.cond, !dbg !12843

do.cond:                                          ; preds = %if.end8
  %10 = load i8*, i8** %base, align 8, !dbg !12844
  %11 = load i32, i32* %offset.addr, align 4, !dbg !12845
  %idx.ext = sext i32 %11 to i64, !dbg !12846
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext, !dbg !12846
  %call9 = call i32 @readl(i8* %add.ptr) #13, !dbg !12847
  %12 = load i32, i32* %mask.addr, align 4, !dbg !12848
  %and = and i32 %call9, %12, !dbg !12849
  %13 = load i32, i32* %target.addr, align 4, !dbg !12850
  %cmp10 = icmp ne i32 %and, %13, !dbg !12851
  br i1 %cmp10, label %do.body, label %do.end, !dbg !12843, !llvm.loop !12852

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !12854
  br label %return, !dbg !12854

return:                                           ; preds = %do.end, %if.then7
  %14 = load i32, i32* %retval, align 4, !dbg !12855
  ret i32 %14, !dbg !12855
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #1

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_drain_tx(%struct.net_device* %dev) #2 !dbg !12856 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %i = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12857, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !12859, metadata !DIExpression()), !dbg !12860
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12861
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !12862
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !12862
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !12860
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12863, metadata !DIExpression()), !dbg !12864
  store i32 0, i32* %i, align 4, !dbg !12865
  br label %for.cond, !dbg !12867

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12868
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12870
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 62, !dbg !12871
  %4 = load i32, i32* %tx_ring_size, align 4, !dbg !12871
  %cmp = icmp ult i32 %2, %4, !dbg !12872
  br i1 %cmp, label %for.body, label %for.end, !dbg !12873

for.body:                                         ; preds = %for.cond
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12874
  %call1 = call zeroext i1 @nv_optimized(%struct.fe_priv* %5) #13, !dbg !12877
  br i1 %call1, label %if.else, label %if.then, !dbg !12878

if.then:                                          ; preds = %for.body
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12879
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 60, !dbg !12881
  %orig = bitcast %union.ring_type* %tx_ring to %struct.ring_desc**, !dbg !12882
  %7 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !12882
  %8 = load i32, i32* %i, align 4, !dbg !12883
  %idxprom = zext i32 %8 to i64, !dbg !12879
  %arrayidx = getelementptr %struct.ring_desc, %struct.ring_desc* %7, i64 %idxprom, !dbg !12879
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx, i32 0, i32 1, !dbg !12884
  store i32 0, i32* %flaglen, align 4, !dbg !12885
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12886
  %tx_ring2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 60, !dbg !12887
  %orig3 = bitcast %union.ring_type* %tx_ring2 to %struct.ring_desc**, !dbg !12888
  %10 = load %struct.ring_desc*, %struct.ring_desc** %orig3, align 8, !dbg !12888
  %11 = load i32, i32* %i, align 4, !dbg !12889
  %idxprom4 = zext i32 %11 to i64, !dbg !12886
  %arrayidx5 = getelementptr %struct.ring_desc, %struct.ring_desc* %10, i64 %idxprom4, !dbg !12886
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx5, i32 0, i32 0, !dbg !12890
  store i32 0, i32* %buf, align 4, !dbg !12891
  br label %if.end, !dbg !12892

if.else:                                          ; preds = %for.body
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12893
  %tx_ring6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 60, !dbg !12895
  %ex = bitcast %union.ring_type* %tx_ring6 to %struct.ring_desc_ex**, !dbg !12896
  %13 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !12896
  %14 = load i32, i32* %i, align 4, !dbg !12897
  %idxprom7 = zext i32 %14 to i64, !dbg !12893
  %arrayidx8 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %13, i64 %idxprom7, !dbg !12893
  %flaglen9 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx8, i32 0, i32 3, !dbg !12898
  store i32 0, i32* %flaglen9, align 4, !dbg !12899
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12900
  %tx_ring10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 60, !dbg !12901
  %ex11 = bitcast %union.ring_type* %tx_ring10 to %struct.ring_desc_ex**, !dbg !12902
  %16 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex11, align 8, !dbg !12902
  %17 = load i32, i32* %i, align 4, !dbg !12903
  %idxprom12 = zext i32 %17 to i64, !dbg !12900
  %arrayidx13 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %16, i64 %idxprom12, !dbg !12900
  %txvlan = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx13, i32 0, i32 2, !dbg !12904
  store i32 0, i32* %txvlan, align 4, !dbg !12905
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12906
  %tx_ring14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 60, !dbg !12907
  %ex15 = bitcast %union.ring_type* %tx_ring14 to %struct.ring_desc_ex**, !dbg !12908
  %19 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex15, align 8, !dbg !12908
  %20 = load i32, i32* %i, align 4, !dbg !12909
  %idxprom16 = zext i32 %20 to i64, !dbg !12906
  %arrayidx17 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %19, i64 %idxprom16, !dbg !12906
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx17, i32 0, i32 0, !dbg !12910
  store i32 0, i32* %bufhigh, align 4, !dbg !12911
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12912
  %tx_ring18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 60, !dbg !12913
  %ex19 = bitcast %union.ring_type* %tx_ring18 to %struct.ring_desc_ex**, !dbg !12914
  %22 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex19, align 8, !dbg !12914
  %23 = load i32, i32* %i, align 4, !dbg !12915
  %idxprom20 = zext i32 %23 to i64, !dbg !12912
  %arrayidx21 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %22, i64 %idxprom20, !dbg !12912
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx21, i32 0, i32 1, !dbg !12916
  store i32 0, i32* %buflow, align 4, !dbg !12917
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12918
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12920
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 59, !dbg !12921
  %26 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb, align 8, !dbg !12921
  %27 = load i32, i32* %i, align 4, !dbg !12922
  %idxprom22 = zext i32 %27 to i64, !dbg !12920
  %arrayidx23 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %26, i64 %idxprom22, !dbg !12920
  %call24 = call i32 @nv_release_txskb(%struct.fe_priv* %24, %struct.nv_skb_map* %arrayidx23) #13, !dbg !12923
  %tobool = icmp ne i32 %call24, 0, !dbg !12923
  br i1 %tobool, label %if.then25, label %if.end31, !dbg !12924

if.then25:                                        ; preds = %if.end
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12925
  %swstats_tx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 68, !dbg !12927
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp) #13, !dbg !12928
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !12929
  br label %do.body, !dbg !12929

do.body:                                          ; preds = %if.then25
  br label %do.body26, !dbg !12931

do.body26:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !12933, metadata !DIExpression()), !dbg !12935
  store i8* null, i8** %__vpp_verify, align 8, !dbg !12935
  %29 = load i8*, i8** %__vpp_verify, align 8, !dbg !12935
  br label %do.end, !dbg !12935

do.end:                                           ; preds = %do.body26
  br label %do.body27, !dbg !12931

do.body27:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !12936, metadata !DIExpression()), !dbg !12938
  store i32 1, i32* %pao_ID__, align 4, !dbg !12938
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12939
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 50, !dbg !12939
  %31 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !12939
  %stat_tx_dropped = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %31, i32 0, i32 6, !dbg !12939
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_dropped, i64* %stat_tx_dropped) #10, !dbg !12939, !srcloc !12942
  br label %do.end28, !dbg !12938

do.end28:                                         ; preds = %do.body27
  br label %do.end29, !dbg !12931

do.end29:                                         ; preds = %do.end28
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12943
  %swstats_tx_syncp30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 68, !dbg !12944
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp30) #13, !dbg !12945
  br label %if.end31, !dbg !12946

if.end31:                                         ; preds = %do.end29, %if.end
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12947
  %tx_skb32 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 59, !dbg !12948
  %34 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb32, align 8, !dbg !12948
  %35 = load i32, i32* %i, align 4, !dbg !12949
  %idxprom33 = zext i32 %35 to i64, !dbg !12947
  %arrayidx34 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %34, i64 %idxprom33, !dbg !12947
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx34, i32 0, i32 1, !dbg !12950
  store i64 0, i64* %dma, align 8, !dbg !12951
  %36 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12952
  %tx_skb35 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %36, i32 0, i32 59, !dbg !12953
  %37 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb35, align 8, !dbg !12953
  %38 = load i32, i32* %i, align 4, !dbg !12954
  %idxprom36 = zext i32 %38 to i64, !dbg !12952
  %arrayidx37 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %37, i64 %idxprom36, !dbg !12952
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx37, i32 0, i32 2, !dbg !12955
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !12956
  %bf.clear = and i32 %bf.load, -2147483648, !dbg !12956
  store i32 %bf.clear, i32* %dma_len, align 8, !dbg !12956
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12957
  %tx_skb38 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 59, !dbg !12958
  %40 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb38, align 8, !dbg !12958
  %41 = load i32, i32* %i, align 4, !dbg !12959
  %idxprom39 = zext i32 %41 to i64, !dbg !12957
  %arrayidx40 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %40, i64 %idxprom39, !dbg !12957
  %dma_single = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx40, i32 0, i32 2, !dbg !12960
  %bf.load41 = load i32, i32* %dma_single, align 8, !dbg !12961
  %bf.clear42 = and i32 %bf.load41, 2147483647, !dbg !12961
  store i32 %bf.clear42, i32* %dma_single, align 8, !dbg !12961
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12962
  %tx_skb43 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 59, !dbg !12963
  %43 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb43, align 8, !dbg !12963
  %44 = load i32, i32* %i, align 4, !dbg !12964
  %idxprom44 = zext i32 %44 to i64, !dbg !12962
  %arrayidx45 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %43, i64 %idxprom44, !dbg !12962
  %first_tx_desc = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx45, i32 0, i32 3, !dbg !12965
  store %struct.ring_desc_ex* null, %struct.ring_desc_ex** %first_tx_desc, align 8, !dbg !12966
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12967
  %tx_skb46 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 59, !dbg !12968
  %46 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb46, align 8, !dbg !12968
  %47 = load i32, i32* %i, align 4, !dbg !12969
  %idxprom47 = zext i32 %47 to i64, !dbg !12967
  %arrayidx48 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %46, i64 %idxprom47, !dbg !12967
  %next_tx_ctx = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx48, i32 0, i32 4, !dbg !12970
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %next_tx_ctx, align 8, !dbg !12971
  br label %for.inc, !dbg !12972

for.inc:                                          ; preds = %if.end31
  %48 = load i32, i32* %i, align 4, !dbg !12973
  %inc = add i32 %48, 1, !dbg !12973
  store i32 %inc, i32* %i, align 4, !dbg !12973
  br label %for.cond, !dbg !12974, !llvm.loop !12975

for.end:                                          ; preds = %for.cond
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12977
  %tx_pkts_in_progress = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 64, !dbg !12978
  store i32 0, i32* %tx_pkts_in_progress, align 4, !dbg !12979
  %50 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12980
  %tx_change_owner = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %50, i32 0, i32 65, !dbg !12981
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %tx_change_owner, align 8, !dbg !12982
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !12983
  %tx_end_flip = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 66, !dbg !12984
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %tx_end_flip, align 8, !dbg !12985
  ret void, !dbg !12986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_drain_rx(%struct.net_device* %dev) #2 !dbg !12987 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12988, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !12990, metadata !DIExpression()), !dbg !12991
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12992
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !12993
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !12993
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !12991
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12994, metadata !DIExpression()), !dbg !12995
  store i32 0, i32* %i, align 4, !dbg !12996
  br label %for.cond, !dbg !12998

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12999
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13001
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 48, !dbg !13002
  %4 = load i32, i32* %rx_ring_size, align 4, !dbg !13002
  %cmp = icmp slt i32 %2, %4, !dbg !13003
  br i1 %cmp, label %for.body, label %for.end, !dbg !13004

for.body:                                         ; preds = %for.cond
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13005
  %call1 = call zeroext i1 @nv_optimized(%struct.fe_priv* %5) #13, !dbg !13008
  br i1 %call1, label %if.else, label %if.then, !dbg !13009

if.then:                                          ; preds = %for.body
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13010
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 41, !dbg !13012
  %orig = bitcast %union.ring_type* %rx_ring to %struct.ring_desc**, !dbg !13013
  %7 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !13013
  %8 = load i32, i32* %i, align 4, !dbg !13014
  %idxprom = sext i32 %8 to i64, !dbg !13010
  %arrayidx = getelementptr %struct.ring_desc, %struct.ring_desc* %7, i64 %idxprom, !dbg !13010
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx, i32 0, i32 1, !dbg !13015
  store i32 0, i32* %flaglen, align 4, !dbg !13016
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13017
  %rx_ring2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 41, !dbg !13018
  %orig3 = bitcast %union.ring_type* %rx_ring2 to %struct.ring_desc**, !dbg !13019
  %10 = load %struct.ring_desc*, %struct.ring_desc** %orig3, align 8, !dbg !13019
  %11 = load i32, i32* %i, align 4, !dbg !13020
  %idxprom4 = sext i32 %11 to i64, !dbg !13017
  %arrayidx5 = getelementptr %struct.ring_desc, %struct.ring_desc* %10, i64 %idxprom4, !dbg !13017
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx5, i32 0, i32 0, !dbg !13021
  store i32 0, i32* %buf, align 4, !dbg !13022
  br label %if.end, !dbg !13023

if.else:                                          ; preds = %for.body
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13024
  %rx_ring6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 41, !dbg !13026
  %ex = bitcast %union.ring_type* %rx_ring6 to %struct.ring_desc_ex**, !dbg !13027
  %13 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !13027
  %14 = load i32, i32* %i, align 4, !dbg !13028
  %idxprom7 = sext i32 %14 to i64, !dbg !13024
  %arrayidx8 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %13, i64 %idxprom7, !dbg !13024
  %flaglen9 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx8, i32 0, i32 3, !dbg !13029
  store i32 0, i32* %flaglen9, align 4, !dbg !13030
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13031
  %rx_ring10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 41, !dbg !13032
  %ex11 = bitcast %union.ring_type* %rx_ring10 to %struct.ring_desc_ex**, !dbg !13033
  %16 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex11, align 8, !dbg !13033
  %17 = load i32, i32* %i, align 4, !dbg !13034
  %idxprom12 = sext i32 %17 to i64, !dbg !13031
  %arrayidx13 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %16, i64 %idxprom12, !dbg !13031
  %txvlan = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx13, i32 0, i32 2, !dbg !13035
  store i32 0, i32* %txvlan, align 4, !dbg !13036
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13037
  %rx_ring14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 41, !dbg !13038
  %ex15 = bitcast %union.ring_type* %rx_ring14 to %struct.ring_desc_ex**, !dbg !13039
  %19 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex15, align 8, !dbg !13039
  %20 = load i32, i32* %i, align 4, !dbg !13040
  %idxprom16 = sext i32 %20 to i64, !dbg !13037
  %arrayidx17 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %19, i64 %idxprom16, !dbg !13037
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx17, i32 0, i32 0, !dbg !13041
  store i32 0, i32* %bufhigh, align 4, !dbg !13042
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13043
  %rx_ring18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 41, !dbg !13044
  %ex19 = bitcast %union.ring_type* %rx_ring18 to %struct.ring_desc_ex**, !dbg !13045
  %22 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex19, align 8, !dbg !13045
  %23 = load i32, i32* %i, align 4, !dbg !13046
  %idxprom20 = sext i32 %23 to i64, !dbg !13043
  %arrayidx21 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %22, i64 %idxprom20, !dbg !13043
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx21, i32 0, i32 1, !dbg !13047
  store i32 0, i32* %buflow, align 4, !dbg !13048
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13049, !srcloc !13050
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13051
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 40, !dbg !13053
  %25 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb, align 8, !dbg !13053
  %26 = load i32, i32* %i, align 4, !dbg !13054
  %idxprom22 = sext i32 %26 to i64, !dbg !13051
  %arrayidx23 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %25, i64 %idxprom22, !dbg !13051
  %skb = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx23, i32 0, i32 0, !dbg !13055
  %27 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13055
  %tobool = icmp ne %struct.sk_buff* %27, null, !dbg !13051
  br i1 %tobool, label %if.then24, label %if.end46, !dbg !13056

if.then24:                                        ; preds = %if.end
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13057
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 20, !dbg !13057
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !13057
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !13057
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13057
  %rx_skb26 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 40, !dbg !13057
  %31 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb26, align 8, !dbg !13057
  %32 = load i32, i32* %i, align 4, !dbg !13057
  %idxprom27 = sext i32 %32 to i64, !dbg !13057
  %arrayidx28 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %31, i64 %idxprom27, !dbg !13057
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx28, i32 0, i32 1, !dbg !13057
  %33 = load i64, i64* %dma, align 8, !dbg !13057
  %34 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13057
  %rx_skb29 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %34, i32 0, i32 40, !dbg !13057
  %35 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb29, align 8, !dbg !13057
  %36 = load i32, i32* %i, align 4, !dbg !13057
  %idxprom30 = sext i32 %36 to i64, !dbg !13057
  %arrayidx31 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %35, i64 %idxprom30, !dbg !13057
  %skb32 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx31, i32 0, i32 0, !dbg !13057
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb32, align 8, !dbg !13057
  %call33 = call i8* @skb_end_pointer(%struct.sk_buff* %37) #13, !dbg !13057
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13057
  %rx_skb34 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 40, !dbg !13057
  %39 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb34, align 8, !dbg !13057
  %40 = load i32, i32* %i, align 4, !dbg !13057
  %idxprom35 = sext i32 %40 to i64, !dbg !13057
  %arrayidx36 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %39, i64 %idxprom35, !dbg !13057
  %skb37 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx36, i32 0, i32 0, !dbg !13057
  %41 = load %struct.sk_buff*, %struct.sk_buff** %skb37, align 8, !dbg !13057
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %41, i32 0, i32 37, !dbg !13057
  %42 = load i8*, i8** %data, align 8, !dbg !13057
  %sub.ptr.lhs.cast = ptrtoint i8* %call33 to i64, !dbg !13057
  %sub.ptr.rhs.cast = ptrtoint i8* %42 to i64, !dbg !13057
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13057
  call void @dma_unmap_single_attrs(%struct.device* %dev25, i64 %33, i64 %sub.ptr.sub, i32 2, i64 0) #13, !dbg !13057
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13059
  %rx_skb38 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 40, !dbg !13059
  %44 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb38, align 8, !dbg !13059
  %45 = load i32, i32* %i, align 4, !dbg !13059
  %idxprom39 = sext i32 %45 to i64, !dbg !13059
  %arrayidx40 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %44, i64 %idxprom39, !dbg !13059
  %skb41 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx40, i32 0, i32 0, !dbg !13059
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb41, align 8, !dbg !13059
  call void @consume_skb(%struct.sk_buff* %46) #13, !dbg !13059
  %47 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13060
  %rx_skb42 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %47, i32 0, i32 40, !dbg !13061
  %48 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb42, align 8, !dbg !13061
  %49 = load i32, i32* %i, align 4, !dbg !13062
  %idxprom43 = sext i32 %49 to i64, !dbg !13060
  %arrayidx44 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %48, i64 %idxprom43, !dbg !13060
  %skb45 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx44, i32 0, i32 0, !dbg !13063
  store %struct.sk_buff* null, %struct.sk_buff** %skb45, align 8, !dbg !13064
  br label %if.end46, !dbg !13065

if.end46:                                         ; preds = %if.then24, %if.end
  br label %for.inc, !dbg !13066

for.inc:                                          ; preds = %if.end46
  %50 = load i32, i32* %i, align 4, !dbg !13067
  %inc = add i32 %50, 1, !dbg !13067
  store i32 %inc, i32* %i, align 4, !dbg !13067
  br label %for.cond, !dbg !13068, !llvm.loop !13069

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_release_txskb(%struct.fe_priv* %np, %struct.nv_skb_map* %tx_skb) #2 !dbg !13072 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.fe_priv*, align 8
  %tx_skb.addr = alloca %struct.nv_skb_map*, align 8
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !13075, metadata !DIExpression()), !dbg !13076
  store %struct.nv_skb_map* %tx_skb, %struct.nv_skb_map** %tx_skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %tx_skb.addr, metadata !13077, metadata !DIExpression()), !dbg !13078
  %0 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !13079
  %1 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13080
  call void @nv_unmap_txskb(%struct.fe_priv* %0, %struct.nv_skb_map* %1) #13, !dbg !13081
  %2 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13082
  %skb = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %2, i32 0, i32 0, !dbg !13084
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13084
  %tobool = icmp ne %struct.sk_buff* %3, null, !dbg !13082
  br i1 %tobool, label %if.then, label %if.end, !dbg !13085

if.then:                                          ; preds = %entry
  %4 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13086
  %skb1 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %4, i32 0, i32 0, !dbg !13088
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb1, align 8, !dbg !13088
  call void @dev_kfree_skb_any(%struct.sk_buff* %5) #13, !dbg !13089
  %6 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13090
  %skb2 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %6, i32 0, i32 0, !dbg !13091
  store %struct.sk_buff* null, %struct.sk_buff** %skb2, align 8, !dbg !13092
  store i32 1, i32* %retval, align 4, !dbg !13093
  br label %return, !dbg !13093

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13094
  br label %return, !dbg !13094

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13095
  ret i32 %7, !dbg !13095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #2 !dbg !13096 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !13097, metadata !DIExpression()), !dbg !13098
  ret void, !dbg !13099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__this_cpu_preempt_check(i8* %op) #2 !dbg !13100 {
entry:
  %op.addr = alloca i8*, align 8
  store i8* %op, i8** %op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op.addr, metadata !13104, metadata !DIExpression()), !dbg !13105
  ret void, !dbg !13106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_end(%struct.u64_stats_sync* %syncp) #2 !dbg !13107 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !13108, metadata !DIExpression()), !dbg !13109
  ret void, !dbg !13110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_unmap_txskb(%struct.fe_priv* %np, %struct.nv_skb_map* %tx_skb) #2 !dbg !13111 {
entry:
  %np.addr = alloca %struct.fe_priv*, align 8
  %tx_skb.addr = alloca %struct.nv_skb_map*, align 8
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !13114, metadata !DIExpression()), !dbg !13115
  store %struct.nv_skb_map* %tx_skb, %struct.nv_skb_map** %tx_skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %tx_skb.addr, metadata !13116, metadata !DIExpression()), !dbg !13117
  %0 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13118
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %0, i32 0, i32 1, !dbg !13120
  %1 = load i64, i64* %dma, align 8, !dbg !13120
  %tobool = icmp ne i64 %1, 0, !dbg !13118
  br i1 %tobool, label %if.then, label %if.end13, !dbg !13121

if.then:                                          ; preds = %entry
  %2 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13122
  %dma_single = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %2, i32 0, i32 2, !dbg !13125
  %bf.load = load i32, i32* %dma_single, align 8, !dbg !13125
  %bf.lshr = lshr i32 %bf.load, 31, !dbg !13125
  %tobool1 = icmp ne i32 %bf.lshr, 0, !dbg !13122
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !13126

if.then2:                                         ; preds = %if.then
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !13127
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 20, !dbg !13127
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !13127
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !13127
  %5 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13127
  %dma3 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %5, i32 0, i32 1, !dbg !13127
  %6 = load i64, i64* %dma3, align 8, !dbg !13127
  %7 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13127
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %7, i32 0, i32 2, !dbg !13127
  %bf.load4 = load i32, i32* %dma_len, align 8, !dbg !13127
  %bf.clear = and i32 %bf.load4, 2147483647, !dbg !13127
  %conv = zext i32 %bf.clear to i64, !dbg !13127
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %6, i64 %conv, i32 1, i64 0) #13, !dbg !13127
  br label %if.end, !dbg !13127

if.else:                                          ; preds = %if.then
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !13128
  %pci_dev5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 20, !dbg !13128
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev5, align 8, !dbg !13128
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !13128
  %10 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13128
  %dma7 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %10, i32 0, i32 1, !dbg !13128
  %11 = load i64, i64* %dma7, align 8, !dbg !13128
  %12 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13128
  %dma_len8 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %12, i32 0, i32 2, !dbg !13128
  %bf.load9 = load i32, i32* %dma_len8, align 8, !dbg !13128
  %bf.clear10 = and i32 %bf.load9, 2147483647, !dbg !13128
  %conv11 = zext i32 %bf.clear10 to i64, !dbg !13128
  call void @dma_unmap_page_attrs(%struct.device* %dev6, i64 %11, i64 %conv11, i32 1, i64 0) #13, !dbg !13128
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %13 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb.addr, align 8, !dbg !13129
  %dma12 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %13, i32 0, i32 1, !dbg !13130
  store i64 0, i64* %dma12, align 8, !dbg !13131
  br label %if.end13, !dbg !13132

if.end13:                                         ; preds = %if.end, %entry
  ret void, !dbg !13133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #2 !dbg !13134 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13135, metadata !DIExpression()), !dbg !13136
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13137
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #13, !dbg !13138
  ret void, !dbg !13139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !13140 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13143, metadata !DIExpression()), !dbg !13144
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !13145, metadata !DIExpression()), !dbg !13146
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13147, metadata !DIExpression()), !dbg !13148
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !13149, metadata !DIExpression()), !dbg !13150
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13153
  %1 = load i64, i64* %addr.addr, align 8, !dbg !13154
  %2 = load i64, i64* %size.addr, align 8, !dbg !13155
  %3 = load i32, i32* %dir.addr, align 4, !dbg !13156
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !13157
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #13, !dbg !13158
  ret void, !dbg !13159
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #2 !dbg !13160 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13163, metadata !DIExpression()), !dbg !13164
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13165
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !13166
  %1 = load i8*, i8** %head, align 8, !dbg !13166
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13167
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !13168
  %3 = load i32, i32* %end, align 4, !dbg !13168
  %idx.ext = zext i32 %3 to i64, !dbg !13169
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !13169
  ret i8* %add.ptr, !dbg !13170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !13171 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13172, metadata !DIExpression()), !dbg !13173
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13174
  call void @kfree_skb(%struct.sk_buff* %0) #13, !dbg !13175
  ret void, !dbg !13176
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_init_tx(%struct.net_device* %dev) #2 !dbg !13177 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13178, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !13180, metadata !DIExpression()), !dbg !13181
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13182
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !13183
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !13183
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !13181
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13184, metadata !DIExpression()), !dbg !13185
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13186
  %get_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 53, !dbg !13187
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13188
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 60, !dbg !13189
  %4 = bitcast %union.ring_type* %get_tx to i8*, !dbg !13189
  %5 = bitcast %union.ring_type* %tx_ring to i8*, !dbg !13189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !13189
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13190
  %put_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 54, !dbg !13191
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13192
  %tx_ring1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 60, !dbg !13193
  %8 = bitcast %union.ring_type* %put_tx to i8*, !dbg !13193
  %9 = bitcast %union.ring_type* %tx_ring1 to i8*, !dbg !13193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 8, i1 false), !dbg !13193
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13194
  %call2 = call zeroext i1 @nv_optimized(%struct.fe_priv* %10) #13, !dbg !13196
  br i1 %call2, label %if.else, label %if.then, !dbg !13197

if.then:                                          ; preds = %entry
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13198
  %tx_ring3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 60, !dbg !13199
  %orig = bitcast %union.ring_type* %tx_ring3 to %struct.ring_desc**, !dbg !13200
  %12 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !13200
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13201
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 62, !dbg !13202
  %14 = load i32, i32* %tx_ring_size, align 4, !dbg !13202
  %sub = sub i32 %14, 1, !dbg !13203
  %idxprom = sext i32 %sub to i64, !dbg !13198
  %arrayidx = getelementptr %struct.ring_desc, %struct.ring_desc* %12, i64 %idxprom, !dbg !13198
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13204
  %last_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 55, !dbg !13205
  %orig4 = bitcast %union.ring_type* %last_tx to %struct.ring_desc**, !dbg !13206
  store %struct.ring_desc* %arrayidx, %struct.ring_desc** %orig4, align 8, !dbg !13207
  br label %if.end, !dbg !13204

if.else:                                          ; preds = %entry
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13208
  %tx_ring5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 60, !dbg !13209
  %ex = bitcast %union.ring_type* %tx_ring5 to %struct.ring_desc_ex**, !dbg !13210
  %17 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !13210
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13211
  %tx_ring_size6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 62, !dbg !13212
  %19 = load i32, i32* %tx_ring_size6, align 4, !dbg !13212
  %sub7 = sub i32 %19, 1, !dbg !13213
  %idxprom8 = sext i32 %sub7 to i64, !dbg !13208
  %arrayidx9 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %17, i64 %idxprom8, !dbg !13208
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13214
  %last_tx10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 55, !dbg !13215
  %ex11 = bitcast %union.ring_type* %last_tx10 to %struct.ring_desc_ex**, !dbg !13216
  store %struct.ring_desc_ex* %arrayidx9, %struct.ring_desc_ex** %ex11, align 8, !dbg !13217
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13218
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 59, !dbg !13219
  %22 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb, align 8, !dbg !13219
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13220
  %get_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 56, !dbg !13221
  store %struct.nv_skb_map* %22, %struct.nv_skb_map** %get_tx_ctx, align 8, !dbg !13222
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13223
  %tx_skb12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 59, !dbg !13224
  %25 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb12, align 8, !dbg !13224
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13225
  %put_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 57, !dbg !13226
  store %struct.nv_skb_map* %25, %struct.nv_skb_map** %put_tx_ctx, align 8, !dbg !13227
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13228
  %tx_skb13 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 59, !dbg !13229
  %28 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb13, align 8, !dbg !13229
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13230
  %tx_ring_size14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 62, !dbg !13231
  %30 = load i32, i32* %tx_ring_size14, align 4, !dbg !13231
  %sub15 = sub i32 %30, 1, !dbg !13232
  %idxprom16 = sext i32 %sub15 to i64, !dbg !13228
  %arrayidx17 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %28, i64 %idxprom16, !dbg !13228
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13233
  %last_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 58, !dbg !13234
  store %struct.nv_skb_map* %arrayidx17, %struct.nv_skb_map** %last_tx_ctx, align 8, !dbg !13235
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13236
  %dev18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 1, !dbg !13237
  %33 = load %struct.net_device*, %struct.net_device** %dev18, align 8, !dbg !13237
  call void @netdev_reset_queue(%struct.net_device* %33) #13, !dbg !13238
  %34 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13239
  %tx_pkts_in_progress = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %34, i32 0, i32 64, !dbg !13240
  store i32 0, i32* %tx_pkts_in_progress, align 4, !dbg !13241
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13242
  %tx_change_owner = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 65, !dbg !13243
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %tx_change_owner, align 8, !dbg !13244
  %36 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13245
  %tx_end_flip = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %36, i32 0, i32 66, !dbg !13246
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %tx_end_flip, align 8, !dbg !13247
  %37 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13248
  %tx_stop = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %37, i32 0, i32 67, !dbg !13249
  store i32 0, i32* %tx_stop, align 8, !dbg !13250
  store i32 0, i32* %i, align 4, !dbg !13251
  br label %for.cond, !dbg !13253

for.cond:                                         ; preds = %for.inc, %if.end
  %38 = load i32, i32* %i, align 4, !dbg !13254
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13256
  %tx_ring_size19 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 62, !dbg !13257
  %40 = load i32, i32* %tx_ring_size19, align 4, !dbg !13257
  %cmp = icmp slt i32 %38, %40, !dbg !13258
  br i1 %cmp, label %for.body, label %for.end, !dbg !13259

for.body:                                         ; preds = %for.cond
  %41 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13260
  %call20 = call zeroext i1 @nv_optimized(%struct.fe_priv* %41) #13, !dbg !13263
  br i1 %call20, label %if.else30, label %if.then21, !dbg !13264

if.then21:                                        ; preds = %for.body
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13265
  %tx_ring22 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 60, !dbg !13267
  %orig23 = bitcast %union.ring_type* %tx_ring22 to %struct.ring_desc**, !dbg !13268
  %43 = load %struct.ring_desc*, %struct.ring_desc** %orig23, align 8, !dbg !13268
  %44 = load i32, i32* %i, align 4, !dbg !13269
  %idxprom24 = sext i32 %44 to i64, !dbg !13265
  %arrayidx25 = getelementptr %struct.ring_desc, %struct.ring_desc* %43, i64 %idxprom24, !dbg !13265
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx25, i32 0, i32 1, !dbg !13270
  store i32 0, i32* %flaglen, align 4, !dbg !13271
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13272
  %tx_ring26 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 60, !dbg !13273
  %orig27 = bitcast %union.ring_type* %tx_ring26 to %struct.ring_desc**, !dbg !13274
  %46 = load %struct.ring_desc*, %struct.ring_desc** %orig27, align 8, !dbg !13274
  %47 = load i32, i32* %i, align 4, !dbg !13275
  %idxprom28 = sext i32 %47 to i64, !dbg !13272
  %arrayidx29 = getelementptr %struct.ring_desc, %struct.ring_desc* %46, i64 %idxprom28, !dbg !13272
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx29, i32 0, i32 0, !dbg !13276
  store i32 0, i32* %buf, align 4, !dbg !13277
  br label %if.end48, !dbg !13278

if.else30:                                        ; preds = %for.body
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13279
  %tx_ring31 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 60, !dbg !13281
  %ex32 = bitcast %union.ring_type* %tx_ring31 to %struct.ring_desc_ex**, !dbg !13282
  %49 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex32, align 8, !dbg !13282
  %50 = load i32, i32* %i, align 4, !dbg !13283
  %idxprom33 = sext i32 %50 to i64, !dbg !13279
  %arrayidx34 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %49, i64 %idxprom33, !dbg !13279
  %flaglen35 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx34, i32 0, i32 3, !dbg !13284
  store i32 0, i32* %flaglen35, align 4, !dbg !13285
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13286
  %tx_ring36 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 60, !dbg !13287
  %ex37 = bitcast %union.ring_type* %tx_ring36 to %struct.ring_desc_ex**, !dbg !13288
  %52 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex37, align 8, !dbg !13288
  %53 = load i32, i32* %i, align 4, !dbg !13289
  %idxprom38 = sext i32 %53 to i64, !dbg !13286
  %arrayidx39 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %52, i64 %idxprom38, !dbg !13286
  %txvlan = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx39, i32 0, i32 2, !dbg !13290
  store i32 0, i32* %txvlan, align 4, !dbg !13291
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13292
  %tx_ring40 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 60, !dbg !13293
  %ex41 = bitcast %union.ring_type* %tx_ring40 to %struct.ring_desc_ex**, !dbg !13294
  %55 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex41, align 8, !dbg !13294
  %56 = load i32, i32* %i, align 4, !dbg !13295
  %idxprom42 = sext i32 %56 to i64, !dbg !13292
  %arrayidx43 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %55, i64 %idxprom42, !dbg !13292
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx43, i32 0, i32 0, !dbg !13296
  store i32 0, i32* %bufhigh, align 4, !dbg !13297
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13298
  %tx_ring44 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 60, !dbg !13299
  %ex45 = bitcast %union.ring_type* %tx_ring44 to %struct.ring_desc_ex**, !dbg !13300
  %58 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex45, align 8, !dbg !13300
  %59 = load i32, i32* %i, align 4, !dbg !13301
  %idxprom46 = sext i32 %59 to i64, !dbg !13298
  %arrayidx47 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %58, i64 %idxprom46, !dbg !13298
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx47, i32 0, i32 1, !dbg !13302
  store i32 0, i32* %buflow, align 4, !dbg !13303
  br label %if.end48

if.end48:                                         ; preds = %if.else30, %if.then21
  %60 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13304
  %tx_skb49 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %60, i32 0, i32 59, !dbg !13305
  %61 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb49, align 8, !dbg !13305
  %62 = load i32, i32* %i, align 4, !dbg !13306
  %idxprom50 = sext i32 %62 to i64, !dbg !13304
  %arrayidx51 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %61, i64 %idxprom50, !dbg !13304
  %skb = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx51, i32 0, i32 0, !dbg !13307
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !13308
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13309
  %tx_skb52 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 59, !dbg !13310
  %64 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb52, align 8, !dbg !13310
  %65 = load i32, i32* %i, align 4, !dbg !13311
  %idxprom53 = sext i32 %65 to i64, !dbg !13309
  %arrayidx54 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %64, i64 %idxprom53, !dbg !13309
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx54, i32 0, i32 1, !dbg !13312
  store i64 0, i64* %dma, align 8, !dbg !13313
  %66 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13314
  %tx_skb55 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %66, i32 0, i32 59, !dbg !13315
  %67 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb55, align 8, !dbg !13315
  %68 = load i32, i32* %i, align 4, !dbg !13316
  %idxprom56 = sext i32 %68 to i64, !dbg !13314
  %arrayidx57 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %67, i64 %idxprom56, !dbg !13314
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx57, i32 0, i32 2, !dbg !13317
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !13318
  %bf.clear = and i32 %bf.load, -2147483648, !dbg !13318
  store i32 %bf.clear, i32* %dma_len, align 8, !dbg !13318
  %69 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13319
  %tx_skb58 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %69, i32 0, i32 59, !dbg !13320
  %70 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb58, align 8, !dbg !13320
  %71 = load i32, i32* %i, align 4, !dbg !13321
  %idxprom59 = sext i32 %71 to i64, !dbg !13319
  %arrayidx60 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %70, i64 %idxprom59, !dbg !13319
  %dma_single = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx60, i32 0, i32 2, !dbg !13322
  %bf.load61 = load i32, i32* %dma_single, align 8, !dbg !13323
  %bf.clear62 = and i32 %bf.load61, 2147483647, !dbg !13323
  store i32 %bf.clear62, i32* %dma_single, align 8, !dbg !13323
  %72 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13324
  %tx_skb63 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %72, i32 0, i32 59, !dbg !13325
  %73 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb63, align 8, !dbg !13325
  %74 = load i32, i32* %i, align 4, !dbg !13326
  %idxprom64 = sext i32 %74 to i64, !dbg !13324
  %arrayidx65 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %73, i64 %idxprom64, !dbg !13324
  %first_tx_desc = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx65, i32 0, i32 3, !dbg !13327
  store %struct.ring_desc_ex* null, %struct.ring_desc_ex** %first_tx_desc, align 8, !dbg !13328
  %75 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13329
  %tx_skb66 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %75, i32 0, i32 59, !dbg !13330
  %76 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb66, align 8, !dbg !13330
  %77 = load i32, i32* %i, align 4, !dbg !13331
  %idxprom67 = sext i32 %77 to i64, !dbg !13329
  %arrayidx68 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %76, i64 %idxprom67, !dbg !13329
  %next_tx_ctx = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx68, i32 0, i32 4, !dbg !13332
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %next_tx_ctx, align 8, !dbg !13333
  br label %for.inc, !dbg !13334

for.inc:                                          ; preds = %if.end48
  %78 = load i32, i32* %i, align 4, !dbg !13335
  %inc = add i32 %78, 1, !dbg !13335
  store i32 %inc, i32* %i, align 4, !dbg !13335
  br label %for.cond, !dbg !13336, !llvm.loop !13337

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_init_rx(%struct.net_device* %dev) #2 !dbg !13340 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13341, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !13343, metadata !DIExpression()), !dbg !13344
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13345
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !13346
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !13346
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !13344
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13347, metadata !DIExpression()), !dbg !13348
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13349
  %get_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 34, !dbg !13350
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13351
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 41, !dbg !13352
  %4 = bitcast %union.ring_type* %get_rx to i8*, !dbg !13352
  %5 = bitcast %union.ring_type* %rx_ring to i8*, !dbg !13352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !13352
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13353
  %put_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 35, !dbg !13354
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13355
  %rx_ring1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 41, !dbg !13356
  %8 = bitcast %union.ring_type* %put_rx to i8*, !dbg !13356
  %9 = bitcast %union.ring_type* %rx_ring1 to i8*, !dbg !13356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 8, i1 false), !dbg !13356
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13357
  %call2 = call zeroext i1 @nv_optimized(%struct.fe_priv* %10) #13, !dbg !13359
  br i1 %call2, label %if.else, label %if.then, !dbg !13360

if.then:                                          ; preds = %entry
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13361
  %rx_ring3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 41, !dbg !13362
  %orig = bitcast %union.ring_type* %rx_ring3 to %struct.ring_desc**, !dbg !13363
  %12 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !13363
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13364
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 48, !dbg !13365
  %14 = load i32, i32* %rx_ring_size, align 4, !dbg !13365
  %sub = sub i32 %14, 1, !dbg !13366
  %idxprom = sext i32 %sub to i64, !dbg !13361
  %arrayidx = getelementptr %struct.ring_desc, %struct.ring_desc* %12, i64 %idxprom, !dbg !13361
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13367
  %last_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 36, !dbg !13368
  %orig4 = bitcast %union.ring_type* %last_rx to %struct.ring_desc**, !dbg !13369
  store %struct.ring_desc* %arrayidx, %struct.ring_desc** %orig4, align 8, !dbg !13370
  br label %if.end, !dbg !13367

if.else:                                          ; preds = %entry
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13371
  %rx_ring5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 41, !dbg !13372
  %ex = bitcast %union.ring_type* %rx_ring5 to %struct.ring_desc_ex**, !dbg !13373
  %17 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !13373
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13374
  %rx_ring_size6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 48, !dbg !13375
  %19 = load i32, i32* %rx_ring_size6, align 4, !dbg !13375
  %sub7 = sub i32 %19, 1, !dbg !13376
  %idxprom8 = sext i32 %sub7 to i64, !dbg !13371
  %arrayidx9 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %17, i64 %idxprom8, !dbg !13371
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13377
  %last_rx10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 36, !dbg !13378
  %ex11 = bitcast %union.ring_type* %last_rx10 to %struct.ring_desc_ex**, !dbg !13379
  store %struct.ring_desc_ex* %arrayidx9, %struct.ring_desc_ex** %ex11, align 8, !dbg !13380
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13381
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 40, !dbg !13382
  %22 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb, align 8, !dbg !13382
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13383
  %get_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 37, !dbg !13384
  store %struct.nv_skb_map* %22, %struct.nv_skb_map** %get_rx_ctx, align 8, !dbg !13385
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13386
  %rx_skb12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 40, !dbg !13387
  %25 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb12, align 8, !dbg !13387
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13388
  %put_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 38, !dbg !13389
  store %struct.nv_skb_map* %25, %struct.nv_skb_map** %put_rx_ctx, align 8, !dbg !13390
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13391
  %rx_skb13 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 40, !dbg !13392
  %28 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb13, align 8, !dbg !13392
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13393
  %rx_ring_size14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 48, !dbg !13394
  %30 = load i32, i32* %rx_ring_size14, align 4, !dbg !13394
  %sub15 = sub i32 %30, 1, !dbg !13395
  %idxprom16 = sext i32 %sub15 to i64, !dbg !13391
  %arrayidx17 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %28, i64 %idxprom16, !dbg !13391
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13396
  %last_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 39, !dbg !13397
  store %struct.nv_skb_map* %arrayidx17, %struct.nv_skb_map** %last_rx_ctx, align 8, !dbg !13398
  store i32 0, i32* %i, align 4, !dbg !13399
  br label %for.cond, !dbg !13401

for.cond:                                         ; preds = %for.inc, %if.end
  %32 = load i32, i32* %i, align 4, !dbg !13402
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13404
  %rx_ring_size18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 48, !dbg !13405
  %34 = load i32, i32* %rx_ring_size18, align 4, !dbg !13405
  %cmp = icmp slt i32 %32, %34, !dbg !13406
  br i1 %cmp, label %for.body, label %for.end, !dbg !13407

for.body:                                         ; preds = %for.cond
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13408
  %call19 = call zeroext i1 @nv_optimized(%struct.fe_priv* %35) #13, !dbg !13411
  br i1 %call19, label %if.else29, label %if.then20, !dbg !13412

if.then20:                                        ; preds = %for.body
  %36 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13413
  %rx_ring21 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %36, i32 0, i32 41, !dbg !13415
  %orig22 = bitcast %union.ring_type* %rx_ring21 to %struct.ring_desc**, !dbg !13416
  %37 = load %struct.ring_desc*, %struct.ring_desc** %orig22, align 8, !dbg !13416
  %38 = load i32, i32* %i, align 4, !dbg !13417
  %idxprom23 = sext i32 %38 to i64, !dbg !13413
  %arrayidx24 = getelementptr %struct.ring_desc, %struct.ring_desc* %37, i64 %idxprom23, !dbg !13413
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx24, i32 0, i32 1, !dbg !13418
  store i32 0, i32* %flaglen, align 4, !dbg !13419
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13420
  %rx_ring25 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 41, !dbg !13421
  %orig26 = bitcast %union.ring_type* %rx_ring25 to %struct.ring_desc**, !dbg !13422
  %40 = load %struct.ring_desc*, %struct.ring_desc** %orig26, align 8, !dbg !13422
  %41 = load i32, i32* %i, align 4, !dbg !13423
  %idxprom27 = sext i32 %41 to i64, !dbg !13420
  %arrayidx28 = getelementptr %struct.ring_desc, %struct.ring_desc* %40, i64 %idxprom27, !dbg !13420
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx28, i32 0, i32 0, !dbg !13424
  store i32 0, i32* %buf, align 4, !dbg !13425
  br label %if.end47, !dbg !13426

if.else29:                                        ; preds = %for.body
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13427
  %rx_ring30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 41, !dbg !13429
  %ex31 = bitcast %union.ring_type* %rx_ring30 to %struct.ring_desc_ex**, !dbg !13430
  %43 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex31, align 8, !dbg !13430
  %44 = load i32, i32* %i, align 4, !dbg !13431
  %idxprom32 = sext i32 %44 to i64, !dbg !13427
  %arrayidx33 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %43, i64 %idxprom32, !dbg !13427
  %flaglen34 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx33, i32 0, i32 3, !dbg !13432
  store i32 0, i32* %flaglen34, align 4, !dbg !13433
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13434
  %rx_ring35 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 41, !dbg !13435
  %ex36 = bitcast %union.ring_type* %rx_ring35 to %struct.ring_desc_ex**, !dbg !13436
  %46 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex36, align 8, !dbg !13436
  %47 = load i32, i32* %i, align 4, !dbg !13437
  %idxprom37 = sext i32 %47 to i64, !dbg !13434
  %arrayidx38 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %46, i64 %idxprom37, !dbg !13434
  %txvlan = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx38, i32 0, i32 2, !dbg !13438
  store i32 0, i32* %txvlan, align 4, !dbg !13439
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13440
  %rx_ring39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 41, !dbg !13441
  %ex40 = bitcast %union.ring_type* %rx_ring39 to %struct.ring_desc_ex**, !dbg !13442
  %49 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex40, align 8, !dbg !13442
  %50 = load i32, i32* %i, align 4, !dbg !13443
  %idxprom41 = sext i32 %50 to i64, !dbg !13440
  %arrayidx42 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %49, i64 %idxprom41, !dbg !13440
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx42, i32 0, i32 0, !dbg !13444
  store i32 0, i32* %bufhigh, align 4, !dbg !13445
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13446
  %rx_ring43 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 41, !dbg !13447
  %ex44 = bitcast %union.ring_type* %rx_ring43 to %struct.ring_desc_ex**, !dbg !13448
  %52 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex44, align 8, !dbg !13448
  %53 = load i32, i32* %i, align 4, !dbg !13449
  %idxprom45 = sext i32 %53 to i64, !dbg !13446
  %arrayidx46 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %52, i64 %idxprom45, !dbg !13446
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx46, i32 0, i32 1, !dbg !13450
  store i32 0, i32* %buflow, align 4, !dbg !13451
  br label %if.end47

if.end47:                                         ; preds = %if.else29, %if.then20
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13452
  %rx_skb48 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 40, !dbg !13453
  %55 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb48, align 8, !dbg !13453
  %56 = load i32, i32* %i, align 4, !dbg !13454
  %idxprom49 = sext i32 %56 to i64, !dbg !13452
  %arrayidx50 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %55, i64 %idxprom49, !dbg !13452
  %skb = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx50, i32 0, i32 0, !dbg !13455
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !13456
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13457
  %rx_skb51 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 40, !dbg !13458
  %58 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb51, align 8, !dbg !13458
  %59 = load i32, i32* %i, align 4, !dbg !13459
  %idxprom52 = sext i32 %59 to i64, !dbg !13457
  %arrayidx53 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %58, i64 %idxprom52, !dbg !13457
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx53, i32 0, i32 1, !dbg !13460
  store i64 0, i64* %dma, align 8, !dbg !13461
  br label %for.inc, !dbg !13462

for.inc:                                          ; preds = %if.end47
  %60 = load i32, i32* %i, align 4, !dbg !13463
  %inc = add i32 %60, 1, !dbg !13463
  store i32 %inc, i32* %i, align 4, !dbg !13463
  br label %for.cond, !dbg !13464, !llvm.loop !13465

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_alloc_rx(%struct.net_device* %dev) #2 !dbg !13468 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %less_rx = alloca %struct.ring_desc*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13469, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !13471, metadata !DIExpression()), !dbg !13472
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13473
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !13474
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !13474
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !13472
  call void @llvm.dbg.declare(metadata %struct.ring_desc** %less_rx, metadata !13475, metadata !DIExpression()), !dbg !13476
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13477
  %get_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 34, !dbg !13478
  %orig = bitcast %union.ring_type* %get_rx to %struct.ring_desc**, !dbg !13479
  %3 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !13479
  store %struct.ring_desc* %3, %struct.ring_desc** %less_rx, align 8, !dbg !13480
  %4 = load %struct.ring_desc*, %struct.ring_desc** %less_rx, align 8, !dbg !13481
  %incdec.ptr = getelementptr %struct.ring_desc, %struct.ring_desc* %4, i32 -1, !dbg !13481
  store %struct.ring_desc* %incdec.ptr, %struct.ring_desc** %less_rx, align 8, !dbg !13481
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13483
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 41, !dbg !13484
  %orig1 = bitcast %union.ring_type* %rx_ring to %struct.ring_desc**, !dbg !13485
  %6 = load %struct.ring_desc*, %struct.ring_desc** %orig1, align 8, !dbg !13485
  %cmp = icmp eq %struct.ring_desc* %4, %6, !dbg !13486
  br i1 %cmp, label %if.then, label %if.end, !dbg !13487

if.then:                                          ; preds = %entry
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13488
  %last_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 36, !dbg !13489
  %orig2 = bitcast %union.ring_type* %last_rx to %struct.ring_desc**, !dbg !13490
  %8 = load %struct.ring_desc*, %struct.ring_desc** %orig2, align 8, !dbg !13490
  store %struct.ring_desc* %8, %struct.ring_desc** %less_rx, align 8, !dbg !13491
  br label %if.end, !dbg !13492

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !13493

while.cond:                                       ; preds = %if.end76, %if.end
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13494
  %put_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 35, !dbg !13495
  %orig3 = bitcast %union.ring_type* %put_rx to %struct.ring_desc**, !dbg !13496
  %10 = load %struct.ring_desc*, %struct.ring_desc** %orig3, align 8, !dbg !13496
  %11 = load %struct.ring_desc*, %struct.ring_desc** %less_rx, align 8, !dbg !13497
  %cmp4 = icmp ne %struct.ring_desc* %10, %11, !dbg !13498
  br i1 %cmp4, label %while.body, label %while.end, !dbg !13493

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13499, metadata !DIExpression()), !dbg !13501
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13502
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13503
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 42, !dbg !13504
  %14 = load i32, i32* %rx_buf_sz, align 8, !dbg !13504
  %add = add i32 %14, 64, !dbg !13505
  %call5 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %12, i32 %add) #13, !dbg !13506
  store %struct.sk_buff* %call5, %struct.sk_buff** %skb, align 8, !dbg !13501
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13507
  %tobool = icmp ne %struct.sk_buff* %15, null, !dbg !13507
  %lnot = xor i1 %tobool, true, !dbg !13507
  %lnot6 = xor i1 %lnot, true, !dbg !13507
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !13507
  %conv = sext i32 %lnot.ext to i64, !dbg !13507
  %tobool7 = icmp ne i64 %conv, 0, !dbg !13507
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !13509

if.then8:                                         ; preds = %while.body
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13510
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13512
  %put_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 38, !dbg !13513
  %18 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx, align 8, !dbg !13513
  %skb9 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %18, i32 0, i32 0, !dbg !13514
  store %struct.sk_buff* %16, %struct.sk_buff** %skb9, align 8, !dbg !13515
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13516
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 20, !dbg !13516
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !13516
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !13516
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13516
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %21, i32 0, i32 37, !dbg !13516
  %22 = load i8*, i8** %data, align 8, !dbg !13516
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13516
  %call11 = call i32 @skb_tailroom(%struct.sk_buff* %23) #13, !dbg !13516
  %conv12 = sext i32 %call11 to i64, !dbg !13516
  %call13 = call i64 @dma_map_single_attrs(%struct.device* %dev10, i8* %22, i64 %conv12, i32 2, i64 0) #13, !dbg !13516
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13517
  %put_rx_ctx14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 38, !dbg !13518
  %25 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx14, align 8, !dbg !13518
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %25, i32 0, i32 1, !dbg !13519
  store i64 %call13, i64* %dma, align 8, !dbg !13520
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13521
  %pci_dev15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 20, !dbg !13521
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev15, align 8, !dbg !13521
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 41, !dbg !13521
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13521
  %put_rx_ctx17 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 38, !dbg !13521
  %29 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx17, align 8, !dbg !13521
  %dma18 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %29, i32 0, i32 1, !dbg !13521
  %30 = load i64, i64* %dma18, align 8, !dbg !13521
  %call19 = call i32 @dma_mapping_error(%struct.device* %dev16, i64 %30) #13, !dbg !13521
  %tobool20 = icmp ne i32 %call19, 0, !dbg !13521
  %lnot21 = xor i1 %tobool20, true, !dbg !13521
  %lnot23 = xor i1 %lnot21, true, !dbg !13521
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !13521
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !13521
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !13521
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !13523

if.then27:                                        ; preds = %if.then8
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13524
  call void @kfree_skb(%struct.sk_buff* %31) #13, !dbg !13526
  br label %packet_dropped, !dbg !13527

if.end28:                                         ; preds = %if.then8
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13528
  %call29 = call i32 @skb_tailroom(%struct.sk_buff* %32) #13, !dbg !13529
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13530
  %put_rx_ctx30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 38, !dbg !13531
  %34 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx30, align 8, !dbg !13531
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %34, i32 0, i32 2, !dbg !13532
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !13533
  %bf.value = and i32 %call29, 2147483647, !dbg !13533
  %bf.clear = and i32 %bf.load, -2147483648, !dbg !13533
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !13533
  store i32 %bf.set, i32* %dma_len, align 8, !dbg !13533
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13534
  %put_rx_ctx31 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 38, !dbg !13534
  %36 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx31, align 8, !dbg !13534
  %dma32 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %36, i32 0, i32 1, !dbg !13534
  %37 = load i64, i64* %dma32, align 8, !dbg !13534
  %conv33 = trunc i64 %37 to i32, !dbg !13534
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13535
  %put_rx34 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 35, !dbg !13536
  %orig35 = bitcast %union.ring_type* %put_rx34 to %struct.ring_desc**, !dbg !13537
  %39 = load %struct.ring_desc*, %struct.ring_desc** %orig35, align 8, !dbg !13537
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %39, i32 0, i32 0, !dbg !13538
  store i32 %conv33, i32* %buf, align 4, !dbg !13539
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13540, !srcloc !13541
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13542
  %rx_buf_sz36 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 42, !dbg !13542
  %41 = load i32, i32* %rx_buf_sz36, align 8, !dbg !13542
  %or = or i32 %41, -2147483648, !dbg !13542
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13543
  %put_rx37 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 35, !dbg !13544
  %orig38 = bitcast %union.ring_type* %put_rx37 to %struct.ring_desc**, !dbg !13545
  %43 = load %struct.ring_desc*, %struct.ring_desc** %orig38, align 8, !dbg !13545
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %43, i32 0, i32 1, !dbg !13546
  store i32 %or, i32* %flaglen, align 4, !dbg !13547
  %44 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13548
  %put_rx39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %44, i32 0, i32 35, !dbg !13548
  %orig40 = bitcast %union.ring_type* %put_rx39 to %struct.ring_desc**, !dbg !13548
  %45 = load %struct.ring_desc*, %struct.ring_desc** %orig40, align 8, !dbg !13548
  %incdec.ptr41 = getelementptr %struct.ring_desc, %struct.ring_desc* %45, i32 1, !dbg !13548
  store %struct.ring_desc* %incdec.ptr41, %struct.ring_desc** %orig40, align 8, !dbg !13548
  %46 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13548
  %last_rx42 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %46, i32 0, i32 36, !dbg !13548
  %orig43 = bitcast %union.ring_type* %last_rx42 to %struct.ring_desc**, !dbg !13548
  %47 = load %struct.ring_desc*, %struct.ring_desc** %orig43, align 8, !dbg !13548
  %cmp44 = icmp eq %struct.ring_desc* %45, %47, !dbg !13548
  %lnot46 = xor i1 %cmp44, true, !dbg !13548
  %lnot48 = xor i1 %lnot46, true, !dbg !13548
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !13548
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !13548
  %tobool51 = icmp ne i64 %conv50, 0, !dbg !13548
  br i1 %tobool51, label %if.then52, label %if.end57, !dbg !13550

if.then52:                                        ; preds = %if.end28
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13551
  %rx_ring53 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 41, !dbg !13552
  %orig54 = bitcast %union.ring_type* %rx_ring53 to %struct.ring_desc**, !dbg !13553
  %49 = load %struct.ring_desc*, %struct.ring_desc** %orig54, align 8, !dbg !13553
  %50 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13554
  %put_rx55 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %50, i32 0, i32 35, !dbg !13555
  %orig56 = bitcast %union.ring_type* %put_rx55 to %struct.ring_desc**, !dbg !13556
  store %struct.ring_desc* %49, %struct.ring_desc** %orig56, align 8, !dbg !13557
  br label %if.end57, !dbg !13554

if.end57:                                         ; preds = %if.then52, %if.end28
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13558
  %put_rx_ctx58 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 38, !dbg !13558
  %52 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx58, align 8, !dbg !13558
  %incdec.ptr59 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %52, i32 1, !dbg !13558
  store %struct.nv_skb_map* %incdec.ptr59, %struct.nv_skb_map** %put_rx_ctx58, align 8, !dbg !13558
  %53 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13558
  %last_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %53, i32 0, i32 39, !dbg !13558
  %54 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_rx_ctx, align 8, !dbg !13558
  %cmp60 = icmp eq %struct.nv_skb_map* %52, %54, !dbg !13558
  %lnot62 = xor i1 %cmp60, true, !dbg !13558
  %lnot64 = xor i1 %lnot62, true, !dbg !13558
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !13558
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !13558
  %tobool67 = icmp ne i64 %conv66, 0, !dbg !13558
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !13560

if.then68:                                        ; preds = %if.end57
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13561
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 40, !dbg !13562
  %56 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb, align 8, !dbg !13562
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13563
  %put_rx_ctx69 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 38, !dbg !13564
  store %struct.nv_skb_map* %56, %struct.nv_skb_map** %put_rx_ctx69, align 8, !dbg !13565
  br label %if.end70, !dbg !13563

if.end70:                                         ; preds = %if.then68, %if.end57
  br label %if.end76, !dbg !13566

if.else:                                          ; preds = %while.body
  br label %packet_dropped, !dbg !13567

packet_dropped:                                   ; preds = %if.else, %if.then27
  call void @llvm.dbg.label(metadata !13568), !dbg !13570
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13571
  %swstats_rx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 49, !dbg !13572
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_rx_syncp) #13, !dbg !13573
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !13574
  br label %do.body, !dbg !13574

do.body:                                          ; preds = %packet_dropped
  br label %do.body71, !dbg !13576

do.body71:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !13578, metadata !DIExpression()), !dbg !13580
  store i8* null, i8** %__vpp_verify, align 8, !dbg !13580
  %59 = load i8*, i8** %__vpp_verify, align 8, !dbg !13580
  br label %do.end, !dbg !13580

do.end:                                           ; preds = %do.body71
  br label %do.body72, !dbg !13576

do.body72:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !13581, metadata !DIExpression()), !dbg !13583
  store i32 1, i32* %pao_ID__, align 4, !dbg !13583
  %60 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13584
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %60, i32 0, i32 50, !dbg !13584
  %61 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !13584
  %stat_rx_dropped = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %61, i32 0, i32 3, !dbg !13584
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_rx_dropped, i64* %stat_rx_dropped) #10, !dbg !13584, !srcloc !13587
  br label %do.end73, !dbg !13583

do.end73:                                         ; preds = %do.body72
  br label %do.end74, !dbg !13576

do.end74:                                         ; preds = %do.end73
  %62 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13588
  %swstats_rx_syncp75 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %62, i32 0, i32 49, !dbg !13589
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_rx_syncp75) #13, !dbg !13590
  store i32 1, i32* %retval, align 4, !dbg !13591
  br label %return, !dbg !13591

if.end76:                                         ; preds = %if.end70
  br label %while.cond, !dbg !13493, !llvm.loop !13592

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !13594
  br label %return, !dbg !13594

return:                                           ; preds = %while.end, %do.end74
  %63 = load i32, i32* %retval, align 4, !dbg !13595
  ret i32 %63, !dbg !13595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_alloc_rx_optimized(%struct.net_device* %dev) #2 !dbg !13596 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %less_rx = alloca %struct.ring_desc_ex*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13597, metadata !DIExpression()), !dbg !13598
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !13599, metadata !DIExpression()), !dbg !13600
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13601
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !13602
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !13602
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !13600
  call void @llvm.dbg.declare(metadata %struct.ring_desc_ex** %less_rx, metadata !13603, metadata !DIExpression()), !dbg !13604
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13605
  %get_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 34, !dbg !13606
  %ex = bitcast %union.ring_type* %get_rx to %struct.ring_desc_ex**, !dbg !13607
  %3 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !13607
  store %struct.ring_desc_ex* %3, %struct.ring_desc_ex** %less_rx, align 8, !dbg !13608
  %4 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %less_rx, align 8, !dbg !13609
  %incdec.ptr = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %4, i32 -1, !dbg !13609
  store %struct.ring_desc_ex* %incdec.ptr, %struct.ring_desc_ex** %less_rx, align 8, !dbg !13609
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13611
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 41, !dbg !13612
  %ex1 = bitcast %union.ring_type* %rx_ring to %struct.ring_desc_ex**, !dbg !13613
  %6 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex1, align 8, !dbg !13613
  %cmp = icmp eq %struct.ring_desc_ex* %4, %6, !dbg !13614
  br i1 %cmp, label %if.then, label %if.end, !dbg !13615

if.then:                                          ; preds = %entry
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13616
  %last_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 36, !dbg !13617
  %ex2 = bitcast %union.ring_type* %last_rx to %struct.ring_desc_ex**, !dbg !13618
  %8 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex2, align 8, !dbg !13618
  store %struct.ring_desc_ex* %8, %struct.ring_desc_ex** %less_rx, align 8, !dbg !13619
  br label %if.end, !dbg !13620

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !13621

while.cond:                                       ; preds = %if.end81, %if.end
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13622
  %put_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 35, !dbg !13623
  %ex3 = bitcast %union.ring_type* %put_rx to %struct.ring_desc_ex**, !dbg !13624
  %10 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex3, align 8, !dbg !13624
  %11 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %less_rx, align 8, !dbg !13625
  %cmp4 = icmp ne %struct.ring_desc_ex* %10, %11, !dbg !13626
  br i1 %cmp4, label %while.body, label %while.end, !dbg !13621

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13627, metadata !DIExpression()), !dbg !13629
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13630
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13631
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 42, !dbg !13632
  %14 = load i32, i32* %rx_buf_sz, align 8, !dbg !13632
  %add = add i32 %14, 64, !dbg !13633
  %call5 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %12, i32 %add) #13, !dbg !13634
  store %struct.sk_buff* %call5, %struct.sk_buff** %skb, align 8, !dbg !13629
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13635
  %tobool = icmp ne %struct.sk_buff* %15, null, !dbg !13635
  %lnot = xor i1 %tobool, true, !dbg !13635
  %lnot6 = xor i1 %lnot, true, !dbg !13635
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !13635
  %conv = sext i32 %lnot.ext to i64, !dbg !13635
  %tobool7 = icmp ne i64 %conv, 0, !dbg !13635
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !13637

if.then8:                                         ; preds = %while.body
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13638
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13640
  %put_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 38, !dbg !13641
  %18 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx, align 8, !dbg !13641
  %skb9 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %18, i32 0, i32 0, !dbg !13642
  store %struct.sk_buff* %16, %struct.sk_buff** %skb9, align 8, !dbg !13643
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13644
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 20, !dbg !13644
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !13644
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !13644
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13644
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %21, i32 0, i32 37, !dbg !13644
  %22 = load i8*, i8** %data, align 8, !dbg !13644
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13644
  %call11 = call i32 @skb_tailroom(%struct.sk_buff* %23) #13, !dbg !13644
  %conv12 = sext i32 %call11 to i64, !dbg !13644
  %call13 = call i64 @dma_map_single_attrs(%struct.device* %dev10, i8* %22, i64 %conv12, i32 2, i64 0) #13, !dbg !13644
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13645
  %put_rx_ctx14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 38, !dbg !13646
  %25 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx14, align 8, !dbg !13646
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %25, i32 0, i32 1, !dbg !13647
  store i64 %call13, i64* %dma, align 8, !dbg !13648
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13649
  %pci_dev15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 20, !dbg !13649
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev15, align 8, !dbg !13649
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 41, !dbg !13649
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13649
  %put_rx_ctx17 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 38, !dbg !13649
  %29 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx17, align 8, !dbg !13649
  %dma18 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %29, i32 0, i32 1, !dbg !13649
  %30 = load i64, i64* %dma18, align 8, !dbg !13649
  %call19 = call i32 @dma_mapping_error(%struct.device* %dev16, i64 %30) #13, !dbg !13649
  %tobool20 = icmp ne i32 %call19, 0, !dbg !13649
  %lnot21 = xor i1 %tobool20, true, !dbg !13649
  %lnot23 = xor i1 %lnot21, true, !dbg !13649
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !13649
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !13649
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !13649
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !13651

if.then27:                                        ; preds = %if.then8
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13652
  call void @kfree_skb(%struct.sk_buff* %31) #13, !dbg !13654
  br label %packet_dropped, !dbg !13655

if.end28:                                         ; preds = %if.then8
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13656
  %call29 = call i32 @skb_tailroom(%struct.sk_buff* %32) #13, !dbg !13657
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13658
  %put_rx_ctx30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 38, !dbg !13659
  %34 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx30, align 8, !dbg !13659
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %34, i32 0, i32 2, !dbg !13660
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !13661
  %bf.value = and i32 %call29, 2147483647, !dbg !13661
  %bf.clear = and i32 %bf.load, -2147483648, !dbg !13661
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !13661
  store i32 %bf.set, i32* %dma_len, align 8, !dbg !13661
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13662
  %put_rx_ctx31 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 38, !dbg !13662
  %36 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx31, align 8, !dbg !13662
  %dma32 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %36, i32 0, i32 1, !dbg !13662
  %37 = load i64, i64* %dma32, align 8, !dbg !13662
  %call33 = call i32 @dma_high(i64 %37) #13, !dbg !13662
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13663
  %put_rx34 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 35, !dbg !13664
  %ex35 = bitcast %union.ring_type* %put_rx34 to %struct.ring_desc_ex**, !dbg !13665
  %39 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex35, align 8, !dbg !13665
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %39, i32 0, i32 0, !dbg !13666
  store i32 %call33, i32* %bufhigh, align 4, !dbg !13667
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13668
  %put_rx_ctx36 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 38, !dbg !13668
  %41 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx36, align 8, !dbg !13668
  %dma37 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %41, i32 0, i32 1, !dbg !13668
  %42 = load i64, i64* %dma37, align 8, !dbg !13668
  %call38 = call i32 @dma_low(i64 %42) #13, !dbg !13668
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13669
  %put_rx39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 35, !dbg !13670
  %ex40 = bitcast %union.ring_type* %put_rx39 to %struct.ring_desc_ex**, !dbg !13671
  %44 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex40, align 8, !dbg !13671
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %44, i32 0, i32 1, !dbg !13672
  store i32 %call38, i32* %buflow, align 4, !dbg !13673
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13674, !srcloc !13675
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13676
  %rx_buf_sz41 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 42, !dbg !13676
  %46 = load i32, i32* %rx_buf_sz41, align 8, !dbg !13676
  %or = or i32 %46, -2147483648, !dbg !13676
  %47 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13677
  %put_rx42 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %47, i32 0, i32 35, !dbg !13678
  %ex43 = bitcast %union.ring_type* %put_rx42 to %struct.ring_desc_ex**, !dbg !13679
  %48 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex43, align 8, !dbg !13679
  %flaglen = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %48, i32 0, i32 3, !dbg !13680
  store i32 %or, i32* %flaglen, align 4, !dbg !13681
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13682
  %put_rx44 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 35, !dbg !13682
  %ex45 = bitcast %union.ring_type* %put_rx44 to %struct.ring_desc_ex**, !dbg !13682
  %50 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex45, align 8, !dbg !13682
  %incdec.ptr46 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %50, i32 1, !dbg !13682
  store %struct.ring_desc_ex* %incdec.ptr46, %struct.ring_desc_ex** %ex45, align 8, !dbg !13682
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13682
  %last_rx47 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 36, !dbg !13682
  %ex48 = bitcast %union.ring_type* %last_rx47 to %struct.ring_desc_ex**, !dbg !13682
  %52 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex48, align 8, !dbg !13682
  %cmp49 = icmp eq %struct.ring_desc_ex* %50, %52, !dbg !13682
  %lnot51 = xor i1 %cmp49, true, !dbg !13682
  %lnot53 = xor i1 %lnot51, true, !dbg !13682
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !13682
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !13682
  %tobool56 = icmp ne i64 %conv55, 0, !dbg !13682
  br i1 %tobool56, label %if.then57, label %if.end62, !dbg !13684

if.then57:                                        ; preds = %if.end28
  %53 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13685
  %rx_ring58 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %53, i32 0, i32 41, !dbg !13686
  %ex59 = bitcast %union.ring_type* %rx_ring58 to %struct.ring_desc_ex**, !dbg !13687
  %54 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex59, align 8, !dbg !13687
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13688
  %put_rx60 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 35, !dbg !13689
  %ex61 = bitcast %union.ring_type* %put_rx60 to %struct.ring_desc_ex**, !dbg !13690
  store %struct.ring_desc_ex* %54, %struct.ring_desc_ex** %ex61, align 8, !dbg !13691
  br label %if.end62, !dbg !13688

if.end62:                                         ; preds = %if.then57, %if.end28
  %56 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13692
  %put_rx_ctx63 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %56, i32 0, i32 38, !dbg !13692
  %57 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_rx_ctx63, align 8, !dbg !13692
  %incdec.ptr64 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %57, i32 1, !dbg !13692
  store %struct.nv_skb_map* %incdec.ptr64, %struct.nv_skb_map** %put_rx_ctx63, align 8, !dbg !13692
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13692
  %last_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 39, !dbg !13692
  %59 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_rx_ctx, align 8, !dbg !13692
  %cmp65 = icmp eq %struct.nv_skb_map* %57, %59, !dbg !13692
  %lnot67 = xor i1 %cmp65, true, !dbg !13692
  %lnot69 = xor i1 %lnot67, true, !dbg !13692
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !13692
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !13692
  %tobool72 = icmp ne i64 %conv71, 0, !dbg !13692
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !13694

if.then73:                                        ; preds = %if.end62
  %60 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13695
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %60, i32 0, i32 40, !dbg !13696
  %61 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb, align 8, !dbg !13696
  %62 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13697
  %put_rx_ctx74 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %62, i32 0, i32 38, !dbg !13698
  store %struct.nv_skb_map* %61, %struct.nv_skb_map** %put_rx_ctx74, align 8, !dbg !13699
  br label %if.end75, !dbg !13697

if.end75:                                         ; preds = %if.then73, %if.end62
  br label %if.end81, !dbg !13700

if.else:                                          ; preds = %while.body
  br label %packet_dropped, !dbg !13701

packet_dropped:                                   ; preds = %if.else, %if.then27
  call void @llvm.dbg.label(metadata !13702), !dbg !13704
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13705
  %swstats_rx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 49, !dbg !13706
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_rx_syncp) #13, !dbg !13707
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !13708
  br label %do.body, !dbg !13708

do.body:                                          ; preds = %packet_dropped
  br label %do.body76, !dbg !13710

do.body76:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !13712, metadata !DIExpression()), !dbg !13714
  store i8* null, i8** %__vpp_verify, align 8, !dbg !13714
  %64 = load i8*, i8** %__vpp_verify, align 8, !dbg !13714
  br label %do.end, !dbg !13714

do.end:                                           ; preds = %do.body76
  br label %do.body77, !dbg !13710

do.body77:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !13715, metadata !DIExpression()), !dbg !13717
  store i32 1, i32* %pao_ID__, align 4, !dbg !13717
  %65 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13718
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %65, i32 0, i32 50, !dbg !13718
  %66 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !13718
  %stat_rx_dropped = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %66, i32 0, i32 3, !dbg !13718
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_rx_dropped, i64* %stat_rx_dropped) #10, !dbg !13718, !srcloc !13721
  br label %do.end78, !dbg !13717

do.end78:                                         ; preds = %do.body77
  br label %do.end79, !dbg !13710

do.end79:                                         ; preds = %do.end78
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13722
  %swstats_rx_syncp80 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 49, !dbg !13723
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_rx_syncp80) #13, !dbg !13724
  store i32 1, i32* %retval, align 4, !dbg !13725
  br label %return, !dbg !13725

if.end81:                                         ; preds = %if.end75
  br label %while.cond, !dbg !13621, !llvm.loop !13726

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !13728
  br label %return, !dbg !13728

return:                                           ; preds = %while.end, %do.end79
  %68 = load i32, i32* %retval, align 4, !dbg !13729
  ret i32 %68, !dbg !13729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_reset_queue(%struct.net_device* %dev_queue) #2 !dbg !13730 {
entry:
  %dev_queue.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev_queue, %struct.net_device** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev_queue.addr, metadata !13731, metadata !DIExpression()), !dbg !13732
  %0 = load %struct.net_device*, %struct.net_device** %dev_queue.addr, align 8, !dbg !13733
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !13734
  call void @netdev_tx_reset_queue(%struct.netdev_queue* %call) #13, !dbg !13735
  ret void, !dbg !13736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_reset_queue(%struct.netdev_queue* %q) #2 !dbg !13737 {
entry:
  %q.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %q, %struct.netdev_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %q.addr, metadata !13738, metadata !DIExpression()), !dbg !13739
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %q.addr, align 8, !dbg !13740
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !13741
  call void @clear_bit(i64 1, i64* %state) #13, !dbg !13742
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %q.addr, align 8, !dbg !13743
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 11, !dbg !13744
  call void @dql_reset(%struct.dql* %dql) #13, !dbg !13745
  ret void, !dbg !13746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !13747 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13748, metadata !DIExpression()), !dbg !13750
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13752, metadata !DIExpression()), !dbg !13753
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12701, metadata !DIExpression()), !dbg !13754
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12705, metadata !DIExpression()), !dbg !13756
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13759, metadata !DIExpression()), !dbg !13760
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13761
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13762
  %div = sdiv i64 %1, 64, !dbg !13762
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13763
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13761
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13764
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13765
  %conv.i = trunc i64 %4 to i32, !dbg !13765
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !13766
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13767
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13767
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #15, !dbg !13767
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13768
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13769
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !13770
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !13772
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !13773

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !13774
  %12 = bitcast i64* %11 to i8*, !dbg !13774
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13774
  %shr.i = ashr i64 %13, 3, !dbg !13774
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !13774
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !13776
  %and.i = and i64 %14, 7, !dbg !13776
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !13776
  %shl.i = shl i32 1, %sh_prom.i, !dbg !13776
  %neg.i = xor i32 %shl.i, -1, !dbg !13777
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !13778, !srcloc !13779
  br label %arch_clear_bit.exit, !dbg !13780

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !13781
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !13783
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !13784, !srcloc !13785
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !13786
}

; Function Attrs: noredzone
declare dso_local void @dql_reset(%struct.dql*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #2 !dbg !13787 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13790, metadata !DIExpression()), !dbg !13791
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !13792, metadata !DIExpression()), !dbg !13793
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13794
  %1 = load i32, i32* %length.addr, align 4, !dbg !13795
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #13, !dbg !13796
  ret %struct.sk_buff* %call, !dbg !13797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !8176 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13798, metadata !DIExpression()), !dbg !13799
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13800, metadata !DIExpression()), !dbg !13801
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13802, metadata !DIExpression()), !dbg !13803
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !13804, metadata !DIExpression()), !dbg !13805
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !13806, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !13808, metadata !DIExpression()), !dbg !13811
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !13811
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #13, !dbg !13811
  %lnot = xor i1 %call, true, !dbg !13811
  %lnot1 = xor i1 %lnot, true, !dbg !13811
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13811
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !13811
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !13812
  %tobool = icmp ne i32 %1, 0, !dbg !13812
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13812

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !13812
  %tobool2 = trunc i8 %2 to i1, !dbg !13812
  %lnot3 = xor i1 %tobool2, true, !dbg !13812
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !13814
  %lnot5 = xor i1 %3, true, !dbg !13812
  %lnot7 = xor i1 %lnot5, true, !dbg !13812
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !13812
  %conv = sext i32 %lnot.ext8 to i64, !dbg !13812
  %tobool9 = icmp ne i64 %conv, 0, !dbg !13812
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !13811

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !13815
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13817, metadata !DIExpression()), !dbg !13819
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !13819
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !13820
  %tobool10 = icmp ne i32 %4, 0, !dbg !13820
  %lnot11 = xor i1 %tobool10, true, !dbg !13820
  %lnot13 = xor i1 %lnot11, true, !dbg !13820
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !13820
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !13820
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !13820
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !13819

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !13820

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !13822

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !13824

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13822
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #13, !dbg !13822
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13822
  %call20 = call i8* @dev_name(%struct.device* %6) #13, !dbg !13822
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %call19, i8* %call20) #13, !dbg !13822
  br label %do.body21, !dbg !13822

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !13826

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !13828

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !13826

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0), i32 276, i32 2313, i64 12) #10, !dbg !13830, !srcloc !13832
  br label %do.end25, !dbg !13830

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #10, !dbg !13833, !srcloc !13835
  br label %do.body26, !dbg !13826

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !13836

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !13826

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !13822

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !13838

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !13822

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !13822

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !13819
  %tobool32 = icmp ne i32 %7, 0, !dbg !13819
  %lnot33 = xor i1 %tobool32, true, !dbg !13819
  %lnot35 = xor i1 %lnot33, true, !dbg !13819
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !13819
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !13819
  store i64 %conv37, i64* %tmp, align 8, !dbg !13820
  %8 = load i64, i64* %tmp, align 8, !dbg !13819
  br label %if.end38, !dbg !13815

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !13811
  %tobool40 = icmp ne i32 %9, 0, !dbg !13811
  %lnot41 = xor i1 %tobool40, true, !dbg !13811
  %lnot43 = xor i1 %lnot41, true, !dbg !13811
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !13811
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !13811
  store i64 %conv45, i64* %tmp39, align 8, !dbg !13812
  %10 = load i64, i64* %tmp39, align 8, !dbg !13811
  %tobool46 = icmp ne i64 %10, 0, !dbg !13840
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !13841

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !13842
  br label %return, !dbg !13842

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13843
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !13844
  %13 = load i64, i64* %size.addr, align 8, !dbg !13845
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #13, !dbg !13846
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13847
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !13848
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !13848
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !13848
  %18 = ptrtoint i8* %17 to i64, !dbg !13848
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #13, !dbg !13848
  %shr = lshr i64 %call49, 12, !dbg !13848
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !13848
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !13849
  %20 = ptrtoint i8* %19 to i64, !dbg !13849
  %and = and i64 %20, 4095, !dbg !13849
  %21 = load i64, i64* %size.addr, align 8, !dbg !13850
  %22 = load i32, i32* %dir.addr, align 4, !dbg !13851
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !13852
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #13, !dbg !13853
  store i64 %call50, i64* %retval, align 8, !dbg !13854
  br label %return, !dbg !13854

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !13855
  ret i64 %24, !dbg !13855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_tailroom(%struct.sk_buff* %skb) #2 !dbg !13856 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13859, metadata !DIExpression()), !dbg !13860
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13861
  %call = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %0) #13, !dbg !13862
  br i1 %call, label %cond.true, label %cond.false, !dbg !13862

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13862

cond.false:                                       ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13863
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 35, !dbg !13864
  %2 = load i32, i32* %end, align 4, !dbg !13864
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13865
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 34, !dbg !13866
  %4 = load i32, i32* %tail, align 8, !dbg !13866
  %sub = sub i32 %2, %4, !dbg !13867
  br label %cond.end, !dbg !13862

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !13862
  ret i32 %cond, !dbg !13868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !13869 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13872, metadata !DIExpression()), !dbg !13873
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !13874, metadata !DIExpression()), !dbg !13875
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13876
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !13877
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #13, !dbg !13878
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !13879
  %cmp = icmp eq i64 %2, -1, !dbg !13881
  br i1 %cmp, label %if.then, label %if.end, !dbg !13882

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13883
  br label %return, !dbg !13883

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13884
  br label %return, !dbg !13884

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !13885
  ret i32 %3, !dbg !13885
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !13886 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13889, metadata !DIExpression()), !dbg !13890
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13891
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13893
  %1 = load i8*, i8** %init_name, align 8, !dbg !13893
  %tobool = icmp ne i8* %1, null, !dbg !13891
  br i1 %tobool, label %if.then, label %if.end, !dbg !13894

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13895
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !13896
  %3 = load i8*, i8** %init_name1, align 8, !dbg !13896
  store i8* %3, i8** %retval, align 8, !dbg !13897
  br label %return, !dbg !13897

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13898
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !13899
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #13, !dbg !13900
  store i8* %call, i8** %retval, align 8, !dbg !13901
  br label %return, !dbg !13901

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !13902
  ret i8* %5, !dbg !13902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !13903 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13906, metadata !DIExpression()), !dbg !13907
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13908, metadata !DIExpression()), !dbg !13909
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !13910, metadata !DIExpression()), !dbg !13911
  ret void, !dbg !13912
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !13913 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !13917, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.declare(metadata i64* %y, metadata !13919, metadata !DIExpression()), !dbg !13920
  %0 = load i64, i64* %x.addr, align 8, !dbg !13921
  %sub = sub i64 %0, -2147483648, !dbg !13922
  store i64 %sub, i64* %y, align 8, !dbg !13920
  %1 = load i64, i64* %y, align 8, !dbg !13923
  %2 = load i64, i64* %x.addr, align 8, !dbg !13924
  %3 = load i64, i64* %y, align 8, !dbg !13925
  %cmp = icmp ugt i64 %2, %3, !dbg !13926
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13927

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !13928
  br label %cond.end, !dbg !13927

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !13929
  %sub1 = sub i64 -2147483648, %5, !dbg !13930
  br label %cond.end, !dbg !13927

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !13927
  %add = add i64 %1, %cond, !dbg !13931
  store i64 %add, i64* %x.addr, align 8, !dbg !13932
  %6 = load i64, i64* %x.addr, align 8, !dbg !13933
  ret i64 %6, !dbg !13934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !13935 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13940, metadata !DIExpression()), !dbg !13941
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13942
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13943
  %1 = load i8*, i8** %name, align 8, !dbg !13943
  ret i8* %1, !dbg !13944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %skb) #2 !dbg !13945 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13950
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 6, !dbg !13951
  %1 = load i32, i32* %data_len, align 4, !dbg !13951
  %tobool = icmp ne i32 %1, 0, !dbg !13950
  ret i1 %tobool, !dbg !13952
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !13953 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13956, metadata !DIExpression()), !dbg !13957
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !13958, metadata !DIExpression()), !dbg !13959
  ret void, !dbg !13960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_high(i64 %addr) #2 !dbg !13961 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !13964, metadata !DIExpression()), !dbg !13965
  %0 = load i64, i64* %addr.addr, align 8, !dbg !13966
  %shr = lshr i64 %0, 31, !dbg !13967
  %shr1 = lshr i64 %shr, 1, !dbg !13968
  %conv = trunc i64 %shr1 to i32, !dbg !13966
  ret i32 %conv, !dbg !13969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_low(i64 %addr) #2 !dbg !13970 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !13971, metadata !DIExpression()), !dbg !13972
  %0 = load i64, i64* %addr.addr, align 8, !dbg !13973
  %conv = trunc i64 %0 to i32, !dbg !13973
  ret i32 %conv, !dbg !13974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_start_rx(%struct.net_device* %dev) #2 !dbg !13975 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %rx_ctrl = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13976, metadata !DIExpression()), !dbg !13977
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !13978, metadata !DIExpression()), !dbg !13979
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13980
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !13981
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !13981
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !13979
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13982, metadata !DIExpression()), !dbg !13983
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13984
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !13985
  store i8* %call1, i8** %base, align 8, !dbg !13983
  call void @llvm.dbg.declare(metadata i32* %rx_ctrl, metadata !13986, metadata !DIExpression()), !dbg !13987
  %3 = load i8*, i8** %base, align 8, !dbg !13988
  %add.ptr = getelementptr i8, i8* %3, i64 148, !dbg !13989
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !13990
  store i32 %call2, i32* %rx_ctrl, align 4, !dbg !13987
  %4 = load i8*, i8** %base, align 8, !dbg !13991
  %add.ptr3 = getelementptr i8, i8* %4, i64 148, !dbg !13993
  %call4 = call i32 @readl(i8* %add.ptr3) #13, !dbg !13994
  %and = and i32 %call4, 1, !dbg !13995
  %tobool = icmp ne i32 %and, 0, !dbg !13995
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13996

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !13997
  %mac_in_use = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 30, !dbg !13998
  %6 = load i32, i32* %mac_in_use, align 8, !dbg !13998
  %tobool5 = icmp ne i32 %6, 0, !dbg !13997
  br i1 %tobool5, label %if.end, label %if.then, !dbg !13999

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %rx_ctrl, align 4, !dbg !14000
  %and6 = and i32 %7, -2, !dbg !14000
  store i32 %and6, i32* %rx_ctrl, align 4, !dbg !14000
  %8 = load i32, i32* %rx_ctrl, align 4, !dbg !14002
  %9 = load i8*, i8** %base, align 8, !dbg !14003
  %add.ptr7 = getelementptr i8, i8* %9, i64 148, !dbg !14004
  call void @writel(i32 %8, i8* %add.ptr7) #13, !dbg !14005
  %10 = load i8*, i8** %base, align 8, !dbg !14006
  call void @pci_push(i8* %10) #13, !dbg !14007
  br label %if.end, !dbg !14008

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14009
  %linkspeed = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 6, !dbg !14010
  %12 = load i32, i32* %linkspeed, align 4, !dbg !14010
  %13 = load i8*, i8** %base, align 8, !dbg !14011
  %add.ptr8 = getelementptr i8, i8* %13, i64 272, !dbg !14012
  call void @writel(i32 %12, i8* %add.ptr8) #13, !dbg !14013
  %14 = load i8*, i8** %base, align 8, !dbg !14014
  call void @pci_push(i8* %14) #13, !dbg !14015
  %15 = load i32, i32* %rx_ctrl, align 4, !dbg !14016
  %or = or i32 %15, 1, !dbg !14016
  store i32 %or, i32* %rx_ctrl, align 4, !dbg !14016
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14017
  %mac_in_use9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 30, !dbg !14019
  %17 = load i32, i32* %mac_in_use9, align 8, !dbg !14019
  %tobool10 = icmp ne i32 %17, 0, !dbg !14017
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !14020

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %rx_ctrl, align 4, !dbg !14021
  %and12 = and i32 %18, -16777217, !dbg !14021
  store i32 %and12, i32* %rx_ctrl, align 4, !dbg !14021
  br label %if.end13, !dbg !14022

if.end13:                                         ; preds = %if.then11, %if.end
  %19 = load i32, i32* %rx_ctrl, align 4, !dbg !14023
  %20 = load i8*, i8** %base, align 8, !dbg !14024
  %add.ptr14 = getelementptr i8, i8* %20, i64 148, !dbg !14025
  call void @writel(i32 %19, i8* %add.ptr14) #13, !dbg !14026
  %21 = load i8*, i8** %base, align 8, !dbg !14027
  call void @pci_push(i8* %21) #13, !dbg !14028
  ret void, !dbg !14029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_unlock(%struct.net_device* %dev) #2 !dbg !14030 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9483, metadata !DIExpression()), !dbg !14031
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14033, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14035, metadata !DIExpression()), !dbg !14036
  store i32 0, i32* %i, align 4, !dbg !14037
  br label %for.cond, !dbg !14039

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14040
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14042
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !14043
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !14043
  %cmp = icmp ult i32 %0, %2, !dbg !14044
  br i1 %cmp, label %for.body, label %for.end, !dbg !14045

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !14046, metadata !DIExpression()), !dbg !14048
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14049
  %4 = load i32, i32* %i, align 4, !dbg !14050
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #13, !dbg !14051
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !14048
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !14052
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 10, !dbg !14053
  call void @clear_bit(i64 2, i64* %state) #13, !dbg !14054
  %6 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !14055
  call void @netif_schedule_queue(%struct.netdev_queue* %6) #13, !dbg !14056
  br label %for.inc, !dbg !14057

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !14058
  %inc = add i32 %7, 1, !dbg !14058
  store i32 %inc, i32* %i, align 4, !dbg !14058
  br label %for.cond, !dbg !14059, !llvm.loop !14060

for.end:                                          ; preds = %for.cond
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14062
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 91, !dbg !14063
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14064, !srcloc !9681
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14065
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !14065
  %rlock.i = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !14065
  ret void, !dbg !14066
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_enable() #2 !dbg !14067 {
entry:
  %tmp = alloca i64, align 8
  br label %__here, !dbg !14068

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !14070), !dbg !14068
  store i64 ptrtoint (i8* blockaddress(@local_bh_enable, %__here) to i64), i64* %tmp, align 8, !dbg !14068
  %0 = load i64, i64* %tmp, align 8, !dbg !14068
  call void @__local_bh_enable_ip(i64 %0, i32 512) #13, !dbg !14071
  ret void, !dbg !14072

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noredzone
declare dso_local void @netif_schedule_queue(%struct.netdev_queue*) #1

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_msi_workaround(%struct.fe_priv* %np) #2 !dbg !14073 {
entry:
  %np.addr = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !14076, metadata !DIExpression()), !dbg !14077
  %0 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !14078
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %0, i32 0, i32 69, !dbg !14080
  %1 = load i32, i32* %msi_flags, align 4, !dbg !14080
  %and = and i32 %1, 64, !dbg !14081
  %tobool = icmp ne i32 %and, 0, !dbg !14081
  br i1 %tobool, label %if.then, label %if.end, !dbg !14082

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %base, metadata !14083, metadata !DIExpression()), !dbg !14085
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !14086
  %base1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 33, !dbg !14087
  %3 = load i8*, i8** %base1, align 8, !dbg !14087
  store i8* %3, i8** %base, align 8, !dbg !14085
  %4 = load i8*, i8** %base, align 8, !dbg !14088
  %add.ptr = getelementptr i8, i8* %4, i64 48, !dbg !14089
  call void @writel(i32 0, i8* %add.ptr) #13, !dbg !14090
  %5 = load i8*, i8** %base, align 8, !dbg !14091
  %add.ptr2 = getelementptr i8, i8* %5, i64 48, !dbg !14092
  call void @writel(i32 1, i8* %add.ptr2) #13, !dbg !14093
  br label %if.end, !dbg !14094

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_rx_process_optimized(%struct.net_device* %dev, i32 %limit) #2 !dbg !14096 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %limit.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %flags = alloca i32, align 4
  %vlanflags = alloca i32, align 4
  %rx_work = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %len = alloca i32, align 4
  %vid = alloca i16, align 2
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %__vpp_verify77 = alloca i8*, align 8
  %pao_ID__80 = alloca i32, align 4
  %pto_val__ = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14097, metadata !DIExpression()), !dbg !14098
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !14099, metadata !DIExpression()), !dbg !14100
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !14101, metadata !DIExpression()), !dbg !14102
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14103
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !14104
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !14104
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !14102
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14105, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.declare(metadata i32* %vlanflags, metadata !14107, metadata !DIExpression()), !dbg !14108
  store i32 0, i32* %vlanflags, align 4, !dbg !14108
  call void @llvm.dbg.declare(metadata i32* %rx_work, metadata !14109, metadata !DIExpression()), !dbg !14110
  store i32 0, i32* %rx_work, align 4, !dbg !14110
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !14111, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14113, metadata !DIExpression()), !dbg !14114
  br label %while.cond, !dbg !14115

while.cond:                                       ; preds = %if.end124, %entry
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14116
  %get_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 34, !dbg !14117
  %ex = bitcast %union.ring_type* %get_rx to %struct.ring_desc_ex**, !dbg !14118
  %3 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !14118
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14119
  %put_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 35, !dbg !14120
  %ex1 = bitcast %union.ring_type* %put_rx to %struct.ring_desc_ex**, !dbg !14121
  %5 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex1, align 8, !dbg !14121
  %cmp = icmp ne %struct.ring_desc_ex* %3, %5, !dbg !14122
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !14123

land.lhs.true:                                    ; preds = %while.cond
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14124
  %get_rx2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 34, !dbg !14124
  %ex3 = bitcast %union.ring_type* %get_rx2 to %struct.ring_desc_ex**, !dbg !14124
  %7 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex3, align 8, !dbg !14124
  %flaglen = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %7, i32 0, i32 3, !dbg !14124
  %8 = load i32, i32* %flaglen, align 4, !dbg !14124
  store i32 %8, i32* %flags, align 4, !dbg !14125
  %and = and i32 %8, -2147483648, !dbg !14126
  %tobool = icmp ne i32 %and, 0, !dbg !14126
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !14127

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* %rx_work, align 4, !dbg !14128
  %10 = load i32, i32* %limit.addr, align 4, !dbg !14129
  %cmp4 = icmp slt i32 %9, %10, !dbg !14130
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp4, %land.rhs ], !dbg !14131
  br i1 %11, label %while.body, label %while.end, !dbg !14115

while.body:                                       ; preds = %land.end
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14132
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 20, !dbg !14132
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !14132
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !14132
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14132
  %get_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 37, !dbg !14132
  %15 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx, align 8, !dbg !14132
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %15, i32 0, i32 1, !dbg !14132
  %16 = load i64, i64* %dma, align 8, !dbg !14132
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14132
  %get_rx_ctx6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 37, !dbg !14132
  %18 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx6, align 8, !dbg !14132
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %18, i32 0, i32 2, !dbg !14132
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !14132
  %bf.clear = and i32 %bf.load, 2147483647, !dbg !14132
  %conv = zext i32 %bf.clear to i64, !dbg !14132
  call void @dma_unmap_single_attrs(%struct.device* %dev5, i64 %16, i64 %conv, i32 2, i64 0) #13, !dbg !14132
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14134
  %get_rx_ctx7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 37, !dbg !14135
  %20 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx7, align 8, !dbg !14135
  %skb8 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %20, i32 0, i32 0, !dbg !14136
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb8, align 8, !dbg !14136
  store %struct.sk_buff* %21, %struct.sk_buff** %skb, align 8, !dbg !14137
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14138
  %get_rx_ctx9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 37, !dbg !14139
  %23 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx9, align 8, !dbg !14139
  %skb10 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %23, i32 0, i32 0, !dbg !14140
  store %struct.sk_buff* null, %struct.sk_buff** %skb10, align 8, !dbg !14141
  %24 = load i32, i32* %flags, align 4, !dbg !14142
  %and11 = and i32 %24, 536870912, !dbg !14142
  %tobool12 = icmp ne i32 %and11, 0, !dbg !14142
  %lnot = xor i1 %tobool12, true, !dbg !14142
  %lnot13 = xor i1 %lnot, true, !dbg !14142
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !14142
  %conv14 = sext i32 %lnot.ext to i64, !dbg !14142
  %tobool15 = icmp ne i64 %conv14, 0, !dbg !14142
  br i1 %tobool15, label %if.then, label %if.else94, !dbg !14144

if.then:                                          ; preds = %while.body
  %25 = load i32, i32* %flags, align 4, !dbg !14145
  %and16 = and i32 %25, 16383, !dbg !14147
  store i32 %and16, i32* %len, align 4, !dbg !14148
  %26 = load i32, i32* %flags, align 4, !dbg !14149
  %and17 = and i32 %26, 1073741824, !dbg !14149
  %tobool18 = icmp ne i32 %and17, 0, !dbg !14149
  %lnot19 = xor i1 %tobool18, true, !dbg !14149
  %lnot21 = xor i1 %lnot19, true, !dbg !14149
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !14149
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !14149
  %tobool24 = icmp ne i64 %conv23, 0, !dbg !14149
  br i1 %tobool24, label %if.then25, label %if.end45, !dbg !14151

if.then25:                                        ; preds = %if.then
  %27 = load i32, i32* %flags, align 4, !dbg !14152
  %and26 = and i32 %27, 33292288, !dbg !14155
  %cmp27 = icmp eq i32 %and26, 2097152, !dbg !14156
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !14157

if.then29:                                        ; preds = %if.then25
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14158
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14160
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %29, i32 0, i32 37, !dbg !14161
  %30 = load i8*, i8** %data, align 8, !dbg !14161
  %31 = load i32, i32* %len, align 4, !dbg !14162
  %call30 = call i32 @nv_getlen(%struct.net_device* %28, i8* %30, i32 %31) #13, !dbg !14163
  store i32 %call30, i32* %len, align 4, !dbg !14164
  %32 = load i32, i32* %len, align 4, !dbg !14165
  %cmp31 = icmp slt i32 %32, 0, !dbg !14167
  br i1 %cmp31, label %if.then33, label %if.end, !dbg !14168

if.then33:                                        ; preds = %if.then29
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14169
  call void @consume_skb(%struct.sk_buff* %33) #13, !dbg !14169
  br label %next_pkt, !dbg !14171

if.end:                                           ; preds = %if.then29
  br label %if.end44, !dbg !14172

if.else:                                          ; preds = %if.then25
  %34 = load i32, i32* %flags, align 4, !dbg !14173
  %and34 = and i32 %34, 33292288, !dbg !14175
  %cmp35 = icmp eq i32 %and34, 16777216, !dbg !14176
  br i1 %cmp35, label %if.then37, label %if.else42, !dbg !14177

if.then37:                                        ; preds = %if.else
  %35 = load i32, i32* %flags, align 4, !dbg !14178
  %and38 = and i32 %35, 33554432, !dbg !14181
  %tobool39 = icmp ne i32 %and38, 0, !dbg !14181
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !14182

if.then40:                                        ; preds = %if.then37
  %36 = load i32, i32* %len, align 4, !dbg !14183
  %dec = add i32 %36, -1, !dbg !14183
  store i32 %dec, i32* %len, align 4, !dbg !14183
  br label %if.end41, !dbg !14184

if.end41:                                         ; preds = %if.then40, %if.then37
  br label %if.end43, !dbg !14185

if.else42:                                        ; preds = %if.else
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14186
  call void @consume_skb(%struct.sk_buff* %37) #13, !dbg !14186
  br label %next_pkt, !dbg !14188

if.end43:                                         ; preds = %if.end41
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end
  br label %if.end45, !dbg !14189

if.end45:                                         ; preds = %if.end44, %if.then
  %38 = load i32, i32* %flags, align 4, !dbg !14190
  %and46 = and i32 %38, 469762048, !dbg !14192
  %cmp47 = icmp eq i32 %and46, 335544320, !dbg !14193
  br i1 %cmp47, label %if.then52, label %lor.lhs.false, !dbg !14194

lor.lhs.false:                                    ; preds = %if.end45
  %39 = load i32, i32* %flags, align 4, !dbg !14195
  %and49 = and i32 %39, 469762048, !dbg !14196
  %cmp50 = icmp eq i32 %and49, 402653184, !dbg !14197
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !14198

if.then52:                                        ; preds = %lor.lhs.false, %if.end45
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14199
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %40, i32 0, i32 14, !dbg !14200
  %bf.load53 = load i16, i16* %ip_summed, align 8, !dbg !14201
  %bf.clear54 = and i16 %bf.load53, -97, !dbg !14201
  %bf.set = or i16 %bf.clear54, 32, !dbg !14201
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !14201
  br label %if.end55, !dbg !14199

if.end55:                                         ; preds = %if.then52, %lor.lhs.false
  %41 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14202
  %42 = load i32, i32* %len, align 4, !dbg !14203
  %call56 = call i8* @skb_put(%struct.sk_buff* %41, i32 %42) #13, !dbg !14204
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14205
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14206
  %call57 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %43, %struct.net_device* %44) #13, !dbg !14207
  %45 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14208
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %45, i32 0, i32 29, !dbg !14209
  store i16 %call57, i16* %protocol, align 8, !dbg !14210
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14211
  %data58 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %46, i32 0, i32 37, !dbg !14211
  %47 = load i8*, i8** %data58, align 8, !dbg !14211
  call void @llvm.prefetch.p0i8(i8* %47, i32 0, i32 3, i32 1), !dbg !14211
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14212
  %get_rx59 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 34, !dbg !14212
  %ex60 = bitcast %union.ring_type* %get_rx59 to %struct.ring_desc_ex**, !dbg !14212
  %49 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex60, align 8, !dbg !14212
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %49, i32 0, i32 1, !dbg !14212
  %50 = load i32, i32* %buflow, align 4, !dbg !14212
  store i32 %50, i32* %vlanflags, align 4, !dbg !14213
  %51 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14214
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %51, i32 0, i32 15, !dbg !14216
  %52 = load i64, i64* %features, align 8, !dbg !14216
  %and61 = and i64 %52, 256, !dbg !14217
  %tobool62 = icmp ne i64 %and61, 0, !dbg !14217
  br i1 %tobool62, label %land.lhs.true63, label %if.end69, !dbg !14218

land.lhs.true63:                                  ; preds = %if.end55
  %53 = load i32, i32* %vlanflags, align 4, !dbg !14219
  %and64 = and i32 %53, 65536, !dbg !14220
  %tobool65 = icmp ne i32 %and64, 0, !dbg !14220
  br i1 %tobool65, label %if.then66, label %if.end69, !dbg !14221

if.then66:                                        ; preds = %land.lhs.true63
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !14222, metadata !DIExpression()), !dbg !14224
  %54 = load i32, i32* %vlanflags, align 4, !dbg !14225
  %and67 = and i32 %54, 65535, !dbg !14226
  %conv68 = trunc i32 %and67 to i16, !dbg !14225
  store i16 %conv68, i16* %vid, align 2, !dbg !14224
  %55 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14227
  %56 = load i16, i16* %vid, align 2, !dbg !14228
  call void @__vlan_hwaccel_put_tag(%struct.sk_buff* %55, i16 zeroext 129, i16 zeroext %56) #13, !dbg !14229
  br label %if.end69, !dbg !14230

if.end69:                                         ; preds = %if.then66, %land.lhs.true63, %if.end55
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14231
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 2, !dbg !14232
  %58 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14233
  %call70 = call i32 @napi_gro_receive(%struct.napi_struct* %napi, %struct.sk_buff* %58) #13, !dbg !14234
  %59 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14235
  %swstats_rx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %59, i32 0, i32 49, !dbg !14236
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_rx_syncp) #13, !dbg !14237
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !14238
  br label %do.body, !dbg !14238

do.body:                                          ; preds = %if.end69
  br label %do.body71, !dbg !14240

do.body71:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !14242, metadata !DIExpression()), !dbg !14244
  store i8* null, i8** %__vpp_verify, align 8, !dbg !14244
  %60 = load i8*, i8** %__vpp_verify, align 8, !dbg !14244
  br label %do.end, !dbg !14244

do.end:                                           ; preds = %do.body71
  br label %do.body72, !dbg !14240

do.body72:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !14245, metadata !DIExpression()), !dbg !14247
  store i32 1, i32* %pao_ID__, align 4, !dbg !14247
  %61 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14248
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %61, i32 0, i32 50, !dbg !14248
  %62 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !14248
  %stat_rx_packets = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %62, i32 0, i32 0, !dbg !14248
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_rx_packets, i64* %stat_rx_packets) #10, !dbg !14248, !srcloc !14251
  br label %do.end73, !dbg !14247

do.end73:                                         ; preds = %do.body72
  br label %do.end74, !dbg !14240

do.end74:                                         ; preds = %do.end73
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !14252
  br label %do.body75, !dbg !14252

do.body75:                                        ; preds = %do.end74
  br label %do.body76, !dbg !14254

do.body76:                                        ; preds = %do.body75
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify77, metadata !14256, metadata !DIExpression()), !dbg !14258
  store i8* null, i8** %__vpp_verify77, align 8, !dbg !14258
  %63 = load i8*, i8** %__vpp_verify77, align 8, !dbg !14258
  br label %do.end78, !dbg !14258

do.end78:                                         ; preds = %do.body76
  br label %do.body79, !dbg !14254

do.body79:                                        ; preds = %do.end78
  call void @llvm.dbg.declare(metadata i32* %pao_ID__80, metadata !14259, metadata !DIExpression()), !dbg !14261
  %64 = load i32, i32* %len, align 4, !dbg !14261
  %65 = call i1 @llvm.is.constant.i32(i32 %64), !dbg !14261
  br i1 %65, label %land.lhs.true81, label %cond.false, !dbg !14261

land.lhs.true81:                                  ; preds = %do.body79
  %66 = load i32, i32* %len, align 4, !dbg !14261
  %cmp82 = icmp eq i32 %66, 1, !dbg !14261
  br i1 %cmp82, label %cond.true, label %lor.lhs.false84, !dbg !14261

lor.lhs.false84:                                  ; preds = %land.lhs.true81
  %67 = load i32, i32* %len, align 4, !dbg !14261
  %cmp85 = icmp eq i32 %67, -1, !dbg !14261
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !14261

cond.true:                                        ; preds = %lor.lhs.false84, %land.lhs.true81
  %68 = load i32, i32* %len, align 4, !dbg !14261
  br label %cond.end, !dbg !14261

cond.false:                                       ; preds = %lor.lhs.false84, %do.body79
  br label %cond.end, !dbg !14261

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %68, %cond.true ], [ 0, %cond.false ], !dbg !14261
  store i32 %cond, i32* %pao_ID__80, align 4, !dbg !14261
  br label %do.body87, !dbg !14262

do.body87:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %pto_val__, metadata !14265, metadata !DIExpression()), !dbg !14267
  %69 = load i32, i32* %len, align 4, !dbg !14267
  %conv88 = sext i32 %69 to i64, !dbg !14267
  store i64 %conv88, i64* %pto_val__, align 8, !dbg !14267
  %70 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14267
  %txrx_stats89 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %70, i32 0, i32 50, !dbg !14267
  %71 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats89, align 8, !dbg !14267
  %stat_rx_bytes = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %71, i32 0, i32 1, !dbg !14267
  %72 = load i64, i64* %pto_val__, align 8, !dbg !14267
  call void asm "addq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_rx_bytes, i64 %72, i64* %stat_rx_bytes) #10, !dbg !14267, !srcloc !14268
  br label %do.end90, !dbg !14267

do.end90:                                         ; preds = %do.body87
  br label %do.end91, !dbg !14261

do.end91:                                         ; preds = %do.end90
  br label %do.end92, !dbg !14254

do.end92:                                         ; preds = %do.end91
  %73 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14269
  %swstats_rx_syncp93 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %73, i32 0, i32 49, !dbg !14270
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_rx_syncp93) #13, !dbg !14271
  br label %if.end95, !dbg !14272

if.else94:                                        ; preds = %while.body
  %74 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14273
  call void @consume_skb(%struct.sk_buff* %74) #13, !dbg !14273
  br label %if.end95

if.end95:                                         ; preds = %if.else94, %do.end92
  br label %next_pkt, !dbg !14142

next_pkt:                                         ; preds = %if.end95, %if.else42, %if.then33
  call void @llvm.dbg.label(metadata !14275), !dbg !14276
  %75 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14277
  %get_rx96 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %75, i32 0, i32 34, !dbg !14277
  %ex97 = bitcast %union.ring_type* %get_rx96 to %struct.ring_desc_ex**, !dbg !14277
  %76 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex97, align 8, !dbg !14277
  %incdec.ptr = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %76, i32 1, !dbg !14277
  store %struct.ring_desc_ex* %incdec.ptr, %struct.ring_desc_ex** %ex97, align 8, !dbg !14277
  %77 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14277
  %last_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %77, i32 0, i32 36, !dbg !14277
  %ex98 = bitcast %union.ring_type* %last_rx to %struct.ring_desc_ex**, !dbg !14277
  %78 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex98, align 8, !dbg !14277
  %cmp99 = icmp eq %struct.ring_desc_ex* %76, %78, !dbg !14277
  %lnot101 = xor i1 %cmp99, true, !dbg !14277
  %lnot103 = xor i1 %lnot101, true, !dbg !14277
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !14277
  %conv105 = sext i32 %lnot.ext104 to i64, !dbg !14277
  %tobool106 = icmp ne i64 %conv105, 0, !dbg !14277
  br i1 %tobool106, label %if.then107, label %if.end111, !dbg !14279

if.then107:                                       ; preds = %next_pkt
  %79 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14280
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %79, i32 0, i32 41, !dbg !14281
  %ex108 = bitcast %union.ring_type* %rx_ring to %struct.ring_desc_ex**, !dbg !14282
  %80 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex108, align 8, !dbg !14282
  %81 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14283
  %get_rx109 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %81, i32 0, i32 34, !dbg !14284
  %ex110 = bitcast %union.ring_type* %get_rx109 to %struct.ring_desc_ex**, !dbg !14285
  store %struct.ring_desc_ex* %80, %struct.ring_desc_ex** %ex110, align 8, !dbg !14286
  br label %if.end111, !dbg !14283

if.end111:                                        ; preds = %if.then107, %next_pkt
  %82 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14287
  %get_rx_ctx112 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %82, i32 0, i32 37, !dbg !14287
  %83 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx112, align 8, !dbg !14287
  %incdec.ptr113 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %83, i32 1, !dbg !14287
  store %struct.nv_skb_map* %incdec.ptr113, %struct.nv_skb_map** %get_rx_ctx112, align 8, !dbg !14287
  %84 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14287
  %last_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %84, i32 0, i32 39, !dbg !14287
  %85 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_rx_ctx, align 8, !dbg !14287
  %cmp114 = icmp eq %struct.nv_skb_map* %83, %85, !dbg !14287
  %lnot116 = xor i1 %cmp114, true, !dbg !14287
  %lnot118 = xor i1 %lnot116, true, !dbg !14287
  %lnot.ext119 = zext i1 %lnot118 to i32, !dbg !14287
  %conv120 = sext i32 %lnot.ext119 to i64, !dbg !14287
  %tobool121 = icmp ne i64 %conv120, 0, !dbg !14287
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !14289

if.then122:                                       ; preds = %if.end111
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14290
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %86, i32 0, i32 40, !dbg !14291
  %87 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb, align 8, !dbg !14291
  %88 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14292
  %get_rx_ctx123 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %88, i32 0, i32 37, !dbg !14293
  store %struct.nv_skb_map* %87, %struct.nv_skb_map** %get_rx_ctx123, align 8, !dbg !14294
  br label %if.end124, !dbg !14292

if.end124:                                        ; preds = %if.then122, %if.end111
  %89 = load i32, i32* %rx_work, align 4, !dbg !14295
  %inc = add i32 %89, 1, !dbg !14295
  store i32 %inc, i32* %rx_work, align 4, !dbg !14295
  br label %while.cond, !dbg !14115, !llvm.loop !14296

while.end:                                        ; preds = %land.end
  %90 = load i32, i32* %rx_work, align 4, !dbg !14298
  ret i32 %90, !dbg !14299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !14300 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !14304, metadata !DIExpression()), !dbg !14305
  %call = call i64 @arch_local_save_flags() #13, !dbg !14306
  store i64 %call, i64* %f, align 8, !dbg !14307
  call void @arch_local_irq_disable() #13, !dbg !14308
  %0 = load i64, i64* %f, align 8, !dbg !14309
  ret i64 %0, !dbg !14310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_getlen(%struct.net_device* %dev, i8* %packet, i32 %datalen) #2 !dbg !14311 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %packet.addr = alloca i8*, align 8
  %datalen.addr = alloca i32, align 4
  %hdrlen = alloca i32, align 4
  %protolen = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14314, metadata !DIExpression()), !dbg !14315
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !14316, metadata !DIExpression()), !dbg !14317
  store i32 %datalen, i32* %datalen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %datalen.addr, metadata !14318, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.declare(metadata i32* %hdrlen, metadata !14320, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.declare(metadata i32* %protolen, metadata !14322, metadata !DIExpression()), !dbg !14323
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !14324
  %1 = bitcast i8* %0 to %struct.vlan_ethhdr*, !dbg !14326
  %h_vlan_proto = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %1, i32 0, i32 2, !dbg !14327
  %2 = load i16, i16* %h_vlan_proto, align 2, !dbg !14327
  %conv = zext i16 %2 to i32, !dbg !14328
  %cmp = icmp eq i32 %conv, 129, !dbg !14329
  br i1 %cmp, label %if.then, label %if.else, !dbg !14330

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %packet.addr, align 8, !dbg !14331
  %4 = bitcast i8* %3 to %struct.vlan_ethhdr*, !dbg !14331
  %h_vlan_encapsulated_proto = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %4, i32 0, i32 4, !dbg !14331
  %5 = load i16, i16* %h_vlan_encapsulated_proto, align 2, !dbg !14331
  %6 = call i1 @llvm.is.constant.i16(i16 %5), !dbg !14331
  br i1 %6, label %cond.true, label %cond.false, !dbg !14331

cond.true:                                        ; preds = %if.then
  %7 = load i8*, i8** %packet.addr, align 8, !dbg !14331
  %8 = bitcast i8* %7 to %struct.vlan_ethhdr*, !dbg !14331
  %h_vlan_encapsulated_proto2 = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %8, i32 0, i32 4, !dbg !14331
  %9 = load i16, i16* %h_vlan_encapsulated_proto2, align 2, !dbg !14331
  %conv3 = zext i16 %9 to i32, !dbg !14331
  %and = and i32 %conv3, 255, !dbg !14331
  %shl = shl i32 %and, 8, !dbg !14331
  %10 = load i8*, i8** %packet.addr, align 8, !dbg !14331
  %11 = bitcast i8* %10 to %struct.vlan_ethhdr*, !dbg !14331
  %h_vlan_encapsulated_proto4 = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %11, i32 0, i32 4, !dbg !14331
  %12 = load i16, i16* %h_vlan_encapsulated_proto4, align 2, !dbg !14331
  %conv5 = zext i16 %12 to i32, !dbg !14331
  %and6 = and i32 %conv5, 65280, !dbg !14331
  %shr = ashr i32 %and6, 8, !dbg !14331
  %or = or i32 %shl, %shr, !dbg !14331
  %conv7 = trunc i32 %or to i16, !dbg !14331
  %conv8 = zext i16 %conv7 to i32, !dbg !14331
  br label %cond.end, !dbg !14331

cond.false:                                       ; preds = %if.then
  %13 = load i8*, i8** %packet.addr, align 8, !dbg !14331
  %14 = bitcast i8* %13 to %struct.vlan_ethhdr*, !dbg !14331
  %h_vlan_encapsulated_proto9 = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %14, i32 0, i32 4, !dbg !14331
  %15 = load i16, i16* %h_vlan_encapsulated_proto9, align 2, !dbg !14331
  %call = call zeroext i16 @__fswab16(i16 zeroext %15) #16, !dbg !14331
  %conv10 = zext i16 %call to i32, !dbg !14331
  br label %cond.end, !dbg !14331

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv8, %cond.true ], [ %conv10, %cond.false ], !dbg !14331
  store i32 %cond, i32* %protolen, align 4, !dbg !14333
  store i32 4, i32* %hdrlen, align 4, !dbg !14334
  br label %if.end, !dbg !14335

if.else:                                          ; preds = %entry
  %16 = load i8*, i8** %packet.addr, align 8, !dbg !14336
  %17 = bitcast i8* %16 to %struct.ethhdr*, !dbg !14336
  %h_proto = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %17, i32 0, i32 2, !dbg !14336
  %18 = load i16, i16* %h_proto, align 1, !dbg !14336
  %19 = call i1 @llvm.is.constant.i16(i16 %18), !dbg !14336
  br i1 %19, label %cond.true11, label %cond.false23, !dbg !14336

cond.true11:                                      ; preds = %if.else
  %20 = load i8*, i8** %packet.addr, align 8, !dbg !14336
  %21 = bitcast i8* %20 to %struct.ethhdr*, !dbg !14336
  %h_proto12 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %21, i32 0, i32 2, !dbg !14336
  %22 = load i16, i16* %h_proto12, align 1, !dbg !14336
  %conv13 = zext i16 %22 to i32, !dbg !14336
  %and14 = and i32 %conv13, 255, !dbg !14336
  %shl15 = shl i32 %and14, 8, !dbg !14336
  %23 = load i8*, i8** %packet.addr, align 8, !dbg !14336
  %24 = bitcast i8* %23 to %struct.ethhdr*, !dbg !14336
  %h_proto16 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %24, i32 0, i32 2, !dbg !14336
  %25 = load i16, i16* %h_proto16, align 1, !dbg !14336
  %conv17 = zext i16 %25 to i32, !dbg !14336
  %and18 = and i32 %conv17, 65280, !dbg !14336
  %shr19 = ashr i32 %and18, 8, !dbg !14336
  %or20 = or i32 %shl15, %shr19, !dbg !14336
  %conv21 = trunc i32 %or20 to i16, !dbg !14336
  %conv22 = zext i16 %conv21 to i32, !dbg !14336
  br label %cond.end27, !dbg !14336

cond.false23:                                     ; preds = %if.else
  %26 = load i8*, i8** %packet.addr, align 8, !dbg !14336
  %27 = bitcast i8* %26 to %struct.ethhdr*, !dbg !14336
  %h_proto24 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %27, i32 0, i32 2, !dbg !14336
  %28 = load i16, i16* %h_proto24, align 1, !dbg !14336
  %call25 = call zeroext i16 @__fswab16(i16 zeroext %28) #16, !dbg !14336
  %conv26 = zext i16 %call25 to i32, !dbg !14336
  br label %cond.end27, !dbg !14336

cond.end27:                                       ; preds = %cond.false23, %cond.true11
  %cond28 = phi i32 [ %conv22, %cond.true11 ], [ %conv26, %cond.false23 ], !dbg !14336
  store i32 %cond28, i32* %protolen, align 4, !dbg !14338
  store i32 14, i32* %hdrlen, align 4, !dbg !14339
  br label %if.end

if.end:                                           ; preds = %cond.end27, %cond.end
  %29 = load i32, i32* %protolen, align 4, !dbg !14340
  %cmp29 = icmp sgt i32 %29, 1500, !dbg !14342
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14343

if.then31:                                        ; preds = %if.end
  %30 = load i32, i32* %datalen.addr, align 4, !dbg !14344
  store i32 %30, i32* %retval, align 4, !dbg !14345
  br label %return, !dbg !14345

if.end32:                                         ; preds = %if.end
  %31 = load i32, i32* %hdrlen, align 4, !dbg !14346
  %32 = load i32, i32* %protolen, align 4, !dbg !14347
  %add = add i32 %32, %31, !dbg !14347
  store i32 %add, i32* %protolen, align 4, !dbg !14347
  %33 = load i32, i32* %datalen.addr, align 4, !dbg !14348
  %cmp33 = icmp sgt i32 %33, 60, !dbg !14350
  br i1 %cmp33, label %if.then35, label %if.else40, !dbg !14351

if.then35:                                        ; preds = %if.end32
  %34 = load i32, i32* %datalen.addr, align 4, !dbg !14352
  %35 = load i32, i32* %protolen, align 4, !dbg !14355
  %cmp36 = icmp sge i32 %34, %35, !dbg !14356
  br i1 %cmp36, label %if.then38, label %if.else39, !dbg !14357

if.then38:                                        ; preds = %if.then35
  %36 = load i32, i32* %protolen, align 4, !dbg !14358
  store i32 %36, i32* %retval, align 4, !dbg !14360
  br label %return, !dbg !14360

if.else39:                                        ; preds = %if.then35
  store i32 -1, i32* %retval, align 4, !dbg !14361
  br label %return, !dbg !14361

if.else40:                                        ; preds = %if.end32
  %37 = load i32, i32* %protolen, align 4, !dbg !14363
  %cmp41 = icmp sgt i32 %37, 60, !dbg !14366
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !14367

if.then43:                                        ; preds = %if.else40
  store i32 -1, i32* %retval, align 4, !dbg !14368
  br label %return, !dbg !14368

if.end44:                                         ; preds = %if.else40
  %38 = load i32, i32* %datalen.addr, align 4, !dbg !14370
  store i32 %38, i32* %retval, align 4, !dbg !14371
  br label %return, !dbg !14371

return:                                           ; preds = %if.end44, %if.then43, %if.else39, %if.then38, %if.then31
  %39 = load i32, i32* %retval, align 4, !dbg !14372
  ret i32 %39, !dbg !14372
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #1

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vlan_hwaccel_put_tag(%struct.sk_buff* %skb, i16 zeroext %vlan_proto, i16 zeroext %vlan_tci) #2 !dbg !14373 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %vlan_proto.addr = alloca i16, align 2
  %vlan_tci.addr = alloca i16, align 2
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14376, metadata !DIExpression()), !dbg !14377
  store i16 %vlan_proto, i16* %vlan_proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_proto.addr, metadata !14378, metadata !DIExpression()), !dbg !14379
  store i16 %vlan_tci, i16* %vlan_tci.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_tci.addr, metadata !14380, metadata !DIExpression()), !dbg !14381
  %0 = load i16, i16* %vlan_proto.addr, align 2, !dbg !14382
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14383
  %vlan_proto1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 21, !dbg !14384
  store i16 %0, i16* %vlan_proto1, align 4, !dbg !14385
  %2 = load i16, i16* %vlan_tci.addr, align 2, !dbg !14386
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14387
  %vlan_tci2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 22, !dbg !14388
  store i16 %2, i16* %vlan_tci2, align 2, !dbg !14389
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14390
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 16, !dbg !14391
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !14392
  %bf.clear = and i16 %bf.load, -2, !dbg !14392
  %bf.set = or i16 %bf.clear, 1, !dbg !14392
  store i16 %bf.set, i16* %vlan_present, align 2, !dbg !14392
  ret void, !dbg !14393
}

; Function Attrs: noredzone
declare dso_local i32 @napi_gro_receive(%struct.napi_struct*, %struct.sk_buff*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #8 !dbg !14394 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14398, metadata !DIExpression()), !dbg !14399
  %0 = load i16, i16* %val.addr, align 2, !dbg !14400
  %conv = zext i16 %0 to i32, !dbg !14400
  %and = and i32 %conv, 255, !dbg !14400
  %shl = shl i32 %and, 8, !dbg !14400
  %1 = load i16, i16* %val.addr, align 2, !dbg !14400
  %conv1 = zext i16 %1 to i32, !dbg !14400
  %and2 = and i32 %conv1, 65280, !dbg !14400
  %shr = ashr i32 %and2, 8, !dbg !14400
  %or = or i32 %shl, %shr, !dbg !14400
  %conv3 = trunc i32 %or to i16, !dbg !14400
  ret i16 %conv3, !dbg !14401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !14402 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !14403, metadata !DIExpression()), !dbg !14405
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !14406, metadata !DIExpression()), !dbg !14405
  %0 = load i64, i64* %__edi, align 8, !dbg !14405
  store i64 %0, i64* %__edi, align 8, !dbg !14405
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !14407, metadata !DIExpression()), !dbg !14405
  %1 = load i64, i64* %__esi, align 8, !dbg !14405
  store i64 %1, i64* %__esi, align 8, !dbg !14405
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !14408, metadata !DIExpression()), !dbg !14405
  %2 = load i64, i64* %__edx, align 8, !dbg !14405
  store i64 %2, i64* %__edx, align 8, !dbg !14405
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !14409, metadata !DIExpression()), !dbg !14405
  %3 = load i64, i64* %__ecx, align 8, !dbg !14405
  store i64 %3, i64* %__ecx, align 8, !dbg !14405
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !14410, metadata !DIExpression()), !dbg !14405
  %4 = load i64, i64* %__eax, align 8, !dbg !14405
  store i64 %4, i64* %__eax, align 8, !dbg !14405
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !14405
  %6 = call i64 @llvm.read_register.i64(metadata !8229), !dbg !14411
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !14411, !srcloc !14414
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !14411
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !14411
  store i64 %asmresult, i64* %__eax, align 8, !dbg !14411
  call void @llvm.write_register.i64(metadata !8229, i64 %asmresult1), !dbg !14411
  %8 = load i64, i64* %__eax, align 8, !dbg !14411
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !14415, metadata !DIExpression()), !dbg !14417
  store i64 -1, i64* %__mask, align 8, !dbg !14417
  %9 = load i64, i64* %__mask, align 8, !dbg !14417
  store i64 %9, i64* %tmp, align 8, !dbg !14417
  %10 = load i64, i64* %tmp, align 8, !dbg !14417
  %and = and i64 %8, %10, !dbg !14411
  store i64 %and, i64* %__ret, align 8, !dbg !14411
  %11 = load i64, i64* %__ret, align 8, !dbg !14405
  store i64 %11, i64* %tmp2, align 8, !dbg !14418
  %12 = load i64, i64* %tmp2, align 8, !dbg !14405
  ret i64 %12, !dbg !14419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !14420 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !14421, metadata !DIExpression()), !dbg !14423
  %0 = load i64, i64* %__edi, align 8, !dbg !14423
  store i64 %0, i64* %__edi, align 8, !dbg !14423
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !14424, metadata !DIExpression()), !dbg !14423
  %1 = load i64, i64* %__esi, align 8, !dbg !14423
  store i64 %1, i64* %__esi, align 8, !dbg !14423
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !14425, metadata !DIExpression()), !dbg !14423
  %2 = load i64, i64* %__edx, align 8, !dbg !14423
  store i64 %2, i64* %__edx, align 8, !dbg !14423
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !14426, metadata !DIExpression()), !dbg !14423
  %3 = load i64, i64* %__ecx, align 8, !dbg !14423
  store i64 %3, i64* %__ecx, align 8, !dbg !14423
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !14427, metadata !DIExpression()), !dbg !14423
  %4 = load i64, i64* %__eax, align 8, !dbg !14423
  store i64 %4, i64* %__eax, align 8, !dbg !14423
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !14423
  %6 = call i64 @llvm.read_register.i64(metadata !8229), !dbg !14423
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !14423, !srcloc !14428
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !14423
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !14423
  store i64 %asmresult, i64* %__eax, align 8, !dbg !14423
  call void @llvm.write_register.i64(metadata !8229, i64 %asmresult1), !dbg !14423
  ret void, !dbg !14429
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !14430 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !14433, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !14435, metadata !DIExpression()), !dbg !14437
  %0 = load i64, i64* %__edi, align 8, !dbg !14437
  store i64 %0, i64* %__edi, align 8, !dbg !14437
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !14438, metadata !DIExpression()), !dbg !14437
  %1 = load i64, i64* %__esi, align 8, !dbg !14437
  store i64 %1, i64* %__esi, align 8, !dbg !14437
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !14439, metadata !DIExpression()), !dbg !14437
  %2 = load i64, i64* %__edx, align 8, !dbg !14437
  store i64 %2, i64* %__edx, align 8, !dbg !14437
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !14440, metadata !DIExpression()), !dbg !14437
  %3 = load i64, i64* %__ecx, align 8, !dbg !14437
  store i64 %3, i64* %__ecx, align 8, !dbg !14437
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !14441, metadata !DIExpression()), !dbg !14437
  %4 = load i64, i64* %__eax, align 8, !dbg !14437
  store i64 %4, i64* %__eax, align 8, !dbg !14437
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !14437
  %6 = call i64 @llvm.read_register.i64(metadata !8229), !dbg !14437
  %7 = load i64, i64* %f.addr, align 8, !dbg !14437
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !14437, !srcloc !14442
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !14437
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !14437
  store i64 %asmresult, i64* %__eax, align 8, !dbg !14437
  call void @llvm.write_register.i64(metadata !8229, i64 %asmresult1), !dbg !14437
  ret void, !dbg !14443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_tx_done_optimized(%struct.net_device* %dev, i32 %limit) #2 !dbg !14444 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %limit.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %flags = alloca i32, align 4
  %tx_work = alloca i32, align 4
  %orig_get_tx = alloca %struct.ring_desc_ex*, align 8
  %bytes_cleaned = alloca i64, align 8
  %len = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %__vpp_verify33 = alloca i8*, align 8
  %pao_ID__36 = alloca i32, align 4
  %pto_val__ = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14445, metadata !DIExpression()), !dbg !14446
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !14447, metadata !DIExpression()), !dbg !14448
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !14449, metadata !DIExpression()), !dbg !14450
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14451
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !14452
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !14452
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !14450
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14453, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.declare(metadata i32* %tx_work, metadata !14455, metadata !DIExpression()), !dbg !14456
  store i32 0, i32* %tx_work, align 4, !dbg !14456
  call void @llvm.dbg.declare(metadata %struct.ring_desc_ex** %orig_get_tx, metadata !14457, metadata !DIExpression()), !dbg !14458
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14459
  %get_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 53, !dbg !14460
  %ex = bitcast %union.ring_type* %get_tx to %struct.ring_desc_ex**, !dbg !14461
  %3 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !14461
  store %struct.ring_desc_ex* %3, %struct.ring_desc_ex** %orig_get_tx, align 8, !dbg !14458
  call void @llvm.dbg.declare(metadata i64* %bytes_cleaned, metadata !14462, metadata !DIExpression()), !dbg !14463
  store i64 0, i64* %bytes_cleaned, align 8, !dbg !14463
  br label %while.cond, !dbg !14464

while.cond:                                       ; preds = %if.end90, %entry
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14465
  %get_tx1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 53, !dbg !14466
  %ex2 = bitcast %union.ring_type* %get_tx1 to %struct.ring_desc_ex**, !dbg !14467
  %5 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex2, align 8, !dbg !14467
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14468
  %put_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 54, !dbg !14469
  %ex3 = bitcast %union.ring_type* %put_tx to %struct.ring_desc_ex**, !dbg !14470
  %7 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex3, align 8, !dbg !14470
  %cmp = icmp ne %struct.ring_desc_ex* %5, %7, !dbg !14471
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !14472

land.lhs.true:                                    ; preds = %while.cond
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14473
  %get_tx4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 53, !dbg !14473
  %ex5 = bitcast %union.ring_type* %get_tx4 to %struct.ring_desc_ex**, !dbg !14473
  %9 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex5, align 8, !dbg !14473
  %flaglen = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %9, i32 0, i32 3, !dbg !14473
  %10 = load i32, i32* %flaglen, align 4, !dbg !14473
  store i32 %10, i32* %flags, align 4, !dbg !14474
  %and = and i32 %10, -2147483648, !dbg !14475
  %tobool = icmp ne i32 %and, 0, !dbg !14475
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !14476

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* %tx_work, align 4, !dbg !14477
  %12 = load i32, i32* %limit.addr, align 4, !dbg !14478
  %cmp6 = icmp slt i32 %11, %12, !dbg !14479
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp6, %land.rhs ], !dbg !14480
  br i1 %13, label %while.body, label %while.end, !dbg !14464

while.body:                                       ; preds = %land.end
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14481
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14483
  %get_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 56, !dbg !14484
  %16 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx, align 8, !dbg !14484
  call void @nv_unmap_txskb(%struct.fe_priv* %14, %struct.nv_skb_map* %16) #13, !dbg !14485
  %17 = load i32, i32* %flags, align 4, !dbg !14486
  %and7 = and i32 %17, 536870912, !dbg !14488
  %tobool8 = icmp ne i32 %and7, 0, !dbg !14488
  br i1 %tobool8, label %if.then, label %if.end61, !dbg !14489

if.then:                                          ; preds = %while.body
  %18 = load i32, i32* %flags, align 4, !dbg !14490
  %and9 = and i32 %18, 1073741824, !dbg !14490
  %tobool10 = icmp ne i32 %and9, 0, !dbg !14490
  %lnot = xor i1 %tobool10, true, !dbg !14490
  %lnot11 = xor i1 %lnot, true, !dbg !14490
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !14490
  %conv = sext i32 %lnot.ext to i64, !dbg !14490
  %tobool12 = icmp ne i64 %conv, 0, !dbg !14490
  br i1 %tobool12, label %if.then13, label %if.else24, !dbg !14493

if.then13:                                        ; preds = %if.then
  %19 = load i32, i32* %flags, align 4, !dbg !14494
  %and14 = and i32 %19, 262144, !dbg !14497
  %tobool15 = icmp ne i32 %and14, 0, !dbg !14497
  br i1 %tobool15, label %land.lhs.true16, label %if.end23, !dbg !14498

land.lhs.true16:                                  ; preds = %if.then13
  %20 = load i32, i32* %flags, align 4, !dbg !14499
  %and17 = and i32 %20, 7864320, !dbg !14500
  %tobool18 = icmp ne i32 %and17, 0, !dbg !14500
  br i1 %tobool18, label %if.end23, label %if.then19, !dbg !14501

if.then19:                                        ; preds = %land.lhs.true16
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14502
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 27, !dbg !14505
  %22 = load i32, i32* %driver_data, align 4, !dbg !14505
  %and20 = and i32 %22, 2097152, !dbg !14506
  %tobool21 = icmp ne i32 %and20, 0, !dbg !14506
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !14507

if.then22:                                        ; preds = %if.then19
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14508
  call void @nv_gear_backoff_reseed(%struct.net_device* %23) #13, !dbg !14509
  br label %if.end, !dbg !14509

if.else:                                          ; preds = %if.then19
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14510
  call void @nv_legacybackoff_reseed(%struct.net_device* %24) #13, !dbg !14511
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then22
  br label %if.end23, !dbg !14512

if.end23:                                         ; preds = %if.end, %land.lhs.true16, %if.then13
  br label %if.end49, !dbg !14513

if.else24:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14514, metadata !DIExpression()), !dbg !14516
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14517
  %swstats_tx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 68, !dbg !14518
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp) #13, !dbg !14519
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !14520
  br label %do.body, !dbg !14520

do.body:                                          ; preds = %if.else24
  br label %do.body25, !dbg !14522

do.body25:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !14524, metadata !DIExpression()), !dbg !14526
  store i8* null, i8** %__vpp_verify, align 8, !dbg !14526
  %26 = load i8*, i8** %__vpp_verify, align 8, !dbg !14526
  br label %do.end, !dbg !14526

do.end:                                           ; preds = %do.body25
  br label %do.body26, !dbg !14522

do.body26:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !14527, metadata !DIExpression()), !dbg !14529
  store i32 1, i32* %pao_ID__, align 4, !dbg !14529
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14530
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 50, !dbg !14530
  %28 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !14530
  %stat_tx_packets = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %28, i32 0, i32 4, !dbg !14530
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_packets, i64* %stat_tx_packets) #10, !dbg !14530, !srcloc !14533
  br label %do.end27, !dbg !14529

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !14522

do.end28:                                         ; preds = %do.end27
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14534
  %get_tx_ctx29 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 56, !dbg !14535
  %30 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx29, align 8, !dbg !14535
  %skb = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %30, i32 0, i32 0, !dbg !14536
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14536
  %len30 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 5, !dbg !14537
  %32 = load i32, i32* %len30, align 8, !dbg !14537
  store i32 %32, i32* %len, align 4, !dbg !14538
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !14539
  br label %do.body31, !dbg !14539

do.body31:                                        ; preds = %do.end28
  br label %do.body32, !dbg !14541

do.body32:                                        ; preds = %do.body31
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify33, metadata !14543, metadata !DIExpression()), !dbg !14545
  store i8* null, i8** %__vpp_verify33, align 8, !dbg !14545
  %33 = load i8*, i8** %__vpp_verify33, align 8, !dbg !14545
  br label %do.end34, !dbg !14545

do.end34:                                         ; preds = %do.body32
  br label %do.body35, !dbg !14541

do.body35:                                        ; preds = %do.end34
  call void @llvm.dbg.declare(metadata i32* %pao_ID__36, metadata !14546, metadata !DIExpression()), !dbg !14548
  %34 = load i32, i32* %len, align 4, !dbg !14548
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !14548
  br i1 %35, label %land.lhs.true37, label %cond.false, !dbg !14548

land.lhs.true37:                                  ; preds = %do.body35
  %36 = load i32, i32* %len, align 4, !dbg !14548
  %cmp38 = icmp eq i32 %36, 1, !dbg !14548
  br i1 %cmp38, label %cond.true, label %lor.lhs.false, !dbg !14548

lor.lhs.false:                                    ; preds = %land.lhs.true37
  %37 = load i32, i32* %len, align 4, !dbg !14548
  %cmp40 = icmp eq i32 %37, -1, !dbg !14548
  br i1 %cmp40, label %cond.true, label %cond.false, !dbg !14548

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true37
  %38 = load i32, i32* %len, align 4, !dbg !14548
  br label %cond.end, !dbg !14548

cond.false:                                       ; preds = %lor.lhs.false, %do.body35
  br label %cond.end, !dbg !14548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %38, %cond.true ], [ 0, %cond.false ], !dbg !14548
  store i32 %cond, i32* %pao_ID__36, align 4, !dbg !14548
  br label %do.body42, !dbg !14549

do.body42:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %pto_val__, metadata !14552, metadata !DIExpression()), !dbg !14554
  %39 = load i32, i32* %len, align 4, !dbg !14554
  %conv43 = zext i32 %39 to i64, !dbg !14554
  store i64 %conv43, i64* %pto_val__, align 8, !dbg !14554
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14554
  %txrx_stats44 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 50, !dbg !14554
  %41 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats44, align 8, !dbg !14554
  %stat_tx_bytes = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %41, i32 0, i32 5, !dbg !14554
  %42 = load i64, i64* %pto_val__, align 8, !dbg !14554
  call void asm "addq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_bytes, i64 %42, i64* %stat_tx_bytes) #10, !dbg !14554, !srcloc !14555
  br label %do.end45, !dbg !14554

do.end45:                                         ; preds = %do.body42
  br label %do.end46, !dbg !14548

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !14541

do.end47:                                         ; preds = %do.end46
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14556
  %swstats_tx_syncp48 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 68, !dbg !14557
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp48) #13, !dbg !14558
  br label %if.end49

if.end49:                                         ; preds = %do.end47, %if.end23
  %44 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14559
  %get_tx_ctx50 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %44, i32 0, i32 56, !dbg !14560
  %45 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx50, align 8, !dbg !14560
  %skb51 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %45, i32 0, i32 0, !dbg !14561
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb51, align 8, !dbg !14561
  %len52 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %46, i32 0, i32 5, !dbg !14562
  %47 = load i32, i32* %len52, align 8, !dbg !14562
  %conv53 = zext i32 %47 to i64, !dbg !14559
  %48 = load i64, i64* %bytes_cleaned, align 8, !dbg !14563
  %add = add i64 %48, %conv53, !dbg !14563
  store i64 %add, i64* %bytes_cleaned, align 8, !dbg !14563
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14564
  %get_tx_ctx54 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 56, !dbg !14565
  %50 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx54, align 8, !dbg !14565
  %skb55 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %50, i32 0, i32 0, !dbg !14566
  %51 = load %struct.sk_buff*, %struct.sk_buff** %skb55, align 8, !dbg !14566
  call void @dev_kfree_skb_any(%struct.sk_buff* %51) #13, !dbg !14567
  %52 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14568
  %get_tx_ctx56 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %52, i32 0, i32 56, !dbg !14569
  %53 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx56, align 8, !dbg !14569
  %skb57 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %53, i32 0, i32 0, !dbg !14570
  store %struct.sk_buff* null, %struct.sk_buff** %skb57, align 8, !dbg !14571
  %54 = load i32, i32* %tx_work, align 4, !dbg !14572
  %inc = add i32 %54, 1, !dbg !14572
  store i32 %inc, i32* %tx_work, align 4, !dbg !14572
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14573
  %tx_limit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 63, !dbg !14575
  %56 = load i32, i32* %tx_limit, align 8, !dbg !14575
  %tobool58 = icmp ne i32 %56, 0, !dbg !14573
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !14576

if.then59:                                        ; preds = %if.end49
  %57 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14577
  call void @nv_tx_flip_ownership(%struct.net_device* %57) #13, !dbg !14578
  br label %if.end60, !dbg !14578

if.end60:                                         ; preds = %if.then59, %if.end49
  br label %if.end61, !dbg !14579

if.end61:                                         ; preds = %if.end60, %while.body
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14580
  %get_tx62 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 53, !dbg !14580
  %ex63 = bitcast %union.ring_type* %get_tx62 to %struct.ring_desc_ex**, !dbg !14580
  %59 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex63, align 8, !dbg !14580
  %incdec.ptr = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %59, i32 1, !dbg !14580
  store %struct.ring_desc_ex* %incdec.ptr, %struct.ring_desc_ex** %ex63, align 8, !dbg !14580
  %60 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14580
  %last_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %60, i32 0, i32 55, !dbg !14580
  %ex64 = bitcast %union.ring_type* %last_tx to %struct.ring_desc_ex**, !dbg !14580
  %61 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex64, align 8, !dbg !14580
  %cmp65 = icmp eq %struct.ring_desc_ex* %59, %61, !dbg !14580
  %lnot67 = xor i1 %cmp65, true, !dbg !14580
  %lnot69 = xor i1 %lnot67, true, !dbg !14580
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !14580
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !14580
  %tobool72 = icmp ne i64 %conv71, 0, !dbg !14580
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !14582

if.then73:                                        ; preds = %if.end61
  %62 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14583
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %62, i32 0, i32 60, !dbg !14584
  %ex74 = bitcast %union.ring_type* %tx_ring to %struct.ring_desc_ex**, !dbg !14585
  %63 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex74, align 8, !dbg !14585
  %64 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14586
  %get_tx75 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %64, i32 0, i32 53, !dbg !14587
  %ex76 = bitcast %union.ring_type* %get_tx75 to %struct.ring_desc_ex**, !dbg !14588
  store %struct.ring_desc_ex* %63, %struct.ring_desc_ex** %ex76, align 8, !dbg !14589
  br label %if.end77, !dbg !14586

if.end77:                                         ; preds = %if.then73, %if.end61
  %65 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14590
  %get_tx_ctx78 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %65, i32 0, i32 56, !dbg !14590
  %66 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx78, align 8, !dbg !14590
  %incdec.ptr79 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %66, i32 1, !dbg !14590
  store %struct.nv_skb_map* %incdec.ptr79, %struct.nv_skb_map** %get_tx_ctx78, align 8, !dbg !14590
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14590
  %last_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 58, !dbg !14590
  %68 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx, align 8, !dbg !14590
  %cmp80 = icmp eq %struct.nv_skb_map* %66, %68, !dbg !14590
  %lnot82 = xor i1 %cmp80, true, !dbg !14590
  %lnot84 = xor i1 %lnot82, true, !dbg !14590
  %lnot.ext85 = zext i1 %lnot84 to i32, !dbg !14590
  %conv86 = sext i32 %lnot.ext85 to i64, !dbg !14590
  %tobool87 = icmp ne i64 %conv86, 0, !dbg !14590
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !14592

if.then88:                                        ; preds = %if.end77
  %69 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14593
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %69, i32 0, i32 59, !dbg !14594
  %70 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb, align 8, !dbg !14594
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14595
  %get_tx_ctx89 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 56, !dbg !14596
  store %struct.nv_skb_map* %70, %struct.nv_skb_map** %get_tx_ctx89, align 8, !dbg !14597
  br label %if.end90, !dbg !14595

if.end90:                                         ; preds = %if.then88, %if.end77
  br label %while.cond, !dbg !14464, !llvm.loop !14598

while.end:                                        ; preds = %land.end
  %72 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14600
  %dev91 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %72, i32 0, i32 1, !dbg !14601
  %73 = load %struct.net_device*, %struct.net_device** %dev91, align 8, !dbg !14601
  %74 = load i32, i32* %tx_work, align 4, !dbg !14602
  %75 = load i64, i64* %bytes_cleaned, align 8, !dbg !14603
  %conv92 = trunc i64 %75 to i32, !dbg !14603
  call void @netdev_completed_queue(%struct.net_device* %73, i32 %74, i32 %conv92) #13, !dbg !14604
  %76 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14605
  %tx_stop = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %76, i32 0, i32 67, !dbg !14605
  %77 = load i32, i32* %tx_stop, align 8, !dbg !14605
  %cmp93 = icmp eq i32 %77, 1, !dbg !14605
  br i1 %cmp93, label %land.rhs95, label %land.end100, !dbg !14605

land.rhs95:                                       ; preds = %while.end
  %78 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14605
  %get_tx96 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %78, i32 0, i32 53, !dbg !14605
  %ex97 = bitcast %union.ring_type* %get_tx96 to %struct.ring_desc_ex**, !dbg !14605
  %79 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex97, align 8, !dbg !14605
  %80 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %orig_get_tx, align 8, !dbg !14605
  %cmp98 = icmp ne %struct.ring_desc_ex* %79, %80, !dbg !14605
  br label %land.end100

land.end100:                                      ; preds = %land.rhs95, %while.end
  %81 = phi i1 [ false, %while.end ], [ %cmp98, %land.rhs95 ], !dbg !14607
  %lnot101 = xor i1 %81, true, !dbg !14605
  %lnot103 = xor i1 %lnot101, true, !dbg !14605
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !14605
  %conv105 = sext i32 %lnot.ext104 to i64, !dbg !14605
  %tobool106 = icmp ne i64 %conv105, 0, !dbg !14605
  br i1 %tobool106, label %if.then107, label %if.end109, !dbg !14608

if.then107:                                       ; preds = %land.end100
  %82 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14609
  %tx_stop108 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %82, i32 0, i32 67, !dbg !14611
  store i32 0, i32* %tx_stop108, align 8, !dbg !14612
  %83 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14613
  call void @netif_wake_queue(%struct.net_device* %83) #13, !dbg !14614
  br label %if.end109, !dbg !14615

if.end109:                                        ; preds = %if.then107, %land.end100
  %84 = load i32, i32* %tx_work, align 4, !dbg !14616
  ret i32 %84, !dbg !14617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_gear_backoff_reseed(%struct.net_device* %dev) #2 !dbg !14618 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %base = alloca i8*, align 8
  %miniseed1 = alloca i32, align 4
  %miniseed2 = alloca i32, align 4
  %miniseed2_reversed = alloca i32, align 4
  %miniseed3 = alloca i32, align 4
  %miniseed3_reversed = alloca i32, align 4
  %temp = alloca i32, align 4
  %seedset = alloca i32, align 4
  %combinedSeed = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14619, metadata !DIExpression()), !dbg !14620
  call void @llvm.dbg.declare(metadata i8** %base, metadata !14621, metadata !DIExpression()), !dbg !14622
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14623
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !14624
  store i8* %call, i8** %base, align 8, !dbg !14622
  call void @llvm.dbg.declare(metadata i32* %miniseed1, metadata !14625, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.declare(metadata i32* %miniseed2, metadata !14627, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.declare(metadata i32* %miniseed2_reversed, metadata !14629, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.declare(metadata i32* %miniseed3, metadata !14631, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.declare(metadata i32* %miniseed3_reversed, metadata !14633, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !14635, metadata !DIExpression()), !dbg !14636
  call void @llvm.dbg.declare(metadata i32* %seedset, metadata !14637, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.declare(metadata i32* %combinedSeed, metadata !14639, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14641, metadata !DIExpression()), !dbg !14642
  %1 = bitcast i32* %miniseed1 to i8*, !dbg !14643
  call void @get_random_bytes(i8* %1, i32 4) #13, !dbg !14644
  %2 = load i32, i32* %miniseed1, align 4, !dbg !14645
  %and = and i32 %2, 4095, !dbg !14645
  store i32 %and, i32* %miniseed1, align 4, !dbg !14645
  %3 = load i32, i32* %miniseed1, align 4, !dbg !14646
  %cmp = icmp eq i32 %3, 0, !dbg !14648
  br i1 %cmp, label %if.then, label %if.end, !dbg !14649

if.then:                                          ; preds = %entry
  store i32 2748, i32* %miniseed1, align 4, !dbg !14650
  br label %if.end, !dbg !14651

if.end:                                           ; preds = %if.then, %entry
  %4 = bitcast i32* %miniseed2 to i8*, !dbg !14652
  call void @get_random_bytes(i8* %4, i32 4) #13, !dbg !14653
  %5 = load i32, i32* %miniseed2, align 4, !dbg !14654
  %and1 = and i32 %5, 4095, !dbg !14654
  store i32 %and1, i32* %miniseed2, align 4, !dbg !14654
  %6 = load i32, i32* %miniseed2, align 4, !dbg !14655
  %cmp2 = icmp eq i32 %6, 0, !dbg !14657
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14658

if.then3:                                         ; preds = %if.end
  store i32 2748, i32* %miniseed2, align 4, !dbg !14659
  br label %if.end4, !dbg !14660

if.end4:                                          ; preds = %if.then3, %if.end
  %7 = load i32, i32* %miniseed2, align 4, !dbg !14661
  %and5 = and i32 %7, 3840, !dbg !14662
  %shr = lshr i32 %and5, 8, !dbg !14663
  %8 = load i32, i32* %miniseed2, align 4, !dbg !14664
  %and6 = and i32 %8, 240, !dbg !14665
  %or = or i32 %shr, %and6, !dbg !14666
  %9 = load i32, i32* %miniseed2, align 4, !dbg !14667
  %and7 = and i32 %9, 15, !dbg !14668
  %shl = shl i32 %and7, 8, !dbg !14669
  %or8 = or i32 %or, %shl, !dbg !14670
  store i32 %or8, i32* %miniseed2_reversed, align 4, !dbg !14671
  %10 = bitcast i32* %miniseed3 to i8*, !dbg !14672
  call void @get_random_bytes(i8* %10, i32 4) #13, !dbg !14673
  %11 = load i32, i32* %miniseed3, align 4, !dbg !14674
  %and9 = and i32 %11, 4095, !dbg !14674
  store i32 %and9, i32* %miniseed3, align 4, !dbg !14674
  %12 = load i32, i32* %miniseed3, align 4, !dbg !14675
  %cmp10 = icmp eq i32 %12, 0, !dbg !14677
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !14678

if.then11:                                        ; preds = %if.end4
  store i32 2748, i32* %miniseed3, align 4, !dbg !14679
  br label %if.end12, !dbg !14680

if.end12:                                         ; preds = %if.then11, %if.end4
  %13 = load i32, i32* %miniseed3, align 4, !dbg !14681
  %and13 = and i32 %13, 3840, !dbg !14682
  %shr14 = lshr i32 %and13, 8, !dbg !14683
  %14 = load i32, i32* %miniseed3, align 4, !dbg !14684
  %and15 = and i32 %14, 240, !dbg !14685
  %or16 = or i32 %shr14, %and15, !dbg !14686
  %15 = load i32, i32* %miniseed3, align 4, !dbg !14687
  %and17 = and i32 %15, 15, !dbg !14688
  %shl18 = shl i32 %and17, 8, !dbg !14689
  %or19 = or i32 %or16, %shl18, !dbg !14690
  store i32 %or19, i32* %miniseed3_reversed, align 4, !dbg !14691
  %16 = load i32, i32* %miniseed1, align 4, !dbg !14692
  %17 = load i32, i32* %miniseed2_reversed, align 4, !dbg !14693
  %xor = xor i32 %16, %17, !dbg !14694
  %shl20 = shl i32 %xor, 12, !dbg !14695
  %18 = load i32, i32* %miniseed2, align 4, !dbg !14696
  %19 = load i32, i32* %miniseed3_reversed, align 4, !dbg !14697
  %xor21 = xor i32 %18, %19, !dbg !14698
  %or22 = or i32 %shl20, %xor21, !dbg !14699
  store i32 %or22, i32* %combinedSeed, align 4, !dbg !14700
  %20 = load i32, i32* %combinedSeed, align 4, !dbg !14701
  %and23 = and i32 %20, 1023, !dbg !14703
  %cmp24 = icmp eq i32 %and23, 0, !dbg !14704
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !14705

if.then25:                                        ; preds = %if.end12
  %21 = load i32, i32* %combinedSeed, align 4, !dbg !14706
  %or26 = or i32 %21, 8, !dbg !14706
  store i32 %or26, i32* %combinedSeed, align 4, !dbg !14706
  br label %if.end27, !dbg !14707

if.end27:                                         ; preds = %if.then25, %if.end12
  %22 = load i32, i32* %combinedSeed, align 4, !dbg !14708
  %and28 = and i32 %22, 4190208, !dbg !14710
  %cmp29 = icmp eq i32 %and28, 0, !dbg !14711
  br i1 %cmp29, label %if.then30, label %if.end32, !dbg !14712

if.then30:                                        ; preds = %if.end27
  %23 = load i32, i32* %combinedSeed, align 4, !dbg !14713
  %or31 = or i32 %23, 32768, !dbg !14713
  store i32 %or31, i32* %combinedSeed, align 4, !dbg !14713
  br label %if.end32, !dbg !14714

if.end32:                                         ; preds = %if.then30, %if.end27
  store i32 1879048192, i32* %temp, align 4, !dbg !14715
  %24 = load i32, i32* %combinedSeed, align 4, !dbg !14716
  %and33 = and i32 %24, 1023, !dbg !14717
  %25 = load i32, i32* %temp, align 4, !dbg !14718
  %or34 = or i32 %25, %and33, !dbg !14718
  store i32 %or34, i32* %temp, align 4, !dbg !14718
  %26 = load i32, i32* %combinedSeed, align 4, !dbg !14719
  %shr35 = lshr i32 %26, 12, !dbg !14720
  %27 = load i32, i32* %temp, align 4, !dbg !14721
  %or36 = or i32 %27, %shr35, !dbg !14721
  store i32 %or36, i32* %temp, align 4, !dbg !14721
  %28 = load i32, i32* %temp, align 4, !dbg !14722
  %29 = load i8*, i8** %base, align 8, !dbg !14723
  %add.ptr = getelementptr i8, i8* %29, i64 196, !dbg !14724
  call void @writel(i32 %28, i8* %add.ptr) #13, !dbg !14725
  %30 = bitcast i32* %seedset to i8*, !dbg !14726
  call void @get_random_bytes(i8* %30, i32 4) #13, !dbg !14727
  %31 = load i32, i32* %seedset, align 4, !dbg !14728
  %rem = urem i32 %31, 8, !dbg !14729
  store i32 %rem, i32* %seedset, align 4, !dbg !14730
  store i32 1, i32* %i, align 4, !dbg !14731
  br label %for.cond, !dbg !14733

for.cond:                                         ; preds = %for.inc, %if.end32
  %32 = load i32, i32* %i, align 4, !dbg !14734
  %cmp37 = icmp sle i32 %32, 15, !dbg !14736
  br i1 %cmp37, label %for.body, label %for.end, !dbg !14737

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %i, align 4, !dbg !14738
  %shl38 = shl i32 %33, 24, !dbg !14740
  %or39 = or i32 1879048192, %shl38, !dbg !14741
  store i32 %or39, i32* %temp, align 4, !dbg !14742
  %34 = load i32, i32* %seedset, align 4, !dbg !14743
  %idxprom = zext i32 %34 to i64, !dbg !14744
  %arrayidx = getelementptr [8 x [15 x i32]], [8 x [15 x i32]]* @main_seedset, i64 0, i64 %idxprom, !dbg !14744
  %35 = load i32, i32* %i, align 4, !dbg !14745
  %sub = sub i32 %35, 1, !dbg !14746
  %idxprom40 = sext i32 %sub to i64, !dbg !14744
  %arrayidx41 = getelementptr [15 x i32], [15 x i32]* %arrayidx, i64 0, i64 %idxprom40, !dbg !14744
  %36 = load i32, i32* %arrayidx41, align 4, !dbg !14744
  %and42 = and i32 %36, 1023, !dbg !14747
  %37 = load i32, i32* %temp, align 4, !dbg !14748
  %or43 = or i32 %37, %and42, !dbg !14748
  store i32 %or43, i32* %temp, align 4, !dbg !14748
  %38 = load i32, i32* %seedset, align 4, !dbg !14749
  %idxprom44 = zext i32 %38 to i64, !dbg !14750
  %arrayidx45 = getelementptr [8 x [15 x i32]], [8 x [15 x i32]]* @gear_seedset, i64 0, i64 %idxprom44, !dbg !14750
  %39 = load i32, i32* %i, align 4, !dbg !14751
  %sub46 = sub i32 %39, 1, !dbg !14752
  %idxprom47 = sext i32 %sub46 to i64, !dbg !14750
  %arrayidx48 = getelementptr [15 x i32], [15 x i32]* %arrayidx45, i64 0, i64 %idxprom47, !dbg !14750
  %40 = load i32, i32* %arrayidx48, align 4, !dbg !14750
  %and49 = and i32 %40, 1023, !dbg !14753
  %shl50 = shl i32 %and49, 12, !dbg !14754
  %41 = load i32, i32* %temp, align 4, !dbg !14755
  %or51 = or i32 %41, %shl50, !dbg !14755
  store i32 %or51, i32* %temp, align 4, !dbg !14755
  %42 = load i32, i32* %temp, align 4, !dbg !14756
  %43 = load i8*, i8** %base, align 8, !dbg !14757
  %add.ptr52 = getelementptr i8, i8* %43, i64 196, !dbg !14758
  call void @writel(i32 %42, i8* %add.ptr52) #13, !dbg !14759
  br label %for.inc, !dbg !14760

for.inc:                                          ; preds = %for.body
  %44 = load i32, i32* %i, align 4, !dbg !14761
  %inc = add i32 %44, 1, !dbg !14761
  store i32 %inc, i32* %i, align 4, !dbg !14761
  br label %for.cond, !dbg !14762, !llvm.loop !14763

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_legacybackoff_reseed(%struct.net_device* %dev) #2 !dbg !14766 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %base = alloca i8*, align 8
  %reg = alloca i32, align 4
  %low = alloca i32, align 4
  %tx_status = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14767, metadata !DIExpression()), !dbg !14768
  call void @llvm.dbg.declare(metadata i8** %base, metadata !14769, metadata !DIExpression()), !dbg !14770
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14771
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !14772
  store i8* %call, i8** %base, align 8, !dbg !14770
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14773, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.declare(metadata i32* %low, metadata !14775, metadata !DIExpression()), !dbg !14776
  call void @llvm.dbg.declare(metadata i32* %tx_status, metadata !14777, metadata !DIExpression()), !dbg !14778
  store i32 0, i32* %tx_status, align 4, !dbg !14778
  %1 = load i8*, i8** %base, align 8, !dbg !14779
  %add.ptr = getelementptr i8, i8* %1, i64 156, !dbg !14780
  %call1 = call i32 @readl(i8* %add.ptr) #13, !dbg !14781
  %and = and i32 %call1, -256, !dbg !14782
  store i32 %and, i32* %reg, align 4, !dbg !14783
  %2 = bitcast i32* %low to i8*, !dbg !14784
  call void @get_random_bytes(i8* %2, i32 4) #13, !dbg !14785
  %3 = load i32, i32* %low, align 4, !dbg !14786
  %and2 = and i32 %3, 255, !dbg !14787
  %4 = load i32, i32* %reg, align 4, !dbg !14788
  %or = or i32 %4, %and2, !dbg !14788
  store i32 %or, i32* %reg, align 4, !dbg !14788
  %5 = load i8*, i8** %base, align 8, !dbg !14789
  %add.ptr3 = getelementptr i8, i8* %5, i64 132, !dbg !14790
  %call4 = call i32 @readl(i8* %add.ptr3) #13, !dbg !14791
  %and5 = and i32 %call4, 1, !dbg !14792
  store i32 %and5, i32* %tx_status, align 4, !dbg !14793
  %6 = load i32, i32* %tx_status, align 4, !dbg !14794
  %tobool = icmp ne i32 %6, 0, !dbg !14794
  br i1 %tobool, label %if.then, label %if.end, !dbg !14796

if.then:                                          ; preds = %entry
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14797
  call void @nv_stop_tx(%struct.net_device* %7) #13, !dbg !14798
  br label %if.end, !dbg !14798

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14799
  call void @nv_stop_rx(%struct.net_device* %8) #13, !dbg !14800
  %9 = load i32, i32* %reg, align 4, !dbg !14801
  %10 = load i8*, i8** %base, align 8, !dbg !14802
  %add.ptr6 = getelementptr i8, i8* %10, i64 156, !dbg !14803
  call void @writel(i32 %9, i8* %add.ptr6) #13, !dbg !14804
  %11 = load i32, i32* %tx_status, align 4, !dbg !14805
  %tobool7 = icmp ne i32 %11, 0, !dbg !14805
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !14807

if.then8:                                         ; preds = %if.end
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14808
  call void @nv_start_tx(%struct.net_device* %12) #13, !dbg !14809
  br label %if.end9, !dbg !14809

if.end9:                                          ; preds = %if.then8, %if.end
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14810
  call void @nv_start_rx(%struct.net_device* %13) #13, !dbg !14811
  ret void, !dbg !14812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_tx_flip_ownership(%struct.net_device* %dev) #2 !dbg !14813 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14814, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !14816, metadata !DIExpression()), !dbg !14817
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14818
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !14819
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !14819
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !14817
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14820
  %tx_pkts_in_progress = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 64, !dbg !14821
  %3 = load i32, i32* %tx_pkts_in_progress, align 4, !dbg !14822
  %dec = add i32 %3, -1, !dbg !14822
  store i32 %dec, i32* %tx_pkts_in_progress, align 4, !dbg !14822
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14823
  %tx_change_owner = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 65, !dbg !14825
  %5 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_change_owner, align 8, !dbg !14825
  %tobool = icmp ne %struct.nv_skb_map* %5, null, !dbg !14823
  br i1 %tobool, label %if.then, label %if.end10, !dbg !14826

if.then:                                          ; preds = %entry
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14827
  %tx_change_owner1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 65, !dbg !14829
  %7 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_change_owner1, align 8, !dbg !14829
  %first_tx_desc = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %7, i32 0, i32 3, !dbg !14830
  %8 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %first_tx_desc, align 8, !dbg !14830
  %flaglen = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %8, i32 0, i32 3, !dbg !14831
  %9 = load i32, i32* %flaglen, align 4, !dbg !14832
  %or = or i32 %9, -2147483648, !dbg !14832
  store i32 %or, i32* %flaglen, align 4, !dbg !14832
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14833
  %tx_pkts_in_progress2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 64, !dbg !14834
  %11 = load i32, i32* %tx_pkts_in_progress2, align 4, !dbg !14835
  %inc = add i32 %11, 1, !dbg !14835
  store i32 %inc, i32* %tx_pkts_in_progress2, align 4, !dbg !14835
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14836
  %tx_change_owner3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 65, !dbg !14837
  %13 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_change_owner3, align 8, !dbg !14837
  %next_tx_ctx = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %13, i32 0, i32 4, !dbg !14838
  %14 = load %struct.nv_skb_map*, %struct.nv_skb_map** %next_tx_ctx, align 8, !dbg !14838
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14839
  %tx_change_owner4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 65, !dbg !14840
  store %struct.nv_skb_map* %14, %struct.nv_skb_map** %tx_change_owner4, align 8, !dbg !14841
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14842
  %tx_change_owner5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 65, !dbg !14844
  %17 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_change_owner5, align 8, !dbg !14844
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14845
  %tx_end_flip = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 66, !dbg !14846
  %19 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_end_flip, align 8, !dbg !14846
  %cmp = icmp eq %struct.nv_skb_map* %17, %19, !dbg !14847
  br i1 %cmp, label %if.then6, label %if.end, !dbg !14848

if.then6:                                         ; preds = %if.then
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14849
  %tx_change_owner7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 65, !dbg !14850
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %tx_change_owner7, align 8, !dbg !14851
  br label %if.end, !dbg !14849

if.end:                                           ; preds = %if.then6, %if.then
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !14852
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 25, !dbg !14853
  %22 = load i32, i32* %txrxctl_bits, align 4, !dbg !14853
  %or8 = or i32 1, %22, !dbg !14854
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14855
  %call9 = call i8* @get_hwbase(%struct.net_device* %23) #13, !dbg !14856
  %add.ptr = getelementptr i8, i8* %call9, i64 324, !dbg !14857
  call void @writel(i32 %or8, i8* %add.ptr) #13, !dbg !14858
  br label %if.end10, !dbg !14859

if.end10:                                         ; preds = %if.end, %entry
  ret void, !dbg !14860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_completed_queue(%struct.net_device* %dev, i32 %pkts, i32 %bytes) #2 !dbg !14861 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %pkts.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14864, metadata !DIExpression()), !dbg !14865
  store i32 %pkts, i32* %pkts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkts.addr, metadata !14866, metadata !DIExpression()), !dbg !14867
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !14868, metadata !DIExpression()), !dbg !14869
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14870
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !14871
  %1 = load i32, i32* %pkts.addr, align 4, !dbg !14872
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !14873
  call void @netdev_tx_completed_queue(%struct.netdev_queue* %call, i32 %1, i32 %2) #13, !dbg !14874
  ret void, !dbg !14875
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #2 !dbg !14876 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14877, metadata !DIExpression()), !dbg !14878
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14879
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !14880
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #13, !dbg !14881
  ret void, !dbg !14882
}

; Function Attrs: noredzone
declare dso_local void @get_random_bytes(i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_completed_queue(%struct.netdev_queue* %dev_queue, i32 %pkts, i32 %bytes) #2 !dbg !14883 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  %pkts.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !14886, metadata !DIExpression()), !dbg !14887
  store i32 %pkts, i32* %pkts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkts.addr, metadata !14888, metadata !DIExpression()), !dbg !14889
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !14890, metadata !DIExpression()), !dbg !14891
  %0 = load i32, i32* %bytes.addr, align 4, !dbg !14892
  %tobool = icmp ne i32 %0, 0, !dbg !14892
  %lnot = xor i1 %tobool, true, !dbg !14892
  %lnot1 = xor i1 %lnot, true, !dbg !14892
  %lnot2 = xor i1 %lnot1, true, !dbg !14892
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14892
  %conv = sext i32 %lnot.ext to i64, !dbg !14892
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14892
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14894

if.then:                                          ; preds = %entry
  br label %if.end16, !dbg !14895

if.end:                                           ; preds = %entry
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !14896
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 11, !dbg !14897
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !14898
  call void @dql_completed(%struct.dql* %dql, i32 %2) #13, !dbg !14899
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14900, !srcloc !14901
  %3 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !14902
  %dql4 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %3, i32 0, i32 11, !dbg !14902
  %call = call i32 @dql_avail(%struct.dql* %dql4) #13, !dbg !14902
  %cmp = icmp slt i32 %call, 0, !dbg !14902
  %lnot6 = xor i1 %cmp, true, !dbg !14902
  %lnot8 = xor i1 %lnot6, true, !dbg !14902
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !14902
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !14902
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !14902
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !14904

if.then12:                                        ; preds = %if.end
  br label %if.end16, !dbg !14905

if.end13:                                         ; preds = %if.end
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !14906
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 10, !dbg !14908
  %call14 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %state) #13, !dbg !14909
  br i1 %call14, label %if.then15, label %if.end16, !dbg !14910

if.then15:                                        ; preds = %if.end13
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !14911
  call void @netif_schedule_queue(%struct.netdev_queue* %5) #13, !dbg !14912
  br label %if.end16, !dbg !14912

if.end16:                                         ; preds = %if.then, %if.then12, %if.then15, %if.end13
  ret void, !dbg !14913
}

; Function Attrs: noredzone
declare dso_local void @dql_completed(%struct.dql*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dql_avail(%struct.dql* %dql) #2 !dbg !14914 {
entry:
  %dql.addr = alloca %struct.dql*, align 8
  %tmp = alloca i32, align 4
  %tmp3 = alloca i32, align 4
  store %struct.dql* %dql, %struct.dql** %dql.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dql** %dql.addr, metadata !14919, metadata !DIExpression()), !dbg !14920
  br label %do.body, !dbg !14921

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14923

do.end:                                           ; preds = %do.body
  %0 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !14921
  %adj_limit = getelementptr inbounds %struct.dql, %struct.dql* %0, i32 0, i32 1, !dbg !14921
  %1 = load volatile i32, i32* %adj_limit, align 4, !dbg !14921
  store i32 %1, i32* %tmp, align 4, !dbg !14923
  %2 = load i32, i32* %tmp, align 4, !dbg !14921
  br label %do.body1, !dbg !14925

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !14927

do.end2:                                          ; preds = %do.body1
  %3 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !14925
  %num_queued = getelementptr inbounds %struct.dql, %struct.dql* %3, i32 0, i32 0, !dbg !14925
  %4 = load volatile i32, i32* %num_queued, align 8, !dbg !14925
  store i32 %4, i32* %tmp3, align 4, !dbg !14927
  %5 = load i32, i32* %tmp3, align 4, !dbg !14925
  %sub = sub i32 %2, %5, !dbg !14929
  ret i32 %sub, !dbg !14930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #2 !dbg !14931 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14934, metadata !DIExpression()), !dbg !14936
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14938, metadata !DIExpression()), !dbg !14939
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !14940, metadata !DIExpression()), !dbg !14942
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14943, metadata !DIExpression()), !dbg !14945
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14947, metadata !DIExpression()), !dbg !14948
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14949, metadata !DIExpression()), !dbg !14950
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14951, metadata !DIExpression()), !dbg !14952
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14953
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14954
  %div = sdiv i64 %1, 64, !dbg !14954
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14955
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14953
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14956
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14957
  %conv.i = trunc i64 %4 to i32, !dbg !14957
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !14958
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14959
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14959
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #15, !dbg !14959
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14960
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14961
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !14942
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !14942
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !14942, !srcloc !14962
  store i8 %11, i8* %c.i, align 1, !dbg !14942
  %12 = load i8, i8* %c.i, align 1, !dbg !14942
  %tobool.i = trunc i8 %12 to i1, !dbg !14942
  %frombool.i = zext i1 %tobool.i to i8, !dbg !14942
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !14942
  %13 = load i8, i8* %tmp.i, align 1, !dbg !14942
  %tobool1.i = trunc i8 %13 to i1, !dbg !14942
  ret i1 %tobool1.i, !dbg !14963
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_link_irq(%struct.net_device* %dev) #2 !dbg !14964 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %base = alloca i8*, align 8
  %miistat = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14965, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.declare(metadata i8** %base, metadata !14967, metadata !DIExpression()), !dbg !14968
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14969
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !14970
  store i8* %call, i8** %base, align 8, !dbg !14968
  call void @llvm.dbg.declare(metadata i32* %miistat, metadata !14971, metadata !DIExpression()), !dbg !14972
  %1 = load i8*, i8** %base, align 8, !dbg !14973
  %add.ptr = getelementptr i8, i8* %1, i64 384, !dbg !14974
  %call1 = call i32 @readl(i8* %add.ptr) #13, !dbg !14975
  store i32 %call1, i32* %miistat, align 4, !dbg !14976
  %2 = load i8*, i8** %base, align 8, !dbg !14977
  %add.ptr2 = getelementptr i8, i8* %2, i64 384, !dbg !14978
  call void @writel(i32 8, i8* %add.ptr2) #13, !dbg !14979
  %3 = load i32, i32* %miistat, align 4, !dbg !14980
  %and = and i32 %3, 8, !dbg !14982
  %tobool = icmp ne i32 %and, 0, !dbg !14982
  br i1 %tobool, label %if.then, label %if.end, !dbg !14983

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14984
  call void @nv_linkchange(%struct.net_device* %4) #13, !dbg !14985
  br label %if.end, !dbg !14985

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_linkchange(%struct.net_device* %dev) #2 !dbg !14987 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14988, metadata !DIExpression()), !dbg !14989
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14990
  %call = call i32 @nv_update_linkspeed(%struct.net_device* %0) #13, !dbg !14992
  %tobool = icmp ne i32 %call, 0, !dbg !14992
  br i1 %tobool, label %if.then, label %if.else, !dbg !14993

if.then:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14994
  %call1 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %1) #13, !dbg !14997
  br i1 %call1, label %if.end, label %if.then2, !dbg !14998

if.then2:                                         ; preds = %if.then
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14999
  call void @netif_carrier_on(%struct.net_device* %2) #13, !dbg !15001
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15002
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0)) #14, !dbg !15003
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15004
  call void @nv_txrx_gate(%struct.net_device* %4, i1 zeroext false) #13, !dbg !15005
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15006
  call void @nv_start_rx(%struct.net_device* %5) #13, !dbg !15007
  br label %if.end, !dbg !15008

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !15009

if.else:                                          ; preds = %entry
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15010
  %call3 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %6) #13, !dbg !15013
  br i1 %call3, label %if.then4, label %if.end5, !dbg !15014

if.then4:                                         ; preds = %if.else
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15015
  call void @netif_carrier_off(%struct.net_device* %7) #13, !dbg !15017
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15018
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)) #14, !dbg !15019
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15020
  call void @nv_txrx_gate(%struct.net_device* %9, i1 zeroext true) #13, !dbg !15021
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15022
  call void @nv_stop_rx(%struct.net_device* %10) #13, !dbg !15023
  br label %if.end5, !dbg !15024

if.end5:                                          ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  ret void, !dbg !15025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_update_linkspeed(%struct.net_device* %dev) #2 !dbg !15026 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %adv = alloca i32, align 4
  %lpa = alloca i32, align 4
  %adv_lpa = alloca i32, align 4
  %adv_pause = alloca i32, align 4
  %lpa_pause = alloca i32, align 4
  %newls = alloca i32, align 4
  %newdup = alloca i32, align 4
  %mii_status = alloca i32, align 4
  %bmcr = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %control_1000 = alloca i32, align 4
  %status_1000 = alloca i32, align 4
  %phyreg = alloca i32, align 4
  %pause_flags = alloca i32, align 4
  %txreg = alloca i32, align 4
  %txrxFlags = alloca i32, align 4
  %phy_exp = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15027, metadata !DIExpression()), !dbg !15028
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !15029, metadata !DIExpression()), !dbg !15030
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15031
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !15032
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !15032
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !15030
  call void @llvm.dbg.declare(metadata i8** %base, metadata !15033, metadata !DIExpression()), !dbg !15034
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15035
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !15036
  store i8* %call1, i8** %base, align 8, !dbg !15034
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !15037, metadata !DIExpression()), !dbg !15038
  store i32 0, i32* %adv, align 4, !dbg !15038
  call void @llvm.dbg.declare(metadata i32* %lpa, metadata !15039, metadata !DIExpression()), !dbg !15040
  store i32 0, i32* %lpa, align 4, !dbg !15040
  call void @llvm.dbg.declare(metadata i32* %adv_lpa, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata i32* %adv_pause, metadata !15043, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.declare(metadata i32* %lpa_pause, metadata !15045, metadata !DIExpression()), !dbg !15046
  call void @llvm.dbg.declare(metadata i32* %newls, metadata !15047, metadata !DIExpression()), !dbg !15048
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15049
  %linkspeed = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 6, !dbg !15050
  %4 = load i32, i32* %linkspeed, align 4, !dbg !15050
  store i32 %4, i32* %newls, align 4, !dbg !15048
  call void @llvm.dbg.declare(metadata i32* %newdup, metadata !15051, metadata !DIExpression()), !dbg !15052
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15053
  %duplex = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 7, !dbg !15054
  %6 = load i32, i32* %duplex, align 8, !dbg !15054
  store i32 %6, i32* %newdup, align 4, !dbg !15052
  call void @llvm.dbg.declare(metadata i32* %mii_status, metadata !15055, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.declare(metadata i32* %bmcr, metadata !15057, metadata !DIExpression()), !dbg !15058
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !15059, metadata !DIExpression()), !dbg !15060
  store i32 0, i32* %retval2, align 4, !dbg !15060
  call void @llvm.dbg.declare(metadata i32* %control_1000, metadata !15061, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.declare(metadata i32* %status_1000, metadata !15063, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.declare(metadata i32* %phyreg, metadata !15065, metadata !DIExpression()), !dbg !15066
  call void @llvm.dbg.declare(metadata i32* %pause_flags, metadata !15067, metadata !DIExpression()), !dbg !15068
  call void @llvm.dbg.declare(metadata i32* %txreg, metadata !15069, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.declare(metadata i32* %txrxFlags, metadata !15071, metadata !DIExpression()), !dbg !15072
  store i32 0, i32* %txrxFlags, align 4, !dbg !15072
  call void @llvm.dbg.declare(metadata i32* %phy_exp, metadata !15073, metadata !DIExpression()), !dbg !15074
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15075
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15076
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 10, !dbg !15077
  %9 = load i32, i32* %phyaddr, align 4, !dbg !15077
  %call3 = call i32 @mii_rw(%struct.net_device* %7, i32 %9, i32 0, i32 -1) #13, !dbg !15078
  store i32 %call3, i32* %bmcr, align 4, !dbg !15079
  %10 = load i32, i32* %bmcr, align 4, !dbg !15080
  %and = and i32 %10, 16384, !dbg !15082
  %tobool = icmp ne i32 %and, 0, !dbg !15082
  br i1 %tobool, label %if.then, label %if.end9, !dbg !15083

if.then:                                          ; preds = %entry
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15084
  %call4 = call zeroext i1 @netif_running(%struct.net_device* %11) #13, !dbg !15087
  br i1 %call4, label %if.then5, label %if.end8, !dbg !15088

if.then5:                                         ; preds = %if.then
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15089
  call void @nv_force_linkspeed(%struct.net_device* %12, i32 50, i32 1) #13, !dbg !15091
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15092
  %call6 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %13) #13, !dbg !15094
  br i1 %call6, label %if.end, label %if.then7, !dbg !15095

if.then7:                                         ; preds = %if.then5
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15096
  call void @netif_carrier_on(%struct.net_device* %14) #13, !dbg !15097
  br label %if.end, !dbg !15097

if.end:                                           ; preds = %if.then7, %if.then5
  br label %if.end8, !dbg !15098

if.end8:                                          ; preds = %if.end, %if.then
  store i32 1, i32* %retval, align 4, !dbg !15099
  br label %return, !dbg !15099

if.end9:                                          ; preds = %entry
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15100
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15101
  %phyaddr10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 10, !dbg !15102
  %17 = load i32, i32* %phyaddr10, align 4, !dbg !15102
  %call11 = call i32 @mii_rw(%struct.net_device* %15, i32 %17, i32 1, i32 -1) #13, !dbg !15103
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15104
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15105
  %phyaddr12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 10, !dbg !15106
  %20 = load i32, i32* %phyaddr12, align 4, !dbg !15106
  %call13 = call i32 @mii_rw(%struct.net_device* %18, i32 %20, i32 1, i32 -1) #13, !dbg !15107
  store i32 %call13, i32* %mii_status, align 4, !dbg !15108
  %21 = load i32, i32* %mii_status, align 4, !dbg !15109
  %and14 = and i32 %21, 4, !dbg !15111
  %tobool15 = icmp ne i32 %and14, 0, !dbg !15111
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !15112

if.then16:                                        ; preds = %if.end9
  store i32 66536, i32* %newls, align 4, !dbg !15113
  store i32 0, i32* %newdup, align 4, !dbg !15115
  store i32 0, i32* %retval2, align 4, !dbg !15116
  br label %set_speed, !dbg !15117

if.end17:                                         ; preds = %if.end9
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15118
  %autoneg = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 8, !dbg !15120
  %23 = load i32, i32* %autoneg, align 4, !dbg !15120
  %cmp = icmp eq i32 %23, 0, !dbg !15121
  br i1 %cmp, label %if.then18, label %if.end35, !dbg !15122

if.then18:                                        ; preds = %if.end17
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15123
  %fixed_mode = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 9, !dbg !15126
  %25 = load i32, i32* %fixed_mode, align 8, !dbg !15126
  %and19 = and i32 %25, 256, !dbg !15127
  %tobool20 = icmp ne i32 %and19, 0, !dbg !15127
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !15128

if.then21:                                        ; preds = %if.then18
  store i32 65636, i32* %newls, align 4, !dbg !15129
  store i32 1, i32* %newdup, align 4, !dbg !15131
  br label %if.end34, !dbg !15132

if.else:                                          ; preds = %if.then18
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15133
  %fixed_mode22 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 9, !dbg !15135
  %27 = load i32, i32* %fixed_mode22, align 8, !dbg !15135
  %and23 = and i32 %27, 128, !dbg !15136
  %tobool24 = icmp ne i32 %and23, 0, !dbg !15136
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !15137

if.then25:                                        ; preds = %if.else
  store i32 65636, i32* %newls, align 4, !dbg !15138
  store i32 0, i32* %newdup, align 4, !dbg !15140
  br label %if.end33, !dbg !15141

if.else26:                                        ; preds = %if.else
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15142
  %fixed_mode27 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 9, !dbg !15144
  %29 = load i32, i32* %fixed_mode27, align 8, !dbg !15144
  %and28 = and i32 %29, 64, !dbg !15145
  %tobool29 = icmp ne i32 %and28, 0, !dbg !15145
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !15146

if.then30:                                        ; preds = %if.else26
  store i32 66536, i32* %newls, align 4, !dbg !15147
  store i32 1, i32* %newdup, align 4, !dbg !15149
  br label %if.end32, !dbg !15150

if.else31:                                        ; preds = %if.else26
  store i32 66536, i32* %newls, align 4, !dbg !15151
  store i32 0, i32* %newdup, align 4, !dbg !15153
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then25
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then21
  store i32 1, i32* %retval2, align 4, !dbg !15154
  br label %set_speed, !dbg !15155

if.end35:                                         ; preds = %if.end17
  %30 = load i32, i32* %mii_status, align 4, !dbg !15156
  %and36 = and i32 %30, 32, !dbg !15158
  %tobool37 = icmp ne i32 %and36, 0, !dbg !15158
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !15159

if.then38:                                        ; preds = %if.end35
  store i32 66536, i32* %newls, align 4, !dbg !15160
  store i32 0, i32* %newdup, align 4, !dbg !15162
  store i32 0, i32* %retval2, align 4, !dbg !15163
  br label %set_speed, !dbg !15164

if.end39:                                         ; preds = %if.end35
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15165
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15166
  %phyaddr40 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 10, !dbg !15167
  %33 = load i32, i32* %phyaddr40, align 4, !dbg !15167
  %call41 = call i32 @mii_rw(%struct.net_device* %31, i32 %33, i32 4, i32 -1) #13, !dbg !15168
  store i32 %call41, i32* %adv, align 4, !dbg !15169
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15170
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15171
  %phyaddr42 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 10, !dbg !15172
  %36 = load i32, i32* %phyaddr42, align 4, !dbg !15172
  %call43 = call i32 @mii_rw(%struct.net_device* %34, i32 %36, i32 5, i32 -1) #13, !dbg !15173
  store i32 %call43, i32* %lpa, align 4, !dbg !15174
  store i32 1, i32* %retval2, align 4, !dbg !15175
  %37 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15176
  %gigabit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %37, i32 0, i32 15, !dbg !15178
  %38 = load i16, i16* %gigabit, align 8, !dbg !15178
  %conv = zext i16 %38 to i32, !dbg !15176
  %cmp44 = icmp eq i32 %conv, 256, !dbg !15179
  br i1 %cmp44, label %if.then46, label %if.end57, !dbg !15180

if.then46:                                        ; preds = %if.end39
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15181
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15183
  %phyaddr47 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 10, !dbg !15184
  %41 = load i32, i32* %phyaddr47, align 4, !dbg !15184
  %call48 = call i32 @mii_rw(%struct.net_device* %39, i32 %41, i32 9, i32 -1) #13, !dbg !15185
  store i32 %call48, i32* %control_1000, align 4, !dbg !15186
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15187
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15188
  %phyaddr49 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 10, !dbg !15189
  %44 = load i32, i32* %phyaddr49, align 4, !dbg !15189
  %call50 = call i32 @mii_rw(%struct.net_device* %42, i32 %44, i32 10, i32 -1) #13, !dbg !15190
  store i32 %call50, i32* %status_1000, align 4, !dbg !15191
  %45 = load i32, i32* %control_1000, align 4, !dbg !15192
  %and51 = and i32 %45, 512, !dbg !15194
  %tobool52 = icmp ne i32 %and51, 0, !dbg !15194
  br i1 %tobool52, label %land.lhs.true, label %if.end56, !dbg !15195

land.lhs.true:                                    ; preds = %if.then46
  %46 = load i32, i32* %status_1000, align 4, !dbg !15196
  %and53 = and i32 %46, 2048, !dbg !15197
  %tobool54 = icmp ne i32 %and53, 0, !dbg !15197
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !15198

if.then55:                                        ; preds = %land.lhs.true
  store i32 65586, i32* %newls, align 4, !dbg !15199
  store i32 1, i32* %newdup, align 4, !dbg !15201
  br label %set_speed, !dbg !15202

if.end56:                                         ; preds = %land.lhs.true, %if.then46
  br label %if.end57, !dbg !15203

if.end57:                                         ; preds = %if.end56, %if.end39
  %47 = load i32, i32* %lpa, align 4, !dbg !15204
  %48 = load i32, i32* %adv, align 4, !dbg !15205
  %and58 = and i32 %47, %48, !dbg !15206
  store i32 %and58, i32* %adv_lpa, align 4, !dbg !15207
  %49 = load i32, i32* %adv_lpa, align 4, !dbg !15208
  %and59 = and i32 %49, 256, !dbg !15210
  %tobool60 = icmp ne i32 %and59, 0, !dbg !15210
  br i1 %tobool60, label %if.then61, label %if.else62, !dbg !15211

if.then61:                                        ; preds = %if.end57
  store i32 65636, i32* %newls, align 4, !dbg !15212
  store i32 1, i32* %newdup, align 4, !dbg !15214
  br label %if.end78, !dbg !15215

if.else62:                                        ; preds = %if.end57
  %50 = load i32, i32* %adv_lpa, align 4, !dbg !15216
  %and63 = and i32 %50, 128, !dbg !15218
  %tobool64 = icmp ne i32 %and63, 0, !dbg !15218
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !15219

if.then65:                                        ; preds = %if.else62
  store i32 65636, i32* %newls, align 4, !dbg !15220
  store i32 0, i32* %newdup, align 4, !dbg !15222
  br label %if.end77, !dbg !15223

if.else66:                                        ; preds = %if.else62
  %51 = load i32, i32* %adv_lpa, align 4, !dbg !15224
  %and67 = and i32 %51, 64, !dbg !15226
  %tobool68 = icmp ne i32 %and67, 0, !dbg !15226
  br i1 %tobool68, label %if.then69, label %if.else70, !dbg !15227

if.then69:                                        ; preds = %if.else66
  store i32 66536, i32* %newls, align 4, !dbg !15228
  store i32 1, i32* %newdup, align 4, !dbg !15230
  br label %if.end76, !dbg !15231

if.else70:                                        ; preds = %if.else66
  %52 = load i32, i32* %adv_lpa, align 4, !dbg !15232
  %and71 = and i32 %52, 32, !dbg !15234
  %tobool72 = icmp ne i32 %and71, 0, !dbg !15234
  br i1 %tobool72, label %if.then73, label %if.else74, !dbg !15235

if.then73:                                        ; preds = %if.else70
  store i32 66536, i32* %newls, align 4, !dbg !15236
  store i32 0, i32* %newdup, align 4, !dbg !15238
  br label %if.end75, !dbg !15239

if.else74:                                        ; preds = %if.else70
  store i32 66536, i32* %newls, align 4, !dbg !15240
  store i32 0, i32* %newdup, align 4, !dbg !15242
  br label %if.end75

if.end75:                                         ; preds = %if.else74, %if.then73
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then69
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then65
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then61
  br label %set_speed, !dbg !15243

set_speed:                                        ; preds = %if.end78, %if.then55, %if.then38, %if.end34, %if.then16
  call void @llvm.dbg.label(metadata !15244), !dbg !15245
  %53 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15246
  %duplex79 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %53, i32 0, i32 7, !dbg !15248
  %54 = load i32, i32* %duplex79, align 8, !dbg !15248
  %55 = load i32, i32* %newdup, align 4, !dbg !15249
  %cmp80 = icmp eq i32 %54, %55, !dbg !15250
  br i1 %cmp80, label %land.lhs.true82, label %if.end87, !dbg !15251

land.lhs.true82:                                  ; preds = %set_speed
  %56 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15252
  %linkspeed83 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %56, i32 0, i32 6, !dbg !15253
  %57 = load i32, i32* %linkspeed83, align 4, !dbg !15253
  %58 = load i32, i32* %newls, align 4, !dbg !15254
  %cmp84 = icmp eq i32 %57, %58, !dbg !15255
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !15256

if.then86:                                        ; preds = %land.lhs.true82
  %59 = load i32, i32* %retval2, align 4, !dbg !15257
  store i32 %59, i32* %retval, align 4, !dbg !15258
  br label %return, !dbg !15258

if.end87:                                         ; preds = %land.lhs.true82, %set_speed
  %60 = load i32, i32* %newdup, align 4, !dbg !15259
  %61 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15260
  %duplex88 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %61, i32 0, i32 7, !dbg !15261
  store i32 %60, i32* %duplex88, align 8, !dbg !15262
  %62 = load i32, i32* %newls, align 4, !dbg !15263
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15264
  %linkspeed89 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 6, !dbg !15265
  store i32 %62, i32* %linkspeed89, align 4, !dbg !15266
  %64 = load i8*, i8** %base, align 8, !dbg !15267
  %add.ptr = getelementptr i8, i8* %64, i64 132, !dbg !15269
  %call90 = call i32 @readl(i8* %add.ptr) #13, !dbg !15270
  %and91 = and i32 %call90, 1, !dbg !15271
  %tobool92 = icmp ne i32 %and91, 0, !dbg !15271
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !15272

if.then93:                                        ; preds = %if.end87
  %65 = load i32, i32* %txrxFlags, align 4, !dbg !15273
  %or = or i32 %65, 1, !dbg !15273
  store i32 %or, i32* %txrxFlags, align 4, !dbg !15273
  %66 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15275
  call void @nv_stop_tx(%struct.net_device* %66) #13, !dbg !15276
  br label %if.end94, !dbg !15277

if.end94:                                         ; preds = %if.then93, %if.end87
  %67 = load i8*, i8** %base, align 8, !dbg !15278
  %add.ptr95 = getelementptr i8, i8* %67, i64 148, !dbg !15280
  %call96 = call i32 @readl(i8* %add.ptr95) #13, !dbg !15281
  %and97 = and i32 %call96, 1, !dbg !15282
  %tobool98 = icmp ne i32 %and97, 0, !dbg !15282
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !15283

if.then99:                                        ; preds = %if.end94
  %68 = load i32, i32* %txrxFlags, align 4, !dbg !15284
  %or100 = or i32 %68, 2, !dbg !15284
  store i32 %or100, i32* %txrxFlags, align 4, !dbg !15284
  %69 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15286
  call void @nv_stop_rx(%struct.net_device* %69) #13, !dbg !15287
  br label %if.end101, !dbg !15288

if.end101:                                        ; preds = %if.then99, %if.end94
  %70 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15289
  %gigabit102 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %70, i32 0, i32 15, !dbg !15291
  %71 = load i16, i16* %gigabit102, align 8, !dbg !15291
  %conv103 = zext i16 %71 to i32, !dbg !15289
  %cmp104 = icmp eq i32 %conv103, 256, !dbg !15292
  br i1 %cmp104, label %if.then106, label %if.end130, !dbg !15293

if.then106:                                       ; preds = %if.end101
  %72 = load i8*, i8** %base, align 8, !dbg !15294
  %add.ptr107 = getelementptr i8, i8* %72, i64 156, !dbg !15296
  %call108 = call i32 @readl(i8* %add.ptr107) #13, !dbg !15297
  store i32 %call108, i32* %phyreg, align 4, !dbg !15298
  %73 = load i32, i32* %phyreg, align 4, !dbg !15299
  %and109 = and i32 %73, -261889, !dbg !15299
  store i32 %and109, i32* %phyreg, align 4, !dbg !15299
  %74 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15300
  %linkspeed110 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %74, i32 0, i32 6, !dbg !15302
  %75 = load i32, i32* %linkspeed110, align 4, !dbg !15302
  %and111 = and i32 %75, 4095, !dbg !15303
  %cmp112 = icmp eq i32 %and111, 1000, !dbg !15304
  br i1 %cmp112, label %if.then118, label %lor.lhs.false, !dbg !15305

lor.lhs.false:                                    ; preds = %if.then106
  %76 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15306
  %linkspeed114 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %76, i32 0, i32 6, !dbg !15307
  %77 = load i32, i32* %linkspeed114, align 4, !dbg !15307
  %and115 = and i32 %77, 4095, !dbg !15308
  %cmp116 = icmp eq i32 %and115, 100, !dbg !15309
  br i1 %cmp116, label %if.then118, label %if.else120, !dbg !15310

if.then118:                                       ; preds = %lor.lhs.false, %if.then106
  %78 = load i32, i32* %phyreg, align 4, !dbg !15311
  %or119 = or i32 %78, 32512, !dbg !15311
  store i32 %or119, i32* %phyreg, align 4, !dbg !15311
  br label %if.end128, !dbg !15312

if.else120:                                       ; preds = %lor.lhs.false
  %79 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15313
  %linkspeed121 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %79, i32 0, i32 6, !dbg !15315
  %80 = load i32, i32* %linkspeed121, align 4, !dbg !15315
  %and122 = and i32 %80, 4095, !dbg !15316
  %cmp123 = icmp eq i32 %and122, 50, !dbg !15317
  br i1 %cmp123, label %if.then125, label %if.end127, !dbg !15318

if.then125:                                       ; preds = %if.else120
  %81 = load i32, i32* %phyreg, align 4, !dbg !15319
  %or126 = or i32 %81, 261888, !dbg !15319
  store i32 %or126, i32* %phyreg, align 4, !dbg !15319
  br label %if.end127, !dbg !15320

if.end127:                                        ; preds = %if.then125, %if.else120
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then118
  %82 = load i32, i32* %phyreg, align 4, !dbg !15321
  %83 = load i8*, i8** %base, align 8, !dbg !15322
  %add.ptr129 = getelementptr i8, i8* %83, i64 156, !dbg !15323
  call void @writel(i32 %82, i8* %add.ptr129) #13, !dbg !15324
  br label %if.end130, !dbg !15325

if.end130:                                        ; preds = %if.end128, %if.end101
  %84 = load i8*, i8** %base, align 8, !dbg !15326
  %add.ptr131 = getelementptr i8, i8* %84, i64 192, !dbg !15327
  %call132 = call i32 @readl(i8* %add.ptr131) #13, !dbg !15328
  store i32 %call132, i32* %phyreg, align 4, !dbg !15329
  %85 = load i32, i32* %phyreg, align 4, !dbg !15330
  %and133 = and i32 %85, -260, !dbg !15330
  store i32 %and133, i32* %phyreg, align 4, !dbg !15330
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15331
  %duplex134 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %86, i32 0, i32 7, !dbg !15333
  %87 = load i32, i32* %duplex134, align 8, !dbg !15333
  %cmp135 = icmp eq i32 %87, 0, !dbg !15334
  br i1 %cmp135, label %if.then137, label %if.end139, !dbg !15335

if.then137:                                       ; preds = %if.end130
  %88 = load i32, i32* %phyreg, align 4, !dbg !15336
  %or138 = or i32 %88, 256, !dbg !15336
  store i32 %or138, i32* %phyreg, align 4, !dbg !15336
  br label %if.end139, !dbg !15337

if.end139:                                        ; preds = %if.then137, %if.end130
  %89 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15338
  %linkspeed140 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %89, i32 0, i32 6, !dbg !15340
  %90 = load i32, i32* %linkspeed140, align 4, !dbg !15340
  %and141 = and i32 %90, 4095, !dbg !15341
  %cmp142 = icmp eq i32 %and141, 100, !dbg !15342
  br i1 %cmp142, label %if.then144, label %if.else146, !dbg !15343

if.then144:                                       ; preds = %if.end139
  %91 = load i32, i32* %phyreg, align 4, !dbg !15344
  %or145 = or i32 %91, 1, !dbg !15344
  store i32 %or145, i32* %phyreg, align 4, !dbg !15344
  br label %if.end154, !dbg !15345

if.else146:                                       ; preds = %if.end139
  %92 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15346
  %linkspeed147 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %92, i32 0, i32 6, !dbg !15348
  %93 = load i32, i32* %linkspeed147, align 4, !dbg !15348
  %and148 = and i32 %93, 4095, !dbg !15349
  %cmp149 = icmp eq i32 %and148, 50, !dbg !15350
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !15351

if.then151:                                       ; preds = %if.else146
  %94 = load i32, i32* %phyreg, align 4, !dbg !15352
  %or152 = or i32 %94, 2, !dbg !15352
  store i32 %or152, i32* %phyreg, align 4, !dbg !15352
  br label %if.end153, !dbg !15353

if.end153:                                        ; preds = %if.then151, %if.else146
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then144
  %95 = load i32, i32* %phyreg, align 4, !dbg !15354
  %96 = load i8*, i8** %base, align 8, !dbg !15355
  %add.ptr155 = getelementptr i8, i8* %96, i64 192, !dbg !15356
  call void @writel(i32 %95, i8* %add.ptr155) #13, !dbg !15357
  %97 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15358
  %98 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15359
  %phyaddr156 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %98, i32 0, i32 10, !dbg !15360
  %99 = load i32, i32* %phyaddr156, align 4, !dbg !15360
  %call157 = call i32 @mii_rw(%struct.net_device* %97, i32 %99, i32 6, i32 -1) #13, !dbg !15361
  %and158 = and i32 %call157, 1, !dbg !15362
  store i32 %and158, i32* %phy_exp, align 4, !dbg !15363
  %100 = load i32, i32* %phyreg, align 4, !dbg !15364
  %and159 = and i32 %100, 268435456, !dbg !15366
  %tobool160 = icmp ne i32 %and159, 0, !dbg !15366
  br i1 %tobool160, label %if.then161, label %if.else186, !dbg !15367

if.then161:                                       ; preds = %if.end154
  %101 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15368
  %linkspeed162 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %101, i32 0, i32 6, !dbg !15371
  %102 = load i32, i32* %linkspeed162, align 4, !dbg !15371
  %and163 = and i32 %102, 4095, !dbg !15372
  %cmp164 = icmp eq i32 %and163, 50, !dbg !15373
  br i1 %cmp164, label %if.then166, label %if.else167, !dbg !15374

if.then166:                                       ; preds = %if.then161
  store i32 1312015, i32* %txreg, align 4, !dbg !15375
  br label %if.end185, !dbg !15377

if.else167:                                       ; preds = %if.then161
  %103 = load i32, i32* %phy_exp, align 4, !dbg !15378
  %tobool168 = icmp ne i32 %103, 0, !dbg !15378
  br i1 %tobool168, label %if.else183, label %land.lhs.true169, !dbg !15381

land.lhs.true169:                                 ; preds = %if.else167
  %104 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15382
  %duplex170 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %104, i32 0, i32 7, !dbg !15383
  %105 = load i32, i32* %duplex170, align 8, !dbg !15383
  %tobool171 = icmp ne i32 %105, 0, !dbg !15382
  br i1 %tobool171, label %if.else183, label %land.lhs.true172, !dbg !15384

land.lhs.true172:                                 ; preds = %land.lhs.true169
  %106 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15385
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %106, i32 0, i32 27, !dbg !15386
  %107 = load i32, i32* %driver_data, align 4, !dbg !15386
  %and173 = and i32 %107, 32768, !dbg !15387
  %tobool174 = icmp ne i32 %and173, 0, !dbg !15387
  br i1 %tobool174, label %if.then175, label %if.else183, !dbg !15388

if.then175:                                       ; preds = %land.lhs.true172
  %108 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15389
  %linkspeed176 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %108, i32 0, i32 6, !dbg !15392
  %109 = load i32, i32* %linkspeed176, align 4, !dbg !15392
  %and177 = and i32 %109, 4095, !dbg !15393
  %cmp178 = icmp eq i32 %and177, 1000, !dbg !15394
  br i1 %cmp178, label %if.then180, label %if.else181, !dbg !15395

if.then180:                                       ; preds = %if.then175
  store i32 1448207, i32* %txreg, align 4, !dbg !15396
  br label %if.end182, !dbg !15397

if.else181:                                       ; preds = %if.then175
  store i32 1454095, i32* %txreg, align 4, !dbg !15398
  br label %if.end182

if.end182:                                        ; preds = %if.else181, %if.then180
  br label %if.end184, !dbg !15399

if.else183:                                       ; preds = %land.lhs.true172, %land.lhs.true169, %if.else167
  store i32 1443599, i32* %txreg, align 4, !dbg !15400
  br label %if.end184

if.end184:                                        ; preds = %if.else183, %if.end182
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.then166
  br label %if.end198, !dbg !15402

if.else186:                                       ; preds = %if.end154
  %110 = load i32, i32* %phy_exp, align 4, !dbg !15403
  %tobool187 = icmp ne i32 %110, 0, !dbg !15403
  br i1 %tobool187, label %if.else196, label %land.lhs.true188, !dbg !15406

land.lhs.true188:                                 ; preds = %if.else186
  %111 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15407
  %duplex189 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %111, i32 0, i32 7, !dbg !15408
  %112 = load i32, i32* %duplex189, align 8, !dbg !15408
  %tobool190 = icmp ne i32 %112, 0, !dbg !15407
  br i1 %tobool190, label %if.else196, label %land.lhs.true191, !dbg !15409

land.lhs.true191:                                 ; preds = %land.lhs.true188
  %113 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15410
  %driver_data192 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %113, i32 0, i32 27, !dbg !15411
  %114 = load i32, i32* %driver_data192, align 4, !dbg !15411
  %and193 = and i32 %114, 32768, !dbg !15412
  %tobool194 = icmp ne i32 %and193, 0, !dbg !15412
  br i1 %tobool194, label %if.then195, label %if.else196, !dbg !15413

if.then195:                                       ; preds = %land.lhs.true191
  store i32 1384448, i32* %txreg, align 4, !dbg !15414
  br label %if.end197, !dbg !15415

if.else196:                                       ; preds = %land.lhs.true191, %land.lhs.true188, %if.else186
  store i32 1377551, i32* %txreg, align 4, !dbg !15416
  br label %if.end197

if.end197:                                        ; preds = %if.else196, %if.then195
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.end185
  %115 = load i32, i32* %txreg, align 4, !dbg !15417
  %116 = load i8*, i8** %base, align 8, !dbg !15418
  %add.ptr199 = getelementptr i8, i8* %116, i64 160, !dbg !15419
  call void @writel(i32 %115, i8* %add.ptr199) #13, !dbg !15420
  %117 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15421
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %117, i32 0, i32 24, !dbg !15423
  %118 = load i32, i32* %desc_ver, align 8, !dbg !15423
  %cmp200 = icmp eq i32 %118, 1, !dbg !15424
  br i1 %cmp200, label %if.then202, label %if.else203, !dbg !15425

if.then202:                                       ; preds = %if.end198
  store i32 2097168, i32* %txreg, align 4, !dbg !15426
  br label %if.end211, !dbg !15428

if.else203:                                       ; preds = %if.end198
  %119 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15429
  %linkspeed204 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %119, i32 0, i32 6, !dbg !15432
  %120 = load i32, i32* %linkspeed204, align 4, !dbg !15432
  %and205 = and i32 %120, 4095, !dbg !15433
  %cmp206 = icmp eq i32 %and205, 50, !dbg !15434
  br i1 %cmp206, label %if.then208, label %if.else209, !dbg !15435

if.then208:                                       ; preds = %if.else203
  store i32 266371072, i32* %txreg, align 4, !dbg !15436
  br label %if.end210, !dbg !15437

if.else209:                                       ; preds = %if.else203
  store i32 31490048, i32* %txreg, align 4, !dbg !15438
  br label %if.end210

if.end210:                                        ; preds = %if.else209, %if.then208
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then202
  %121 = load i32, i32* %txreg, align 4, !dbg !15439
  %122 = load i8*, i8** %base, align 8, !dbg !15440
  %add.ptr212 = getelementptr i8, i8* %122, i64 316, !dbg !15441
  call void @writel(i32 %121, i8* %add.ptr212) #13, !dbg !15442
  %123 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15443
  %duplex213 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %123, i32 0, i32 7, !dbg !15444
  %124 = load i32, i32* %duplex213, align 8, !dbg !15444
  %tobool214 = icmp ne i32 %124, 0, !dbg !15443
  %125 = zext i1 %tobool214 to i64, !dbg !15443
  %cond = select i1 %tobool214, i32 0, i32 2, !dbg !15443
  %or215 = or i32 3870524, %cond, !dbg !15445
  %126 = load i8*, i8** %base, align 8, !dbg !15446
  %add.ptr216 = getelementptr i8, i8* %126, i64 128, !dbg !15447
  call void @writel(i32 %or215, i8* %add.ptr216) #13, !dbg !15448
  %127 = load i8*, i8** %base, align 8, !dbg !15449
  call void @pci_push(i8* %127) #13, !dbg !15450
  %128 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15451
  %linkspeed217 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %128, i32 0, i32 6, !dbg !15452
  %129 = load i32, i32* %linkspeed217, align 4, !dbg !15452
  %130 = load i8*, i8** %base, align 8, !dbg !15453
  %add.ptr218 = getelementptr i8, i8* %130, i64 272, !dbg !15454
  call void @writel(i32 %129, i8* %add.ptr218) #13, !dbg !15455
  %131 = load i8*, i8** %base, align 8, !dbg !15456
  call void @pci_push(i8* %131) #13, !dbg !15457
  store i32 0, i32* %pause_flags, align 4, !dbg !15458
  %132 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15459
  %call219 = call zeroext i1 @netif_running(%struct.net_device* %132) #13, !dbg !15461
  br i1 %call219, label %land.lhs.true221, label %if.end272, !dbg !15462

land.lhs.true221:                                 ; preds = %if.end211
  %133 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15463
  %duplex222 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %133, i32 0, i32 7, !dbg !15464
  %134 = load i32, i32* %duplex222, align 8, !dbg !15464
  %cmp223 = icmp ne i32 %134, 0, !dbg !15465
  br i1 %cmp223, label %if.then225, label %if.end272, !dbg !15466

if.then225:                                       ; preds = %land.lhs.true221
  %135 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15467
  %autoneg226 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %135, i32 0, i32 8, !dbg !15470
  %136 = load i32, i32* %autoneg226, align 4, !dbg !15470
  %tobool227 = icmp ne i32 %136, 0, !dbg !15467
  br i1 %tobool227, label %land.lhs.true228, label %if.else269, !dbg !15471

land.lhs.true228:                                 ; preds = %if.then225
  %137 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15472
  %pause_flags229 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %137, i32 0, i32 71, !dbg !15473
  %138 = load i32, i32* %pause_flags229, align 8, !dbg !15473
  %and230 = and i32 %138, 64, !dbg !15474
  %tobool231 = icmp ne i32 %and230, 0, !dbg !15474
  br i1 %tobool231, label %if.then232, label %if.else269, !dbg !15475

if.then232:                                       ; preds = %land.lhs.true228
  %139 = load i32, i32* %adv, align 4, !dbg !15476
  %and233 = and i32 %139, 3072, !dbg !15478
  store i32 %and233, i32* %adv_pause, align 4, !dbg !15479
  %140 = load i32, i32* %lpa, align 4, !dbg !15480
  %and234 = and i32 %140, 3072, !dbg !15481
  store i32 %and234, i32* %lpa_pause, align 4, !dbg !15482
  %141 = load i32, i32* %adv_pause, align 4, !dbg !15483
  switch i32 %141, label %sw.epilog [
    i32 1024, label %sw.bb
    i32 2048, label %sw.bb246
    i32 3072, label %sw.bb252
  ], !dbg !15484

sw.bb:                                            ; preds = %if.then232
  %142 = load i32, i32* %lpa_pause, align 4, !dbg !15485
  %and235 = and i32 %142, 1024, !dbg !15488
  %tobool236 = icmp ne i32 %and235, 0, !dbg !15488
  br i1 %tobool236, label %if.then237, label %if.end245, !dbg !15489

if.then237:                                       ; preds = %sw.bb
  %143 = load i32, i32* %pause_flags, align 4, !dbg !15490
  %or238 = or i32 %143, 4, !dbg !15490
  store i32 %or238, i32* %pause_flags, align 4, !dbg !15490
  %144 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15492
  %pause_flags239 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %144, i32 0, i32 71, !dbg !15494
  %145 = load i32, i32* %pause_flags239, align 8, !dbg !15494
  %and240 = and i32 %145, 32, !dbg !15495
  %tobool241 = icmp ne i32 %and240, 0, !dbg !15495
  br i1 %tobool241, label %if.then242, label %if.end244, !dbg !15496

if.then242:                                       ; preds = %if.then237
  %146 = load i32, i32* %pause_flags, align 4, !dbg !15497
  %or243 = or i32 %146, 8, !dbg !15497
  store i32 %or243, i32* %pause_flags, align 4, !dbg !15497
  br label %if.end244, !dbg !15498

if.end244:                                        ; preds = %if.then242, %if.then237
  br label %if.end245, !dbg !15499

if.end245:                                        ; preds = %if.end244, %sw.bb
  br label %sw.epilog, !dbg !15500

sw.bb246:                                         ; preds = %if.then232
  %147 = load i32, i32* %lpa_pause, align 4, !dbg !15501
  %cmp247 = icmp eq i32 %147, 3072, !dbg !15503
  br i1 %cmp247, label %if.then249, label %if.end251, !dbg !15504

if.then249:                                       ; preds = %sw.bb246
  %148 = load i32, i32* %pause_flags, align 4, !dbg !15505
  %or250 = or i32 %148, 8, !dbg !15505
  store i32 %or250, i32* %pause_flags, align 4, !dbg !15505
  br label %if.end251, !dbg !15506

if.end251:                                        ; preds = %if.then249, %sw.bb246
  br label %sw.epilog, !dbg !15507

sw.bb252:                                         ; preds = %if.then232
  %149 = load i32, i32* %lpa_pause, align 4, !dbg !15508
  %and253 = and i32 %149, 1024, !dbg !15510
  %tobool254 = icmp ne i32 %and253, 0, !dbg !15510
  br i1 %tobool254, label %if.then255, label %if.end263, !dbg !15511

if.then255:                                       ; preds = %sw.bb252
  %150 = load i32, i32* %pause_flags, align 4, !dbg !15512
  %or256 = or i32 %150, 4, !dbg !15512
  store i32 %or256, i32* %pause_flags, align 4, !dbg !15512
  %151 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15514
  %pause_flags257 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %151, i32 0, i32 71, !dbg !15516
  %152 = load i32, i32* %pause_flags257, align 8, !dbg !15516
  %and258 = and i32 %152, 32, !dbg !15517
  %tobool259 = icmp ne i32 %and258, 0, !dbg !15517
  br i1 %tobool259, label %if.then260, label %if.end262, !dbg !15518

if.then260:                                       ; preds = %if.then255
  %153 = load i32, i32* %pause_flags, align 4, !dbg !15519
  %or261 = or i32 %153, 8, !dbg !15519
  store i32 %or261, i32* %pause_flags, align 4, !dbg !15519
  br label %if.end262, !dbg !15520

if.end262:                                        ; preds = %if.then260, %if.then255
  br label %if.end263, !dbg !15521

if.end263:                                        ; preds = %if.end262, %sw.bb252
  %154 = load i32, i32* %lpa_pause, align 4, !dbg !15522
  %cmp264 = icmp eq i32 %154, 2048, !dbg !15524
  br i1 %cmp264, label %if.then266, label %if.end268, !dbg !15525

if.then266:                                       ; preds = %if.end263
  %155 = load i32, i32* %pause_flags, align 4, !dbg !15526
  %or267 = or i32 %155, 4, !dbg !15526
  store i32 %or267, i32* %pause_flags, align 4, !dbg !15526
  br label %if.end268, !dbg !15527

if.end268:                                        ; preds = %if.then266, %if.end263
  br label %sw.epilog, !dbg !15528

sw.epilog:                                        ; preds = %if.then232, %if.end268, %if.end251, %if.end245
  br label %if.end271, !dbg !15529

if.else269:                                       ; preds = %land.lhs.true228, %if.then225
  %156 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15530
  %pause_flags270 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %156, i32 0, i32 71, !dbg !15532
  %157 = load i32, i32* %pause_flags270, align 8, !dbg !15532
  store i32 %157, i32* %pause_flags, align 4, !dbg !15533
  br label %if.end271

if.end271:                                        ; preds = %if.else269, %sw.epilog
  br label %if.end272, !dbg !15534

if.end272:                                        ; preds = %if.end271, %land.lhs.true221, %if.end211
  %158 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15535
  %159 = load i32, i32* %pause_flags, align 4, !dbg !15536
  call void @nv_update_pause(%struct.net_device* %158, i32 %159) #13, !dbg !15537
  %160 = load i32, i32* %txrxFlags, align 4, !dbg !15538
  %and273 = and i32 %160, 1, !dbg !15540
  %tobool274 = icmp ne i32 %and273, 0, !dbg !15540
  br i1 %tobool274, label %if.then275, label %if.end276, !dbg !15541

if.then275:                                       ; preds = %if.end272
  %161 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15542
  call void @nv_start_tx(%struct.net_device* %161) #13, !dbg !15543
  br label %if.end276, !dbg !15543

if.end276:                                        ; preds = %if.then275, %if.end272
  %162 = load i32, i32* %txrxFlags, align 4, !dbg !15544
  %and277 = and i32 %162, 2, !dbg !15546
  %tobool278 = icmp ne i32 %and277, 0, !dbg !15546
  br i1 %tobool278, label %if.then279, label %if.end280, !dbg !15547

if.then279:                                       ; preds = %if.end276
  %163 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15548
  call void @nv_start_rx(%struct.net_device* %163) #13, !dbg !15549
  br label %if.end280, !dbg !15549

if.end280:                                        ; preds = %if.then279, %if.end276
  %164 = load i32, i32* %retval2, align 4, !dbg !15550
  store i32 %164, i32* %retval, align 4, !dbg !15551
  br label %return, !dbg !15551

return:                                           ; preds = %if.end280, %if.then86, %if.end8
  %165 = load i32, i32* %retval, align 4, !dbg !15552
  ret i32 %165, !dbg !15552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_carrier_ok(%struct.net_device* %dev) #2 !dbg !15553 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15554, metadata !DIExpression()), !dbg !15555
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15556
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !15557
  %call = call zeroext i1 @test_bit(i64 2, i64* %state) #13, !dbg !15558
  %lnot = xor i1 %call, true, !dbg !15559
  ret i1 %lnot, !dbg !15560
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_txrx_gate(%struct.net_device* %dev, i1 zeroext %gate) #2 !dbg !15561 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %gate.addr = alloca i8, align 1
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %powerstate = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15564, metadata !DIExpression()), !dbg !15565
  %frombool = zext i1 %gate to i8
  store i8 %frombool, i8* %gate.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %gate.addr, metadata !15566, metadata !DIExpression()), !dbg !15567
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !15568, metadata !DIExpression()), !dbg !15569
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15570
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !15571
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !15569
  call void @llvm.dbg.declare(metadata i8** %base, metadata !15572, metadata !DIExpression()), !dbg !15573
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15574
  %call1 = call i8* @get_hwbase(%struct.net_device* %1) #13, !dbg !15575
  store i8* %call1, i8** %base, align 8, !dbg !15573
  call void @llvm.dbg.declare(metadata i32* %powerstate, metadata !15576, metadata !DIExpression()), !dbg !15577
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15578
  %mac_in_use = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 30, !dbg !15580
  %3 = load i32, i32* %mac_in_use, align 8, !dbg !15580
  %tobool = icmp ne i32 %3, 0, !dbg !15578
  br i1 %tobool, label %if.end8, label %land.lhs.true, !dbg !15581

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15582
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 27, !dbg !15583
  %5 = load i32, i32* %driver_data, align 4, !dbg !15583
  %and = and i32 %5, 256, !dbg !15584
  %tobool2 = icmp ne i32 %and, 0, !dbg !15584
  br i1 %tobool2, label %if.then, label %if.end8, !dbg !15585

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %base, align 8, !dbg !15586
  %add.ptr = getelementptr i8, i8* %6, i64 1536, !dbg !15588
  %call3 = call i32 @readl(i8* %add.ptr) #13, !dbg !15589
  store i32 %call3, i32* %powerstate, align 4, !dbg !15590
  %7 = load i8, i8* %gate.addr, align 1, !dbg !15591
  %tobool4 = trunc i8 %7 to i1, !dbg !15591
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !15593

if.then5:                                         ; preds = %if.then
  %8 = load i32, i32* %powerstate, align 4, !dbg !15594
  %or = or i32 %8, 3840, !dbg !15594
  store i32 %or, i32* %powerstate, align 4, !dbg !15594
  br label %if.end, !dbg !15595

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %powerstate, align 4, !dbg !15596
  %and6 = and i32 %9, -3841, !dbg !15596
  store i32 %and6, i32* %powerstate, align 4, !dbg !15596
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %10 = load i32, i32* %powerstate, align 4, !dbg !15597
  %11 = load i8*, i8** %base, align 8, !dbg !15598
  %add.ptr7 = getelementptr i8, i8* %11, i64 1536, !dbg !15599
  call void @writel(i32 %10, i8* %add.ptr7) #13, !dbg !15600
  br label %if.end8, !dbg !15601

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !15602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_force_linkspeed(%struct.net_device* %dev, i32 %speed, i32 %duplex) #2 !dbg !15603 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %speed.addr = alloca i32, align 4
  %duplex.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %phyreg = alloca i32, align 4
  %txreg = alloca i32, align 4
  %mii_status = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15606, metadata !DIExpression()), !dbg !15607
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !15608, metadata !DIExpression()), !dbg !15609
  store i32 %duplex, i32* %duplex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %duplex.addr, metadata !15610, metadata !DIExpression()), !dbg !15611
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !15612, metadata !DIExpression()), !dbg !15613
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15614
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !15615
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !15615
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !15613
  call void @llvm.dbg.declare(metadata i8** %base, metadata !15616, metadata !DIExpression()), !dbg !15617
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15618
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !15619
  store i8* %call1, i8** %base, align 8, !dbg !15617
  call void @llvm.dbg.declare(metadata i32* %phyreg, metadata !15620, metadata !DIExpression()), !dbg !15621
  call void @llvm.dbg.declare(metadata i32* %txreg, metadata !15622, metadata !DIExpression()), !dbg !15623
  call void @llvm.dbg.declare(metadata i32* %mii_status, metadata !15624, metadata !DIExpression()), !dbg !15625
  %3 = load i32, i32* %speed.addr, align 4, !dbg !15626
  %or = or i32 65536, %3, !dbg !15627
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15628
  %linkspeed = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 6, !dbg !15629
  store i32 %or, i32* %linkspeed, align 4, !dbg !15630
  %5 = load i32, i32* %duplex.addr, align 4, !dbg !15631
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15632
  %duplex2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 7, !dbg !15633
  store i32 %5, i32* %duplex2, align 8, !dbg !15634
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15635
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15636
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 10, !dbg !15637
  %9 = load i32, i32* %phyaddr, align 4, !dbg !15637
  %call3 = call i32 @mii_rw(%struct.net_device* %7, i32 %9, i32 1, i32 -1) #13, !dbg !15638
  store i32 %call3, i32* %mii_status, align 4, !dbg !15639
  %10 = load i32, i32* %mii_status, align 4, !dbg !15640
  %and = and i32 %10, 256, !dbg !15642
  %tobool = icmp ne i32 %and, 0, !dbg !15642
  br i1 %tobool, label %if.then, label %if.end24, !dbg !15643

if.then:                                          ; preds = %entry
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15644
  %gigabit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 15, !dbg !15646
  store i16 256, i16* %gigabit, align 8, !dbg !15647
  %12 = load i8*, i8** %base, align 8, !dbg !15648
  %add.ptr = getelementptr i8, i8* %12, i64 156, !dbg !15649
  %call4 = call i32 @readl(i8* %add.ptr) #13, !dbg !15650
  store i32 %call4, i32* %phyreg, align 4, !dbg !15651
  %13 = load i32, i32* %phyreg, align 4, !dbg !15652
  %and5 = and i32 %13, -261889, !dbg !15652
  store i32 %and5, i32* %phyreg, align 4, !dbg !15652
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15653
  %linkspeed6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 6, !dbg !15655
  %15 = load i32, i32* %linkspeed6, align 4, !dbg !15655
  %and7 = and i32 %15, 4095, !dbg !15656
  %cmp = icmp eq i32 %and7, 1000, !dbg !15657
  br i1 %cmp, label %if.then8, label %if.else, !dbg !15658

if.then8:                                         ; preds = %if.then
  %16 = load i32, i32* %phyreg, align 4, !dbg !15659
  %or9 = or i32 %16, 32512, !dbg !15659
  store i32 %or9, i32* %phyreg, align 4, !dbg !15659
  br label %if.end22, !dbg !15660

if.else:                                          ; preds = %if.then
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15661
  %linkspeed10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 6, !dbg !15663
  %18 = load i32, i32* %linkspeed10, align 4, !dbg !15663
  %and11 = and i32 %18, 4095, !dbg !15664
  %cmp12 = icmp eq i32 %and11, 100, !dbg !15665
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !15666

if.then13:                                        ; preds = %if.else
  %19 = load i32, i32* %phyreg, align 4, !dbg !15667
  %or14 = or i32 %19, 32512, !dbg !15667
  store i32 %or14, i32* %phyreg, align 4, !dbg !15667
  br label %if.end21, !dbg !15668

if.else15:                                        ; preds = %if.else
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15669
  %linkspeed16 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 6, !dbg !15671
  %21 = load i32, i32* %linkspeed16, align 4, !dbg !15671
  %and17 = and i32 %21, 4095, !dbg !15672
  %cmp18 = icmp eq i32 %and17, 50, !dbg !15673
  br i1 %cmp18, label %if.then19, label %if.end, !dbg !15674

if.then19:                                        ; preds = %if.else15
  %22 = load i32, i32* %phyreg, align 4, !dbg !15675
  %or20 = or i32 %22, 261888, !dbg !15675
  store i32 %or20, i32* %phyreg, align 4, !dbg !15675
  br label %if.end, !dbg !15676

if.end:                                           ; preds = %if.then19, %if.else15
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then13
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then8
  %23 = load i32, i32* %phyreg, align 4, !dbg !15677
  %24 = load i8*, i8** %base, align 8, !dbg !15678
  %add.ptr23 = getelementptr i8, i8* %24, i64 156, !dbg !15679
  call void @writel(i32 %23, i8* %add.ptr23) #13, !dbg !15680
  br label %if.end24, !dbg !15681

if.end24:                                         ; preds = %if.end22, %entry
  %25 = load i8*, i8** %base, align 8, !dbg !15682
  %add.ptr25 = getelementptr i8, i8* %25, i64 192, !dbg !15683
  %call26 = call i32 @readl(i8* %add.ptr25) #13, !dbg !15684
  store i32 %call26, i32* %phyreg, align 4, !dbg !15685
  %26 = load i32, i32* %phyreg, align 4, !dbg !15686
  %and27 = and i32 %26, -260, !dbg !15686
  store i32 %and27, i32* %phyreg, align 4, !dbg !15686
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15687
  %duplex28 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 7, !dbg !15689
  %28 = load i32, i32* %duplex28, align 8, !dbg !15689
  %cmp29 = icmp eq i32 %28, 0, !dbg !15690
  br i1 %cmp29, label %if.then30, label %if.end32, !dbg !15691

if.then30:                                        ; preds = %if.end24
  %29 = load i32, i32* %phyreg, align 4, !dbg !15692
  %or31 = or i32 %29, 256, !dbg !15692
  store i32 %or31, i32* %phyreg, align 4, !dbg !15692
  br label %if.end32, !dbg !15693

if.end32:                                         ; preds = %if.then30, %if.end24
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15694
  %linkspeed33 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 6, !dbg !15696
  %31 = load i32, i32* %linkspeed33, align 4, !dbg !15696
  %and34 = and i32 %31, 4095, !dbg !15697
  %cmp35 = icmp eq i32 %and34, 100, !dbg !15698
  br i1 %cmp35, label %if.then36, label %if.else38, !dbg !15699

if.then36:                                        ; preds = %if.end32
  %32 = load i32, i32* %phyreg, align 4, !dbg !15700
  %or37 = or i32 %32, 1, !dbg !15700
  store i32 %or37, i32* %phyreg, align 4, !dbg !15700
  br label %if.end45, !dbg !15701

if.else38:                                        ; preds = %if.end32
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15702
  %linkspeed39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 6, !dbg !15704
  %34 = load i32, i32* %linkspeed39, align 4, !dbg !15704
  %and40 = and i32 %34, 4095, !dbg !15705
  %cmp41 = icmp eq i32 %and40, 50, !dbg !15706
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !15707

if.then42:                                        ; preds = %if.else38
  %35 = load i32, i32* %phyreg, align 4, !dbg !15708
  %or43 = or i32 %35, 2, !dbg !15708
  store i32 %or43, i32* %phyreg, align 4, !dbg !15708
  br label %if.end44, !dbg !15709

if.end44:                                         ; preds = %if.then42, %if.else38
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then36
  %36 = load i32, i32* %phyreg, align 4, !dbg !15710
  %37 = load i8*, i8** %base, align 8, !dbg !15711
  %add.ptr46 = getelementptr i8, i8* %37, i64 192, !dbg !15712
  call void @writel(i32 %36, i8* %add.ptr46) #13, !dbg !15713
  %38 = load i32, i32* %phyreg, align 4, !dbg !15714
  %and47 = and i32 %38, 268435456, !dbg !15716
  %tobool48 = icmp ne i32 %and47, 0, !dbg !15716
  br i1 %tobool48, label %if.then49, label %if.else56, !dbg !15717

if.then49:                                        ; preds = %if.end45
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15718
  %linkspeed50 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 6, !dbg !15721
  %40 = load i32, i32* %linkspeed50, align 4, !dbg !15721
  %and51 = and i32 %40, 4095, !dbg !15722
  %cmp52 = icmp eq i32 %and51, 50, !dbg !15723
  br i1 %cmp52, label %if.then53, label %if.else54, !dbg !15724

if.then53:                                        ; preds = %if.then49
  store i32 1312015, i32* %txreg, align 4, !dbg !15725
  br label %if.end55, !dbg !15726

if.else54:                                        ; preds = %if.then49
  store i32 1443599, i32* %txreg, align 4, !dbg !15727
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.then53
  br label %if.end57, !dbg !15728

if.else56:                                        ; preds = %if.end45
  store i32 1377551, i32* %txreg, align 4, !dbg !15729
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.end55
  %41 = load i32, i32* %txreg, align 4, !dbg !15731
  %42 = load i8*, i8** %base, align 8, !dbg !15732
  %add.ptr58 = getelementptr i8, i8* %42, i64 160, !dbg !15733
  call void @writel(i32 %41, i8* %add.ptr58) #13, !dbg !15734
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15735
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 24, !dbg !15737
  %44 = load i32, i32* %desc_ver, align 8, !dbg !15737
  %cmp59 = icmp eq i32 %44, 1, !dbg !15738
  br i1 %cmp59, label %if.then60, label %if.else61, !dbg !15739

if.then60:                                        ; preds = %if.end57
  store i32 2097168, i32* %txreg, align 4, !dbg !15740
  br label %if.end68, !dbg !15742

if.else61:                                        ; preds = %if.end57
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15743
  %linkspeed62 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 6, !dbg !15746
  %46 = load i32, i32* %linkspeed62, align 4, !dbg !15746
  %and63 = and i32 %46, 4095, !dbg !15747
  %cmp64 = icmp eq i32 %and63, 50, !dbg !15748
  br i1 %cmp64, label %if.then65, label %if.else66, !dbg !15749

if.then65:                                        ; preds = %if.else61
  store i32 266371072, i32* %txreg, align 4, !dbg !15750
  br label %if.end67, !dbg !15751

if.else66:                                        ; preds = %if.else61
  store i32 31490048, i32* %txreg, align 4, !dbg !15752
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then65
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then60
  %47 = load i32, i32* %txreg, align 4, !dbg !15753
  %48 = load i8*, i8** %base, align 8, !dbg !15754
  %add.ptr69 = getelementptr i8, i8* %48, i64 316, !dbg !15755
  call void @writel(i32 %47, i8* %add.ptr69) #13, !dbg !15756
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15757
  %duplex70 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 7, !dbg !15758
  %50 = load i32, i32* %duplex70, align 8, !dbg !15758
  %tobool71 = icmp ne i32 %50, 0, !dbg !15757
  %51 = zext i1 %tobool71 to i64, !dbg !15757
  %cond = select i1 %tobool71, i32 0, i32 2, !dbg !15757
  %or72 = or i32 3870524, %cond, !dbg !15759
  %52 = load i8*, i8** %base, align 8, !dbg !15760
  %add.ptr73 = getelementptr i8, i8* %52, i64 128, !dbg !15761
  call void @writel(i32 %or72, i8* %add.ptr73) #13, !dbg !15762
  %53 = load i8*, i8** %base, align 8, !dbg !15763
  call void @pci_push(i8* %53) #13, !dbg !15764
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15765
  %linkspeed74 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 6, !dbg !15766
  %55 = load i32, i32* %linkspeed74, align 4, !dbg !15766
  %56 = load i8*, i8** %base, align 8, !dbg !15767
  %add.ptr75 = getelementptr i8, i8* %56, i64 272, !dbg !15768
  call void @writel(i32 %55, i8* %add.ptr75) #13, !dbg !15769
  %57 = load i8*, i8** %base, align 8, !dbg !15770
  call void @pci_push(i8* %57) #13, !dbg !15771
  ret void, !dbg !15772
}

; Function Attrs: noredzone
declare dso_local void @enable_irq(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_update_stats(%struct.net_device* %dev) #2 !dbg !8188 {
entry:
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !15773, metadata !DIExpression()), !dbg !15776
  %tmp.i = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp41 = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15779, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !15781, metadata !DIExpression()), !dbg !15782
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15783
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !15784
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !15784
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !15782
  call void @llvm.dbg.declare(metadata i8** %base, metadata !15785, metadata !DIExpression()), !dbg !15786
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15787
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !15788
  store i8* %call1, i8** %base, align 8, !dbg !15786
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !15789, metadata !DIExpression()), !dbg !15790
  %3 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #9, !dbg !15776, !srcloc !15791
  store i32 %3, i32* %pfo_val__.i, align 4, !dbg !15776
  %4 = load i32, i32* %pfo_val__.i, align 4, !dbg !15776
  %conv.i = zext i32 %4 to i64, !dbg !15776
  store i32 %4, i32* %tmp.i, align 4, !dbg !15776
  %5 = load i32, i32* %tmp.i, align 4, !dbg !15776
  %and.i = and i32 %5, 2147483647, !dbg !15792
  %conv = sext i32 %and.i to i64, !dbg !15790
  %and = and i64 %conv, 983040, !dbg !15790
  %tobool = icmp ne i64 %and, 0, !dbg !15790
  %lnot = xor i1 %tobool, true, !dbg !15790
  %lnot3 = xor i1 %lnot, true, !dbg !15790
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15790
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !15790
  %6 = load i32, i32* %__ret_warn_once, align 4, !dbg !15793
  %tobool4 = icmp ne i32 %6, 0, !dbg !15793
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !15793

land.rhs:                                         ; preds = %entry
  %7 = load i8, i8* @nv_update_stats.__warned, align 1, !dbg !15793
  %tobool5 = trunc i8 %7 to i1, !dbg !15793
  %lnot6 = xor i1 %tobool5, true, !dbg !15793
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %lnot6, %land.rhs ], !dbg !15795
  %lnot8 = xor i1 %8, true, !dbg !15793
  %lnot10 = xor i1 %lnot8, true, !dbg !15793
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !15793
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !15793
  %tobool13 = icmp ne i64 %conv12, 0, !dbg !15793
  br i1 %tobool13, label %if.then, label %if.end40, !dbg !15790

if.then:                                          ; preds = %land.end
  store i8 1, i8* @nv_update_stats.__warned, align 1, !dbg !15796
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15798, metadata !DIExpression()), !dbg !15800
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !15800
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !15801
  %tobool14 = icmp ne i32 %9, 0, !dbg !15801
  %lnot15 = xor i1 %tobool14, true, !dbg !15801
  %lnot17 = xor i1 %lnot15, true, !dbg !15801
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !15801
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !15801
  %tobool20 = icmp ne i64 %conv19, 0, !dbg !15801
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !15800

if.then21:                                        ; preds = %if.then
  br label %do.body, !dbg !15801

do.body:                                          ; preds = %if.then21
  br label %do.body22, !dbg !15803

do.body22:                                        ; preds = %do.body
  br label %do.end, !dbg !15805

do.end:                                           ; preds = %do.body22
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !15803
  br label %do.body23, !dbg !15803

do.body23:                                        ; preds = %do.end
  br label %do.body24, !dbg !15807

do.body24:                                        ; preds = %do.body23
  br label %do.end25, !dbg !15809

do.end25:                                         ; preds = %do.body24
  br label %do.body26, !dbg !15807

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.33, i64 0, i64 0), i32 1672, i32 2313, i64 12) #10, !dbg !15811, !srcloc !15813
  br label %do.end27, !dbg !15811

do.end27:                                         ; preds = %do.body26
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 325) #10, !dbg !15814, !srcloc !15816
  br label %do.body28, !dbg !15807

do.body28:                                        ; preds = %do.end27
  br label %do.end29, !dbg !15817

do.end29:                                         ; preds = %do.body28
  br label %do.end30, !dbg !15807

do.end30:                                         ; preds = %do.end29
  br label %do.body31, !dbg !15803

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !15819

do.end32:                                         ; preds = %do.body31
  br label %do.end33, !dbg !15803

do.end33:                                         ; preds = %do.end32
  br label %if.end, !dbg !15803

if.end:                                           ; preds = %do.end33, %if.then
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !15800
  %tobool34 = icmp ne i32 %10, 0, !dbg !15800
  %lnot35 = xor i1 %tobool34, true, !dbg !15800
  %lnot37 = xor i1 %lnot35, true, !dbg !15800
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !15800
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !15800
  store i64 %conv39, i64* %tmp, align 8, !dbg !15801
  %11 = load i64, i64* %tmp, align 8, !dbg !15800
  br label %if.end40, !dbg !15796

if.end40:                                         ; preds = %if.end, %land.end
  %12 = load i32, i32* %__ret_warn_once, align 4, !dbg !15790
  %tobool42 = icmp ne i32 %12, 0, !dbg !15790
  %lnot43 = xor i1 %tobool42, true, !dbg !15790
  %lnot45 = xor i1 %lnot43, true, !dbg !15790
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !15790
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !15790
  store i64 %conv47, i64* %tmp41, align 8, !dbg !15793
  %13 = load i64, i64* %tmp41, align 8, !dbg !15790
  br label %do.body48, !dbg !15821

do.body48:                                        ; preds = %if.end40
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15822
  %hwstats_lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 3, !dbg !15822
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %hwstats_lock, i32 0, i32 0, !dbg !15822
  %rlock = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !15822
  br label %do.end49, !dbg !15822

do.end49:                                         ; preds = %do.body48
  %16 = load i8*, i8** %base, align 8, !dbg !15824
  %add.ptr = getelementptr i8, i8* %16, i64 640, !dbg !15825
  %call50 = call i32 @readl(i8* %add.ptr) #13, !dbg !15826
  %conv51 = zext i32 %call50 to i64, !dbg !15826
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15827
  %estats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 4, !dbg !15828
  %tx_bytes = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats, i32 0, i32 0, !dbg !15829
  %18 = load i64, i64* %tx_bytes, align 8, !dbg !15830
  %add = add i64 %18, %conv51, !dbg !15830
  store i64 %add, i64* %tx_bytes, align 8, !dbg !15830
  %19 = load i8*, i8** %base, align 8, !dbg !15831
  %add.ptr52 = getelementptr i8, i8* %19, i64 644, !dbg !15832
  %call53 = call i32 @readl(i8* %add.ptr52) #13, !dbg !15833
  %conv54 = zext i32 %call53 to i64, !dbg !15833
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15834
  %estats55 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 4, !dbg !15835
  %tx_zero_rexmt = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats55, i32 0, i32 1, !dbg !15836
  %21 = load i64, i64* %tx_zero_rexmt, align 8, !dbg !15837
  %add56 = add i64 %21, %conv54, !dbg !15837
  store i64 %add56, i64* %tx_zero_rexmt, align 8, !dbg !15837
  %22 = load i8*, i8** %base, align 8, !dbg !15838
  %add.ptr57 = getelementptr i8, i8* %22, i64 648, !dbg !15839
  %call58 = call i32 @readl(i8* %add.ptr57) #13, !dbg !15840
  %conv59 = zext i32 %call58 to i64, !dbg !15840
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15841
  %estats60 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 4, !dbg !15842
  %tx_one_rexmt = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats60, i32 0, i32 2, !dbg !15843
  %24 = load i64, i64* %tx_one_rexmt, align 8, !dbg !15844
  %add61 = add i64 %24, %conv59, !dbg !15844
  store i64 %add61, i64* %tx_one_rexmt, align 8, !dbg !15844
  %25 = load i8*, i8** %base, align 8, !dbg !15845
  %add.ptr62 = getelementptr i8, i8* %25, i64 652, !dbg !15846
  %call63 = call i32 @readl(i8* %add.ptr62) #13, !dbg !15847
  %conv64 = zext i32 %call63 to i64, !dbg !15847
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15848
  %estats65 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 4, !dbg !15849
  %tx_many_rexmt = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats65, i32 0, i32 3, !dbg !15850
  %27 = load i64, i64* %tx_many_rexmt, align 8, !dbg !15851
  %add66 = add i64 %27, %conv64, !dbg !15851
  store i64 %add66, i64* %tx_many_rexmt, align 8, !dbg !15851
  %28 = load i8*, i8** %base, align 8, !dbg !15852
  %add.ptr67 = getelementptr i8, i8* %28, i64 656, !dbg !15853
  %call68 = call i32 @readl(i8* %add.ptr67) #13, !dbg !15854
  %conv69 = zext i32 %call68 to i64, !dbg !15854
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15855
  %estats70 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 4, !dbg !15856
  %tx_late_collision = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats70, i32 0, i32 4, !dbg !15857
  %30 = load i64, i64* %tx_late_collision, align 8, !dbg !15858
  %add71 = add i64 %30, %conv69, !dbg !15858
  store i64 %add71, i64* %tx_late_collision, align 8, !dbg !15858
  %31 = load i8*, i8** %base, align 8, !dbg !15859
  %add.ptr72 = getelementptr i8, i8* %31, i64 660, !dbg !15860
  %call73 = call i32 @readl(i8* %add.ptr72) #13, !dbg !15861
  %conv74 = zext i32 %call73 to i64, !dbg !15861
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15862
  %estats75 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 4, !dbg !15863
  %tx_fifo_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats75, i32 0, i32 5, !dbg !15864
  %33 = load i64, i64* %tx_fifo_errors, align 8, !dbg !15865
  %add76 = add i64 %33, %conv74, !dbg !15865
  store i64 %add76, i64* %tx_fifo_errors, align 8, !dbg !15865
  %34 = load i8*, i8** %base, align 8, !dbg !15866
  %add.ptr77 = getelementptr i8, i8* %34, i64 664, !dbg !15867
  %call78 = call i32 @readl(i8* %add.ptr77) #13, !dbg !15868
  %conv79 = zext i32 %call78 to i64, !dbg !15868
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15869
  %estats80 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 4, !dbg !15870
  %tx_carrier_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats80, i32 0, i32 6, !dbg !15871
  %36 = load i64, i64* %tx_carrier_errors, align 8, !dbg !15872
  %add81 = add i64 %36, %conv79, !dbg !15872
  store i64 %add81, i64* %tx_carrier_errors, align 8, !dbg !15872
  %37 = load i8*, i8** %base, align 8, !dbg !15873
  %add.ptr82 = getelementptr i8, i8* %37, i64 668, !dbg !15874
  %call83 = call i32 @readl(i8* %add.ptr82) #13, !dbg !15875
  %conv84 = zext i32 %call83 to i64, !dbg !15875
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15876
  %estats85 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 4, !dbg !15877
  %tx_excess_deferral = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats85, i32 0, i32 7, !dbg !15878
  %39 = load i64, i64* %tx_excess_deferral, align 8, !dbg !15879
  %add86 = add i64 %39, %conv84, !dbg !15879
  store i64 %add86, i64* %tx_excess_deferral, align 8, !dbg !15879
  %40 = load i8*, i8** %base, align 8, !dbg !15880
  %add.ptr87 = getelementptr i8, i8* %40, i64 672, !dbg !15881
  %call88 = call i32 @readl(i8* %add.ptr87) #13, !dbg !15882
  %conv89 = zext i32 %call88 to i64, !dbg !15882
  %41 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15883
  %estats90 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %41, i32 0, i32 4, !dbg !15884
  %tx_retry_error = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats90, i32 0, i32 8, !dbg !15885
  %42 = load i64, i64* %tx_retry_error, align 8, !dbg !15886
  %add91 = add i64 %42, %conv89, !dbg !15886
  store i64 %add91, i64* %tx_retry_error, align 8, !dbg !15886
  %43 = load i8*, i8** %base, align 8, !dbg !15887
  %add.ptr92 = getelementptr i8, i8* %43, i64 676, !dbg !15888
  %call93 = call i32 @readl(i8* %add.ptr92) #13, !dbg !15889
  %conv94 = zext i32 %call93 to i64, !dbg !15889
  %44 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15890
  %estats95 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %44, i32 0, i32 4, !dbg !15891
  %rx_frame_error = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats95, i32 0, i32 9, !dbg !15892
  %45 = load i64, i64* %rx_frame_error, align 8, !dbg !15893
  %add96 = add i64 %45, %conv94, !dbg !15893
  store i64 %add96, i64* %rx_frame_error, align 8, !dbg !15893
  %46 = load i8*, i8** %base, align 8, !dbg !15894
  %add.ptr97 = getelementptr i8, i8* %46, i64 680, !dbg !15895
  %call98 = call i32 @readl(i8* %add.ptr97) #13, !dbg !15896
  %conv99 = zext i32 %call98 to i64, !dbg !15896
  %47 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15897
  %estats100 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %47, i32 0, i32 4, !dbg !15898
  %rx_extra_byte = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats100, i32 0, i32 10, !dbg !15899
  %48 = load i64, i64* %rx_extra_byte, align 8, !dbg !15900
  %add101 = add i64 %48, %conv99, !dbg !15900
  store i64 %add101, i64* %rx_extra_byte, align 8, !dbg !15900
  %49 = load i8*, i8** %base, align 8, !dbg !15901
  %add.ptr102 = getelementptr i8, i8* %49, i64 684, !dbg !15902
  %call103 = call i32 @readl(i8* %add.ptr102) #13, !dbg !15903
  %conv104 = zext i32 %call103 to i64, !dbg !15903
  %50 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15904
  %estats105 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %50, i32 0, i32 4, !dbg !15905
  %rx_late_collision = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats105, i32 0, i32 11, !dbg !15906
  %51 = load i64, i64* %rx_late_collision, align 8, !dbg !15907
  %add106 = add i64 %51, %conv104, !dbg !15907
  store i64 %add106, i64* %rx_late_collision, align 8, !dbg !15907
  %52 = load i8*, i8** %base, align 8, !dbg !15908
  %add.ptr107 = getelementptr i8, i8* %52, i64 688, !dbg !15909
  %call108 = call i32 @readl(i8* %add.ptr107) #13, !dbg !15910
  %conv109 = zext i32 %call108 to i64, !dbg !15910
  %53 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15911
  %estats110 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %53, i32 0, i32 4, !dbg !15912
  %rx_runt = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats110, i32 0, i32 12, !dbg !15913
  %54 = load i64, i64* %rx_runt, align 8, !dbg !15914
  %add111 = add i64 %54, %conv109, !dbg !15914
  store i64 %add111, i64* %rx_runt, align 8, !dbg !15914
  %55 = load i8*, i8** %base, align 8, !dbg !15915
  %add.ptr112 = getelementptr i8, i8* %55, i64 692, !dbg !15916
  %call113 = call i32 @readl(i8* %add.ptr112) #13, !dbg !15917
  %conv114 = zext i32 %call113 to i64, !dbg !15917
  %56 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15918
  %estats115 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %56, i32 0, i32 4, !dbg !15919
  %rx_frame_too_long = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats115, i32 0, i32 13, !dbg !15920
  %57 = load i64, i64* %rx_frame_too_long, align 8, !dbg !15921
  %add116 = add i64 %57, %conv114, !dbg !15921
  store i64 %add116, i64* %rx_frame_too_long, align 8, !dbg !15921
  %58 = load i8*, i8** %base, align 8, !dbg !15922
  %add.ptr117 = getelementptr i8, i8* %58, i64 696, !dbg !15923
  %call118 = call i32 @readl(i8* %add.ptr117) #13, !dbg !15924
  %conv119 = zext i32 %call118 to i64, !dbg !15924
  %59 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15925
  %estats120 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %59, i32 0, i32 4, !dbg !15926
  %rx_over_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats120, i32 0, i32 14, !dbg !15927
  %60 = load i64, i64* %rx_over_errors, align 8, !dbg !15928
  %add121 = add i64 %60, %conv119, !dbg !15928
  store i64 %add121, i64* %rx_over_errors, align 8, !dbg !15928
  %61 = load i8*, i8** %base, align 8, !dbg !15929
  %add.ptr122 = getelementptr i8, i8* %61, i64 700, !dbg !15930
  %call123 = call i32 @readl(i8* %add.ptr122) #13, !dbg !15931
  %conv124 = zext i32 %call123 to i64, !dbg !15931
  %62 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15932
  %estats125 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %62, i32 0, i32 4, !dbg !15933
  %rx_crc_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats125, i32 0, i32 15, !dbg !15934
  %63 = load i64, i64* %rx_crc_errors, align 8, !dbg !15935
  %add126 = add i64 %63, %conv124, !dbg !15935
  store i64 %add126, i64* %rx_crc_errors, align 8, !dbg !15935
  %64 = load i8*, i8** %base, align 8, !dbg !15936
  %add.ptr127 = getelementptr i8, i8* %64, i64 704, !dbg !15937
  %call128 = call i32 @readl(i8* %add.ptr127) #13, !dbg !15938
  %conv129 = zext i32 %call128 to i64, !dbg !15938
  %65 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15939
  %estats130 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %65, i32 0, i32 4, !dbg !15940
  %rx_frame_align_error = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats130, i32 0, i32 16, !dbg !15941
  %66 = load i64, i64* %rx_frame_align_error, align 8, !dbg !15942
  %add131 = add i64 %66, %conv129, !dbg !15942
  store i64 %add131, i64* %rx_frame_align_error, align 8, !dbg !15942
  %67 = load i8*, i8** %base, align 8, !dbg !15943
  %add.ptr132 = getelementptr i8, i8* %67, i64 708, !dbg !15944
  %call133 = call i32 @readl(i8* %add.ptr132) #13, !dbg !15945
  %conv134 = zext i32 %call133 to i64, !dbg !15945
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15946
  %estats135 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 4, !dbg !15947
  %rx_length_error = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats135, i32 0, i32 17, !dbg !15948
  %69 = load i64, i64* %rx_length_error, align 8, !dbg !15949
  %add136 = add i64 %69, %conv134, !dbg !15949
  store i64 %add136, i64* %rx_length_error, align 8, !dbg !15949
  %70 = load i8*, i8** %base, align 8, !dbg !15950
  %add.ptr137 = getelementptr i8, i8* %70, i64 712, !dbg !15951
  %call138 = call i32 @readl(i8* %add.ptr137) #13, !dbg !15952
  %conv139 = zext i32 %call138 to i64, !dbg !15952
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15953
  %estats140 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 4, !dbg !15954
  %rx_unicast = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats140, i32 0, i32 18, !dbg !15955
  %72 = load i64, i64* %rx_unicast, align 8, !dbg !15956
  %add141 = add i64 %72, %conv139, !dbg !15956
  store i64 %add141, i64* %rx_unicast, align 8, !dbg !15956
  %73 = load i8*, i8** %base, align 8, !dbg !15957
  %add.ptr142 = getelementptr i8, i8* %73, i64 716, !dbg !15958
  %call143 = call i32 @readl(i8* %add.ptr142) #13, !dbg !15959
  %conv144 = zext i32 %call143 to i64, !dbg !15959
  %74 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15960
  %estats145 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %74, i32 0, i32 4, !dbg !15961
  %rx_multicast = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats145, i32 0, i32 19, !dbg !15962
  %75 = load i64, i64* %rx_multicast, align 8, !dbg !15963
  %add146 = add i64 %75, %conv144, !dbg !15963
  store i64 %add146, i64* %rx_multicast, align 8, !dbg !15963
  %76 = load i8*, i8** %base, align 8, !dbg !15964
  %add.ptr147 = getelementptr i8, i8* %76, i64 720, !dbg !15965
  %call148 = call i32 @readl(i8* %add.ptr147) #13, !dbg !15966
  %conv149 = zext i32 %call148 to i64, !dbg !15966
  %77 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15967
  %estats150 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %77, i32 0, i32 4, !dbg !15968
  %rx_broadcast = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats150, i32 0, i32 20, !dbg !15969
  %78 = load i64, i64* %rx_broadcast, align 8, !dbg !15970
  %add151 = add i64 %78, %conv149, !dbg !15970
  store i64 %add151, i64* %rx_broadcast, align 8, !dbg !15970
  %79 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15971
  %estats152 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %79, i32 0, i32 4, !dbg !15972
  %rx_unicast153 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats152, i32 0, i32 18, !dbg !15973
  %80 = load i64, i64* %rx_unicast153, align 8, !dbg !15973
  %81 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15974
  %estats154 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %81, i32 0, i32 4, !dbg !15975
  %rx_multicast155 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats154, i32 0, i32 19, !dbg !15976
  %82 = load i64, i64* %rx_multicast155, align 8, !dbg !15976
  %add156 = add i64 %80, %82, !dbg !15977
  %83 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15978
  %estats157 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %83, i32 0, i32 4, !dbg !15979
  %rx_broadcast158 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats157, i32 0, i32 20, !dbg !15980
  %84 = load i64, i64* %rx_broadcast158, align 8, !dbg !15980
  %add159 = add i64 %add156, %84, !dbg !15981
  %85 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15982
  %estats160 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %85, i32 0, i32 4, !dbg !15983
  %rx_packets = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats160, i32 0, i32 21, !dbg !15984
  store i64 %add159, i64* %rx_packets, align 8, !dbg !15985
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15986
  %estats161 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %86, i32 0, i32 4, !dbg !15987
  %rx_crc_errors162 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats161, i32 0, i32 15, !dbg !15988
  %87 = load i64, i64* %rx_crc_errors162, align 8, !dbg !15988
  %88 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15989
  %estats163 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %88, i32 0, i32 4, !dbg !15990
  %rx_over_errors164 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats163, i32 0, i32 14, !dbg !15991
  %89 = load i64, i64* %rx_over_errors164, align 8, !dbg !15991
  %add165 = add i64 %87, %89, !dbg !15992
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15993
  %estats166 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 4, !dbg !15994
  %rx_frame_error167 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats166, i32 0, i32 9, !dbg !15995
  %91 = load i64, i64* %rx_frame_error167, align 8, !dbg !15995
  %add168 = add i64 %add165, %91, !dbg !15996
  %92 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !15997
  %estats169 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %92, i32 0, i32 4, !dbg !15998
  %rx_frame_align_error170 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats169, i32 0, i32 16, !dbg !15999
  %93 = load i64, i64* %rx_frame_align_error170, align 8, !dbg !15999
  %94 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16000
  %estats171 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %94, i32 0, i32 4, !dbg !16001
  %rx_extra_byte172 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats171, i32 0, i32 10, !dbg !16002
  %95 = load i64, i64* %rx_extra_byte172, align 8, !dbg !16002
  %sub = sub i64 %93, %95, !dbg !16003
  %add173 = add i64 %add168, %sub, !dbg !16004
  %96 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16005
  %estats174 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %96, i32 0, i32 4, !dbg !16006
  %rx_late_collision175 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats174, i32 0, i32 11, !dbg !16007
  %97 = load i64, i64* %rx_late_collision175, align 8, !dbg !16007
  %add176 = add i64 %add173, %97, !dbg !16008
  %98 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16009
  %estats177 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %98, i32 0, i32 4, !dbg !16010
  %rx_runt178 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats177, i32 0, i32 12, !dbg !16011
  %99 = load i64, i64* %rx_runt178, align 8, !dbg !16011
  %add179 = add i64 %add176, %99, !dbg !16012
  %100 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16013
  %estats180 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %100, i32 0, i32 4, !dbg !16014
  %rx_frame_too_long181 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats180, i32 0, i32 13, !dbg !16015
  %101 = load i64, i64* %rx_frame_too_long181, align 8, !dbg !16015
  %add182 = add i64 %add179, %101, !dbg !16016
  %102 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16017
  %estats183 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %102, i32 0, i32 4, !dbg !16018
  %rx_errors_total = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats183, i32 0, i32 22, !dbg !16019
  store i64 %add182, i64* %rx_errors_total, align 8, !dbg !16020
  %103 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16021
  %estats184 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %103, i32 0, i32 4, !dbg !16022
  %tx_late_collision185 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats184, i32 0, i32 4, !dbg !16023
  %104 = load i64, i64* %tx_late_collision185, align 8, !dbg !16023
  %105 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16024
  %estats186 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %105, i32 0, i32 4, !dbg !16025
  %tx_fifo_errors187 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats186, i32 0, i32 5, !dbg !16026
  %106 = load i64, i64* %tx_fifo_errors187, align 8, !dbg !16026
  %add188 = add i64 %104, %106, !dbg !16027
  %107 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16028
  %estats189 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %107, i32 0, i32 4, !dbg !16029
  %tx_carrier_errors190 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats189, i32 0, i32 6, !dbg !16030
  %108 = load i64, i64* %tx_carrier_errors190, align 8, !dbg !16030
  %add191 = add i64 %add188, %108, !dbg !16031
  %109 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16032
  %estats192 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %109, i32 0, i32 4, !dbg !16033
  %tx_excess_deferral193 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats192, i32 0, i32 7, !dbg !16034
  %110 = load i64, i64* %tx_excess_deferral193, align 8, !dbg !16034
  %add194 = add i64 %add191, %110, !dbg !16035
  %111 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16036
  %estats195 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %111, i32 0, i32 4, !dbg !16037
  %tx_retry_error196 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats195, i32 0, i32 8, !dbg !16038
  %112 = load i64, i64* %tx_retry_error196, align 8, !dbg !16038
  %add197 = add i64 %add194, %112, !dbg !16039
  %113 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16040
  %estats198 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %113, i32 0, i32 4, !dbg !16041
  %tx_errors_total = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats198, i32 0, i32 23, !dbg !16042
  store i64 %add197, i64* %tx_errors_total, align 8, !dbg !16043
  %114 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16044
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %114, i32 0, i32 27, !dbg !16046
  %115 = load i32, i32* %driver_data, align 4, !dbg !16046
  %and199 = and i32 %115, 1024, !dbg !16047
  %tobool200 = icmp ne i32 %and199, 0, !dbg !16047
  br i1 %tobool200, label %if.then201, label %if.end237, !dbg !16048

if.then201:                                       ; preds = %do.end49
  %116 = load i8*, i8** %base, align 8, !dbg !16049
  %add.ptr202 = getelementptr i8, i8* %116, i64 724, !dbg !16051
  %call203 = call i32 @readl(i8* %add.ptr202) #13, !dbg !16052
  %conv204 = zext i32 %call203 to i64, !dbg !16052
  %117 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16053
  %estats205 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %117, i32 0, i32 4, !dbg !16054
  %tx_deferral = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats205, i32 0, i32 24, !dbg !16055
  %118 = load i64, i64* %tx_deferral, align 8, !dbg !16056
  %add206 = add i64 %118, %conv204, !dbg !16056
  store i64 %add206, i64* %tx_deferral, align 8, !dbg !16056
  %119 = load i8*, i8** %base, align 8, !dbg !16057
  %add.ptr207 = getelementptr i8, i8* %119, i64 728, !dbg !16058
  %call208 = call i32 @readl(i8* %add.ptr207) #13, !dbg !16059
  %conv209 = zext i32 %call208 to i64, !dbg !16059
  %120 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16060
  %estats210 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %120, i32 0, i32 4, !dbg !16061
  %tx_packets = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats210, i32 0, i32 25, !dbg !16062
  %121 = load i64, i64* %tx_packets, align 8, !dbg !16063
  %add211 = add i64 %121, %conv209, !dbg !16063
  store i64 %add211, i64* %tx_packets, align 8, !dbg !16063
  %122 = load i8*, i8** %base, align 8, !dbg !16064
  %add.ptr212 = getelementptr i8, i8* %122, i64 732, !dbg !16065
  %call213 = call i32 @readl(i8* %add.ptr212) #13, !dbg !16066
  %conv214 = zext i32 %call213 to i64, !dbg !16066
  %123 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16067
  %estats215 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %123, i32 0, i32 4, !dbg !16068
  %rx_bytes = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats215, i32 0, i32 26, !dbg !16069
  %124 = load i64, i64* %rx_bytes, align 8, !dbg !16070
  %add216 = add i64 %124, %conv214, !dbg !16070
  store i64 %add216, i64* %rx_bytes, align 8, !dbg !16070
  %125 = load i8*, i8** %base, align 8, !dbg !16071
  %add.ptr217 = getelementptr i8, i8* %125, i64 736, !dbg !16072
  %call218 = call i32 @readl(i8* %add.ptr217) #13, !dbg !16073
  %conv219 = zext i32 %call218 to i64, !dbg !16073
  %126 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16074
  %estats220 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %126, i32 0, i32 4, !dbg !16075
  %tx_pause = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats220, i32 0, i32 27, !dbg !16076
  %127 = load i64, i64* %tx_pause, align 8, !dbg !16077
  %add221 = add i64 %127, %conv219, !dbg !16077
  store i64 %add221, i64* %tx_pause, align 8, !dbg !16077
  %128 = load i8*, i8** %base, align 8, !dbg !16078
  %add.ptr222 = getelementptr i8, i8* %128, i64 740, !dbg !16079
  %call223 = call i32 @readl(i8* %add.ptr222) #13, !dbg !16080
  %conv224 = zext i32 %call223 to i64, !dbg !16080
  %129 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16081
  %estats225 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %129, i32 0, i32 4, !dbg !16082
  %rx_pause = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats225, i32 0, i32 28, !dbg !16083
  %130 = load i64, i64* %rx_pause, align 8, !dbg !16084
  %add226 = add i64 %130, %conv224, !dbg !16084
  store i64 %add226, i64* %rx_pause, align 8, !dbg !16084
  %131 = load i8*, i8** %base, align 8, !dbg !16085
  %add.ptr227 = getelementptr i8, i8* %131, i64 744, !dbg !16086
  %call228 = call i32 @readl(i8* %add.ptr227) #13, !dbg !16087
  %conv229 = zext i32 %call228 to i64, !dbg !16087
  %132 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16088
  %estats230 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %132, i32 0, i32 4, !dbg !16089
  %rx_drop_frame = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats230, i32 0, i32 29, !dbg !16090
  %133 = load i64, i64* %rx_drop_frame, align 8, !dbg !16091
  %add231 = add i64 %133, %conv229, !dbg !16091
  store i64 %add231, i64* %rx_drop_frame, align 8, !dbg !16091
  %134 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16092
  %estats232 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %134, i32 0, i32 4, !dbg !16093
  %rx_drop_frame233 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats232, i32 0, i32 29, !dbg !16094
  %135 = load i64, i64* %rx_drop_frame233, align 8, !dbg !16094
  %136 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16095
  %estats234 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %136, i32 0, i32 4, !dbg !16096
  %rx_errors_total235 = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats234, i32 0, i32 22, !dbg !16097
  %137 = load i64, i64* %rx_errors_total235, align 8, !dbg !16098
  %add236 = add i64 %137, %135, !dbg !16098
  store i64 %add236, i64* %rx_errors_total235, align 8, !dbg !16098
  br label %if.end237, !dbg !16099

if.end237:                                        ; preds = %if.then201, %do.end49
  %138 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16100
  %driver_data238 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %138, i32 0, i32 27, !dbg !16102
  %139 = load i32, i32* %driver_data238, align 4, !dbg !16102
  %and239 = and i32 %139, 2048, !dbg !16103
  %tobool240 = icmp ne i32 %and239, 0, !dbg !16103
  br i1 %tobool240, label %if.then241, label %if.end257, !dbg !16104

if.then241:                                       ; preds = %if.end237
  %140 = load i8*, i8** %base, align 8, !dbg !16105
  %add.ptr242 = getelementptr i8, i8* %140, i64 416, !dbg !16107
  %call243 = call i32 @readl(i8* %add.ptr242) #13, !dbg !16108
  %conv244 = zext i32 %call243 to i64, !dbg !16108
  %141 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16109
  %estats245 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %141, i32 0, i32 4, !dbg !16110
  %tx_unicast = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats245, i32 0, i32 30, !dbg !16111
  %142 = load i64, i64* %tx_unicast, align 8, !dbg !16112
  %add246 = add i64 %142, %conv244, !dbg !16112
  store i64 %add246, i64* %tx_unicast, align 8, !dbg !16112
  %143 = load i8*, i8** %base, align 8, !dbg !16113
  %add.ptr247 = getelementptr i8, i8* %143, i64 420, !dbg !16114
  %call248 = call i32 @readl(i8* %add.ptr247) #13, !dbg !16115
  %conv249 = zext i32 %call248 to i64, !dbg !16115
  %144 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16116
  %estats250 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %144, i32 0, i32 4, !dbg !16117
  %tx_multicast = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats250, i32 0, i32 31, !dbg !16118
  %145 = load i64, i64* %tx_multicast, align 8, !dbg !16119
  %add251 = add i64 %145, %conv249, !dbg !16119
  store i64 %add251, i64* %tx_multicast, align 8, !dbg !16119
  %146 = load i8*, i8** %base, align 8, !dbg !16120
  %add.ptr252 = getelementptr i8, i8* %146, i64 424, !dbg !16121
  %call253 = call i32 @readl(i8* %add.ptr252) #13, !dbg !16122
  %conv254 = zext i32 %call253 to i64, !dbg !16122
  %147 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16123
  %estats255 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %147, i32 0, i32 4, !dbg !16124
  %tx_broadcast = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats255, i32 0, i32 32, !dbg !16125
  %148 = load i64, i64* %tx_broadcast, align 8, !dbg !16126
  %add256 = add i64 %148, %conv254, !dbg !16126
  store i64 %add256, i64* %tx_broadcast, align 8, !dbg !16126
  br label %if.end257, !dbg !16127

if.end257:                                        ; preds = %if.then241, %if.end237
  ret void, !dbg !16128
}

; Function Attrs: noredzone
declare dso_local i64 @round_jiffies(i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #2 !dbg !16129 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !16130, metadata !DIExpression()), !dbg !16134
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !16143, metadata !DIExpression()), !dbg !16144
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !16145, metadata !DIExpression()), !dbg !16146
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !16147, metadata !DIExpression()), !dbg !16148
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !16149, metadata !DIExpression()), !dbg !16153
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !16155, metadata !DIExpression()), !dbg !16159
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !16161, metadata !DIExpression()), !dbg !16165
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !16170, metadata !DIExpression()), !dbg !16171
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !16172, metadata !DIExpression()), !dbg !16173
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16174, metadata !DIExpression()), !dbg !16175
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !16176, metadata !DIExpression()), !dbg !16177
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !16178, metadata !DIExpression()), !dbg !16179
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16180, metadata !DIExpression()), !dbg !16181
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !16182, metadata !DIExpression()), !dbg !16183
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !16184, metadata !DIExpression()), !dbg !16185
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !16186, metadata !DIExpression()), !dbg !16187
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16188, metadata !DIExpression()), !dbg !16189
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16190, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !16192, metadata !DIExpression()), !dbg !16193
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !16194, metadata !DIExpression()), !dbg !16197
  %0 = load i64, i64* %n.addr, align 8, !dbg !16197
  store i64 %0, i64* %__a, align 8, !dbg !16197
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !16198, metadata !DIExpression()), !dbg !16197
  %1 = load i64, i64* %size.addr, align 8, !dbg !16197
  store i64 %1, i64* %__b, align 8, !dbg !16197
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !16199, metadata !DIExpression()), !dbg !16197
  store i64* %bytes, i64** %__d, align 8, !dbg !16197
  %cmp = icmp eq i64* %__a, %__b, !dbg !16197
  %conv = zext i1 %cmp to i32, !dbg !16197
  %2 = load i64*, i64** %__d, align 8, !dbg !16197
  %cmp1 = icmp eq i64* %__a, %2, !dbg !16197
  %conv2 = zext i1 %cmp1 to i32, !dbg !16197
  %3 = load i64, i64* %__a, align 8, !dbg !16197
  %4 = load i64, i64* %__b, align 8, !dbg !16197
  %5 = load i64*, i64** %__d, align 8, !dbg !16197
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !16197
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !16197
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !16197
  store i64 %8, i64* %5, align 8, !dbg !16197
  %frombool = zext i1 %7 to i8, !dbg !16197
  store i8 %frombool, i8* %tmp, align 1, !dbg !16197
  %9 = load i8, i8* %tmp, align 1, !dbg !16197
  %tobool = trunc i8 %9 to i1, !dbg !16197
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #13, !dbg !16200
  %lnot = xor i1 %call, true, !dbg !16200
  %lnot3 = xor i1 %lnot, true, !dbg !16200
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !16200
  %conv4 = sext i32 %lnot.ext to i64, !dbg !16200
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !16200
  br i1 %tobool5, label %if.then, label %if.end, !dbg !16201

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !16202
  br label %return, !dbg !16202

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !16203
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !16204
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !16205

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !16206
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !16207
  br i1 %13, label %if.then6, label %if.end8, !dbg !16208

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !16209
  %15 = load i32, i32* %flags.addr, align 4, !dbg !16210
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !16211
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !16212
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !16213

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !16214
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !16215
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !16216

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !16217
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !16218
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !16219
  %call.i.i = call i32 @get_order(i64 %21) #16, !dbg !16220
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !16179
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !16221
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !16222
  %24 = load i32, i32* %order.i.i, align 4, !dbg !16223
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !16224
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !16225
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !16226
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #15, !dbg !16227
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !16227
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !16227
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !16227
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !16227
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !16228
  br label %kmalloc.exit, !dbg !16228

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !16229
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16230
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !16230
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !16232

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !16233
  br label %kmalloc_index.exit.i, !dbg !16233

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16234
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !16236
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !16237

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16238
  br label %kmalloc_index.exit.i, !dbg !16238

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16239
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !16241
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !16242

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16243
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !16244
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !16245

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !16246
  br label %kmalloc_index.exit.i, !dbg !16246

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16247
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !16249
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !16250

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16251
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !16252
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !16253

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !16254
  br label %kmalloc_index.exit.i, !dbg !16254

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16255
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !16257
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !16258

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16259
  br label %kmalloc_index.exit.i, !dbg !16259

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16260
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !16262
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !16263

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !16264
  br label %kmalloc_index.exit.i, !dbg !16264

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16265
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !16267
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !16268

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !16269
  br label %kmalloc_index.exit.i, !dbg !16269

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16270
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !16272
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !16273

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !16274
  br label %kmalloc_index.exit.i, !dbg !16274

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16275
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !16277
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !16278

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !16279
  br label %kmalloc_index.exit.i, !dbg !16279

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16280
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !16282
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !16283

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !16284
  br label %kmalloc_index.exit.i, !dbg !16284

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16285
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !16287
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !16288

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !16289
  br label %kmalloc_index.exit.i, !dbg !16289

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16290
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !16292
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !16293

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !16294
  br label %kmalloc_index.exit.i, !dbg !16294

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16295
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !16297
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !16298

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !16299
  br label %kmalloc_index.exit.i, !dbg !16299

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16300
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !16302
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !16303

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !16304
  br label %kmalloc_index.exit.i, !dbg !16304

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16305
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !16307
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !16308

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !16309
  br label %kmalloc_index.exit.i, !dbg !16309

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16310
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !16312
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !16313

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !16314
  br label %kmalloc_index.exit.i, !dbg !16314

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16315
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !16317
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !16318

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !16319
  br label %kmalloc_index.exit.i, !dbg !16319

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16320
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !16322
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !16323

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !16324
  br label %kmalloc_index.exit.i, !dbg !16324

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16325
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !16327
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !16328

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !16329
  br label %kmalloc_index.exit.i, !dbg !16329

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16330
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !16332
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !16333

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !16334
  br label %kmalloc_index.exit.i, !dbg !16334

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16335
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !16337
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !16338

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !16339
  br label %kmalloc_index.exit.i, !dbg !16339

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16340
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !16342
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !16343

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !16344
  br label %kmalloc_index.exit.i, !dbg !16344

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16345
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !16347
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !16348

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !16349
  br label %kmalloc_index.exit.i, !dbg !16349

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16350
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !16352
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !16353

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !16354
  br label %kmalloc_index.exit.i, !dbg !16354

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16355
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !16357
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !16358

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !16359
  br label %kmalloc_index.exit.i, !dbg !16359

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16360
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !16362
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !16363

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !16364
  br label %kmalloc_index.exit.i, !dbg !16364

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16365
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !16367
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !16368

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !16369
  br label %kmalloc_index.exit.i, !dbg !16369

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16370
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !16372
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !16373

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !16374
  br label %kmalloc_index.exit.i, !dbg !16374

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !16375, !srcloc !16378
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !16379, !srcloc !16382
  unreachable, !dbg !16383

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !16384
  store i32 %59, i32* %index.i, align 4, !dbg !16385
  %60 = load i32, i32* %index.i, align 4, !dbg !16386
  %tobool.i = icmp ne i32 %60, 0, !dbg !16386
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !16388

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !16389
  br label %kmalloc.exit, !dbg !16389

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !16390
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16391
  %and.i.i = and i32 %62, 17, !dbg !16391
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !16391
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !16391
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !16391
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !16391
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !16393

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !16394
  br label %kmalloc_type.exit.i, !dbg !16394

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16395
  %and2.i.i = and i32 %63, 1, !dbg !16396
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !16395
  %64 = zext i1 %tobool3.i.i to i64, !dbg !16395
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !16395
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !16397
  br label %kmalloc_type.exit.i, !dbg !16397

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !16398
  %idxprom.i = zext i32 %65 to i64, !dbg !16399
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !16399
  %66 = load i32, i32* %index.i, align 4, !dbg !16400
  %idxprom6.i = zext i32 %66 to i64, !dbg !16399
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !16399
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !16399
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !16401
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !16402
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16403
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16404
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #15, !dbg !16405
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !16405
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !16405
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !16405
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !16405
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !16148
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16406
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !16407
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !16408
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16409
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #15, !dbg !16410
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !16411
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !16412
  store i8* %76, i8** %retval.i, align 8, !dbg !16413
  br label %kmalloc.exit, !dbg !16413

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !16414
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !16415
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #15, !dbg !16416
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !16416
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !16416
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !16416
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !16416
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !16417
  br label %kmalloc.exit, !dbg !16417

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !16418
  store i8* %79, i8** %retval, align 8, !dbg !16419
  br label %return, !dbg !16419

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !16420
  %81 = load i32, i32* %flags.addr, align 4, !dbg !16421
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #13, !dbg !16422
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !16422
  %maskedptr = and i64 %ptrint, 7, !dbg !16422
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !16422
  call void @llvm.assume(i1 %maskcond), !dbg !16422
  store i8* %call9, i8** %retval, align 8, !dbg !16423
  br label %return, !dbg !16423

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !16424
  ret i8* %82, !dbg !16424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !16425 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !16429, metadata !DIExpression()), !dbg !16430
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !16431
  %tobool = trunc i8 %0 to i1, !dbg !16431
  %lnot = xor i1 %tobool, true, !dbg !16431
  %lnot1 = xor i1 %lnot, true, !dbg !16431
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16431
  %conv = sext i32 %lnot.ext to i64, !dbg !16431
  %tobool2 = icmp ne i64 %conv, 0, !dbg !16431
  ret i1 %tobool2, !dbg !16432
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #11

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !16433 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !16437, metadata !DIExpression()), !dbg !16441
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !16443, metadata !DIExpression()), !dbg !16444
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16445, metadata !DIExpression()), !dbg !16446
  %0 = load i64, i64* %size.addr, align 8, !dbg !16447
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !16449
  br i1 %1, label %if.then, label %if.end447, !dbg !16450

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !16451
  %tobool = icmp ne i64 %2, 0, !dbg !16451
  br i1 %tobool, label %if.end, label %if.then1, !dbg !16454

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !16455
  br label %return, !dbg !16455

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !16456
  %cmp = icmp ult i64 %3, 4096, !dbg !16458
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !16459

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16460
  br label %return, !dbg !16460

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub = sub i64 %4, 1, !dbg !16461
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !16461
  br i1 %5, label %cond.true, label %cond.false442, !dbg !16461

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub4 = sub i64 %6, 1, !dbg !16461
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !16461
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !16461

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub6 = sub i64 %8, 1, !dbg !16461
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !16461
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !16461

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !16461

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub9 = sub i64 %9, 1, !dbg !16461
  %and = and i64 %sub9, -9223372036854775808, !dbg !16461
  %tobool10 = icmp ne i64 %and, 0, !dbg !16461
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !16461

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !16461

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub13 = sub i64 %10, 1, !dbg !16461
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !16461
  %tobool15 = icmp ne i64 %and14, 0, !dbg !16461
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !16461

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !16461

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub18 = sub i64 %11, 1, !dbg !16461
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !16461
  %tobool20 = icmp ne i64 %and19, 0, !dbg !16461
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !16461

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !16461

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub23 = sub i64 %12, 1, !dbg !16461
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !16461
  %tobool25 = icmp ne i64 %and24, 0, !dbg !16461
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !16461

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !16461

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub28 = sub i64 %13, 1, !dbg !16461
  %and29 = and i64 %sub28, 576460752303423488, !dbg !16461
  %tobool30 = icmp ne i64 %and29, 0, !dbg !16461
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !16461

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !16461

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub33 = sub i64 %14, 1, !dbg !16461
  %and34 = and i64 %sub33, 288230376151711744, !dbg !16461
  %tobool35 = icmp ne i64 %and34, 0, !dbg !16461
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !16461

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !16461

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub38 = sub i64 %15, 1, !dbg !16461
  %and39 = and i64 %sub38, 144115188075855872, !dbg !16461
  %tobool40 = icmp ne i64 %and39, 0, !dbg !16461
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !16461

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !16461

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub43 = sub i64 %16, 1, !dbg !16461
  %and44 = and i64 %sub43, 72057594037927936, !dbg !16461
  %tobool45 = icmp ne i64 %and44, 0, !dbg !16461
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !16461

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !16461

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub48 = sub i64 %17, 1, !dbg !16461
  %and49 = and i64 %sub48, 36028797018963968, !dbg !16461
  %tobool50 = icmp ne i64 %and49, 0, !dbg !16461
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !16461

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !16461

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub53 = sub i64 %18, 1, !dbg !16461
  %and54 = and i64 %sub53, 18014398509481984, !dbg !16461
  %tobool55 = icmp ne i64 %and54, 0, !dbg !16461
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !16461

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !16461

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub58 = sub i64 %19, 1, !dbg !16461
  %and59 = and i64 %sub58, 9007199254740992, !dbg !16461
  %tobool60 = icmp ne i64 %and59, 0, !dbg !16461
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !16461

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !16461

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub63 = sub i64 %20, 1, !dbg !16461
  %and64 = and i64 %sub63, 4503599627370496, !dbg !16461
  %tobool65 = icmp ne i64 %and64, 0, !dbg !16461
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !16461

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !16461

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub68 = sub i64 %21, 1, !dbg !16461
  %and69 = and i64 %sub68, 2251799813685248, !dbg !16461
  %tobool70 = icmp ne i64 %and69, 0, !dbg !16461
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !16461

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !16461

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub73 = sub i64 %22, 1, !dbg !16461
  %and74 = and i64 %sub73, 1125899906842624, !dbg !16461
  %tobool75 = icmp ne i64 %and74, 0, !dbg !16461
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !16461

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !16461

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub78 = sub i64 %23, 1, !dbg !16461
  %and79 = and i64 %sub78, 562949953421312, !dbg !16461
  %tobool80 = icmp ne i64 %and79, 0, !dbg !16461
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !16461

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !16461

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub83 = sub i64 %24, 1, !dbg !16461
  %and84 = and i64 %sub83, 281474976710656, !dbg !16461
  %tobool85 = icmp ne i64 %and84, 0, !dbg !16461
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !16461

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !16461

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub88 = sub i64 %25, 1, !dbg !16461
  %and89 = and i64 %sub88, 140737488355328, !dbg !16461
  %tobool90 = icmp ne i64 %and89, 0, !dbg !16461
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !16461

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !16461

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub93 = sub i64 %26, 1, !dbg !16461
  %and94 = and i64 %sub93, 70368744177664, !dbg !16461
  %tobool95 = icmp ne i64 %and94, 0, !dbg !16461
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !16461

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !16461

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub98 = sub i64 %27, 1, !dbg !16461
  %and99 = and i64 %sub98, 35184372088832, !dbg !16461
  %tobool100 = icmp ne i64 %and99, 0, !dbg !16461
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !16461

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !16461

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub103 = sub i64 %28, 1, !dbg !16461
  %and104 = and i64 %sub103, 17592186044416, !dbg !16461
  %tobool105 = icmp ne i64 %and104, 0, !dbg !16461
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !16461

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !16461

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub108 = sub i64 %29, 1, !dbg !16461
  %and109 = and i64 %sub108, 8796093022208, !dbg !16461
  %tobool110 = icmp ne i64 %and109, 0, !dbg !16461
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !16461

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !16461

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub113 = sub i64 %30, 1, !dbg !16461
  %and114 = and i64 %sub113, 4398046511104, !dbg !16461
  %tobool115 = icmp ne i64 %and114, 0, !dbg !16461
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !16461

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !16461

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub118 = sub i64 %31, 1, !dbg !16461
  %and119 = and i64 %sub118, 2199023255552, !dbg !16461
  %tobool120 = icmp ne i64 %and119, 0, !dbg !16461
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !16461

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !16461

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub123 = sub i64 %32, 1, !dbg !16461
  %and124 = and i64 %sub123, 1099511627776, !dbg !16461
  %tobool125 = icmp ne i64 %and124, 0, !dbg !16461
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !16461

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !16461

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub128 = sub i64 %33, 1, !dbg !16461
  %and129 = and i64 %sub128, 549755813888, !dbg !16461
  %tobool130 = icmp ne i64 %and129, 0, !dbg !16461
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !16461

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !16461

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub133 = sub i64 %34, 1, !dbg !16461
  %and134 = and i64 %sub133, 274877906944, !dbg !16461
  %tobool135 = icmp ne i64 %and134, 0, !dbg !16461
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !16461

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !16461

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub138 = sub i64 %35, 1, !dbg !16461
  %and139 = and i64 %sub138, 137438953472, !dbg !16461
  %tobool140 = icmp ne i64 %and139, 0, !dbg !16461
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !16461

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !16461

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub143 = sub i64 %36, 1, !dbg !16461
  %and144 = and i64 %sub143, 68719476736, !dbg !16461
  %tobool145 = icmp ne i64 %and144, 0, !dbg !16461
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !16461

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !16461

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub148 = sub i64 %37, 1, !dbg !16461
  %and149 = and i64 %sub148, 34359738368, !dbg !16461
  %tobool150 = icmp ne i64 %and149, 0, !dbg !16461
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !16461

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !16461

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub153 = sub i64 %38, 1, !dbg !16461
  %and154 = and i64 %sub153, 17179869184, !dbg !16461
  %tobool155 = icmp ne i64 %and154, 0, !dbg !16461
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !16461

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !16461

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub158 = sub i64 %39, 1, !dbg !16461
  %and159 = and i64 %sub158, 8589934592, !dbg !16461
  %tobool160 = icmp ne i64 %and159, 0, !dbg !16461
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !16461

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !16461

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub163 = sub i64 %40, 1, !dbg !16461
  %and164 = and i64 %sub163, 4294967296, !dbg !16461
  %tobool165 = icmp ne i64 %and164, 0, !dbg !16461
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !16461

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !16461

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub168 = sub i64 %41, 1, !dbg !16461
  %and169 = and i64 %sub168, 2147483648, !dbg !16461
  %tobool170 = icmp ne i64 %and169, 0, !dbg !16461
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !16461

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !16461

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub173 = sub i64 %42, 1, !dbg !16461
  %and174 = and i64 %sub173, 1073741824, !dbg !16461
  %tobool175 = icmp ne i64 %and174, 0, !dbg !16461
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !16461

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !16461

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub178 = sub i64 %43, 1, !dbg !16461
  %and179 = and i64 %sub178, 536870912, !dbg !16461
  %tobool180 = icmp ne i64 %and179, 0, !dbg !16461
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !16461

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !16461

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub183 = sub i64 %44, 1, !dbg !16461
  %and184 = and i64 %sub183, 268435456, !dbg !16461
  %tobool185 = icmp ne i64 %and184, 0, !dbg !16461
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !16461

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !16461

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub188 = sub i64 %45, 1, !dbg !16461
  %and189 = and i64 %sub188, 134217728, !dbg !16461
  %tobool190 = icmp ne i64 %and189, 0, !dbg !16461
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !16461

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !16461

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub193 = sub i64 %46, 1, !dbg !16461
  %and194 = and i64 %sub193, 67108864, !dbg !16461
  %tobool195 = icmp ne i64 %and194, 0, !dbg !16461
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !16461

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !16461

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub198 = sub i64 %47, 1, !dbg !16461
  %and199 = and i64 %sub198, 33554432, !dbg !16461
  %tobool200 = icmp ne i64 %and199, 0, !dbg !16461
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !16461

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !16461

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub203 = sub i64 %48, 1, !dbg !16461
  %and204 = and i64 %sub203, 16777216, !dbg !16461
  %tobool205 = icmp ne i64 %and204, 0, !dbg !16461
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !16461

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !16461

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub208 = sub i64 %49, 1, !dbg !16461
  %and209 = and i64 %sub208, 8388608, !dbg !16461
  %tobool210 = icmp ne i64 %and209, 0, !dbg !16461
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !16461

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !16461

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub213 = sub i64 %50, 1, !dbg !16461
  %and214 = and i64 %sub213, 4194304, !dbg !16461
  %tobool215 = icmp ne i64 %and214, 0, !dbg !16461
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !16461

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !16461

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub218 = sub i64 %51, 1, !dbg !16461
  %and219 = and i64 %sub218, 2097152, !dbg !16461
  %tobool220 = icmp ne i64 %and219, 0, !dbg !16461
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !16461

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !16461

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub223 = sub i64 %52, 1, !dbg !16461
  %and224 = and i64 %sub223, 1048576, !dbg !16461
  %tobool225 = icmp ne i64 %and224, 0, !dbg !16461
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !16461

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !16461

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub228 = sub i64 %53, 1, !dbg !16461
  %and229 = and i64 %sub228, 524288, !dbg !16461
  %tobool230 = icmp ne i64 %and229, 0, !dbg !16461
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !16461

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !16461

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub233 = sub i64 %54, 1, !dbg !16461
  %and234 = and i64 %sub233, 262144, !dbg !16461
  %tobool235 = icmp ne i64 %and234, 0, !dbg !16461
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !16461

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !16461

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub238 = sub i64 %55, 1, !dbg !16461
  %and239 = and i64 %sub238, 131072, !dbg !16461
  %tobool240 = icmp ne i64 %and239, 0, !dbg !16461
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !16461

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !16461

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub243 = sub i64 %56, 1, !dbg !16461
  %and244 = and i64 %sub243, 65536, !dbg !16461
  %tobool245 = icmp ne i64 %and244, 0, !dbg !16461
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !16461

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !16461

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub248 = sub i64 %57, 1, !dbg !16461
  %and249 = and i64 %sub248, 32768, !dbg !16461
  %tobool250 = icmp ne i64 %and249, 0, !dbg !16461
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !16461

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !16461

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub253 = sub i64 %58, 1, !dbg !16461
  %and254 = and i64 %sub253, 16384, !dbg !16461
  %tobool255 = icmp ne i64 %and254, 0, !dbg !16461
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !16461

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !16461

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub258 = sub i64 %59, 1, !dbg !16461
  %and259 = and i64 %sub258, 8192, !dbg !16461
  %tobool260 = icmp ne i64 %and259, 0, !dbg !16461
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !16461

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !16461

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub263 = sub i64 %60, 1, !dbg !16461
  %and264 = and i64 %sub263, 4096, !dbg !16461
  %tobool265 = icmp ne i64 %and264, 0, !dbg !16461
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !16461

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !16461

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub268 = sub i64 %61, 1, !dbg !16461
  %and269 = and i64 %sub268, 2048, !dbg !16461
  %tobool270 = icmp ne i64 %and269, 0, !dbg !16461
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !16461

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !16461

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub273 = sub i64 %62, 1, !dbg !16461
  %and274 = and i64 %sub273, 1024, !dbg !16461
  %tobool275 = icmp ne i64 %and274, 0, !dbg !16461
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !16461

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !16461

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub278 = sub i64 %63, 1, !dbg !16461
  %and279 = and i64 %sub278, 512, !dbg !16461
  %tobool280 = icmp ne i64 %and279, 0, !dbg !16461
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !16461

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !16461

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub283 = sub i64 %64, 1, !dbg !16461
  %and284 = and i64 %sub283, 256, !dbg !16461
  %tobool285 = icmp ne i64 %and284, 0, !dbg !16461
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !16461

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !16461

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub288 = sub i64 %65, 1, !dbg !16461
  %and289 = and i64 %sub288, 128, !dbg !16461
  %tobool290 = icmp ne i64 %and289, 0, !dbg !16461
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !16461

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !16461

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub293 = sub i64 %66, 1, !dbg !16461
  %and294 = and i64 %sub293, 64, !dbg !16461
  %tobool295 = icmp ne i64 %and294, 0, !dbg !16461
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !16461

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !16461

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub298 = sub i64 %67, 1, !dbg !16461
  %and299 = and i64 %sub298, 32, !dbg !16461
  %tobool300 = icmp ne i64 %and299, 0, !dbg !16461
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !16461

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !16461

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub303 = sub i64 %68, 1, !dbg !16461
  %and304 = and i64 %sub303, 16, !dbg !16461
  %tobool305 = icmp ne i64 %and304, 0, !dbg !16461
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !16461

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !16461

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub308 = sub i64 %69, 1, !dbg !16461
  %and309 = and i64 %sub308, 8, !dbg !16461
  %tobool310 = icmp ne i64 %and309, 0, !dbg !16461
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !16461

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !16461

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub313 = sub i64 %70, 1, !dbg !16461
  %and314 = and i64 %sub313, 4, !dbg !16461
  %tobool315 = icmp ne i64 %and314, 0, !dbg !16461
  %71 = zext i1 %tobool315 to i64, !dbg !16461
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !16461
  br label %cond.end, !dbg !16461

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !16461
  br label %cond.end317, !dbg !16461

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !16461
  br label %cond.end319, !dbg !16461

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !16461
  br label %cond.end321, !dbg !16461

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !16461
  br label %cond.end323, !dbg !16461

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !16461
  br label %cond.end325, !dbg !16461

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !16461
  br label %cond.end327, !dbg !16461

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !16461
  br label %cond.end329, !dbg !16461

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !16461
  br label %cond.end331, !dbg !16461

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !16461
  br label %cond.end333, !dbg !16461

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !16461
  br label %cond.end335, !dbg !16461

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !16461
  br label %cond.end337, !dbg !16461

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !16461
  br label %cond.end339, !dbg !16461

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !16461
  br label %cond.end341, !dbg !16461

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !16461
  br label %cond.end343, !dbg !16461

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !16461
  br label %cond.end345, !dbg !16461

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !16461
  br label %cond.end347, !dbg !16461

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !16461
  br label %cond.end349, !dbg !16461

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !16461
  br label %cond.end351, !dbg !16461

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !16461
  br label %cond.end353, !dbg !16461

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !16461
  br label %cond.end355, !dbg !16461

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !16461
  br label %cond.end357, !dbg !16461

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !16461
  br label %cond.end359, !dbg !16461

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !16461
  br label %cond.end361, !dbg !16461

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !16461
  br label %cond.end363, !dbg !16461

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !16461
  br label %cond.end365, !dbg !16461

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !16461
  br label %cond.end367, !dbg !16461

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !16461
  br label %cond.end369, !dbg !16461

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !16461
  br label %cond.end371, !dbg !16461

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !16461
  br label %cond.end373, !dbg !16461

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !16461
  br label %cond.end375, !dbg !16461

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !16461
  br label %cond.end377, !dbg !16461

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !16461
  br label %cond.end379, !dbg !16461

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !16461
  br label %cond.end381, !dbg !16461

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !16461
  br label %cond.end383, !dbg !16461

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !16461
  br label %cond.end385, !dbg !16461

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !16461
  br label %cond.end387, !dbg !16461

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !16461
  br label %cond.end389, !dbg !16461

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !16461
  br label %cond.end391, !dbg !16461

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !16461
  br label %cond.end393, !dbg !16461

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !16461
  br label %cond.end395, !dbg !16461

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !16461
  br label %cond.end397, !dbg !16461

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !16461
  br label %cond.end399, !dbg !16461

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !16461
  br label %cond.end401, !dbg !16461

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !16461
  br label %cond.end403, !dbg !16461

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !16461
  br label %cond.end405, !dbg !16461

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !16461
  br label %cond.end407, !dbg !16461

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !16461
  br label %cond.end409, !dbg !16461

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !16461
  br label %cond.end411, !dbg !16461

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !16461
  br label %cond.end413, !dbg !16461

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !16461
  br label %cond.end415, !dbg !16461

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !16461
  br label %cond.end417, !dbg !16461

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !16461
  br label %cond.end419, !dbg !16461

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !16461
  br label %cond.end421, !dbg !16461

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !16461
  br label %cond.end423, !dbg !16461

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !16461
  br label %cond.end425, !dbg !16461

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !16461
  br label %cond.end427, !dbg !16461

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !16461
  br label %cond.end429, !dbg !16461

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !16461
  br label %cond.end431, !dbg !16461

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !16461
  br label %cond.end433, !dbg !16461

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !16461
  br label %cond.end435, !dbg !16461

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !16461
  br label %cond.end437, !dbg !16461

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !16461
  br label %cond.end440, !dbg !16461

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !16461

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !16461
  br label %cond.end444, !dbg !16461

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !16461
  %sub443 = sub i64 %72, 1, !dbg !16461
  %call = call i32 @__ilog2_u64(i64 %sub443) #16, !dbg !16461
  br label %cond.end444, !dbg !16461

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !16461
  %sub446 = sub i32 %cond445, 12, !dbg !16462
  %add = add i32 %sub446, 1, !dbg !16463
  store i32 %add, i32* %retval, align 4, !dbg !16464
  br label %return, !dbg !16464

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !16465
  %dec = add i64 %73, -1, !dbg !16465
  store i64 %dec, i64* %size.addr, align 8, !dbg !16465
  %74 = load i64, i64* %size.addr, align 8, !dbg !16466
  %shr = lshr i64 %74, 12, !dbg !16466
  store i64 %shr, i64* %size.addr, align 8, !dbg !16466
  %75 = load i64, i64* %size.addr, align 8, !dbg !16467
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !16444
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !16468
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !16469
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !16468, !srcloc !16470
  store i32 %78, i32* %bitpos.i, align 4, !dbg !16468
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !16471
  %add.i = add i32 %79, 1, !dbg !16472
  store i32 %add.i, i32* %retval, align 4, !dbg !16473
  br label %return, !dbg !16473

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !16474
  ret i32 %80, !dbg !16474
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !16475 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !16437, metadata !DIExpression()), !dbg !16479
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !16443, metadata !DIExpression()), !dbg !16481
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !16482, metadata !DIExpression()), !dbg !16483
  %0 = load i64, i64* %n.addr, align 8, !dbg !16484
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !16481
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !16485
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !16486
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !16485, !srcloc !16470
  store i32 %3, i32* %bitpos.i, align 4, !dbg !16485
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !16487
  %add.i = add i32 %4, 1, !dbg !16488
  %sub = sub i32 %add.i, 1, !dbg !16489
  ret i32 %sub, !dbg !16490
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !16491 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !16495, metadata !DIExpression()), !dbg !16496
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !16497, metadata !DIExpression()), !dbg !16498
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16499, metadata !DIExpression()), !dbg !16500
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16501, metadata !DIExpression()), !dbg !16502
  %0 = load i8*, i8** %object.addr, align 8, !dbg !16503
  ret i8* %0, !dbg !16504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_open(%struct.net_device* %dev) #2 !dbg !16505 {
entry:
  %lock.addr.i149 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i149, metadata !8241, metadata !DIExpression()), !dbg !16506
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !16508
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %ret = alloca i32, align 4
  %oom = alloca i32, align 4
  %i = alloca i32, align 4
  %low = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16510, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !16512, metadata !DIExpression()), !dbg !16513
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16514
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !16515
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !16515
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !16513
  call void @llvm.dbg.declare(metadata i8** %base, metadata !16516, metadata !DIExpression()), !dbg !16517
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16518
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !16519
  store i8* %call1, i8** %base, align 8, !dbg !16517
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16520, metadata !DIExpression()), !dbg !16521
  store i32 1, i32* %ret, align 4, !dbg !16521
  call void @llvm.dbg.declare(metadata i32* %oom, metadata !16522, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16524, metadata !DIExpression()), !dbg !16525
  call void @llvm.dbg.declare(metadata i32* %low, metadata !16526, metadata !DIExpression()), !dbg !16527
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16528
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16529
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 10, !dbg !16530
  %5 = load i32, i32* %phyaddr, align 4, !dbg !16530
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16531
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16532
  %phyaddr2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 10, !dbg !16533
  %8 = load i32, i32* %phyaddr2, align 4, !dbg !16533
  %call3 = call i32 @mii_rw(%struct.net_device* %6, i32 %8, i32 0, i32 -1) #13, !dbg !16534
  %and = and i32 %call3, -2049, !dbg !16535
  %call4 = call i32 @mii_rw(%struct.net_device* %3, i32 %5, i32 0, i32 %and) #13, !dbg !16536
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16537
  call void @nv_txrx_gate(%struct.net_device* %9, i1 zeroext false) #13, !dbg !16538
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16539
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 27, !dbg !16541
  %11 = load i32, i32* %driver_data, align 4, !dbg !16541
  %and5 = and i32 %11, 256, !dbg !16542
  %tobool = icmp ne i32 %and5, 0, !dbg !16542
  br i1 %tobool, label %if.then, label %if.end, !dbg !16543

if.then:                                          ; preds = %entry
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16544
  call void @nv_mac_reset(%struct.net_device* %12) #13, !dbg !16545
  br label %if.end, !dbg !16545

if.end:                                           ; preds = %if.then, %entry
  %13 = load i8*, i8** %base, align 8, !dbg !16546
  %add.ptr = getelementptr i8, i8* %13, i64 176, !dbg !16547
  call void @writel(i32 1, i8* %add.ptr) #13, !dbg !16548
  %14 = load i8*, i8** %base, align 8, !dbg !16549
  %add.ptr6 = getelementptr i8, i8* %14, i64 180, !dbg !16550
  call void @writel(i32 0, i8* %add.ptr6) #13, !dbg !16551
  %15 = load i8*, i8** %base, align 8, !dbg !16552
  %add.ptr7 = getelementptr i8, i8* %15, i64 184, !dbg !16553
  call void @writel(i32 -1, i8* %add.ptr7) #13, !dbg !16554
  %16 = load i8*, i8** %base, align 8, !dbg !16555
  %add.ptr8 = getelementptr i8, i8* %16, i64 188, !dbg !16556
  call void @writel(i32 65535, i8* %add.ptr8) #13, !dbg !16557
  %17 = load i8*, i8** %base, align 8, !dbg !16558
  %add.ptr9 = getelementptr i8, i8* %17, i64 140, !dbg !16559
  call void @writel(i32 0, i8* %add.ptr9) #13, !dbg !16560
  %18 = load i8*, i8** %base, align 8, !dbg !16561
  %add.ptr10 = getelementptr i8, i8* %18, i64 132, !dbg !16562
  call void @writel(i32 0, i8* %add.ptr10) #13, !dbg !16563
  %19 = load i8*, i8** %base, align 8, !dbg !16564
  %add.ptr11 = getelementptr i8, i8* %19, i64 148, !dbg !16565
  call void @writel(i32 0, i8* %add.ptr11) #13, !dbg !16566
  %20 = load i8*, i8** %base, align 8, !dbg !16567
  %add.ptr12 = getelementptr i8, i8* %20, i64 392, !dbg !16568
  call void @writel(i32 0, i8* %add.ptr12) #13, !dbg !16569
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16570
  %pause_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 71, !dbg !16572
  %22 = load i32, i32* %pause_flags, align 8, !dbg !16572
  %and13 = and i32 %22, 2, !dbg !16573
  %tobool14 = icmp ne i32 %and13, 0, !dbg !16573
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !16574

if.then15:                                        ; preds = %if.end
  %23 = load i8*, i8** %base, align 8, !dbg !16575
  %add.ptr16 = getelementptr i8, i8* %23, i64 368, !dbg !16576
  call void @writel(i32 268370048, i8* %add.ptr16) #13, !dbg !16577
  br label %if.end17, !dbg !16577

if.end17:                                         ; preds = %if.then15, %if.end
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16578
  call void @set_bufsize(%struct.net_device* %24) #13, !dbg !16579
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16580
  %call18 = call i32 @nv_init_ring(%struct.net_device* %25) #13, !dbg !16581
  store i32 %call18, i32* %oom, align 4, !dbg !16582
  %26 = load i8*, i8** %base, align 8, !dbg !16583
  %add.ptr19 = getelementptr i8, i8* %26, i64 272, !dbg !16584
  call void @writel(i32 0, i8* %add.ptr19) #13, !dbg !16585
  %27 = load i8*, i8** %base, align 8, !dbg !16586
  %add.ptr20 = getelementptr i8, i8* %27, i64 268, !dbg !16587
  %call21 = call i32 @readl(i8* %add.ptr20) #13, !dbg !16588
  %and22 = and i32 %call21, 32768, !dbg !16589
  %28 = load i8*, i8** %base, align 8, !dbg !16590
  %add.ptr23 = getelementptr i8, i8* %28, i64 268, !dbg !16591
  call void @writel(i32 %and22, i8* %add.ptr23) #13, !dbg !16592
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16593
  call void @nv_txrx_reset(%struct.net_device* %29) #13, !dbg !16594
  %30 = load i8*, i8** %base, align 8, !dbg !16595
  %add.ptr24 = getelementptr i8, i8* %30, i64 8, !dbg !16596
  call void @writel(i32 0, i8* %add.ptr24) #13, !dbg !16597
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16598
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 5, !dbg !16599
  store i32 0, i32* %in_shutdown, align 8, !dbg !16600
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16601
  call void @setup_hw_rings(%struct.net_device* %32, i32 3) #13, !dbg !16602
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16603
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 48, !dbg !16604
  %34 = load i32, i32* %rx_ring_size, align 4, !dbg !16604
  %sub = sub i32 %34, 1, !dbg !16605
  %shl = shl i32 %sub, 16, !dbg !16606
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16607
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 62, !dbg !16608
  %36 = load i32, i32* %tx_ring_size, align 4, !dbg !16608
  %sub25 = sub i32 %36, 1, !dbg !16609
  %shl26 = shl i32 %sub25, 0, !dbg !16610
  %add = add i32 %shl, %shl26, !dbg !16611
  %37 = load i8*, i8** %base, align 8, !dbg !16612
  %add.ptr27 = getelementptr i8, i8* %37, i64 264, !dbg !16613
  call void @writel(i32 %add, i8* %add.ptr27) #13, !dbg !16614
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16615
  %linkspeed = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 6, !dbg !16616
  %39 = load i32, i32* %linkspeed, align 4, !dbg !16616
  %40 = load i8*, i8** %base, align 8, !dbg !16617
  %add.ptr28 = getelementptr i8, i8* %40, i64 272, !dbg !16618
  call void @writel(i32 %39, i8* %add.ptr28) #13, !dbg !16619
  %41 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16620
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %41, i32 0, i32 24, !dbg !16622
  %42 = load i32, i32* %desc_ver, align 8, !dbg !16622
  %cmp = icmp eq i32 %42, 1, !dbg !16623
  br i1 %cmp, label %if.then29, label %if.else, !dbg !16624

if.then29:                                        ; preds = %if.end17
  %43 = load i8*, i8** %base, align 8, !dbg !16625
  %add.ptr30 = getelementptr i8, i8* %43, i64 316, !dbg !16626
  call void @writel(i32 2097168, i8* %add.ptr30) #13, !dbg !16627
  br label %if.end32, !dbg !16627

if.else:                                          ; preds = %if.end17
  %44 = load i8*, i8** %base, align 8, !dbg !16628
  %add.ptr31 = getelementptr i8, i8* %44, i64 316, !dbg !16629
  call void @writel(i32 31490048, i8* %add.ptr31) #13, !dbg !16630
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then29
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16631
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 25, !dbg !16632
  %46 = load i32, i32* %txrxctl_bits, align 4, !dbg !16632
  %47 = load i8*, i8** %base, align 8, !dbg !16633
  %add.ptr33 = getelementptr i8, i8* %47, i64 324, !dbg !16634
  call void @writel(i32 %46, i8* %add.ptr33) #13, !dbg !16635
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16636
  %vlanctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 26, !dbg !16637
  %49 = load i32, i32* %vlanctl_bits, align 8, !dbg !16637
  %50 = load i8*, i8** %base, align 8, !dbg !16638
  %add.ptr34 = getelementptr i8, i8* %50, i64 768, !dbg !16639
  call void @writel(i32 %49, i8* %add.ptr34) #13, !dbg !16640
  %51 = load i8*, i8** %base, align 8, !dbg !16641
  call void @pci_push(i8* %51) #13, !dbg !16642
  %52 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16643
  %txrxctl_bits35 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %52, i32 0, i32 25, !dbg !16644
  %53 = load i32, i32* %txrxctl_bits35, align 4, !dbg !16644
  %or = or i32 2, %53, !dbg !16645
  %54 = load i8*, i8** %base, align 8, !dbg !16646
  %add.ptr36 = getelementptr i8, i8* %54, i64 324, !dbg !16647
  call void @writel(i32 %or, i8* %add.ptr36) #13, !dbg !16648
  %55 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16649
  %call37 = call i32 @reg_delay(%struct.net_device* %55, i32 304, i32 -2147483648, i32 -2147483648, i32 5, i32 50000) #13, !dbg !16651
  %tobool38 = icmp ne i32 %call37, 0, !dbg !16651
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !16652

if.then39:                                        ; preds = %if.end32
  %56 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16653
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %56, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.nv_open, i64 0, i64 0)) #14, !dbg !16654
  br label %if.end40, !dbg !16654

if.end40:                                         ; preds = %if.then39, %if.end32
  %57 = load i8*, i8** %base, align 8, !dbg !16655
  %add.ptr41 = getelementptr i8, i8* %57, i64 388, !dbg !16656
  call void @writel(i32 0, i8* %add.ptr41) #13, !dbg !16657
  %58 = load i8*, i8** %base, align 8, !dbg !16658
  %add.ptr42 = getelementptr i8, i8* %58, i64 0, !dbg !16659
  call void @writel(i32 33791, i8* %add.ptr42) #13, !dbg !16660
  %59 = load i8*, i8** %base, align 8, !dbg !16661
  %add.ptr43 = getelementptr i8, i8* %59, i64 384, !dbg !16662
  call void @writel(i32 15, i8* %add.ptr43) #13, !dbg !16663
  %60 = load i8*, i8** %base, align 8, !dbg !16664
  %add.ptr44 = getelementptr i8, i8* %60, i64 128, !dbg !16665
  call void @writel(i32 3870526, i8* %add.ptr44) #13, !dbg !16666
  %61 = load i8*, i8** %base, align 8, !dbg !16667
  %add.ptr45 = getelementptr i8, i8* %61, i64 136, !dbg !16668
  %call46 = call i32 @readl(i8* %add.ptr45) #13, !dbg !16669
  %62 = load i8*, i8** %base, align 8, !dbg !16670
  %add.ptr47 = getelementptr i8, i8* %62, i64 136, !dbg !16671
  call void @writel(i32 %call46, i8* %add.ptr47) #13, !dbg !16672
  %63 = load i8*, i8** %base, align 8, !dbg !16673
  %add.ptr48 = getelementptr i8, i8* %63, i64 140, !dbg !16674
  call void @writel(i32 8323072, i8* %add.ptr48) #13, !dbg !16675
  %64 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16676
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %64, i32 0, i32 42, !dbg !16677
  %65 = load i32, i32* %rx_buf_sz, align 8, !dbg !16677
  %66 = load i8*, i8** %base, align 8, !dbg !16678
  %add.ptr49 = getelementptr i8, i8* %66, i64 144, !dbg !16679
  call void @writel(i32 %65, i8* %add.ptr49) #13, !dbg !16680
  %67 = load i8*, i8** %base, align 8, !dbg !16681
  %add.ptr50 = getelementptr i8, i8* %67, i64 152, !dbg !16682
  %call51 = call i32 @readl(i8* %add.ptr50) #13, !dbg !16683
  %68 = load i8*, i8** %base, align 8, !dbg !16684
  %add.ptr52 = getelementptr i8, i8* %68, i64 152, !dbg !16685
  call void @writel(i32 %call51, i8* %add.ptr52) #13, !dbg !16686
  %69 = bitcast i32* %low to i8*, !dbg !16687
  call void @get_random_bytes(i8* %69, i32 4) #13, !dbg !16688
  %70 = load i32, i32* %low, align 4, !dbg !16689
  %and53 = and i32 %70, 255, !dbg !16689
  store i32 %and53, i32* %low, align 4, !dbg !16689
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16690
  %desc_ver54 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 24, !dbg !16692
  %72 = load i32, i32* %desc_ver54, align 8, !dbg !16692
  %cmp55 = icmp eq i32 %72, 1, !dbg !16693
  br i1 %cmp55, label %if.then56, label %if.else59, !dbg !16694

if.then56:                                        ; preds = %if.end40
  %73 = load i32, i32* %low, align 4, !dbg !16695
  %or57 = or i32 %73, 32512, !dbg !16697
  %74 = load i8*, i8** %base, align 8, !dbg !16698
  %add.ptr58 = getelementptr i8, i8* %74, i64 156, !dbg !16699
  call void @writel(i32 %or57, i8* %add.ptr58) #13, !dbg !16700
  br label %if.end69, !dbg !16701

if.else59:                                        ; preds = %if.end40
  %75 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16702
  %driver_data60 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %75, i32 0, i32 27, !dbg !16705
  %76 = load i32, i32* %driver_data60, align 4, !dbg !16705
  %and61 = and i32 %76, 2097152, !dbg !16706
  %tobool62 = icmp ne i32 %and61, 0, !dbg !16706
  br i1 %tobool62, label %if.else66, label %if.then63, !dbg !16707

if.then63:                                        ; preds = %if.else59
  %77 = load i32, i32* %low, align 4, !dbg !16708
  %or64 = or i32 -2147451136, %77, !dbg !16710
  %78 = load i8*, i8** %base, align 8, !dbg !16711
  %add.ptr65 = getelementptr i8, i8* %78, i64 156, !dbg !16712
  call void @writel(i32 %or64, i8* %add.ptr65) #13, !dbg !16713
  br label %if.end68, !dbg !16714

if.else66:                                        ; preds = %if.else59
  %79 = load i8*, i8** %base, align 8, !dbg !16715
  %add.ptr67 = getelementptr i8, i8* %79, i64 156, !dbg !16717
  call void @writel(i32 32512, i8* %add.ptr67) #13, !dbg !16718
  %80 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16719
  call void @nv_gear_backoff_reseed(%struct.net_device* %80) #13, !dbg !16720
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %if.then63
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then56
  %81 = load i8*, i8** %base, align 8, !dbg !16721
  %add.ptr70 = getelementptr i8, i8* %81, i64 160, !dbg !16722
  call void @writel(i32 1377551, i8* %add.ptr70) #13, !dbg !16723
  %82 = load i8*, i8** %base, align 8, !dbg !16724
  %add.ptr71 = getelementptr i8, i8* %82, i64 164, !dbg !16725
  call void @writel(i32 22, i8* %add.ptr71) #13, !dbg !16726
  %83 = load i32, i32* @poll_interval, align 4, !dbg !16727
  %cmp72 = icmp eq i32 %83, -1, !dbg !16729
  br i1 %cmp72, label %if.then73, label %if.else80, !dbg !16730

if.then73:                                        ; preds = %if.end69
  %84 = load i32, i32* @optimization_mode, align 4, !dbg !16731
  %cmp74 = icmp eq i32 %84, 0, !dbg !16734
  br i1 %cmp74, label %if.then75, label %if.else77, !dbg !16735

if.then75:                                        ; preds = %if.then73
  %85 = load i8*, i8** %base, align 8, !dbg !16736
  %add.ptr76 = getelementptr i8, i8* %85, i64 12, !dbg !16737
  call void @writel(i32 65535, i8* %add.ptr76) #13, !dbg !16738
  br label %if.end79, !dbg !16738

if.else77:                                        ; preds = %if.then73
  %86 = load i8*, i8** %base, align 8, !dbg !16739
  %add.ptr78 = getelementptr i8, i8* %86, i64 12, !dbg !16740
  call void @writel(i32 13, i8* %add.ptr78) #13, !dbg !16741
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then75
  br label %if.end83, !dbg !16742

if.else80:                                        ; preds = %if.end69
  %87 = load i32, i32* @poll_interval, align 4, !dbg !16743
  %and81 = and i32 %87, 65535, !dbg !16744
  %88 = load i8*, i8** %base, align 8, !dbg !16745
  %add.ptr82 = getelementptr i8, i8* %88, i64 12, !dbg !16746
  call void @writel(i32 %and81, i8* %add.ptr82) #13, !dbg !16747
  br label %if.end83

if.end83:                                         ; preds = %if.else80, %if.end79
  %89 = load i8*, i8** %base, align 8, !dbg !16748
  %add.ptr84 = getelementptr i8, i8* %89, i64 8, !dbg !16749
  call void @writel(i32 3, i8* %add.ptr84) #13, !dbg !16750
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16751
  %phyaddr85 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 10, !dbg !16752
  %91 = load i32, i32* %phyaddr85, align 4, !dbg !16752
  %shl86 = shl i32 %91, 24, !dbg !16753
  %or87 = or i32 %shl86, 262144, !dbg !16754
  %or88 = or i32 %or87, 1048576, !dbg !16755
  %92 = load i8*, i8** %base, align 8, !dbg !16756
  %add.ptr89 = getelementptr i8, i8* %92, i64 392, !dbg !16757
  call void @writel(i32 %or88, i8* %add.ptr89) #13, !dbg !16758
  %93 = load i8*, i8** %base, align 8, !dbg !16759
  %add.ptr90 = getelementptr i8, i8* %93, i64 396, !dbg !16760
  call void @writel(i32 261, i8* %add.ptr90) #13, !dbg !16761
  %94 = load i8*, i8** %base, align 8, !dbg !16762
  %add.ptr91 = getelementptr i8, i8* %94, i64 388, !dbg !16763
  call void @writel(i32 8, i8* %add.ptr91) #13, !dbg !16764
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16765
  %wolenabled = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 11, !dbg !16767
  %96 = load i32, i32* %wolenabled, align 8, !dbg !16767
  %tobool92 = icmp ne i32 %96, 0, !dbg !16765
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !16768

if.then93:                                        ; preds = %if.end83
  %97 = load i8*, i8** %base, align 8, !dbg !16769
  %add.ptr94 = getelementptr i8, i8* %97, i64 512, !dbg !16770
  call void @writel(i32 4369, i8* %add.ptr94) #13, !dbg !16771
  br label %if.end95, !dbg !16771

if.end95:                                         ; preds = %if.then93, %if.end83
  %98 = load i8*, i8** %base, align 8, !dbg !16772
  %add.ptr96 = getelementptr i8, i8* %98, i64 620, !dbg !16773
  %call97 = call i32 @readl(i8* %add.ptr96) #13, !dbg !16774
  store i32 %call97, i32* %i, align 4, !dbg !16775
  %99 = load i32, i32* %i, align 4, !dbg !16776
  %and98 = and i32 %99, 32768, !dbg !16778
  %cmp99 = icmp eq i32 %and98, 0, !dbg !16779
  br i1 %cmp99, label %if.then100, label %if.end103, !dbg !16780

if.then100:                                       ; preds = %if.end95
  %100 = load i32, i32* %i, align 4, !dbg !16781
  %or101 = or i32 32768, %100, !dbg !16782
  %101 = load i8*, i8** %base, align 8, !dbg !16783
  %add.ptr102 = getelementptr i8, i8* %101, i64 620, !dbg !16784
  call void @writel(i32 %or101, i8* %add.ptr102) #13, !dbg !16785
  br label %if.end103, !dbg !16785

if.end103:                                        ; preds = %if.then100, %if.end95
  %102 = load i8*, i8** %base, align 8, !dbg !16786
  call void @pci_push(i8* %102) #13, !dbg !16787
  call void @__const_udelay(i64 42950) #13, !dbg !16788
  %103 = load i8*, i8** %base, align 8, !dbg !16793
  %add.ptr104 = getelementptr i8, i8* %103, i64 620, !dbg !16794
  %call105 = call i32 @readl(i8* %add.ptr104) #13, !dbg !16795
  %or106 = or i32 %call105, 256, !dbg !16796
  %104 = load i8*, i8** %base, align 8, !dbg !16797
  %add.ptr107 = getelementptr i8, i8* %104, i64 620, !dbg !16798
  call void @writel(i32 %or106, i8* %add.ptr107) #13, !dbg !16799
  %105 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16800
  %106 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16801
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %106, i32 0, i32 23, !dbg !16802
  %107 = load i32, i32* %irqmask, align 4, !dbg !16802
  call void @nv_disable_hw_interrupts(%struct.net_device* %105, i32 %107) #13, !dbg !16803
  %108 = load i8*, i8** %base, align 8, !dbg !16804
  call void @pci_push(i8* %108) #13, !dbg !16805
  %109 = load i8*, i8** %base, align 8, !dbg !16806
  %add.ptr108 = getelementptr i8, i8* %109, i64 384, !dbg !16807
  call void @writel(i32 15, i8* %add.ptr108) #13, !dbg !16808
  %110 = load i8*, i8** %base, align 8, !dbg !16809
  %add.ptr109 = getelementptr i8, i8* %110, i64 0, !dbg !16810
  call void @writel(i32 33791, i8* %add.ptr109) #13, !dbg !16811
  %111 = load i8*, i8** %base, align 8, !dbg !16812
  call void @pci_push(i8* %111) #13, !dbg !16813
  %112 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16814
  %call110 = call i32 @nv_request_irq(%struct.net_device* %112, i32 0) #13, !dbg !16816
  %tobool111 = icmp ne i32 %call110, 0, !dbg !16816
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !16817

if.then112:                                       ; preds = %if.end103
  br label %out_drain, !dbg !16818

if.end113:                                        ; preds = %if.end103
  %113 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16819
  %114 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16820
  %irqmask114 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %114, i32 0, i32 23, !dbg !16821
  %115 = load i32, i32* %irqmask114, align 4, !dbg !16821
  call void @nv_enable_hw_interrupts(%struct.net_device* %113, i32 %115) #13, !dbg !16822
  %116 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16823
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %116, i32 0, i32 0, !dbg !16824
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !16825
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16826, !srcloc !9174
  %117 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16827
  %118 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %117, i32 0, i32 0, !dbg !16827
  %rlock.i = bitcast %union.anon.2* %118 to %struct.raw_spinlock*, !dbg !16827
  %119 = load i8*, i8** %base, align 8, !dbg !16828
  %add.ptr115 = getelementptr i8, i8* %119, i64 176, !dbg !16829
  call void @writel(i32 1, i8* %add.ptr115) #13, !dbg !16830
  %120 = load i8*, i8** %base, align 8, !dbg !16831
  %add.ptr116 = getelementptr i8, i8* %120, i64 180, !dbg !16832
  call void @writel(i32 0, i8* %add.ptr116) #13, !dbg !16833
  %121 = load i8*, i8** %base, align 8, !dbg !16834
  %add.ptr117 = getelementptr i8, i8* %121, i64 184, !dbg !16835
  call void @writel(i32 -1, i8* %add.ptr117) #13, !dbg !16836
  %122 = load i8*, i8** %base, align 8, !dbg !16837
  %add.ptr118 = getelementptr i8, i8* %122, i64 188, !dbg !16838
  call void @writel(i32 65535, i8* %add.ptr118) #13, !dbg !16839
  %123 = load i8*, i8** %base, align 8, !dbg !16840
  %add.ptr119 = getelementptr i8, i8* %123, i64 140, !dbg !16841
  call void @writel(i32 8323104, i8* %add.ptr119) #13, !dbg !16842
  %124 = load i8*, i8** %base, align 8, !dbg !16843
  %add.ptr120 = getelementptr i8, i8* %124, i64 384, !dbg !16844
  %call121 = call i32 @readl(i8* %add.ptr120) #13, !dbg !16845
  %125 = load i8*, i8** %base, align 8, !dbg !16846
  %add.ptr122 = getelementptr i8, i8* %125, i64 384, !dbg !16847
  call void @writel(i32 15, i8* %add.ptr122) #13, !dbg !16848
  %126 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16849
  %linkspeed123 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %126, i32 0, i32 6, !dbg !16850
  store i32 0, i32* %linkspeed123, align 4, !dbg !16851
  %127 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16852
  %call124 = call i32 @nv_update_linkspeed(%struct.net_device* %127) #13, !dbg !16853
  store i32 %call124, i32* %ret, align 4, !dbg !16854
  %128 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16855
  call void @nv_start_rxtx(%struct.net_device* %128) #13, !dbg !16856
  %129 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16857
  call void @netif_start_queue(%struct.net_device* %129) #13, !dbg !16858
  %130 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16859
  call void @nv_napi_enable(%struct.net_device* %130) #13, !dbg !16860
  %131 = load i32, i32* %ret, align 4, !dbg !16861
  %tobool125 = icmp ne i32 %131, 0, !dbg !16861
  br i1 %tobool125, label %if.then126, label %if.else127, !dbg !16863

if.then126:                                       ; preds = %if.end113
  %132 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16864
  call void @netif_carrier_on(%struct.net_device* %132) #13, !dbg !16866
  br label %if.end128, !dbg !16867

if.else127:                                       ; preds = %if.end113
  %133 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16868
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %133, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0)) #14, !dbg !16870
  %134 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16871
  call void @netif_carrier_off(%struct.net_device* %134) #13, !dbg !16872
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then126
  %135 = load i32, i32* %oom, align 4, !dbg !16873
  %tobool129 = icmp ne i32 %135, 0, !dbg !16873
  br i1 %tobool129, label %if.then130, label %if.end133, !dbg !16875

if.then130:                                       ; preds = %if.end128
  %136 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16876
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %136, i32 0, i32 44, !dbg !16877
  %137 = load volatile i64, i64* @jiffies, align 8, !dbg !16878
  %add131 = add i64 %137, 13, !dbg !16879
  %call132 = call i32 @mod_timer(%struct.timer_list* %oom_kick, i64 %add131) #13, !dbg !16880
  br label %if.end133, !dbg !16880

if.end133:                                        ; preds = %if.then130, %if.end128
  %138 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16881
  %driver_data134 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %138, i32 0, i32 27, !dbg !16883
  %139 = load i32, i32* %driver_data134, align 4, !dbg !16883
  %and135 = and i32 %139, 3584, !dbg !16884
  %tobool136 = icmp ne i32 %and135, 0, !dbg !16884
  br i1 %tobool136, label %if.then137, label %if.end141, !dbg !16885

if.then137:                                       ; preds = %if.end133
  %140 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16886
  %stats_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %140, i32 0, i32 46, !dbg !16887
  %141 = load volatile i64, i64* @jiffies, align 8, !dbg !16888
  %add138 = add i64 %141, 2500, !dbg !16889
  %call139 = call i64 @round_jiffies(i64 %add138) #13, !dbg !16890
  %call140 = call i32 @mod_timer(%struct.timer_list* %stats_poll, i64 %call139) #13, !dbg !16891
  br label %if.end141, !dbg !16891

if.end141:                                        ; preds = %if.then137, %if.end133
  %142 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16892
  %lock142 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %142, i32 0, i32 0, !dbg !16893
  store %struct.spinlock* %lock142, %struct.spinlock** %lock.addr.i149, align 8
  call void @arch_local_irq_enable() #15, !dbg !16894
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16895, !srcloc !9188
  %143 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i149, align 8, !dbg !16896
  %144 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %143, i32 0, i32 0, !dbg !16896
  %rlock.i150 = bitcast %union.anon.2* %144 to %struct.raw_spinlock*, !dbg !16896
  %145 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16897
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %145, i32 0, i32 15, !dbg !16899
  %146 = load i64, i64* %features, align 8, !dbg !16899
  %and143 = and i64 %146, 4398046511104, !dbg !16900
  %tobool144 = icmp ne i64 %and143, 0, !dbg !16900
  br i1 %tobool144, label %if.then145, label %if.end148, !dbg !16901

if.then145:                                       ; preds = %if.end141
  %147 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16902
  %148 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16903
  %features146 = getelementptr inbounds %struct.net_device, %struct.net_device* %148, i32 0, i32 15, !dbg !16904
  %149 = load i64, i64* %features146, align 8, !dbg !16904
  %call147 = call i32 @nv_set_loopback(%struct.net_device* %147, i64 %149) #13, !dbg !16905
  br label %if.end148, !dbg !16905

if.end148:                                        ; preds = %if.then145, %if.end141
  store i32 0, i32* %retval, align 4, !dbg !16906
  br label %return, !dbg !16906

out_drain:                                        ; preds = %if.then112
  call void @llvm.dbg.label(metadata !16907), !dbg !16908
  %150 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16909
  call void @nv_drain_rxtx(%struct.net_device* %150) #13, !dbg !16910
  %151 = load i32, i32* %ret, align 4, !dbg !16911
  store i32 %151, i32* %retval, align 4, !dbg !16912
  br label %return, !dbg !16912

return:                                           ; preds = %out_drain, %if.end148
  %152 = load i32, i32* %retval, align 4, !dbg !16913
  ret i32 %152, !dbg !16913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_close(%struct.net_device* %dev) #2 !dbg !16914 {
entry:
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !8241, metadata !DIExpression()), !dbg !16915
  %lock.addr.i14 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i14, metadata !8251, metadata !DIExpression()), !dbg !16917
  %lock.addr.i12 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i12, metadata !8241, metadata !DIExpression()), !dbg !16919
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !16921
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16923, metadata !DIExpression()), !dbg !16924
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !16925, metadata !DIExpression()), !dbg !16926
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16927
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !16928
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !16928
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !16926
  call void @llvm.dbg.declare(metadata i8** %base, metadata !16929, metadata !DIExpression()), !dbg !16930
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16931
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 0, !dbg !16932
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !16933
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16934, !srcloc !9174
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16935
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !16935
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !16935
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16936
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 5, !dbg !16937
  store i32 1, i32* %in_shutdown, align 8, !dbg !16938
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16939
  %lock1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 0, !dbg !16940
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i12, align 8
  call void @arch_local_irq_enable() #15, !dbg !16941
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16942, !srcloc !9188
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i12, align 8, !dbg !16943
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !16943
  %rlock.i13 = bitcast %union.anon.2* %8 to %struct.raw_spinlock*, !dbg !16943
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16944
  call void @nv_napi_disable(%struct.net_device* %9) #13, !dbg !16945
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16946
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 20, !dbg !16947
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !16947
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 43, !dbg !16948
  %12 = load i32, i32* %irq, align 4, !dbg !16948
  call void @synchronize_irq(i32 %12) #13, !dbg !16949
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16950
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 44, !dbg !16950
  %call2 = call i32 @del_timer(%struct.timer_list* %oom_kick) #13, !dbg !16950
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16951
  %nic_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 45, !dbg !16951
  %call3 = call i32 @del_timer(%struct.timer_list* %nic_poll) #13, !dbg !16951
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16952
  %stats_poll = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 46, !dbg !16952
  %call4 = call i32 @del_timer(%struct.timer_list* %stats_poll) #13, !dbg !16952
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16953
  call void @netif_stop_queue(%struct.net_device* %16) #13, !dbg !16954
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16955
  %lock5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 0, !dbg !16956
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i14, align 8
  call void @arch_local_irq_disable() #15, !dbg !16957
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16958, !srcloc !9174
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i14, align 8, !dbg !16959
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !16959
  %rlock.i15 = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !16959
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16960
  call void @nv_update_pause(%struct.net_device* %20, i32 0) #13, !dbg !16961
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16962
  call void @nv_stop_rxtx(%struct.net_device* %21) #13, !dbg !16963
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16964
  call void @nv_txrx_reset(%struct.net_device* %22) #13, !dbg !16965
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16966
  %call6 = call i8* @get_hwbase(%struct.net_device* %23) #13, !dbg !16967
  store i8* %call6, i8** %base, align 8, !dbg !16968
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16969
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16970
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 23, !dbg !16971
  %26 = load i32, i32* %irqmask, align 4, !dbg !16971
  call void @nv_disable_hw_interrupts(%struct.net_device* %24, i32 %26) #13, !dbg !16972
  %27 = load i8*, i8** %base, align 8, !dbg !16973
  call void @pci_push(i8* %27) #13, !dbg !16974
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16975
  %lock7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 0, !dbg !16976
  store %struct.spinlock* %lock7, %struct.spinlock** %lock.addr.i16, align 8
  call void @arch_local_irq_enable() #15, !dbg !16977
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16978, !srcloc !9188
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !16979
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !16979
  %rlock.i17 = bitcast %union.anon.2* %30 to %struct.raw_spinlock*, !dbg !16979
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16980
  call void @nv_free_irq(%struct.net_device* %31) #13, !dbg !16981
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16982
  call void @nv_drain_rxtx(%struct.net_device* %32) #13, !dbg !16983
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !16984
  %wolenabled = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 11, !dbg !16986
  %34 = load i32, i32* %wolenabled, align 8, !dbg !16986
  %tobool = icmp ne i32 %34, 0, !dbg !16984
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !16987

lor.lhs.false:                                    ; preds = %entry
  %35 = load i32, i32* @phy_power_down, align 4, !dbg !16988
  %tobool8 = icmp ne i32 %35, 0, !dbg !16988
  br i1 %tobool8, label %if.else, label %if.then, !dbg !16989

if.then:                                          ; preds = %lor.lhs.false, %entry
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16990
  call void @nv_txrx_gate(%struct.net_device* %36, i1 zeroext false) #13, !dbg !16992
  %37 = load i8*, i8** %base, align 8, !dbg !16993
  %add.ptr = getelementptr i8, i8* %37, i64 140, !dbg !16994
  call void @writel(i32 8323104, i8* %add.ptr) #13, !dbg !16995
  %38 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16996
  call void @nv_start_rx(%struct.net_device* %38) #13, !dbg !16997
  br label %if.end, !dbg !16998

if.else:                                          ; preds = %lor.lhs.false
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16999
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17001
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 10, !dbg !17002
  %41 = load i32, i32* %phyaddr, align 4, !dbg !17002
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17003
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17004
  %phyaddr9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 10, !dbg !17005
  %44 = load i32, i32* %phyaddr9, align 4, !dbg !17005
  %call10 = call i32 @mii_rw(%struct.net_device* %42, i32 %44, i32 0, i32 -1) #13, !dbg !17006
  %or = or i32 %call10, 2048, !dbg !17007
  %call11 = call i32 @mii_rw(%struct.net_device* %39, i32 %41, i32 0, i32 %or) #13, !dbg !17008
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17009
  call void @nv_txrx_gate(%struct.net_device* %45, i1 zeroext true) #13, !dbg !17010
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !17011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_start_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !17012 {
entry:
  %lock.addr.i347 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i347, metadata !9883, metadata !DIExpression()), !dbg !17013
  %flags.addr.i348 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i348, metadata !9891, metadata !DIExpression()), !dbg !17015
  %tmp.i349 = alloca i32, align 4
  %tmp8.i350 = alloca i32, align 4
  %lock.addr.i345 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i345, metadata !8259, metadata !DIExpression()), !dbg !17016
  %lock.addr.i340 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i340, metadata !9883, metadata !DIExpression()), !dbg !17023
  %flags.addr.i341 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i341, metadata !9891, metadata !DIExpression()), !dbg !17025
  %tmp.i342 = alloca i32, align 4
  %tmp8.i343 = alloca i32, align 4
  %lock.addr.i338 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i338, metadata !9883, metadata !DIExpression()), !dbg !17026
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !17030
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !17031
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %tx_flags = alloca i32, align 4
  %tx_flags_extra = alloca i32, align 4
  %fragments = alloca i32, align 4
  %i = alloca i32, align 4
  %offset = alloca i32, align 4
  %bcnt = alloca i32, align 4
  %size = alloca i32, align 4
  %entries = alloca i32, align 4
  %empty_slots = alloca i32, align 4
  %put_tx = alloca %struct.ring_desc*, align 8
  %start_tx = alloca %struct.ring_desc*, align 8
  %prev_tx = alloca %struct.ring_desc*, align 8
  %prev_tx_ctx = alloca %struct.nv_skb_map*, align 8
  %tmp_tx_ctx = alloca %struct.nv_skb_map*, align 8
  %start_tx_ctx = alloca %struct.nv_skb_map*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %frag_size = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy20 = alloca i64, align 8
  %__dummy221 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  %frag_size118 = alloca i32, align 4
  %__vpp_verify174 = alloca i8*, align 8
  %pao_ID__178 = alloca i32, align 4
  %__dummy291 = alloca i64, align 8
  %__dummy2292 = alloca i64, align 8
  %tmp295 = alloca i32, align 4
  %__dummy299 = alloca i64, align 8
  %__dummy2300 = alloca i64, align 8
  %tmp303 = alloca i32, align 4
  %txrxctl_kick = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17038, metadata !DIExpression()), !dbg !17039
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17040, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !17042, metadata !DIExpression()), !dbg !17043
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17044
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !17045
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !17045
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !17043
  call void @llvm.dbg.declare(metadata i32* %tx_flags, metadata !17046, metadata !DIExpression()), !dbg !17047
  store i32 0, i32* %tx_flags, align 4, !dbg !17047
  call void @llvm.dbg.declare(metadata i32* %tx_flags_extra, metadata !17048, metadata !DIExpression()), !dbg !17049
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17050
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 24, !dbg !17051
  %3 = load i32, i32* %desc_ver, align 8, !dbg !17051
  %cmp = icmp eq i32 %3, 1, !dbg !17052
  %4 = zext i1 %cmp to i64, !dbg !17050
  %cond = select i1 %cmp, i32 65536, i32 536870912, !dbg !17050
  store i32 %cond, i32* %tx_flags_extra, align 4, !dbg !17049
  call void @llvm.dbg.declare(metadata i32* %fragments, metadata !17053, metadata !DIExpression()), !dbg !17054
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17055
  %call1 = call i8* @skb_end_pointer(%struct.sk_buff* %5) #13, !dbg !17055
  %6 = bitcast i8* %call1 to %struct.skb_shared_info*, !dbg !17056
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %6, i32 0, i32 2, !dbg !17056
  %7 = load i8, i8* %nr_frags, align 2, !dbg !17056
  %conv = zext i8 %7 to i32, !dbg !17055
  store i32 %conv, i32* %fragments, align 4, !dbg !17054
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17057, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !17059, metadata !DIExpression()), !dbg !17060
  store i32 0, i32* %offset, align 4, !dbg !17060
  call void @llvm.dbg.declare(metadata i32* %bcnt, metadata !17061, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.declare(metadata i32* %size, metadata !17063, metadata !DIExpression()), !dbg !17064
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17065
  %call2 = call i32 @skb_headlen(%struct.sk_buff* %8) #13, !dbg !17066
  store i32 %call2, i32* %size, align 4, !dbg !17064
  call void @llvm.dbg.declare(metadata i32* %entries, metadata !17067, metadata !DIExpression()), !dbg !17068
  %9 = load i32, i32* %size, align 4, !dbg !17069
  %shr = lshr i32 %9, 14, !dbg !17070
  %10 = load i32, i32* %size, align 4, !dbg !17071
  %and = and i32 %10, 16383, !dbg !17072
  %tobool = icmp ne i32 %and, 0, !dbg !17073
  %11 = zext i1 %tobool to i64, !dbg !17073
  %cond3 = select i1 %tobool, i32 1, i32 0, !dbg !17073
  %add = add i32 %shr, %cond3, !dbg !17074
  store i32 %add, i32* %entries, align 4, !dbg !17068
  call void @llvm.dbg.declare(metadata i32* %empty_slots, metadata !17075, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.declare(metadata %struct.ring_desc** %put_tx, metadata !17077, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.declare(metadata %struct.ring_desc** %start_tx, metadata !17079, metadata !DIExpression()), !dbg !17080
  call void @llvm.dbg.declare(metadata %struct.ring_desc** %prev_tx, metadata !17081, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %prev_tx_ctx, metadata !17083, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %tmp_tx_ctx, metadata !17085, metadata !DIExpression()), !dbg !17086
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !17086
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %start_tx_ctx, metadata !17087, metadata !DIExpression()), !dbg !17088
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !17088
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17089, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17091, metadata !DIExpression()), !dbg !17092
  store i32 0, i32* %ret, align 4, !dbg !17092
  store i32 0, i32* %i, align 4, !dbg !17093
  br label %for.cond, !dbg !17095

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !17096
  %13 = load i32, i32* %fragments, align 4, !dbg !17098
  %cmp4 = icmp ult i32 %12, %13, !dbg !17099
  br i1 %cmp4, label %for.body, label %for.end, !dbg !17100

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %frag_size, metadata !17101, metadata !DIExpression()), !dbg !17103
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17104
  %call6 = call i8* @skb_end_pointer(%struct.sk_buff* %14) #13, !dbg !17104
  %15 = bitcast i8* %call6 to %struct.skb_shared_info*, !dbg !17105
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %15, i32 0, i32 12, !dbg !17105
  %16 = load i32, i32* %i, align 4, !dbg !17106
  %idxprom = zext i32 %16 to i64, !dbg !17104
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !17104
  %call7 = call i32 @skb_frag_size(%struct.bio_vec* %arrayidx) #13, !dbg !17107
  store i32 %call7, i32* %frag_size, align 4, !dbg !17103
  %17 = load i32, i32* %frag_size, align 4, !dbg !17108
  %shr8 = lshr i32 %17, 14, !dbg !17109
  %18 = load i32, i32* %frag_size, align 4, !dbg !17110
  %and9 = and i32 %18, 16383, !dbg !17111
  %tobool10 = icmp ne i32 %and9, 0, !dbg !17112
  %19 = zext i1 %tobool10 to i64, !dbg !17112
  %cond11 = select i1 %tobool10, i32 1, i32 0, !dbg !17112
  %add12 = add i32 %shr8, %cond11, !dbg !17113
  %20 = load i32, i32* %entries, align 4, !dbg !17114
  %add13 = add i32 %20, %add12, !dbg !17114
  store i32 %add13, i32* %entries, align 4, !dbg !17114
  br label %for.inc, !dbg !17115

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !17116
  %inc = add i32 %21, 1, !dbg !17116
  store i32 %inc, i32* %i, align 4, !dbg !17116
  br label %for.cond, !dbg !17117, !llvm.loop !17118

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !17120

do.body:                                          ; preds = %for.end
  br label %do.body14, !dbg !17121

do.body14:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17122, metadata !DIExpression()), !dbg !17124
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17125, metadata !DIExpression()), !dbg !17124
  %cmp15 = icmp eq i64* %__dummy, %__dummy2, !dbg !17124
  %conv16 = zext i1 %cmp15 to i32, !dbg !17124
  store i32 1, i32* %tmp, align 4, !dbg !17124
  %22 = load i32, i32* %tmp, align 4, !dbg !17124
  br label %do.body17, !dbg !17126

do.body17:                                        ; preds = %do.body14
  br label %do.body18, !dbg !17127

do.body18:                                        ; preds = %do.body17
  br label %do.body19, !dbg !17128

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy20, metadata !17130, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.declare(metadata i64* %__dummy221, metadata !17134, metadata !DIExpression()), !dbg !17133
  %cmp22 = icmp eq i64* %__dummy20, %__dummy221, !dbg !17133
  %conv23 = zext i1 %cmp22 to i32, !dbg !17133
  store i32 1, i32* %tmp24, align 4, !dbg !17133
  %23 = load i32, i32* %tmp24, align 4, !dbg !17133
  %call25 = call i64 @arch_local_irq_save() #13, !dbg !17135
  store i64 %call25, i64* %flags, align 8, !dbg !17135
  br label %do.end, !dbg !17135

do.end:                                           ; preds = %do.body19
  br label %do.end26, !dbg !17128

do.end26:                                         ; preds = %do.end
  br label %do.body27, !dbg !17127

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17136, !srcloc !17137
  br label %do.body28, !dbg !17136

do.body28:                                        ; preds = %do.body27
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17138
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 0, !dbg !17138
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17139
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !17140
  %rlock.i = bitcast %union.anon.2* %26 to %struct.raw_spinlock*, !dbg !17140
  br label %do.end30, !dbg !17138

do.end30:                                         ; preds = %do.body28
  br label %do.end31, !dbg !17136

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !17127

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !17126

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !17121

do.end34:                                         ; preds = %do.end33
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17141
  %call35 = call i32 @nv_get_empty_tx_slots(%struct.fe_priv* %27) #13, !dbg !17142
  store i32 %call35, i32* %empty_slots, align 4, !dbg !17143
  %28 = load i32, i32* %empty_slots, align 4, !dbg !17144
  %29 = load i32, i32* %entries, align 4, !dbg !17144
  %cmp36 = icmp ule i32 %28, %29, !dbg !17144
  %lnot = xor i1 %cmp36, true, !dbg !17144
  %lnot38 = xor i1 %lnot, true, !dbg !17144
  %lnot.ext = zext i1 %lnot38 to i32, !dbg !17144
  %conv39 = sext i32 %lnot.ext to i64, !dbg !17144
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !17144
  br i1 %tobool40, label %if.then, label %if.end, !dbg !17145

if.then:                                          ; preds = %do.end34
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17146
  call void @netif_stop_queue(%struct.net_device* %30) #13, !dbg !17147
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17148
  %tx_stop = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 67, !dbg !17149
  store i32 1, i32* %tx_stop, align 8, !dbg !17150
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17151
  %lock41 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 0, !dbg !17152
  %33 = load i64, i64* %flags, align 8, !dbg !17153
  store %struct.spinlock* %lock41, %struct.spinlock** %lock.addr.i338, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !17154
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !17154
  store i32 1, i32* %tmp.i, align 4, !dbg !17154
  %34 = load i32, i32* %tmp.i, align 4, !dbg !17154
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !17155
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !17155
  store i32 1, i32* %tmp8.i, align 4, !dbg !17155
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !17155
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !17156
  call void @arch_local_irq_restore(i64 %36) #15, !dbg !17156
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17157, !srcloc !10037
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i338, align 8, !dbg !17158
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !17158
  %rlock.i339 = bitcast %union.anon.2* %38 to %struct.raw_spinlock*, !dbg !17158
  store i32 16, i32* %ret, align 4, !dbg !17159
  br label %txkick, !dbg !17160

if.end:                                           ; preds = %do.end34
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17161
  %lock42 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 0, !dbg !17162
  %40 = load i64, i64* %flags, align 8, !dbg !17163
  store %struct.spinlock* %lock42, %struct.spinlock** %lock.addr.i340, align 8
  store i64 %40, i64* %flags.addr.i341, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !17164
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !17164
  store i32 1, i32* %tmp.i342, align 4, !dbg !17164
  %41 = load i32, i32* %tmp.i342, align 4, !dbg !17164
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !17165
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !17165
  store i32 1, i32* %tmp8.i343, align 4, !dbg !17165
  %42 = load i32, i32* %tmp8.i343, align 4, !dbg !17165
  %43 = load i64, i64* %flags.addr.i341, align 8, !dbg !17166
  call void @arch_local_irq_restore(i64 %43) #15, !dbg !17166
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17167, !srcloc !10037
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i340, align 8, !dbg !17168
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !17168
  %rlock.i344 = bitcast %union.anon.2* %45 to %struct.raw_spinlock*, !dbg !17168
  %46 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17169
  %put_tx43 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %46, i32 0, i32 54, !dbg !17170
  %orig = bitcast %union.ring_type* %put_tx43 to %struct.ring_desc**, !dbg !17171
  %47 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !17171
  store %struct.ring_desc* %47, %struct.ring_desc** %put_tx, align 8, !dbg !17172
  store %struct.ring_desc* %47, %struct.ring_desc** %start_tx, align 8, !dbg !17173
  br label %do.body44, !dbg !17174

do.body44:                                        ; preds = %do.cond, %if.end
  %48 = load i32, i32* %size, align 4, !dbg !17175
  %cmp45 = icmp ugt i32 %48, 16384, !dbg !17177
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !17178

cond.true:                                        ; preds = %do.body44
  br label %cond.end, !dbg !17178

cond.false:                                       ; preds = %do.body44
  %49 = load i32, i32* %size, align 4, !dbg !17179
  br label %cond.end, !dbg !17178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond47 = phi i32 [ 16384, %cond.true ], [ %49, %cond.false ], !dbg !17178
  store i32 %cond47, i32* %bcnt, align 4, !dbg !17180
  %50 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17181
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %50, i32 0, i32 20, !dbg !17181
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !17181
  %dev48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 41, !dbg !17181
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17181
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %52, i32 0, i32 37, !dbg !17181
  %53 = load i8*, i8** %data, align 8, !dbg !17181
  %54 = load i32, i32* %offset, align 4, !dbg !17181
  %idx.ext = zext i32 %54 to i64, !dbg !17181
  %add.ptr = getelementptr i8, i8* %53, i64 %idx.ext, !dbg !17181
  %55 = load i32, i32* %bcnt, align 4, !dbg !17181
  %conv49 = zext i32 %55 to i64, !dbg !17181
  %call50 = call i64 @dma_map_single_attrs(%struct.device* %dev48, i8* %add.ptr, i64 %conv49, i32 1, i64 0) #13, !dbg !17181
  %56 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17182
  %put_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %56, i32 0, i32 57, !dbg !17183
  %57 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx, align 8, !dbg !17183
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %57, i32 0, i32 1, !dbg !17184
  store i64 %call50, i64* %dma, align 8, !dbg !17185
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17186
  %pci_dev51 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 20, !dbg !17186
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev51, align 8, !dbg !17186
  %dev52 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 41, !dbg !17186
  %60 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17186
  %put_tx_ctx53 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %60, i32 0, i32 57, !dbg !17186
  %61 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx53, align 8, !dbg !17186
  %dma54 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %61, i32 0, i32 1, !dbg !17186
  %62 = load i64, i64* %dma54, align 8, !dbg !17186
  %call55 = call i32 @dma_mapping_error(%struct.device* %dev52, i64 %62) #13, !dbg !17186
  %tobool56 = icmp ne i32 %call55, 0, !dbg !17186
  %lnot57 = xor i1 %tobool56, true, !dbg !17186
  %lnot59 = xor i1 %lnot57, true, !dbg !17186
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !17186
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !17186
  %tobool62 = icmp ne i64 %conv61, 0, !dbg !17186
  br i1 %tobool62, label %if.then63, label %if.end71, !dbg !17188

if.then63:                                        ; preds = %cond.end
  %63 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17189
  call void @dev_kfree_skb_any(%struct.sk_buff* %63) #13, !dbg !17191
  %64 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17192
  %swstats_tx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %64, i32 0, i32 68, !dbg !17193
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp) #13, !dbg !17194
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !17195
  br label %do.body64, !dbg !17195

do.body64:                                        ; preds = %if.then63
  br label %do.body65, !dbg !17197

do.body65:                                        ; preds = %do.body64
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !17199, metadata !DIExpression()), !dbg !17201
  store i8* null, i8** %__vpp_verify, align 8, !dbg !17201
  %65 = load i8*, i8** %__vpp_verify, align 8, !dbg !17201
  br label %do.end66, !dbg !17201

do.end66:                                         ; preds = %do.body65
  br label %do.body67, !dbg !17197

do.body67:                                        ; preds = %do.end66
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !17202, metadata !DIExpression()), !dbg !17204
  store i32 1, i32* %pao_ID__, align 4, !dbg !17204
  %66 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17205
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %66, i32 0, i32 50, !dbg !17205
  %67 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !17205
  %stat_tx_dropped = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %67, i32 0, i32 6, !dbg !17205
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_dropped, i64* %stat_tx_dropped) #10, !dbg !17205, !srcloc !17208
  br label %do.end68, !dbg !17204

do.end68:                                         ; preds = %do.body67
  br label %do.end69, !dbg !17197

do.end69:                                         ; preds = %do.end68
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17209
  %swstats_tx_syncp70 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 68, !dbg !17210
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp70) #13, !dbg !17211
  store i32 0, i32* %ret, align 4, !dbg !17212
  br label %dma_error, !dbg !17213

if.end71:                                         ; preds = %cond.end
  %69 = load i32, i32* %bcnt, align 4, !dbg !17214
  %70 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17215
  %put_tx_ctx72 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %70, i32 0, i32 57, !dbg !17216
  %71 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx72, align 8, !dbg !17216
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %71, i32 0, i32 2, !dbg !17217
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !17218
  %bf.value = and i32 %69, 2147483647, !dbg !17218
  %bf.clear = and i32 %bf.load, -2147483648, !dbg !17218
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !17218
  store i32 %bf.set, i32* %dma_len, align 8, !dbg !17218
  %72 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17219
  %put_tx_ctx73 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %72, i32 0, i32 57, !dbg !17220
  %73 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx73, align 8, !dbg !17220
  %dma_single = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %73, i32 0, i32 2, !dbg !17221
  %bf.load74 = load i32, i32* %dma_single, align 8, !dbg !17222
  %bf.clear75 = and i32 %bf.load74, 2147483647, !dbg !17222
  %bf.set76 = or i32 %bf.clear75, -2147483648, !dbg !17222
  store i32 %bf.set76, i32* %dma_single, align 8, !dbg !17222
  %74 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17223
  %put_tx_ctx77 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %74, i32 0, i32 57, !dbg !17223
  %75 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx77, align 8, !dbg !17223
  %dma78 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %75, i32 0, i32 1, !dbg !17223
  %76 = load i64, i64* %dma78, align 8, !dbg !17223
  %conv79 = trunc i64 %76 to i32, !dbg !17223
  %77 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17224
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %77, i32 0, i32 0, !dbg !17225
  store i32 %conv79, i32* %buf, align 4, !dbg !17226
  %78 = load i32, i32* %bcnt, align 4, !dbg !17227
  %sub = sub i32 %78, 1, !dbg !17227
  %79 = load i32, i32* %tx_flags, align 4, !dbg !17227
  %or = or i32 %sub, %79, !dbg !17227
  %80 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17228
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %80, i32 0, i32 1, !dbg !17229
  store i32 %or, i32* %flaglen, align 4, !dbg !17230
  %81 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17231
  %tx_flags80 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %81, i32 0, i32 61, !dbg !17232
  %82 = load i32, i32* %tx_flags80, align 8, !dbg !17232
  store i32 %82, i32* %tx_flags, align 4, !dbg !17233
  %83 = load i32, i32* %bcnt, align 4, !dbg !17234
  %84 = load i32, i32* %offset, align 4, !dbg !17235
  %add81 = add i32 %84, %83, !dbg !17235
  store i32 %add81, i32* %offset, align 4, !dbg !17235
  %85 = load i32, i32* %bcnt, align 4, !dbg !17236
  %86 = load i32, i32* %size, align 4, !dbg !17237
  %sub82 = sub i32 %86, %85, !dbg !17237
  store i32 %sub82, i32* %size, align 4, !dbg !17237
  %87 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17238
  %incdec.ptr = getelementptr %struct.ring_desc, %struct.ring_desc* %87, i32 1, !dbg !17238
  store %struct.ring_desc* %incdec.ptr, %struct.ring_desc** %put_tx, align 8, !dbg !17238
  %88 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17238
  %last_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %88, i32 0, i32 55, !dbg !17238
  %orig83 = bitcast %union.ring_type* %last_tx to %struct.ring_desc**, !dbg !17238
  %89 = load %struct.ring_desc*, %struct.ring_desc** %orig83, align 8, !dbg !17238
  %cmp84 = icmp eq %struct.ring_desc* %87, %89, !dbg !17238
  %lnot86 = xor i1 %cmp84, true, !dbg !17238
  %lnot88 = xor i1 %lnot86, true, !dbg !17238
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !17238
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !17238
  %tobool91 = icmp ne i64 %conv90, 0, !dbg !17238
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !17240

if.then92:                                        ; preds = %if.end71
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17241
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 60, !dbg !17242
  %orig93 = bitcast %union.ring_type* %tx_ring to %struct.ring_desc**, !dbg !17243
  %91 = load %struct.ring_desc*, %struct.ring_desc** %orig93, align 8, !dbg !17243
  store %struct.ring_desc* %91, %struct.ring_desc** %put_tx, align 8, !dbg !17244
  br label %if.end94, !dbg !17245

if.end94:                                         ; preds = %if.then92, %if.end71
  %92 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17246
  %put_tx_ctx95 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %92, i32 0, i32 57, !dbg !17246
  %93 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx95, align 8, !dbg !17246
  %incdec.ptr96 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %93, i32 1, !dbg !17246
  store %struct.nv_skb_map* %incdec.ptr96, %struct.nv_skb_map** %put_tx_ctx95, align 8, !dbg !17246
  %94 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17246
  %last_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %94, i32 0, i32 58, !dbg !17246
  %95 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx, align 8, !dbg !17246
  %cmp97 = icmp eq %struct.nv_skb_map* %93, %95, !dbg !17246
  %lnot99 = xor i1 %cmp97, true, !dbg !17246
  %lnot101 = xor i1 %lnot99, true, !dbg !17246
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !17246
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !17246
  %tobool104 = icmp ne i64 %conv103, 0, !dbg !17246
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !17248

if.then105:                                       ; preds = %if.end94
  %96 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17249
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %96, i32 0, i32 59, !dbg !17250
  %97 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb, align 8, !dbg !17250
  %98 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17251
  %put_tx_ctx106 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %98, i32 0, i32 57, !dbg !17252
  store %struct.nv_skb_map* %97, %struct.nv_skb_map** %put_tx_ctx106, align 8, !dbg !17253
  br label %if.end107, !dbg !17251

if.end107:                                        ; preds = %if.then105, %if.end94
  br label %do.cond, !dbg !17254

do.cond:                                          ; preds = %if.end107
  %99 = load i32, i32* %size, align 4, !dbg !17255
  %tobool108 = icmp ne i32 %99, 0, !dbg !17254
  br i1 %tobool108, label %do.body44, label %do.end109, !dbg !17254, !llvm.loop !17256

do.end109:                                        ; preds = %do.cond
  store i32 0, i32* %i, align 4, !dbg !17258
  br label %for.cond110, !dbg !17260

for.cond110:                                      ; preds = %for.inc239, %do.end109
  %100 = load i32, i32* %i, align 4, !dbg !17261
  %101 = load i32, i32* %fragments, align 4, !dbg !17263
  %cmp111 = icmp ult i32 %100, %101, !dbg !17264
  br i1 %cmp111, label %for.body113, label %for.end241, !dbg !17265

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !17266, metadata !DIExpression()), !dbg !17270
  %102 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17271
  %call114 = call i8* @skb_end_pointer(%struct.sk_buff* %102) #13, !dbg !17271
  %103 = bitcast i8* %call114 to %struct.skb_shared_info*, !dbg !17272
  %frags115 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %103, i32 0, i32 12, !dbg !17272
  %104 = load i32, i32* %i, align 4, !dbg !17273
  %idxprom116 = zext i32 %104 to i64, !dbg !17271
  %arrayidx117 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags115, i64 0, i64 %idxprom116, !dbg !17271
  store %struct.bio_vec* %arrayidx117, %struct.bio_vec** %frag, align 8, !dbg !17270
  call void @llvm.dbg.declare(metadata i32* %frag_size118, metadata !17274, metadata !DIExpression()), !dbg !17275
  %105 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !17276
  %call119 = call i32 @skb_frag_size(%struct.bio_vec* %105) #13, !dbg !17277
  store i32 %call119, i32* %frag_size118, align 4, !dbg !17275
  store i32 0, i32* %offset, align 4, !dbg !17278
  br label %do.body120, !dbg !17279

do.body120:                                       ; preds = %do.cond236, %for.body113
  %106 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !17280
  %tobool121 = icmp ne %struct.nv_skb_map* %106, null, !dbg !17280
  br i1 %tobool121, label %if.end124, label %if.then122, !dbg !17283

if.then122:                                       ; preds = %do.body120
  %107 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17284
  %put_tx_ctx123 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %107, i32 0, i32 57, !dbg !17285
  %108 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx123, align 8, !dbg !17285
  store %struct.nv_skb_map* %108, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !17286
  store %struct.nv_skb_map* %108, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !17287
  br label %if.end124, !dbg !17288

if.end124:                                        ; preds = %if.then122, %do.body120
  %109 = load i32, i32* %frag_size118, align 4, !dbg !17289
  %cmp125 = icmp ugt i32 %109, 16384, !dbg !17290
  br i1 %cmp125, label %cond.true127, label %cond.false128, !dbg !17291

cond.true127:                                     ; preds = %if.end124
  br label %cond.end129, !dbg !17291

cond.false128:                                    ; preds = %if.end124
  %110 = load i32, i32* %frag_size118, align 4, !dbg !17292
  br label %cond.end129, !dbg !17291

cond.end129:                                      ; preds = %cond.false128, %cond.true127
  %cond130 = phi i32 [ 16384, %cond.true127 ], [ %110, %cond.false128 ], !dbg !17291
  store i32 %cond130, i32* %bcnt, align 4, !dbg !17293
  %111 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17294
  %pci_dev131 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %111, i32 0, i32 20, !dbg !17295
  %112 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev131, align 8, !dbg !17295
  %dev132 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %112, i32 0, i32 41, !dbg !17296
  %113 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !17297
  %114 = load i32, i32* %offset, align 4, !dbg !17298
  %conv133 = zext i32 %114 to i64, !dbg !17298
  %115 = load i32, i32* %bcnt, align 4, !dbg !17299
  %conv134 = zext i32 %115 to i64, !dbg !17299
  %call135 = call i64 @skb_frag_dma_map(%struct.device* %dev132, %struct.bio_vec* %113, i64 %conv133, i64 %conv134, i32 1) #13, !dbg !17300
  %116 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17301
  %put_tx_ctx136 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %116, i32 0, i32 57, !dbg !17302
  %117 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx136, align 8, !dbg !17302
  %dma137 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %117, i32 0, i32 1, !dbg !17303
  store i64 %call135, i64* %dma137, align 8, !dbg !17304
  %118 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17305
  %pci_dev138 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %118, i32 0, i32 20, !dbg !17305
  %119 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev138, align 8, !dbg !17305
  %dev139 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %119, i32 0, i32 41, !dbg !17305
  %120 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17305
  %put_tx_ctx140 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %120, i32 0, i32 57, !dbg !17305
  %121 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx140, align 8, !dbg !17305
  %dma141 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %121, i32 0, i32 1, !dbg !17305
  %122 = load i64, i64* %dma141, align 8, !dbg !17305
  %call142 = call i32 @dma_mapping_error(%struct.device* %dev139, i64 %122) #13, !dbg !17305
  %tobool143 = icmp ne i32 %call142, 0, !dbg !17305
  %lnot144 = xor i1 %tobool143, true, !dbg !17305
  %lnot146 = xor i1 %lnot144, true, !dbg !17305
  %lnot.ext147 = zext i1 %lnot146 to i32, !dbg !17305
  %conv148 = sext i32 %lnot.ext147 to i64, !dbg !17305
  %tobool149 = icmp ne i64 %conv148, 0, !dbg !17305
  br i1 %tobool149, label %if.then150, label %if.end186, !dbg !17307

if.then150:                                       ; preds = %cond.end129
  br label %do.body151, !dbg !17308

do.body151:                                       ; preds = %do.cond165, %if.then150
  %123 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17310
  %124 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !17312
  call void @nv_unmap_txskb(%struct.fe_priv* %123, %struct.nv_skb_map* %124) #13, !dbg !17313
  %125 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !17314
  %incdec.ptr152 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %125, i32 1, !dbg !17314
  store %struct.nv_skb_map* %incdec.ptr152, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !17314
  %126 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17314
  %last_tx_ctx153 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %126, i32 0, i32 58, !dbg !17314
  %127 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx153, align 8, !dbg !17314
  %cmp154 = icmp eq %struct.nv_skb_map* %125, %127, !dbg !17314
  %lnot156 = xor i1 %cmp154, true, !dbg !17314
  %lnot158 = xor i1 %lnot156, true, !dbg !17314
  %lnot.ext159 = zext i1 %lnot158 to i32, !dbg !17314
  %conv160 = sext i32 %lnot.ext159 to i64, !dbg !17314
  %tobool161 = icmp ne i64 %conv160, 0, !dbg !17314
  br i1 %tobool161, label %if.then162, label %if.end164, !dbg !17316

if.then162:                                       ; preds = %do.body151
  %128 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17317
  %tx_skb163 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %128, i32 0, i32 59, !dbg !17318
  %129 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb163, align 8, !dbg !17318
  store %struct.nv_skb_map* %129, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !17319
  br label %if.end164, !dbg !17320

if.end164:                                        ; preds = %if.then162, %do.body151
  br label %do.cond165, !dbg !17321

do.cond165:                                       ; preds = %if.end164
  %130 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !17322
  %131 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17323
  %put_tx_ctx166 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %131, i32 0, i32 57, !dbg !17324
  %132 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx166, align 8, !dbg !17324
  %cmp167 = icmp ne %struct.nv_skb_map* %130, %132, !dbg !17325
  br i1 %cmp167, label %do.body151, label %do.end169, !dbg !17321, !llvm.loop !17326

do.end169:                                        ; preds = %do.cond165
  %133 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17328
  call void @dev_kfree_skb_any(%struct.sk_buff* %133) #13, !dbg !17329
  %134 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !17330
  %135 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17331
  %put_tx_ctx170 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %135, i32 0, i32 57, !dbg !17332
  store %struct.nv_skb_map* %134, %struct.nv_skb_map** %put_tx_ctx170, align 8, !dbg !17333
  %136 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17334
  %swstats_tx_syncp171 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %136, i32 0, i32 68, !dbg !17335
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp171) #13, !dbg !17336
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !17337
  br label %do.body172, !dbg !17337

do.body172:                                       ; preds = %do.end169
  br label %do.body173, !dbg !17339

do.body173:                                       ; preds = %do.body172
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify174, metadata !17341, metadata !DIExpression()), !dbg !17343
  store i8* null, i8** %__vpp_verify174, align 8, !dbg !17343
  %137 = load i8*, i8** %__vpp_verify174, align 8, !dbg !17343
  br label %do.end176, !dbg !17343

do.end176:                                        ; preds = %do.body173
  br label %do.body177, !dbg !17339

do.body177:                                       ; preds = %do.end176
  call void @llvm.dbg.declare(metadata i32* %pao_ID__178, metadata !17344, metadata !DIExpression()), !dbg !17346
  store i32 1, i32* %pao_ID__178, align 4, !dbg !17346
  %138 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17347
  %txrx_stats179 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %138, i32 0, i32 50, !dbg !17347
  %139 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats179, align 8, !dbg !17347
  %stat_tx_dropped180 = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %139, i32 0, i32 6, !dbg !17347
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_dropped180, i64* %stat_tx_dropped180) #10, !dbg !17347, !srcloc !17350
  br label %do.end182, !dbg !17346

do.end182:                                        ; preds = %do.body177
  br label %do.end184, !dbg !17339

do.end184:                                        ; preds = %do.end182
  %140 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17351
  %swstats_tx_syncp185 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %140, i32 0, i32 68, !dbg !17352
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp185) #13, !dbg !17353
  store i32 0, i32* %ret, align 4, !dbg !17354
  br label %dma_error, !dbg !17355

if.end186:                                        ; preds = %cond.end129
  %141 = load i32, i32* %bcnt, align 4, !dbg !17356
  %142 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17357
  %put_tx_ctx187 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %142, i32 0, i32 57, !dbg !17358
  %143 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx187, align 8, !dbg !17358
  %dma_len188 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %143, i32 0, i32 2, !dbg !17359
  %bf.load189 = load i32, i32* %dma_len188, align 8, !dbg !17360
  %bf.value190 = and i32 %141, 2147483647, !dbg !17360
  %bf.clear191 = and i32 %bf.load189, -2147483648, !dbg !17360
  %bf.set192 = or i32 %bf.clear191, %bf.value190, !dbg !17360
  store i32 %bf.set192, i32* %dma_len188, align 8, !dbg !17360
  %144 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17361
  %put_tx_ctx193 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %144, i32 0, i32 57, !dbg !17362
  %145 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx193, align 8, !dbg !17362
  %dma_single194 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %145, i32 0, i32 2, !dbg !17363
  %bf.load195 = load i32, i32* %dma_single194, align 8, !dbg !17364
  %bf.clear196 = and i32 %bf.load195, 2147483647, !dbg !17364
  store i32 %bf.clear196, i32* %dma_single194, align 8, !dbg !17364
  %146 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17365
  %put_tx_ctx197 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %146, i32 0, i32 57, !dbg !17365
  %147 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx197, align 8, !dbg !17365
  %dma198 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %147, i32 0, i32 1, !dbg !17365
  %148 = load i64, i64* %dma198, align 8, !dbg !17365
  %conv199 = trunc i64 %148 to i32, !dbg !17365
  %149 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17366
  %buf200 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %149, i32 0, i32 0, !dbg !17367
  store i32 %conv199, i32* %buf200, align 4, !dbg !17368
  %150 = load i32, i32* %bcnt, align 4, !dbg !17369
  %sub201 = sub i32 %150, 1, !dbg !17369
  %151 = load i32, i32* %tx_flags, align 4, !dbg !17369
  %or202 = or i32 %sub201, %151, !dbg !17369
  %152 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17370
  %flaglen203 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %152, i32 0, i32 1, !dbg !17371
  store i32 %or202, i32* %flaglen203, align 4, !dbg !17372
  %153 = load i32, i32* %bcnt, align 4, !dbg !17373
  %154 = load i32, i32* %offset, align 4, !dbg !17374
  %add204 = add i32 %154, %153, !dbg !17374
  store i32 %add204, i32* %offset, align 4, !dbg !17374
  %155 = load i32, i32* %bcnt, align 4, !dbg !17375
  %156 = load i32, i32* %frag_size118, align 4, !dbg !17376
  %sub205 = sub i32 %156, %155, !dbg !17376
  store i32 %sub205, i32* %frag_size118, align 4, !dbg !17376
  %157 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17377
  %incdec.ptr206 = getelementptr %struct.ring_desc, %struct.ring_desc* %157, i32 1, !dbg !17377
  store %struct.ring_desc* %incdec.ptr206, %struct.ring_desc** %put_tx, align 8, !dbg !17377
  %158 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17377
  %last_tx207 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %158, i32 0, i32 55, !dbg !17377
  %orig208 = bitcast %union.ring_type* %last_tx207 to %struct.ring_desc**, !dbg !17377
  %159 = load %struct.ring_desc*, %struct.ring_desc** %orig208, align 8, !dbg !17377
  %cmp209 = icmp eq %struct.ring_desc* %157, %159, !dbg !17377
  %lnot211 = xor i1 %cmp209, true, !dbg !17377
  %lnot213 = xor i1 %lnot211, true, !dbg !17377
  %lnot.ext214 = zext i1 %lnot213 to i32, !dbg !17377
  %conv215 = sext i32 %lnot.ext214 to i64, !dbg !17377
  %tobool216 = icmp ne i64 %conv215, 0, !dbg !17377
  br i1 %tobool216, label %if.then217, label %if.end220, !dbg !17379

if.then217:                                       ; preds = %if.end186
  %160 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17380
  %tx_ring218 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %160, i32 0, i32 60, !dbg !17381
  %orig219 = bitcast %union.ring_type* %tx_ring218 to %struct.ring_desc**, !dbg !17382
  %161 = load %struct.ring_desc*, %struct.ring_desc** %orig219, align 8, !dbg !17382
  store %struct.ring_desc* %161, %struct.ring_desc** %put_tx, align 8, !dbg !17383
  br label %if.end220, !dbg !17384

if.end220:                                        ; preds = %if.then217, %if.end186
  %162 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17385
  %put_tx_ctx221 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %162, i32 0, i32 57, !dbg !17385
  %163 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx221, align 8, !dbg !17385
  %incdec.ptr222 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %163, i32 1, !dbg !17385
  store %struct.nv_skb_map* %incdec.ptr222, %struct.nv_skb_map** %put_tx_ctx221, align 8, !dbg !17385
  %164 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17385
  %last_tx_ctx223 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %164, i32 0, i32 58, !dbg !17385
  %165 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx223, align 8, !dbg !17385
  %cmp224 = icmp eq %struct.nv_skb_map* %163, %165, !dbg !17385
  %lnot226 = xor i1 %cmp224, true, !dbg !17385
  %lnot228 = xor i1 %lnot226, true, !dbg !17385
  %lnot.ext229 = zext i1 %lnot228 to i32, !dbg !17385
  %conv230 = sext i32 %lnot.ext229 to i64, !dbg !17385
  %tobool231 = icmp ne i64 %conv230, 0, !dbg !17385
  br i1 %tobool231, label %if.then232, label %if.end235, !dbg !17387

if.then232:                                       ; preds = %if.end220
  %166 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17388
  %tx_skb233 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %166, i32 0, i32 59, !dbg !17389
  %167 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb233, align 8, !dbg !17389
  %168 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17390
  %put_tx_ctx234 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %168, i32 0, i32 57, !dbg !17391
  store %struct.nv_skb_map* %167, %struct.nv_skb_map** %put_tx_ctx234, align 8, !dbg !17392
  br label %if.end235, !dbg !17390

if.end235:                                        ; preds = %if.then232, %if.end220
  br label %do.cond236, !dbg !17393

do.cond236:                                       ; preds = %if.end235
  %169 = load i32, i32* %frag_size118, align 4, !dbg !17394
  %tobool237 = icmp ne i32 %169, 0, !dbg !17393
  br i1 %tobool237, label %do.body120, label %do.end238, !dbg !17393, !llvm.loop !17395

do.end238:                                        ; preds = %do.cond236
  br label %for.inc239, !dbg !17397

for.inc239:                                       ; preds = %do.end238
  %170 = load i32, i32* %i, align 4, !dbg !17398
  %inc240 = add i32 %170, 1, !dbg !17398
  store i32 %inc240, i32* %i, align 4, !dbg !17398
  br label %for.cond110, !dbg !17399, !llvm.loop !17400

for.end241:                                       ; preds = %for.cond110
  %171 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17402
  %172 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17402
  %tx_ring242 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %172, i32 0, i32 60, !dbg !17402
  %orig243 = bitcast %union.ring_type* %tx_ring242 to %struct.ring_desc**, !dbg !17402
  %173 = load %struct.ring_desc*, %struct.ring_desc** %orig243, align 8, !dbg !17402
  %cmp244 = icmp eq %struct.ring_desc* %171, %173, !dbg !17402
  %lnot246 = xor i1 %cmp244, true, !dbg !17402
  %lnot248 = xor i1 %lnot246, true, !dbg !17402
  %lnot.ext249 = zext i1 %lnot248 to i32, !dbg !17402
  %conv250 = sext i32 %lnot.ext249 to i64, !dbg !17402
  %tobool251 = icmp ne i64 %conv250, 0, !dbg !17402
  br i1 %tobool251, label %if.then252, label %if.else, !dbg !17404

if.then252:                                       ; preds = %for.end241
  %174 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17405
  %last_tx253 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %174, i32 0, i32 55, !dbg !17406
  %orig254 = bitcast %union.ring_type* %last_tx253 to %struct.ring_desc**, !dbg !17407
  %175 = load %struct.ring_desc*, %struct.ring_desc** %orig254, align 8, !dbg !17407
  store %struct.ring_desc* %175, %struct.ring_desc** %prev_tx, align 8, !dbg !17408
  br label %if.end256, !dbg !17409

if.else:                                          ; preds = %for.end241
  %176 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17410
  %add.ptr255 = getelementptr %struct.ring_desc, %struct.ring_desc* %176, i64 -1, !dbg !17411
  store %struct.ring_desc* %add.ptr255, %struct.ring_desc** %prev_tx, align 8, !dbg !17412
  br label %if.end256

if.end256:                                        ; preds = %if.else, %if.then252
  %177 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17413
  %put_tx_ctx257 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %177, i32 0, i32 57, !dbg !17413
  %178 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx257, align 8, !dbg !17413
  %179 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17413
  %tx_skb258 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %179, i32 0, i32 59, !dbg !17413
  %180 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb258, align 8, !dbg !17413
  %cmp259 = icmp eq %struct.nv_skb_map* %178, %180, !dbg !17413
  %lnot261 = xor i1 %cmp259, true, !dbg !17413
  %lnot263 = xor i1 %lnot261, true, !dbg !17413
  %lnot.ext264 = zext i1 %lnot263 to i32, !dbg !17413
  %conv265 = sext i32 %lnot.ext264 to i64, !dbg !17413
  %tobool266 = icmp ne i64 %conv265, 0, !dbg !17413
  br i1 %tobool266, label %if.then267, label %if.else269, !dbg !17415

if.then267:                                       ; preds = %if.end256
  %181 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17416
  %last_tx_ctx268 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %181, i32 0, i32 58, !dbg !17417
  %182 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx268, align 8, !dbg !17417
  store %struct.nv_skb_map* %182, %struct.nv_skb_map** %prev_tx_ctx, align 8, !dbg !17418
  br label %if.end272, !dbg !17419

if.else269:                                       ; preds = %if.end256
  %183 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17420
  %put_tx_ctx270 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %183, i32 0, i32 57, !dbg !17421
  %184 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx270, align 8, !dbg !17421
  %add.ptr271 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %184, i64 -1, !dbg !17422
  store %struct.nv_skb_map* %add.ptr271, %struct.nv_skb_map** %prev_tx_ctx, align 8, !dbg !17423
  br label %if.end272

if.end272:                                        ; preds = %if.else269, %if.then267
  %185 = load i32, i32* %tx_flags_extra, align 4, !dbg !17424
  %186 = load %struct.ring_desc*, %struct.ring_desc** %prev_tx, align 8, !dbg !17425
  %flaglen273 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %186, i32 0, i32 1, !dbg !17426
  %187 = load i32, i32* %flaglen273, align 4, !dbg !17427
  %or274 = or i32 %187, %185, !dbg !17427
  store i32 %or274, i32* %flaglen273, align 4, !dbg !17427
  %188 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17428
  %189 = load %struct.nv_skb_map*, %struct.nv_skb_map** %prev_tx_ctx, align 8, !dbg !17429
  %skb275 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %189, i32 0, i32 0, !dbg !17430
  store %struct.sk_buff* %188, %struct.sk_buff** %skb275, align 8, !dbg !17431
  %190 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17432
  %call276 = call zeroext i1 @skb_is_gso(%struct.sk_buff* %190) #13, !dbg !17434
  br i1 %call276, label %if.then277, label %if.else281, !dbg !17435

if.then277:                                       ; preds = %if.end272
  %191 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17436
  %call278 = call i8* @skb_end_pointer(%struct.sk_buff* %191) #13, !dbg !17436
  %192 = bitcast i8* %call278 to %struct.skb_shared_info*, !dbg !17437
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %192, i32 0, i32 4, !dbg !17437
  %193 = load i16, i16* %gso_size, align 4, !dbg !17437
  %conv279 = zext i16 %193 to i32, !dbg !17436
  %shl = shl i32 %conv279, 14, !dbg !17438
  %or280 = or i32 268435456, %shl, !dbg !17439
  store i32 %or280, i32* %tx_flags_extra, align 4, !dbg !17440
  br label %if.end288, !dbg !17441

if.else281:                                       ; preds = %if.end272
  %194 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17442
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %194, i32 0, i32 14, !dbg !17443
  %bf.load282 = load i16, i16* %ip_summed, align 8, !dbg !17443
  %bf.lshr = lshr i16 %bf.load282, 5, !dbg !17443
  %bf.clear283 = and i16 %bf.lshr, 3, !dbg !17443
  %bf.cast = trunc i16 %bf.clear283 to i8, !dbg !17443
  %conv284 = zext i8 %bf.cast to i32, !dbg !17442
  %cmp285 = icmp eq i32 %conv284, 3, !dbg !17444
  %195 = zext i1 %cmp285 to i64, !dbg !17442
  %cond287 = select i1 %cmp285, i32 201326592, i32 0, !dbg !17442
  store i32 %cond287, i32* %tx_flags_extra, align 4, !dbg !17445
  br label %if.end288

if.end288:                                        ; preds = %if.else281, %if.then277
  br label %do.body289, !dbg !17446

do.body289:                                       ; preds = %if.end288
  br label %do.body290, !dbg !17447

do.body290:                                       ; preds = %do.body289
  call void @llvm.dbg.declare(metadata i64* %__dummy291, metadata !17448, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.declare(metadata i64* %__dummy2292, metadata !17451, metadata !DIExpression()), !dbg !17450
  %cmp293 = icmp eq i64* %__dummy291, %__dummy2292, !dbg !17450
  %conv294 = zext i1 %cmp293 to i32, !dbg !17450
  store i32 1, i32* %tmp295, align 4, !dbg !17450
  %196 = load i32, i32* %tmp295, align 4, !dbg !17450
  br label %do.body296, !dbg !17452

do.body296:                                       ; preds = %do.body290
  br label %do.body297, !dbg !17453

do.body297:                                       ; preds = %do.body296
  br label %do.body298, !dbg !17454

do.body298:                                       ; preds = %do.body297
  call void @llvm.dbg.declare(metadata i64* %__dummy299, metadata !17456, metadata !DIExpression()), !dbg !17459
  call void @llvm.dbg.declare(metadata i64* %__dummy2300, metadata !17460, metadata !DIExpression()), !dbg !17459
  %cmp301 = icmp eq i64* %__dummy299, %__dummy2300, !dbg !17459
  %conv302 = zext i1 %cmp301 to i32, !dbg !17459
  store i32 1, i32* %tmp303, align 4, !dbg !17459
  %197 = load i32, i32* %tmp303, align 4, !dbg !17459
  %call304 = call i64 @arch_local_irq_save() #13, !dbg !17461
  store i64 %call304, i64* %flags, align 8, !dbg !17461
  br label %do.end306, !dbg !17461

do.end306:                                        ; preds = %do.body298
  br label %do.end308, !dbg !17454

do.end308:                                        ; preds = %do.end306
  br label %do.body309, !dbg !17453

do.body309:                                       ; preds = %do.end308
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17462, !srcloc !17463
  br label %do.body310, !dbg !17462

do.body310:                                       ; preds = %do.body309
  %198 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17464
  %lock311 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %198, i32 0, i32 0, !dbg !17464
  store %struct.spinlock* %lock311, %struct.spinlock** %lock.addr.i345, align 8
  %199 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i345, align 8, !dbg !17465
  %200 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %199, i32 0, i32 0, !dbg !17466
  %rlock.i346 = bitcast %union.anon.2* %200 to %struct.raw_spinlock*, !dbg !17466
  br label %do.end314, !dbg !17464

do.end314:                                        ; preds = %do.body310
  br label %do.end316, !dbg !17462

do.end316:                                        ; preds = %do.end314
  br label %do.end318, !dbg !17453

do.end318:                                        ; preds = %do.end316
  br label %do.end320, !dbg !17452

do.end320:                                        ; preds = %do.end318
  br label %do.end322, !dbg !17447

do.end322:                                        ; preds = %do.end320
  %201 = load i32, i32* %tx_flags, align 4, !dbg !17467
  %202 = load i32, i32* %tx_flags_extra, align 4, !dbg !17467
  %or323 = or i32 %201, %202, !dbg !17467
  %203 = load %struct.ring_desc*, %struct.ring_desc** %start_tx, align 8, !dbg !17468
  %flaglen324 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %203, i32 0, i32 1, !dbg !17469
  %204 = load i32, i32* %flaglen324, align 4, !dbg !17470
  %or325 = or i32 %204, %or323, !dbg !17470
  store i32 %or325, i32* %flaglen324, align 4, !dbg !17470
  %205 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17471
  %dev326 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %205, i32 0, i32 1, !dbg !17472
  %206 = load %struct.net_device*, %struct.net_device** %dev326, align 8, !dbg !17472
  %207 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17473
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %207, i32 0, i32 5, !dbg !17474
  %208 = load i32, i32* %len, align 8, !dbg !17474
  call void @netdev_sent_queue(%struct.net_device* %206, i32 %208) #13, !dbg !17475
  %209 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17476
  call void @skb_tx_timestamp(%struct.sk_buff* %209) #13, !dbg !17477
  %210 = load %struct.ring_desc*, %struct.ring_desc** %put_tx, align 8, !dbg !17478
  %211 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17479
  %put_tx327 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %211, i32 0, i32 54, !dbg !17480
  %orig328 = bitcast %union.ring_type* %put_tx327 to %struct.ring_desc**, !dbg !17481
  store %struct.ring_desc* %210, %struct.ring_desc** %orig328, align 8, !dbg !17482
  %212 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17483
  %lock329 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %212, i32 0, i32 0, !dbg !17484
  %213 = load i64, i64* %flags, align 8, !dbg !17485
  store %struct.spinlock* %lock329, %struct.spinlock** %lock.addr.i347, align 8
  store i64 %213, i64* %flags.addr.i348, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !17486
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !17486
  store i32 1, i32* %tmp.i349, align 4, !dbg !17486
  %214 = load i32, i32* %tmp.i349, align 4, !dbg !17486
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !17487
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !17487
  store i32 1, i32* %tmp8.i350, align 4, !dbg !17487
  %215 = load i32, i32* %tmp8.i350, align 4, !dbg !17487
  %216 = load i64, i64* %flags.addr.i348, align 8, !dbg !17488
  call void @arch_local_irq_restore(i64 %216) #15, !dbg !17488
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17489, !srcloc !10037
  %217 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i347, align 8, !dbg !17490
  %218 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %217, i32 0, i32 0, !dbg !17490
  %rlock.i351 = bitcast %union.anon.2* %218 to %struct.raw_spinlock*, !dbg !17490
  br label %txkick, !dbg !17491

txkick:                                           ; preds = %do.end322, %if.then
  call void @llvm.dbg.label(metadata !17492), !dbg !17493
  %219 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17494
  %call330 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %219) #13, !dbg !17496
  br i1 %call330, label %if.then333, label %lor.lhs.false, !dbg !17497

lor.lhs.false:                                    ; preds = %txkick
  %call332 = call zeroext i1 @netdev_xmit_more() #13, !dbg !17498
  br i1 %call332, label %if.end337, label %if.then333, !dbg !17499

if.then333:                                       ; preds = %lor.lhs.false, %txkick
  call void @llvm.dbg.declare(metadata i32* %txrxctl_kick, metadata !17500, metadata !DIExpression()), !dbg !17502
  br label %dma_error, !dbg !17503

dma_error:                                        ; preds = %if.then333, %do.end184, %do.end69
  call void @llvm.dbg.label(metadata !17504), !dbg !17505
  %220 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17506
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %220, i32 0, i32 25, !dbg !17507
  %221 = load i32, i32* %txrxctl_bits, align 4, !dbg !17507
  %or334 = or i32 1, %221, !dbg !17508
  store i32 %or334, i32* %txrxctl_kick, align 4, !dbg !17509
  %222 = load i32, i32* %txrxctl_kick, align 4, !dbg !17510
  %223 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17511
  %call335 = call i8* @get_hwbase(%struct.net_device* %223) #13, !dbg !17512
  %add.ptr336 = getelementptr i8, i8* %call335, i64 324, !dbg !17513
  call void @writel(i32 %222, i8* %add.ptr336) #13, !dbg !17514
  br label %if.end337, !dbg !17515

if.end337:                                        ; preds = %dma_error, %lor.lhs.false
  %224 = load i32, i32* %ret, align 4, !dbg !17516
  ret i32 %224, !dbg !17517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_set_multicast(%struct.net_device* %dev) #2 !dbg !17518 {
entry:
  %lock.addr.i77 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i77, metadata !8241, metadata !DIExpression()), !dbg !17519
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !17521
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %addr = alloca [2 x i32], align 4
  %mask = alloca [2 x i32], align 4
  %pff = alloca i32, align 4
  %alwaysOff = alloca [2 x i32], align 4
  %alwaysOn = alloca [2 x i32], align 4
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %hw_addr = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %__mptr40 = alloca i8*, align 8
  %tmp45 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17523, metadata !DIExpression()), !dbg !17524
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !17525, metadata !DIExpression()), !dbg !17526
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17527
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !17528
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !17528
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !17526
  call void @llvm.dbg.declare(metadata i8** %base, metadata !17529, metadata !DIExpression()), !dbg !17530
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17531
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !17532
  store i8* %call1, i8** %base, align 8, !dbg !17530
  call void @llvm.dbg.declare(metadata [2 x i32]* %addr, metadata !17533, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.declare(metadata [2 x i32]* %mask, metadata !17535, metadata !DIExpression()), !dbg !17536
  call void @llvm.dbg.declare(metadata i32* %pff, metadata !17537, metadata !DIExpression()), !dbg !17538
  %3 = load i8*, i8** %base, align 8, !dbg !17539
  %add.ptr = getelementptr i8, i8* %3, i64 140, !dbg !17540
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !17541
  %and = and i32 %call2, 8, !dbg !17542
  store i32 %and, i32* %pff, align 4, !dbg !17538
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %addr, i64 0, i64 0, !dbg !17543
  %4 = bitcast i32* %arraydecay to i8*, !dbg !17543
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false), !dbg !17543
  %arraydecay3 = getelementptr inbounds [2 x i32], [2 x i32]* %mask, i64 0, i64 0, !dbg !17544
  %5 = bitcast i32* %arraydecay3 to i8*, !dbg !17544
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 8, i1 false), !dbg !17544
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17545
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 36, !dbg !17547
  %7 = load i32, i32* %flags, align 8, !dbg !17547
  %and4 = and i32 %7, 256, !dbg !17548
  %tobool = icmp ne i32 %and4, 0, !dbg !17548
  br i1 %tobool, label %if.then, label %if.else, !dbg !17549

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %pff, align 4, !dbg !17550
  %or = or i32 %8, 128, !dbg !17550
  store i32 %or, i32* %pff, align 4, !dbg !17550
  br label %if.end63, !dbg !17552

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %pff, align 4, !dbg !17553
  %or5 = or i32 %9, 32, !dbg !17553
  store i32 %or5, i32* %pff, align 4, !dbg !17553
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17555
  %flags6 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 36, !dbg !17557
  %11 = load i32, i32* %flags6, align 8, !dbg !17557
  %and7 = and i32 %11, 512, !dbg !17558
  %tobool8 = icmp ne i32 %and7, 0, !dbg !17558
  br i1 %tobool8, label %if.then9, label %lor.lhs.false, !dbg !17559

lor.lhs.false:                                    ; preds = %if.else
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17560
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 63, !dbg !17560
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !17560
  %13 = load i32, i32* %count, align 8, !dbg !17560
  %cmp = icmp eq i32 %13, 0, !dbg !17560
  br i1 %cmp, label %if.else59, label %if.then9, !dbg !17561

if.then9:                                         ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata [2 x i32]* %alwaysOff, metadata !17562, metadata !DIExpression()), !dbg !17564
  call void @llvm.dbg.declare(metadata [2 x i32]* %alwaysOn, metadata !17565, metadata !DIExpression()), !dbg !17566
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 1, !dbg !17567
  store i32 -1, i32* %arrayidx, align 4, !dbg !17568
  %arrayidx10 = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 0, !dbg !17569
  store i32 -1, i32* %arrayidx10, align 4, !dbg !17570
  %arrayidx11 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 1, !dbg !17571
  store i32 -1, i32* %arrayidx11, align 4, !dbg !17572
  %arrayidx12 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 0, !dbg !17573
  store i32 -1, i32* %arrayidx12, align 4, !dbg !17574
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17575
  %flags13 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 36, !dbg !17577
  %15 = load i32, i32* %flags13, align 8, !dbg !17577
  %and14 = and i32 %15, 512, !dbg !17578
  %tobool15 = icmp ne i32 %and14, 0, !dbg !17578
  br i1 %tobool15, label %if.then16, label %if.else21, !dbg !17579

if.then16:                                        ; preds = %if.then9
  %arrayidx17 = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 1, !dbg !17580
  store i32 0, i32* %arrayidx17, align 4, !dbg !17582
  %arrayidx18 = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 0, !dbg !17583
  store i32 0, i32* %arrayidx18, align 4, !dbg !17584
  %arrayidx19 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 1, !dbg !17585
  store i32 0, i32* %arrayidx19, align 4, !dbg !17586
  %arrayidx20 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 0, !dbg !17587
  store i32 0, i32* %arrayidx20, align 4, !dbg !17588
  br label %if.end, !dbg !17589

if.else21:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !17590, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17593, metadata !DIExpression()), !dbg !17596
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17596
  %mc22 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 63, !dbg !17596
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc22, i32 0, i32 0, !dbg !17596
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !17596
  %17 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !17596
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !17596
  store i8* %18, i8** %__mptr, align 8, !dbg !17596
  br label %do.body, !dbg !17596

do.body:                                          ; preds = %if.else21
  br label %do.end, !dbg !17597

do.end:                                           ; preds = %do.body
  %19 = load i8*, i8** %__mptr, align 8, !dbg !17596
  %add.ptr23 = getelementptr i8, i8* %19, i64 0, !dbg !17596
  %20 = bitcast i8* %add.ptr23 to %struct.netdev_hw_addr*, !dbg !17596
  store %struct.netdev_hw_addr* %20, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17597
  %21 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17596
  store %struct.netdev_hw_addr* %21, %struct.netdev_hw_addr** %ha, align 8, !dbg !17599
  br label %for.cond, !dbg !17599

for.cond:                                         ; preds = %do.end44, %do.end
  %22 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17600
  %list24 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %22, i32 0, i32 0, !dbg !17600
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17600
  %mc25 = getelementptr inbounds %struct.net_device, %struct.net_device* %23, i32 0, i32 63, !dbg !17600
  %list26 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc25, i32 0, i32 0, !dbg !17600
  %cmp27 = icmp eq %struct.list_head* %list24, %list26, !dbg !17600
  %lnot = xor i1 %cmp27, true, !dbg !17600
  br i1 %lnot, label %for.body, label %for.end, !dbg !17599

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %hw_addr, metadata !17602, metadata !DIExpression()), !dbg !17604
  %24 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17605
  %addr28 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %24, i32 0, i32 1, !dbg !17606
  %arraydecay29 = getelementptr inbounds [32 x i8], [32 x i8]* %addr28, i64 0, i64 0, !dbg !17605
  store i8* %arraydecay29, i8** %hw_addr, align 8, !dbg !17604
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17607, metadata !DIExpression()), !dbg !17608
  call void @llvm.dbg.declare(metadata i32* %b, metadata !17609, metadata !DIExpression()), !dbg !17610
  %25 = load i8*, i8** %hw_addr, align 8, !dbg !17611
  %26 = bitcast i8* %25 to i32*, !dbg !17611
  %27 = load i32, i32* %26, align 4, !dbg !17611
  store i32 %27, i32* %a, align 4, !dbg !17612
  %28 = load i8*, i8** %hw_addr, align 8, !dbg !17613
  %arrayidx30 = getelementptr i8, i8* %28, i64 4, !dbg !17613
  %29 = bitcast i8* %arrayidx30 to i16*, !dbg !17613
  %30 = load i16, i16* %29, align 2, !dbg !17613
  %conv = zext i16 %30 to i32, !dbg !17613
  store i32 %conv, i32* %b, align 4, !dbg !17614
  %31 = load i32, i32* %a, align 4, !dbg !17615
  %arrayidx31 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 0, !dbg !17616
  %32 = load i32, i32* %arrayidx31, align 4, !dbg !17617
  %and32 = and i32 %32, %31, !dbg !17617
  store i32 %and32, i32* %arrayidx31, align 4, !dbg !17617
  %33 = load i32, i32* %a, align 4, !dbg !17618
  %neg = xor i32 %33, -1, !dbg !17619
  %arrayidx33 = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 0, !dbg !17620
  %34 = load i32, i32* %arrayidx33, align 4, !dbg !17621
  %and34 = and i32 %34, %neg, !dbg !17621
  store i32 %and34, i32* %arrayidx33, align 4, !dbg !17621
  %35 = load i32, i32* %b, align 4, !dbg !17622
  %arrayidx35 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 1, !dbg !17623
  %36 = load i32, i32* %arrayidx35, align 4, !dbg !17624
  %and36 = and i32 %36, %35, !dbg !17624
  store i32 %and36, i32* %arrayidx35, align 4, !dbg !17624
  %37 = load i32, i32* %b, align 4, !dbg !17625
  %neg37 = xor i32 %37, -1, !dbg !17626
  %arrayidx38 = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 1, !dbg !17627
  %38 = load i32, i32* %arrayidx38, align 4, !dbg !17628
  %and39 = and i32 %38, %neg37, !dbg !17628
  store i32 %and39, i32* %arrayidx38, align 4, !dbg !17628
  br label %for.inc, !dbg !17629

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr40, metadata !17630, metadata !DIExpression()), !dbg !17632
  %39 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17632
  %list41 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %39, i32 0, i32 0, !dbg !17632
  %next42 = getelementptr inbounds %struct.list_head, %struct.list_head* %list41, i32 0, i32 0, !dbg !17632
  %40 = load %struct.list_head*, %struct.list_head** %next42, align 8, !dbg !17632
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !17632
  store i8* %41, i8** %__mptr40, align 8, !dbg !17632
  br label %do.body43, !dbg !17632

do.body43:                                        ; preds = %for.inc
  br label %do.end44, !dbg !17633

do.end44:                                         ; preds = %do.body43
  %42 = load i8*, i8** %__mptr40, align 8, !dbg !17632
  %add.ptr46 = getelementptr i8, i8* %42, i64 0, !dbg !17632
  %43 = bitcast i8* %add.ptr46 to %struct.netdev_hw_addr*, !dbg !17632
  store %struct.netdev_hw_addr* %43, %struct.netdev_hw_addr** %tmp45, align 8, !dbg !17633
  %44 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp45, align 8, !dbg !17632
  store %struct.netdev_hw_addr* %44, %struct.netdev_hw_addr** %ha, align 8, !dbg !17600
  br label %for.cond, !dbg !17600, !llvm.loop !17635

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then16
  %arrayidx47 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 0, !dbg !17637
  %45 = load i32, i32* %arrayidx47, align 4, !dbg !17637
  %arrayidx48 = getelementptr [2 x i32], [2 x i32]* %addr, i64 0, i64 0, !dbg !17638
  store i32 %45, i32* %arrayidx48, align 4, !dbg !17639
  %arrayidx49 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 1, !dbg !17640
  %46 = load i32, i32* %arrayidx49, align 4, !dbg !17640
  %arrayidx50 = getelementptr [2 x i32], [2 x i32]* %addr, i64 0, i64 1, !dbg !17641
  store i32 %46, i32* %arrayidx50, align 4, !dbg !17642
  %arrayidx51 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 0, !dbg !17643
  %47 = load i32, i32* %arrayidx51, align 4, !dbg !17643
  %arrayidx52 = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 0, !dbg !17644
  %48 = load i32, i32* %arrayidx52, align 4, !dbg !17644
  %or53 = or i32 %47, %48, !dbg !17645
  %arrayidx54 = getelementptr [2 x i32], [2 x i32]* %mask, i64 0, i64 0, !dbg !17646
  store i32 %or53, i32* %arrayidx54, align 4, !dbg !17647
  %arrayidx55 = getelementptr [2 x i32], [2 x i32]* %alwaysOn, i64 0, i64 1, !dbg !17648
  %49 = load i32, i32* %arrayidx55, align 4, !dbg !17648
  %arrayidx56 = getelementptr [2 x i32], [2 x i32]* %alwaysOff, i64 0, i64 1, !dbg !17649
  %50 = load i32, i32* %arrayidx56, align 4, !dbg !17649
  %or57 = or i32 %49, %50, !dbg !17650
  %arrayidx58 = getelementptr [2 x i32], [2 x i32]* %mask, i64 0, i64 1, !dbg !17651
  store i32 %or57, i32* %arrayidx58, align 4, !dbg !17652
  br label %if.end62, !dbg !17653

if.else59:                                        ; preds = %lor.lhs.false
  %arrayidx60 = getelementptr [2 x i32], [2 x i32]* %mask, i64 0, i64 0, !dbg !17654
  store i32 -1, i32* %arrayidx60, align 4, !dbg !17656
  %arrayidx61 = getelementptr [2 x i32], [2 x i32]* %mask, i64 0, i64 1, !dbg !17657
  store i32 65535, i32* %arrayidx61, align 4, !dbg !17658
  br label %if.end62

if.end62:                                         ; preds = %if.else59, %if.end
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then
  %arrayidx64 = getelementptr [2 x i32], [2 x i32]* %addr, i64 0, i64 0, !dbg !17659
  %51 = load i32, i32* %arrayidx64, align 4, !dbg !17660
  %or65 = or i32 %51, 1, !dbg !17660
  store i32 %or65, i32* %arrayidx64, align 4, !dbg !17660
  %52 = load i32, i32* %pff, align 4, !dbg !17661
  %or66 = or i32 %52, 8323072, !dbg !17661
  store i32 %or66, i32* %pff, align 4, !dbg !17661
  %53 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17662
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %53, i32 0, i32 0, !dbg !17663
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !17664
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17665, !srcloc !9174
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17666
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !17666
  %rlock.i = bitcast %union.anon.2* %55 to %struct.raw_spinlock*, !dbg !17666
  %56 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17667
  call void @nv_stop_rx(%struct.net_device* %56) #13, !dbg !17668
  %arrayidx67 = getelementptr [2 x i32], [2 x i32]* %addr, i64 0, i64 0, !dbg !17669
  %57 = load i32, i32* %arrayidx67, align 4, !dbg !17669
  %58 = load i8*, i8** %base, align 8, !dbg !17670
  %add.ptr68 = getelementptr i8, i8* %58, i64 176, !dbg !17671
  call void @writel(i32 %57, i8* %add.ptr68) #13, !dbg !17672
  %arrayidx69 = getelementptr [2 x i32], [2 x i32]* %addr, i64 0, i64 1, !dbg !17673
  %59 = load i32, i32* %arrayidx69, align 4, !dbg !17673
  %60 = load i8*, i8** %base, align 8, !dbg !17674
  %add.ptr70 = getelementptr i8, i8* %60, i64 180, !dbg !17675
  call void @writel(i32 %59, i8* %add.ptr70) #13, !dbg !17676
  %arrayidx71 = getelementptr [2 x i32], [2 x i32]* %mask, i64 0, i64 0, !dbg !17677
  %61 = load i32, i32* %arrayidx71, align 4, !dbg !17677
  %62 = load i8*, i8** %base, align 8, !dbg !17678
  %add.ptr72 = getelementptr i8, i8* %62, i64 184, !dbg !17679
  call void @writel(i32 %61, i8* %add.ptr72) #13, !dbg !17680
  %arrayidx73 = getelementptr [2 x i32], [2 x i32]* %mask, i64 0, i64 1, !dbg !17681
  %63 = load i32, i32* %arrayidx73, align 4, !dbg !17681
  %64 = load i8*, i8** %base, align 8, !dbg !17682
  %add.ptr74 = getelementptr i8, i8* %64, i64 188, !dbg !17683
  call void @writel(i32 %63, i8* %add.ptr74) #13, !dbg !17684
  %65 = load i32, i32* %pff, align 4, !dbg !17685
  %66 = load i8*, i8** %base, align 8, !dbg !17686
  %add.ptr75 = getelementptr i8, i8* %66, i64 140, !dbg !17687
  call void @writel(i32 %65, i8* %add.ptr75) #13, !dbg !17688
  %67 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17689
  call void @nv_start_rx(%struct.net_device* %67) #13, !dbg !17690
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17691
  %lock76 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 0, !dbg !17692
  store %struct.spinlock* %lock76, %struct.spinlock** %lock.addr.i77, align 8
  call void @arch_local_irq_enable() #15, !dbg !17693
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17694, !srcloc !9188
  %69 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i77, align 8, !dbg !17695
  %70 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %69, i32 0, i32 0, !dbg !17695
  %rlock.i78 = bitcast %union.anon.2* %70 to %struct.raw_spinlock*, !dbg !17695
  ret void, !dbg !17696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_set_mac_address(%struct.net_device* %dev, i8* %addr) #2 !dbg !17697 {
entry:
  %lock.addr.i8 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i8, metadata !8241, metadata !DIExpression()), !dbg !17698
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !17702
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %addr.addr = alloca i8*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %macaddr = alloca %struct.sockaddr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17704, metadata !DIExpression()), !dbg !17705
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17706, metadata !DIExpression()), !dbg !17707
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !17708, metadata !DIExpression()), !dbg !17709
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17710
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !17711
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !17711
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !17709
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %macaddr, metadata !17712, metadata !DIExpression()), !dbg !17713
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !17714
  %3 = bitcast i8* %2 to %struct.sockaddr*, !dbg !17715
  store %struct.sockaddr* %3, %struct.sockaddr** %macaddr, align 8, !dbg !17713
  %4 = load %struct.sockaddr*, %struct.sockaddr** %macaddr, align 8, !dbg !17716
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 1, !dbg !17718
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !17716
  %call1 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay) #13, !dbg !17719
  br i1 %call1, label %if.end, label %if.then, !dbg !17720

if.then:                                          ; preds = %entry
  store i32 -99, i32* %retval, align 4, !dbg !17721
  br label %return, !dbg !17721

if.end:                                           ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17722
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 74, !dbg !17723
  %6 = load i8*, i8** %dev_addr, align 8, !dbg !17723
  %7 = load %struct.sockaddr*, %struct.sockaddr** %macaddr, align 8, !dbg !17724
  %sa_data2 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 1, !dbg !17725
  %arraydecay3 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data2, i64 0, i64 0, !dbg !17726
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 2 %arraydecay3, i64 6, i1 false), !dbg !17726
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17727
  %call4 = call zeroext i1 @netif_running(%struct.net_device* %8) #13, !dbg !17728
  br i1 %call4, label %if.then5, label %if.else, !dbg !17729

if.then5:                                         ; preds = %if.end
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17730
  call void @netif_tx_lock_bh(%struct.net_device* %9) #13, !dbg !17731
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17732
  call void @netif_addr_lock(%struct.net_device* %10) #13, !dbg !17733
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17734
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 0, !dbg !17735
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !17736
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17737, !srcloc !9174
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17738
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !17738
  %rlock.i = bitcast %union.anon.2* %13 to %struct.raw_spinlock*, !dbg !17738
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17739
  call void @nv_stop_rx(%struct.net_device* %14) #13, !dbg !17740
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17741
  call void @nv_copy_mac_to_hw(%struct.net_device* %15) #13, !dbg !17742
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17743
  call void @nv_start_rx(%struct.net_device* %16) #13, !dbg !17744
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17745
  %lock6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 0, !dbg !17746
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i8, align 8
  call void @arch_local_irq_enable() #15, !dbg !17747
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17748, !srcloc !9188
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i8, align 8, !dbg !17749
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !17749
  %rlock.i9 = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !17749
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17750
  call void @netif_addr_unlock(%struct.net_device* %20) #13, !dbg !17751
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17752
  call void @netif_tx_unlock_bh(%struct.net_device* %21) #13, !dbg !17753
  br label %if.end7, !dbg !17754

if.else:                                          ; preds = %if.end
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17755
  call void @nv_copy_mac_to_hw(%struct.net_device* %22) #13, !dbg !17757
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  store i32 0, i32* %retval, align 4, !dbg !17758
  br label %return, !dbg !17758

return:                                           ; preds = %if.end7, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !17759
  ret i32 %23, !dbg !17759
}

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #2 !dbg !17760 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !9483, metadata !DIExpression()), !dbg !17761
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !17765
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %old_mtu = alloca i32, align 4
  %base = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17767, metadata !DIExpression()), !dbg !17768
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !17769, metadata !DIExpression()), !dbg !17770
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !17771, metadata !DIExpression()), !dbg !17772
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17773
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !17774
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !17774
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !17772
  call void @llvm.dbg.declare(metadata i32* %old_mtu, metadata !17775, metadata !DIExpression()), !dbg !17776
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17777
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 44, !dbg !17778
  %3 = load i32, i32* %mtu, align 8, !dbg !17778
  store i32 %3, i32* %old_mtu, align 4, !dbg !17779
  %4 = load i32, i32* %new_mtu.addr, align 4, !dbg !17780
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17781
  %mtu1 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 44, !dbg !17782
  store i32 %4, i32* %mtu1, align 8, !dbg !17783
  %6 = load i32, i32* %old_mtu, align 4, !dbg !17784
  %cmp = icmp sle i32 %6, 1500, !dbg !17786
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17787

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %new_mtu.addr, align 4, !dbg !17788
  %cmp2 = icmp sle i32 %7, 1500, !dbg !17789
  br i1 %cmp2, label %if.then, label %if.end, !dbg !17790

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17791
  br label %return, !dbg !17791

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17792
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %8) #13, !dbg !17793
  br i1 %call3, label %if.then4, label %if.end20, !dbg !17794

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %base, metadata !17795, metadata !DIExpression()), !dbg !17796
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17797
  %call5 = call i8* @get_hwbase(%struct.net_device* %9) #13, !dbg !17798
  store i8* %call5, i8** %base, align 8, !dbg !17796
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17799
  call void @nv_disable_irq(%struct.net_device* %10) #13, !dbg !17800
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17801
  call void @nv_napi_disable(%struct.net_device* %11) #13, !dbg !17802
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17803
  call void @netif_tx_lock_bh(%struct.net_device* %12) #13, !dbg !17804
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17805
  call void @netif_addr_lock(%struct.net_device* %13) #13, !dbg !17806
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17807
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 0, !dbg !17808
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17809, !srcloc !9601
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17810
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !17810
  %rlock.i = bitcast %union.anon.2* %16 to %struct.raw_spinlock*, !dbg !17810
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17811
  call void @nv_stop_rxtx(%struct.net_device* %17) #13, !dbg !17812
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17813
  call void @nv_txrx_reset(%struct.net_device* %18) #13, !dbg !17814
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17815
  call void @nv_drain_rxtx(%struct.net_device* %19) #13, !dbg !17816
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17817
  call void @set_bufsize(%struct.net_device* %20) #13, !dbg !17818
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17819
  %call6 = call i32 @nv_init_ring(%struct.net_device* %21) #13, !dbg !17821
  %tobool = icmp ne i32 %call6, 0, !dbg !17821
  br i1 %tobool, label %if.then7, label %if.end12, !dbg !17822

if.then7:                                         ; preds = %if.then4
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17823
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 5, !dbg !17826
  %23 = load i32, i32* %in_shutdown, align 8, !dbg !17826
  %tobool8 = icmp ne i32 %23, 0, !dbg !17823
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !17827

if.then9:                                         ; preds = %if.then7
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17828
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 44, !dbg !17829
  %25 = load volatile i64, i64* @jiffies, align 8, !dbg !17830
  %add = add i64 %25, 13, !dbg !17831
  %call10 = call i32 @mod_timer(%struct.timer_list* %oom_kick, i64 %add) #13, !dbg !17832
  br label %if.end11, !dbg !17832

if.end11:                                         ; preds = %if.then9, %if.then7
  br label %if.end12, !dbg !17833

if.end12:                                         ; preds = %if.end11, %if.then4
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17834
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 42, !dbg !17835
  %27 = load i32, i32* %rx_buf_sz, align 8, !dbg !17835
  %28 = load i8*, i8** %base, align 8, !dbg !17836
  %add.ptr = getelementptr i8, i8* %28, i64 144, !dbg !17837
  call void @writel(i32 %27, i8* %add.ptr) #13, !dbg !17838
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17839
  call void @setup_hw_rings(%struct.net_device* %29, i32 3) #13, !dbg !17840
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17841
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 48, !dbg !17842
  %31 = load i32, i32* %rx_ring_size, align 4, !dbg !17842
  %sub = sub i32 %31, 1, !dbg !17843
  %shl = shl i32 %sub, 16, !dbg !17844
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17845
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 62, !dbg !17846
  %33 = load i32, i32* %tx_ring_size, align 4, !dbg !17846
  %sub13 = sub i32 %33, 1, !dbg !17847
  %shl14 = shl i32 %sub13, 0, !dbg !17848
  %add15 = add i32 %shl, %shl14, !dbg !17849
  %34 = load i8*, i8** %base, align 8, !dbg !17850
  %add.ptr16 = getelementptr i8, i8* %34, i64 264, !dbg !17851
  call void @writel(i32 %add15, i8* %add.ptr16) #13, !dbg !17852
  %35 = load i8*, i8** %base, align 8, !dbg !17853
  call void @pci_push(i8* %35) #13, !dbg !17854
  %36 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17855
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %36, i32 0, i32 25, !dbg !17856
  %37 = load i32, i32* %txrxctl_bits, align 4, !dbg !17856
  %or = or i32 1, %37, !dbg !17857
  %38 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17858
  %call17 = call i8* @get_hwbase(%struct.net_device* %38) #13, !dbg !17859
  %add.ptr18 = getelementptr i8, i8* %call17, i64 324, !dbg !17860
  call void @writel(i32 %or, i8* %add.ptr18) #13, !dbg !17861
  %39 = load i8*, i8** %base, align 8, !dbg !17862
  call void @pci_push(i8* %39) #13, !dbg !17863
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17864
  call void @nv_start_rxtx(%struct.net_device* %40) #13, !dbg !17865
  %41 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17866
  %lock19 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %41, i32 0, i32 0, !dbg !17867
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i21, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17868, !srcloc !9681
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !17869
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !17869
  %rlock.i22 = bitcast %union.anon.2* %43 to %struct.raw_spinlock*, !dbg !17869
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17870
  call void @netif_addr_unlock(%struct.net_device* %44) #13, !dbg !17871
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17872
  call void @netif_tx_unlock_bh(%struct.net_device* %45) #13, !dbg !17873
  %46 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17874
  call void @nv_napi_enable(%struct.net_device* %46) #13, !dbg !17875
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17876
  call void @nv_enable_irq(%struct.net_device* %47) #13, !dbg !17877
  br label %if.end20, !dbg !17878

if.end20:                                         ; preds = %if.end12, %if.end
  store i32 0, i32* %retval, align 4, !dbg !17879
  br label %return, !dbg !17879

return:                                           ; preds = %if.end20, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !17880
  ret i32 %48, !dbg !17880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #2 !dbg !17881 {
entry:
  %lock.addr.i180 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i180, metadata !8241, metadata !DIExpression()), !dbg !17882
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !17884
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %status = alloca i32, align 4
  %put_tx = alloca %union.ring_type, align 8
  %saved_tx_limit = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17886, metadata !DIExpression()), !dbg !17887
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !17888, metadata !DIExpression()), !dbg !17889
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !17890, metadata !DIExpression()), !dbg !17891
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17892
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !17893
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !17893
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !17891
  call void @llvm.dbg.declare(metadata i8** %base, metadata !17894, metadata !DIExpression()), !dbg !17895
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17896
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !17897
  store i8* %call1, i8** %base, align 8, !dbg !17895
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17898, metadata !DIExpression()), !dbg !17899
  call void @llvm.dbg.declare(metadata %union.ring_type* %put_tx, metadata !17900, metadata !DIExpression()), !dbg !17901
  call void @llvm.dbg.declare(metadata i32* %saved_tx_limit, metadata !17902, metadata !DIExpression()), !dbg !17903
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17904
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 69, !dbg !17906
  %4 = load i32, i32* %msi_flags, align 4, !dbg !17906
  %and = and i32 %4, 128, !dbg !17907
  %tobool = icmp ne i32 %and, 0, !dbg !17907
  br i1 %tobool, label %if.then, label %if.else, !dbg !17908

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %base, align 8, !dbg !17909
  %add.ptr = getelementptr i8, i8* %5, i64 1008, !dbg !17910
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !17911
  %and3 = and i32 %call2, 33791, !dbg !17912
  store i32 %and3, i32* %status, align 4, !dbg !17913
  br label %if.end, !dbg !17914

if.else:                                          ; preds = %entry
  %6 = load i8*, i8** %base, align 8, !dbg !17915
  %add.ptr4 = getelementptr i8, i8* %6, i64 0, !dbg !17916
  %call5 = call i32 @readl(i8* %add.ptr4) #13, !dbg !17917
  %and6 = and i32 %call5, 33791, !dbg !17918
  store i32 %and6, i32* %status, align 4, !dbg !17919
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17920
  %8 = load i32, i32* %status, align 4, !dbg !17921
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), i32 %8) #14, !dbg !17922
  %9 = load i8, i8* @debug_tx_timeout, align 1, !dbg !17923
  %tobool7 = trunc i8 %9 to i1, !dbg !17923
  %lnot = xor i1 %tobool7, true, !dbg !17923
  %lnot8 = xor i1 %lnot, true, !dbg !17923
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !17923
  %conv = sext i32 %lnot.ext to i64, !dbg !17923
  %tobool9 = icmp ne i64 %conv, 0, !dbg !17923
  br i1 %tobool9, label %if.then10, label %if.end160, !dbg !17925

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17926, metadata !DIExpression()), !dbg !17928
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17929
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17930
  %ring_addr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 19, !dbg !17931
  %12 = load i64, i64* %ring_addr, align 8, !dbg !17931
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0), i64 %12) #14, !dbg !17932
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17933
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i64 0, i64 0)) #14, !dbg !17934
  store i32 0, i32* %i, align 4, !dbg !17935
  br label %for.cond, !dbg !17937

for.cond:                                         ; preds = %for.inc, %if.then10
  %14 = load i32, i32* %i, align 4, !dbg !17938
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !17940
  %register_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 29, !dbg !17941
  %16 = load i32, i32* %register_size, align 4, !dbg !17941
  %cmp = icmp ule i32 %14, %16, !dbg !17942
  br i1 %cmp, label %for.body, label %for.end, !dbg !17943

for.body:                                         ; preds = %for.cond
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17944
  %18 = load i32, i32* %i, align 4, !dbg !17946
  %19 = load i8*, i8** %base, align 8, !dbg !17947
  %20 = load i32, i32* %i, align 4, !dbg !17948
  %idx.ext = sext i32 %20 to i64, !dbg !17949
  %add.ptr12 = getelementptr i8, i8* %19, i64 %idx.ext, !dbg !17949
  %add.ptr13 = getelementptr i8, i8* %add.ptr12, i64 0, !dbg !17950
  %call14 = call i32 @readl(i8* %add.ptr13) #13, !dbg !17951
  %21 = load i8*, i8** %base, align 8, !dbg !17952
  %22 = load i32, i32* %i, align 4, !dbg !17953
  %idx.ext15 = sext i32 %22 to i64, !dbg !17954
  %add.ptr16 = getelementptr i8, i8* %21, i64 %idx.ext15, !dbg !17954
  %add.ptr17 = getelementptr i8, i8* %add.ptr16, i64 4, !dbg !17955
  %call18 = call i32 @readl(i8* %add.ptr17) #13, !dbg !17956
  %23 = load i8*, i8** %base, align 8, !dbg !17957
  %24 = load i32, i32* %i, align 4, !dbg !17958
  %idx.ext19 = sext i32 %24 to i64, !dbg !17959
  %add.ptr20 = getelementptr i8, i8* %23, i64 %idx.ext19, !dbg !17959
  %add.ptr21 = getelementptr i8, i8* %add.ptr20, i64 8, !dbg !17960
  %call22 = call i32 @readl(i8* %add.ptr21) #13, !dbg !17961
  %25 = load i8*, i8** %base, align 8, !dbg !17962
  %26 = load i32, i32* %i, align 4, !dbg !17963
  %idx.ext23 = sext i32 %26 to i64, !dbg !17964
  %add.ptr24 = getelementptr i8, i8* %25, i64 %idx.ext23, !dbg !17964
  %add.ptr25 = getelementptr i8, i8* %add.ptr24, i64 12, !dbg !17965
  %call26 = call i32 @readl(i8* %add.ptr25) #13, !dbg !17966
  %27 = load i8*, i8** %base, align 8, !dbg !17967
  %28 = load i32, i32* %i, align 4, !dbg !17968
  %idx.ext27 = sext i32 %28 to i64, !dbg !17969
  %add.ptr28 = getelementptr i8, i8* %27, i64 %idx.ext27, !dbg !17969
  %add.ptr29 = getelementptr i8, i8* %add.ptr28, i64 16, !dbg !17970
  %call30 = call i32 @readl(i8* %add.ptr29) #13, !dbg !17971
  %29 = load i8*, i8** %base, align 8, !dbg !17972
  %30 = load i32, i32* %i, align 4, !dbg !17973
  %idx.ext31 = sext i32 %30 to i64, !dbg !17974
  %add.ptr32 = getelementptr i8, i8* %29, i64 %idx.ext31, !dbg !17974
  %add.ptr33 = getelementptr i8, i8* %add.ptr32, i64 20, !dbg !17975
  %call34 = call i32 @readl(i8* %add.ptr33) #13, !dbg !17976
  %31 = load i8*, i8** %base, align 8, !dbg !17977
  %32 = load i32, i32* %i, align 4, !dbg !17978
  %idx.ext35 = sext i32 %32 to i64, !dbg !17979
  %add.ptr36 = getelementptr i8, i8* %31, i64 %idx.ext35, !dbg !17979
  %add.ptr37 = getelementptr i8, i8* %add.ptr36, i64 24, !dbg !17980
  %call38 = call i32 @readl(i8* %add.ptr37) #13, !dbg !17981
  %33 = load i8*, i8** %base, align 8, !dbg !17982
  %34 = load i32, i32* %i, align 4, !dbg !17983
  %idx.ext39 = sext i32 %34 to i64, !dbg !17984
  %add.ptr40 = getelementptr i8, i8* %33, i64 %idx.ext39, !dbg !17984
  %add.ptr41 = getelementptr i8, i8* %add.ptr40, i64 28, !dbg !17985
  %call42 = call i32 @readl(i8* %add.ptr41) #13, !dbg !17986
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %17, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.56, i64 0, i64 0), i32 %18, i32 %call14, i32 %call18, i32 %call22, i32 %call26, i32 %call30, i32 %call34, i32 %call38, i32 %call42) #14, !dbg !17987
  br label %for.inc, !dbg !17988

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !17989
  %add = add i32 %35, 32, !dbg !17989
  store i32 %add, i32* %i, align 4, !dbg !17989
  br label %for.cond, !dbg !17990, !llvm.loop !17991

for.end:                                          ; preds = %for.cond
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17993
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %36, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0)) #14, !dbg !17994
  store i32 0, i32* %i, align 4, !dbg !17995
  br label %for.cond43, !dbg !17997

for.cond43:                                       ; preds = %for.inc157, %for.end
  %37 = load i32, i32* %i, align 4, !dbg !17998
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18000
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 62, !dbg !18001
  %39 = load i32, i32* %tx_ring_size, align 4, !dbg !18001
  %cmp44 = icmp slt i32 %37, %39, !dbg !18002
  br i1 %cmp44, label %for.body46, label %for.end159, !dbg !18003

for.body46:                                       ; preds = %for.cond43
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18004
  %call47 = call zeroext i1 @nv_optimized(%struct.fe_priv* %40) #13, !dbg !18007
  br i1 %call47, label %if.else89, label %if.then48, !dbg !18008

if.then48:                                        ; preds = %for.body46
  %41 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18009
  %42 = load i32, i32* %i, align 4, !dbg !18011
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18012
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 60, !dbg !18012
  %orig = bitcast %union.ring_type* %tx_ring to %struct.ring_desc**, !dbg !18012
  %44 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !18012
  %45 = load i32, i32* %i, align 4, !dbg !18012
  %idxprom = sext i32 %45 to i64, !dbg !18012
  %arrayidx = getelementptr %struct.ring_desc, %struct.ring_desc* %44, i64 %idxprom, !dbg !18012
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx, i32 0, i32 0, !dbg !18012
  %46 = load i32, i32* %buf, align 4, !dbg !18012
  %47 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18013
  %tx_ring49 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %47, i32 0, i32 60, !dbg !18013
  %orig50 = bitcast %union.ring_type* %tx_ring49 to %struct.ring_desc**, !dbg !18013
  %48 = load %struct.ring_desc*, %struct.ring_desc** %orig50, align 8, !dbg !18013
  %49 = load i32, i32* %i, align 4, !dbg !18013
  %idxprom51 = sext i32 %49 to i64, !dbg !18013
  %arrayidx52 = getelementptr %struct.ring_desc, %struct.ring_desc* %48, i64 %idxprom51, !dbg !18013
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx52, i32 0, i32 1, !dbg !18013
  %50 = load i32, i32* %flaglen, align 4, !dbg !18013
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18014
  %tx_ring53 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 60, !dbg !18014
  %orig54 = bitcast %union.ring_type* %tx_ring53 to %struct.ring_desc**, !dbg !18014
  %52 = load %struct.ring_desc*, %struct.ring_desc** %orig54, align 8, !dbg !18014
  %53 = load i32, i32* %i, align 4, !dbg !18014
  %add55 = add i32 %53, 1, !dbg !18014
  %idxprom56 = sext i32 %add55 to i64, !dbg !18014
  %arrayidx57 = getelementptr %struct.ring_desc, %struct.ring_desc* %52, i64 %idxprom56, !dbg !18014
  %buf58 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx57, i32 0, i32 0, !dbg !18014
  %54 = load i32, i32* %buf58, align 4, !dbg !18014
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18015
  %tx_ring59 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 60, !dbg !18015
  %orig60 = bitcast %union.ring_type* %tx_ring59 to %struct.ring_desc**, !dbg !18015
  %56 = load %struct.ring_desc*, %struct.ring_desc** %orig60, align 8, !dbg !18015
  %57 = load i32, i32* %i, align 4, !dbg !18015
  %add61 = add i32 %57, 1, !dbg !18015
  %idxprom62 = sext i32 %add61 to i64, !dbg !18015
  %arrayidx63 = getelementptr %struct.ring_desc, %struct.ring_desc* %56, i64 %idxprom62, !dbg !18015
  %flaglen64 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx63, i32 0, i32 1, !dbg !18015
  %58 = load i32, i32* %flaglen64, align 4, !dbg !18015
  %59 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18016
  %tx_ring65 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %59, i32 0, i32 60, !dbg !18016
  %orig66 = bitcast %union.ring_type* %tx_ring65 to %struct.ring_desc**, !dbg !18016
  %60 = load %struct.ring_desc*, %struct.ring_desc** %orig66, align 8, !dbg !18016
  %61 = load i32, i32* %i, align 4, !dbg !18016
  %add67 = add i32 %61, 2, !dbg !18016
  %idxprom68 = sext i32 %add67 to i64, !dbg !18016
  %arrayidx69 = getelementptr %struct.ring_desc, %struct.ring_desc* %60, i64 %idxprom68, !dbg !18016
  %buf70 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx69, i32 0, i32 0, !dbg !18016
  %62 = load i32, i32* %buf70, align 4, !dbg !18016
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18017
  %tx_ring71 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 60, !dbg !18017
  %orig72 = bitcast %union.ring_type* %tx_ring71 to %struct.ring_desc**, !dbg !18017
  %64 = load %struct.ring_desc*, %struct.ring_desc** %orig72, align 8, !dbg !18017
  %65 = load i32, i32* %i, align 4, !dbg !18017
  %add73 = add i32 %65, 2, !dbg !18017
  %idxprom74 = sext i32 %add73 to i64, !dbg !18017
  %arrayidx75 = getelementptr %struct.ring_desc, %struct.ring_desc* %64, i64 %idxprom74, !dbg !18017
  %flaglen76 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx75, i32 0, i32 1, !dbg !18017
  %66 = load i32, i32* %flaglen76, align 4, !dbg !18017
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18018
  %tx_ring77 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 60, !dbg !18018
  %orig78 = bitcast %union.ring_type* %tx_ring77 to %struct.ring_desc**, !dbg !18018
  %68 = load %struct.ring_desc*, %struct.ring_desc** %orig78, align 8, !dbg !18018
  %69 = load i32, i32* %i, align 4, !dbg !18018
  %add79 = add i32 %69, 3, !dbg !18018
  %idxprom80 = sext i32 %add79 to i64, !dbg !18018
  %arrayidx81 = getelementptr %struct.ring_desc, %struct.ring_desc* %68, i64 %idxprom80, !dbg !18018
  %buf82 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx81, i32 0, i32 0, !dbg !18018
  %70 = load i32, i32* %buf82, align 4, !dbg !18018
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18019
  %tx_ring83 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 60, !dbg !18019
  %orig84 = bitcast %union.ring_type* %tx_ring83 to %struct.ring_desc**, !dbg !18019
  %72 = load %struct.ring_desc*, %struct.ring_desc** %orig84, align 8, !dbg !18019
  %73 = load i32, i32* %i, align 4, !dbg !18019
  %add85 = add i32 %73, 3, !dbg !18019
  %idxprom86 = sext i32 %add85 to i64, !dbg !18019
  %arrayidx87 = getelementptr %struct.ring_desc, %struct.ring_desc* %72, i64 %idxprom86, !dbg !18019
  %flaglen88 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx87, i32 0, i32 1, !dbg !18019
  %74 = load i32, i32* %flaglen88, align 4, !dbg !18019
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %41, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.58, i64 0, i64 0), i32 %42, i32 %46, i32 %50, i32 %54, i32 %58, i32 %62, i32 %66, i32 %70, i32 %74) #14, !dbg !18020
  br label %if.end156, !dbg !18021

if.else89:                                        ; preds = %for.body46
  %75 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18022
  %76 = load i32, i32* %i, align 4, !dbg !18024
  %77 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18025
  %tx_ring90 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %77, i32 0, i32 60, !dbg !18025
  %ex = bitcast %union.ring_type* %tx_ring90 to %struct.ring_desc_ex**, !dbg !18025
  %78 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !18025
  %79 = load i32, i32* %i, align 4, !dbg !18025
  %idxprom91 = sext i32 %79 to i64, !dbg !18025
  %arrayidx92 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %78, i64 %idxprom91, !dbg !18025
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx92, i32 0, i32 0, !dbg !18025
  %80 = load i32, i32* %bufhigh, align 4, !dbg !18025
  %81 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18026
  %tx_ring93 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %81, i32 0, i32 60, !dbg !18026
  %ex94 = bitcast %union.ring_type* %tx_ring93 to %struct.ring_desc_ex**, !dbg !18026
  %82 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex94, align 8, !dbg !18026
  %83 = load i32, i32* %i, align 4, !dbg !18026
  %idxprom95 = sext i32 %83 to i64, !dbg !18026
  %arrayidx96 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %82, i64 %idxprom95, !dbg !18026
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx96, i32 0, i32 1, !dbg !18026
  %84 = load i32, i32* %buflow, align 4, !dbg !18026
  %85 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18027
  %tx_ring97 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %85, i32 0, i32 60, !dbg !18027
  %ex98 = bitcast %union.ring_type* %tx_ring97 to %struct.ring_desc_ex**, !dbg !18027
  %86 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex98, align 8, !dbg !18027
  %87 = load i32, i32* %i, align 4, !dbg !18027
  %idxprom99 = sext i32 %87 to i64, !dbg !18027
  %arrayidx100 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %86, i64 %idxprom99, !dbg !18027
  %flaglen101 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx100, i32 0, i32 3, !dbg !18027
  %88 = load i32, i32* %flaglen101, align 4, !dbg !18027
  %89 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18028
  %tx_ring102 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %89, i32 0, i32 60, !dbg !18028
  %ex103 = bitcast %union.ring_type* %tx_ring102 to %struct.ring_desc_ex**, !dbg !18028
  %90 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex103, align 8, !dbg !18028
  %91 = load i32, i32* %i, align 4, !dbg !18028
  %add104 = add i32 %91, 1, !dbg !18028
  %idxprom105 = sext i32 %add104 to i64, !dbg !18028
  %arrayidx106 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %90, i64 %idxprom105, !dbg !18028
  %bufhigh107 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx106, i32 0, i32 0, !dbg !18028
  %92 = load i32, i32* %bufhigh107, align 4, !dbg !18028
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18029
  %tx_ring108 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 60, !dbg !18029
  %ex109 = bitcast %union.ring_type* %tx_ring108 to %struct.ring_desc_ex**, !dbg !18029
  %94 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex109, align 8, !dbg !18029
  %95 = load i32, i32* %i, align 4, !dbg !18029
  %add110 = add i32 %95, 1, !dbg !18029
  %idxprom111 = sext i32 %add110 to i64, !dbg !18029
  %arrayidx112 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %94, i64 %idxprom111, !dbg !18029
  %buflow113 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx112, i32 0, i32 1, !dbg !18029
  %96 = load i32, i32* %buflow113, align 4, !dbg !18029
  %97 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18030
  %tx_ring114 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %97, i32 0, i32 60, !dbg !18030
  %ex115 = bitcast %union.ring_type* %tx_ring114 to %struct.ring_desc_ex**, !dbg !18030
  %98 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex115, align 8, !dbg !18030
  %99 = load i32, i32* %i, align 4, !dbg !18030
  %add116 = add i32 %99, 1, !dbg !18030
  %idxprom117 = sext i32 %add116 to i64, !dbg !18030
  %arrayidx118 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %98, i64 %idxprom117, !dbg !18030
  %flaglen119 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx118, i32 0, i32 3, !dbg !18030
  %100 = load i32, i32* %flaglen119, align 4, !dbg !18030
  %101 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18031
  %tx_ring120 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %101, i32 0, i32 60, !dbg !18031
  %ex121 = bitcast %union.ring_type* %tx_ring120 to %struct.ring_desc_ex**, !dbg !18031
  %102 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex121, align 8, !dbg !18031
  %103 = load i32, i32* %i, align 4, !dbg !18031
  %add122 = add i32 %103, 2, !dbg !18031
  %idxprom123 = sext i32 %add122 to i64, !dbg !18031
  %arrayidx124 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %102, i64 %idxprom123, !dbg !18031
  %bufhigh125 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx124, i32 0, i32 0, !dbg !18031
  %104 = load i32, i32* %bufhigh125, align 4, !dbg !18031
  %105 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18032
  %tx_ring126 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %105, i32 0, i32 60, !dbg !18032
  %ex127 = bitcast %union.ring_type* %tx_ring126 to %struct.ring_desc_ex**, !dbg !18032
  %106 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex127, align 8, !dbg !18032
  %107 = load i32, i32* %i, align 4, !dbg !18032
  %add128 = add i32 %107, 2, !dbg !18032
  %idxprom129 = sext i32 %add128 to i64, !dbg !18032
  %arrayidx130 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %106, i64 %idxprom129, !dbg !18032
  %buflow131 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx130, i32 0, i32 1, !dbg !18032
  %108 = load i32, i32* %buflow131, align 4, !dbg !18032
  %109 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18033
  %tx_ring132 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %109, i32 0, i32 60, !dbg !18033
  %ex133 = bitcast %union.ring_type* %tx_ring132 to %struct.ring_desc_ex**, !dbg !18033
  %110 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex133, align 8, !dbg !18033
  %111 = load i32, i32* %i, align 4, !dbg !18033
  %add134 = add i32 %111, 2, !dbg !18033
  %idxprom135 = sext i32 %add134 to i64, !dbg !18033
  %arrayidx136 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %110, i64 %idxprom135, !dbg !18033
  %flaglen137 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx136, i32 0, i32 3, !dbg !18033
  %112 = load i32, i32* %flaglen137, align 4, !dbg !18033
  %113 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18034
  %tx_ring138 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %113, i32 0, i32 60, !dbg !18034
  %ex139 = bitcast %union.ring_type* %tx_ring138 to %struct.ring_desc_ex**, !dbg !18034
  %114 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex139, align 8, !dbg !18034
  %115 = load i32, i32* %i, align 4, !dbg !18034
  %add140 = add i32 %115, 3, !dbg !18034
  %idxprom141 = sext i32 %add140 to i64, !dbg !18034
  %arrayidx142 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %114, i64 %idxprom141, !dbg !18034
  %bufhigh143 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx142, i32 0, i32 0, !dbg !18034
  %116 = load i32, i32* %bufhigh143, align 4, !dbg !18034
  %117 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18035
  %tx_ring144 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %117, i32 0, i32 60, !dbg !18035
  %ex145 = bitcast %union.ring_type* %tx_ring144 to %struct.ring_desc_ex**, !dbg !18035
  %118 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex145, align 8, !dbg !18035
  %119 = load i32, i32* %i, align 4, !dbg !18035
  %add146 = add i32 %119, 3, !dbg !18035
  %idxprom147 = sext i32 %add146 to i64, !dbg !18035
  %arrayidx148 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %118, i64 %idxprom147, !dbg !18035
  %buflow149 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx148, i32 0, i32 1, !dbg !18035
  %120 = load i32, i32* %buflow149, align 4, !dbg !18035
  %121 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18036
  %tx_ring150 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %121, i32 0, i32 60, !dbg !18036
  %ex151 = bitcast %union.ring_type* %tx_ring150 to %struct.ring_desc_ex**, !dbg !18036
  %122 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex151, align 8, !dbg !18036
  %123 = load i32, i32* %i, align 4, !dbg !18036
  %add152 = add i32 %123, 3, !dbg !18036
  %idxprom153 = sext i32 %add152 to i64, !dbg !18036
  %arrayidx154 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %122, i64 %idxprom153, !dbg !18036
  %flaglen155 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx154, i32 0, i32 3, !dbg !18036
  %124 = load i32, i32* %flaglen155, align 4, !dbg !18036
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %75, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.59, i64 0, i64 0), i32 %76, i32 %80, i32 %84, i32 %88, i32 %92, i32 %96, i32 %100, i32 %104, i32 %108, i32 %112, i32 %116, i32 %120, i32 %124) #14, !dbg !18037
  br label %if.end156

if.end156:                                        ; preds = %if.else89, %if.then48
  br label %for.inc157, !dbg !18038

for.inc157:                                       ; preds = %if.end156
  %125 = load i32, i32* %i, align 4, !dbg !18039
  %add158 = add i32 %125, 4, !dbg !18039
  store i32 %add158, i32* %i, align 4, !dbg !18039
  br label %for.cond43, !dbg !18040, !llvm.loop !18041

for.end159:                                       ; preds = %for.cond43
  br label %if.end160, !dbg !18043

if.end160:                                        ; preds = %for.end159, %if.end
  %126 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18044
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %126, i32 0, i32 0, !dbg !18045
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !18046
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18047, !srcloc !9174
  %127 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18048
  %128 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %127, i32 0, i32 0, !dbg !18048
  %rlock.i = bitcast %union.anon.2* %128 to %struct.raw_spinlock*, !dbg !18048
  %129 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18049
  call void @nv_stop_tx(%struct.net_device* %129) #13, !dbg !18050
  %130 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18051
  %tx_limit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %130, i32 0, i32 63, !dbg !18052
  %131 = load i32, i32* %tx_limit, align 8, !dbg !18052
  store i32 %131, i32* %saved_tx_limit, align 4, !dbg !18053
  %132 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18054
  %tx_limit161 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %132, i32 0, i32 63, !dbg !18055
  store i32 0, i32* %tx_limit161, align 8, !dbg !18056
  %133 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18057
  %tx_stop = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %133, i32 0, i32 67, !dbg !18058
  store i32 0, i32* %tx_stop, align 8, !dbg !18059
  %134 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18060
  %call162 = call zeroext i1 @nv_optimized(%struct.fe_priv* %134) #13, !dbg !18062
  br i1 %call162, label %if.else166, label %if.then163, !dbg !18063

if.then163:                                       ; preds = %if.end160
  %135 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18064
  %136 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18065
  %tx_ring_size164 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %136, i32 0, i32 62, !dbg !18066
  %137 = load i32, i32* %tx_ring_size164, align 4, !dbg !18066
  %call165 = call i32 @nv_tx_done(%struct.net_device* %135, i32 %137) #13, !dbg !18067
  br label %if.end169, !dbg !18067

if.else166:                                       ; preds = %if.end160
  %138 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18068
  %139 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18069
  %tx_ring_size167 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %139, i32 0, i32 62, !dbg !18070
  %140 = load i32, i32* %tx_ring_size167, align 4, !dbg !18070
  %call168 = call i32 @nv_tx_done_optimized(%struct.net_device* %138, i32 %140) #13, !dbg !18071
  br label %if.end169

if.end169:                                        ; preds = %if.else166, %if.then163
  %141 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18072
  %tx_change_owner = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %141, i32 0, i32 65, !dbg !18074
  %142 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_change_owner, align 8, !dbg !18074
  %tobool170 = icmp ne %struct.nv_skb_map* %142, null, !dbg !18072
  br i1 %tobool170, label %if.then171, label %if.else174, !dbg !18075

if.then171:                                       ; preds = %if.end169
  %143 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18076
  %tx_change_owner172 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %143, i32 0, i32 65, !dbg !18077
  %144 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_change_owner172, align 8, !dbg !18077
  %first_tx_desc = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %144, i32 0, i32 3, !dbg !18078
  %145 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %first_tx_desc, align 8, !dbg !18078
  %ex173 = bitcast %union.ring_type* %put_tx to %struct.ring_desc_ex**, !dbg !18079
  store %struct.ring_desc_ex* %145, %struct.ring_desc_ex** %ex173, align 8, !dbg !18080
  br label %if.end176, !dbg !18081

if.else174:                                       ; preds = %if.end169
  %146 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18082
  %put_tx175 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %146, i32 0, i32 54, !dbg !18083
  %147 = bitcast %union.ring_type* %put_tx to i8*, !dbg !18083
  %148 = bitcast %union.ring_type* %put_tx175 to i8*, !dbg !18083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 8, i1 false), !dbg !18083
  br label %if.end176

if.end176:                                        ; preds = %if.else174, %if.then171
  %149 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18084
  call void @nv_drain_tx(%struct.net_device* %149) #13, !dbg !18085
  %150 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18086
  call void @nv_init_tx(%struct.net_device* %150) #13, !dbg !18087
  %151 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18088
  %get_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %151, i32 0, i32 53, !dbg !18089
  %152 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18090
  %put_tx177 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %152, i32 0, i32 54, !dbg !18091
  %153 = bitcast %union.ring_type* %put_tx177 to i8*, !dbg !18092
  %154 = bitcast %union.ring_type* %put_tx to i8*, !dbg !18092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 8, i1 false), !dbg !18092
  %155 = bitcast %union.ring_type* %get_tx to i8*, !dbg !18093
  %156 = bitcast %union.ring_type* %put_tx177 to i8*, !dbg !18093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 8, i1 false), !dbg !18093
  %157 = load i32, i32* %saved_tx_limit, align 4, !dbg !18094
  %158 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18095
  %tx_limit178 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %158, i32 0, i32 63, !dbg !18096
  store i32 %157, i32* %tx_limit178, align 8, !dbg !18097
  %159 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18098
  call void @nv_start_tx(%struct.net_device* %159) #13, !dbg !18099
  %160 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18100
  call void @netif_wake_queue(%struct.net_device* %160) #13, !dbg !18101
  %161 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18102
  %lock179 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %161, i32 0, i32 0, !dbg !18103
  store %struct.spinlock* %lock179, %struct.spinlock** %lock.addr.i180, align 8
  call void @arch_local_irq_enable() #15, !dbg !18104
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18105, !srcloc !9188
  %162 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i180, align 8, !dbg !18106
  %163 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %162, i32 0, i32 0, !dbg !18106
  %rlock.i181 = bitcast %union.anon.2* %163 to %struct.raw_spinlock*, !dbg !18106
  ret void, !dbg !18107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_stats64(%struct.net_device* %dev, %struct.rtnl_link_stats64* %storage) #2 !dbg !18108 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %storage.addr = alloca %struct.rtnl_link_stats64*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %cpu = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18109, metadata !DIExpression()), !dbg !18110
  store %struct.rtnl_link_stats64* %storage, %struct.rtnl_link_stats64** %storage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %storage.addr, metadata !18111, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !18113, metadata !DIExpression()), !dbg !18114
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18115
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !18116
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !18116
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !18114
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !18117, metadata !DIExpression()), !dbg !18118
  store i32 0, i32* %cpu, align 4, !dbg !18119
  br label %for.cond, !dbg !18119

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %cpu, align 4, !dbg !18121
  %cmp = icmp slt i32 %2, 1, !dbg !18121
  br i1 %cmp, label %for.body, label %for.end, !dbg !18119

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %cpu, align 4, !dbg !18123
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18124
  %5 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18125
  call void @nv_get_stats(i32 %3, %struct.fe_priv* %4, %struct.rtnl_link_stats64* %5) #13, !dbg !18126
  br label %for.inc, !dbg !18126

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %cpu, align 4, !dbg !18121
  %inc = add i32 %6, 1, !dbg !18121
  store i32 %inc, i32* %cpu, align 4, !dbg !18121
  br label %for.cond, !dbg !18121, !llvm.loop !18127

for.end:                                          ; preds = %for.cond
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18129
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 27, !dbg !18131
  %8 = load i32, i32* %driver_data, align 4, !dbg !18131
  %and = and i32 %8, 3584, !dbg !18132
  %tobool = icmp ne i32 %and, 0, !dbg !18132
  br i1 %tobool, label %if.then, label %if.end, !dbg !18133

if.then:                                          ; preds = %for.end
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18134
  %hwstats_lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 3, !dbg !18136
  call void @spin_lock_bh(%struct.spinlock* %hwstats_lock) #13, !dbg !18137
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18138
  call void @nv_update_stats(%struct.net_device* %10) #13, !dbg !18139
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18140
  %estats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 4, !dbg !18141
  %rx_errors_total = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats, i32 0, i32 22, !dbg !18142
  %12 = load i64, i64* %rx_errors_total, align 8, !dbg !18142
  %13 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18143
  %rx_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %13, i32 0, i32 4, !dbg !18144
  store i64 %12, i64* %rx_errors, align 8, !dbg !18145
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18146
  %estats1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 4, !dbg !18147
  %tx_errors_total = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats1, i32 0, i32 23, !dbg !18148
  %15 = load i64, i64* %tx_errors_total, align 8, !dbg !18148
  %16 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18149
  %tx_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %16, i32 0, i32 5, !dbg !18150
  store i64 %15, i64* %tx_errors, align 8, !dbg !18151
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18152
  %estats2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 4, !dbg !18153
  %rx_multicast = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats2, i32 0, i32 19, !dbg !18154
  %18 = load i64, i64* %rx_multicast, align 8, !dbg !18154
  %19 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18155
  %multicast = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %19, i32 0, i32 8, !dbg !18156
  store i64 %18, i64* %multicast, align 8, !dbg !18157
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18158
  %estats3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 4, !dbg !18159
  %rx_length_error = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats3, i32 0, i32 17, !dbg !18160
  %21 = load i64, i64* %rx_length_error, align 8, !dbg !18160
  %22 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18161
  %rx_length_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %22, i32 0, i32 10, !dbg !18162
  store i64 %21, i64* %rx_length_errors, align 8, !dbg !18163
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18164
  %estats4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 4, !dbg !18165
  %rx_over_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats4, i32 0, i32 14, !dbg !18166
  %24 = load i64, i64* %rx_over_errors, align 8, !dbg !18166
  %25 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18167
  %rx_over_errors5 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %25, i32 0, i32 11, !dbg !18168
  store i64 %24, i64* %rx_over_errors5, align 8, !dbg !18169
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18170
  %estats6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 4, !dbg !18171
  %rx_crc_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats6, i32 0, i32 15, !dbg !18172
  %27 = load i64, i64* %rx_crc_errors, align 8, !dbg !18172
  %28 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18173
  %rx_crc_errors7 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %28, i32 0, i32 12, !dbg !18174
  store i64 %27, i64* %rx_crc_errors7, align 8, !dbg !18175
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18176
  %estats8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 4, !dbg !18177
  %rx_frame_align_error = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats8, i32 0, i32 16, !dbg !18178
  %30 = load i64, i64* %rx_frame_align_error, align 8, !dbg !18178
  %31 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18179
  %rx_frame_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %31, i32 0, i32 13, !dbg !18180
  store i64 %30, i64* %rx_frame_errors, align 8, !dbg !18181
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18182
  %estats9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 4, !dbg !18183
  %rx_drop_frame = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats9, i32 0, i32 29, !dbg !18184
  %33 = load i64, i64* %rx_drop_frame, align 8, !dbg !18184
  %34 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18185
  %rx_fifo_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %34, i32 0, i32 14, !dbg !18186
  store i64 %33, i64* %rx_fifo_errors, align 8, !dbg !18187
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18188
  %estats10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 4, !dbg !18189
  %tx_carrier_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats10, i32 0, i32 6, !dbg !18190
  %36 = load i64, i64* %tx_carrier_errors, align 8, !dbg !18190
  %37 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18191
  %tx_carrier_errors11 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %37, i32 0, i32 17, !dbg !18192
  store i64 %36, i64* %tx_carrier_errors11, align 8, !dbg !18193
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18194
  %estats12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 4, !dbg !18195
  %tx_fifo_errors = getelementptr inbounds %struct.nv_ethtool_stats, %struct.nv_ethtool_stats* %estats12, i32 0, i32 5, !dbg !18196
  %39 = load i64, i64* %tx_fifo_errors, align 8, !dbg !18196
  %40 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !18197
  %tx_fifo_errors13 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %40, i32 0, i32 18, !dbg !18198
  store i64 %39, i64* %tx_fifo_errors13, align 8, !dbg !18199
  %41 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18200
  %hwstats_lock14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %41, i32 0, i32 3, !dbg !18201
  call void @spin_unlock_bh(%struct.spinlock* %hwstats_lock14) #13, !dbg !18202
  br label %if.end, !dbg !18203

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !18204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @nv_fix_features(%struct.net_device* %dev, i64 %features) #2 !dbg !18205 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18206, metadata !DIExpression()), !dbg !18207
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !18208, metadata !DIExpression()), !dbg !18209
  %0 = load i64, i64* %features.addr, align 8, !dbg !18210
  %and = and i64 %0, 384, !dbg !18212
  %tobool = icmp ne i64 %and, 0, !dbg !18212
  br i1 %tobool, label %if.then, label %if.end, !dbg !18213

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %features.addr, align 8, !dbg !18214
  %or = or i64 %1, 1099511627776, !dbg !18214
  store i64 %or, i64* %features.addr, align 8, !dbg !18214
  br label %if.end, !dbg !18215

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64, i64* %features.addr, align 8, !dbg !18216
  ret i64 %2, !dbg !18217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_set_features(%struct.net_device* %dev, i64 %features) #2 !dbg !18218 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !8241, metadata !DIExpression()), !dbg !18219
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !18223
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %changed = alloca i64, align 8
  %retval3 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18225, metadata !DIExpression()), !dbg !18226
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !18227, metadata !DIExpression()), !dbg !18228
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !18229, metadata !DIExpression()), !dbg !18230
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18231
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !18232
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !18232
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !18230
  call void @llvm.dbg.declare(metadata i8** %base, metadata !18233, metadata !DIExpression()), !dbg !18234
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18235
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !18236
  store i8* %call1, i8** %base, align 8, !dbg !18234
  call void @llvm.dbg.declare(metadata i64* %changed, metadata !18237, metadata !DIExpression()), !dbg !18238
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18239
  %features2 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 15, !dbg !18240
  %4 = load i64, i64* %features2, align 8, !dbg !18240
  %5 = load i64, i64* %features.addr, align 8, !dbg !18241
  %xor = xor i64 %4, %5, !dbg !18242
  store i64 %xor, i64* %changed, align 8, !dbg !18238
  call void @llvm.dbg.declare(metadata i32* %retval3, metadata !18243, metadata !DIExpression()), !dbg !18244
  %6 = load i64, i64* %changed, align 8, !dbg !18245
  %and = and i64 %6, 4398046511104, !dbg !18247
  %tobool = icmp ne i64 %and, 0, !dbg !18247
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !18248

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18249
  %call4 = call zeroext i1 @netif_running(%struct.net_device* %7) #13, !dbg !18250
  br i1 %call4, label %if.then, label %if.end7, !dbg !18251

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18252
  %9 = load i64, i64* %features.addr, align 8, !dbg !18254
  %call5 = call i32 @nv_set_loopback(%struct.net_device* %8, i64 %9) #13, !dbg !18255
  store i32 %call5, i32* %retval3, align 4, !dbg !18256
  %10 = load i32, i32* %retval3, align 4, !dbg !18257
  %cmp = icmp ne i32 %10, 0, !dbg !18259
  br i1 %cmp, label %if.then6, label %if.end, !dbg !18260

if.then6:                                         ; preds = %if.then
  %11 = load i32, i32* %retval3, align 4, !dbg !18261
  store i32 %11, i32* %retval, align 4, !dbg !18262
  br label %return, !dbg !18262

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !18263

if.end7:                                          ; preds = %if.end, %land.lhs.true, %entry
  %12 = load i64, i64* %changed, align 8, !dbg !18264
  %and8 = and i64 %12, 1099511627776, !dbg !18265
  %tobool9 = icmp ne i64 %and8, 0, !dbg !18265
  br i1 %tobool9, label %if.then10, label %if.end22, !dbg !18266

if.then10:                                        ; preds = %if.end7
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18267
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 0, !dbg !18268
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !18269
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18270, !srcloc !9174
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18271
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !18271
  %rlock.i = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !18271
  %16 = load i64, i64* %features.addr, align 8, !dbg !18272
  %and11 = and i64 %16, 1099511627776, !dbg !18274
  %tobool12 = icmp ne i64 %and11, 0, !dbg !18274
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !18275

if.then13:                                        ; preds = %if.then10
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18276
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 25, !dbg !18277
  %18 = load i32, i32* %txrxctl_bits, align 4, !dbg !18278
  %or = or i32 %18, 1024, !dbg !18278
  store i32 %or, i32* %txrxctl_bits, align 4, !dbg !18278
  br label %if.end16, !dbg !18276

if.else:                                          ; preds = %if.then10
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18279
  %txrxctl_bits14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 25, !dbg !18280
  %20 = load i32, i32* %txrxctl_bits14, align 4, !dbg !18281
  %and15 = and i32 %20, -1025, !dbg !18281
  store i32 %and15, i32* %txrxctl_bits14, align 4, !dbg !18281
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18282
  %call17 = call zeroext i1 @netif_running(%struct.net_device* %21) #13, !dbg !18284
  br i1 %call17, label %if.then18, label %if.end20, !dbg !18285

if.then18:                                        ; preds = %if.end16
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18286
  %txrxctl_bits19 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 25, !dbg !18287
  %23 = load i32, i32* %txrxctl_bits19, align 4, !dbg !18287
  %24 = load i8*, i8** %base, align 8, !dbg !18288
  %add.ptr = getelementptr i8, i8* %24, i64 324, !dbg !18289
  call void @writel(i32 %23, i8* %add.ptr) #13, !dbg !18290
  br label %if.end20, !dbg !18290

if.end20:                                         ; preds = %if.then18, %if.end16
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18291
  %lock21 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 0, !dbg !18292
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i27, align 8
  call void @arch_local_irq_enable() #15, !dbg !18293
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18294, !srcloc !9188
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !18295
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !18295
  %rlock.i28 = bitcast %union.anon.2* %27 to %struct.raw_spinlock*, !dbg !18295
  br label %if.end22, !dbg !18296

if.end22:                                         ; preds = %if.end20, %if.end7
  %28 = load i64, i64* %changed, align 8, !dbg !18297
  %and23 = and i64 %28, 384, !dbg !18299
  %tobool24 = icmp ne i64 %and23, 0, !dbg !18299
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !18300

if.then25:                                        ; preds = %if.end22
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18301
  %30 = load i64, i64* %features.addr, align 8, !dbg !18302
  call void @nv_vlan_mode(%struct.net_device* %29, i64 %30) #13, !dbg !18303
  br label %if.end26, !dbg !18303

if.end26:                                         ; preds = %if.then25, %if.end22
  store i32 0, i32* %retval, align 4, !dbg !18304
  br label %return, !dbg !18304

return:                                           ; preds = %if.end26, %if.then6
  %31 = load i32, i32* %retval, align 4, !dbg !18305
  ret i32 %31, !dbg !18305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_disable_hw_interrupts(%struct.net_device* %dev, i32 %mask) #2 !dbg !18306 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mask.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18307, metadata !DIExpression()), !dbg !18308
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !18309, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !18311, metadata !DIExpression()), !dbg !18312
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18313
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !18314
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !18312
  call void @llvm.dbg.declare(metadata i8** %base, metadata !18315, metadata !DIExpression()), !dbg !18316
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18317
  %call1 = call i8* @get_hwbase(%struct.net_device* %1) #13, !dbg !18318
  store i8* %call1, i8** %base, align 8, !dbg !18316
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18319
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 69, !dbg !18321
  %3 = load i32, i32* %msi_flags, align 4, !dbg !18321
  %and = and i32 %3, 128, !dbg !18322
  %tobool = icmp ne i32 %and, 0, !dbg !18322
  br i1 %tobool, label %if.then, label %if.else, !dbg !18323

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %mask.addr, align 4, !dbg !18324
  %5 = load i8*, i8** %base, align 8, !dbg !18326
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !18327
  call void @writel(i32 %4, i8* %add.ptr) #13, !dbg !18328
  br label %if.end8, !dbg !18329

if.else:                                          ; preds = %entry
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18330
  %msi_flags2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 69, !dbg !18333
  %7 = load i32, i32* %msi_flags2, align 4, !dbg !18333
  %and3 = and i32 %7, 64, !dbg !18334
  %tobool4 = icmp ne i32 %and3, 0, !dbg !18334
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !18335

if.then5:                                         ; preds = %if.else
  %8 = load i8*, i8** %base, align 8, !dbg !18336
  %add.ptr6 = getelementptr i8, i8* %8, i64 48, !dbg !18337
  call void @writel(i32 0, i8* %add.ptr6) #13, !dbg !18338
  br label %if.end, !dbg !18338

if.end:                                           ; preds = %if.then5, %if.else
  %9 = load i8*, i8** %base, align 8, !dbg !18339
  %add.ptr7 = getelementptr i8, i8* %9, i64 4, !dbg !18340
  call void @writel(i32 0, i8* %add.ptr7) #13, !dbg !18341
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !18342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_request_irq(%struct.net_device* %dev, i32 %intr_test) #2 !dbg !18343 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %intr_test.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %handler = alloca i32 (i32, i8*)*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18344, metadata !DIExpression()), !dbg !18345
  store i32 %intr_test, i32* %intr_test.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr_test.addr, metadata !18346, metadata !DIExpression()), !dbg !18347
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !18348, metadata !DIExpression()), !dbg !18349
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18350
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !18351
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !18349
  call void @llvm.dbg.declare(metadata i8** %base, metadata !18352, metadata !DIExpression()), !dbg !18353
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18354
  %call1 = call i8* @get_hwbase(%struct.net_device* %1) #13, !dbg !18355
  store i8* %call1, i8** %base, align 8, !dbg !18353
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18356, metadata !DIExpression()), !dbg !18357
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18358, metadata !DIExpression()), !dbg !18359
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler, metadata !18360, metadata !DIExpression()), !dbg !18362
  %2 = load i32, i32* %intr_test.addr, align 4, !dbg !18363
  %tobool = icmp ne i32 %2, 0, !dbg !18363
  br i1 %tobool, label %if.then, label %if.else, !dbg !18365

if.then:                                          ; preds = %entry
  store i32 (i32, i8*)* @nv_nic_irq_test, i32 (i32, i8*)** %handler, align 8, !dbg !18366
  br label %if.end5, !dbg !18368

if.else:                                          ; preds = %entry
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18369
  %call2 = call zeroext i1 @nv_optimized(%struct.fe_priv* %3) #13, !dbg !18372
  br i1 %call2, label %if.then3, label %if.else4, !dbg !18373

if.then3:                                         ; preds = %if.else
  store i32 (i32, i8*)* @nv_nic_irq_optimized, i32 (i32, i8*)** %handler, align 8, !dbg !18374
  br label %if.end, !dbg !18375

if.else4:                                         ; preds = %if.else
  store i32 (i32, i8*)* @nv_nic_irq, i32 (i32, i8*)** %handler, align 8, !dbg !18376
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then3
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18377
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 69, !dbg !18379
  %5 = load i32, i32* %msi_flags, align 4, !dbg !18379
  %and = and i32 %5, 32, !dbg !18380
  %tobool6 = icmp ne i32 %and, 0, !dbg !18380
  br i1 %tobool6, label %if.then7, label %if.end89, !dbg !18381

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %i, align 4, !dbg !18382
  br label %for.cond, !dbg !18385

for.cond:                                         ; preds = %for.inc, %if.then7
  %6 = load i32, i32* %i, align 4, !dbg !18386
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18388
  %msi_flags8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 69, !dbg !18389
  %8 = load i32, i32* %msi_flags8, align 4, !dbg !18389
  %and9 = and i32 %8, 15, !dbg !18390
  %cmp = icmp ult i32 %6, %and9, !dbg !18391
  br i1 %cmp, label %for.body, label %for.end, !dbg !18392

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !18393
  %conv = trunc i32 %9 to i16, !dbg !18393
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18394
  %msi_x_entry = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 70, !dbg !18395
  %11 = load i32, i32* %i, align 4, !dbg !18396
  %idxprom = sext i32 %11 to i64, !dbg !18394
  %arrayidx = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry, i64 0, i64 %idxprom, !dbg !18394
  %entry10 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 1, !dbg !18397
  store i16 %conv, i16* %entry10, align 4, !dbg !18398
  br label %for.inc, !dbg !18394

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !18399
  %inc = add i32 %12, 1, !dbg !18399
  store i32 %inc, i32* %i, align 4, !dbg !18399
  br label %for.cond, !dbg !18400, !llvm.loop !18401

for.end:                                          ; preds = %for.cond
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18403
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 20, !dbg !18404
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !18404
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18405
  %msi_x_entry11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 70, !dbg !18406
  %arraydecay = getelementptr inbounds [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry11, i64 0, i64 0, !dbg !18405
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18407
  %msi_flags12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 69, !dbg !18408
  %17 = load i32, i32* %msi_flags12, align 4, !dbg !18408
  %and13 = and i32 %17, 15, !dbg !18409
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18410
  %msi_flags14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 69, !dbg !18411
  %19 = load i32, i32* %msi_flags14, align 4, !dbg !18411
  %and15 = and i32 %19, 15, !dbg !18412
  %call16 = call i32 @pci_enable_msix_range(%struct.pci_dev* %14, %struct.msix_entry* %arraydecay, i32 %and13, i32 %and15) #13, !dbg !18413
  store i32 %call16, i32* %ret, align 4, !dbg !18414
  %20 = load i32, i32* %ret, align 4, !dbg !18415
  %cmp17 = icmp sgt i32 %20, 0, !dbg !18417
  br i1 %cmp17, label %if.then19, label %if.end88, !dbg !18418

if.then19:                                        ; preds = %for.end
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18419
  %msi_flags20 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 69, !dbg !18421
  %22 = load i32, i32* %msi_flags20, align 4, !dbg !18422
  %or = or i32 %22, 128, !dbg !18422
  store i32 %or, i32* %msi_flags20, align 4, !dbg !18422
  %23 = load i32, i32* @optimization_mode, align 4, !dbg !18423
  %cmp21 = icmp eq i32 %23, 0, !dbg !18425
  br i1 %cmp21, label %land.lhs.true, label %if.else72, !dbg !18426

land.lhs.true:                                    ; preds = %if.then19
  %24 = load i32, i32* %intr_test.addr, align 4, !dbg !18427
  %tobool23 = icmp ne i32 %24, 0, !dbg !18427
  br i1 %tobool23, label %if.else72, label %if.then24, !dbg !18428

if.then24:                                        ; preds = %land.lhs.true
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18429
  %name_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 73, !dbg !18431
  %arraydecay25 = getelementptr inbounds [19 x i8], [19 x i8]* %name_rx, i64 0, i64 0, !dbg !18429
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18432
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 0, !dbg !18433
  %arraydecay26 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !18432
  %call27 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8* %arraydecay26) #13, !dbg !18434
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18435
  %msi_x_entry28 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 70, !dbg !18436
  %arrayidx29 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry28, i64 0, i64 0, !dbg !18435
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx29, i32 0, i32 0, !dbg !18437
  %28 = load i32, i32* %vector, align 8, !dbg !18437
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18438
  %name_rx30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 73, !dbg !18439
  %arraydecay31 = getelementptr inbounds [19 x i8], [19 x i8]* %name_rx30, i64 0, i64 0, !dbg !18438
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18440
  %31 = bitcast %struct.net_device* %30 to i8*, !dbg !18440
  %call32 = call i32 @request_irq(i32 %28, i32 (i32, i8*)* @nv_nic_irq_rx, i64 128, i8* %arraydecay31, i8* %31) #13, !dbg !18441
  store i32 %call32, i32* %ret, align 4, !dbg !18442
  %32 = load i32, i32* %ret, align 4, !dbg !18443
  %tobool33 = icmp ne i32 %32, 0, !dbg !18443
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !18445

if.then34:                                        ; preds = %if.then24
  %33 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18446
  %34 = load i32, i32* %ret, align 4, !dbg !18448
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %33, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0), i32 %34) #14, !dbg !18449
  %35 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18450
  %pci_dev35 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %35, i32 0, i32 20, !dbg !18451
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev35, align 8, !dbg !18451
  call void @pci_disable_msix(%struct.pci_dev* %36) #13, !dbg !18452
  %37 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18453
  %msi_flags36 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %37, i32 0, i32 69, !dbg !18454
  %38 = load i32, i32* %msi_flags36, align 4, !dbg !18455
  %and37 = and i32 %38, -129, !dbg !18455
  store i32 %and37, i32* %msi_flags36, align 4, !dbg !18455
  br label %out_err, !dbg !18456

if.end38:                                         ; preds = %if.then24
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18457
  %name_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 74, !dbg !18458
  %arraydecay39 = getelementptr inbounds [19 x i8], [19 x i8]* %name_tx, i64 0, i64 0, !dbg !18457
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18459
  %name40 = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 0, !dbg !18460
  %arraydecay41 = getelementptr inbounds [16 x i8], [16 x i8]* %name40, i64 0, i64 0, !dbg !18459
  %call42 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), i8* %arraydecay41) #13, !dbg !18461
  %41 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18462
  %msi_x_entry43 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %41, i32 0, i32 70, !dbg !18463
  %arrayidx44 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry43, i64 0, i64 1, !dbg !18462
  %vector45 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx44, i32 0, i32 0, !dbg !18464
  %42 = load i32, i32* %vector45, align 8, !dbg !18464
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18465
  %name_tx46 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 74, !dbg !18466
  %arraydecay47 = getelementptr inbounds [19 x i8], [19 x i8]* %name_tx46, i64 0, i64 0, !dbg !18465
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18467
  %45 = bitcast %struct.net_device* %44 to i8*, !dbg !18467
  %call48 = call i32 @request_irq(i32 %42, i32 (i32, i8*)* @nv_nic_irq_tx, i64 128, i8* %arraydecay47, i8* %45) #13, !dbg !18468
  store i32 %call48, i32* %ret, align 4, !dbg !18469
  %46 = load i32, i32* %ret, align 4, !dbg !18470
  %tobool49 = icmp ne i32 %46, 0, !dbg !18470
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !18472

if.then50:                                        ; preds = %if.end38
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18473
  %48 = load i32, i32* %ret, align 4, !dbg !18475
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %47, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i64 0, i64 0), i32 %48) #14, !dbg !18476
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18477
  %pci_dev51 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 20, !dbg !18478
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev51, align 8, !dbg !18478
  call void @pci_disable_msix(%struct.pci_dev* %50) #13, !dbg !18479
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18480
  %msi_flags52 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 69, !dbg !18481
  %52 = load i32, i32* %msi_flags52, align 4, !dbg !18482
  %and53 = and i32 %52, -129, !dbg !18482
  store i32 %and53, i32* %msi_flags52, align 4, !dbg !18482
  br label %out_free_rx, !dbg !18483

if.end54:                                         ; preds = %if.end38
  %53 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18484
  %name_other = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %53, i32 0, i32 75, !dbg !18485
  %arraydecay55 = getelementptr inbounds [22 x i8], [22 x i8]* %name_other, i64 0, i64 0, !dbg !18484
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18486
  %name56 = getelementptr inbounds %struct.net_device, %struct.net_device* %54, i32 0, i32 0, !dbg !18487
  %arraydecay57 = getelementptr inbounds [16 x i8], [16 x i8]* %name56, i64 0, i64 0, !dbg !18486
  %call58 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay57) #13, !dbg !18488
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18489
  %msi_x_entry59 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 70, !dbg !18490
  %arrayidx60 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry59, i64 0, i64 2, !dbg !18489
  %vector61 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx60, i32 0, i32 0, !dbg !18491
  %56 = load i32, i32* %vector61, align 8, !dbg !18491
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18492
  %name_other62 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 75, !dbg !18493
  %arraydecay63 = getelementptr inbounds [22 x i8], [22 x i8]* %name_other62, i64 0, i64 0, !dbg !18492
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18494
  %59 = bitcast %struct.net_device* %58 to i8*, !dbg !18494
  %call64 = call i32 @request_irq(i32 %56, i32 (i32, i8*)* @nv_nic_irq_other, i64 128, i8* %arraydecay63, i8* %59) #13, !dbg !18495
  store i32 %call64, i32* %ret, align 4, !dbg !18496
  %60 = load i32, i32* %ret, align 4, !dbg !18497
  %tobool65 = icmp ne i32 %60, 0, !dbg !18497
  br i1 %tobool65, label %if.then66, label %if.end70, !dbg !18499

if.then66:                                        ; preds = %if.end54
  %61 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18500
  %62 = load i32, i32* %ret, align 4, !dbg !18502
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %61, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i64 0, i64 0), i32 %62) #14, !dbg !18503
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18504
  %pci_dev67 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 20, !dbg !18505
  %64 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev67, align 8, !dbg !18505
  call void @pci_disable_msix(%struct.pci_dev* %64) #13, !dbg !18506
  %65 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18507
  %msi_flags68 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %65, i32 0, i32 69, !dbg !18508
  %66 = load i32, i32* %msi_flags68, align 4, !dbg !18509
  %and69 = and i32 %66, -129, !dbg !18509
  store i32 %and69, i32* %msi_flags68, align 4, !dbg !18509
  br label %out_free_tx, !dbg !18510

if.end70:                                         ; preds = %if.end54
  %67 = load i8*, i8** %base, align 8, !dbg !18511
  %add.ptr = getelementptr i8, i8* %67, i64 992, !dbg !18512
  call void @writel(i32 0, i8* %add.ptr) #13, !dbg !18513
  %68 = load i8*, i8** %base, align 8, !dbg !18514
  %add.ptr71 = getelementptr i8, i8* %68, i64 996, !dbg !18515
  call void @writel(i32 0, i8* %add.ptr71) #13, !dbg !18516
  %69 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18517
  call void @set_msix_vector_map(%struct.net_device* %69, i32 0, i32 135) #13, !dbg !18518
  %70 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18519
  call void @set_msix_vector_map(%struct.net_device* %70, i32 1, i32 280) #13, !dbg !18520
  %71 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18521
  call void @set_msix_vector_map(%struct.net_device* %71, i32 2, i32 33376) #13, !dbg !18522
  br label %if.end87, !dbg !18523

if.else72:                                        ; preds = %land.lhs.true, %if.then19
  %72 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18524
  %msi_x_entry73 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %72, i32 0, i32 70, !dbg !18526
  %arrayidx74 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry73, i64 0, i64 0, !dbg !18524
  %vector75 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx74, i32 0, i32 0, !dbg !18527
  %73 = load i32, i32* %vector75, align 8, !dbg !18527
  %74 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler, align 8, !dbg !18528
  %75 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18529
  %name76 = getelementptr inbounds %struct.net_device, %struct.net_device* %75, i32 0, i32 0, !dbg !18530
  %arraydecay77 = getelementptr inbounds [16 x i8], [16 x i8]* %name76, i64 0, i64 0, !dbg !18529
  %76 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18531
  %77 = bitcast %struct.net_device* %76 to i8*, !dbg !18531
  %call78 = call i32 @request_irq(i32 %73, i32 (i32, i8*)* %74, i64 128, i8* %arraydecay77, i8* %77) #13, !dbg !18532
  store i32 %call78, i32* %ret, align 4, !dbg !18533
  %78 = load i32, i32* %ret, align 4, !dbg !18534
  %tobool79 = icmp ne i32 %78, 0, !dbg !18534
  br i1 %tobool79, label %if.then80, label %if.end84, !dbg !18536

if.then80:                                        ; preds = %if.else72
  %79 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18537
  %80 = load i32, i32* %ret, align 4, !dbg !18539
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %79, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i32 %80) #14, !dbg !18540
  %81 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18541
  %pci_dev81 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %81, i32 0, i32 20, !dbg !18542
  %82 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev81, align 8, !dbg !18542
  call void @pci_disable_msix(%struct.pci_dev* %82) #13, !dbg !18543
  %83 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18544
  %msi_flags82 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %83, i32 0, i32 69, !dbg !18545
  %84 = load i32, i32* %msi_flags82, align 4, !dbg !18546
  %and83 = and i32 %84, -129, !dbg !18546
  store i32 %and83, i32* %msi_flags82, align 4, !dbg !18546
  br label %out_err, !dbg !18547

if.end84:                                         ; preds = %if.else72
  %85 = load i8*, i8** %base, align 8, !dbg !18548
  %add.ptr85 = getelementptr i8, i8* %85, i64 992, !dbg !18549
  call void @writel(i32 0, i8* %add.ptr85) #13, !dbg !18550
  %86 = load i8*, i8** %base, align 8, !dbg !18551
  %add.ptr86 = getelementptr i8, i8* %86, i64 996, !dbg !18552
  call void @writel(i32 0, i8* %add.ptr86) #13, !dbg !18553
  br label %if.end87

if.end87:                                         ; preds = %if.end84, %if.end70
  %87 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18554
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %87, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i64 0, i64 0)) #14, !dbg !18555
  store i32 0, i32* %retval, align 4, !dbg !18556
  br label %return, !dbg !18556

if.end88:                                         ; preds = %for.end
  br label %if.end89, !dbg !18557

if.end89:                                         ; preds = %if.end88, %if.end5
  %88 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18558
  %msi_flags90 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %88, i32 0, i32 69, !dbg !18560
  %89 = load i32, i32* %msi_flags90, align 4, !dbg !18560
  %and91 = and i32 %89, 16, !dbg !18561
  %tobool92 = icmp ne i32 %and91, 0, !dbg !18561
  br i1 %tobool92, label %if.then93, label %if.end115, !dbg !18562

if.then93:                                        ; preds = %if.end89
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18563
  %pci_dev94 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 20, !dbg !18565
  %91 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev94, align 8, !dbg !18565
  %call95 = call i32 @pci_enable_msi(%struct.pci_dev* %91) #13, !dbg !18566
  store i32 %call95, i32* %ret, align 4, !dbg !18567
  %92 = load i32, i32* %ret, align 4, !dbg !18568
  %cmp96 = icmp eq i32 %92, 0, !dbg !18570
  br i1 %cmp96, label %if.then98, label %if.end114, !dbg !18571

if.then98:                                        ; preds = %if.then93
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18572
  %msi_flags99 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 69, !dbg !18574
  %94 = load i32, i32* %msi_flags99, align 4, !dbg !18575
  %or100 = or i32 %94, 64, !dbg !18575
  store i32 %or100, i32* %msi_flags99, align 4, !dbg !18575
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18576
  %pci_dev101 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 20, !dbg !18577
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev101, align 8, !dbg !18577
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %96, i32 0, i32 43, !dbg !18578
  %97 = load i32, i32* %irq, align 4, !dbg !18578
  %98 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler, align 8, !dbg !18579
  %99 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18580
  %name102 = getelementptr inbounds %struct.net_device, %struct.net_device* %99, i32 0, i32 0, !dbg !18581
  %arraydecay103 = getelementptr inbounds [16 x i8], [16 x i8]* %name102, i64 0, i64 0, !dbg !18580
  %100 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18582
  %101 = bitcast %struct.net_device* %100 to i8*, !dbg !18582
  %call104 = call i32 @request_irq(i32 %97, i32 (i32, i8*)* %98, i64 128, i8* %arraydecay103, i8* %101) #13, !dbg !18583
  store i32 %call104, i32* %ret, align 4, !dbg !18584
  %102 = load i32, i32* %ret, align 4, !dbg !18585
  %tobool105 = icmp ne i32 %102, 0, !dbg !18585
  br i1 %tobool105, label %if.then106, label %if.end110, !dbg !18587

if.then106:                                       ; preds = %if.then98
  %103 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18588
  %104 = load i32, i32* %ret, align 4, !dbg !18590
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %103, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i32 %104) #14, !dbg !18591
  %105 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18592
  %pci_dev107 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %105, i32 0, i32 20, !dbg !18593
  %106 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev107, align 8, !dbg !18593
  call void @pci_disable_msi(%struct.pci_dev* %106) #13, !dbg !18594
  %107 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18595
  %msi_flags108 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %107, i32 0, i32 69, !dbg !18596
  %108 = load i32, i32* %msi_flags108, align 4, !dbg !18597
  %and109 = and i32 %108, -65, !dbg !18597
  store i32 %and109, i32* %msi_flags108, align 4, !dbg !18597
  br label %out_err, !dbg !18598

if.end110:                                        ; preds = %if.then98
  %109 = load i8*, i8** %base, align 8, !dbg !18599
  %add.ptr111 = getelementptr i8, i8* %109, i64 32, !dbg !18600
  call void @writel(i32 0, i8* %add.ptr111) #13, !dbg !18601
  %110 = load i8*, i8** %base, align 8, !dbg !18602
  %add.ptr112 = getelementptr i8, i8* %110, i64 36, !dbg !18603
  call void @writel(i32 0, i8* %add.ptr112) #13, !dbg !18604
  %111 = load i8*, i8** %base, align 8, !dbg !18605
  %add.ptr113 = getelementptr i8, i8* %111, i64 48, !dbg !18606
  call void @writel(i32 1, i8* %add.ptr113) #13, !dbg !18607
  %112 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18608
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0)) #14, !dbg !18609
  store i32 0, i32* %retval, align 4, !dbg !18610
  br label %return, !dbg !18610

if.end114:                                        ; preds = %if.then93
  br label %if.end115, !dbg !18611

if.end115:                                        ; preds = %if.end114, %if.end89
  %113 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18612
  %pci_dev116 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %113, i32 0, i32 20, !dbg !18614
  %114 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev116, align 8, !dbg !18614
  %irq117 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %114, i32 0, i32 43, !dbg !18615
  %115 = load i32, i32* %irq117, align 4, !dbg !18615
  %116 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler, align 8, !dbg !18616
  %117 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18617
  %name118 = getelementptr inbounds %struct.net_device, %struct.net_device* %117, i32 0, i32 0, !dbg !18618
  %arraydecay119 = getelementptr inbounds [16 x i8], [16 x i8]* %name118, i64 0, i64 0, !dbg !18617
  %118 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18619
  %119 = bitcast %struct.net_device* %118 to i8*, !dbg !18619
  %call120 = call i32 @request_irq(i32 %115, i32 (i32, i8*)* %116, i64 128, i8* %arraydecay119, i8* %119) #13, !dbg !18620
  %cmp121 = icmp ne i32 %call120, 0, !dbg !18621
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !18622

if.then123:                                       ; preds = %if.end115
  br label %out_err, !dbg !18623

if.end124:                                        ; preds = %if.end115
  store i32 0, i32* %retval, align 4, !dbg !18624
  br label %return, !dbg !18624

out_free_tx:                                      ; preds = %if.then66
  call void @llvm.dbg.label(metadata !18625), !dbg !18626
  %120 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18627
  %msi_x_entry125 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %120, i32 0, i32 70, !dbg !18628
  %arrayidx126 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry125, i64 0, i64 1, !dbg !18627
  %vector127 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx126, i32 0, i32 0, !dbg !18629
  %121 = load i32, i32* %vector127, align 8, !dbg !18629
  %122 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18630
  %123 = bitcast %struct.net_device* %122 to i8*, !dbg !18630
  %call128 = call i8* @free_irq(i32 %121, i8* %123) #13, !dbg !18631
  br label %out_free_rx, !dbg !18631

out_free_rx:                                      ; preds = %out_free_tx, %if.then50
  call void @llvm.dbg.label(metadata !18632), !dbg !18633
  %124 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18634
  %msi_x_entry129 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %124, i32 0, i32 70, !dbg !18635
  %arrayidx130 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry129, i64 0, i64 0, !dbg !18634
  %vector131 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx130, i32 0, i32 0, !dbg !18636
  %125 = load i32, i32* %vector131, align 8, !dbg !18636
  %126 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18637
  %127 = bitcast %struct.net_device* %126 to i8*, !dbg !18637
  %call132 = call i8* @free_irq(i32 %125, i8* %127) #13, !dbg !18638
  br label %out_err, !dbg !18638

out_err:                                          ; preds = %out_free_rx, %if.then123, %if.then106, %if.then80, %if.then34
  call void @llvm.dbg.label(metadata !18639), !dbg !18640
  store i32 1, i32* %retval, align 4, !dbg !18641
  br label %return, !dbg !18641

return:                                           ; preds = %out_err, %if.end124, %if.end110, %if.end87
  %128 = load i32, i32* %retval, align 4, !dbg !18642
  ret i32 %128, !dbg !18642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_enable_hw_interrupts(%struct.net_device* %dev, i32 %mask) #2 !dbg !18643 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mask.addr = alloca i32, align 4
  %base = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18644, metadata !DIExpression()), !dbg !18645
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !18646, metadata !DIExpression()), !dbg !18647
  call void @llvm.dbg.declare(metadata i8** %base, metadata !18648, metadata !DIExpression()), !dbg !18649
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18650
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !18651
  store i8* %call, i8** %base, align 8, !dbg !18649
  %1 = load i32, i32* %mask.addr, align 4, !dbg !18652
  %2 = load i8*, i8** %base, align 8, !dbg !18653
  %add.ptr = getelementptr i8, i8* %2, i64 4, !dbg !18654
  call void @writel(i32 %1, i8* %add.ptr) #13, !dbg !18655
  ret void, !dbg !18656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #2 !dbg !18657 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !18658, metadata !DIExpression()), !dbg !18660
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18662, metadata !DIExpression()), !dbg !18663
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18664
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !18665
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !18666
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !18667
  call void @clear_bit(i64 0, i64* %state.i) #15, !dbg !18668
  ret void, !dbg !18669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_napi_enable(%struct.net_device* %dev) #2 !dbg !18670 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18671, metadata !DIExpression()), !dbg !18672
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !18673, metadata !DIExpression()), !dbg !18674
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18675
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !18676
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !18674
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18677
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 2, !dbg !18678
  call void @napi_enable(%struct.napi_struct* %napi) #13, !dbg !18679
  ret void, !dbg !18680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_set_loopback(%struct.net_device* %dev, i64 %features) #2 !dbg !18681 {
entry:
  %lock.addr.i101 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i101, metadata !8259, metadata !DIExpression()), !dbg !18682
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !9883, metadata !DIExpression()), !dbg !18689
  %flags.addr.i97 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i97, metadata !9891, metadata !DIExpression()), !dbg !18693
  %tmp.i98 = alloca i32, align 4
  %tmp8.i99 = alloca i32, align 4
  %lock.addr.i91 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i91, metadata !9883, metadata !DIExpression()), !dbg !18694
  %flags.addr.i92 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i92, metadata !9891, metadata !DIExpression()), !dbg !18698
  %tmp.i93 = alloca i32, align 4
  %tmp8.i94 = alloca i32, align 4
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !9883, metadata !DIExpression()), !dbg !18699
  %flags.addr.i87 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i87, metadata !9891, metadata !DIExpression()), !dbg !18704
  %tmp.i88 = alloca i32, align 4
  %tmp8.i89 = alloca i32, align 4
  %lock.addr.i81 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i81, metadata !9883, metadata !DIExpression()), !dbg !18705
  %flags.addr.i82 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i82, metadata !9891, metadata !DIExpression()), !dbg !18708
  %tmp.i83 = alloca i32, align 4
  %tmp8.i84 = alloca i32, align 4
  %lock.addr.i76 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i76, metadata !9883, metadata !DIExpression()), !dbg !18709
  %flags.addr.i77 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i77, metadata !9891, metadata !DIExpression()), !dbg !18713
  %tmp.i78 = alloca i32, align 4
  %tmp8.i79 = alloca i32, align 4
  %lock.addr.i74 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i74, metadata !9883, metadata !DIExpression()), !dbg !18714
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !18716
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !18717
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %np = alloca %struct.fe_priv*, align 8
  %flags = alloca i64, align 8
  %miicontrol = alloca i32, align 4
  %err = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy48 = alloca i64, align 8
  %__dummy249 = alloca i64, align 8
  %tmp52 = alloca i32, align 4
  %__dummy56 = alloca i64, align 8
  %__dummy257 = alloca i64, align 8
  %tmp60 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18724, metadata !DIExpression()), !dbg !18725
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !18726, metadata !DIExpression()), !dbg !18727
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !18728, metadata !DIExpression()), !dbg !18729
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18730
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !18731
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !18731
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !18729
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18732, metadata !DIExpression()), !dbg !18733
  call void @llvm.dbg.declare(metadata i32* %miicontrol, metadata !18734, metadata !DIExpression()), !dbg !18735
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18736, metadata !DIExpression()), !dbg !18737
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !18738, metadata !DIExpression()), !dbg !18739
  store i32 0, i32* %retval1, align 4, !dbg !18739
  br label %do.body, !dbg !18740

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !18741

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18742, metadata !DIExpression()), !dbg !18744
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18745, metadata !DIExpression()), !dbg !18744
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18744
  %conv = zext i1 %cmp to i32, !dbg !18744
  store i32 1, i32* %tmp, align 4, !dbg !18744
  %2 = load i32, i32* %tmp, align 4, !dbg !18744
  br label %do.body3, !dbg !18746

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !18747

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !18748

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !18750, metadata !DIExpression()), !dbg !18753
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !18754, metadata !DIExpression()), !dbg !18753
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !18753
  %conv9 = zext i1 %cmp8 to i32, !dbg !18753
  store i32 1, i32* %tmp10, align 4, !dbg !18753
  %3 = load i32, i32* %tmp10, align 4, !dbg !18753
  %call11 = call i64 @arch_local_irq_save() #13, !dbg !18755
  store i64 %call11, i64* %flags, align 8, !dbg !18755
  br label %do.end, !dbg !18755

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !18748

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !18747

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18756, !srcloc !18757
  br label %do.body14, !dbg !18756

do.body14:                                        ; preds = %do.body13
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18758
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 0, !dbg !18758
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18759
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !18760
  %rlock.i = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !18760
  br label %do.end16, !dbg !18758

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !18756

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !18747

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !18746

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !18741

do.end20:                                         ; preds = %do.end19
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18761
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18762
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 10, !dbg !18763
  %9 = load i32, i32* %phyaddr, align 4, !dbg !18763
  %call21 = call i32 @mii_rw(%struct.net_device* %7, i32 %9, i32 0, i32 -1) #13, !dbg !18764
  store i32 %call21, i32* %miicontrol, align 4, !dbg !18765
  %10 = load i64, i64* %features.addr, align 8, !dbg !18766
  %and = and i64 %10, 4398046511104, !dbg !18767
  %tobool = icmp ne i64 %and, 0, !dbg !18767
  br i1 %tobool, label %if.then, label %if.else37, !dbg !18768

if.then:                                          ; preds = %do.end20
  %11 = load i32, i32* %miicontrol, align 4, !dbg !18769
  %and22 = and i32 %11, 16384, !dbg !18770
  %tobool23 = icmp ne i32 %and22, 0, !dbg !18770
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !18771

if.then24:                                        ; preds = %if.then
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18772
  %lock25 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 0, !dbg !18773
  %13 = load i64, i64* %flags, align 8, !dbg !18774
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i76, align 8
  store i64 %13, i64* %flags.addr.i77, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !18775
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !18775
  store i32 1, i32* %tmp.i78, align 4, !dbg !18775
  %14 = load i32, i32* %tmp.i78, align 4, !dbg !18775
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !18776
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !18776
  store i32 1, i32* %tmp8.i79, align 4, !dbg !18776
  %15 = load i32, i32* %tmp8.i79, align 4, !dbg !18776
  %16 = load i64, i64* %flags.addr.i77, align 8, !dbg !18777
  call void @arch_local_irq_restore(i64 %16) #15, !dbg !18777
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18778, !srcloc !10037
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i76, align 8, !dbg !18779
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !18779
  %rlock.i80 = bitcast %union.anon.2* %18 to %struct.raw_spinlock*, !dbg !18779
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18780
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %19, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.47, i64 0, i64 0)) #14, !dbg !18781
  store i32 0, i32* %retval, align 4, !dbg !18782
  br label %return, !dbg !18782

if.end:                                           ; preds = %if.then
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18783
  call void @nv_disable_irq(%struct.net_device* %20) #13, !dbg !18784
  %21 = load i32, i32* %miicontrol, align 4, !dbg !18785
  %or = or i32 %21, 16704, !dbg !18785
  store i32 %or, i32* %miicontrol, align 4, !dbg !18785
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18786
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18787
  %phyaddr26 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 10, !dbg !18788
  %24 = load i32, i32* %phyaddr26, align 4, !dbg !18788
  %25 = load i32, i32* %miicontrol, align 4, !dbg !18789
  %call27 = call i32 @mii_rw(%struct.net_device* %22, i32 %24, i32 0, i32 %25) #13, !dbg !18790
  store i32 %call27, i32* %err, align 4, !dbg !18791
  %26 = load i32, i32* %err, align 4, !dbg !18792
  %tobool28 = icmp ne i32 %26, 0, !dbg !18792
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !18793

if.then29:                                        ; preds = %if.end
  store i32 2, i32* %retval1, align 4, !dbg !18794
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18795
  %lock30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 0, !dbg !18796
  %28 = load i64, i64* %flags, align 8, !dbg !18797
  store %struct.spinlock* %lock30, %struct.spinlock** %lock.addr.i81, align 8
  store i64 %28, i64* %flags.addr.i82, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !18798
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !18798
  store i32 1, i32* %tmp.i83, align 4, !dbg !18798
  %29 = load i32, i32* %tmp.i83, align 4, !dbg !18798
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !18799
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !18799
  store i32 1, i32* %tmp8.i84, align 4, !dbg !18799
  %30 = load i32, i32* %tmp8.i84, align 4, !dbg !18799
  %31 = load i64, i64* %flags.addr.i82, align 8, !dbg !18800
  call void @arch_local_irq_restore(i64 %31) #15, !dbg !18800
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18801, !srcloc !10037
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i81, align 8, !dbg !18802
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !18802
  %rlock.i85 = bitcast %union.anon.2* %33 to %struct.raw_spinlock*, !dbg !18802
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18803
  %call31 = call i32 @phy_init(%struct.net_device* %34) #13, !dbg !18804
  br label %if.end36, !dbg !18805

if.else:                                          ; preds = %if.end
  %35 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18806
  %call32 = call zeroext i1 @netif_running(%struct.net_device* %35) #13, !dbg !18808
  br i1 %call32, label %if.then33, label %if.end34, !dbg !18809

if.then33:                                        ; preds = %if.else
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18810
  call void @nv_force_linkspeed(%struct.net_device* %36, i32 50, i32 1) #13, !dbg !18812
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18813
  call void @netif_carrier_on(%struct.net_device* %37) #13, !dbg !18814
  br label %if.end34, !dbg !18815

if.end34:                                         ; preds = %if.then33, %if.else
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18816
  %lock35 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 0, !dbg !18817
  %39 = load i64, i64* %flags, align 8, !dbg !18818
  store %struct.spinlock* %lock35, %struct.spinlock** %lock.addr.i86, align 8
  store i64 %39, i64* %flags.addr.i87, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !18819
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !18819
  store i32 1, i32* %tmp.i88, align 4, !dbg !18819
  %40 = load i32, i32* %tmp.i88, align 4, !dbg !18819
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !18820
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !18820
  store i32 1, i32* %tmp8.i89, align 4, !dbg !18820
  %41 = load i32, i32* %tmp8.i89, align 4, !dbg !18820
  %42 = load i64, i64* %flags.addr.i87, align 8, !dbg !18821
  call void @arch_local_irq_restore(i64 %42) #15, !dbg !18821
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18822, !srcloc !10037
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !18823
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !18823
  %rlock.i90 = bitcast %union.anon.2* %44 to %struct.raw_spinlock*, !dbg !18823
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18824
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.48, i64 0, i64 0)) #14, !dbg !18825
  br label %if.end36

if.end36:                                         ; preds = %if.end34, %if.then29
  br label %if.end45, !dbg !18826

if.else37:                                        ; preds = %do.end20
  %46 = load i32, i32* %miicontrol, align 4, !dbg !18827
  %and38 = and i32 %46, 16384, !dbg !18828
  %tobool39 = icmp ne i32 %and38, 0, !dbg !18828
  br i1 %tobool39, label %if.end42, label %if.then40, !dbg !18829

if.then40:                                        ; preds = %if.else37
  %47 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18830
  %lock41 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %47, i32 0, i32 0, !dbg !18831
  %48 = load i64, i64* %flags, align 8, !dbg !18832
  store %struct.spinlock* %lock41, %struct.spinlock** %lock.addr.i91, align 8
  store i64 %48, i64* %flags.addr.i92, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !18833
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !18833
  store i32 1, i32* %tmp.i93, align 4, !dbg !18833
  %49 = load i32, i32* %tmp.i93, align 4, !dbg !18833
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !18834
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !18834
  store i32 1, i32* %tmp8.i94, align 4, !dbg !18834
  %50 = load i32, i32* %tmp8.i94, align 4, !dbg !18834
  %51 = load i64, i64* %flags.addr.i92, align 8, !dbg !18835
  call void @arch_local_irq_restore(i64 %51) #15, !dbg !18835
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18836, !srcloc !10037
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i91, align 8, !dbg !18837
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !18837
  %rlock.i95 = bitcast %union.anon.2* %53 to %struct.raw_spinlock*, !dbg !18837
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18838
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %54, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0)) #14, !dbg !18839
  store i32 0, i32* %retval, align 4, !dbg !18840
  br label %return, !dbg !18840

if.end42:                                         ; preds = %if.else37
  %55 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18841
  call void @nv_disable_irq(%struct.net_device* %55) #13, !dbg !18842
  %56 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18843
  %lock43 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %56, i32 0, i32 0, !dbg !18844
  %57 = load i64, i64* %flags, align 8, !dbg !18845
  store %struct.spinlock* %lock43, %struct.spinlock** %lock.addr.i96, align 8
  store i64 %57, i64* %flags.addr.i97, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !18846
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !18846
  store i32 1, i32* %tmp.i98, align 4, !dbg !18846
  %58 = load i32, i32* %tmp.i98, align 4, !dbg !18846
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !18847
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !18847
  store i32 1, i32* %tmp8.i99, align 4, !dbg !18847
  %59 = load i32, i32* %tmp8.i99, align 4, !dbg !18847
  %60 = load i64, i64* %flags.addr.i97, align 8, !dbg !18848
  call void @arch_local_irq_restore(i64 %60) #15, !dbg !18848
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18849, !srcloc !10037
  %61 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !18850
  %62 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %61, i32 0, i32 0, !dbg !18850
  %rlock.i100 = bitcast %union.anon.2* %62 to %struct.raw_spinlock*, !dbg !18850
  %63 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18851
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %63, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.50, i64 0, i64 0)) #14, !dbg !18852
  %64 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18853
  %call44 = call i32 @phy_init(%struct.net_device* %64) #13, !dbg !18854
  br label %if.end45

if.end45:                                         ; preds = %if.end42, %if.end36
  call void @msleep(i32 500) #13, !dbg !18855
  br label %do.body46, !dbg !18856

do.body46:                                        ; preds = %if.end45
  br label %do.body47, !dbg !18857

do.body47:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata i64* %__dummy48, metadata !18858, metadata !DIExpression()), !dbg !18860
  call void @llvm.dbg.declare(metadata i64* %__dummy249, metadata !18861, metadata !DIExpression()), !dbg !18860
  %cmp50 = icmp eq i64* %__dummy48, %__dummy249, !dbg !18860
  %conv51 = zext i1 %cmp50 to i32, !dbg !18860
  store i32 1, i32* %tmp52, align 4, !dbg !18860
  %65 = load i32, i32* %tmp52, align 4, !dbg !18860
  br label %do.body53, !dbg !18862

do.body53:                                        ; preds = %do.body47
  br label %do.body54, !dbg !18863

do.body54:                                        ; preds = %do.body53
  br label %do.body55, !dbg !18864

do.body55:                                        ; preds = %do.body54
  call void @llvm.dbg.declare(metadata i64* %__dummy56, metadata !18866, metadata !DIExpression()), !dbg !18869
  call void @llvm.dbg.declare(metadata i64* %__dummy257, metadata !18870, metadata !DIExpression()), !dbg !18869
  %cmp58 = icmp eq i64* %__dummy56, %__dummy257, !dbg !18869
  %conv59 = zext i1 %cmp58 to i32, !dbg !18869
  store i32 1, i32* %tmp60, align 4, !dbg !18869
  %66 = load i32, i32* %tmp60, align 4, !dbg !18869
  %call61 = call i64 @arch_local_irq_save() #13, !dbg !18871
  store i64 %call61, i64* %flags, align 8, !dbg !18871
  br label %do.end62, !dbg !18871

do.end62:                                         ; preds = %do.body55
  br label %do.end63, !dbg !18864

do.end63:                                         ; preds = %do.end62
  br label %do.body64, !dbg !18863

do.body64:                                        ; preds = %do.end63
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18872, !srcloc !18873
  br label %do.body65, !dbg !18872

do.body65:                                        ; preds = %do.body64
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18874
  %lock66 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 0, !dbg !18874
  store %struct.spinlock* %lock66, %struct.spinlock** %lock.addr.i101, align 8
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i101, align 8, !dbg !18875
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !18876
  %rlock.i102 = bitcast %union.anon.2* %69 to %struct.raw_spinlock*, !dbg !18876
  br label %do.end68, !dbg !18874

do.end68:                                         ; preds = %do.body65
  br label %do.end69, !dbg !18872

do.end69:                                         ; preds = %do.end68
  br label %do.end70, !dbg !18863

do.end70:                                         ; preds = %do.end69
  br label %do.end71, !dbg !18862

do.end71:                                         ; preds = %do.end70
  br label %do.end72, !dbg !18857

do.end72:                                         ; preds = %do.end71
  %70 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18877
  call void @nv_enable_irq(%struct.net_device* %70) #13, !dbg !18878
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18879
  %lock73 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 0, !dbg !18880
  %72 = load i64, i64* %flags, align 8, !dbg !18881
  store %struct.spinlock* %lock73, %struct.spinlock** %lock.addr.i74, align 8
  store i64 %72, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !18882
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !18882
  store i32 1, i32* %tmp.i, align 4, !dbg !18882
  %73 = load i32, i32* %tmp.i, align 4, !dbg !18882
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !18883
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !18883
  store i32 1, i32* %tmp8.i, align 4, !dbg !18883
  %74 = load i32, i32* %tmp8.i, align 4, !dbg !18883
  %75 = load i64, i64* %flags.addr.i, align 8, !dbg !18884
  call void @arch_local_irq_restore(i64 %75) #15, !dbg !18884
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18885, !srcloc !10037
  %76 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i74, align 8, !dbg !18886
  %77 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %76, i32 0, i32 0, !dbg !18886
  %rlock.i75 = bitcast %union.anon.2* %77 to %struct.raw_spinlock*, !dbg !18886
  %78 = load i32, i32* %retval1, align 4, !dbg !18887
  store i32 %78, i32* %retval, align 4, !dbg !18888
  br label %return, !dbg !18888

return:                                           ; preds = %do.end72, %if.then40, %if.then24
  %79 = load i32, i32* %retval, align 4, !dbg !18889
  ret i32 %79, !dbg !18889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_nic_irq_test(i32 %foo, i8* %data) #2 !dbg !18890 {
entry:
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !9483, metadata !DIExpression()), !dbg !18891
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !18893
  %retval = alloca i32, align 4
  %foo.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %events = alloca i32, align 4
  store i32 %foo, i32* %foo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %foo.addr, metadata !18895, metadata !DIExpression()), !dbg !18896
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18897, metadata !DIExpression()), !dbg !18898
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !18899, metadata !DIExpression()), !dbg !18900
  %0 = load i8*, i8** %data.addr, align 8, !dbg !18901
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !18902
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !18900
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !18903, metadata !DIExpression()), !dbg !18904
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18905
  %call = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !18906
  %3 = bitcast i8* %call to %struct.fe_priv*, !dbg !18906
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !18904
  call void @llvm.dbg.declare(metadata i8** %base, metadata !18907, metadata !DIExpression()), !dbg !18908
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18909
  %call1 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !18910
  store i8* %call1, i8** %base, align 8, !dbg !18908
  call void @llvm.dbg.declare(metadata i32* %events, metadata !18911, metadata !DIExpression()), !dbg !18912
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18913
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 69, !dbg !18915
  %6 = load i32, i32* %msi_flags, align 4, !dbg !18915
  %and = and i32 %6, 128, !dbg !18916
  %tobool = icmp ne i32 %and, 0, !dbg !18916
  br i1 %tobool, label %if.else, label %if.then, !dbg !18917

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %base, align 8, !dbg !18918
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !18920
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !18921
  %and3 = and i32 %call2, 33791, !dbg !18922
  store i32 %and3, i32* %events, align 4, !dbg !18923
  %8 = load i32, i32* %events, align 4, !dbg !18924
  %and4 = and i32 %8, 32, !dbg !18925
  %9 = load i8*, i8** %base, align 8, !dbg !18926
  %add.ptr5 = getelementptr i8, i8* %9, i64 0, !dbg !18927
  call void @writel(i32 %and4, i8* %add.ptr5) #13, !dbg !18928
  br label %if.end, !dbg !18929

if.else:                                          ; preds = %entry
  %10 = load i8*, i8** %base, align 8, !dbg !18930
  %add.ptr6 = getelementptr i8, i8* %10, i64 1008, !dbg !18932
  %call7 = call i32 @readl(i8* %add.ptr6) #13, !dbg !18933
  %and8 = and i32 %call7, 33791, !dbg !18934
  store i32 %and8, i32* %events, align 4, !dbg !18935
  %11 = load i32, i32* %events, align 4, !dbg !18936
  %and9 = and i32 %11, 32, !dbg !18937
  %12 = load i8*, i8** %base, align 8, !dbg !18938
  %add.ptr10 = getelementptr i8, i8* %12, i64 1008, !dbg !18939
  call void @writel(i32 %and9, i8* %add.ptr10) #13, !dbg !18940
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i8*, i8** %base, align 8, !dbg !18941
  call void @pci_push(i8* %13) #13, !dbg !18942
  %14 = load i32, i32* %events, align 4, !dbg !18943
  %and11 = and i32 %14, 32, !dbg !18945
  %tobool12 = icmp ne i32 %and11, 0, !dbg !18945
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !18946

if.then13:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !18947
  br label %return, !dbg !18947

if.end14:                                         ; preds = %if.end
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18948
  call void @nv_msi_workaround(%struct.fe_priv* %15) #13, !dbg !18949
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18950
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 0, !dbg !18951
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18952, !srcloc !9601
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18953
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !18953
  %rlock.i = bitcast %union.anon.2* %18 to %struct.raw_spinlock*, !dbg !18953
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18954
  %intr_test = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 16, !dbg !18955
  store i32 1, i32* %intr_test, align 4, !dbg !18956
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !18957
  %lock15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 0, !dbg !18958
  store %struct.spinlock* %lock15, %struct.spinlock** %lock.addr.i16, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18959, !srcloc !9681
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !18960
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !18960
  %rlock.i17 = bitcast %union.anon.2* %22 to %struct.raw_spinlock*, !dbg !18960
  store i32 1, i32* %retval, align 4, !dbg !18961
  br label %return, !dbg !18961

return:                                           ; preds = %if.end14, %if.then13
  %23 = load i32, i32* %retval, align 4, !dbg !18962
  ret i32 %23, !dbg !18962
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msix_range(%struct.pci_dev*, %struct.msix_entry*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !18963 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !18967, metadata !DIExpression()), !dbg !18968
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !18969, metadata !DIExpression()), !dbg !18970
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !18971, metadata !DIExpression()), !dbg !18972
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18973, metadata !DIExpression()), !dbg !18974
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !18975, metadata !DIExpression()), !dbg !18976
  %0 = load i32, i32* %irq.addr, align 4, !dbg !18977
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !18978
  %2 = load i64, i64* %flags.addr, align 8, !dbg !18979
  %3 = load i8*, i8** %name.addr, align 8, !dbg !18980
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !18981
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #13, !dbg !18982
  ret i32 %call, !dbg !18983
}

; Function Attrs: noredzone
declare dso_local void @pci_disable_msix(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_msix_vector_map(%struct.net_device* %dev, i32 %vector, i32 %irqmask) #2 !dbg !18984 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vector.addr = alloca i32, align 4
  %irqmask.addr = alloca i32, align 4
  %base = alloca i8*, align 8
  %i = alloca i32, align 4
  %msixmap = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18987, metadata !DIExpression()), !dbg !18988
  store i32 %vector, i32* %vector.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vector.addr, metadata !18989, metadata !DIExpression()), !dbg !18990
  store i32 %irqmask, i32* %irqmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irqmask.addr, metadata !18991, metadata !DIExpression()), !dbg !18992
  call void @llvm.dbg.declare(metadata i8** %base, metadata !18993, metadata !DIExpression()), !dbg !18994
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18995
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !18996
  store i8* %call, i8** %base, align 8, !dbg !18994
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18997, metadata !DIExpression()), !dbg !18998
  call void @llvm.dbg.declare(metadata i32* %msixmap, metadata !18999, metadata !DIExpression()), !dbg !19000
  store i32 0, i32* %msixmap, align 4, !dbg !19000
  store i32 0, i32* %i, align 4, !dbg !19001
  br label %for.cond, !dbg !19003

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !19004
  %cmp = icmp slt i32 %1, 8, !dbg !19006
  br i1 %cmp, label %for.body, label %for.end, !dbg !19007

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %irqmask.addr, align 4, !dbg !19008
  %3 = load i32, i32* %i, align 4, !dbg !19011
  %shr = lshr i32 %2, %3, !dbg !19012
  %and = and i32 %shr, 1, !dbg !19013
  %tobool = icmp ne i32 %and, 0, !dbg !19013
  br i1 %tobool, label %if.then, label %if.end, !dbg !19014

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %vector.addr, align 4, !dbg !19015
  %5 = load i32, i32* %i, align 4, !dbg !19016
  %shl = shl i32 %5, 2, !dbg !19017
  %shl1 = shl i32 %4, %shl, !dbg !19018
  %6 = load i32, i32* %msixmap, align 4, !dbg !19019
  %or = or i32 %6, %shl1, !dbg !19019
  store i32 %or, i32* %msixmap, align 4, !dbg !19019
  br label %if.end, !dbg !19020

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !19021

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !19022
  %inc = add i32 %7, 1, !dbg !19022
  store i32 %inc, i32* %i, align 4, !dbg !19022
  br label %for.cond, !dbg !19023, !llvm.loop !19024

for.end:                                          ; preds = %for.cond
  %8 = load i8*, i8** %base, align 8, !dbg !19026
  %add.ptr = getelementptr i8, i8* %8, i64 992, !dbg !19027
  %call2 = call i32 @readl(i8* %add.ptr) #13, !dbg !19028
  %9 = load i32, i32* %msixmap, align 4, !dbg !19029
  %or3 = or i32 %call2, %9, !dbg !19030
  %10 = load i8*, i8** %base, align 8, !dbg !19031
  %add.ptr4 = getelementptr i8, i8* %10, i64 992, !dbg !19032
  call void @writel(i32 %or3, i8* %add.ptr4) #13, !dbg !19033
  store i32 0, i32* %msixmap, align 4, !dbg !19034
  store i32 0, i32* %i, align 4, !dbg !19035
  br label %for.cond5, !dbg !19037

for.cond5:                                        ; preds = %for.inc16, %for.end
  %11 = load i32, i32* %i, align 4, !dbg !19038
  %cmp6 = icmp slt i32 %11, 8, !dbg !19040
  br i1 %cmp6, label %for.body7, label %for.end18, !dbg !19041

for.body7:                                        ; preds = %for.cond5
  %12 = load i32, i32* %irqmask.addr, align 4, !dbg !19042
  %13 = load i32, i32* %i, align 4, !dbg !19045
  %add = add i32 %13, 8, !dbg !19046
  %shr8 = lshr i32 %12, %add, !dbg !19047
  %and9 = and i32 %shr8, 1, !dbg !19048
  %tobool10 = icmp ne i32 %and9, 0, !dbg !19048
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !19049

if.then11:                                        ; preds = %for.body7
  %14 = load i32, i32* %vector.addr, align 4, !dbg !19050
  %15 = load i32, i32* %i, align 4, !dbg !19051
  %shl12 = shl i32 %15, 2, !dbg !19052
  %shl13 = shl i32 %14, %shl12, !dbg !19053
  %16 = load i32, i32* %msixmap, align 4, !dbg !19054
  %or14 = or i32 %16, %shl13, !dbg !19054
  store i32 %or14, i32* %msixmap, align 4, !dbg !19054
  br label %if.end15, !dbg !19055

if.end15:                                         ; preds = %if.then11, %for.body7
  br label %for.inc16, !dbg !19056

for.inc16:                                        ; preds = %if.end15
  %17 = load i32, i32* %i, align 4, !dbg !19057
  %inc17 = add i32 %17, 1, !dbg !19057
  store i32 %inc17, i32* %i, align 4, !dbg !19057
  br label %for.cond5, !dbg !19058, !llvm.loop !19059

for.end18:                                        ; preds = %for.cond5
  %18 = load i8*, i8** %base, align 8, !dbg !19061
  %add.ptr19 = getelementptr i8, i8* %18, i64 996, !dbg !19062
  %call20 = call i32 @readl(i8* %add.ptr19) #13, !dbg !19063
  %19 = load i32, i32* %msixmap, align 4, !dbg !19064
  %or21 = or i32 %call20, %19, !dbg !19065
  %20 = load i8*, i8** %base, align 8, !dbg !19066
  %add.ptr22 = getelementptr i8, i8* %20, i64 996, !dbg !19067
  call void @writel(i32 %or21, i8* %add.ptr22) #13, !dbg !19068
  ret void, !dbg !19069
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_msi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #2 !dbg !19070 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !19071, metadata !DIExpression()), !dbg !19072
  br label %do.body, !dbg !19073

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19074
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !19074
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #13, !dbg !19074
  %lnot = xor i1 %call, true, !dbg !19074
  %lnot1 = xor i1 %lnot, true, !dbg !19074
  %lnot2 = xor i1 %lnot1, true, !dbg !19074
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !19074
  %conv = sext i32 %lnot.ext to i64, !dbg !19074
  %tobool = icmp ne i64 %conv, 0, !dbg !19074
  br i1 %tobool, label %if.then, label %if.end, !dbg !19077

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !19074

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !19078

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !19080

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !19078

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.46, i64 0, i64 0), i32 509, i32 0, i64 12) #10, !dbg !19082, !srcloc !19084
  br label %do.end6, !dbg !19082

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !19078

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 281) #10, !dbg !19085, !srcloc !19088
  unreachable, !dbg !19089

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !19078

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !19078

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !19077

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19090, !srcloc !19091
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19092
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !19093
  call void @clear_bit(i64 0, i64* %state11) #13, !dbg !19094
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19095
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !19096
  call void @clear_bit(i64 3, i64* %state12) #13, !dbg !19097
  ret void, !dbg !19098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_disable_irq(%struct.net_device* %dev) #2 !dbg !19099 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19100, metadata !DIExpression()), !dbg !19101
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !19102, metadata !DIExpression()), !dbg !19103
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19104
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !19105
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !19103
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19106
  %call1 = call i32 @using_multi_irqs(%struct.net_device* %1) #13, !dbg !19108
  %tobool = icmp ne i32 %call1, 0, !dbg !19108
  br i1 %tobool, label %if.else4, label %if.then, !dbg !19109

if.then:                                          ; preds = %entry
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19110
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 69, !dbg !19113
  %3 = load i32, i32* %msi_flags, align 4, !dbg !19113
  %and = and i32 %3, 128, !dbg !19114
  %tobool2 = icmp ne i32 %and, 0, !dbg !19114
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !19115

if.then3:                                         ; preds = %if.then
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19116
  %msi_x_entry = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 70, !dbg !19117
  %arrayidx = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry, i64 0, i64 0, !dbg !19116
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 0, !dbg !19118
  %5 = load i32, i32* %vector, align 8, !dbg !19118
  call void @disable_irq(i32 %5) #13, !dbg !19119
  br label %if.end, !dbg !19119

if.else:                                          ; preds = %if.then
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19120
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 20, !dbg !19121
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !19121
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 43, !dbg !19122
  %8 = load i32, i32* %irq, align 4, !dbg !19122
  call void @disable_irq(i32 %8) #13, !dbg !19123
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end14, !dbg !19124

if.else4:                                         ; preds = %entry
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19125
  %msi_x_entry5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 70, !dbg !19127
  %arrayidx6 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry5, i64 0, i64 0, !dbg !19125
  %vector7 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx6, i32 0, i32 0, !dbg !19128
  %10 = load i32, i32* %vector7, align 8, !dbg !19128
  call void @disable_irq(i32 %10) #13, !dbg !19129
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19130
  %msi_x_entry8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 70, !dbg !19131
  %arrayidx9 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry8, i64 0, i64 1, !dbg !19130
  %vector10 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx9, i32 0, i32 0, !dbg !19132
  %12 = load i32, i32* %vector10, align 8, !dbg !19132
  call void @disable_irq(i32 %12) #13, !dbg !19133
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19134
  %msi_x_entry11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 70, !dbg !19135
  %arrayidx12 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry11, i64 0, i64 2, !dbg !19134
  %vector13 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx12, i32 0, i32 0, !dbg !19136
  %14 = load i32, i32* %vector13, align 8, !dbg !19136
  call void @disable_irq(i32 %14) #13, !dbg !19137
  br label %if.end14

if.end14:                                         ; preds = %if.else4, %if.end
  ret void, !dbg !19138
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_enable_irq(%struct.net_device* %dev) #2 !dbg !19139 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19140, metadata !DIExpression()), !dbg !19141
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !19142, metadata !DIExpression()), !dbg !19143
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19144
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !19145
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !19143
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19146
  %call1 = call i32 @using_multi_irqs(%struct.net_device* %1) #13, !dbg !19148
  %tobool = icmp ne i32 %call1, 0, !dbg !19148
  br i1 %tobool, label %if.else4, label %if.then, !dbg !19149

if.then:                                          ; preds = %entry
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19150
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 69, !dbg !19153
  %3 = load i32, i32* %msi_flags, align 4, !dbg !19153
  %and = and i32 %3, 128, !dbg !19154
  %tobool2 = icmp ne i32 %and, 0, !dbg !19154
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !19155

if.then3:                                         ; preds = %if.then
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19156
  %msi_x_entry = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 70, !dbg !19157
  %arrayidx = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry, i64 0, i64 0, !dbg !19156
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 0, !dbg !19158
  %5 = load i32, i32* %vector, align 8, !dbg !19158
  call void @enable_irq(i32 %5) #13, !dbg !19159
  br label %if.end, !dbg !19159

if.else:                                          ; preds = %if.then
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19160
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 20, !dbg !19161
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !19161
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 43, !dbg !19162
  %8 = load i32, i32* %irq, align 4, !dbg !19162
  call void @enable_irq(i32 %8) #13, !dbg !19163
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end14, !dbg !19164

if.else4:                                         ; preds = %entry
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19165
  %msi_x_entry5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 70, !dbg !19167
  %arrayidx6 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry5, i64 0, i64 0, !dbg !19165
  %vector7 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx6, i32 0, i32 0, !dbg !19168
  %10 = load i32, i32* %vector7, align 8, !dbg !19168
  call void @enable_irq(i32 %10) #13, !dbg !19169
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19170
  %msi_x_entry8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 70, !dbg !19171
  %arrayidx9 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry8, i64 0, i64 1, !dbg !19170
  %vector10 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx9, i32 0, i32 0, !dbg !19172
  %12 = load i32, i32* %vector10, align 8, !dbg !19172
  call void @enable_irq(i32 %12) #13, !dbg !19173
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19174
  %msi_x_entry11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 70, !dbg !19175
  %arrayidx12 = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry11, i64 0, i64 2, !dbg !19174
  %vector13 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx12, i32 0, i32 0, !dbg !19176
  %14 = load i32, i32* %vector13, align 8, !dbg !19176
  call void @enable_irq(i32 %14) #13, !dbg !19177
  br label %if.end14

if.end14:                                         ; preds = %if.else4, %if.end
  ret void, !dbg !19178
}

; Function Attrs: noredzone
declare dso_local void @disable_irq(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_napi_disable(%struct.net_device* %dev) #2 !dbg !19179 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19180, metadata !DIExpression()), !dbg !19181
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !19182, metadata !DIExpression()), !dbg !19183
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19184
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !19185
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !19183
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19186
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 2, !dbg !19187
  call void @napi_disable(%struct.napi_struct* %napi) #13, !dbg !19188
  ret void, !dbg !19189
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #2 !dbg !19190 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !19191, metadata !DIExpression()), !dbg !19193
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19195, metadata !DIExpression()), !dbg !19196
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19197
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !19198
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !19199
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !19200
  call void @set_bit(i64 0, i64* %state.i) #15, !dbg !19201
  ret void, !dbg !19202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_free_irq(%struct.net_device* %dev) #2 !dbg !19203 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19204, metadata !DIExpression()), !dbg !19205
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !19206, metadata !DIExpression()), !dbg !19207
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19208
  %call = call %struct.fe_priv* @get_nvpriv(%struct.net_device* %0) #13, !dbg !19209
  store %struct.fe_priv* %call, %struct.fe_priv** %np, align 8, !dbg !19207
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19210, metadata !DIExpression()), !dbg !19211
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19212
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 69, !dbg !19214
  %2 = load i32, i32* %msi_flags, align 4, !dbg !19214
  %and = and i32 %2, 128, !dbg !19215
  %tobool = icmp ne i32 %and, 0, !dbg !19215
  br i1 %tobool, label %if.then, label %if.else, !dbg !19216

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !19217
  br label %for.cond, !dbg !19220

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !19221
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19223
  %msi_flags1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 69, !dbg !19224
  %5 = load i32, i32* %msi_flags1, align 4, !dbg !19224
  %and2 = and i32 %5, 15, !dbg !19225
  %cmp = icmp ult i32 %3, %and2, !dbg !19226
  br i1 %cmp, label %for.body, label %for.end, !dbg !19227

for.body:                                         ; preds = %for.cond
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19228
  %msi_x_entry = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 70, !dbg !19229
  %7 = load i32, i32* %i, align 4, !dbg !19230
  %idxprom = sext i32 %7 to i64, !dbg !19228
  %arrayidx = getelementptr [8 x %struct.msix_entry], [8 x %struct.msix_entry]* %msi_x_entry, i64 0, i64 %idxprom, !dbg !19228
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 0, !dbg !19231
  %8 = load i32, i32* %vector, align 8, !dbg !19231
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19232
  %10 = bitcast %struct.net_device* %9 to i8*, !dbg !19232
  %call3 = call i8* @free_irq(i32 %8, i8* %10) #13, !dbg !19233
  br label %for.inc, !dbg !19233

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !19234
  %inc = add i32 %11, 1, !dbg !19234
  store i32 %inc, i32* %i, align 4, !dbg !19234
  br label %for.cond, !dbg !19235, !llvm.loop !19236

for.end:                                          ; preds = %for.cond
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19238
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 20, !dbg !19239
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !19239
  call void @pci_disable_msix(%struct.pci_dev* %13) #13, !dbg !19240
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19241
  %msi_flags4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 69, !dbg !19242
  %15 = load i32, i32* %msi_flags4, align 4, !dbg !19243
  %and5 = and i32 %15, -129, !dbg !19243
  store i32 %and5, i32* %msi_flags4, align 4, !dbg !19243
  br label %if.end15, !dbg !19244

if.else:                                          ; preds = %entry
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19245
  %pci_dev6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 20, !dbg !19247
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev6, align 8, !dbg !19247
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 43, !dbg !19248
  %18 = load i32, i32* %irq, align 4, !dbg !19248
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19249
  %20 = bitcast %struct.net_device* %19 to i8*, !dbg !19249
  %call7 = call i8* @free_irq(i32 %18, i8* %20) #13, !dbg !19250
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19251
  %msi_flags8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 69, !dbg !19253
  %22 = load i32, i32* %msi_flags8, align 4, !dbg !19253
  %and9 = and i32 %22, 64, !dbg !19254
  %tobool10 = icmp ne i32 %and9, 0, !dbg !19254
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !19255

if.then11:                                        ; preds = %if.else
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19256
  %pci_dev12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 20, !dbg !19258
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev12, align 8, !dbg !19258
  call void @pci_disable_msi(%struct.pci_dev* %24) #13, !dbg !19259
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19260
  %msi_flags13 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 69, !dbg !19261
  %26 = load i32, i32* %msi_flags13, align 4, !dbg !19262
  %and14 = and i32 %26, -65, !dbg !19262
  store i32 %and14, i32* %msi_flags13, align 4, !dbg !19262
  br label %if.end, !dbg !19263

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %for.end
  ret void, !dbg !19264
}

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #2 !dbg !19265 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19268, metadata !DIExpression()), !dbg !19269
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19270
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !19271
  %1 = load i32, i32* %len, align 8, !dbg !19271
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19272
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !19273
  %3 = load i32, i32* %data_len, align 4, !dbg !19273
  %sub = sub i32 %1, %3, !dbg !19274
  ret i32 %sub, !dbg !19275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #2 !dbg !19276 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19279, metadata !DIExpression()), !dbg !19280
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19281
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !19282
  %1 = load i32, i32* %bv_len, align 8, !dbg !19282
  ret i32 %1, !dbg !19283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_get_empty_tx_slots(%struct.fe_priv* %np) #2 !dbg !19284 {
entry:
  %np.addr = alloca %struct.fe_priv*, align 8
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !19287, metadata !DIExpression()), !dbg !19288
  %0 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19289
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %0, i32 0, i32 62, !dbg !19290
  %1 = load i32, i32* %tx_ring_size, align 4, !dbg !19290
  %conv = sext i32 %1 to i64, !dbg !19289
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19291
  %tx_ring_size1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 62, !dbg !19292
  %3 = load i32, i32* %tx_ring_size1, align 4, !dbg !19292
  %conv2 = sext i32 %3 to i64, !dbg !19291
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19293
  %put_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 57, !dbg !19294
  %5 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx, align 8, !dbg !19294
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19295
  %get_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 56, !dbg !19296
  %7 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx, align 8, !dbg !19296
  %sub.ptr.lhs.cast = ptrtoint %struct.nv_skb_map* %5 to i64, !dbg !19297
  %sub.ptr.rhs.cast = ptrtoint %struct.nv_skb_map* %7 to i64, !dbg !19297
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19297
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !19297
  %add = add i64 %conv2, %sub.ptr.div, !dbg !19298
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19299
  %tx_ring_size3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 62, !dbg !19300
  %9 = load i32, i32* %tx_ring_size3, align 4, !dbg !19300
  %conv4 = sext i32 %9 to i64, !dbg !19299
  %rem = srem i64 %add, %conv4, !dbg !19301
  %sub = sub i64 %conv, %rem, !dbg !19302
  %conv5 = trunc i64 %sub to i32, !dbg !19303
  ret i32 %conv5, !dbg !19304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @skb_frag_dma_map(%struct.device* %dev, %struct.bio_vec* %frag, i64 %offset, i64 %size, i32 %dir) #2 !dbg !19305 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19308, metadata !DIExpression()), !dbg !19309
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19310, metadata !DIExpression()), !dbg !19311
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !19312, metadata !DIExpression()), !dbg !19313
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19314, metadata !DIExpression()), !dbg !19315
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !19316, metadata !DIExpression()), !dbg !19317
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19318
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19318
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %1) #13, !dbg !19318
  %2 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19318
  %call1 = call i32 @skb_frag_off(%struct.bio_vec* %2) #13, !dbg !19318
  %conv = zext i32 %call1 to i64, !dbg !19318
  %3 = load i64, i64* %offset.addr, align 8, !dbg !19318
  %add = add i64 %conv, %3, !dbg !19318
  %4 = load i64, i64* %size.addr, align 8, !dbg !19318
  %5 = load i32, i32* %dir.addr, align 4, !dbg !19318
  %call2 = call i64 @dma_map_page_attrs(%struct.device* %0, %struct.page* %call, i64 %add, i64 %4, i32 %5, i64 0) #13, !dbg !19318
  ret i64 %call2, !dbg !19319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_gso(%struct.sk_buff* %skb) #2 !dbg !19320 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19321, metadata !DIExpression()), !dbg !19322
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19323
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #13, !dbg !19323
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !19324
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 4, !dbg !19324
  %2 = load i16, i16* %gso_size, align 4, !dbg !19324
  %tobool = icmp ne i16 %2, 0, !dbg !19323
  ret i1 %tobool, !dbg !19325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_sent_queue(%struct.net_device* %dev, i32 %bytes) #2 !dbg !19326 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19327, metadata !DIExpression()), !dbg !19328
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !19329, metadata !DIExpression()), !dbg !19330
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19331
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !19332
  %1 = load i32, i32* %bytes.addr, align 4, !dbg !19333
  call void @netdev_tx_sent_queue(%struct.netdev_queue* %call, i32 %1) #13, !dbg !19334
  ret void, !dbg !19335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_tx_timestamp(%struct.sk_buff* %skb) #2 !dbg !19336 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19337, metadata !DIExpression()), !dbg !19338
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19339
  call void @skb_clone_tx_timestamp(%struct.sk_buff* %0) #13, !dbg !19340
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19341
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #13, !dbg !19341
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !19343
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 3, !dbg !19343
  %3 = load i8, i8* %tx_flags, align 1, !dbg !19343
  %conv = zext i8 %3 to i32, !dbg !19341
  %and = and i32 %conv, 2, !dbg !19344
  %tobool = icmp ne i32 %and, 0, !dbg !19344
  br i1 %tobool, label %if.then, label %if.end, !dbg !19345

if.then:                                          ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19346
  call void @skb_tstamp_tx(%struct.sk_buff* %4, %struct.skb_shared_hwtstamps* null) #13, !dbg !19347
  br label %if.end, !dbg !19347

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #2 !dbg !19349 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19350, metadata !DIExpression()), !dbg !19351
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19352
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !19353
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #13, !dbg !19354
  ret i1 %call1, !dbg !19355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netdev_xmit_more() #2 !dbg !19356 {
entry:
  %tmp = alloca i8, align 1
  %pscr_ret__ = alloca i8, align 1
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i8, align 1
  %tmp1 = alloca i8, align 1
  %tmp3 = alloca i8, align 1
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0)) #13, !dbg !19357
  call void @llvm.dbg.declare(metadata i8* %pscr_ret__, metadata !19359, metadata !DIExpression()), !dbg !19361
  br label %do.body, !dbg !19361

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !19362, metadata !DIExpression()), !dbg !19364
  store i8* null, i8** %__vpp_verify, align 8, !dbg !19364
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !19364
  br label %do.end, !dbg !19364

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %pfo_val__, metadata !19365, metadata !DIExpression()), !dbg !19367
  %1 = call i8 asm "movb $1, $0", "=q,*m,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds (%struct.softnet_data, %struct.softnet_data* @softnet_data, i32 0, i32 8, i32 1)) #9, !dbg !19367, !srcloc !19368
  store i8 %1, i8* %pfo_val__, align 1, !dbg !19367
  %2 = load i8, i8* %pfo_val__, align 1, !dbg !19367
  %conv = zext i8 %2 to i64, !dbg !19367
  %conv2 = trunc i64 %conv to i8, !dbg !19367
  store i8 %conv2, i8* %tmp1, align 1, !dbg !19367
  %3 = load i8, i8* %tmp1, align 1, !dbg !19367
  store i8 %3, i8* %pscr_ret__, align 1, !dbg !19361
  %4 = load i8, i8* %pscr_ret__, align 1, !dbg !19361
  store i8 %4, i8* %tmp3, align 1, !dbg !19361
  %5 = load i8, i8* %tmp3, align 1, !dbg !19361
  store i8 %5, i8* %tmp, align 1, !dbg !19357
  %6 = load i8, i8* %tmp, align 1, !dbg !19357
  %tobool = icmp ne i8 %6, 0, !dbg !19369
  ret i1 %tobool, !dbg !19370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #2 !dbg !19371 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19374, metadata !DIExpression()), !dbg !19375
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19376
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !19377
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !19377
  ret %struct.page* %1, !dbg !19378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #2 !dbg !19379 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19380, metadata !DIExpression()), !dbg !19381
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19382
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !19383
  %1 = load i32, i32* %bv_offset, align 4, !dbg !19383
  ret i32 %1, !dbg !19384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_sent_queue(%struct.netdev_queue* %dev_queue, i32 %bytes) #2 !dbg !19385 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !19388, metadata !DIExpression()), !dbg !19389
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !19390, metadata !DIExpression()), !dbg !19391
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19392
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 11, !dbg !19393
  %1 = load i32, i32* %bytes.addr, align 4, !dbg !19394
  call void @dql_queued(%struct.dql* %dql, i32 %1) #13, !dbg !19395
  %2 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19396
  %dql1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %2, i32 0, i32 11, !dbg !19396
  %call = call i32 @dql_avail(%struct.dql* %dql1) #13, !dbg !19396
  %cmp = icmp sge i32 %call, 0, !dbg !19396
  %lnot = xor i1 %cmp, true, !dbg !19396
  %lnot2 = xor i1 %lnot, true, !dbg !19396
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !19396
  %conv = sext i32 %lnot.ext to i64, !dbg !19396
  %tobool = icmp ne i64 %conv, 0, !dbg !19396
  br i1 %tobool, label %if.then, label %if.end, !dbg !19398

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !19399

if.end:                                           ; preds = %entry
  %3 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19400
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %3, i32 0, i32 10, !dbg !19401
  call void @set_bit(i64 1, i64* %state) #13, !dbg !19402
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19403, !srcloc !19404
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19405
  %dql3 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 11, !dbg !19405
  %call4 = call i32 @dql_avail(%struct.dql* %dql3) #13, !dbg !19405
  %cmp5 = icmp sge i32 %call4, 0, !dbg !19405
  %lnot7 = xor i1 %cmp5, true, !dbg !19405
  %lnot9 = xor i1 %lnot7, true, !dbg !19405
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !19405
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !19405
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !19405
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !19407

if.then13:                                        ; preds = %if.end
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19408
  %state14 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 10, !dbg !19409
  call void @clear_bit(i64 1, i64* %state14) #13, !dbg !19410
  br label %if.end15, !dbg !19410

if.end15:                                         ; preds = %if.then, %if.then13, %if.end
  ret void, !dbg !19411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dql_queued(%struct.dql* %dql, i32 %count) #2 !dbg !19412 {
entry:
  %dql.addr = alloca %struct.dql*, align 8
  %count.addr = alloca i32, align 4
  store %struct.dql* %dql, %struct.dql** %dql.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dql** %dql.addr, metadata !19416, metadata !DIExpression()), !dbg !19417
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !19418, metadata !DIExpression()), !dbg !19419
  br label %do.body, !dbg !19420

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %count.addr, align 4, !dbg !19421
  %cmp = icmp ugt i32 %0, 268435455, !dbg !19421
  %lnot = xor i1 %cmp, true, !dbg !19421
  %lnot1 = xor i1 %lnot, true, !dbg !19421
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19421
  %conv = sext i32 %lnot.ext to i64, !dbg !19421
  %tobool = icmp ne i64 %conv, 0, !dbg !19421
  br i1 %tobool, label %if.then, label %if.end, !dbg !19424

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !19421

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !19425

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !19427

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !19425

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.51, i64 0, i64 0), i32 77, i32 0, i64 12) #10, !dbg !19429, !srcloc !19431
  br label %do.end5, !dbg !19429

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !19425

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 234) #10, !dbg !19432, !srcloc !19435
  unreachable, !dbg !19436

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !19425

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !19425

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !19424

do.end9:                                          ; preds = %if.end
  %1 = load i32, i32* %count.addr, align 4, !dbg !19437
  %2 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !19438
  %last_obj_cnt = getelementptr inbounds %struct.dql, %struct.dql* %2, i32 0, i32 2, !dbg !19439
  store i32 %1, i32* %last_obj_cnt, align 8, !dbg !19440
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19441, !srcloc !19442
  %3 = load i32, i32* %count.addr, align 4, !dbg !19443
  %4 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !19444
  %num_queued = getelementptr inbounds %struct.dql, %struct.dql* %4, i32 0, i32 0, !dbg !19445
  %5 = load i32, i32* %num_queued, align 8, !dbg !19446
  %add = add i32 %5, %3, !dbg !19446
  store i32 %add, i32* %num_queued, align 8, !dbg !19446
  ret void, !dbg !19447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_clone_tx_timestamp(%struct.sk_buff* %skb) #2 !dbg !19448 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19449, metadata !DIExpression()), !dbg !19450
  ret void, !dbg !19451
}

; Function Attrs: noredzone
declare dso_local void @skb_tstamp_tx(%struct.sk_buff*, %struct.skb_shared_hwtstamps*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #2 !dbg !19452 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !19457, metadata !DIExpression()), !dbg !19458
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19459
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !19460
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #13, !dbg !19461
  ret i1 %call, !dbg !19462
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: cold noredzone
declare dso_local void @netdev_warn(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_tx_done(%struct.net_device* %dev, i32 %limit) #2 !dbg !19463 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %limit.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %flags = alloca i32, align 4
  %tx_work = alloca i32, align 4
  %orig_get_tx = alloca %struct.ring_desc*, align 8
  %bytes_compl = alloca i32, align 4
  %len = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %__vpp_verify30 = alloca i8*, align 8
  %pao_ID__33 = alloca i32, align 4
  %pto_val__ = alloca i64, align 8
  %len76 = alloca i32, align 4
  %__vpp_verify80 = alloca i8*, align 8
  %pao_ID__83 = alloca i32, align 4
  %__vpp_verify93 = alloca i8*, align 8
  %pao_ID__96 = alloca i32, align 4
  %pto_val__108 = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19464, metadata !DIExpression()), !dbg !19465
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !19466, metadata !DIExpression()), !dbg !19467
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !19468, metadata !DIExpression()), !dbg !19469
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19470
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !19471
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !19471
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !19469
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !19472, metadata !DIExpression()), !dbg !19473
  call void @llvm.dbg.declare(metadata i32* %tx_work, metadata !19474, metadata !DIExpression()), !dbg !19475
  store i32 0, i32* %tx_work, align 4, !dbg !19475
  call void @llvm.dbg.declare(metadata %struct.ring_desc** %orig_get_tx, metadata !19476, metadata !DIExpression()), !dbg !19477
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19478
  %get_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 53, !dbg !19479
  %orig = bitcast %union.ring_type* %get_tx to %struct.ring_desc**, !dbg !19480
  %3 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !19480
  store %struct.ring_desc* %3, %struct.ring_desc** %orig_get_tx, align 8, !dbg !19477
  call void @llvm.dbg.declare(metadata i32* %bytes_compl, metadata !19481, metadata !DIExpression()), !dbg !19482
  store i32 0, i32* %bytes_compl, align 4, !dbg !19482
  br label %while.cond, !dbg !19483

while.cond:                                       ; preds = %if.end156, %entry
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19484
  %get_tx1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 53, !dbg !19485
  %orig2 = bitcast %union.ring_type* %get_tx1 to %struct.ring_desc**, !dbg !19486
  %5 = load %struct.ring_desc*, %struct.ring_desc** %orig2, align 8, !dbg !19486
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19487
  %put_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 54, !dbg !19488
  %orig3 = bitcast %union.ring_type* %put_tx to %struct.ring_desc**, !dbg !19489
  %7 = load %struct.ring_desc*, %struct.ring_desc** %orig3, align 8, !dbg !19489
  %cmp = icmp ne %struct.ring_desc* %5, %7, !dbg !19490
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !19491

land.lhs.true:                                    ; preds = %while.cond
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19492
  %get_tx4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 53, !dbg !19492
  %orig5 = bitcast %union.ring_type* %get_tx4 to %struct.ring_desc**, !dbg !19492
  %9 = load %struct.ring_desc*, %struct.ring_desc** %orig5, align 8, !dbg !19492
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %9, i32 0, i32 1, !dbg !19492
  %10 = load i32, i32* %flaglen, align 4, !dbg !19492
  store i32 %10, i32* %flags, align 4, !dbg !19493
  %and = and i32 %10, -2147483648, !dbg !19494
  %tobool = icmp ne i32 %and, 0, !dbg !19494
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !19495

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* %tx_work, align 4, !dbg !19496
  %12 = load i32, i32* %limit.addr, align 4, !dbg !19497
  %cmp6 = icmp slt i32 %11, %12, !dbg !19498
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp6, %land.rhs ], !dbg !19499
  br i1 %13, label %while.body, label %while.end, !dbg !19483

while.body:                                       ; preds = %land.end
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19500
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19502
  %get_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 56, !dbg !19503
  %16 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx, align 8, !dbg !19503
  call void @nv_unmap_txskb(%struct.fe_priv* %14, %struct.nv_skb_map* %16) #13, !dbg !19504
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19505
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 24, !dbg !19507
  %18 = load i32, i32* %desc_ver, align 8, !dbg !19507
  %cmp7 = icmp eq i32 %18, 1, !dbg !19508
  br i1 %cmp7, label %if.then, label %if.else55, !dbg !19509

if.then:                                          ; preds = %while.body
  %19 = load i32, i32* %flags, align 4, !dbg !19510
  %and8 = and i32 %19, 65536, !dbg !19513
  %tobool9 = icmp ne i32 %and8, 0, !dbg !19513
  br i1 %tobool9, label %if.then10, label %if.end54, !dbg !19514

if.then10:                                        ; preds = %if.then
  %20 = load i32, i32* %flags, align 4, !dbg !19515
  %and11 = and i32 %20, 1073741824, !dbg !19515
  %tobool12 = icmp ne i32 %and11, 0, !dbg !19515
  %lnot = xor i1 %tobool12, true, !dbg !19515
  %lnot13 = xor i1 %lnot, true, !dbg !19515
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !19515
  %conv = sext i32 %lnot.ext to i64, !dbg !19515
  %tobool14 = icmp ne i64 %conv, 0, !dbg !19515
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !19518

if.then15:                                        ; preds = %if.then10
  %21 = load i32, i32* %flags, align 4, !dbg !19519
  %and16 = and i32 %21, 524288, !dbg !19522
  %tobool17 = icmp ne i32 %and16, 0, !dbg !19522
  br i1 %tobool17, label %land.lhs.true18, label %if.end, !dbg !19523

land.lhs.true18:                                  ; preds = %if.then15
  %22 = load i32, i32* %flags, align 4, !dbg !19524
  %and19 = and i32 %22, 15728640, !dbg !19525
  %tobool20 = icmp ne i32 %and19, 0, !dbg !19525
  br i1 %tobool20, label %if.end, label %if.then21, !dbg !19526

if.then21:                                        ; preds = %land.lhs.true18
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19527
  call void @nv_legacybackoff_reseed(%struct.net_device* %23) #13, !dbg !19528
  br label %if.end, !dbg !19528

if.end:                                           ; preds = %if.then21, %land.lhs.true18, %if.then15
  br label %if.end46, !dbg !19529

if.else:                                          ; preds = %if.then10
  call void @llvm.dbg.declare(metadata i32* %len, metadata !19530, metadata !DIExpression()), !dbg !19532
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19533
  %swstats_tx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 68, !dbg !19534
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp) #13, !dbg !19535
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !19536
  br label %do.body, !dbg !19536

do.body:                                          ; preds = %if.else
  br label %do.body22, !dbg !19538

do.body22:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !19540, metadata !DIExpression()), !dbg !19542
  store i8* null, i8** %__vpp_verify, align 8, !dbg !19542
  %25 = load i8*, i8** %__vpp_verify, align 8, !dbg !19542
  br label %do.end, !dbg !19542

do.end:                                           ; preds = %do.body22
  br label %do.body23, !dbg !19538

do.body23:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !19543, metadata !DIExpression()), !dbg !19545
  store i32 1, i32* %pao_ID__, align 4, !dbg !19545
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19546
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 50, !dbg !19546
  %27 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !19546
  %stat_tx_packets = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %27, i32 0, i32 4, !dbg !19546
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_packets, i64* %stat_tx_packets) #10, !dbg !19546, !srcloc !19549
  br label %do.end24, !dbg !19545

do.end24:                                         ; preds = %do.body23
  br label %do.end25, !dbg !19538

do.end25:                                         ; preds = %do.end24
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19550
  %get_tx_ctx26 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 56, !dbg !19551
  %29 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx26, align 8, !dbg !19551
  %skb = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %29, i32 0, i32 0, !dbg !19552
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !19552
  %len27 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %30, i32 0, i32 5, !dbg !19553
  %31 = load i32, i32* %len27, align 8, !dbg !19553
  store i32 %31, i32* %len, align 4, !dbg !19554
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !19555
  br label %do.body28, !dbg !19555

do.body28:                                        ; preds = %do.end25
  br label %do.body29, !dbg !19557

do.body29:                                        ; preds = %do.body28
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify30, metadata !19559, metadata !DIExpression()), !dbg !19561
  store i8* null, i8** %__vpp_verify30, align 8, !dbg !19561
  %32 = load i8*, i8** %__vpp_verify30, align 8, !dbg !19561
  br label %do.end31, !dbg !19561

do.end31:                                         ; preds = %do.body29
  br label %do.body32, !dbg !19557

do.body32:                                        ; preds = %do.end31
  call void @llvm.dbg.declare(metadata i32* %pao_ID__33, metadata !19562, metadata !DIExpression()), !dbg !19564
  %33 = load i32, i32* %len, align 4, !dbg !19564
  %34 = call i1 @llvm.is.constant.i32(i32 %33), !dbg !19564
  br i1 %34, label %land.lhs.true34, label %cond.false, !dbg !19564

land.lhs.true34:                                  ; preds = %do.body32
  %35 = load i32, i32* %len, align 4, !dbg !19564
  %cmp35 = icmp eq i32 %35, 1, !dbg !19564
  br i1 %cmp35, label %cond.true, label %lor.lhs.false, !dbg !19564

lor.lhs.false:                                    ; preds = %land.lhs.true34
  %36 = load i32, i32* %len, align 4, !dbg !19564
  %cmp37 = icmp eq i32 %36, -1, !dbg !19564
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !19564

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true34
  %37 = load i32, i32* %len, align 4, !dbg !19564
  br label %cond.end, !dbg !19564

cond.false:                                       ; preds = %lor.lhs.false, %do.body32
  br label %cond.end, !dbg !19564

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %37, %cond.true ], [ 0, %cond.false ], !dbg !19564
  store i32 %cond, i32* %pao_ID__33, align 4, !dbg !19564
  br label %do.body39, !dbg !19565

do.body39:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %pto_val__, metadata !19568, metadata !DIExpression()), !dbg !19570
  %38 = load i32, i32* %len, align 4, !dbg !19570
  %conv40 = zext i32 %38 to i64, !dbg !19570
  store i64 %conv40, i64* %pto_val__, align 8, !dbg !19570
  %39 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19570
  %txrx_stats41 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %39, i32 0, i32 50, !dbg !19570
  %40 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats41, align 8, !dbg !19570
  %stat_tx_bytes = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %40, i32 0, i32 5, !dbg !19570
  %41 = load i64, i64* %pto_val__, align 8, !dbg !19570
  call void asm "addq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_bytes, i64 %41, i64* %stat_tx_bytes) #10, !dbg !19570, !srcloc !19571
  br label %do.end42, !dbg !19570

do.end42:                                         ; preds = %do.body39
  br label %do.end43, !dbg !19564

do.end43:                                         ; preds = %do.end42
  br label %do.end44, !dbg !19557

do.end44:                                         ; preds = %do.end43
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19572
  %swstats_tx_syncp45 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 68, !dbg !19573
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp45) #13, !dbg !19574
  br label %if.end46

if.end46:                                         ; preds = %do.end44, %if.end
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19575
  %get_tx_ctx47 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 56, !dbg !19576
  %44 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx47, align 8, !dbg !19576
  %skb48 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %44, i32 0, i32 0, !dbg !19577
  %45 = load %struct.sk_buff*, %struct.sk_buff** %skb48, align 8, !dbg !19577
  %len49 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %45, i32 0, i32 5, !dbg !19578
  %46 = load i32, i32* %len49, align 8, !dbg !19578
  %47 = load i32, i32* %bytes_compl, align 4, !dbg !19579
  %add = add i32 %47, %46, !dbg !19579
  store i32 %add, i32* %bytes_compl, align 4, !dbg !19579
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19580
  %get_tx_ctx50 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 56, !dbg !19581
  %49 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx50, align 8, !dbg !19581
  %skb51 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %49, i32 0, i32 0, !dbg !19582
  %50 = load %struct.sk_buff*, %struct.sk_buff** %skb51, align 8, !dbg !19582
  call void @dev_kfree_skb_any(%struct.sk_buff* %50) #13, !dbg !19583
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19584
  %get_tx_ctx52 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 56, !dbg !19585
  %52 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx52, align 8, !dbg !19585
  %skb53 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %52, i32 0, i32 0, !dbg !19586
  store %struct.sk_buff* null, %struct.sk_buff** %skb53, align 8, !dbg !19587
  %53 = load i32, i32* %tx_work, align 4, !dbg !19588
  %inc = add i32 %53, 1, !dbg !19588
  store i32 %inc, i32* %tx_work, align 4, !dbg !19588
  br label %if.end54, !dbg !19589

if.end54:                                         ; preds = %if.end46, %if.then
  br label %if.end127, !dbg !19590

if.else55:                                        ; preds = %while.body
  %54 = load i32, i32* %flags, align 4, !dbg !19591
  %and56 = and i32 %54, 536870912, !dbg !19594
  %tobool57 = icmp ne i32 %and56, 0, !dbg !19594
  br i1 %tobool57, label %if.then58, label %if.end126, !dbg !19595

if.then58:                                        ; preds = %if.else55
  %55 = load i32, i32* %flags, align 4, !dbg !19596
  %and59 = and i32 %55, 1073741824, !dbg !19596
  %tobool60 = icmp ne i32 %and59, 0, !dbg !19596
  %lnot61 = xor i1 %tobool60, true, !dbg !19596
  %lnot63 = xor i1 %lnot61, true, !dbg !19596
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !19596
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !19596
  %tobool66 = icmp ne i64 %conv65, 0, !dbg !19596
  br i1 %tobool66, label %if.then67, label %if.else75, !dbg !19599

if.then67:                                        ; preds = %if.then58
  %56 = load i32, i32* %flags, align 4, !dbg !19600
  %and68 = and i32 %56, 262144, !dbg !19603
  %tobool69 = icmp ne i32 %and68, 0, !dbg !19603
  br i1 %tobool69, label %land.lhs.true70, label %if.end74, !dbg !19604

land.lhs.true70:                                  ; preds = %if.then67
  %57 = load i32, i32* %flags, align 4, !dbg !19605
  %and71 = and i32 %57, 7864320, !dbg !19606
  %tobool72 = icmp ne i32 %and71, 0, !dbg !19606
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !19607

if.then73:                                        ; preds = %land.lhs.true70
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19608
  call void @nv_legacybackoff_reseed(%struct.net_device* %58) #13, !dbg !19609
  br label %if.end74, !dbg !19609

if.end74:                                         ; preds = %if.then73, %land.lhs.true70, %if.then67
  br label %if.end116, !dbg !19610

if.else75:                                        ; preds = %if.then58
  call void @llvm.dbg.declare(metadata i32* %len76, metadata !19611, metadata !DIExpression()), !dbg !19613
  %59 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19614
  %swstats_tx_syncp77 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %59, i32 0, i32 68, !dbg !19615
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp77) #13, !dbg !19616
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !19617
  br label %do.body78, !dbg !19617

do.body78:                                        ; preds = %if.else75
  br label %do.body79, !dbg !19619

do.body79:                                        ; preds = %do.body78
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify80, metadata !19621, metadata !DIExpression()), !dbg !19623
  store i8* null, i8** %__vpp_verify80, align 8, !dbg !19623
  %60 = load i8*, i8** %__vpp_verify80, align 8, !dbg !19623
  br label %do.end81, !dbg !19623

do.end81:                                         ; preds = %do.body79
  br label %do.body82, !dbg !19619

do.body82:                                        ; preds = %do.end81
  call void @llvm.dbg.declare(metadata i32* %pao_ID__83, metadata !19624, metadata !DIExpression()), !dbg !19626
  store i32 1, i32* %pao_ID__83, align 4, !dbg !19626
  %61 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19627
  %txrx_stats84 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %61, i32 0, i32 50, !dbg !19627
  %62 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats84, align 8, !dbg !19627
  %stat_tx_packets85 = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %62, i32 0, i32 4, !dbg !19627
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_packets85, i64* %stat_tx_packets85) #10, !dbg !19627, !srcloc !19630
  br label %do.end86, !dbg !19626

do.end86:                                         ; preds = %do.body82
  br label %do.end87, !dbg !19619

do.end87:                                         ; preds = %do.end86
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19631
  %get_tx_ctx88 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 56, !dbg !19632
  %64 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx88, align 8, !dbg !19632
  %skb89 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %64, i32 0, i32 0, !dbg !19633
  %65 = load %struct.sk_buff*, %struct.sk_buff** %skb89, align 8, !dbg !19633
  %len90 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %65, i32 0, i32 5, !dbg !19634
  %66 = load i32, i32* %len90, align 8, !dbg !19634
  store i32 %66, i32* %len76, align 4, !dbg !19635
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !19636
  br label %do.body91, !dbg !19636

do.body91:                                        ; preds = %do.end87
  br label %do.body92, !dbg !19638

do.body92:                                        ; preds = %do.body91
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify93, metadata !19640, metadata !DIExpression()), !dbg !19642
  store i8* null, i8** %__vpp_verify93, align 8, !dbg !19642
  %67 = load i8*, i8** %__vpp_verify93, align 8, !dbg !19642
  br label %do.end94, !dbg !19642

do.end94:                                         ; preds = %do.body92
  br label %do.body95, !dbg !19638

do.body95:                                        ; preds = %do.end94
  call void @llvm.dbg.declare(metadata i32* %pao_ID__96, metadata !19643, metadata !DIExpression()), !dbg !19645
  %68 = load i32, i32* %len76, align 4, !dbg !19645
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !19645
  br i1 %69, label %land.lhs.true97, label %cond.false104, !dbg !19645

land.lhs.true97:                                  ; preds = %do.body95
  %70 = load i32, i32* %len76, align 4, !dbg !19645
  %cmp98 = icmp eq i32 %70, 1, !dbg !19645
  br i1 %cmp98, label %cond.true103, label %lor.lhs.false100, !dbg !19645

lor.lhs.false100:                                 ; preds = %land.lhs.true97
  %71 = load i32, i32* %len76, align 4, !dbg !19645
  %cmp101 = icmp eq i32 %71, -1, !dbg !19645
  br i1 %cmp101, label %cond.true103, label %cond.false104, !dbg !19645

cond.true103:                                     ; preds = %lor.lhs.false100, %land.lhs.true97
  %72 = load i32, i32* %len76, align 4, !dbg !19645
  br label %cond.end105, !dbg !19645

cond.false104:                                    ; preds = %lor.lhs.false100, %do.body95
  br label %cond.end105, !dbg !19645

cond.end105:                                      ; preds = %cond.false104, %cond.true103
  %cond106 = phi i32 [ %72, %cond.true103 ], [ 0, %cond.false104 ], !dbg !19645
  store i32 %cond106, i32* %pao_ID__96, align 4, !dbg !19645
  br label %do.body107, !dbg !19646

do.body107:                                       ; preds = %cond.end105
  call void @llvm.dbg.declare(metadata i64* %pto_val__108, metadata !19649, metadata !DIExpression()), !dbg !19651
  %73 = load i32, i32* %len76, align 4, !dbg !19651
  %conv109 = zext i32 %73 to i64, !dbg !19651
  store i64 %conv109, i64* %pto_val__108, align 8, !dbg !19651
  %74 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19651
  %txrx_stats110 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %74, i32 0, i32 50, !dbg !19651
  %75 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats110, align 8, !dbg !19651
  %stat_tx_bytes111 = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %75, i32 0, i32 5, !dbg !19651
  %76 = load i64, i64* %pto_val__108, align 8, !dbg !19651
  call void asm "addq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_bytes111, i64 %76, i64* %stat_tx_bytes111) #10, !dbg !19651, !srcloc !19652
  br label %do.end112, !dbg !19651

do.end112:                                        ; preds = %do.body107
  br label %do.end113, !dbg !19645

do.end113:                                        ; preds = %do.end112
  br label %do.end114, !dbg !19638

do.end114:                                        ; preds = %do.end113
  %77 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19653
  %swstats_tx_syncp115 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %77, i32 0, i32 68, !dbg !19654
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp115) #13, !dbg !19655
  br label %if.end116

if.end116:                                        ; preds = %do.end114, %if.end74
  %78 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19656
  %get_tx_ctx117 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %78, i32 0, i32 56, !dbg !19657
  %79 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx117, align 8, !dbg !19657
  %skb118 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %79, i32 0, i32 0, !dbg !19658
  %80 = load %struct.sk_buff*, %struct.sk_buff** %skb118, align 8, !dbg !19658
  %len119 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %80, i32 0, i32 5, !dbg !19659
  %81 = load i32, i32* %len119, align 8, !dbg !19659
  %82 = load i32, i32* %bytes_compl, align 4, !dbg !19660
  %add120 = add i32 %82, %81, !dbg !19660
  store i32 %add120, i32* %bytes_compl, align 4, !dbg !19660
  %83 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19661
  %get_tx_ctx121 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %83, i32 0, i32 56, !dbg !19662
  %84 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx121, align 8, !dbg !19662
  %skb122 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %84, i32 0, i32 0, !dbg !19663
  %85 = load %struct.sk_buff*, %struct.sk_buff** %skb122, align 8, !dbg !19663
  call void @dev_kfree_skb_any(%struct.sk_buff* %85) #13, !dbg !19664
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19665
  %get_tx_ctx123 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %86, i32 0, i32 56, !dbg !19666
  %87 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx123, align 8, !dbg !19666
  %skb124 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %87, i32 0, i32 0, !dbg !19667
  store %struct.sk_buff* null, %struct.sk_buff** %skb124, align 8, !dbg !19668
  %88 = load i32, i32* %tx_work, align 4, !dbg !19669
  %inc125 = add i32 %88, 1, !dbg !19669
  store i32 %inc125, i32* %tx_work, align 4, !dbg !19669
  br label %if.end126, !dbg !19670

if.end126:                                        ; preds = %if.end116, %if.else55
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end54
  %89 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19671
  %get_tx128 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %89, i32 0, i32 53, !dbg !19671
  %orig129 = bitcast %union.ring_type* %get_tx128 to %struct.ring_desc**, !dbg !19671
  %90 = load %struct.ring_desc*, %struct.ring_desc** %orig129, align 8, !dbg !19671
  %incdec.ptr = getelementptr %struct.ring_desc, %struct.ring_desc* %90, i32 1, !dbg !19671
  store %struct.ring_desc* %incdec.ptr, %struct.ring_desc** %orig129, align 8, !dbg !19671
  %91 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19671
  %last_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %91, i32 0, i32 55, !dbg !19671
  %orig130 = bitcast %union.ring_type* %last_tx to %struct.ring_desc**, !dbg !19671
  %92 = load %struct.ring_desc*, %struct.ring_desc** %orig130, align 8, !dbg !19671
  %cmp131 = icmp eq %struct.ring_desc* %90, %92, !dbg !19671
  %lnot133 = xor i1 %cmp131, true, !dbg !19671
  %lnot135 = xor i1 %lnot133, true, !dbg !19671
  %lnot.ext136 = zext i1 %lnot135 to i32, !dbg !19671
  %conv137 = sext i32 %lnot.ext136 to i64, !dbg !19671
  %tobool138 = icmp ne i64 %conv137, 0, !dbg !19671
  br i1 %tobool138, label %if.then139, label %if.end143, !dbg !19673

if.then139:                                       ; preds = %if.end127
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19674
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 60, !dbg !19675
  %orig140 = bitcast %union.ring_type* %tx_ring to %struct.ring_desc**, !dbg !19676
  %94 = load %struct.ring_desc*, %struct.ring_desc** %orig140, align 8, !dbg !19676
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19677
  %get_tx141 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 53, !dbg !19678
  %orig142 = bitcast %union.ring_type* %get_tx141 to %struct.ring_desc**, !dbg !19679
  store %struct.ring_desc* %94, %struct.ring_desc** %orig142, align 8, !dbg !19680
  br label %if.end143, !dbg !19677

if.end143:                                        ; preds = %if.then139, %if.end127
  %96 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19681
  %get_tx_ctx144 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %96, i32 0, i32 56, !dbg !19681
  %97 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_tx_ctx144, align 8, !dbg !19681
  %incdec.ptr145 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %97, i32 1, !dbg !19681
  store %struct.nv_skb_map* %incdec.ptr145, %struct.nv_skb_map** %get_tx_ctx144, align 8, !dbg !19681
  %98 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19681
  %last_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %98, i32 0, i32 58, !dbg !19681
  %99 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx, align 8, !dbg !19681
  %cmp146 = icmp eq %struct.nv_skb_map* %97, %99, !dbg !19681
  %lnot148 = xor i1 %cmp146, true, !dbg !19681
  %lnot150 = xor i1 %lnot148, true, !dbg !19681
  %lnot.ext151 = zext i1 %lnot150 to i32, !dbg !19681
  %conv152 = sext i32 %lnot.ext151 to i64, !dbg !19681
  %tobool153 = icmp ne i64 %conv152, 0, !dbg !19681
  br i1 %tobool153, label %if.then154, label %if.end156, !dbg !19683

if.then154:                                       ; preds = %if.end143
  %100 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19684
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %100, i32 0, i32 59, !dbg !19685
  %101 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb, align 8, !dbg !19685
  %102 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19686
  %get_tx_ctx155 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %102, i32 0, i32 56, !dbg !19687
  store %struct.nv_skb_map* %101, %struct.nv_skb_map** %get_tx_ctx155, align 8, !dbg !19688
  br label %if.end156, !dbg !19686

if.end156:                                        ; preds = %if.then154, %if.end143
  br label %while.cond, !dbg !19483, !llvm.loop !19689

while.end:                                        ; preds = %land.end
  %103 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19691
  %dev157 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %103, i32 0, i32 1, !dbg !19692
  %104 = load %struct.net_device*, %struct.net_device** %dev157, align 8, !dbg !19692
  %105 = load i32, i32* %tx_work, align 4, !dbg !19693
  %106 = load i32, i32* %bytes_compl, align 4, !dbg !19694
  call void @netdev_completed_queue(%struct.net_device* %104, i32 %105, i32 %106) #13, !dbg !19695
  %107 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19696
  %tx_stop = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %107, i32 0, i32 67, !dbg !19696
  %108 = load i32, i32* %tx_stop, align 8, !dbg !19696
  %cmp158 = icmp eq i32 %108, 1, !dbg !19696
  br i1 %cmp158, label %land.rhs160, label %land.end165, !dbg !19696

land.rhs160:                                      ; preds = %while.end
  %109 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19696
  %get_tx161 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %109, i32 0, i32 53, !dbg !19696
  %orig162 = bitcast %union.ring_type* %get_tx161 to %struct.ring_desc**, !dbg !19696
  %110 = load %struct.ring_desc*, %struct.ring_desc** %orig162, align 8, !dbg !19696
  %111 = load %struct.ring_desc*, %struct.ring_desc** %orig_get_tx, align 8, !dbg !19696
  %cmp163 = icmp ne %struct.ring_desc* %110, %111, !dbg !19696
  br label %land.end165

land.end165:                                      ; preds = %land.rhs160, %while.end
  %112 = phi i1 [ false, %while.end ], [ %cmp163, %land.rhs160 ], !dbg !19698
  %lnot166 = xor i1 %112, true, !dbg !19696
  %lnot168 = xor i1 %lnot166, true, !dbg !19696
  %lnot.ext169 = zext i1 %lnot168 to i32, !dbg !19696
  %conv170 = sext i32 %lnot.ext169 to i64, !dbg !19696
  %tobool171 = icmp ne i64 %conv170, 0, !dbg !19696
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !19699

if.then172:                                       ; preds = %land.end165
  %113 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !19700
  %tx_stop173 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %113, i32 0, i32 67, !dbg !19702
  store i32 0, i32* %tx_stop173, align 8, !dbg !19703
  %114 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19704
  call void @netif_wake_queue(%struct.net_device* %114) #13, !dbg !19705
  br label %if.end174, !dbg !19706

if.end174:                                        ; preds = %if.then172, %land.end165
  %115 = load i32, i32* %tx_work, align 4, !dbg !19707
  ret i32 %115, !dbg !19708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_stats(i32 %cpu, %struct.fe_priv* %np, %struct.rtnl_link_stats64* %storage) #2 !dbg !19709 {
entry:
  %cpu.addr = alloca i32, align 4
  %np.addr = alloca %struct.fe_priv*, align 8
  %storage.addr = alloca %struct.rtnl_link_stats64*, align 8
  %src = alloca %struct.nv_txrx_stats*, align 8
  %tmp = alloca %struct.nv_txrx_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.nv_txrx_stats*, align 8
  %syncp_start = alloca i32, align 4
  %rx_packets = alloca i64, align 8
  %rx_bytes = alloca i64, align 8
  %rx_dropped = alloca i64, align 8
  %rx_missed_errors = alloca i64, align 8
  %tx_packets = alloca i64, align 8
  %tx_bytes = alloca i64, align 8
  %tx_dropped = alloca i64, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !19712, metadata !DIExpression()), !dbg !19713
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !19714, metadata !DIExpression()), !dbg !19715
  store %struct.rtnl_link_stats64* %storage, %struct.rtnl_link_stats64** %storage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %storage.addr, metadata !19716, metadata !DIExpression()), !dbg !19717
  call void @llvm.dbg.declare(metadata %struct.nv_txrx_stats** %src, metadata !19718, metadata !DIExpression()), !dbg !19719
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !19720
  br label %do.body, !dbg !19722

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !19724, metadata !DIExpression()), !dbg !19726
  store i8* null, i8** %__vpp_verify, align 8, !dbg !19726
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !19726
  br label %do.end, !dbg !19726

do.end:                                           ; preds = %do.body
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19722
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 50, !dbg !19722
  %3 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !19722
  store %struct.nv_txrx_stats* %3, %struct.nv_txrx_stats** %tmp1, align 8, !dbg !19726
  %4 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %tmp1, align 8, !dbg !19722
  store %struct.nv_txrx_stats* %4, %struct.nv_txrx_stats** %tmp, align 8, !dbg !19720
  %5 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %tmp, align 8, !dbg !19720
  store %struct.nv_txrx_stats* %5, %struct.nv_txrx_stats** %src, align 8, !dbg !19719
  call void @llvm.dbg.declare(metadata i32* %syncp_start, metadata !19727, metadata !DIExpression()), !dbg !19728
  call void @llvm.dbg.declare(metadata i64* %rx_packets, metadata !19729, metadata !DIExpression()), !dbg !19730
  call void @llvm.dbg.declare(metadata i64* %rx_bytes, metadata !19731, metadata !DIExpression()), !dbg !19732
  call void @llvm.dbg.declare(metadata i64* %rx_dropped, metadata !19733, metadata !DIExpression()), !dbg !19734
  call void @llvm.dbg.declare(metadata i64* %rx_missed_errors, metadata !19735, metadata !DIExpression()), !dbg !19736
  call void @llvm.dbg.declare(metadata i64* %tx_packets, metadata !19737, metadata !DIExpression()), !dbg !19738
  call void @llvm.dbg.declare(metadata i64* %tx_bytes, metadata !19739, metadata !DIExpression()), !dbg !19740
  call void @llvm.dbg.declare(metadata i64* %tx_dropped, metadata !19741, metadata !DIExpression()), !dbg !19742
  br label %do.body2, !dbg !19743

do.body2:                                         ; preds = %do.cond, %do.end
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19744
  %swstats_rx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 49, !dbg !19746
  %call = call i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %swstats_rx_syncp) #13, !dbg !19747
  store i32 %call, i32* %syncp_start, align 4, !dbg !19748
  %7 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %src, align 8, !dbg !19749
  %stat_rx_packets = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %7, i32 0, i32 0, !dbg !19750
  %8 = load i64, i64* %stat_rx_packets, align 8, !dbg !19750
  store i64 %8, i64* %rx_packets, align 8, !dbg !19751
  %9 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %src, align 8, !dbg !19752
  %stat_rx_bytes = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %9, i32 0, i32 1, !dbg !19753
  %10 = load i64, i64* %stat_rx_bytes, align 8, !dbg !19753
  store i64 %10, i64* %rx_bytes, align 8, !dbg !19754
  %11 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %src, align 8, !dbg !19755
  %stat_rx_dropped = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %11, i32 0, i32 3, !dbg !19756
  %12 = load i64, i64* %stat_rx_dropped, align 8, !dbg !19756
  store i64 %12, i64* %rx_dropped, align 8, !dbg !19757
  %13 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %src, align 8, !dbg !19758
  %stat_rx_missed_errors = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %13, i32 0, i32 2, !dbg !19759
  %14 = load i64, i64* %stat_rx_missed_errors, align 8, !dbg !19759
  store i64 %14, i64* %rx_missed_errors, align 8, !dbg !19760
  br label %do.cond, !dbg !19761

do.cond:                                          ; preds = %do.body2
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19762
  %swstats_rx_syncp3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 49, !dbg !19763
  %16 = load i32, i32* %syncp_start, align 4, !dbg !19764
  %call4 = call zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %swstats_rx_syncp3, i32 %16) #13, !dbg !19765
  br i1 %call4, label %do.body2, label %do.end5, !dbg !19761, !llvm.loop !19766

do.end5:                                          ; preds = %do.cond
  %17 = load i64, i64* %rx_packets, align 8, !dbg !19768
  %18 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !19769
  %rx_packets6 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %18, i32 0, i32 0, !dbg !19770
  %19 = load i64, i64* %rx_packets6, align 8, !dbg !19771
  %add = add i64 %19, %17, !dbg !19771
  store i64 %add, i64* %rx_packets6, align 8, !dbg !19771
  %20 = load i64, i64* %rx_bytes, align 8, !dbg !19772
  %21 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !19773
  %rx_bytes7 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %21, i32 0, i32 2, !dbg !19774
  %22 = load i64, i64* %rx_bytes7, align 8, !dbg !19775
  %add8 = add i64 %22, %20, !dbg !19775
  store i64 %add8, i64* %rx_bytes7, align 8, !dbg !19775
  %23 = load i64, i64* %rx_dropped, align 8, !dbg !19776
  %24 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !19777
  %rx_dropped9 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %24, i32 0, i32 6, !dbg !19778
  %25 = load i64, i64* %rx_dropped9, align 8, !dbg !19779
  %add10 = add i64 %25, %23, !dbg !19779
  store i64 %add10, i64* %rx_dropped9, align 8, !dbg !19779
  %26 = load i64, i64* %rx_missed_errors, align 8, !dbg !19780
  %27 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !19781
  %rx_missed_errors11 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %27, i32 0, i32 15, !dbg !19782
  %28 = load i64, i64* %rx_missed_errors11, align 8, !dbg !19783
  %add12 = add i64 %28, %26, !dbg !19783
  store i64 %add12, i64* %rx_missed_errors11, align 8, !dbg !19783
  br label %do.body13, !dbg !19784

do.body13:                                        ; preds = %do.cond15, %do.end5
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19785
  %swstats_tx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 68, !dbg !19787
  %call14 = call i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %swstats_tx_syncp) #13, !dbg !19788
  store i32 %call14, i32* %syncp_start, align 4, !dbg !19789
  %30 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %src, align 8, !dbg !19790
  %stat_tx_packets = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %30, i32 0, i32 4, !dbg !19791
  %31 = load i64, i64* %stat_tx_packets, align 8, !dbg !19791
  store i64 %31, i64* %tx_packets, align 8, !dbg !19792
  %32 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %src, align 8, !dbg !19793
  %stat_tx_bytes = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %32, i32 0, i32 5, !dbg !19794
  %33 = load i64, i64* %stat_tx_bytes, align 8, !dbg !19794
  store i64 %33, i64* %tx_bytes, align 8, !dbg !19795
  %34 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %src, align 8, !dbg !19796
  %stat_tx_dropped = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %34, i32 0, i32 6, !dbg !19797
  %35 = load i64, i64* %stat_tx_dropped, align 8, !dbg !19797
  store i64 %35, i64* %tx_dropped, align 8, !dbg !19798
  br label %do.cond15, !dbg !19799

do.cond15:                                        ; preds = %do.body13
  %36 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !19800
  %swstats_tx_syncp16 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %36, i32 0, i32 68, !dbg !19801
  %37 = load i32, i32* %syncp_start, align 4, !dbg !19802
  %call17 = call zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %swstats_tx_syncp16, i32 %37) #13, !dbg !19803
  br i1 %call17, label %do.body13, label %do.end18, !dbg !19799, !llvm.loop !19804

do.end18:                                         ; preds = %do.cond15
  %38 = load i64, i64* %tx_packets, align 8, !dbg !19806
  %39 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !19807
  %tx_packets19 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %39, i32 0, i32 1, !dbg !19808
  %40 = load i64, i64* %tx_packets19, align 8, !dbg !19809
  %add20 = add i64 %40, %38, !dbg !19809
  store i64 %add20, i64* %tx_packets19, align 8, !dbg !19809
  %41 = load i64, i64* %tx_bytes, align 8, !dbg !19810
  %42 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !19811
  %tx_bytes21 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %42, i32 0, i32 3, !dbg !19812
  %43 = load i64, i64* %tx_bytes21, align 8, !dbg !19813
  %add22 = add i64 %43, %41, !dbg !19813
  store i64 %add22, i64* %tx_bytes21, align 8, !dbg !19813
  %44 = load i64, i64* %tx_dropped, align 8, !dbg !19814
  %45 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %storage.addr, align 8, !dbg !19815
  %tx_dropped23 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %45, i32 0, i32 7, !dbg !19816
  %46 = load i64, i64* %tx_dropped23, align 8, !dbg !19817
  %add24 = add i64 %46, %44, !dbg !19817
  store i64 %add24, i64* %tx_dropped23, align 8, !dbg !19817
  ret void, !dbg !19818
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #12 !dbg !19819 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !12588, metadata !DIExpression()), !dbg !19820
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !12597, metadata !DIExpression()), !dbg !19824
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !12601, metadata !DIExpression()), !dbg !19825
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !12606, metadata !DIExpression()), !dbg !19826
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !12608, metadata !DIExpression()), !dbg !19827
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !19828, metadata !DIExpression()), !dbg !19829
  br label %do.body, !dbg !19830

do.body:                                          ; preds = %entry
  br label %__here, !dbg !19831

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !19833), !dbg !19831
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !19831
  %0 = load i64, i64* %tmp, align 8, !dbg !19831
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !19834
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !19824
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #10, !dbg !19824
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !19824

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !19824
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !19824
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !19824

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !19824
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !19824
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !19824

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !19824
  br label %__local_bh_disable_ip.exit, !dbg !19824

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !19824

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !19824
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !19824
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !19825
  %conv.i.i = sext i32 %7 to i64, !dbg !19825
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !19825
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !19825
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !19825
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !19825
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #10, !dbg !19825, !srcloc !12614
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19835, !srcloc !12616
  br label %do.body1, !dbg !19836

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !19837
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !19837
  %rlock = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !19837
  br label %do.end, !dbg !19837

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !19836

do.end2:                                          ; preds = %do.end
  ret void, !dbg !19839

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #12 !dbg !19840 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !19841, metadata !DIExpression()), !dbg !19842
  br label %do.body, !dbg !19843

do.body:                                          ; preds = %entry
  br label %__here, !dbg !19844

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !19847), !dbg !19844
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !19844
  %0 = load i64, i64* %tmp, align 8, !dbg !19844
  call void @__local_bh_enable_ip(i64 %0, i32 512) #13, !dbg !19848
  br label %do.body1, !dbg !19848

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !19849
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !19849
  %rlock = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !19849
  br label %do.end, !dbg !19849

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !19848

do.end2:                                          ; preds = %do.end
  ret void, !dbg !19851

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp) #2 !dbg !19852 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !19857, metadata !DIExpression()), !dbg !19858
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !19859
  %call = call i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %0) #13, !dbg !19860
  ret i32 %call, !dbg !19861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp, i32 %start) #2 !dbg !19862 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !19865, metadata !DIExpression()), !dbg !19866
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !19867, metadata !DIExpression()), !dbg !19868
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !19869
  %1 = load i32, i32* %start.addr, align 4, !dbg !19870
  %call = call zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %0, i32 %1) #13, !dbg !19871
  ret i1 %call, !dbg !19872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %syncp) #2 !dbg !19873 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !19874, metadata !DIExpression()), !dbg !19875
  ret i32 0, !dbg !19876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %syncp, i32 %start) #2 !dbg !19877 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !19878, metadata !DIExpression()), !dbg !19879
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !19880, metadata !DIExpression()), !dbg !19881
  ret i1 false, !dbg !19882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_start_xmit_optimized(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !19883 {
entry:
  %lock.addr.i379 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i379, metadata !9883, metadata !DIExpression()), !dbg !19884
  %flags.addr.i380 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i380, metadata !9891, metadata !DIExpression()), !dbg !19886
  %tmp.i381 = alloca i32, align 4
  %tmp8.i382 = alloca i32, align 4
  %lock.addr.i377 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i377, metadata !8259, metadata !DIExpression()), !dbg !19887
  %lock.addr.i372 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i372, metadata !9883, metadata !DIExpression()), !dbg !19894
  %flags.addr.i373 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i373, metadata !9891, metadata !DIExpression()), !dbg !19896
  %tmp.i374 = alloca i32, align 4
  %tmp8.i375 = alloca i32, align 4
  %lock.addr.i370 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i370, metadata !9883, metadata !DIExpression()), !dbg !19897
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !19901
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !19902
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %tx_flags = alloca i32, align 4
  %tx_flags_extra = alloca i32, align 4
  %fragments = alloca i32, align 4
  %i = alloca i32, align 4
  %offset = alloca i32, align 4
  %bcnt = alloca i32, align 4
  %size = alloca i32, align 4
  %entries = alloca i32, align 4
  %empty_slots = alloca i32, align 4
  %put_tx = alloca %struct.ring_desc_ex*, align 8
  %start_tx = alloca %struct.ring_desc_ex*, align 8
  %prev_tx = alloca %struct.ring_desc_ex*, align 8
  %prev_tx_ctx = alloca %struct.nv_skb_map*, align 8
  %start_tx_ctx = alloca %struct.nv_skb_map*, align 8
  %tmp_tx_ctx = alloca %struct.nv_skb_map*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %frag_size = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  %frag_size119 = alloca i32, align 4
  %__vpp_verify175 = alloca i8*, align 8
  %pao_ID__179 = alloca i32, align 4
  %__dummy306 = alloca i64, align 8
  %__dummy2307 = alloca i64, align 8
  %tmp310 = alloca i32, align 4
  %__dummy314 = alloca i64, align 8
  %__dummy2315 = alloca i64, align 8
  %tmp318 = alloca i32, align 4
  %txrxctl_kick = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19909, metadata !DIExpression()), !dbg !19910
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19911, metadata !DIExpression()), !dbg !19912
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !19913, metadata !DIExpression()), !dbg !19914
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19915
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !19916
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !19916
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !19914
  call void @llvm.dbg.declare(metadata i32* %tx_flags, metadata !19917, metadata !DIExpression()), !dbg !19918
  store i32 0, i32* %tx_flags, align 4, !dbg !19918
  call void @llvm.dbg.declare(metadata i32* %tx_flags_extra, metadata !19919, metadata !DIExpression()), !dbg !19920
  call void @llvm.dbg.declare(metadata i32* %fragments, metadata !19921, metadata !DIExpression()), !dbg !19922
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19923
  %call1 = call i8* @skb_end_pointer(%struct.sk_buff* %2) #13, !dbg !19923
  %3 = bitcast i8* %call1 to %struct.skb_shared_info*, !dbg !19924
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %3, i32 0, i32 2, !dbg !19924
  %4 = load i8, i8* %nr_frags, align 2, !dbg !19924
  %conv = zext i8 %4 to i32, !dbg !19923
  store i32 %conv, i32* %fragments, align 4, !dbg !19922
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19925, metadata !DIExpression()), !dbg !19926
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !19927, metadata !DIExpression()), !dbg !19928
  store i32 0, i32* %offset, align 4, !dbg !19928
  call void @llvm.dbg.declare(metadata i32* %bcnt, metadata !19929, metadata !DIExpression()), !dbg !19930
  call void @llvm.dbg.declare(metadata i32* %size, metadata !19931, metadata !DIExpression()), !dbg !19932
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19933
  %call2 = call i32 @skb_headlen(%struct.sk_buff* %5) #13, !dbg !19934
  store i32 %call2, i32* %size, align 4, !dbg !19932
  call void @llvm.dbg.declare(metadata i32* %entries, metadata !19935, metadata !DIExpression()), !dbg !19936
  %6 = load i32, i32* %size, align 4, !dbg !19937
  %shr = lshr i32 %6, 14, !dbg !19938
  %7 = load i32, i32* %size, align 4, !dbg !19939
  %and = and i32 %7, 16383, !dbg !19940
  %tobool = icmp ne i32 %and, 0, !dbg !19941
  %8 = zext i1 %tobool to i64, !dbg !19941
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !19941
  %add = add i32 %shr, %cond, !dbg !19942
  store i32 %add, i32* %entries, align 4, !dbg !19936
  call void @llvm.dbg.declare(metadata i32* %empty_slots, metadata !19943, metadata !DIExpression()), !dbg !19944
  call void @llvm.dbg.declare(metadata %struct.ring_desc_ex** %put_tx, metadata !19945, metadata !DIExpression()), !dbg !19946
  call void @llvm.dbg.declare(metadata %struct.ring_desc_ex** %start_tx, metadata !19947, metadata !DIExpression()), !dbg !19948
  call void @llvm.dbg.declare(metadata %struct.ring_desc_ex** %prev_tx, metadata !19949, metadata !DIExpression()), !dbg !19950
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %prev_tx_ctx, metadata !19951, metadata !DIExpression()), !dbg !19952
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %start_tx_ctx, metadata !19953, metadata !DIExpression()), !dbg !19954
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !19954
  call void @llvm.dbg.declare(metadata %struct.nv_skb_map** %tmp_tx_ctx, metadata !19955, metadata !DIExpression()), !dbg !19956
  store %struct.nv_skb_map* null, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !19956
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19957, metadata !DIExpression()), !dbg !19958
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19959, metadata !DIExpression()), !dbg !19960
  store i32 0, i32* %ret, align 4, !dbg !19960
  store i32 0, i32* %i, align 4, !dbg !19961
  br label %for.cond, !dbg !19963

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !19964
  %10 = load i32, i32* %fragments, align 4, !dbg !19966
  %cmp = icmp ult i32 %9, %10, !dbg !19967
  br i1 %cmp, label %for.body, label %for.end, !dbg !19968

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %frag_size, metadata !19969, metadata !DIExpression()), !dbg !19971
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19972
  %call4 = call i8* @skb_end_pointer(%struct.sk_buff* %11) #13, !dbg !19972
  %12 = bitcast i8* %call4 to %struct.skb_shared_info*, !dbg !19973
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %12, i32 0, i32 12, !dbg !19973
  %13 = load i32, i32* %i, align 4, !dbg !19974
  %idxprom = zext i32 %13 to i64, !dbg !19972
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !19972
  %call5 = call i32 @skb_frag_size(%struct.bio_vec* %arrayidx) #13, !dbg !19975
  store i32 %call5, i32* %frag_size, align 4, !dbg !19971
  %14 = load i32, i32* %frag_size, align 4, !dbg !19976
  %shr6 = lshr i32 %14, 14, !dbg !19977
  %15 = load i32, i32* %frag_size, align 4, !dbg !19978
  %and7 = and i32 %15, 16383, !dbg !19979
  %tobool8 = icmp ne i32 %and7, 0, !dbg !19980
  %16 = zext i1 %tobool8 to i64, !dbg !19980
  %cond9 = select i1 %tobool8, i32 1, i32 0, !dbg !19980
  %add10 = add i32 %shr6, %cond9, !dbg !19981
  %17 = load i32, i32* %entries, align 4, !dbg !19982
  %add11 = add i32 %17, %add10, !dbg !19982
  store i32 %add11, i32* %entries, align 4, !dbg !19982
  br label %for.inc, !dbg !19983

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !19984
  %inc = add i32 %18, 1, !dbg !19984
  store i32 %inc, i32* %i, align 4, !dbg !19984
  br label %for.cond, !dbg !19985, !llvm.loop !19986

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !19988

do.body:                                          ; preds = %for.end
  br label %do.body12, !dbg !19989

do.body12:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19990, metadata !DIExpression()), !dbg !19992
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19993, metadata !DIExpression()), !dbg !19992
  %cmp13 = icmp eq i64* %__dummy, %__dummy2, !dbg !19992
  %conv14 = zext i1 %cmp13 to i32, !dbg !19992
  store i32 1, i32* %tmp, align 4, !dbg !19992
  %19 = load i32, i32* %tmp, align 4, !dbg !19992
  br label %do.body15, !dbg !19994

do.body15:                                        ; preds = %do.body12
  br label %do.body16, !dbg !19995

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !19996

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !19998, metadata !DIExpression()), !dbg !20001
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !20002, metadata !DIExpression()), !dbg !20001
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !20001
  %conv21 = zext i1 %cmp20 to i32, !dbg !20001
  store i32 1, i32* %tmp22, align 4, !dbg !20001
  %20 = load i32, i32* %tmp22, align 4, !dbg !20001
  %call23 = call i64 @arch_local_irq_save() #13, !dbg !20003
  store i64 %call23, i64* %flags, align 8, !dbg !20003
  br label %do.end, !dbg !20003

do.end:                                           ; preds = %do.body17
  br label %do.end24, !dbg !19996

do.end24:                                         ; preds = %do.end
  br label %do.body25, !dbg !19995

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20004, !srcloc !20005
  br label %do.body26, !dbg !20004

do.body26:                                        ; preds = %do.body25
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20006
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 0, !dbg !20006
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20007
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !20008
  %rlock.i = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !20008
  br label %do.end28, !dbg !20006

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !20004

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !19995

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !19994

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !19989

do.end32:                                         ; preds = %do.end31
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20009
  %call33 = call i32 @nv_get_empty_tx_slots(%struct.fe_priv* %24) #13, !dbg !20010
  store i32 %call33, i32* %empty_slots, align 4, !dbg !20011
  %25 = load i32, i32* %empty_slots, align 4, !dbg !20012
  %26 = load i32, i32* %entries, align 4, !dbg !20012
  %cmp34 = icmp ule i32 %25, %26, !dbg !20012
  %lnot = xor i1 %cmp34, true, !dbg !20012
  %lnot36 = xor i1 %lnot, true, !dbg !20012
  %lnot.ext = zext i1 %lnot36 to i32, !dbg !20012
  %conv37 = sext i32 %lnot.ext to i64, !dbg !20012
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !20012
  br i1 %tobool38, label %if.then, label %if.end, !dbg !20013

if.then:                                          ; preds = %do.end32
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20014
  call void @netif_stop_queue(%struct.net_device* %27) #13, !dbg !20015
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20016
  %tx_stop = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 67, !dbg !20017
  store i32 1, i32* %tx_stop, align 8, !dbg !20018
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20019
  %lock39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 0, !dbg !20020
  %30 = load i64, i64* %flags, align 8, !dbg !20021
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i370, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !20022
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !20022
  store i32 1, i32* %tmp.i, align 4, !dbg !20022
  %31 = load i32, i32* %tmp.i, align 4, !dbg !20022
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !20023
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !20023
  store i32 1, i32* %tmp8.i, align 4, !dbg !20023
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !20023
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !20024
  call void @arch_local_irq_restore(i64 %33) #15, !dbg !20024
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20025, !srcloc !10037
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i370, align 8, !dbg !20026
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !20026
  %rlock.i371 = bitcast %union.anon.2* %35 to %struct.raw_spinlock*, !dbg !20026
  store i32 16, i32* %ret, align 4, !dbg !20027
  br label %txkick, !dbg !20028

if.end:                                           ; preds = %do.end32
  %36 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20029
  %lock40 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %36, i32 0, i32 0, !dbg !20030
  %37 = load i64, i64* %flags, align 8, !dbg !20031
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i372, align 8
  store i64 %37, i64* %flags.addr.i373, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !20032
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !20032
  store i32 1, i32* %tmp.i374, align 4, !dbg !20032
  %38 = load i32, i32* %tmp.i374, align 4, !dbg !20032
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !20033
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !20033
  store i32 1, i32* %tmp8.i375, align 4, !dbg !20033
  %39 = load i32, i32* %tmp8.i375, align 4, !dbg !20033
  %40 = load i64, i64* %flags.addr.i373, align 8, !dbg !20034
  call void @arch_local_irq_restore(i64 %40) #15, !dbg !20034
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20035, !srcloc !10037
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i372, align 8, !dbg !20036
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !20036
  %rlock.i376 = bitcast %union.anon.2* %42 to %struct.raw_spinlock*, !dbg !20036
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20037
  %put_tx41 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %43, i32 0, i32 54, !dbg !20038
  %ex = bitcast %union.ring_type* %put_tx41 to %struct.ring_desc_ex**, !dbg !20039
  %44 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !20039
  store %struct.ring_desc_ex* %44, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20040
  store %struct.ring_desc_ex* %44, %struct.ring_desc_ex** %start_tx, align 8, !dbg !20041
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20042
  %put_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 57, !dbg !20043
  %46 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx, align 8, !dbg !20043
  store %struct.nv_skb_map* %46, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20044
  br label %do.body42, !dbg !20045

do.body42:                                        ; preds = %do.cond, %if.end
  %47 = load i32, i32* %size, align 4, !dbg !20046
  %cmp43 = icmp ugt i32 %47, 16384, !dbg !20048
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !20049

cond.true:                                        ; preds = %do.body42
  br label %cond.end, !dbg !20049

cond.false:                                       ; preds = %do.body42
  %48 = load i32, i32* %size, align 4, !dbg !20050
  br label %cond.end, !dbg !20049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond45 = phi i32 [ 16384, %cond.true ], [ %48, %cond.false ], !dbg !20049
  store i32 %cond45, i32* %bcnt, align 4, !dbg !20051
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20052
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 20, !dbg !20052
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !20052
  %dev46 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 41, !dbg !20052
  %51 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20052
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %51, i32 0, i32 37, !dbg !20052
  %52 = load i8*, i8** %data, align 8, !dbg !20052
  %53 = load i32, i32* %offset, align 4, !dbg !20052
  %idx.ext = zext i32 %53 to i64, !dbg !20052
  %add.ptr = getelementptr i8, i8* %52, i64 %idx.ext, !dbg !20052
  %54 = load i32, i32* %bcnt, align 4, !dbg !20052
  %conv47 = zext i32 %54 to i64, !dbg !20052
  %call48 = call i64 @dma_map_single_attrs(%struct.device* %dev46, i8* %add.ptr, i64 %conv47, i32 1, i64 0) #13, !dbg !20052
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20053
  %put_tx_ctx49 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 57, !dbg !20054
  %56 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx49, align 8, !dbg !20054
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %56, i32 0, i32 1, !dbg !20055
  store i64 %call48, i64* %dma, align 8, !dbg !20056
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20057
  %pci_dev50 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 20, !dbg !20057
  %58 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev50, align 8, !dbg !20057
  %dev51 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 41, !dbg !20057
  %59 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20057
  %put_tx_ctx52 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %59, i32 0, i32 57, !dbg !20057
  %60 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx52, align 8, !dbg !20057
  %dma53 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %60, i32 0, i32 1, !dbg !20057
  %61 = load i64, i64* %dma53, align 8, !dbg !20057
  %call54 = call i32 @dma_mapping_error(%struct.device* %dev51, i64 %61) #13, !dbg !20057
  %tobool55 = icmp ne i32 %call54, 0, !dbg !20057
  %lnot56 = xor i1 %tobool55, true, !dbg !20057
  %lnot58 = xor i1 %lnot56, true, !dbg !20057
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !20057
  %conv60 = sext i32 %lnot.ext59 to i64, !dbg !20057
  %tobool61 = icmp ne i64 %conv60, 0, !dbg !20057
  br i1 %tobool61, label %if.then62, label %if.end70, !dbg !20059

if.then62:                                        ; preds = %cond.end
  %62 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20060
  call void @dev_kfree_skb_any(%struct.sk_buff* %62) #13, !dbg !20062
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20063
  %swstats_tx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 68, !dbg !20064
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp) #13, !dbg !20065
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !20066
  br label %do.body63, !dbg !20066

do.body63:                                        ; preds = %if.then62
  br label %do.body64, !dbg !20068

do.body64:                                        ; preds = %do.body63
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !20070, metadata !DIExpression()), !dbg !20072
  store i8* null, i8** %__vpp_verify, align 8, !dbg !20072
  %64 = load i8*, i8** %__vpp_verify, align 8, !dbg !20072
  br label %do.end65, !dbg !20072

do.end65:                                         ; preds = %do.body64
  br label %do.body66, !dbg !20068

do.body66:                                        ; preds = %do.end65
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !20073, metadata !DIExpression()), !dbg !20075
  store i32 1, i32* %pao_ID__, align 4, !dbg !20075
  %65 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20076
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %65, i32 0, i32 50, !dbg !20076
  %66 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !20076
  %stat_tx_dropped = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %66, i32 0, i32 6, !dbg !20076
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_dropped, i64* %stat_tx_dropped) #10, !dbg !20076, !srcloc !20079
  br label %do.end67, !dbg !20075

do.end67:                                         ; preds = %do.body66
  br label %do.end68, !dbg !20068

do.end68:                                         ; preds = %do.end67
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20080
  %swstats_tx_syncp69 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 68, !dbg !20081
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp69) #13, !dbg !20082
  store i32 0, i32* %ret, align 4, !dbg !20083
  br label %dma_error, !dbg !20084

if.end70:                                         ; preds = %cond.end
  %68 = load i32, i32* %bcnt, align 4, !dbg !20085
  %69 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20086
  %put_tx_ctx71 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %69, i32 0, i32 57, !dbg !20087
  %70 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx71, align 8, !dbg !20087
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %70, i32 0, i32 2, !dbg !20088
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !20089
  %bf.value = and i32 %68, 2147483647, !dbg !20089
  %bf.clear = and i32 %bf.load, -2147483648, !dbg !20089
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !20089
  store i32 %bf.set, i32* %dma_len, align 8, !dbg !20089
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20090
  %put_tx_ctx72 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 57, !dbg !20091
  %72 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx72, align 8, !dbg !20091
  %dma_single = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %72, i32 0, i32 2, !dbg !20092
  %bf.load73 = load i32, i32* %dma_single, align 8, !dbg !20093
  %bf.clear74 = and i32 %bf.load73, 2147483647, !dbg !20093
  %bf.set75 = or i32 %bf.clear74, -2147483648, !dbg !20093
  store i32 %bf.set75, i32* %dma_single, align 8, !dbg !20093
  %73 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20094
  %put_tx_ctx76 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %73, i32 0, i32 57, !dbg !20094
  %74 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx76, align 8, !dbg !20094
  %dma77 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %74, i32 0, i32 1, !dbg !20094
  %75 = load i64, i64* %dma77, align 8, !dbg !20094
  %call78 = call i32 @dma_high(i64 %75) #13, !dbg !20094
  %76 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20095
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %76, i32 0, i32 0, !dbg !20096
  store i32 %call78, i32* %bufhigh, align 4, !dbg !20097
  %77 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20098
  %put_tx_ctx79 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %77, i32 0, i32 57, !dbg !20098
  %78 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx79, align 8, !dbg !20098
  %dma80 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %78, i32 0, i32 1, !dbg !20098
  %79 = load i64, i64* %dma80, align 8, !dbg !20098
  %call81 = call i32 @dma_low(i64 %79) #13, !dbg !20098
  %80 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20099
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %80, i32 0, i32 1, !dbg !20100
  store i32 %call81, i32* %buflow, align 4, !dbg !20101
  %81 = load i32, i32* %bcnt, align 4, !dbg !20102
  %sub = sub i32 %81, 1, !dbg !20102
  %82 = load i32, i32* %tx_flags, align 4, !dbg !20102
  %or = or i32 %sub, %82, !dbg !20102
  %83 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20103
  %flaglen = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %83, i32 0, i32 3, !dbg !20104
  store i32 %or, i32* %flaglen, align 4, !dbg !20105
  store i32 -2147483648, i32* %tx_flags, align 4, !dbg !20106
  %84 = load i32, i32* %bcnt, align 4, !dbg !20107
  %85 = load i32, i32* %offset, align 4, !dbg !20108
  %add82 = add i32 %85, %84, !dbg !20108
  store i32 %add82, i32* %offset, align 4, !dbg !20108
  %86 = load i32, i32* %bcnt, align 4, !dbg !20109
  %87 = load i32, i32* %size, align 4, !dbg !20110
  %sub83 = sub i32 %87, %86, !dbg !20110
  store i32 %sub83, i32* %size, align 4, !dbg !20110
  %88 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20111
  %incdec.ptr = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %88, i32 1, !dbg !20111
  store %struct.ring_desc_ex* %incdec.ptr, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20111
  %89 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20111
  %last_tx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %89, i32 0, i32 55, !dbg !20111
  %ex84 = bitcast %union.ring_type* %last_tx to %struct.ring_desc_ex**, !dbg !20111
  %90 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex84, align 8, !dbg !20111
  %cmp85 = icmp eq %struct.ring_desc_ex* %88, %90, !dbg !20111
  %lnot87 = xor i1 %cmp85, true, !dbg !20111
  %lnot89 = xor i1 %lnot87, true, !dbg !20111
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !20111
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !20111
  %tobool92 = icmp ne i64 %conv91, 0, !dbg !20111
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !20113

if.then93:                                        ; preds = %if.end70
  %91 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20114
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %91, i32 0, i32 60, !dbg !20115
  %ex94 = bitcast %union.ring_type* %tx_ring to %struct.ring_desc_ex**, !dbg !20116
  %92 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex94, align 8, !dbg !20116
  store %struct.ring_desc_ex* %92, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20117
  br label %if.end95, !dbg !20118

if.end95:                                         ; preds = %if.then93, %if.end70
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20119
  %put_tx_ctx96 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 57, !dbg !20119
  %94 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx96, align 8, !dbg !20119
  %incdec.ptr97 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %94, i32 1, !dbg !20119
  store %struct.nv_skb_map* %incdec.ptr97, %struct.nv_skb_map** %put_tx_ctx96, align 8, !dbg !20119
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20119
  %last_tx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 58, !dbg !20119
  %96 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx, align 8, !dbg !20119
  %cmp98 = icmp eq %struct.nv_skb_map* %94, %96, !dbg !20119
  %lnot100 = xor i1 %cmp98, true, !dbg !20119
  %lnot102 = xor i1 %lnot100, true, !dbg !20119
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !20119
  %conv104 = sext i32 %lnot.ext103 to i64, !dbg !20119
  %tobool105 = icmp ne i64 %conv104, 0, !dbg !20119
  br i1 %tobool105, label %if.then106, label %if.end108, !dbg !20121

if.then106:                                       ; preds = %if.end95
  %97 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20122
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %97, i32 0, i32 59, !dbg !20123
  %98 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb, align 8, !dbg !20123
  %99 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20124
  %put_tx_ctx107 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %99, i32 0, i32 57, !dbg !20125
  store %struct.nv_skb_map* %98, %struct.nv_skb_map** %put_tx_ctx107, align 8, !dbg !20126
  br label %if.end108, !dbg !20124

if.end108:                                        ; preds = %if.then106, %if.end95
  br label %do.cond, !dbg !20127

do.cond:                                          ; preds = %if.end108
  %100 = load i32, i32* %size, align 4, !dbg !20128
  %tobool109 = icmp ne i32 %100, 0, !dbg !20127
  br i1 %tobool109, label %do.body42, label %do.end110, !dbg !20127, !llvm.loop !20129

do.end110:                                        ; preds = %do.cond
  store i32 0, i32* %i, align 4, !dbg !20131
  br label %for.cond111, !dbg !20133

for.cond111:                                      ; preds = %for.inc244, %do.end110
  %101 = load i32, i32* %i, align 4, !dbg !20134
  %102 = load i32, i32* %fragments, align 4, !dbg !20136
  %cmp112 = icmp ult i32 %101, %102, !dbg !20137
  br i1 %cmp112, label %for.body114, label %for.end246, !dbg !20138

for.body114:                                      ; preds = %for.cond111
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !20139, metadata !DIExpression()), !dbg !20142
  %103 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20143
  %call115 = call i8* @skb_end_pointer(%struct.sk_buff* %103) #13, !dbg !20143
  %104 = bitcast i8* %call115 to %struct.skb_shared_info*, !dbg !20144
  %frags116 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %104, i32 0, i32 12, !dbg !20144
  %105 = load i32, i32* %i, align 4, !dbg !20145
  %idxprom117 = zext i32 %105 to i64, !dbg !20143
  %arrayidx118 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags116, i64 0, i64 %idxprom117, !dbg !20143
  store %struct.bio_vec* %arrayidx118, %struct.bio_vec** %frag, align 8, !dbg !20142
  call void @llvm.dbg.declare(metadata i32* %frag_size119, metadata !20146, metadata !DIExpression()), !dbg !20147
  %106 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !20148
  %call120 = call i32 @skb_frag_size(%struct.bio_vec* %106) #13, !dbg !20149
  store i32 %call120, i32* %frag_size119, align 4, !dbg !20147
  store i32 0, i32* %offset, align 4, !dbg !20150
  br label %do.body121, !dbg !20151

do.body121:                                       ; preds = %do.cond241, %for.body114
  %107 = load i32, i32* %frag_size119, align 4, !dbg !20152
  %cmp122 = icmp ugt i32 %107, 16384, !dbg !20154
  br i1 %cmp122, label %cond.true124, label %cond.false125, !dbg !20155

cond.true124:                                     ; preds = %do.body121
  br label %cond.end126, !dbg !20155

cond.false125:                                    ; preds = %do.body121
  %108 = load i32, i32* %frag_size119, align 4, !dbg !20156
  br label %cond.end126, !dbg !20155

cond.end126:                                      ; preds = %cond.false125, %cond.true124
  %cond127 = phi i32 [ 16384, %cond.true124 ], [ %108, %cond.false125 ], !dbg !20155
  store i32 %cond127, i32* %bcnt, align 4, !dbg !20157
  %109 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20158
  %tobool128 = icmp ne %struct.nv_skb_map* %109, null, !dbg !20158
  br i1 %tobool128, label %if.end131, label %if.then129, !dbg !20160

if.then129:                                       ; preds = %cond.end126
  %110 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20161
  %put_tx_ctx130 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %110, i32 0, i32 57, !dbg !20162
  %111 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx130, align 8, !dbg !20162
  store %struct.nv_skb_map* %111, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !20163
  store %struct.nv_skb_map* %111, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20164
  br label %if.end131, !dbg !20165

if.end131:                                        ; preds = %if.then129, %cond.end126
  %112 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20166
  %pci_dev132 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %112, i32 0, i32 20, !dbg !20167
  %113 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev132, align 8, !dbg !20167
  %dev133 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %113, i32 0, i32 41, !dbg !20168
  %114 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !20169
  %115 = load i32, i32* %offset, align 4, !dbg !20170
  %conv134 = zext i32 %115 to i64, !dbg !20170
  %116 = load i32, i32* %bcnt, align 4, !dbg !20171
  %conv135 = zext i32 %116 to i64, !dbg !20171
  %call136 = call i64 @skb_frag_dma_map(%struct.device* %dev133, %struct.bio_vec* %114, i64 %conv134, i64 %conv135, i32 1) #13, !dbg !20172
  %117 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20173
  %put_tx_ctx137 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %117, i32 0, i32 57, !dbg !20174
  %118 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx137, align 8, !dbg !20174
  %dma138 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %118, i32 0, i32 1, !dbg !20175
  store i64 %call136, i64* %dma138, align 8, !dbg !20176
  %119 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20177
  %pci_dev139 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %119, i32 0, i32 20, !dbg !20177
  %120 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev139, align 8, !dbg !20177
  %dev140 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %120, i32 0, i32 41, !dbg !20177
  %121 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20177
  %put_tx_ctx141 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %121, i32 0, i32 57, !dbg !20177
  %122 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx141, align 8, !dbg !20177
  %dma142 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %122, i32 0, i32 1, !dbg !20177
  %123 = load i64, i64* %dma142, align 8, !dbg !20177
  %call143 = call i32 @dma_mapping_error(%struct.device* %dev140, i64 %123) #13, !dbg !20177
  %tobool144 = icmp ne i32 %call143, 0, !dbg !20177
  %lnot145 = xor i1 %tobool144, true, !dbg !20177
  %lnot147 = xor i1 %lnot145, true, !dbg !20177
  %lnot.ext148 = zext i1 %lnot147 to i32, !dbg !20177
  %conv149 = sext i32 %lnot.ext148 to i64, !dbg !20177
  %tobool150 = icmp ne i64 %conv149, 0, !dbg !20177
  br i1 %tobool150, label %if.then151, label %if.end187, !dbg !20179

if.then151:                                       ; preds = %if.end131
  br label %do.body152, !dbg !20180

do.body152:                                       ; preds = %do.cond166, %if.then151
  %124 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20182
  %125 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20184
  call void @nv_unmap_txskb(%struct.fe_priv* %124, %struct.nv_skb_map* %125) #13, !dbg !20185
  %126 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !20186
  %incdec.ptr153 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %126, i32 1, !dbg !20186
  store %struct.nv_skb_map* %incdec.ptr153, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !20186
  %127 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20186
  %last_tx_ctx154 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %127, i32 0, i32 58, !dbg !20186
  %128 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx154, align 8, !dbg !20186
  %cmp155 = icmp eq %struct.nv_skb_map* %126, %128, !dbg !20186
  %lnot157 = xor i1 %cmp155, true, !dbg !20186
  %lnot159 = xor i1 %lnot157, true, !dbg !20186
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !20186
  %conv161 = sext i32 %lnot.ext160 to i64, !dbg !20186
  %tobool162 = icmp ne i64 %conv161, 0, !dbg !20186
  br i1 %tobool162, label %if.then163, label %if.end165, !dbg !20188

if.then163:                                       ; preds = %do.body152
  %129 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20189
  %tx_skb164 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %129, i32 0, i32 59, !dbg !20190
  %130 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb164, align 8, !dbg !20190
  store %struct.nv_skb_map* %130, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !20191
  br label %if.end165, !dbg !20192

if.end165:                                        ; preds = %if.then163, %do.body152
  br label %do.cond166, !dbg !20193

do.cond166:                                       ; preds = %if.end165
  %131 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tmp_tx_ctx, align 8, !dbg !20194
  %132 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20195
  %put_tx_ctx167 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %132, i32 0, i32 57, !dbg !20196
  %133 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx167, align 8, !dbg !20196
  %cmp168 = icmp ne %struct.nv_skb_map* %131, %133, !dbg !20197
  br i1 %cmp168, label %do.body152, label %do.end170, !dbg !20193, !llvm.loop !20198

do.end170:                                        ; preds = %do.cond166
  %134 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20200
  call void @dev_kfree_skb_any(%struct.sk_buff* %134) #13, !dbg !20201
  %135 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20202
  %136 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20203
  %put_tx_ctx171 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %136, i32 0, i32 57, !dbg !20204
  store %struct.nv_skb_map* %135, %struct.nv_skb_map** %put_tx_ctx171, align 8, !dbg !20205
  %137 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20206
  %swstats_tx_syncp172 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %137, i32 0, i32 68, !dbg !20207
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_tx_syncp172) #13, !dbg !20208
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !20209
  br label %do.body173, !dbg !20209

do.body173:                                       ; preds = %do.end170
  br label %do.body174, !dbg !20211

do.body174:                                       ; preds = %do.body173
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify175, metadata !20213, metadata !DIExpression()), !dbg !20215
  store i8* null, i8** %__vpp_verify175, align 8, !dbg !20215
  %138 = load i8*, i8** %__vpp_verify175, align 8, !dbg !20215
  br label %do.end177, !dbg !20215

do.end177:                                        ; preds = %do.body174
  br label %do.body178, !dbg !20211

do.body178:                                       ; preds = %do.end177
  call void @llvm.dbg.declare(metadata i32* %pao_ID__179, metadata !20216, metadata !DIExpression()), !dbg !20218
  store i32 1, i32* %pao_ID__179, align 4, !dbg !20218
  %139 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20219
  %txrx_stats180 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %139, i32 0, i32 50, !dbg !20219
  %140 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats180, align 8, !dbg !20219
  %stat_tx_dropped181 = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %140, i32 0, i32 6, !dbg !20219
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_tx_dropped181, i64* %stat_tx_dropped181) #10, !dbg !20219, !srcloc !20222
  br label %do.end183, !dbg !20218

do.end183:                                        ; preds = %do.body178
  br label %do.end185, !dbg !20211

do.end185:                                        ; preds = %do.end183
  %141 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20223
  %swstats_tx_syncp186 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %141, i32 0, i32 68, !dbg !20224
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_tx_syncp186) #13, !dbg !20225
  store i32 0, i32* %ret, align 4, !dbg !20226
  br label %dma_error, !dbg !20227

if.end187:                                        ; preds = %if.end131
  %142 = load i32, i32* %bcnt, align 4, !dbg !20228
  %143 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20229
  %put_tx_ctx188 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %143, i32 0, i32 57, !dbg !20230
  %144 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx188, align 8, !dbg !20230
  %dma_len189 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %144, i32 0, i32 2, !dbg !20231
  %bf.load190 = load i32, i32* %dma_len189, align 8, !dbg !20232
  %bf.value191 = and i32 %142, 2147483647, !dbg !20232
  %bf.clear192 = and i32 %bf.load190, -2147483648, !dbg !20232
  %bf.set193 = or i32 %bf.clear192, %bf.value191, !dbg !20232
  store i32 %bf.set193, i32* %dma_len189, align 8, !dbg !20232
  %145 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20233
  %put_tx_ctx194 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %145, i32 0, i32 57, !dbg !20234
  %146 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx194, align 8, !dbg !20234
  %dma_single195 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %146, i32 0, i32 2, !dbg !20235
  %bf.load196 = load i32, i32* %dma_single195, align 8, !dbg !20236
  %bf.clear197 = and i32 %bf.load196, 2147483647, !dbg !20236
  store i32 %bf.clear197, i32* %dma_single195, align 8, !dbg !20236
  %147 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20237
  %put_tx_ctx198 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %147, i32 0, i32 57, !dbg !20237
  %148 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx198, align 8, !dbg !20237
  %dma199 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %148, i32 0, i32 1, !dbg !20237
  %149 = load i64, i64* %dma199, align 8, !dbg !20237
  %call200 = call i32 @dma_high(i64 %149) #13, !dbg !20237
  %150 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20238
  %bufhigh201 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %150, i32 0, i32 0, !dbg !20239
  store i32 %call200, i32* %bufhigh201, align 4, !dbg !20240
  %151 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20241
  %put_tx_ctx202 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %151, i32 0, i32 57, !dbg !20241
  %152 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx202, align 8, !dbg !20241
  %dma203 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %152, i32 0, i32 1, !dbg !20241
  %153 = load i64, i64* %dma203, align 8, !dbg !20241
  %call204 = call i32 @dma_low(i64 %153) #13, !dbg !20241
  %154 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20242
  %buflow205 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %154, i32 0, i32 1, !dbg !20243
  store i32 %call204, i32* %buflow205, align 4, !dbg !20244
  %155 = load i32, i32* %bcnt, align 4, !dbg !20245
  %sub206 = sub i32 %155, 1, !dbg !20245
  %156 = load i32, i32* %tx_flags, align 4, !dbg !20245
  %or207 = or i32 %sub206, %156, !dbg !20245
  %157 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20246
  %flaglen208 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %157, i32 0, i32 3, !dbg !20247
  store i32 %or207, i32* %flaglen208, align 4, !dbg !20248
  %158 = load i32, i32* %bcnt, align 4, !dbg !20249
  %159 = load i32, i32* %offset, align 4, !dbg !20250
  %add209 = add i32 %159, %158, !dbg !20250
  store i32 %add209, i32* %offset, align 4, !dbg !20250
  %160 = load i32, i32* %bcnt, align 4, !dbg !20251
  %161 = load i32, i32* %frag_size119, align 4, !dbg !20252
  %sub210 = sub i32 %161, %160, !dbg !20252
  store i32 %sub210, i32* %frag_size119, align 4, !dbg !20252
  %162 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20253
  %incdec.ptr211 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %162, i32 1, !dbg !20253
  store %struct.ring_desc_ex* %incdec.ptr211, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20253
  %163 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20253
  %last_tx212 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %163, i32 0, i32 55, !dbg !20253
  %ex213 = bitcast %union.ring_type* %last_tx212 to %struct.ring_desc_ex**, !dbg !20253
  %164 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex213, align 8, !dbg !20253
  %cmp214 = icmp eq %struct.ring_desc_ex* %162, %164, !dbg !20253
  %lnot216 = xor i1 %cmp214, true, !dbg !20253
  %lnot218 = xor i1 %lnot216, true, !dbg !20253
  %lnot.ext219 = zext i1 %lnot218 to i32, !dbg !20253
  %conv220 = sext i32 %lnot.ext219 to i64, !dbg !20253
  %tobool221 = icmp ne i64 %conv220, 0, !dbg !20253
  br i1 %tobool221, label %if.then222, label %if.end225, !dbg !20255

if.then222:                                       ; preds = %if.end187
  %165 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20256
  %tx_ring223 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %165, i32 0, i32 60, !dbg !20257
  %ex224 = bitcast %union.ring_type* %tx_ring223 to %struct.ring_desc_ex**, !dbg !20258
  %166 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex224, align 8, !dbg !20258
  store %struct.ring_desc_ex* %166, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20259
  br label %if.end225, !dbg !20260

if.end225:                                        ; preds = %if.then222, %if.end187
  %167 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20261
  %put_tx_ctx226 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %167, i32 0, i32 57, !dbg !20261
  %168 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx226, align 8, !dbg !20261
  %incdec.ptr227 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %168, i32 1, !dbg !20261
  store %struct.nv_skb_map* %incdec.ptr227, %struct.nv_skb_map** %put_tx_ctx226, align 8, !dbg !20261
  %169 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20261
  %last_tx_ctx228 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %169, i32 0, i32 58, !dbg !20261
  %170 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx228, align 8, !dbg !20261
  %cmp229 = icmp eq %struct.nv_skb_map* %168, %170, !dbg !20261
  %lnot231 = xor i1 %cmp229, true, !dbg !20261
  %lnot233 = xor i1 %lnot231, true, !dbg !20261
  %lnot.ext234 = zext i1 %lnot233 to i32, !dbg !20261
  %conv235 = sext i32 %lnot.ext234 to i64, !dbg !20261
  %tobool236 = icmp ne i64 %conv235, 0, !dbg !20261
  br i1 %tobool236, label %if.then237, label %if.end240, !dbg !20263

if.then237:                                       ; preds = %if.end225
  %171 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20264
  %tx_skb238 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %171, i32 0, i32 59, !dbg !20265
  %172 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb238, align 8, !dbg !20265
  %173 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20266
  %put_tx_ctx239 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %173, i32 0, i32 57, !dbg !20267
  store %struct.nv_skb_map* %172, %struct.nv_skb_map** %put_tx_ctx239, align 8, !dbg !20268
  br label %if.end240, !dbg !20266

if.end240:                                        ; preds = %if.then237, %if.end225
  br label %do.cond241, !dbg !20269

do.cond241:                                       ; preds = %if.end240
  %174 = load i32, i32* %frag_size119, align 4, !dbg !20270
  %tobool242 = icmp ne i32 %174, 0, !dbg !20269
  br i1 %tobool242, label %do.body121, label %do.end243, !dbg !20269, !llvm.loop !20271

do.end243:                                        ; preds = %do.cond241
  br label %for.inc244, !dbg !20273

for.inc244:                                       ; preds = %do.end243
  %175 = load i32, i32* %i, align 4, !dbg !20274
  %inc245 = add i32 %175, 1, !dbg !20274
  store i32 %inc245, i32* %i, align 4, !dbg !20274
  br label %for.cond111, !dbg !20275, !llvm.loop !20276

for.end246:                                       ; preds = %for.cond111
  %176 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20278
  %177 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20278
  %tx_ring247 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %177, i32 0, i32 60, !dbg !20278
  %ex248 = bitcast %union.ring_type* %tx_ring247 to %struct.ring_desc_ex**, !dbg !20278
  %178 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex248, align 8, !dbg !20278
  %cmp249 = icmp eq %struct.ring_desc_ex* %176, %178, !dbg !20278
  %lnot251 = xor i1 %cmp249, true, !dbg !20278
  %lnot253 = xor i1 %lnot251, true, !dbg !20278
  %lnot.ext254 = zext i1 %lnot253 to i32, !dbg !20278
  %conv255 = sext i32 %lnot.ext254 to i64, !dbg !20278
  %tobool256 = icmp ne i64 %conv255, 0, !dbg !20278
  br i1 %tobool256, label %if.then257, label %if.else, !dbg !20280

if.then257:                                       ; preds = %for.end246
  %179 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20281
  %last_tx258 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %179, i32 0, i32 55, !dbg !20282
  %ex259 = bitcast %union.ring_type* %last_tx258 to %struct.ring_desc_ex**, !dbg !20283
  %180 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex259, align 8, !dbg !20283
  store %struct.ring_desc_ex* %180, %struct.ring_desc_ex** %prev_tx, align 8, !dbg !20284
  br label %if.end261, !dbg !20285

if.else:                                          ; preds = %for.end246
  %181 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20286
  %add.ptr260 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %181, i64 -1, !dbg !20287
  store %struct.ring_desc_ex* %add.ptr260, %struct.ring_desc_ex** %prev_tx, align 8, !dbg !20288
  br label %if.end261

if.end261:                                        ; preds = %if.else, %if.then257
  %182 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20289
  %put_tx_ctx262 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %182, i32 0, i32 57, !dbg !20289
  %183 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx262, align 8, !dbg !20289
  %184 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20289
  %tx_skb263 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %184, i32 0, i32 59, !dbg !20289
  %185 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb263, align 8, !dbg !20289
  %cmp264 = icmp eq %struct.nv_skb_map* %183, %185, !dbg !20289
  %lnot266 = xor i1 %cmp264, true, !dbg !20289
  %lnot268 = xor i1 %lnot266, true, !dbg !20289
  %lnot.ext269 = zext i1 %lnot268 to i32, !dbg !20289
  %conv270 = sext i32 %lnot.ext269 to i64, !dbg !20289
  %tobool271 = icmp ne i64 %conv270, 0, !dbg !20289
  br i1 %tobool271, label %if.then272, label %if.else274, !dbg !20291

if.then272:                                       ; preds = %if.end261
  %186 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20292
  %last_tx_ctx273 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %186, i32 0, i32 58, !dbg !20293
  %187 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_tx_ctx273, align 8, !dbg !20293
  store %struct.nv_skb_map* %187, %struct.nv_skb_map** %prev_tx_ctx, align 8, !dbg !20294
  br label %if.end277, !dbg !20295

if.else274:                                       ; preds = %if.end261
  %188 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20296
  %put_tx_ctx275 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %188, i32 0, i32 57, !dbg !20297
  %189 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx275, align 8, !dbg !20297
  %add.ptr276 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %189, i64 -1, !dbg !20298
  store %struct.nv_skb_map* %add.ptr276, %struct.nv_skb_map** %prev_tx_ctx, align 8, !dbg !20299
  br label %if.end277

if.end277:                                        ; preds = %if.else274, %if.then272
  %190 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %prev_tx, align 8, !dbg !20300
  %flaglen278 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %190, i32 0, i32 3, !dbg !20301
  %191 = load i32, i32* %flaglen278, align 4, !dbg !20302
  %or279 = or i32 %191, 536870912, !dbg !20302
  store i32 %or279, i32* %flaglen278, align 4, !dbg !20302
  %192 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20303
  %193 = load %struct.nv_skb_map*, %struct.nv_skb_map** %prev_tx_ctx, align 8, !dbg !20304
  %skb280 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %193, i32 0, i32 0, !dbg !20305
  store %struct.sk_buff* %192, %struct.sk_buff** %skb280, align 8, !dbg !20306
  %194 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20307
  %call281 = call zeroext i1 @skb_is_gso(%struct.sk_buff* %194) #13, !dbg !20309
  br i1 %call281, label %if.then282, label %if.else286, !dbg !20310

if.then282:                                       ; preds = %if.end277
  %195 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20311
  %call283 = call i8* @skb_end_pointer(%struct.sk_buff* %195) #13, !dbg !20311
  %196 = bitcast i8* %call283 to %struct.skb_shared_info*, !dbg !20312
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %196, i32 0, i32 4, !dbg !20312
  %197 = load i16, i16* %gso_size, align 4, !dbg !20312
  %conv284 = zext i16 %197 to i32, !dbg !20311
  %shl = shl i32 %conv284, 14, !dbg !20313
  %or285 = or i32 268435456, %shl, !dbg !20314
  store i32 %or285, i32* %tx_flags_extra, align 4, !dbg !20315
  br label %if.end293, !dbg !20316

if.else286:                                       ; preds = %if.end277
  %198 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20317
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %198, i32 0, i32 14, !dbg !20318
  %bf.load287 = load i16, i16* %ip_summed, align 8, !dbg !20318
  %bf.lshr = lshr i16 %bf.load287, 5, !dbg !20318
  %bf.clear288 = and i16 %bf.lshr, 3, !dbg !20318
  %bf.cast = trunc i16 %bf.clear288 to i8, !dbg !20318
  %conv289 = zext i8 %bf.cast to i32, !dbg !20317
  %cmp290 = icmp eq i32 %conv289, 3, !dbg !20319
  %199 = zext i1 %cmp290 to i64, !dbg !20317
  %cond292 = select i1 %cmp290, i32 201326592, i32 0, !dbg !20317
  store i32 %cond292, i32* %tx_flags_extra, align 4, !dbg !20320
  br label %if.end293

if.end293:                                        ; preds = %if.else286, %if.then282
  %200 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20321
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %200, i32 0, i32 16, !dbg !20321
  %bf.load294 = load i16, i16* %vlan_present, align 2, !dbg !20321
  %bf.clear295 = and i16 %bf.load294, 1, !dbg !20321
  %bf.cast296 = trunc i16 %bf.clear295 to i8, !dbg !20321
  %tobool297 = icmp ne i8 %bf.cast296, 0, !dbg !20321
  br i1 %tobool297, label %if.then298, label %if.else301, !dbg !20323

if.then298:                                       ; preds = %if.end293
  %201 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20324
  %vlan_tci = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %201, i32 0, i32 22, !dbg !20324
  %202 = load i16, i16* %vlan_tci, align 2, !dbg !20324
  %conv299 = zext i16 %202 to i32, !dbg !20324
  %or300 = or i32 262144, %conv299, !dbg !20324
  %203 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %start_tx, align 8, !dbg !20325
  %txvlan = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %203, i32 0, i32 2, !dbg !20326
  store i32 %or300, i32* %txvlan, align 4, !dbg !20327
  br label %if.end303, !dbg !20325

if.else301:                                       ; preds = %if.end293
  %204 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %start_tx, align 8, !dbg !20328
  %txvlan302 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %204, i32 0, i32 2, !dbg !20329
  store i32 0, i32* %txvlan302, align 4, !dbg !20330
  br label %if.end303

if.end303:                                        ; preds = %if.else301, %if.then298
  br label %do.body304, !dbg !20331

do.body304:                                       ; preds = %if.end303
  br label %do.body305, !dbg !20332

do.body305:                                       ; preds = %do.body304
  call void @llvm.dbg.declare(metadata i64* %__dummy306, metadata !20333, metadata !DIExpression()), !dbg !20335
  call void @llvm.dbg.declare(metadata i64* %__dummy2307, metadata !20336, metadata !DIExpression()), !dbg !20335
  %cmp308 = icmp eq i64* %__dummy306, %__dummy2307, !dbg !20335
  %conv309 = zext i1 %cmp308 to i32, !dbg !20335
  store i32 1, i32* %tmp310, align 4, !dbg !20335
  %205 = load i32, i32* %tmp310, align 4, !dbg !20335
  br label %do.body311, !dbg !20337

do.body311:                                       ; preds = %do.body305
  br label %do.body312, !dbg !20338

do.body312:                                       ; preds = %do.body311
  br label %do.body313, !dbg !20339

do.body313:                                       ; preds = %do.body312
  call void @llvm.dbg.declare(metadata i64* %__dummy314, metadata !20341, metadata !DIExpression()), !dbg !20344
  call void @llvm.dbg.declare(metadata i64* %__dummy2315, metadata !20345, metadata !DIExpression()), !dbg !20344
  %cmp316 = icmp eq i64* %__dummy314, %__dummy2315, !dbg !20344
  %conv317 = zext i1 %cmp316 to i32, !dbg !20344
  store i32 1, i32* %tmp318, align 4, !dbg !20344
  %206 = load i32, i32* %tmp318, align 4, !dbg !20344
  %call319 = call i64 @arch_local_irq_save() #13, !dbg !20346
  store i64 %call319, i64* %flags, align 8, !dbg !20346
  br label %do.end321, !dbg !20346

do.end321:                                        ; preds = %do.body313
  br label %do.end323, !dbg !20339

do.end323:                                        ; preds = %do.end321
  br label %do.body324, !dbg !20338

do.body324:                                       ; preds = %do.end323
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20347, !srcloc !20348
  br label %do.body325, !dbg !20347

do.body325:                                       ; preds = %do.body324
  %207 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20349
  %lock326 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %207, i32 0, i32 0, !dbg !20349
  store %struct.spinlock* %lock326, %struct.spinlock** %lock.addr.i377, align 8
  %208 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i377, align 8, !dbg !20350
  %209 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %208, i32 0, i32 0, !dbg !20351
  %rlock.i378 = bitcast %union.anon.2* %209 to %struct.raw_spinlock*, !dbg !20351
  br label %do.end329, !dbg !20349

do.end329:                                        ; preds = %do.body325
  br label %do.end331, !dbg !20347

do.end331:                                        ; preds = %do.end329
  br label %do.end333, !dbg !20338

do.end333:                                        ; preds = %do.end331
  br label %do.end335, !dbg !20337

do.end335:                                        ; preds = %do.end333
  br label %do.end337, !dbg !20332

do.end337:                                        ; preds = %do.end335
  %210 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20352
  %tx_limit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %210, i32 0, i32 63, !dbg !20354
  %211 = load i32, i32* %tx_limit, align 8, !dbg !20354
  %tobool338 = icmp ne i32 %211, 0, !dbg !20352
  br i1 %tobool338, label %if.then339, label %if.end354, !dbg !20355

if.then339:                                       ; preds = %do.end337
  %212 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20356
  %tx_pkts_in_progress = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %212, i32 0, i32 64, !dbg !20359
  %213 = load i32, i32* %tx_pkts_in_progress, align 4, !dbg !20359
  %cmp340 = icmp eq i32 %213, 16, !dbg !20360
  br i1 %cmp340, label %if.then342, label %if.else350, !dbg !20361

if.then342:                                       ; preds = %if.then339
  %214 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20362
  %tx_change_owner = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %214, i32 0, i32 65, !dbg !20365
  %215 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_change_owner, align 8, !dbg !20365
  %tobool343 = icmp ne %struct.nv_skb_map* %215, null, !dbg !20362
  br i1 %tobool343, label %if.end346, label %if.then344, !dbg !20366

if.then344:                                       ; preds = %if.then342
  %216 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20367
  %217 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20368
  %tx_change_owner345 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %217, i32 0, i32 65, !dbg !20369
  store %struct.nv_skb_map* %216, %struct.nv_skb_map** %tx_change_owner345, align 8, !dbg !20370
  br label %if.end346, !dbg !20368

if.end346:                                        ; preds = %if.then344, %if.then342
  %218 = load i32, i32* %tx_flags, align 4, !dbg !20371
  %and347 = and i32 %218, 2147483647, !dbg !20371
  store i32 %and347, i32* %tx_flags, align 4, !dbg !20371
  %219 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %start_tx, align 8, !dbg !20372
  %220 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20373
  %first_tx_desc = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %220, i32 0, i32 3, !dbg !20374
  store %struct.ring_desc_ex* %219, %struct.ring_desc_ex** %first_tx_desc, align 8, !dbg !20375
  %221 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20376
  %put_tx_ctx348 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %221, i32 0, i32 57, !dbg !20377
  %222 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx348, align 8, !dbg !20377
  %223 = load %struct.nv_skb_map*, %struct.nv_skb_map** %start_tx_ctx, align 8, !dbg !20378
  %next_tx_ctx = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %223, i32 0, i32 4, !dbg !20379
  store %struct.nv_skb_map* %222, %struct.nv_skb_map** %next_tx_ctx, align 8, !dbg !20380
  %224 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20381
  %put_tx_ctx349 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %224, i32 0, i32 57, !dbg !20382
  %225 = load %struct.nv_skb_map*, %struct.nv_skb_map** %put_tx_ctx349, align 8, !dbg !20382
  %226 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20383
  %tx_end_flip = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %226, i32 0, i32 66, !dbg !20384
  store %struct.nv_skb_map* %225, %struct.nv_skb_map** %tx_end_flip, align 8, !dbg !20385
  br label %if.end353, !dbg !20386

if.else350:                                       ; preds = %if.then339
  %227 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20387
  %tx_pkts_in_progress351 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %227, i32 0, i32 64, !dbg !20389
  %228 = load i32, i32* %tx_pkts_in_progress351, align 4, !dbg !20390
  %inc352 = add i32 %228, 1, !dbg !20390
  store i32 %inc352, i32* %tx_pkts_in_progress351, align 4, !dbg !20390
  br label %if.end353

if.end353:                                        ; preds = %if.else350, %if.end346
  br label %if.end354, !dbg !20391

if.end354:                                        ; preds = %if.end353, %do.end337
  %229 = load i32, i32* %tx_flags, align 4, !dbg !20392
  %230 = load i32, i32* %tx_flags_extra, align 4, !dbg !20392
  %or355 = or i32 %229, %230, !dbg !20392
  %231 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %start_tx, align 8, !dbg !20393
  %flaglen356 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %231, i32 0, i32 3, !dbg !20394
  %232 = load i32, i32* %flaglen356, align 4, !dbg !20395
  %or357 = or i32 %232, %or355, !dbg !20395
  store i32 %or357, i32* %flaglen356, align 4, !dbg !20395
  %233 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20396
  %dev358 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %233, i32 0, i32 1, !dbg !20397
  %234 = load %struct.net_device*, %struct.net_device** %dev358, align 8, !dbg !20397
  %235 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20398
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %235, i32 0, i32 5, !dbg !20399
  %236 = load i32, i32* %len, align 8, !dbg !20399
  call void @netdev_sent_queue(%struct.net_device* %234, i32 %236) #13, !dbg !20400
  %237 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20401
  call void @skb_tx_timestamp(%struct.sk_buff* %237) #13, !dbg !20402
  %238 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %put_tx, align 8, !dbg !20403
  %239 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20404
  %put_tx359 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %239, i32 0, i32 54, !dbg !20405
  %ex360 = bitcast %union.ring_type* %put_tx359 to %struct.ring_desc_ex**, !dbg !20406
  store %struct.ring_desc_ex* %238, %struct.ring_desc_ex** %ex360, align 8, !dbg !20407
  %240 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20408
  %lock361 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %240, i32 0, i32 0, !dbg !20409
  %241 = load i64, i64* %flags, align 8, !dbg !20410
  store %struct.spinlock* %lock361, %struct.spinlock** %lock.addr.i379, align 8
  store i64 %241, i64* %flags.addr.i380, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !20411
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !20411
  store i32 1, i32* %tmp.i381, align 4, !dbg !20411
  %242 = load i32, i32* %tmp.i381, align 4, !dbg !20411
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !20412
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !20412
  store i32 1, i32* %tmp8.i382, align 4, !dbg !20412
  %243 = load i32, i32* %tmp8.i382, align 4, !dbg !20412
  %244 = load i64, i64* %flags.addr.i380, align 8, !dbg !20413
  call void @arch_local_irq_restore(i64 %244) #15, !dbg !20413
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20414, !srcloc !10037
  %245 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i379, align 8, !dbg !20415
  %246 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %245, i32 0, i32 0, !dbg !20415
  %rlock.i383 = bitcast %union.anon.2* %246 to %struct.raw_spinlock*, !dbg !20415
  br label %txkick, !dbg !20416

txkick:                                           ; preds = %if.end354, %if.then
  call void @llvm.dbg.label(metadata !20417), !dbg !20418
  %247 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20419
  %call362 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %247) #13, !dbg !20421
  br i1 %call362, label %if.then365, label %lor.lhs.false, !dbg !20422

lor.lhs.false:                                    ; preds = %txkick
  %call364 = call zeroext i1 @netdev_xmit_more() #13, !dbg !20423
  br i1 %call364, label %if.end369, label %if.then365, !dbg !20424

if.then365:                                       ; preds = %lor.lhs.false, %txkick
  call void @llvm.dbg.declare(metadata i32* %txrxctl_kick, metadata !20425, metadata !DIExpression()), !dbg !20427
  br label %dma_error, !dbg !20428

dma_error:                                        ; preds = %if.then365, %do.end185, %do.end68
  call void @llvm.dbg.label(metadata !20429), !dbg !20430
  %248 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20431
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %248, i32 0, i32 25, !dbg !20432
  %249 = load i32, i32* %txrxctl_bits, align 4, !dbg !20432
  %or366 = or i32 1, %249, !dbg !20433
  store i32 %or366, i32* %txrxctl_kick, align 4, !dbg !20434
  %250 = load i32, i32* %txrxctl_kick, align 4, !dbg !20435
  %251 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20436
  %call367 = call i8* @get_hwbase(%struct.net_device* %251) #13, !dbg !20437
  %add.ptr368 = getelementptr i8, i8* %call367, i64 324, !dbg !20438
  call void @writel(i32 %250, i8* %add.ptr368) #13, !dbg !20439
  br label %if.end369, !dbg !20440

if.end369:                                        ; preds = %dma_error, %lor.lhs.false
  %252 = load i32, i32* %ret, align 4, !dbg !20441
  ret i32 %252, !dbg !20442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_rx_process(%struct.net_device* %dev, i32 %limit) #2 !dbg !20443 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %limit.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %flags = alloca i32, align 4
  %rx_work = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %len = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %__vpp_verify117 = alloca i8*, align 8
  %pao_ID__120 = alloca i32, align 4
  %pto_val__ = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20444, metadata !DIExpression()), !dbg !20445
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !20446, metadata !DIExpression()), !dbg !20447
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20448, metadata !DIExpression()), !dbg !20449
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20450
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20451
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20451
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20449
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !20452, metadata !DIExpression()), !dbg !20453
  call void @llvm.dbg.declare(metadata i32* %rx_work, metadata !20454, metadata !DIExpression()), !dbg !20455
  store i32 0, i32* %rx_work, align 4, !dbg !20455
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !20456, metadata !DIExpression()), !dbg !20457
  call void @llvm.dbg.declare(metadata i32* %len, metadata !20458, metadata !DIExpression()), !dbg !20459
  br label %while.cond, !dbg !20460

while.cond:                                       ; preds = %if.end162, %entry
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20461
  %get_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 34, !dbg !20462
  %orig = bitcast %union.ring_type* %get_rx to %struct.ring_desc**, !dbg !20463
  %3 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !20463
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20464
  %put_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 35, !dbg !20465
  %orig1 = bitcast %union.ring_type* %put_rx to %struct.ring_desc**, !dbg !20466
  %5 = load %struct.ring_desc*, %struct.ring_desc** %orig1, align 8, !dbg !20466
  %cmp = icmp ne %struct.ring_desc* %3, %5, !dbg !20467
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !20468

land.lhs.true:                                    ; preds = %while.cond
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20469
  %get_rx2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 34, !dbg !20469
  %orig3 = bitcast %union.ring_type* %get_rx2 to %struct.ring_desc**, !dbg !20469
  %7 = load %struct.ring_desc*, %struct.ring_desc** %orig3, align 8, !dbg !20469
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %7, i32 0, i32 1, !dbg !20469
  %8 = load i32, i32* %flaglen, align 4, !dbg !20469
  store i32 %8, i32* %flags, align 4, !dbg !20470
  %and = and i32 %8, -2147483648, !dbg !20471
  %tobool = icmp ne i32 %and, 0, !dbg !20471
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !20472

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* %rx_work, align 4, !dbg !20473
  %10 = load i32, i32* %limit.addr, align 4, !dbg !20474
  %cmp4 = icmp slt i32 %9, %10, !dbg !20475
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp4, %land.rhs ], !dbg !20476
  br i1 %11, label %while.body, label %while.end, !dbg !20460

while.body:                                       ; preds = %land.end
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20477
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 20, !dbg !20477
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !20477
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !20477
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20477
  %get_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 37, !dbg !20477
  %15 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx, align 8, !dbg !20477
  %dma = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %15, i32 0, i32 1, !dbg !20477
  %16 = load i64, i64* %dma, align 8, !dbg !20477
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20477
  %get_rx_ctx6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 37, !dbg !20477
  %18 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx6, align 8, !dbg !20477
  %dma_len = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %18, i32 0, i32 2, !dbg !20477
  %bf.load = load i32, i32* %dma_len, align 8, !dbg !20477
  %bf.clear = and i32 %bf.load, 2147483647, !dbg !20477
  %conv = zext i32 %bf.clear to i64, !dbg !20477
  call void @dma_unmap_single_attrs(%struct.device* %dev5, i64 %16, i64 %conv, i32 2, i64 0) #13, !dbg !20477
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20479
  %get_rx_ctx7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 37, !dbg !20480
  %20 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx7, align 8, !dbg !20480
  %skb8 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %20, i32 0, i32 0, !dbg !20481
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb8, align 8, !dbg !20481
  store %struct.sk_buff* %21, %struct.sk_buff** %skb, align 8, !dbg !20482
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20483
  %get_rx_ctx9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 37, !dbg !20484
  %23 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx9, align 8, !dbg !20484
  %skb10 = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %23, i32 0, i32 0, !dbg !20485
  store %struct.sk_buff* null, %struct.sk_buff** %skb10, align 8, !dbg !20486
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20487
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 24, !dbg !20489
  %25 = load i32, i32* %desc_ver, align 8, !dbg !20489
  %cmp11 = icmp eq i32 %25, 1, !dbg !20490
  br i1 %cmp11, label %if.then, label %if.else51, !dbg !20491

if.then:                                          ; preds = %while.body
  %26 = load i32, i32* %flags, align 4, !dbg !20492
  %and13 = and i32 %26, 65536, !dbg !20492
  %tobool14 = icmp ne i32 %and13, 0, !dbg !20492
  %lnot = xor i1 %tobool14, true, !dbg !20492
  %lnot15 = xor i1 %lnot, true, !dbg !20492
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !20492
  %conv16 = sext i32 %lnot.ext to i64, !dbg !20492
  %tobool17 = icmp ne i64 %conv16, 0, !dbg !20492
  br i1 %tobool17, label %if.then18, label %if.else49, !dbg !20495

if.then18:                                        ; preds = %if.then
  %27 = load i32, i32* %flags, align 4, !dbg !20496
  %and19 = and i32 %27, 65535, !dbg !20498
  store i32 %and19, i32* %len, align 4, !dbg !20499
  %28 = load i32, i32* %flags, align 4, !dbg !20500
  %and20 = and i32 %28, 1073741824, !dbg !20500
  %tobool21 = icmp ne i32 %and20, 0, !dbg !20500
  %lnot22 = xor i1 %tobool21, true, !dbg !20500
  %lnot24 = xor i1 %lnot22, true, !dbg !20500
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !20500
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !20500
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !20500
  br i1 %tobool27, label %if.then28, label %if.end48, !dbg !20502

if.then28:                                        ; preds = %if.then18
  %29 = load i32, i32* %flags, align 4, !dbg !20503
  %and29 = and i32 %29, 1065353216, !dbg !20506
  %cmp30 = icmp eq i32 %and29, 67108864, !dbg !20507
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !20508

if.then32:                                        ; preds = %if.then28
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20509
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20511
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 37, !dbg !20512
  %32 = load i8*, i8** %data, align 8, !dbg !20512
  %33 = load i32, i32* %len, align 4, !dbg !20513
  %call33 = call i32 @nv_getlen(%struct.net_device* %30, i8* %32, i32 %33) #13, !dbg !20514
  store i32 %call33, i32* %len, align 4, !dbg !20515
  %34 = load i32, i32* %len, align 4, !dbg !20516
  %cmp34 = icmp slt i32 %34, 0, !dbg !20518
  br i1 %cmp34, label %if.then36, label %if.end, !dbg !20519

if.then36:                                        ; preds = %if.then32
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20520
  call void @consume_skb(%struct.sk_buff* %35) #13, !dbg !20520
  br label %next_pkt, !dbg !20522

if.end:                                           ; preds = %if.then32
  br label %if.end47, !dbg !20523

if.else:                                          ; preds = %if.then28
  %36 = load i32, i32* %flags, align 4, !dbg !20524
  %and37 = and i32 %36, 1065353216, !dbg !20526
  %cmp38 = icmp eq i32 %and37, 536870912, !dbg !20527
  br i1 %cmp38, label %if.then40, label %if.else45, !dbg !20528

if.then40:                                        ; preds = %if.else
  %37 = load i32, i32* %flags, align 4, !dbg !20529
  %and41 = and i32 %37, 262144, !dbg !20532
  %tobool42 = icmp ne i32 %and41, 0, !dbg !20532
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !20533

if.then43:                                        ; preds = %if.then40
  %38 = load i32, i32* %len, align 4, !dbg !20534
  %dec = add i32 %38, -1, !dbg !20534
  store i32 %dec, i32* %len, align 4, !dbg !20534
  br label %if.end44, !dbg !20535

if.end44:                                         ; preds = %if.then43, %if.then40
  br label %if.end46, !dbg !20536

if.else45:                                        ; preds = %if.else
  %39 = load i32, i32* %flags, align 4, !dbg !20537
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20539
  call void @rx_missing_handler(i32 %39, %struct.fe_priv* %40) #13, !dbg !20540
  %41 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20541
  call void @consume_skb(%struct.sk_buff* %41) #13, !dbg !20541
  br label %next_pkt, !dbg !20542

if.end46:                                         ; preds = %if.end44
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end
  br label %if.end48, !dbg !20543

if.end48:                                         ; preds = %if.end47, %if.then18
  br label %if.end50, !dbg !20544

if.else49:                                        ; preds = %if.then
  %42 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20545
  call void @consume_skb(%struct.sk_buff* %42) #13, !dbg !20545
  br label %next_pkt, !dbg !20547

if.end50:                                         ; preds = %if.end48
  br label %if.end107, !dbg !20548

if.else51:                                        ; preds = %while.body
  %43 = load i32, i32* %flags, align 4, !dbg !20549
  %and52 = and i32 %43, 536870912, !dbg !20549
  %tobool53 = icmp ne i32 %and52, 0, !dbg !20549
  %lnot54 = xor i1 %tobool53, true, !dbg !20549
  %lnot56 = xor i1 %lnot54, true, !dbg !20549
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !20549
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !20549
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !20549
  br i1 %tobool59, label %if.then60, label %if.else105, !dbg !20552

if.then60:                                        ; preds = %if.else51
  %44 = load i32, i32* %flags, align 4, !dbg !20553
  %and61 = and i32 %44, 16383, !dbg !20555
  store i32 %and61, i32* %len, align 4, !dbg !20556
  %45 = load i32, i32* %flags, align 4, !dbg !20557
  %and62 = and i32 %45, 1073741824, !dbg !20557
  %tobool63 = icmp ne i32 %and62, 0, !dbg !20557
  %lnot64 = xor i1 %tobool63, true, !dbg !20557
  %lnot66 = xor i1 %lnot64, true, !dbg !20557
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !20557
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !20557
  %tobool69 = icmp ne i64 %conv68, 0, !dbg !20557
  br i1 %tobool69, label %if.then70, label %if.end94, !dbg !20559

if.then70:                                        ; preds = %if.then60
  %46 = load i32, i32* %flags, align 4, !dbg !20560
  %and71 = and i32 %46, 33292288, !dbg !20563
  %cmp72 = icmp eq i32 %and71, 2097152, !dbg !20564
  br i1 %cmp72, label %if.then74, label %if.else81, !dbg !20565

if.then74:                                        ; preds = %if.then70
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20566
  %48 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20568
  %data75 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %48, i32 0, i32 37, !dbg !20569
  %49 = load i8*, i8** %data75, align 8, !dbg !20569
  %50 = load i32, i32* %len, align 4, !dbg !20570
  %call76 = call i32 @nv_getlen(%struct.net_device* %47, i8* %49, i32 %50) #13, !dbg !20571
  store i32 %call76, i32* %len, align 4, !dbg !20572
  %51 = load i32, i32* %len, align 4, !dbg !20573
  %cmp77 = icmp slt i32 %51, 0, !dbg !20575
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !20576

if.then79:                                        ; preds = %if.then74
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20577
  call void @consume_skb(%struct.sk_buff* %52) #13, !dbg !20577
  br label %next_pkt, !dbg !20579

if.end80:                                         ; preds = %if.then74
  br label %if.end93, !dbg !20580

if.else81:                                        ; preds = %if.then70
  %53 = load i32, i32* %flags, align 4, !dbg !20581
  %and82 = and i32 %53, 33292288, !dbg !20583
  %cmp83 = icmp eq i32 %and82, 16777216, !dbg !20584
  br i1 %cmp83, label %if.then85, label %if.else91, !dbg !20585

if.then85:                                        ; preds = %if.else81
  %54 = load i32, i32* %flags, align 4, !dbg !20586
  %and86 = and i32 %54, 33554432, !dbg !20589
  %tobool87 = icmp ne i32 %and86, 0, !dbg !20589
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !20590

if.then88:                                        ; preds = %if.then85
  %55 = load i32, i32* %len, align 4, !dbg !20591
  %dec89 = add i32 %55, -1, !dbg !20591
  store i32 %dec89, i32* %len, align 4, !dbg !20591
  br label %if.end90, !dbg !20592

if.end90:                                         ; preds = %if.then88, %if.then85
  br label %if.end92, !dbg !20593

if.else91:                                        ; preds = %if.else81
  %56 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20594
  call void @consume_skb(%struct.sk_buff* %56) #13, !dbg !20594
  br label %next_pkt, !dbg !20596

if.end92:                                         ; preds = %if.end90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end80
  br label %if.end94, !dbg !20597

if.end94:                                         ; preds = %if.end93, %if.then60
  %57 = load i32, i32* %flags, align 4, !dbg !20598
  %and95 = and i32 %57, 469762048, !dbg !20600
  %cmp96 = icmp eq i32 %and95, 335544320, !dbg !20601
  br i1 %cmp96, label %if.then101, label %lor.lhs.false, !dbg !20602

lor.lhs.false:                                    ; preds = %if.end94
  %58 = load i32, i32* %flags, align 4, !dbg !20603
  %and98 = and i32 %58, 469762048, !dbg !20604
  %cmp99 = icmp eq i32 %and98, 402653184, !dbg !20605
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !20606

if.then101:                                       ; preds = %lor.lhs.false, %if.end94
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20607
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %59, i32 0, i32 14, !dbg !20608
  %bf.load102 = load i16, i16* %ip_summed, align 8, !dbg !20609
  %bf.clear103 = and i16 %bf.load102, -97, !dbg !20609
  %bf.set = or i16 %bf.clear103, 32, !dbg !20609
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !20609
  br label %if.end104, !dbg !20607

if.end104:                                        ; preds = %if.then101, %lor.lhs.false
  br label %if.end106, !dbg !20610

if.else105:                                       ; preds = %if.else51
  %60 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20611
  call void @consume_skb(%struct.sk_buff* %60) #13, !dbg !20611
  br label %next_pkt, !dbg !20613

if.end106:                                        ; preds = %if.end104
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end50
  %61 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20614
  %62 = load i32, i32* %len, align 4, !dbg !20615
  %call108 = call i8* @skb_put(%struct.sk_buff* %61, i32 %62) #13, !dbg !20616
  %63 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20617
  %64 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20618
  %call109 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %63, %struct.net_device* %64) #13, !dbg !20619
  %65 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20620
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %65, i32 0, i32 29, !dbg !20621
  store i16 %call109, i16* %protocol, align 8, !dbg !20622
  %66 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20623
  %napi = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %66, i32 0, i32 2, !dbg !20624
  %67 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20625
  %call110 = call i32 @napi_gro_receive(%struct.napi_struct* %napi, %struct.sk_buff* %67) #13, !dbg !20626
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20627
  %swstats_rx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 49, !dbg !20628
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_rx_syncp) #13, !dbg !20629
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !20630
  br label %do.body, !dbg !20630

do.body:                                          ; preds = %if.end107
  br label %do.body111, !dbg !20632

do.body111:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !20634, metadata !DIExpression()), !dbg !20636
  store i8* null, i8** %__vpp_verify, align 8, !dbg !20636
  %69 = load i8*, i8** %__vpp_verify, align 8, !dbg !20636
  br label %do.end, !dbg !20636

do.end:                                           ; preds = %do.body111
  br label %do.body112, !dbg !20632

do.body112:                                       ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !20637, metadata !DIExpression()), !dbg !20639
  store i32 1, i32* %pao_ID__, align 4, !dbg !20639
  %70 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20640
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %70, i32 0, i32 50, !dbg !20640
  %71 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !20640
  %stat_rx_packets = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %71, i32 0, i32 0, !dbg !20640
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_rx_packets, i64* %stat_rx_packets) #10, !dbg !20640, !srcloc !20643
  br label %do.end113, !dbg !20639

do.end113:                                        ; preds = %do.body112
  br label %do.end114, !dbg !20632

do.end114:                                        ; preds = %do.end113
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !20644
  br label %do.body115, !dbg !20644

do.body115:                                       ; preds = %do.end114
  br label %do.body116, !dbg !20646

do.body116:                                       ; preds = %do.body115
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify117, metadata !20648, metadata !DIExpression()), !dbg !20650
  store i8* null, i8** %__vpp_verify117, align 8, !dbg !20650
  %72 = load i8*, i8** %__vpp_verify117, align 8, !dbg !20650
  br label %do.end118, !dbg !20650

do.end118:                                        ; preds = %do.body116
  br label %do.body119, !dbg !20646

do.body119:                                       ; preds = %do.end118
  call void @llvm.dbg.declare(metadata i32* %pao_ID__120, metadata !20651, metadata !DIExpression()), !dbg !20653
  %73 = load i32, i32* %len, align 4, !dbg !20653
  %74 = call i1 @llvm.is.constant.i32(i32 %73), !dbg !20653
  br i1 %74, label %land.lhs.true121, label %cond.false, !dbg !20653

land.lhs.true121:                                 ; preds = %do.body119
  %75 = load i32, i32* %len, align 4, !dbg !20653
  %cmp122 = icmp eq i32 %75, 1, !dbg !20653
  br i1 %cmp122, label %cond.true, label %lor.lhs.false124, !dbg !20653

lor.lhs.false124:                                 ; preds = %land.lhs.true121
  %76 = load i32, i32* %len, align 4, !dbg !20653
  %cmp125 = icmp eq i32 %76, -1, !dbg !20653
  br i1 %cmp125, label %cond.true, label %cond.false, !dbg !20653

cond.true:                                        ; preds = %lor.lhs.false124, %land.lhs.true121
  %77 = load i32, i32* %len, align 4, !dbg !20653
  br label %cond.end, !dbg !20653

cond.false:                                       ; preds = %lor.lhs.false124, %do.body119
  br label %cond.end, !dbg !20653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %77, %cond.true ], [ 0, %cond.false ], !dbg !20653
  store i32 %cond, i32* %pao_ID__120, align 4, !dbg !20653
  br label %do.body127, !dbg !20654

do.body127:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %pto_val__, metadata !20657, metadata !DIExpression()), !dbg !20659
  %78 = load i32, i32* %len, align 4, !dbg !20659
  %conv128 = sext i32 %78 to i64, !dbg !20659
  store i64 %conv128, i64* %pto_val__, align 8, !dbg !20659
  %79 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20659
  %txrx_stats129 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %79, i32 0, i32 50, !dbg !20659
  %80 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats129, align 8, !dbg !20659
  %stat_rx_bytes = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %80, i32 0, i32 1, !dbg !20659
  %81 = load i64, i64* %pto_val__, align 8, !dbg !20659
  call void asm "addq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_rx_bytes, i64 %81, i64* %stat_rx_bytes) #10, !dbg !20659, !srcloc !20660
  br label %do.end130, !dbg !20659

do.end130:                                        ; preds = %do.body127
  br label %do.end131, !dbg !20653

do.end131:                                        ; preds = %do.end130
  br label %do.end132, !dbg !20646

do.end132:                                        ; preds = %do.end131
  %82 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20661
  %swstats_rx_syncp133 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %82, i32 0, i32 49, !dbg !20662
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_rx_syncp133) #13, !dbg !20663
  br label %next_pkt, !dbg !20663

next_pkt:                                         ; preds = %do.end132, %if.else105, %if.else91, %if.then79, %if.else49, %if.else45, %if.then36
  call void @llvm.dbg.label(metadata !20664), !dbg !20665
  %83 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20666
  %get_rx134 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %83, i32 0, i32 34, !dbg !20666
  %orig135 = bitcast %union.ring_type* %get_rx134 to %struct.ring_desc**, !dbg !20666
  %84 = load %struct.ring_desc*, %struct.ring_desc** %orig135, align 8, !dbg !20666
  %incdec.ptr = getelementptr %struct.ring_desc, %struct.ring_desc* %84, i32 1, !dbg !20666
  store %struct.ring_desc* %incdec.ptr, %struct.ring_desc** %orig135, align 8, !dbg !20666
  %85 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20666
  %last_rx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %85, i32 0, i32 36, !dbg !20666
  %orig136 = bitcast %union.ring_type* %last_rx to %struct.ring_desc**, !dbg !20666
  %86 = load %struct.ring_desc*, %struct.ring_desc** %orig136, align 8, !dbg !20666
  %cmp137 = icmp eq %struct.ring_desc* %84, %86, !dbg !20666
  %lnot139 = xor i1 %cmp137, true, !dbg !20666
  %lnot141 = xor i1 %lnot139, true, !dbg !20666
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !20666
  %conv143 = sext i32 %lnot.ext142 to i64, !dbg !20666
  %tobool144 = icmp ne i64 %conv143, 0, !dbg !20666
  br i1 %tobool144, label %if.then145, label %if.end149, !dbg !20668

if.then145:                                       ; preds = %next_pkt
  %87 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20669
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %87, i32 0, i32 41, !dbg !20670
  %orig146 = bitcast %union.ring_type* %rx_ring to %struct.ring_desc**, !dbg !20671
  %88 = load %struct.ring_desc*, %struct.ring_desc** %orig146, align 8, !dbg !20671
  %89 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20672
  %get_rx147 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %89, i32 0, i32 34, !dbg !20673
  %orig148 = bitcast %union.ring_type* %get_rx147 to %struct.ring_desc**, !dbg !20674
  store %struct.ring_desc* %88, %struct.ring_desc** %orig148, align 8, !dbg !20675
  br label %if.end149, !dbg !20672

if.end149:                                        ; preds = %if.then145, %next_pkt
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20676
  %get_rx_ctx150 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 37, !dbg !20676
  %91 = load %struct.nv_skb_map*, %struct.nv_skb_map** %get_rx_ctx150, align 8, !dbg !20676
  %incdec.ptr151 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %91, i32 1, !dbg !20676
  store %struct.nv_skb_map* %incdec.ptr151, %struct.nv_skb_map** %get_rx_ctx150, align 8, !dbg !20676
  %92 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20676
  %last_rx_ctx = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %92, i32 0, i32 39, !dbg !20676
  %93 = load %struct.nv_skb_map*, %struct.nv_skb_map** %last_rx_ctx, align 8, !dbg !20676
  %cmp152 = icmp eq %struct.nv_skb_map* %91, %93, !dbg !20676
  %lnot154 = xor i1 %cmp152, true, !dbg !20676
  %lnot156 = xor i1 %lnot154, true, !dbg !20676
  %lnot.ext157 = zext i1 %lnot156 to i32, !dbg !20676
  %conv158 = sext i32 %lnot.ext157 to i64, !dbg !20676
  %tobool159 = icmp ne i64 %conv158, 0, !dbg !20676
  br i1 %tobool159, label %if.then160, label %if.end162, !dbg !20678

if.then160:                                       ; preds = %if.end149
  %94 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20679
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %94, i32 0, i32 40, !dbg !20680
  %95 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb, align 8, !dbg !20680
  %96 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20681
  %get_rx_ctx161 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %96, i32 0, i32 37, !dbg !20682
  store %struct.nv_skb_map* %95, %struct.nv_skb_map** %get_rx_ctx161, align 8, !dbg !20683
  br label %if.end162, !dbg !20681

if.end162:                                        ; preds = %if.then160, %if.end149
  %97 = load i32, i32* %rx_work, align 4, !dbg !20684
  %inc = add i32 %97, 1, !dbg !20684
  store i32 %inc, i32* %rx_work, align 4, !dbg !20684
  br label %while.cond, !dbg !20460, !llvm.loop !20685

while.end:                                        ; preds = %land.end
  %98 = load i32, i32* %rx_work, align 4, !dbg !20687
  ret i32 %98, !dbg !20688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_change_interrupt_mode(%struct.net_device* %dev, i32 %total_work) #2 !dbg !20689 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %total_work.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20690, metadata !DIExpression()), !dbg !20691
  store i32 %total_work, i32* %total_work.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_work.addr, metadata !20692, metadata !DIExpression()), !dbg !20693
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20694, metadata !DIExpression()), !dbg !20695
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20696
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20697
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20697
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20695
  %2 = load i32, i32* @optimization_mode, align 4, !dbg !20698
  %cmp = icmp eq i32 %2, 2, !dbg !20700
  br i1 %cmp, label %if.then, label %if.end18, !dbg !20701

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %total_work.addr, align 4, !dbg !20702
  %cmp1 = icmp sgt i32 %3, 4, !dbg !20705
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !20706

if.then2:                                         ; preds = %if.then
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20707
  %quiet_count = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 18, !dbg !20709
  store i32 0, i32* %quiet_count, align 4, !dbg !20710
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20711
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 23, !dbg !20713
  %6 = load i32, i32* %irqmask, align 4, !dbg !20713
  %cmp3 = icmp ne i32 %6, 96, !dbg !20714
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !20715

if.then4:                                         ; preds = %if.then2
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20716
  %irqmask5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 23, !dbg !20718
  store i32 96, i32* %irqmask5, align 4, !dbg !20719
  store i32 1, i32* %retval, align 4, !dbg !20720
  br label %return, !dbg !20720

if.end:                                           ; preds = %if.then2
  br label %if.end17, !dbg !20721

if.else:                                          ; preds = %if.then
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20722
  %quiet_count6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 18, !dbg !20725
  %9 = load i32, i32* %quiet_count6, align 4, !dbg !20725
  %cmp7 = icmp slt i32 %9, 2048, !dbg !20726
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !20727

if.then8:                                         ; preds = %if.else
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20728
  %quiet_count9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 18, !dbg !20730
  %11 = load i32, i32* %quiet_count9, align 4, !dbg !20731
  %inc = add i32 %11, 1, !dbg !20731
  store i32 %inc, i32* %quiet_count9, align 4, !dbg !20731
  br label %if.end16, !dbg !20732

if.else10:                                        ; preds = %if.else
  %12 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20733
  %irqmask11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %12, i32 0, i32 23, !dbg !20736
  %13 = load i32, i32* %irqmask11, align 4, !dbg !20736
  %cmp12 = icmp ne i32 %13, 223, !dbg !20737
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !20738

if.then13:                                        ; preds = %if.else10
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20739
  %irqmask14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 23, !dbg !20741
  store i32 223, i32* %irqmask14, align 4, !dbg !20742
  store i32 1, i32* %retval, align 4, !dbg !20743
  br label %return, !dbg !20743

if.end15:                                         ; preds = %if.else10
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end
  br label %if.end18, !dbg !20744

if.end18:                                         ; preds = %if.end17, %entry
  store i32 0, i32* %retval, align 4, !dbg !20745
  br label %return, !dbg !20745

return:                                           ; preds = %if.end18, %if.then13, %if.then4
  %15 = load i32, i32* %retval, align 4, !dbg !20746
  ret i32 %15, !dbg !20746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @napi_complete(%struct.napi_struct* %n) #2 !dbg !20747 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !20750, metadata !DIExpression()), !dbg !20751
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !20752
  %call = call zeroext i1 @napi_complete_done(%struct.napi_struct* %0, i32 0) #13, !dbg !20753
  ret i1 %call, !dbg !20754
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_missing_handler(i32 %flags, %struct.fe_priv* %np) #2 !dbg !20755 {
entry:
  %flags.addr = alloca i32, align 4
  %np.addr = alloca %struct.fe_priv*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20758, metadata !DIExpression()), !dbg !20759
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !20760, metadata !DIExpression()), !dbg !20761
  %0 = load i32, i32* %flags.addr, align 4, !dbg !20762
  %and = and i32 %0, 131072, !dbg !20764
  %tobool = icmp ne i32 %and, 0, !dbg !20764
  br i1 %tobool, label %if.then, label %if.end, !dbg !20765

if.then:                                          ; preds = %entry
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !20766
  %swstats_rx_syncp = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 49, !dbg !20768
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %swstats_rx_syncp) #13, !dbg !20769
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !20770
  br label %do.body, !dbg !20770

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !20772

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !20774, metadata !DIExpression()), !dbg !20776
  store i8* null, i8** %__vpp_verify, align 8, !dbg !20776
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !20776
  br label %do.end, !dbg !20776

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !20772

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !20777, metadata !DIExpression()), !dbg !20779
  store i32 1, i32* %pao_ID__, align 4, !dbg !20779
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !20780
  %txrx_stats = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 50, !dbg !20780
  %4 = load %struct.nv_txrx_stats*, %struct.nv_txrx_stats** %txrx_stats, align 8, !dbg !20780
  %stat_rx_missed_errors = getelementptr inbounds %struct.nv_txrx_stats, %struct.nv_txrx_stats* %4, i32 0, i32 2, !dbg !20780
  call void asm "incq $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i64* %stat_rx_missed_errors, i64* %stat_rx_missed_errors) #10, !dbg !20780, !srcloc !20783
  br label %do.end3, !dbg !20779

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !20772

do.end4:                                          ; preds = %do.end3
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !20784
  %swstats_rx_syncp5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 49, !dbg !20785
  call void @u64_stats_update_end(%struct.u64_stats_sync* %swstats_rx_syncp5) #13, !dbg !20786
  br label %if.end, !dbg !20787

if.end:                                           ; preds = %do.end4, %entry
  ret void, !dbg !20788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_drvinfo(%struct.net_device* %dev, %struct.ethtool_drvinfo* %info) #2 !dbg !20789 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20790, metadata !DIExpression()), !dbg !20791
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !20792, metadata !DIExpression()), !dbg !20793
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20794, metadata !DIExpression()), !dbg !20795
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20796
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20797
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20797
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20795
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !20798
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !20799
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !20798
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 32) #13, !dbg !20800
  %3 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !20801
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %3, i32 0, i32 2, !dbg !20802
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !20801
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 32) #13, !dbg !20803
  %4 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !20804
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %4, i32 0, i32 4, !dbg !20805
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !20804
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20806
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 20, !dbg !20807
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !20807
  %call5 = call i8* @pci_name(%struct.pci_dev* %6) #13, !dbg !20808
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %call5, i64 32) #13, !dbg !20809
  ret void, !dbg !20810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_get_regs_len(%struct.net_device* %dev) #2 !dbg !20811 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20812, metadata !DIExpression()), !dbg !20813
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20814, metadata !DIExpression()), !dbg !20815
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20816
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20817
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20817
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20815
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20818
  %register_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 29, !dbg !20819
  %3 = load i32, i32* %register_size, align 4, !dbg !20819
  ret i32 %3, !dbg !20820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_regs(%struct.net_device* %dev, %struct.ethtool_regs* %regs, i8* %buf) #2 !dbg !20821 {
entry:
  %lock.addr.i7 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i7, metadata !8241, metadata !DIExpression()), !dbg !20822
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !20824
  %dev.addr = alloca %struct.net_device*, align 8
  %regs.addr = alloca %struct.ethtool_regs*, align 8
  %buf.addr = alloca i8*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %rbuf = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20826, metadata !DIExpression()), !dbg !20827
  store %struct.ethtool_regs* %regs, %struct.ethtool_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_regs** %regs.addr, metadata !20828, metadata !DIExpression()), !dbg !20829
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !20830, metadata !DIExpression()), !dbg !20831
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20832, metadata !DIExpression()), !dbg !20833
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20834
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20835
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20835
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20833
  call void @llvm.dbg.declare(metadata i8** %base, metadata !20836, metadata !DIExpression()), !dbg !20837
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20838
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !20839
  store i8* %call1, i8** %base, align 8, !dbg !20837
  call void @llvm.dbg.declare(metadata i32** %rbuf, metadata !20840, metadata !DIExpression()), !dbg !20841
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !20842
  %4 = bitcast i8* %3 to i32*, !dbg !20842
  store i32* %4, i32** %rbuf, align 8, !dbg !20841
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20843, metadata !DIExpression()), !dbg !20844
  %5 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !20845
  %version = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %5, i32 0, i32 1, !dbg !20846
  store i32 1, i32* %version, align 4, !dbg !20847
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20848
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 0, !dbg !20849
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !20850
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20851, !srcloc !9174
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20852
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !20852
  %rlock.i = bitcast %union.anon.2* %8 to %struct.raw_spinlock*, !dbg !20852
  store i32 0, i32* %i, align 4, !dbg !20853
  br label %for.cond, !dbg !20855

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !20856
  %conv = sext i32 %9 to i64, !dbg !20856
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20858
  %register_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 29, !dbg !20859
  %11 = load i32, i32* %register_size, align 4, !dbg !20859
  %conv2 = zext i32 %11 to i64, !dbg !20858
  %div = udiv i64 %conv2, 4, !dbg !20860
  %cmp = icmp ult i64 %conv, %div, !dbg !20861
  br i1 %cmp, label %for.body, label %for.end, !dbg !20862

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !20863
  %13 = load i32, i32* %i, align 4, !dbg !20864
  %conv4 = sext i32 %13 to i64, !dbg !20864
  %mul = mul i64 %conv4, 4, !dbg !20865
  %add.ptr = getelementptr i8, i8* %12, i64 %mul, !dbg !20866
  %call5 = call i32 @readl(i8* %add.ptr) #13, !dbg !20867
  %14 = load i32*, i32** %rbuf, align 8, !dbg !20868
  %15 = load i32, i32* %i, align 4, !dbg !20869
  %idxprom = sext i32 %15 to i64, !dbg !20868
  %arrayidx = getelementptr i32, i32* %14, i64 %idxprom, !dbg !20868
  store i32 %call5, i32* %arrayidx, align 4, !dbg !20870
  br label %for.inc, !dbg !20868

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !20871
  %inc = add i32 %16, 1, !dbg !20871
  store i32 %inc, i32* %i, align 4, !dbg !20871
  br label %for.cond, !dbg !20872, !llvm.loop !20873

for.end:                                          ; preds = %for.cond
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20875
  %lock6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 0, !dbg !20876
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i7, align 8
  call void @arch_local_irq_enable() #15, !dbg !20877
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20878, !srcloc !9188
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i7, align 8, !dbg !20879
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !20879
  %rlock.i8 = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !20879
  ret void, !dbg !20880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wolinfo) #2 !dbg !20881 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !8241, metadata !DIExpression()), !dbg !20882
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !20884
  %dev.addr = alloca %struct.net_device*, align 8
  %wolinfo.addr = alloca %struct.ethtool_wolinfo*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20886, metadata !DIExpression()), !dbg !20887
  store %struct.ethtool_wolinfo* %wolinfo, %struct.ethtool_wolinfo** %wolinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wolinfo.addr, metadata !20888, metadata !DIExpression()), !dbg !20889
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20890, metadata !DIExpression()), !dbg !20891
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20892
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20893
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20893
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20891
  %2 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wolinfo.addr, align 8, !dbg !20894
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %2, i32 0, i32 1, !dbg !20895
  store i32 32, i32* %supported, align 4, !dbg !20896
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20897
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 0, !dbg !20898
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !20899
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20900, !srcloc !9174
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20901
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !20901
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !20901
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20902
  %wolenabled = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 11, !dbg !20904
  %7 = load i32, i32* %wolenabled, align 8, !dbg !20904
  %tobool = icmp ne i32 %7, 0, !dbg !20902
  br i1 %tobool, label %if.then, label %if.end, !dbg !20905

if.then:                                          ; preds = %entry
  %8 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wolinfo.addr, align 8, !dbg !20906
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %8, i32 0, i32 2, !dbg !20907
  store i32 32, i32* %wolopts, align 4, !dbg !20908
  br label %if.end, !dbg !20906

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20909
  %lock1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 0, !dbg !20910
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #15, !dbg !20911
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20912, !srcloc !9188
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !20913
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !20913
  %rlock.i3 = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !20913
  ret void, !dbg !20914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_set_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wolinfo) #2 !dbg !20915 {
entry:
  %lock.addr.i14 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i14, metadata !8241, metadata !DIExpression()), !dbg !20916
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !20920
  %dev.addr = alloca %struct.net_device*, align 8
  %wolinfo.addr = alloca %struct.ethtool_wolinfo*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %flags = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20922, metadata !DIExpression()), !dbg !20923
  store %struct.ethtool_wolinfo* %wolinfo, %struct.ethtool_wolinfo** %wolinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wolinfo.addr, metadata !20924, metadata !DIExpression()), !dbg !20925
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20926, metadata !DIExpression()), !dbg !20927
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20928
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20929
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20929
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20927
  call void @llvm.dbg.declare(metadata i8** %base, metadata !20930, metadata !DIExpression()), !dbg !20931
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20932
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !20933
  store i8* %call1, i8** %base, align 8, !dbg !20931
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !20934, metadata !DIExpression()), !dbg !20935
  store i32 0, i32* %flags, align 4, !dbg !20935
  %3 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wolinfo.addr, align 8, !dbg !20936
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %3, i32 0, i32 2, !dbg !20938
  %4 = load i32, i32* %wolopts, align 4, !dbg !20938
  %cmp = icmp eq i32 %4, 0, !dbg !20939
  br i1 %cmp, label %if.then, label %if.else, !dbg !20940

if.then:                                          ; preds = %entry
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20941
  %wolenabled = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 11, !dbg !20943
  store i32 0, i32* %wolenabled, align 8, !dbg !20944
  br label %if.end5, !dbg !20945

if.else:                                          ; preds = %entry
  %6 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wolinfo.addr, align 8, !dbg !20946
  %wolopts2 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %6, i32 0, i32 2, !dbg !20948
  %7 = load i32, i32* %wolopts2, align 4, !dbg !20948
  %and = and i32 %7, 32, !dbg !20949
  %tobool = icmp ne i32 %and, 0, !dbg !20949
  br i1 %tobool, label %if.then3, label %if.end, !dbg !20950

if.then3:                                         ; preds = %if.else
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20951
  %wolenabled4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 11, !dbg !20953
  store i32 1, i32* %wolenabled4, align 8, !dbg !20954
  store i32 4369, i32* %flags, align 4, !dbg !20955
  br label %if.end, !dbg !20956

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20957
  %call6 = call zeroext i1 @netif_running(%struct.net_device* %9) #13, !dbg !20958
  br i1 %call6, label %if.then7, label %if.end9, !dbg !20959

if.then7:                                         ; preds = %if.end5
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20960
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 0, !dbg !20961
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !20962
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20963, !srcloc !9174
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20964
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !20964
  %rlock.i = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !20964
  %13 = load i32, i32* %flags, align 4, !dbg !20965
  %14 = load i8*, i8** %base, align 8, !dbg !20966
  %add.ptr = getelementptr i8, i8* %14, i64 512, !dbg !20967
  call void @writel(i32 %13, i8* %add.ptr) #13, !dbg !20968
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20969
  %lock8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 0, !dbg !20970
  store %struct.spinlock* %lock8, %struct.spinlock** %lock.addr.i14, align 8
  call void @arch_local_irq_enable() #15, !dbg !20971
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20972, !srcloc !9188
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i14, align 8, !dbg !20973
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !20973
  %rlock.i15 = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !20973
  br label %if.end9, !dbg !20974

if.end9:                                          ; preds = %if.then7, %if.end5
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20975
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 20, !dbg !20976
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !20976
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !20977
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20978
  %wolenabled11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 11, !dbg !20979
  %21 = load i32, i32* %wolenabled11, align 8, !dbg !20979
  %tobool12 = icmp ne i32 %21, 0, !dbg !20978
  %call13 = call i32 @device_set_wakeup_enable(%struct.device* %dev10, i1 zeroext %tobool12) #13, !dbg !20980
  ret i32 0, !dbg !20981
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_nway_reset(%struct.net_device* %dev) #2 !dbg !20982 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !9483, metadata !DIExpression()), !dbg !20983
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !20989
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %ret = alloca i32, align 4
  %bmcr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20991, metadata !DIExpression()), !dbg !20992
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !20993, metadata !DIExpression()), !dbg !20994
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20995
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !20996
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !20996
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !20994
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !20997, metadata !DIExpression()), !dbg !20998
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !20999
  %autoneg = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 8, !dbg !21000
  %3 = load i32, i32* %autoneg, align 4, !dbg !21000
  %tobool = icmp ne i32 %3, 0, !dbg !20999
  br i1 %tobool, label %if.then, label %if.else17, !dbg !21001

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bmcr, metadata !21002, metadata !DIExpression()), !dbg !21003
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21004
  call void @netif_carrier_off(%struct.net_device* %4) #13, !dbg !21005
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21006
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %5) #13, !dbg !21007
  br i1 %call1, label %if.then2, label %if.end, !dbg !21008

if.then2:                                         ; preds = %if.then
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21009
  call void @nv_disable_irq(%struct.net_device* %6) #13, !dbg !21010
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21011
  call void @netif_tx_lock_bh(%struct.net_device* %7) #13, !dbg !21012
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21013
  call void @netif_addr_lock(%struct.net_device* %8) #13, !dbg !21014
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21015
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 0, !dbg !21016
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21017, !srcloc !9601
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21018
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !21018
  %rlock.i = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !21018
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21019
  call void @nv_stop_rxtx(%struct.net_device* %12) #13, !dbg !21020
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21021
  %lock3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 0, !dbg !21022
  store %struct.spinlock* %lock3, %struct.spinlock** %lock.addr.i19, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21023, !srcloc !9681
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !21024
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !21024
  %rlock.i20 = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !21024
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21025
  call void @netif_addr_unlock(%struct.net_device* %16) #13, !dbg !21026
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21027
  call void @netif_tx_unlock_bh(%struct.net_device* %17) #13, !dbg !21028
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21029
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)) #14, !dbg !21030
  br label %if.end, !dbg !21031

if.end:                                           ; preds = %if.then2, %if.then
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21032
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21033
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 10, !dbg !21034
  %21 = load i32, i32* %phyaddr, align 4, !dbg !21034
  %call4 = call i32 @mii_rw(%struct.net_device* %19, i32 %21, i32 0, i32 -1) #13, !dbg !21035
  store i32 %call4, i32* %bmcr, align 4, !dbg !21036
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21037
  %phy_model = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 13, !dbg !21039
  %23 = load i32, i32* %phy_model, align 8, !dbg !21039
  %cmp = icmp eq i32 %23, 544, !dbg !21040
  br i1 %cmp, label %if.then5, label %if.else, !dbg !21041

if.then5:                                         ; preds = %if.end
  %24 = load i32, i32* %bmcr, align 4, !dbg !21042
  %or = or i32 %24, 4096, !dbg !21042
  store i32 %or, i32* %bmcr, align 4, !dbg !21042
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21044
  %26 = load i32, i32* %bmcr, align 4, !dbg !21046
  %call6 = call i32 @phy_reset(%struct.net_device* %25, i32 %26) #13, !dbg !21047
  %tobool7 = icmp ne i32 %call6, 0, !dbg !21047
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !21048

if.then8:                                         ; preds = %if.then5
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21049
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i64 0, i64 0)) #14, !dbg !21051
  store i32 -22, i32* %retval, align 4, !dbg !21052
  br label %return, !dbg !21052

if.end9:                                          ; preds = %if.then5
  br label %if.end13, !dbg !21053

if.else:                                          ; preds = %if.end
  %28 = load i32, i32* %bmcr, align 4, !dbg !21054
  %or10 = or i32 %28, 4608, !dbg !21054
  store i32 %or10, i32* %bmcr, align 4, !dbg !21054
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21056
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21057
  %phyaddr11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 10, !dbg !21058
  %31 = load i32, i32* %phyaddr11, align 4, !dbg !21058
  %32 = load i32, i32* %bmcr, align 4, !dbg !21059
  %call12 = call i32 @mii_rw(%struct.net_device* %29, i32 %31, i32 0, i32 %32) #13, !dbg !21060
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end9
  %33 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21061
  %call14 = call zeroext i1 @netif_running(%struct.net_device* %33) #13, !dbg !21063
  br i1 %call14, label %if.then15, label %if.end16, !dbg !21064

if.then15:                                        ; preds = %if.end13
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21065
  call void @nv_start_rxtx(%struct.net_device* %34) #13, !dbg !21067
  %35 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21068
  call void @nv_enable_irq(%struct.net_device* %35) #13, !dbg !21069
  br label %if.end16, !dbg !21070

if.end16:                                         ; preds = %if.then15, %if.end13
  store i32 0, i32* %ret, align 4, !dbg !21071
  br label %if.end18, !dbg !21072

if.else17:                                        ; preds = %entry
  store i32 -22, i32* %ret, align 4, !dbg !21073
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.end16
  %36 = load i32, i32* %ret, align 4, !dbg !21075
  store i32 %36, i32* %retval, align 4, !dbg !21076
  br label %return, !dbg !21076

return:                                           ; preds = %if.end18, %if.then8
  %37 = load i32, i32* %retval, align 4, !dbg !21077
  ret i32 %37, !dbg !21077
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_link(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_ringparam(%struct.net_device* %dev, %struct.ethtool_ringparam* %ring) #2 !dbg !21078 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21079, metadata !DIExpression()), !dbg !21080
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !21081, metadata !DIExpression()), !dbg !21082
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21083, metadata !DIExpression()), !dbg !21084
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21085
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21086
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21086
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21084
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21087
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 24, !dbg !21088
  %3 = load i32, i32* %desc_ver, align 8, !dbg !21088
  %cmp = icmp eq i32 %3, 1, !dbg !21089
  %4 = zext i1 %cmp to i64, !dbg !21090
  %cond = select i1 %cmp, i32 1024, i32 16384, !dbg !21090
  %5 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21091
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %5, i32 0, i32 1, !dbg !21092
  store i32 %cond, i32* %rx_max_pending, align 4, !dbg !21093
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21094
  %desc_ver1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 24, !dbg !21095
  %7 = load i32, i32* %desc_ver1, align 8, !dbg !21095
  %cmp2 = icmp eq i32 %7, 1, !dbg !21096
  %8 = zext i1 %cmp2 to i64, !dbg !21097
  %cond3 = select i1 %cmp2, i32 1024, i32 16384, !dbg !21097
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21098
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 4, !dbg !21099
  store i32 %cond3, i32* %tx_max_pending, align 4, !dbg !21100
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21101
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 48, !dbg !21102
  %11 = load i32, i32* %rx_ring_size, align 4, !dbg !21102
  %12 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21103
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %12, i32 0, i32 5, !dbg !21104
  store i32 %11, i32* %rx_pending, align 4, !dbg !21105
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21106
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 62, !dbg !21107
  %14 = load i32, i32* %tx_ring_size, align 4, !dbg !21107
  %15 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21108
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %15, i32 0, i32 8, !dbg !21109
  store i32 %14, i32* %tx_pending, align 4, !dbg !21110
  ret void, !dbg !21111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_set_ringparam(%struct.net_device* %dev, %struct.ethtool_ringparam* %ring) #2 !dbg !21112 {
entry:
  %lock.addr.i125 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i125, metadata !9483, metadata !DIExpression()), !dbg !21113
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !21117
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %rxtx_ring = alloca i8*, align 8
  %rx_skbuff = alloca i8*, align 8
  %tx_skbuff = alloca i8*, align 8
  %ring_addr = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21121, metadata !DIExpression()), !dbg !21122
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !21123, metadata !DIExpression()), !dbg !21124
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21125, metadata !DIExpression()), !dbg !21126
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21127
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21128
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21128
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21126
  call void @llvm.dbg.declare(metadata i8** %base, metadata !21129, metadata !DIExpression()), !dbg !21130
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21131
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !21132
  store i8* %call1, i8** %base, align 8, !dbg !21130
  call void @llvm.dbg.declare(metadata i8** %rxtx_ring, metadata !21133, metadata !DIExpression()), !dbg !21134
  call void @llvm.dbg.declare(metadata i8** %rx_skbuff, metadata !21135, metadata !DIExpression()), !dbg !21136
  call void @llvm.dbg.declare(metadata i8** %tx_skbuff, metadata !21137, metadata !DIExpression()), !dbg !21138
  call void @llvm.dbg.declare(metadata i64* %ring_addr, metadata !21139, metadata !DIExpression()), !dbg !21140
  %3 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21141
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %3, i32 0, i32 5, !dbg !21143
  %4 = load i32, i32* %rx_pending, align 4, !dbg !21143
  %cmp = icmp ult i32 %4, 128, !dbg !21144
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21145

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21146
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %5, i32 0, i32 8, !dbg !21147
  %6 = load i32, i32* %tx_pending, align 4, !dbg !21147
  %cmp2 = icmp ult i32 %6, 64, !dbg !21148
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !21149

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %7 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21150
  %rx_mini_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %7, i32 0, i32 6, !dbg !21151
  %8 = load i32, i32* %rx_mini_pending, align 4, !dbg !21151
  %cmp4 = icmp ne i32 %8, 0, !dbg !21152
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !21153

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21154
  %rx_jumbo_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 7, !dbg !21155
  %10 = load i32, i32* %rx_jumbo_pending, align 4, !dbg !21155
  %cmp6 = icmp ne i32 %10, 0, !dbg !21156
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !21157

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21158
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 24, !dbg !21159
  %12 = load i32, i32* %desc_ver, align 8, !dbg !21159
  %cmp8 = icmp eq i32 %12, 1, !dbg !21160
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false14, !dbg !21161

land.lhs.true:                                    ; preds = %lor.lhs.false7
  %13 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21162
  %rx_pending9 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %13, i32 0, i32 5, !dbg !21163
  %14 = load i32, i32* %rx_pending9, align 4, !dbg !21163
  %cmp10 = icmp ugt i32 %14, 1024, !dbg !21164
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !21165

lor.lhs.false11:                                  ; preds = %land.lhs.true
  %15 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21166
  %tx_pending12 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %15, i32 0, i32 8, !dbg !21167
  %16 = load i32, i32* %tx_pending12, align 4, !dbg !21167
  %cmp13 = icmp ugt i32 %16, 1024, !dbg !21168
  br i1 %cmp13, label %if.then, label %lor.lhs.false14, !dbg !21169

lor.lhs.false14:                                  ; preds = %lor.lhs.false11, %lor.lhs.false7
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21170
  %desc_ver15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 24, !dbg !21171
  %18 = load i32, i32* %desc_ver15, align 8, !dbg !21171
  %cmp16 = icmp ne i32 %18, 1, !dbg !21172
  br i1 %cmp16, label %land.lhs.true17, label %if.end, !dbg !21173

land.lhs.true17:                                  ; preds = %lor.lhs.false14
  %19 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21174
  %rx_pending18 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %19, i32 0, i32 5, !dbg !21175
  %20 = load i32, i32* %rx_pending18, align 4, !dbg !21175
  %cmp19 = icmp ugt i32 %20, 16384, !dbg !21176
  br i1 %cmp19, label %if.then, label %lor.lhs.false20, !dbg !21177

lor.lhs.false20:                                  ; preds = %land.lhs.true17
  %21 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21178
  %tx_pending21 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %21, i32 0, i32 8, !dbg !21179
  %22 = load i32, i32* %tx_pending21, align 4, !dbg !21179
  %cmp22 = icmp ugt i32 %22, 16384, !dbg !21180
  br i1 %cmp22, label %if.then, label %if.end, !dbg !21181

if.then:                                          ; preds = %lor.lhs.false20, %land.lhs.true17, %lor.lhs.false11, %land.lhs.true, %lor.lhs.false5, %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !21182
  br label %return, !dbg !21182

if.end:                                           ; preds = %lor.lhs.false20, %lor.lhs.false14
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21184
  %call23 = call zeroext i1 @nv_optimized(%struct.fe_priv* %23) #13, !dbg !21186
  br i1 %call23, label %if.else, label %if.then24, !dbg !21187

if.then24:                                        ; preds = %if.end
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21188
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 20, !dbg !21190
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !21190
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !21191
  %26 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21192
  %rx_pending26 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %26, i32 0, i32 5, !dbg !21193
  %27 = load i32, i32* %rx_pending26, align 4, !dbg !21193
  %28 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21194
  %tx_pending27 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %28, i32 0, i32 8, !dbg !21195
  %29 = load i32, i32* %tx_pending27, align 4, !dbg !21195
  %add = add i32 %27, %29, !dbg !21196
  %conv = zext i32 %add to i64, !dbg !21197
  %mul = mul i64 8, %conv, !dbg !21198
  %call28 = call i8* @dma_alloc_coherent(%struct.device* %dev25, i64 %mul, i64* %ring_addr, i32 2592) #13, !dbg !21199
  store i8* %call28, i8** %rxtx_ring, align 8, !dbg !21200
  br label %if.end37, !dbg !21201

if.else:                                          ; preds = %if.end
  %30 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21202
  %pci_dev29 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %30, i32 0, i32 20, !dbg !21204
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev29, align 8, !dbg !21204
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !21205
  %32 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21206
  %rx_pending31 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %32, i32 0, i32 5, !dbg !21207
  %33 = load i32, i32* %rx_pending31, align 4, !dbg !21207
  %34 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21208
  %tx_pending32 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %34, i32 0, i32 8, !dbg !21209
  %35 = load i32, i32* %tx_pending32, align 4, !dbg !21209
  %add33 = add i32 %33, %35, !dbg !21210
  %conv34 = zext i32 %add33 to i64, !dbg !21211
  %mul35 = mul i64 16, %conv34, !dbg !21212
  %call36 = call i8* @dma_alloc_coherent(%struct.device* %dev30, i64 %mul35, i64* %ring_addr, i32 2592) #13, !dbg !21213
  store i8* %call36, i8** %rxtx_ring, align 8, !dbg !21214
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then24
  %36 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21215
  %rx_pending38 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %36, i32 0, i32 5, !dbg !21216
  %37 = load i32, i32* %rx_pending38, align 4, !dbg !21216
  %conv39 = zext i32 %37 to i64, !dbg !21215
  %call40 = call i8* @kmalloc_array(i64 %conv39, i64 40, i32 3264) #13, !dbg !21217
  store i8* %call40, i8** %rx_skbuff, align 8, !dbg !21218
  %38 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21219
  %tx_pending41 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %38, i32 0, i32 8, !dbg !21220
  %39 = load i32, i32* %tx_pending41, align 4, !dbg !21220
  %conv42 = zext i32 %39 to i64, !dbg !21219
  %call43 = call i8* @kmalloc_array(i64 %conv42, i64 40, i32 3264) #13, !dbg !21221
  store i8* %call43, i8** %tx_skbuff, align 8, !dbg !21222
  %40 = load i8*, i8** %rxtx_ring, align 8, !dbg !21223
  %tobool = icmp ne i8* %40, null, !dbg !21223
  br i1 %tobool, label %lor.lhs.false44, label %if.then48, !dbg !21225

lor.lhs.false44:                                  ; preds = %if.end37
  %41 = load i8*, i8** %rx_skbuff, align 8, !dbg !21226
  %tobool45 = icmp ne i8* %41, null, !dbg !21226
  br i1 %tobool45, label %lor.lhs.false46, label %if.then48, !dbg !21227

lor.lhs.false46:                                  ; preds = %lor.lhs.false44
  %42 = load i8*, i8** %tx_skbuff, align 8, !dbg !21228
  %tobool47 = icmp ne i8* %42, null, !dbg !21228
  br i1 %tobool47, label %if.end73, label %if.then48, !dbg !21229

if.then48:                                        ; preds = %lor.lhs.false46, %lor.lhs.false44, %if.end37
  %43 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21230
  %call49 = call zeroext i1 @nv_optimized(%struct.fe_priv* %43) #13, !dbg !21233
  br i1 %call49, label %if.else61, label %if.then50, !dbg !21234

if.then50:                                        ; preds = %if.then48
  %44 = load i8*, i8** %rxtx_ring, align 8, !dbg !21235
  %tobool51 = icmp ne i8* %44, null, !dbg !21235
  br i1 %tobool51, label %if.then52, label %if.end60, !dbg !21238

if.then52:                                        ; preds = %if.then50
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21239
  %pci_dev53 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 20, !dbg !21240
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev53, align 8, !dbg !21240
  %dev54 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !21241
  %47 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21242
  %rx_pending55 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %47, i32 0, i32 5, !dbg !21243
  %48 = load i32, i32* %rx_pending55, align 4, !dbg !21243
  %49 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21244
  %tx_pending56 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %49, i32 0, i32 8, !dbg !21245
  %50 = load i32, i32* %tx_pending56, align 4, !dbg !21245
  %add57 = add i32 %48, %50, !dbg !21246
  %conv58 = zext i32 %add57 to i64, !dbg !21247
  %mul59 = mul i64 8, %conv58, !dbg !21248
  %51 = load i8*, i8** %rxtx_ring, align 8, !dbg !21249
  %52 = load i64, i64* %ring_addr, align 8, !dbg !21250
  call void @dma_free_coherent(%struct.device* %dev54, i64 %mul59, i8* %51, i64 %52) #13, !dbg !21251
  br label %if.end60, !dbg !21251

if.end60:                                         ; preds = %if.then52, %if.then50
  br label %if.end72, !dbg !21252

if.else61:                                        ; preds = %if.then48
  %53 = load i8*, i8** %rxtx_ring, align 8, !dbg !21253
  %tobool62 = icmp ne i8* %53, null, !dbg !21253
  br i1 %tobool62, label %if.then63, label %if.end71, !dbg !21256

if.then63:                                        ; preds = %if.else61
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21257
  %pci_dev64 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 20, !dbg !21258
  %55 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev64, align 8, !dbg !21258
  %dev65 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %55, i32 0, i32 41, !dbg !21259
  %56 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21260
  %rx_pending66 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %56, i32 0, i32 5, !dbg !21261
  %57 = load i32, i32* %rx_pending66, align 4, !dbg !21261
  %58 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21262
  %tx_pending67 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %58, i32 0, i32 8, !dbg !21263
  %59 = load i32, i32* %tx_pending67, align 4, !dbg !21263
  %add68 = add i32 %57, %59, !dbg !21264
  %conv69 = zext i32 %add68 to i64, !dbg !21265
  %mul70 = mul i64 16, %conv69, !dbg !21266
  %60 = load i8*, i8** %rxtx_ring, align 8, !dbg !21267
  %61 = load i64, i64* %ring_addr, align 8, !dbg !21268
  call void @dma_free_coherent(%struct.device* %dev65, i64 %mul70, i8* %60, i64 %61) #13, !dbg !21269
  br label %if.end71, !dbg !21269

if.end71:                                         ; preds = %if.then63, %if.else61
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end60
  %62 = load i8*, i8** %rx_skbuff, align 8, !dbg !21270
  call void @kfree(i8* %62) #13, !dbg !21271
  %63 = load i8*, i8** %tx_skbuff, align 8, !dbg !21272
  call void @kfree(i8* %63) #13, !dbg !21273
  br label %exit, !dbg !21274

if.end73:                                         ; preds = %lor.lhs.false46
  %64 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21275
  %call74 = call zeroext i1 @netif_running(%struct.net_device* %64) #13, !dbg !21276
  br i1 %call74, label %if.then75, label %if.end76, !dbg !21277

if.then75:                                        ; preds = %if.end73
  %65 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21278
  call void @nv_disable_irq(%struct.net_device* %65) #13, !dbg !21279
  %66 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21280
  call void @nv_napi_disable(%struct.net_device* %66) #13, !dbg !21281
  %67 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21282
  call void @netif_tx_lock_bh(%struct.net_device* %67) #13, !dbg !21283
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21284
  call void @netif_addr_lock(%struct.net_device* %68) #13, !dbg !21285
  %69 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21286
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %69, i32 0, i32 0, !dbg !21287
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21288, !srcloc !9601
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21289
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !21289
  %rlock.i = bitcast %union.anon.2* %71 to %struct.raw_spinlock*, !dbg !21289
  %72 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21290
  call void @nv_stop_rxtx(%struct.net_device* %72) #13, !dbg !21291
  %73 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21292
  call void @nv_txrx_reset(%struct.net_device* %73) #13, !dbg !21293
  %74 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21294
  call void @nv_drain_rxtx(%struct.net_device* %74) #13, !dbg !21295
  %75 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21296
  call void @free_rings(%struct.net_device* %75) #13, !dbg !21297
  br label %if.end76, !dbg !21298

if.end76:                                         ; preds = %if.then75, %if.end73
  %76 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21299
  %rx_pending77 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %76, i32 0, i32 5, !dbg !21300
  %77 = load i32, i32* %rx_pending77, align 4, !dbg !21300
  %78 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21301
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %78, i32 0, i32 48, !dbg !21302
  store i32 %77, i32* %rx_ring_size, align 4, !dbg !21303
  %79 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !21304
  %tx_pending78 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %79, i32 0, i32 8, !dbg !21305
  %80 = load i32, i32* %tx_pending78, align 4, !dbg !21305
  %81 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21306
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %81, i32 0, i32 62, !dbg !21307
  store i32 %80, i32* %tx_ring_size, align 4, !dbg !21308
  %82 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21309
  %call79 = call zeroext i1 @nv_optimized(%struct.fe_priv* %82) #13, !dbg !21311
  br i1 %call79, label %if.else85, label %if.then80, !dbg !21312

if.then80:                                        ; preds = %if.end76
  %83 = load i8*, i8** %rxtx_ring, align 8, !dbg !21313
  %84 = bitcast i8* %83 to %struct.ring_desc*, !dbg !21315
  %85 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21316
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %85, i32 0, i32 41, !dbg !21317
  %orig = bitcast %union.ring_type* %rx_ring to %struct.ring_desc**, !dbg !21318
  store %struct.ring_desc* %84, %struct.ring_desc** %orig, align 8, !dbg !21319
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21320
  %rx_ring81 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %86, i32 0, i32 41, !dbg !21321
  %orig82 = bitcast %union.ring_type* %rx_ring81 to %struct.ring_desc**, !dbg !21322
  %87 = load %struct.ring_desc*, %struct.ring_desc** %orig82, align 8, !dbg !21322
  %88 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21323
  %rx_ring_size83 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %88, i32 0, i32 48, !dbg !21324
  %89 = load i32, i32* %rx_ring_size83, align 4, !dbg !21324
  %idxprom = sext i32 %89 to i64, !dbg !21320
  %arrayidx = getelementptr %struct.ring_desc, %struct.ring_desc* %87, i64 %idxprom, !dbg !21320
  %90 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21325
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %90, i32 0, i32 60, !dbg !21326
  %orig84 = bitcast %union.ring_type* %tx_ring to %struct.ring_desc**, !dbg !21327
  store %struct.ring_desc* %arrayidx, %struct.ring_desc** %orig84, align 8, !dbg !21328
  br label %if.end94, !dbg !21329

if.else85:                                        ; preds = %if.end76
  %91 = load i8*, i8** %rxtx_ring, align 8, !dbg !21330
  %92 = bitcast i8* %91 to %struct.ring_desc_ex*, !dbg !21332
  %93 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21333
  %rx_ring86 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %93, i32 0, i32 41, !dbg !21334
  %ex = bitcast %union.ring_type* %rx_ring86 to %struct.ring_desc_ex**, !dbg !21335
  store %struct.ring_desc_ex* %92, %struct.ring_desc_ex** %ex, align 8, !dbg !21336
  %94 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21337
  %rx_ring87 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %94, i32 0, i32 41, !dbg !21338
  %ex88 = bitcast %union.ring_type* %rx_ring87 to %struct.ring_desc_ex**, !dbg !21339
  %95 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex88, align 8, !dbg !21339
  %96 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21340
  %rx_ring_size89 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %96, i32 0, i32 48, !dbg !21341
  %97 = load i32, i32* %rx_ring_size89, align 4, !dbg !21341
  %idxprom90 = sext i32 %97 to i64, !dbg !21337
  %arrayidx91 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %95, i64 %idxprom90, !dbg !21337
  %98 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21342
  %tx_ring92 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %98, i32 0, i32 60, !dbg !21343
  %ex93 = bitcast %union.ring_type* %tx_ring92 to %struct.ring_desc_ex**, !dbg !21344
  store %struct.ring_desc_ex* %arrayidx91, %struct.ring_desc_ex** %ex93, align 8, !dbg !21345
  br label %if.end94

if.end94:                                         ; preds = %if.else85, %if.then80
  %99 = load i8*, i8** %rx_skbuff, align 8, !dbg !21346
  %100 = bitcast i8* %99 to %struct.nv_skb_map*, !dbg !21347
  %101 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21348
  %rx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %101, i32 0, i32 40, !dbg !21349
  store %struct.nv_skb_map* %100, %struct.nv_skb_map** %rx_skb, align 8, !dbg !21350
  %102 = load i8*, i8** %tx_skbuff, align 8, !dbg !21351
  %103 = bitcast i8* %102 to %struct.nv_skb_map*, !dbg !21352
  %104 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21353
  %tx_skb = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %104, i32 0, i32 59, !dbg !21354
  store %struct.nv_skb_map* %103, %struct.nv_skb_map** %tx_skb, align 8, !dbg !21355
  %105 = load i64, i64* %ring_addr, align 8, !dbg !21356
  %106 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21357
  %ring_addr95 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %106, i32 0, i32 19, !dbg !21358
  store i64 %105, i64* %ring_addr95, align 8, !dbg !21359
  %107 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21360
  %rx_skb96 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %107, i32 0, i32 40, !dbg !21361
  %108 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb96, align 8, !dbg !21361
  %109 = bitcast %struct.nv_skb_map* %108 to i8*, !dbg !21362
  %110 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21363
  %rx_ring_size97 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %110, i32 0, i32 48, !dbg !21364
  %111 = load i32, i32* %rx_ring_size97, align 4, !dbg !21364
  %conv98 = sext i32 %111 to i64, !dbg !21363
  %mul99 = mul i64 40, %conv98, !dbg !21365
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 %mul99, i1 false), !dbg !21362
  %112 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21366
  %tx_skb100 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %112, i32 0, i32 59, !dbg !21367
  %113 = load %struct.nv_skb_map*, %struct.nv_skb_map** %tx_skb100, align 8, !dbg !21367
  %114 = bitcast %struct.nv_skb_map* %113 to i8*, !dbg !21368
  %115 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21369
  %tx_ring_size101 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %115, i32 0, i32 62, !dbg !21370
  %116 = load i32, i32* %tx_ring_size101, align 4, !dbg !21370
  %conv102 = sext i32 %116 to i64, !dbg !21369
  %mul103 = mul i64 40, %conv102, !dbg !21371
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 %mul103, i1 false), !dbg !21368
  %117 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21372
  %call104 = call zeroext i1 @netif_running(%struct.net_device* %117) #13, !dbg !21373
  br i1 %call104, label %if.then105, label %if.end124, !dbg !21374

if.then105:                                       ; preds = %if.end94
  %118 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21375
  call void @set_bufsize(%struct.net_device* %118) #13, !dbg !21376
  %119 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21377
  %call106 = call i32 @nv_init_ring(%struct.net_device* %119) #13, !dbg !21379
  %tobool107 = icmp ne i32 %call106, 0, !dbg !21379
  br i1 %tobool107, label %if.then108, label %if.end114, !dbg !21380

if.then108:                                       ; preds = %if.then105
  %120 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21381
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %120, i32 0, i32 5, !dbg !21384
  %121 = load i32, i32* %in_shutdown, align 8, !dbg !21384
  %tobool109 = icmp ne i32 %121, 0, !dbg !21381
  br i1 %tobool109, label %if.end113, label %if.then110, !dbg !21385

if.then110:                                       ; preds = %if.then108
  %122 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21386
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %122, i32 0, i32 44, !dbg !21387
  %123 = load volatile i64, i64* @jiffies, align 8, !dbg !21388
  %add111 = add i64 %123, 13, !dbg !21389
  %call112 = call i32 @mod_timer(%struct.timer_list* %oom_kick, i64 %add111) #13, !dbg !21390
  br label %if.end113, !dbg !21390

if.end113:                                        ; preds = %if.then110, %if.then108
  br label %if.end114, !dbg !21391

if.end114:                                        ; preds = %if.end113, %if.then105
  %124 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21392
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %124, i32 0, i32 42, !dbg !21393
  %125 = load i32, i32* %rx_buf_sz, align 8, !dbg !21393
  %126 = load i8*, i8** %base, align 8, !dbg !21394
  %add.ptr = getelementptr i8, i8* %126, i64 144, !dbg !21395
  call void @writel(i32 %125, i8* %add.ptr) #13, !dbg !21396
  %127 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21397
  call void @setup_hw_rings(%struct.net_device* %127, i32 3) #13, !dbg !21398
  %128 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21399
  %rx_ring_size115 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %128, i32 0, i32 48, !dbg !21400
  %129 = load i32, i32* %rx_ring_size115, align 4, !dbg !21400
  %sub = sub i32 %129, 1, !dbg !21401
  %shl = shl i32 %sub, 16, !dbg !21402
  %130 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21403
  %tx_ring_size116 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %130, i32 0, i32 62, !dbg !21404
  %131 = load i32, i32* %tx_ring_size116, align 4, !dbg !21404
  %sub117 = sub i32 %131, 1, !dbg !21405
  %shl118 = shl i32 %sub117, 0, !dbg !21406
  %add119 = add i32 %shl, %shl118, !dbg !21407
  %132 = load i8*, i8** %base, align 8, !dbg !21408
  %add.ptr120 = getelementptr i8, i8* %132, i64 264, !dbg !21409
  call void @writel(i32 %add119, i8* %add.ptr120) #13, !dbg !21410
  %133 = load i8*, i8** %base, align 8, !dbg !21411
  call void @pci_push(i8* %133) #13, !dbg !21412
  %134 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21413
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %134, i32 0, i32 25, !dbg !21414
  %135 = load i32, i32* %txrxctl_bits, align 4, !dbg !21414
  %or = or i32 1, %135, !dbg !21415
  %136 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21416
  %call121 = call i8* @get_hwbase(%struct.net_device* %136) #13, !dbg !21417
  %add.ptr122 = getelementptr i8, i8* %call121, i64 324, !dbg !21418
  call void @writel(i32 %or, i8* %add.ptr122) #13, !dbg !21419
  %137 = load i8*, i8** %base, align 8, !dbg !21420
  call void @pci_push(i8* %137) #13, !dbg !21421
  %138 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21422
  call void @nv_start_rxtx(%struct.net_device* %138) #13, !dbg !21423
  %139 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21424
  %lock123 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %139, i32 0, i32 0, !dbg !21425
  store %struct.spinlock* %lock123, %struct.spinlock** %lock.addr.i125, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21426, !srcloc !9681
  %140 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i125, align 8, !dbg !21427
  %141 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %140, i32 0, i32 0, !dbg !21427
  %rlock.i126 = bitcast %union.anon.2* %141 to %struct.raw_spinlock*, !dbg !21427
  %142 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21428
  call void @netif_addr_unlock(%struct.net_device* %142) #13, !dbg !21429
  %143 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21430
  call void @netif_tx_unlock_bh(%struct.net_device* %143) #13, !dbg !21431
  %144 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21432
  call void @nv_napi_enable(%struct.net_device* %144) #13, !dbg !21433
  %145 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21434
  call void @nv_enable_irq(%struct.net_device* %145) #13, !dbg !21435
  br label %if.end124, !dbg !21436

if.end124:                                        ; preds = %if.end114, %if.end94
  store i32 0, i32* %retval, align 4, !dbg !21437
  br label %return, !dbg !21437

exit:                                             ; preds = %if.end72
  call void @llvm.dbg.label(metadata !21438), !dbg !21439
  store i32 -12, i32* %retval, align 4, !dbg !21440
  br label %return, !dbg !21440

return:                                           ; preds = %exit, %if.end124, %if.then
  %146 = load i32, i32* %retval, align 4, !dbg !21441
  ret i32 %146, !dbg !21441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %pause) #2 !dbg !21442 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %pause.addr = alloca %struct.ethtool_pauseparam*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21443, metadata !DIExpression()), !dbg !21444
  store %struct.ethtool_pauseparam* %pause, %struct.ethtool_pauseparam** %pause.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %pause.addr, metadata !21445, metadata !DIExpression()), !dbg !21446
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21447, metadata !DIExpression()), !dbg !21448
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21449
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21450
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21450
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21448
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21451
  %pause_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 71, !dbg !21452
  %3 = load i32, i32* %pause_flags, align 8, !dbg !21452
  %and = and i32 %3, 64, !dbg !21453
  %cmp = icmp ne i32 %and, 0, !dbg !21454
  %conv = zext i1 %cmp to i32, !dbg !21454
  %4 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21455
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %4, i32 0, i32 1, !dbg !21456
  store i32 %conv, i32* %autoneg, align 4, !dbg !21457
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21458
  %pause_flags1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 71, !dbg !21459
  %6 = load i32, i32* %pause_flags1, align 8, !dbg !21459
  %and2 = and i32 %6, 4, !dbg !21460
  %cmp3 = icmp ne i32 %and2, 0, !dbg !21461
  %conv4 = zext i1 %cmp3 to i32, !dbg !21461
  %7 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21462
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %7, i32 0, i32 2, !dbg !21463
  store i32 %conv4, i32* %rx_pause, align 4, !dbg !21464
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21465
  %pause_flags5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 71, !dbg !21466
  %9 = load i32, i32* %pause_flags5, align 8, !dbg !21466
  %and6 = and i32 %9, 8, !dbg !21467
  %cmp7 = icmp ne i32 %and6, 0, !dbg !21468
  %conv8 = zext i1 %cmp7 to i32, !dbg !21468
  %10 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21469
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %10, i32 0, i32 3, !dbg !21470
  store i32 %conv8, i32* %tx_pause, align 4, !dbg !21471
  ret void, !dbg !21472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_set_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %pause) #2 !dbg !21473 {
entry:
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !9483, metadata !DIExpression()), !dbg !21474
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9491, metadata !DIExpression()), !dbg !21478
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %pause.addr = alloca %struct.ethtool_pauseparam*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %adv = alloca i32, align 4
  %bmcr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21480, metadata !DIExpression()), !dbg !21481
  store %struct.ethtool_pauseparam* %pause, %struct.ethtool_pauseparam** %pause.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %pause.addr, metadata !21482, metadata !DIExpression()), !dbg !21483
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21484, metadata !DIExpression()), !dbg !21485
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21486
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21487
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21487
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21485
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !21488, metadata !DIExpression()), !dbg !21489
  call void @llvm.dbg.declare(metadata i32* %bmcr, metadata !21490, metadata !DIExpression()), !dbg !21491
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21492
  %autoneg = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 8, !dbg !21494
  %3 = load i32, i32* %autoneg, align 4, !dbg !21494
  %tobool = icmp ne i32 %3, 0, !dbg !21492
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !21495

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21496
  %duplex = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 7, !dbg !21497
  %5 = load i32, i32* %duplex, align 8, !dbg !21497
  %cmp = icmp eq i32 %5, 0, !dbg !21498
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21499

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21500
  %autoneg1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 8, !dbg !21501
  %7 = load i32, i32* %autoneg1, align 4, !dbg !21501
  %tobool2 = icmp ne i32 %7, 0, !dbg !21500
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !21502

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %8 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21503
  %autoneg4 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %8, i32 0, i32 1, !dbg !21504
  %9 = load i32, i32* %autoneg4, align 4, !dbg !21504
  %tobool5 = icmp ne i32 %9, 0, !dbg !21503
  br i1 %tobool5, label %if.end, label %land.lhs.true6, !dbg !21505

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21506
  %duplex7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 7, !dbg !21507
  %11 = load i32, i32* %duplex7, align 8, !dbg !21507
  %cmp8 = icmp eq i32 %11, 0, !dbg !21508
  br i1 %cmp8, label %if.then, label %if.end, !dbg !21509

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21510
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %12, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.61, i64 0, i64 0)) #14, !dbg !21512
  store i32 -22, i32* %retval, align 4, !dbg !21513
  br label %return, !dbg !21513

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true3, %lor.lhs.false
  %13 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21514
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %13, i32 0, i32 3, !dbg !21516
  %14 = load i32, i32* %tx_pause, align 4, !dbg !21516
  %tobool9 = icmp ne i32 %14, 0, !dbg !21514
  br i1 %tobool9, label %land.lhs.true10, label %if.end13, !dbg !21517

land.lhs.true10:                                  ; preds = %if.end
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21518
  %pause_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 71, !dbg !21519
  %16 = load i32, i32* %pause_flags, align 8, !dbg !21519
  %and = and i32 %16, 2, !dbg !21520
  %tobool11 = icmp ne i32 %and, 0, !dbg !21520
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !21521

if.then12:                                        ; preds = %land.lhs.true10
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21522
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %17, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.62, i64 0, i64 0)) #14, !dbg !21524
  store i32 -22, i32* %retval, align 4, !dbg !21525
  br label %return, !dbg !21525

if.end13:                                         ; preds = %land.lhs.true10, %if.end
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21526
  call void @netif_carrier_off(%struct.net_device* %18) #13, !dbg !21527
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21528
  %call14 = call zeroext i1 @netif_running(%struct.net_device* %19) #13, !dbg !21529
  br i1 %call14, label %if.then15, label %if.end17, !dbg !21530

if.then15:                                        ; preds = %if.end13
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21531
  call void @nv_disable_irq(%struct.net_device* %20) #13, !dbg !21532
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21533
  call void @netif_tx_lock_bh(%struct.net_device* %21) #13, !dbg !21534
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21535
  call void @netif_addr_lock(%struct.net_device* %22) #13, !dbg !21536
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21537
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 0, !dbg !21538
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21539, !srcloc !9601
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21540
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !21540
  %rlock.i = bitcast %union.anon.2* %25 to %struct.raw_spinlock*, !dbg !21540
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21541
  call void @nv_stop_rxtx(%struct.net_device* %26) #13, !dbg !21542
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21543
  %lock16 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 0, !dbg !21544
  store %struct.spinlock* %lock16, %struct.spinlock** %lock.addr.i86, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21545, !srcloc !9681
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !21546
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !21546
  %rlock.i87 = bitcast %union.anon.2* %29 to %struct.raw_spinlock*, !dbg !21546
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21547
  call void @netif_addr_unlock(%struct.net_device* %30) #13, !dbg !21548
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21549
  call void @netif_tx_unlock_bh(%struct.net_device* %31) #13, !dbg !21550
  br label %if.end17, !dbg !21551

if.end17:                                         ; preds = %if.then15, %if.end13
  %32 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21552
  %pause_flags18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %32, i32 0, i32 71, !dbg !21553
  %33 = load i32, i32* %pause_flags18, align 8, !dbg !21554
  %and19 = and i32 %33, -49, !dbg !21554
  store i32 %and19, i32* %pause_flags18, align 8, !dbg !21554
  %34 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21555
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %34, i32 0, i32 2, !dbg !21557
  %35 = load i32, i32* %rx_pause, align 4, !dbg !21557
  %tobool20 = icmp ne i32 %35, 0, !dbg !21555
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !21558

if.then21:                                        ; preds = %if.end17
  %36 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21559
  %pause_flags22 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %36, i32 0, i32 71, !dbg !21560
  %37 = load i32, i32* %pause_flags22, align 8, !dbg !21561
  %or = or i32 %37, 16, !dbg !21561
  store i32 %or, i32* %pause_flags22, align 8, !dbg !21561
  br label %if.end23, !dbg !21559

if.end23:                                         ; preds = %if.then21, %if.end17
  %38 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21562
  %tx_pause24 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %38, i32 0, i32 3, !dbg !21564
  %39 = load i32, i32* %tx_pause24, align 4, !dbg !21564
  %tobool25 = icmp ne i32 %39, 0, !dbg !21562
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !21565

if.then26:                                        ; preds = %if.end23
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21566
  %pause_flags27 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 71, !dbg !21567
  %41 = load i32, i32* %pause_flags27, align 8, !dbg !21568
  %or28 = or i32 %41, 32, !dbg !21568
  store i32 %or28, i32* %pause_flags27, align 8, !dbg !21568
  br label %if.end29, !dbg !21566

if.end29:                                         ; preds = %if.then26, %if.end23
  %42 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21569
  %autoneg30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %42, i32 0, i32 8, !dbg !21571
  %43 = load i32, i32* %autoneg30, align 4, !dbg !21571
  %tobool31 = icmp ne i32 %43, 0, !dbg !21569
  br i1 %tobool31, label %land.lhs.true32, label %if.else, !dbg !21572

land.lhs.true32:                                  ; preds = %if.end29
  %44 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21573
  %autoneg33 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %44, i32 0, i32 1, !dbg !21574
  %45 = load i32, i32* %autoneg33, align 4, !dbg !21574
  %tobool34 = icmp ne i32 %45, 0, !dbg !21573
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !21575

if.then35:                                        ; preds = %land.lhs.true32
  %46 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21576
  %pause_flags36 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %46, i32 0, i32 71, !dbg !21578
  %47 = load i32, i32* %pause_flags36, align 8, !dbg !21579
  %or37 = or i32 %47, 64, !dbg !21579
  store i32 %or37, i32* %pause_flags36, align 8, !dbg !21579
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21580
  %49 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21581
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %49, i32 0, i32 10, !dbg !21582
  %50 = load i32, i32* %phyaddr, align 4, !dbg !21582
  %call38 = call i32 @mii_rw(%struct.net_device* %48, i32 %50, i32 4, i32 -1) #13, !dbg !21583
  store i32 %call38, i32* %adv, align 4, !dbg !21584
  %51 = load i32, i32* %adv, align 4, !dbg !21585
  %and39 = and i32 %51, -3073, !dbg !21585
  store i32 %and39, i32* %adv, align 4, !dbg !21585
  %52 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21586
  %pause_flags40 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %52, i32 0, i32 71, !dbg !21588
  %53 = load i32, i32* %pause_flags40, align 8, !dbg !21588
  %and41 = and i32 %53, 16, !dbg !21589
  %tobool42 = icmp ne i32 %and41, 0, !dbg !21589
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !21590

if.then43:                                        ; preds = %if.then35
  %54 = load i32, i32* %adv, align 4, !dbg !21591
  %or44 = or i32 %54, 3072, !dbg !21591
  store i32 %or44, i32* %adv, align 4, !dbg !21591
  br label %if.end45, !dbg !21592

if.end45:                                         ; preds = %if.then43, %if.then35
  %55 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21593
  %pause_flags46 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %55, i32 0, i32 71, !dbg !21595
  %56 = load i32, i32* %pause_flags46, align 8, !dbg !21595
  %and47 = and i32 %56, 32, !dbg !21596
  %tobool48 = icmp ne i32 %and47, 0, !dbg !21596
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !21597

if.then49:                                        ; preds = %if.end45
  %57 = load i32, i32* %adv, align 4, !dbg !21598
  %or50 = or i32 %57, 2048, !dbg !21598
  store i32 %or50, i32* %adv, align 4, !dbg !21598
  br label %if.end51, !dbg !21599

if.end51:                                         ; preds = %if.then49, %if.end45
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21600
  %59 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21601
  %phyaddr52 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %59, i32 0, i32 10, !dbg !21602
  %60 = load i32, i32* %phyaddr52, align 4, !dbg !21602
  %61 = load i32, i32* %adv, align 4, !dbg !21603
  %call53 = call i32 @mii_rw(%struct.net_device* %58, i32 %60, i32 4, i32 %61) #13, !dbg !21604
  %62 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21605
  %call54 = call zeroext i1 @netif_running(%struct.net_device* %62) #13, !dbg !21607
  br i1 %call54, label %if.then55, label %if.end56, !dbg !21608

if.then55:                                        ; preds = %if.end51
  %63 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21609
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %63, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)) #14, !dbg !21610
  br label %if.end56, !dbg !21610

if.end56:                                         ; preds = %if.then55, %if.end51
  %64 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21611
  %65 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21612
  %phyaddr57 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %65, i32 0, i32 10, !dbg !21613
  %66 = load i32, i32* %phyaddr57, align 4, !dbg !21613
  %call58 = call i32 @mii_rw(%struct.net_device* %64, i32 %66, i32 0, i32 -1) #13, !dbg !21614
  store i32 %call58, i32* %bmcr, align 4, !dbg !21615
  %67 = load i32, i32* %bmcr, align 4, !dbg !21616
  %or59 = or i32 %67, 4608, !dbg !21616
  store i32 %or59, i32* %bmcr, align 4, !dbg !21616
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21617
  %69 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21618
  %phyaddr60 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %69, i32 0, i32 10, !dbg !21619
  %70 = load i32, i32* %phyaddr60, align 4, !dbg !21619
  %71 = load i32, i32* %bmcr, align 4, !dbg !21620
  %call61 = call i32 @mii_rw(%struct.net_device* %68, i32 %70, i32 0, i32 %71) #13, !dbg !21621
  br label %if.end82, !dbg !21622

if.else:                                          ; preds = %land.lhs.true32, %if.end29
  %72 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21623
  %pause_flags62 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %72, i32 0, i32 71, !dbg !21625
  %73 = load i32, i32* %pause_flags62, align 8, !dbg !21626
  %and63 = and i32 %73, -77, !dbg !21626
  store i32 %and63, i32* %pause_flags62, align 8, !dbg !21626
  %74 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21627
  %rx_pause64 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %74, i32 0, i32 2, !dbg !21629
  %75 = load i32, i32* %rx_pause64, align 4, !dbg !21629
  %tobool65 = icmp ne i32 %75, 0, !dbg !21627
  br i1 %tobool65, label %if.then66, label %if.end69, !dbg !21630

if.then66:                                        ; preds = %if.else
  %76 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21631
  %pause_flags67 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %76, i32 0, i32 71, !dbg !21632
  %77 = load i32, i32* %pause_flags67, align 8, !dbg !21633
  %or68 = or i32 %77, 4, !dbg !21633
  store i32 %or68, i32* %pause_flags67, align 8, !dbg !21633
  br label %if.end69, !dbg !21631

if.end69:                                         ; preds = %if.then66, %if.else
  %78 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !21634
  %tx_pause70 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %78, i32 0, i32 3, !dbg !21636
  %79 = load i32, i32* %tx_pause70, align 4, !dbg !21636
  %tobool71 = icmp ne i32 %79, 0, !dbg !21634
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !21637

if.then72:                                        ; preds = %if.end69
  %80 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21638
  %pause_flags73 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %80, i32 0, i32 71, !dbg !21639
  %81 = load i32, i32* %pause_flags73, align 8, !dbg !21640
  %or74 = or i32 %81, 8, !dbg !21640
  store i32 %or74, i32* %pause_flags73, align 8, !dbg !21640
  br label %if.end75, !dbg !21638

if.end75:                                         ; preds = %if.then72, %if.end69
  %82 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21641
  %call76 = call zeroext i1 @netif_running(%struct.net_device* %82) #13, !dbg !21643
  br i1 %call76, label %if.else79, label %if.then77, !dbg !21644

if.then77:                                        ; preds = %if.end75
  %83 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21645
  %call78 = call i32 @nv_update_linkspeed(%struct.net_device* %83) #13, !dbg !21646
  br label %if.end81, !dbg !21646

if.else79:                                        ; preds = %if.end75
  %84 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21647
  %85 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21648
  %pause_flags80 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %85, i32 0, i32 71, !dbg !21649
  %86 = load i32, i32* %pause_flags80, align 8, !dbg !21649
  call void @nv_update_pause(%struct.net_device* %84, i32 %86) #13, !dbg !21650
  br label %if.end81

if.end81:                                         ; preds = %if.else79, %if.then77
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end56
  %87 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21651
  %call83 = call zeroext i1 @netif_running(%struct.net_device* %87) #13, !dbg !21653
  br i1 %call83, label %if.then84, label %if.end85, !dbg !21654

if.then84:                                        ; preds = %if.end82
  %88 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21655
  call void @nv_start_rxtx(%struct.net_device* %88) #13, !dbg !21657
  %89 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21658
  call void @nv_enable_irq(%struct.net_device* %89) #13, !dbg !21659
  br label %if.end85, !dbg !21660

if.end85:                                         ; preds = %if.then84, %if.end82
  store i32 0, i32* %retval, align 4, !dbg !21661
  br label %return, !dbg !21661

return:                                           ; preds = %if.end85, %if.then12, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !21662
  ret i32 %90, !dbg !21662
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_self_test(%struct.net_device* %dev, %struct.ethtool_test* %test, i64* %buffer) #2 !dbg !21663 {
entry:
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !8241, metadata !DIExpression()), !dbg !21664
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !21670
  %dev.addr = alloca %struct.net_device*, align 8
  %test.addr = alloca %struct.ethtool_test*, align 8
  %buffer.addr = alloca i64*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %result = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21672, metadata !DIExpression()), !dbg !21673
  store %struct.ethtool_test* %test, %struct.ethtool_test** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_test** %test.addr, metadata !21674, metadata !DIExpression()), !dbg !21675
  store i64* %buffer, i64** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %buffer.addr, metadata !21676, metadata !DIExpression()), !dbg !21677
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21678, metadata !DIExpression()), !dbg !21679
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21680
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21681
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21681
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21679
  call void @llvm.dbg.declare(metadata i8** %base, metadata !21682, metadata !DIExpression()), !dbg !21683
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21684
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !21685
  store i8* %call1, i8** %base, align 8, !dbg !21683
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21686, metadata !DIExpression()), !dbg !21687
  call void @llvm.dbg.declare(metadata i32* %count, metadata !21688, metadata !DIExpression()), !dbg !21689
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21690
  %call2 = call i32 @nv_get_sset_count(%struct.net_device* %3, i32 0) #13, !dbg !21691
  store i32 %call2, i32* %count, align 4, !dbg !21692
  %4 = load i64*, i64** %buffer.addr, align 8, !dbg !21693
  %5 = bitcast i64* %4 to i8*, !dbg !21694
  %6 = load i32, i32* %count, align 4, !dbg !21695
  %conv = sext i32 %6 to i64, !dbg !21695
  %mul = mul i64 %conv, 8, !dbg !21696
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 %mul, i1 false), !dbg !21694
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21697
  %call3 = call i32 @nv_link_test(%struct.net_device* %7) #13, !dbg !21699
  %tobool = icmp ne i32 %call3, 0, !dbg !21699
  br i1 %tobool, label %if.end, label %if.then, !dbg !21700

if.then:                                          ; preds = %entry
  %8 = load %struct.ethtool_test*, %struct.ethtool_test** %test.addr, align 8, !dbg !21701
  %flags = getelementptr inbounds %struct.ethtool_test, %struct.ethtool_test* %8, i32 0, i32 1, !dbg !21703
  %9 = load i32, i32* %flags, align 4, !dbg !21704
  %or = or i32 %9, 2, !dbg !21704
  store i32 %or, i32* %flags, align 4, !dbg !21704
  %10 = load i64*, i64** %buffer.addr, align 8, !dbg !21705
  %arrayidx = getelementptr i64, i64* %10, i64 0, !dbg !21705
  store i64 1, i64* %arrayidx, align 8, !dbg !21706
  br label %if.end, !dbg !21707

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.ethtool_test*, %struct.ethtool_test** %test.addr, align 8, !dbg !21708
  %flags4 = getelementptr inbounds %struct.ethtool_test, %struct.ethtool_test* %11, i32 0, i32 1, !dbg !21709
  %12 = load i32, i32* %flags4, align 4, !dbg !21709
  %and = and i32 %12, 1, !dbg !21710
  %tobool5 = icmp ne i32 %and, 0, !dbg !21710
  br i1 %tobool5, label %if.then6, label %if.end63, !dbg !21711

if.then6:                                         ; preds = %if.end
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21712
  %call7 = call zeroext i1 @netif_running(%struct.net_device* %13) #13, !dbg !21713
  br i1 %call7, label %if.then8, label %if.end15, !dbg !21714

if.then8:                                         ; preds = %if.then6
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21715
  call void @netif_stop_queue(%struct.net_device* %14) #13, !dbg !21716
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21717
  call void @nv_napi_disable(%struct.net_device* %15) #13, !dbg !21718
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21719
  call void @netif_tx_lock_bh(%struct.net_device* %16) #13, !dbg !21720
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21721
  call void @netif_addr_lock(%struct.net_device* %17) #13, !dbg !21722
  %18 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21723
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %18, i32 0, i32 0, !dbg !21724
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !21725
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21726, !srcloc !9174
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21727
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !21727
  %rlock.i = bitcast %union.anon.2* %20 to %struct.raw_spinlock*, !dbg !21727
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21728
  %22 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21729
  %irqmask = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %22, i32 0, i32 23, !dbg !21730
  %23 = load i32, i32* %irqmask, align 4, !dbg !21730
  call void @nv_disable_hw_interrupts(%struct.net_device* %21, i32 %23) #13, !dbg !21731
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21732
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 69, !dbg !21734
  %25 = load i32, i32* %msi_flags, align 4, !dbg !21734
  %and9 = and i32 %25, 128, !dbg !21735
  %tobool10 = icmp ne i32 %and9, 0, !dbg !21735
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !21736

if.then11:                                        ; preds = %if.then8
  %26 = load i8*, i8** %base, align 8, !dbg !21737
  %add.ptr = getelementptr i8, i8* %26, i64 0, !dbg !21738
  call void @writel(i32 33791, i8* %add.ptr) #13, !dbg !21739
  br label %if.end13, !dbg !21739

if.else:                                          ; preds = %if.then8
  %27 = load i8*, i8** %base, align 8, !dbg !21740
  %add.ptr12 = getelementptr i8, i8* %27, i64 1008, !dbg !21741
  call void @writel(i32 33791, i8* %add.ptr12) #13, !dbg !21742
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21743
  call void @nv_stop_rxtx(%struct.net_device* %28) #13, !dbg !21744
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21745
  call void @nv_txrx_reset(%struct.net_device* %29) #13, !dbg !21746
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21747
  call void @nv_drain_rxtx(%struct.net_device* %30) #13, !dbg !21748
  %31 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21749
  %lock14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %31, i32 0, i32 0, !dbg !21750
  store %struct.spinlock* %lock14, %struct.spinlock** %lock.addr.i64, align 8
  call void @arch_local_irq_enable() #15, !dbg !21751
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21752, !srcloc !9188
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !21753
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !21753
  %rlock.i65 = bitcast %union.anon.2* %33 to %struct.raw_spinlock*, !dbg !21753
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21754
  call void @netif_addr_unlock(%struct.net_device* %34) #13, !dbg !21755
  %35 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21756
  call void @netif_tx_unlock_bh(%struct.net_device* %35) #13, !dbg !21757
  br label %if.end15, !dbg !21758

if.end15:                                         ; preds = %if.end13, %if.then6
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21759
  %call16 = call i32 @nv_register_test(%struct.net_device* %36) #13, !dbg !21761
  %tobool17 = icmp ne i32 %call16, 0, !dbg !21761
  br i1 %tobool17, label %if.end22, label %if.then18, !dbg !21762

if.then18:                                        ; preds = %if.end15
  %37 = load %struct.ethtool_test*, %struct.ethtool_test** %test.addr, align 8, !dbg !21763
  %flags19 = getelementptr inbounds %struct.ethtool_test, %struct.ethtool_test* %37, i32 0, i32 1, !dbg !21765
  %38 = load i32, i32* %flags19, align 4, !dbg !21766
  %or20 = or i32 %38, 2, !dbg !21766
  store i32 %or20, i32* %flags19, align 4, !dbg !21766
  %39 = load i64*, i64** %buffer.addr, align 8, !dbg !21767
  %arrayidx21 = getelementptr i64, i64* %39, i64 1, !dbg !21767
  store i64 1, i64* %arrayidx21, align 8, !dbg !21768
  br label %if.end22, !dbg !21769

if.end22:                                         ; preds = %if.then18, %if.end15
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21770
  %call23 = call i32 @nv_interrupt_test(%struct.net_device* %40) #13, !dbg !21771
  store i32 %call23, i32* %result, align 4, !dbg !21772
  %41 = load i32, i32* %result, align 4, !dbg !21773
  %cmp = icmp ne i32 %41, 1, !dbg !21775
  br i1 %cmp, label %if.then25, label %if.end29, !dbg !21776

if.then25:                                        ; preds = %if.end22
  %42 = load %struct.ethtool_test*, %struct.ethtool_test** %test.addr, align 8, !dbg !21777
  %flags26 = getelementptr inbounds %struct.ethtool_test, %struct.ethtool_test* %42, i32 0, i32 1, !dbg !21779
  %43 = load i32, i32* %flags26, align 4, !dbg !21780
  %or27 = or i32 %43, 2, !dbg !21780
  store i32 %or27, i32* %flags26, align 4, !dbg !21780
  %44 = load i64*, i64** %buffer.addr, align 8, !dbg !21781
  %arrayidx28 = getelementptr i64, i64* %44, i64 2, !dbg !21781
  store i64 1, i64* %arrayidx28, align 8, !dbg !21782
  br label %if.end29, !dbg !21783

if.end29:                                         ; preds = %if.then25, %if.end22
  %45 = load i32, i32* %result, align 4, !dbg !21784
  %cmp30 = icmp eq i32 %45, 0, !dbg !21786
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !21787

if.then32:                                        ; preds = %if.end29
  br label %if.end63, !dbg !21788

if.end33:                                         ; preds = %if.end29
  %46 = load i32, i32* %count, align 4, !dbg !21790
  %cmp34 = icmp sgt i32 %46, 3, !dbg !21792
  br i1 %cmp34, label %land.lhs.true, label %if.end42, !dbg !21793

land.lhs.true:                                    ; preds = %if.end33
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21794
  %call36 = call i32 @nv_loopback_test(%struct.net_device* %47) #13, !dbg !21795
  %tobool37 = icmp ne i32 %call36, 0, !dbg !21795
  br i1 %tobool37, label %if.end42, label %if.then38, !dbg !21796

if.then38:                                        ; preds = %land.lhs.true
  %48 = load %struct.ethtool_test*, %struct.ethtool_test** %test.addr, align 8, !dbg !21797
  %flags39 = getelementptr inbounds %struct.ethtool_test, %struct.ethtool_test* %48, i32 0, i32 1, !dbg !21799
  %49 = load i32, i32* %flags39, align 4, !dbg !21800
  %or40 = or i32 %49, 2, !dbg !21800
  store i32 %or40, i32* %flags39, align 4, !dbg !21800
  %50 = load i64*, i64** %buffer.addr, align 8, !dbg !21801
  %arrayidx41 = getelementptr i64, i64* %50, i64 3, !dbg !21801
  store i64 1, i64* %arrayidx41, align 8, !dbg !21802
  br label %if.end42, !dbg !21803

if.end42:                                         ; preds = %if.then38, %land.lhs.true, %if.end33
  %51 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21804
  %call43 = call zeroext i1 @netif_running(%struct.net_device* %51) #13, !dbg !21806
  br i1 %call43, label %if.then44, label %if.end62, !dbg !21807

if.then44:                                        ; preds = %if.end42
  %52 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21808
  call void @set_bufsize(%struct.net_device* %52) #13, !dbg !21810
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21811
  %call45 = call i32 @nv_init_ring(%struct.net_device* %53) #13, !dbg !21813
  %tobool46 = icmp ne i32 %call45, 0, !dbg !21813
  br i1 %tobool46, label %if.then47, label %if.end52, !dbg !21814

if.then47:                                        ; preds = %if.then44
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21815
  %in_shutdown = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 5, !dbg !21818
  %55 = load i32, i32* %in_shutdown, align 8, !dbg !21818
  %tobool48 = icmp ne i32 %55, 0, !dbg !21815
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !21819

if.then49:                                        ; preds = %if.then47
  %56 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21820
  %oom_kick = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %56, i32 0, i32 44, !dbg !21821
  %57 = load volatile i64, i64* @jiffies, align 8, !dbg !21822
  %add = add i64 %57, 13, !dbg !21823
  %call50 = call i32 @mod_timer(%struct.timer_list* %oom_kick, i64 %add) #13, !dbg !21824
  br label %if.end51, !dbg !21824

if.end51:                                         ; preds = %if.then49, %if.then47
  br label %if.end52, !dbg !21825

if.end52:                                         ; preds = %if.end51, %if.then44
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21826
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 42, !dbg !21827
  %59 = load i32, i32* %rx_buf_sz, align 8, !dbg !21827
  %60 = load i8*, i8** %base, align 8, !dbg !21828
  %add.ptr53 = getelementptr i8, i8* %60, i64 144, !dbg !21829
  call void @writel(i32 %59, i8* %add.ptr53) #13, !dbg !21830
  %61 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21831
  call void @setup_hw_rings(%struct.net_device* %61, i32 3) #13, !dbg !21832
  %62 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21833
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %62, i32 0, i32 48, !dbg !21834
  %63 = load i32, i32* %rx_ring_size, align 4, !dbg !21834
  %sub = sub i32 %63, 1, !dbg !21835
  %shl = shl i32 %sub, 16, !dbg !21836
  %64 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21837
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %64, i32 0, i32 62, !dbg !21838
  %65 = load i32, i32* %tx_ring_size, align 4, !dbg !21838
  %sub54 = sub i32 %65, 1, !dbg !21839
  %shl55 = shl i32 %sub54, 0, !dbg !21840
  %add56 = add i32 %shl, %shl55, !dbg !21841
  %66 = load i8*, i8** %base, align 8, !dbg !21842
  %add.ptr57 = getelementptr i8, i8* %66, i64 264, !dbg !21843
  call void @writel(i32 %add56, i8* %add.ptr57) #13, !dbg !21844
  %67 = load i8*, i8** %base, align 8, !dbg !21845
  call void @pci_push(i8* %67) #13, !dbg !21846
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21847
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 25, !dbg !21848
  %69 = load i32, i32* %txrxctl_bits, align 4, !dbg !21848
  %or58 = or i32 1, %69, !dbg !21849
  %70 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21850
  %call59 = call i8* @get_hwbase(%struct.net_device* %70) #13, !dbg !21851
  %add.ptr60 = getelementptr i8, i8* %call59, i64 324, !dbg !21852
  call void @writel(i32 %or58, i8* %add.ptr60) #13, !dbg !21853
  %71 = load i8*, i8** %base, align 8, !dbg !21854
  call void @pci_push(i8* %71) #13, !dbg !21855
  %72 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21856
  call void @nv_start_rxtx(%struct.net_device* %72) #13, !dbg !21857
  %73 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21858
  call void @netif_start_queue(%struct.net_device* %73) #13, !dbg !21859
  %74 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21860
  call void @nv_napi_enable(%struct.net_device* %74) #13, !dbg !21861
  %75 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21862
  %76 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21863
  %irqmask61 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %76, i32 0, i32 23, !dbg !21864
  %77 = load i32, i32* %irqmask61, align 4, !dbg !21864
  call void @nv_enable_hw_interrupts(%struct.net_device* %75, i32 %77) #13, !dbg !21865
  br label %if.end62, !dbg !21866

if.end62:                                         ; preds = %if.end52, %if.end42
  br label %if.end63, !dbg !21867

if.end63:                                         ; preds = %if.then32, %if.end62, %if.end
  ret void, !dbg !21868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_strings(%struct.net_device* %dev, i32 %stringset, i8* %buffer) #2 !dbg !21869 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21870, metadata !DIExpression()), !dbg !21871
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !21872, metadata !DIExpression()), !dbg !21873
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !21874, metadata !DIExpression()), !dbg !21875
  %0 = load i32, i32* %stringset.addr, align 4, !dbg !21876
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb1
  ], !dbg !21877

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !21878
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21880
  %call = call i32 @nv_get_sset_count(%struct.net_device* %2, i32 1) #13, !dbg !21881
  %conv = sext i32 %call to i64, !dbg !21881
  %mul = mul i64 %conv, 32, !dbg !21882
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 16 getelementptr inbounds ([33 x %struct.nv_ethtool_str], [33 x %struct.nv_ethtool_str]* @nv_estats_str, i32 0, i32 0, i32 0, i32 0), i64 %mul, i1 false), !dbg !21883
  br label %sw.epilog, !dbg !21884

sw.bb1:                                           ; preds = %entry
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !21885
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21886
  %call2 = call i32 @nv_get_sset_count(%struct.net_device* %4, i32 0) #13, !dbg !21887
  %conv3 = sext i32 %call2 to i64, !dbg !21887
  %mul4 = mul i64 %conv3, 32, !dbg !21888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 16 getelementptr inbounds ([4 x %struct.nv_ethtool_str], [4 x %struct.nv_ethtool_str]* @nv_etests_str, i32 0, i32 0, i32 0, i32 0), i64 %mul4, i1 false), !dbg !21889
  br label %sw.epilog, !dbg !21890

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  ret void, !dbg !21891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %estats, i64* %buffer) #2 !dbg !21892 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %estats.addr = alloca %struct.ethtool_stats*, align 8
  %buffer.addr = alloca i64*, align 8
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21893, metadata !DIExpression()), !dbg !21894
  store %struct.ethtool_stats* %estats, %struct.ethtool_stats** %estats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %estats.addr, metadata !21895, metadata !DIExpression()), !dbg !21896
  store i64* %buffer, i64** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %buffer.addr, metadata !21897, metadata !DIExpression()), !dbg !21898
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21899, metadata !DIExpression()), !dbg !21900
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21901
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21902
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21902
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21900
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21903
  %hwstats_lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 3, !dbg !21904
  call void @spin_lock_bh(%struct.spinlock* %hwstats_lock) #13, !dbg !21905
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21906
  call void @nv_update_stats(%struct.net_device* %3) #13, !dbg !21907
  %4 = load i64*, i64** %buffer.addr, align 8, !dbg !21908
  %5 = bitcast i64* %4 to i8*, !dbg !21909
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21910
  %estats1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 4, !dbg !21911
  %7 = bitcast %struct.nv_ethtool_stats* %estats1 to i8*, !dbg !21909
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21912
  %call2 = call i32 @nv_get_sset_count(%struct.net_device* %8, i32 1) #13, !dbg !21913
  %conv = sext i32 %call2 to i64, !dbg !21913
  %mul = mul i64 %conv, 8, !dbg !21914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %7, i64 %mul, i1 false), !dbg !21909
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21915
  %hwstats_lock3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 3, !dbg !21916
  call void @spin_unlock_bh(%struct.spinlock* %hwstats_lock3) #13, !dbg !21917
  ret void, !dbg !21918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_get_sset_count(%struct.net_device* %dev, i32 %sset) #2 !dbg !21919 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21920, metadata !DIExpression()), !dbg !21921
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !21922, metadata !DIExpression()), !dbg !21923
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21924, metadata !DIExpression()), !dbg !21925
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21926
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21927
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21927
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21925
  %2 = load i32, i32* %sset.addr, align 4, !dbg !21928
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !21929

sw.bb:                                            ; preds = %entry
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21930
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 27, !dbg !21933
  %4 = load i32, i32* %driver_data, align 4, !dbg !21933
  %and = and i32 %4, 4096, !dbg !21934
  %tobool = icmp ne i32 %and, 0, !dbg !21934
  br i1 %tobool, label %if.then, label %if.else, !dbg !21935

if.then:                                          ; preds = %sw.bb
  store i32 4, i32* %retval, align 4, !dbg !21936
  br label %return, !dbg !21936

if.else:                                          ; preds = %sw.bb
  store i32 3, i32* %retval, align 4, !dbg !21937
  br label %return, !dbg !21937

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21938
  %driver_data2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 27, !dbg !21940
  %6 = load i32, i32* %driver_data2, align 4, !dbg !21940
  %and3 = and i32 %6, 2048, !dbg !21941
  %tobool4 = icmp ne i32 %and3, 0, !dbg !21941
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !21942

if.then5:                                         ; preds = %sw.bb1
  store i32 33, i32* %retval, align 4, !dbg !21943
  br label %return, !dbg !21943

if.else6:                                         ; preds = %sw.bb1
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21944
  %driver_data7 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 27, !dbg !21946
  %8 = load i32, i32* %driver_data7, align 4, !dbg !21946
  %and8 = and i32 %8, 1024, !dbg !21947
  %tobool9 = icmp ne i32 %and8, 0, !dbg !21947
  br i1 %tobool9, label %if.then10, label %if.else11, !dbg !21948

if.then10:                                        ; preds = %if.else6
  store i32 30, i32* %retval, align 4, !dbg !21949
  br label %return, !dbg !21949

if.else11:                                        ; preds = %if.else6
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21950
  %driver_data12 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 27, !dbg !21952
  %10 = load i32, i32* %driver_data12, align 4, !dbg !21952
  %and13 = and i32 %10, 512, !dbg !21953
  %tobool14 = icmp ne i32 %and13, 0, !dbg !21953
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !21954

if.then15:                                        ; preds = %if.else11
  store i32 24, i32* %retval, align 4, !dbg !21955
  br label %return, !dbg !21955

if.else16:                                        ; preds = %if.else11
  store i32 0, i32* %retval, align 4, !dbg !21956
  br label %return, !dbg !21956

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !21957
  br label %return, !dbg !21957

return:                                           ; preds = %sw.default, %if.else16, %if.then15, %if.then10, %if.then5, %if.else, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21958
  ret i32 %11, !dbg !21958
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_ts_info(%struct.net_device*, %struct.ethtool_ts_info*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_get_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !21959 {
entry:
  %lock.addr.i89 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i89, metadata !8241, metadata !DIExpression()), !dbg !21960
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !21962
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %speed = alloca i32, align 4
  %supported = alloca i32, align 4
  %advertising = alloca i32, align 4
  %adv = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21964, metadata !DIExpression()), !dbg !21965
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !21966, metadata !DIExpression()), !dbg !21967
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !21968, metadata !DIExpression()), !dbg !21969
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21970
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !21971
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !21971
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !21969
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !21972, metadata !DIExpression()), !dbg !21973
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !21974, metadata !DIExpression()), !dbg !21975
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !21976, metadata !DIExpression()), !dbg !21977
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !21978, metadata !DIExpression()), !dbg !21979
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !21980
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 0, !dbg !21981
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !21982
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21983, !srcloc !9174
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21984
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !21984
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !21984
  %5 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !21985
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %5, i32 0, i32 0, !dbg !21986
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 3, !dbg !21987
  store i8 2, i8* %port, align 1, !dbg !21988
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21989
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %6) #13, !dbg !21991
  br i1 %call1, label %if.end4, label %if.then, !dbg !21992

if.then:                                          ; preds = %entry
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21993
  %call2 = call i32 @nv_update_linkspeed(%struct.net_device* %7) #13, !dbg !21996
  %tobool = icmp ne i32 %call2, 0, !dbg !21996
  br i1 %tobool, label %if.then3, label %if.else, !dbg !21997

if.then3:                                         ; preds = %if.then
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21998
  call void @netif_carrier_on(%struct.net_device* %8) #13, !dbg !22000
  br label %if.end, !dbg !22001

if.else:                                          ; preds = %if.then
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22002
  call void @netif_carrier_off(%struct.net_device* %9) #13, !dbg !22004
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end4, !dbg !22005

if.end4:                                          ; preds = %if.end, %entry
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22006
  %call5 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %10) #13, !dbg !22008
  br i1 %call5, label %if.then6, label %if.else16, !dbg !22009

if.then6:                                         ; preds = %if.end4
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22010
  %linkspeed = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 6, !dbg !22012
  %12 = load i32, i32* %linkspeed, align 4, !dbg !22012
  %and = and i32 %12, 4095, !dbg !22013
  switch i32 %and, label %sw.default [
    i32 1000, label %sw.bb
    i32 100, label %sw.bb7
    i32 50, label %sw.bb8
  ], !dbg !22014

sw.bb:                                            ; preds = %if.then6
  store i32 10, i32* %speed, align 4, !dbg !22015
  br label %sw.epilog, !dbg !22017

sw.bb7:                                           ; preds = %if.then6
  store i32 100, i32* %speed, align 4, !dbg !22018
  br label %sw.epilog, !dbg !22019

sw.bb8:                                           ; preds = %if.then6
  store i32 1000, i32* %speed, align 4, !dbg !22020
  br label %sw.epilog, !dbg !22021

sw.default:                                       ; preds = %if.then6
  store i32 -1, i32* %speed, align 4, !dbg !22022
  br label %sw.epilog, !dbg !22023

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb7, %sw.bb
  %13 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22024
  %base9 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %13, i32 0, i32 0, !dbg !22025
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base9, i32 0, i32 2, !dbg !22026
  store i8 0, i8* %duplex, align 8, !dbg !22027
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22028
  %duplex10 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 7, !dbg !22030
  %15 = load i32, i32* %duplex10, align 8, !dbg !22030
  %tobool11 = icmp ne i32 %15, 0, !dbg !22028
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !22031

if.then12:                                        ; preds = %sw.epilog
  %16 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22032
  %base13 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %16, i32 0, i32 0, !dbg !22033
  %duplex14 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base13, i32 0, i32 2, !dbg !22034
  store i8 1, i8* %duplex14, align 8, !dbg !22035
  br label %if.end15, !dbg !22032

if.end15:                                         ; preds = %if.then12, %sw.epilog
  br label %if.end19, !dbg !22036

if.else16:                                        ; preds = %if.end4
  store i32 -1, i32* %speed, align 4, !dbg !22037
  %17 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22039
  %base17 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %17, i32 0, i32 0, !dbg !22040
  %duplex18 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base17, i32 0, i32 2, !dbg !22041
  store i8 -1, i8* %duplex18, align 8, !dbg !22042
  br label %if.end19

if.end19:                                         ; preds = %if.else16, %if.end15
  %18 = load i32, i32* %speed, align 4, !dbg !22043
  %19 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22044
  %base20 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %19, i32 0, i32 0, !dbg !22045
  %speed21 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base20, i32 0, i32 1, !dbg !22046
  store i32 %18, i32* %speed21, align 4, !dbg !22047
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22048
  %autoneg = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 8, !dbg !22049
  %21 = load i32, i32* %autoneg, align 4, !dbg !22049
  %conv = trunc i32 %21 to i8, !dbg !22048
  %22 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22050
  %base22 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %22, i32 0, i32 0, !dbg !22051
  %autoneg23 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base22, i32 0, i32 5, !dbg !22052
  store i8 %conv, i8* %autoneg23, align 1, !dbg !22053
  store i32 512, i32* %advertising, align 4, !dbg !22054
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22055
  %autoneg24 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 8, !dbg !22057
  %24 = load i32, i32* %autoneg24, align 4, !dbg !22057
  %tobool25 = icmp ne i32 %24, 0, !dbg !22055
  br i1 %tobool25, label %if.then26, label %if.end71, !dbg !22058

if.then26:                                        ; preds = %if.end19
  %25 = load i32, i32* %advertising, align 4, !dbg !22059
  %conv27 = zext i32 %25 to i64, !dbg !22059
  %or = or i64 %conv27, 64, !dbg !22059
  %conv28 = trunc i64 %or to i32, !dbg !22059
  store i32 %conv28, i32* %advertising, align 4, !dbg !22059
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22061
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22062
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 10, !dbg !22063
  %28 = load i32, i32* %phyaddr, align 4, !dbg !22063
  %call29 = call i32 @mii_rw(%struct.net_device* %26, i32 %28, i32 4, i32 -1) #13, !dbg !22064
  store i32 %call29, i32* %adv, align 4, !dbg !22065
  %29 = load i32, i32* %adv, align 4, !dbg !22066
  %and30 = and i32 %29, 32, !dbg !22068
  %tobool31 = icmp ne i32 %and30, 0, !dbg !22068
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !22069

if.then32:                                        ; preds = %if.then26
  %30 = load i32, i32* %advertising, align 4, !dbg !22070
  %conv33 = zext i32 %30 to i64, !dbg !22070
  %or34 = or i64 %conv33, 1, !dbg !22070
  %conv35 = trunc i64 %or34 to i32, !dbg !22070
  store i32 %conv35, i32* %advertising, align 4, !dbg !22070
  br label %if.end36, !dbg !22071

if.end36:                                         ; preds = %if.then32, %if.then26
  %31 = load i32, i32* %adv, align 4, !dbg !22072
  %and37 = and i32 %31, 64, !dbg !22074
  %tobool38 = icmp ne i32 %and37, 0, !dbg !22074
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !22075

if.then39:                                        ; preds = %if.end36
  %32 = load i32, i32* %advertising, align 4, !dbg !22076
  %conv40 = zext i32 %32 to i64, !dbg !22076
  %or41 = or i64 %conv40, 2, !dbg !22076
  %conv42 = trunc i64 %or41 to i32, !dbg !22076
  store i32 %conv42, i32* %advertising, align 4, !dbg !22076
  br label %if.end43, !dbg !22077

if.end43:                                         ; preds = %if.then39, %if.end36
  %33 = load i32, i32* %adv, align 4, !dbg !22078
  %and44 = and i32 %33, 128, !dbg !22080
  %tobool45 = icmp ne i32 %and44, 0, !dbg !22080
  br i1 %tobool45, label %if.then46, label %if.end50, !dbg !22081

if.then46:                                        ; preds = %if.end43
  %34 = load i32, i32* %advertising, align 4, !dbg !22082
  %conv47 = zext i32 %34 to i64, !dbg !22082
  %or48 = or i64 %conv47, 4, !dbg !22082
  %conv49 = trunc i64 %or48 to i32, !dbg !22082
  store i32 %conv49, i32* %advertising, align 4, !dbg !22082
  br label %if.end50, !dbg !22083

if.end50:                                         ; preds = %if.then46, %if.end43
  %35 = load i32, i32* %adv, align 4, !dbg !22084
  %and51 = and i32 %35, 256, !dbg !22086
  %tobool52 = icmp ne i32 %and51, 0, !dbg !22086
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !22087

if.then53:                                        ; preds = %if.end50
  %36 = load i32, i32* %advertising, align 4, !dbg !22088
  %conv54 = zext i32 %36 to i64, !dbg !22088
  %or55 = or i64 %conv54, 8, !dbg !22088
  %conv56 = trunc i64 %or55 to i32, !dbg !22088
  store i32 %conv56, i32* %advertising, align 4, !dbg !22088
  br label %if.end57, !dbg !22089

if.end57:                                         ; preds = %if.then53, %if.end50
  %37 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22090
  %gigabit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %37, i32 0, i32 15, !dbg !22092
  %38 = load i16, i16* %gigabit, align 8, !dbg !22092
  %conv58 = zext i16 %38 to i32, !dbg !22090
  %cmp = icmp eq i32 %conv58, 256, !dbg !22093
  br i1 %cmp, label %if.then60, label %if.end70, !dbg !22094

if.then60:                                        ; preds = %if.end57
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22095
  %40 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22097
  %phyaddr61 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %40, i32 0, i32 10, !dbg !22098
  %41 = load i32, i32* %phyaddr61, align 4, !dbg !22098
  %call62 = call i32 @mii_rw(%struct.net_device* %39, i32 %41, i32 9, i32 -1) #13, !dbg !22099
  store i32 %call62, i32* %adv, align 4, !dbg !22100
  %42 = load i32, i32* %adv, align 4, !dbg !22101
  %and63 = and i32 %42, 512, !dbg !22103
  %tobool64 = icmp ne i32 %and63, 0, !dbg !22103
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !22104

if.then65:                                        ; preds = %if.then60
  %43 = load i32, i32* %advertising, align 4, !dbg !22105
  %conv66 = zext i32 %43 to i64, !dbg !22105
  %or67 = or i64 %conv66, 32, !dbg !22105
  %conv68 = trunc i64 %or67 to i32, !dbg !22105
  store i32 %conv68, i32* %advertising, align 4, !dbg !22105
  br label %if.end69, !dbg !22106

if.end69:                                         ; preds = %if.then65, %if.then60
  br label %if.end70, !dbg !22107

if.end70:                                         ; preds = %if.end69, %if.end57
  br label %if.end71, !dbg !22108

if.end71:                                         ; preds = %if.end70, %if.end19
  store i32 591, i32* %supported, align 4, !dbg !22109
  %44 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22110
  %gigabit72 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %44, i32 0, i32 15, !dbg !22112
  %45 = load i16, i16* %gigabit72, align 8, !dbg !22112
  %conv73 = zext i16 %45 to i32, !dbg !22110
  %cmp74 = icmp eq i32 %conv73, 256, !dbg !22113
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !22114

if.then76:                                        ; preds = %if.end71
  %46 = load i32, i32* %supported, align 4, !dbg !22115
  %conv77 = zext i32 %46 to i64, !dbg !22115
  %or78 = or i64 %conv77, 32, !dbg !22115
  %conv79 = trunc i64 %or78 to i32, !dbg !22115
  store i32 %conv79, i32* %supported, align 4, !dbg !22115
  br label %if.end80, !dbg !22116

if.end80:                                         ; preds = %if.then76, %if.end71
  %47 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22117
  %phyaddr81 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %47, i32 0, i32 10, !dbg !22118
  %48 = load i32, i32* %phyaddr81, align 4, !dbg !22118
  %conv82 = trunc i32 %48 to i8, !dbg !22117
  %49 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22119
  %base83 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %49, i32 0, i32 0, !dbg !22120
  %phy_address = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base83, i32 0, i32 4, !dbg !22121
  store i8 %conv82, i8* %phy_address, align 2, !dbg !22122
  %50 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22123
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %50, i32 0, i32 1, !dbg !22124
  %supported84 = getelementptr inbounds %struct.anon.128, %struct.anon.128* %link_modes, i32 0, i32 0, !dbg !22125
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported84, i64 0, i64 0, !dbg !22123
  %51 = load i32, i32* %supported, align 4, !dbg !22126
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay, i32 %51) #13, !dbg !22127
  %52 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22128
  %link_modes85 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %52, i32 0, i32 1, !dbg !22129
  %advertising86 = getelementptr inbounds %struct.anon.128, %struct.anon.128* %link_modes85, i32 0, i32 1, !dbg !22130
  %arraydecay87 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising86, i64 0, i64 0, !dbg !22128
  %53 = load i32, i32* %advertising, align 4, !dbg !22131
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay87, i32 %53) #13, !dbg !22132
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22133
  %lock88 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 0, !dbg !22134
  store %struct.spinlock* %lock88, %struct.spinlock** %lock.addr.i89, align 8
  call void @arch_local_irq_enable() #15, !dbg !22135
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22136, !srcloc !9188
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i89, align 8, !dbg !22137
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !22137
  %rlock.i90 = bitcast %union.anon.2* %56 to %struct.raw_spinlock*, !dbg !22137
  ret i32 0, !dbg !22138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !22139 {
entry:
  %lock.addr.i276 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i276, metadata !9883, metadata !DIExpression()), !dbg !22140
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9891, metadata !DIExpression()), !dbg !22144
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8259, metadata !DIExpression()), !dbg !22145
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %speed = alloca i32, align 4
  %advertising = alloca i32, align 4
  %mask = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy63 = alloca i64, align 8
  %__dummy264 = alloca i64, align 8
  %tmp67 = alloca i32, align 4
  %adv = alloca i32, align 4
  %bmcr = alloca i32, align 4
  %adv162 = alloca i32, align 4
  %bmcr163 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22152, metadata !DIExpression()), !dbg !22153
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !22154, metadata !DIExpression()), !dbg !22155
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !22156, metadata !DIExpression()), !dbg !22157
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22158
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22159
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !22159
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !22157
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !22160, metadata !DIExpression()), !dbg !22161
  %2 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22162
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %2, i32 0, i32 0, !dbg !22163
  %speed1 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 1, !dbg !22164
  %3 = load i32, i32* %speed1, align 4, !dbg !22164
  store i32 %3, i32* %speed, align 4, !dbg !22161
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !22165, metadata !DIExpression()), !dbg !22166
  %4 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22167
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %4, i32 0, i32 1, !dbg !22168
  %advertising2 = getelementptr inbounds %struct.anon.128, %struct.anon.128* %link_modes, i32 0, i32 1, !dbg !22169
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising2, i64 0, i64 0, !dbg !22167
  %call3 = call zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32* %advertising, i64* %arraydecay) #13, !dbg !22170
  %5 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22171
  %base4 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %5, i32 0, i32 0, !dbg !22173
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base4, i32 0, i32 3, !dbg !22174
  %6 = load i8, i8* %port, align 1, !dbg !22174
  %conv = zext i8 %6 to i32, !dbg !22171
  %cmp = icmp ne i32 %conv, 2, !dbg !22175
  br i1 %cmp, label %if.then, label %if.end, !dbg !22176

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !22177
  br label %return, !dbg !22177

if.end:                                           ; preds = %entry
  %7 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22178
  %base6 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %7, i32 0, i32 0, !dbg !22180
  %phy_address = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base6, i32 0, i32 4, !dbg !22181
  %8 = load i8, i8* %phy_address, align 2, !dbg !22181
  %conv7 = zext i8 %8 to i32, !dbg !22178
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22182
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 10, !dbg !22183
  %10 = load i32, i32* %phyaddr, align 4, !dbg !22183
  %cmp8 = icmp ne i32 %conv7, %10, !dbg !22184
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !22185

if.then10:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !22186
  br label %return, !dbg !22186

if.end11:                                         ; preds = %if.end
  %11 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22188
  %base12 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %11, i32 0, i32 0, !dbg !22190
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base12, i32 0, i32 5, !dbg !22191
  %12 = load i8, i8* %autoneg, align 1, !dbg !22191
  %conv13 = zext i8 %12 to i32, !dbg !22188
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !22192
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !22193

if.then16:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !22194, metadata !DIExpression()), !dbg !22196
  store i32 15, i32* %mask, align 4, !dbg !22197
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22198
  %gigabit = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 15, !dbg !22200
  %14 = load i16, i16* %gigabit, align 8, !dbg !22200
  %conv17 = zext i16 %14 to i32, !dbg !22198
  %cmp18 = icmp eq i32 %conv17, 256, !dbg !22201
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !22202

if.then20:                                        ; preds = %if.then16
  %15 = load i32, i32* %mask, align 4, !dbg !22203
  %conv21 = zext i32 %15 to i64, !dbg !22203
  %or = or i64 %conv21, 32, !dbg !22203
  %conv22 = trunc i64 %or to i32, !dbg !22203
  store i32 %conv22, i32* %mask, align 4, !dbg !22203
  br label %if.end23, !dbg !22204

if.end23:                                         ; preds = %if.then20, %if.then16
  %16 = load i32, i32* %advertising, align 4, !dbg !22205
  %17 = load i32, i32* %mask, align 4, !dbg !22207
  %and = and i32 %16, %17, !dbg !22208
  %cmp24 = icmp eq i32 %and, 0, !dbg !22209
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !22210

if.then26:                                        ; preds = %if.end23
  store i32 -22, i32* %retval, align 4, !dbg !22211
  br label %return, !dbg !22211

if.end27:                                         ; preds = %if.end23
  br label %if.end54, !dbg !22212

if.else:                                          ; preds = %if.end11
  %18 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22213
  %base28 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %18, i32 0, i32 0, !dbg !22215
  %autoneg29 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base28, i32 0, i32 5, !dbg !22216
  %19 = load i8, i8* %autoneg29, align 1, !dbg !22216
  %conv30 = zext i8 %19 to i32, !dbg !22213
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !22217
  br i1 %cmp31, label %if.then33, label %if.else52, !dbg !22218

if.then33:                                        ; preds = %if.else
  %20 = load i32, i32* %speed, align 4, !dbg !22219
  %cmp34 = icmp ne i32 %20, 10, !dbg !22222
  br i1 %cmp34, label %land.lhs.true, label %if.end39, !dbg !22223

land.lhs.true:                                    ; preds = %if.then33
  %21 = load i32, i32* %speed, align 4, !dbg !22224
  %cmp36 = icmp ne i32 %21, 100, !dbg !22225
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !22226

if.then38:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !22227
  br label %return, !dbg !22227

if.end39:                                         ; preds = %land.lhs.true, %if.then33
  %22 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22228
  %base40 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %22, i32 0, i32 0, !dbg !22230
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base40, i32 0, i32 2, !dbg !22231
  %23 = load i8, i8* %duplex, align 8, !dbg !22231
  %conv41 = zext i8 %23 to i32, !dbg !22228
  %cmp42 = icmp ne i32 %conv41, 0, !dbg !22232
  br i1 %cmp42, label %land.lhs.true44, label %if.end51, !dbg !22233

land.lhs.true44:                                  ; preds = %if.end39
  %24 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22234
  %base45 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %24, i32 0, i32 0, !dbg !22235
  %duplex46 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base45, i32 0, i32 2, !dbg !22236
  %25 = load i8, i8* %duplex46, align 8, !dbg !22236
  %conv47 = zext i8 %25 to i32, !dbg !22234
  %cmp48 = icmp ne i32 %conv47, 1, !dbg !22237
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !22238

if.then50:                                        ; preds = %land.lhs.true44
  store i32 -22, i32* %retval, align 4, !dbg !22239
  br label %return, !dbg !22239

if.end51:                                         ; preds = %land.lhs.true44, %if.end39
  br label %if.end53, !dbg !22240

if.else52:                                        ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !22241
  br label %return, !dbg !22241

if.end53:                                         ; preds = %if.end51
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end27
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22243
  call void @netif_carrier_off(%struct.net_device* %26) #13, !dbg !22244
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22245
  %call55 = call zeroext i1 @netif_running(%struct.net_device* %27) #13, !dbg !22246
  br i1 %call55, label %if.then56, label %if.end79, !dbg !22247

if.then56:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !22248, metadata !DIExpression()), !dbg !22249
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22250
  call void @nv_disable_irq(%struct.net_device* %28) #13, !dbg !22251
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22252
  call void @netif_tx_lock_bh(%struct.net_device* %29) #13, !dbg !22253
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22254
  call void @netif_addr_lock(%struct.net_device* %30) #13, !dbg !22255
  br label %do.body, !dbg !22256

do.body:                                          ; preds = %if.then56
  br label %do.body57, !dbg !22257

do.body57:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !22258, metadata !DIExpression()), !dbg !22260
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !22261, metadata !DIExpression()), !dbg !22260
  %cmp58 = icmp eq i64* %__dummy, %__dummy2, !dbg !22260
  %conv59 = zext i1 %cmp58 to i32, !dbg !22260
  store i32 1, i32* %tmp, align 4, !dbg !22260
  %31 = load i32, i32* %tmp, align 4, !dbg !22260
  br label %do.body60, !dbg !22262

do.body60:                                        ; preds = %do.body57
  br label %do.body61, !dbg !22263

do.body61:                                        ; preds = %do.body60
  br label %do.body62, !dbg !22264

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy63, metadata !22266, metadata !DIExpression()), !dbg !22269
  call void @llvm.dbg.declare(metadata i64* %__dummy264, metadata !22270, metadata !DIExpression()), !dbg !22269
  %cmp65 = icmp eq i64* %__dummy63, %__dummy264, !dbg !22269
  %conv66 = zext i1 %cmp65 to i32, !dbg !22269
  store i32 1, i32* %tmp67, align 4, !dbg !22269
  %32 = load i32, i32* %tmp67, align 4, !dbg !22269
  %call68 = call i64 @arch_local_irq_save() #13, !dbg !22271
  store i64 %call68, i64* %flags, align 8, !dbg !22271
  br label %do.end, !dbg !22271

do.end:                                           ; preds = %do.body62
  br label %do.end69, !dbg !22264

do.end69:                                         ; preds = %do.end
  br label %do.body70, !dbg !22263

do.body70:                                        ; preds = %do.end69
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22272, !srcloc !22273
  br label %do.body71, !dbg !22272

do.body71:                                        ; preds = %do.body70
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22274
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 0, !dbg !22274
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22275
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !22276
  %rlock.i = bitcast %union.anon.2* %35 to %struct.raw_spinlock*, !dbg !22276
  br label %do.end73, !dbg !22274

do.end73:                                         ; preds = %do.body71
  br label %do.end74, !dbg !22272

do.end74:                                         ; preds = %do.end73
  br label %do.end75, !dbg !22263

do.end75:                                         ; preds = %do.end74
  br label %do.end76, !dbg !22262

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !22257

do.end77:                                         ; preds = %do.end76
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22277
  call void @nv_stop_rxtx(%struct.net_device* %36) #13, !dbg !22278
  %37 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22279
  %lock78 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %37, i32 0, i32 0, !dbg !22280
  %38 = load i64, i64* %flags, align 8, !dbg !22281
  store %struct.spinlock* %lock78, %struct.spinlock** %lock.addr.i276, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10022, metadata !DIExpression()) #10, !dbg !22282
  call void @llvm.dbg.declare(metadata !1587, metadata !10026, metadata !DIExpression()) #10, !dbg !22282
  store i32 1, i32* %tmp.i, align 4, !dbg !22282
  %39 = load i32, i32* %tmp.i, align 4, !dbg !22282
  call void @llvm.dbg.declare(metadata !1587, metadata !10027, metadata !DIExpression()) #10, !dbg !22283
  call void @llvm.dbg.declare(metadata !1587, metadata !10033, metadata !DIExpression()) #10, !dbg !22283
  store i32 1, i32* %tmp8.i, align 4, !dbg !22283
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !22283
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !22284
  call void @arch_local_irq_restore(i64 %41) #15, !dbg !22284
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22285, !srcloc !10037
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i276, align 8, !dbg !22286
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !22286
  %rlock.i277 = bitcast %union.anon.2* %43 to %struct.raw_spinlock*, !dbg !22286
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22287
  call void @netif_addr_unlock(%struct.net_device* %44) #13, !dbg !22288
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22289
  call void @netif_tx_unlock_bh(%struct.net_device* %45) #13, !dbg !22290
  br label %if.end79, !dbg !22291

if.end79:                                         ; preds = %do.end77, %if.end54
  %46 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22292
  %base80 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %46, i32 0, i32 0, !dbg !22294
  %autoneg81 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base80, i32 0, i32 5, !dbg !22295
  %47 = load i8, i8* %autoneg81, align 1, !dbg !22295
  %conv82 = zext i8 %47 to i32, !dbg !22292
  %cmp83 = icmp eq i32 %conv82, 1, !dbg !22296
  br i1 %cmp83, label %if.then85, label %if.else161, !dbg !22297

if.then85:                                        ; preds = %if.end79
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !22298, metadata !DIExpression()), !dbg !22300
  call void @llvm.dbg.declare(metadata i32* %bmcr, metadata !22301, metadata !DIExpression()), !dbg !22302
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22303
  %autoneg86 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 8, !dbg !22304
  store i32 1, i32* %autoneg86, align 4, !dbg !22305
  %49 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22306
  %50 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22307
  %phyaddr87 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %50, i32 0, i32 10, !dbg !22308
  %51 = load i32, i32* %phyaddr87, align 4, !dbg !22308
  %call88 = call i32 @mii_rw(%struct.net_device* %49, i32 %51, i32 4, i32 -1) #13, !dbg !22309
  store i32 %call88, i32* %adv, align 4, !dbg !22310
  %52 = load i32, i32* %adv, align 4, !dbg !22311
  %and89 = and i32 %52, -4065, !dbg !22311
  store i32 %and89, i32* %adv, align 4, !dbg !22311
  %53 = load i32, i32* %advertising, align 4, !dbg !22312
  %conv90 = zext i32 %53 to i64, !dbg !22312
  %and91 = and i64 %conv90, 1, !dbg !22314
  %tobool = icmp ne i64 %and91, 0, !dbg !22314
  br i1 %tobool, label %if.then92, label %if.end94, !dbg !22315

if.then92:                                        ; preds = %if.then85
  %54 = load i32, i32* %adv, align 4, !dbg !22316
  %or93 = or i32 %54, 32, !dbg !22316
  store i32 %or93, i32* %adv, align 4, !dbg !22316
  br label %if.end94, !dbg !22317

if.end94:                                         ; preds = %if.then92, %if.then85
  %55 = load i32, i32* %advertising, align 4, !dbg !22318
  %conv95 = zext i32 %55 to i64, !dbg !22318
  %and96 = and i64 %conv95, 2, !dbg !22320
  %tobool97 = icmp ne i64 %and96, 0, !dbg !22320
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !22321

if.then98:                                        ; preds = %if.end94
  %56 = load i32, i32* %adv, align 4, !dbg !22322
  %or99 = or i32 %56, 64, !dbg !22322
  store i32 %or99, i32* %adv, align 4, !dbg !22322
  br label %if.end100, !dbg !22323

if.end100:                                        ; preds = %if.then98, %if.end94
  %57 = load i32, i32* %advertising, align 4, !dbg !22324
  %conv101 = zext i32 %57 to i64, !dbg !22324
  %and102 = and i64 %conv101, 4, !dbg !22326
  %tobool103 = icmp ne i64 %and102, 0, !dbg !22326
  br i1 %tobool103, label %if.then104, label %if.end106, !dbg !22327

if.then104:                                       ; preds = %if.end100
  %58 = load i32, i32* %adv, align 4, !dbg !22328
  %or105 = or i32 %58, 128, !dbg !22328
  store i32 %or105, i32* %adv, align 4, !dbg !22328
  br label %if.end106, !dbg !22329

if.end106:                                        ; preds = %if.then104, %if.end100
  %59 = load i32, i32* %advertising, align 4, !dbg !22330
  %conv107 = zext i32 %59 to i64, !dbg !22330
  %and108 = and i64 %conv107, 8, !dbg !22332
  %tobool109 = icmp ne i64 %and108, 0, !dbg !22332
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !22333

if.then110:                                       ; preds = %if.end106
  %60 = load i32, i32* %adv, align 4, !dbg !22334
  %or111 = or i32 %60, 256, !dbg !22334
  store i32 %or111, i32* %adv, align 4, !dbg !22334
  br label %if.end112, !dbg !22335

if.end112:                                        ; preds = %if.then110, %if.end106
  %61 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22336
  %pause_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %61, i32 0, i32 71, !dbg !22338
  %62 = load i32, i32* %pause_flags, align 8, !dbg !22338
  %and113 = and i32 %62, 16, !dbg !22339
  %tobool114 = icmp ne i32 %and113, 0, !dbg !22339
  br i1 %tobool114, label %if.then115, label %if.end117, !dbg !22340

if.then115:                                       ; preds = %if.end112
  %63 = load i32, i32* %adv, align 4, !dbg !22341
  %or116 = or i32 %63, 3072, !dbg !22341
  store i32 %or116, i32* %adv, align 4, !dbg !22341
  br label %if.end117, !dbg !22342

if.end117:                                        ; preds = %if.then115, %if.end112
  %64 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22343
  %pause_flags118 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %64, i32 0, i32 71, !dbg !22345
  %65 = load i32, i32* %pause_flags118, align 8, !dbg !22345
  %and119 = and i32 %65, 32, !dbg !22346
  %tobool120 = icmp ne i32 %and119, 0, !dbg !22346
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !22347

if.then121:                                       ; preds = %if.end117
  %66 = load i32, i32* %adv, align 4, !dbg !22348
  %or122 = or i32 %66, 2048, !dbg !22348
  store i32 %or122, i32* %adv, align 4, !dbg !22348
  br label %if.end123, !dbg !22349

if.end123:                                        ; preds = %if.then121, %if.end117
  %67 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22350
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22351
  %phyaddr124 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 10, !dbg !22352
  %69 = load i32, i32* %phyaddr124, align 4, !dbg !22352
  %70 = load i32, i32* %adv, align 4, !dbg !22353
  %call125 = call i32 @mii_rw(%struct.net_device* %67, i32 %69, i32 4, i32 %70) #13, !dbg !22354
  %71 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22355
  %gigabit126 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %71, i32 0, i32 15, !dbg !22357
  %72 = load i16, i16* %gigabit126, align 8, !dbg !22357
  %conv127 = zext i16 %72 to i32, !dbg !22355
  %cmp128 = icmp eq i32 %conv127, 256, !dbg !22358
  br i1 %cmp128, label %if.then130, label %if.end142, !dbg !22359

if.then130:                                       ; preds = %if.end123
  %73 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22360
  %74 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22362
  %phyaddr131 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %74, i32 0, i32 10, !dbg !22363
  %75 = load i32, i32* %phyaddr131, align 4, !dbg !22363
  %call132 = call i32 @mii_rw(%struct.net_device* %73, i32 %75, i32 9, i32 -1) #13, !dbg !22364
  store i32 %call132, i32* %adv, align 4, !dbg !22365
  %76 = load i32, i32* %adv, align 4, !dbg !22366
  %and133 = and i32 %76, -513, !dbg !22366
  store i32 %and133, i32* %adv, align 4, !dbg !22366
  %77 = load i32, i32* %advertising, align 4, !dbg !22367
  %conv134 = zext i32 %77 to i64, !dbg !22367
  %and135 = and i64 %conv134, 32, !dbg !22369
  %tobool136 = icmp ne i64 %and135, 0, !dbg !22369
  br i1 %tobool136, label %if.then137, label %if.end139, !dbg !22370

if.then137:                                       ; preds = %if.then130
  %78 = load i32, i32* %adv, align 4, !dbg !22371
  %or138 = or i32 %78, 512, !dbg !22371
  store i32 %or138, i32* %adv, align 4, !dbg !22371
  br label %if.end139, !dbg !22372

if.end139:                                        ; preds = %if.then137, %if.then130
  %79 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22373
  %80 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22374
  %phyaddr140 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %80, i32 0, i32 10, !dbg !22375
  %81 = load i32, i32* %phyaddr140, align 4, !dbg !22375
  %82 = load i32, i32* %adv, align 4, !dbg !22376
  %call141 = call i32 @mii_rw(%struct.net_device* %79, i32 %81, i32 9, i32 %82) #13, !dbg !22377
  br label %if.end142, !dbg !22378

if.end142:                                        ; preds = %if.end139, %if.end123
  %83 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22379
  %call143 = call zeroext i1 @netif_running(%struct.net_device* %83) #13, !dbg !22381
  br i1 %call143, label %if.then144, label %if.end145, !dbg !22382

if.then144:                                       ; preds = %if.end142
  %84 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22383
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %84, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)) #14, !dbg !22384
  br label %if.end145, !dbg !22384

if.end145:                                        ; preds = %if.then144, %if.end142
  %85 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22385
  %86 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22386
  %phyaddr146 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %86, i32 0, i32 10, !dbg !22387
  %87 = load i32, i32* %phyaddr146, align 4, !dbg !22387
  %call147 = call i32 @mii_rw(%struct.net_device* %85, i32 %87, i32 0, i32 -1) #13, !dbg !22388
  store i32 %call147, i32* %bmcr, align 4, !dbg !22389
  %88 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22390
  %phy_model = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %88, i32 0, i32 13, !dbg !22392
  %89 = load i32, i32* %phy_model, align 8, !dbg !22392
  %cmp148 = icmp eq i32 %89, 544, !dbg !22393
  br i1 %cmp148, label %if.then150, label %if.else156, !dbg !22394

if.then150:                                       ; preds = %if.end145
  %90 = load i32, i32* %bmcr, align 4, !dbg !22395
  %or151 = or i32 %90, 4096, !dbg !22395
  store i32 %or151, i32* %bmcr, align 4, !dbg !22395
  %91 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22397
  %92 = load i32, i32* %bmcr, align 4, !dbg !22399
  %call152 = call i32 @phy_reset(%struct.net_device* %91, i32 %92) #13, !dbg !22400
  %tobool153 = icmp ne i32 %call152, 0, !dbg !22400
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !22401

if.then154:                                       ; preds = %if.then150
  %93 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22402
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %93, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i64 0, i64 0)) #14, !dbg !22404
  store i32 -22, i32* %retval, align 4, !dbg !22405
  br label %return, !dbg !22405

if.end155:                                        ; preds = %if.then150
  br label %if.end160, !dbg !22406

if.else156:                                       ; preds = %if.end145
  %94 = load i32, i32* %bmcr, align 4, !dbg !22407
  %or157 = or i32 %94, 4608, !dbg !22407
  store i32 %or157, i32* %bmcr, align 4, !dbg !22407
  %95 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22409
  %96 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22410
  %phyaddr158 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %96, i32 0, i32 10, !dbg !22411
  %97 = load i32, i32* %phyaddr158, align 4, !dbg !22411
  %98 = load i32, i32* %bmcr, align 4, !dbg !22412
  %call159 = call i32 @mii_rw(%struct.net_device* %95, i32 %97, i32 0, i32 %98) #13, !dbg !22413
  br label %if.end160

if.end160:                                        ; preds = %if.else156, %if.end155
  br label %if.end272, !dbg !22414

if.else161:                                       ; preds = %if.end79
  call void @llvm.dbg.declare(metadata i32* %adv162, metadata !22415, metadata !DIExpression()), !dbg !22417
  call void @llvm.dbg.declare(metadata i32* %bmcr163, metadata !22418, metadata !DIExpression()), !dbg !22419
  %99 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22420
  %autoneg164 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %99, i32 0, i32 8, !dbg !22421
  store i32 0, i32* %autoneg164, align 4, !dbg !22422
  %100 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22423
  %101 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22424
  %phyaddr165 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %101, i32 0, i32 10, !dbg !22425
  %102 = load i32, i32* %phyaddr165, align 4, !dbg !22425
  %call166 = call i32 @mii_rw(%struct.net_device* %100, i32 %102, i32 4, i32 -1) #13, !dbg !22426
  store i32 %call166, i32* %adv162, align 4, !dbg !22427
  %103 = load i32, i32* %adv162, align 4, !dbg !22428
  %and167 = and i32 %103, -4065, !dbg !22428
  store i32 %and167, i32* %adv162, align 4, !dbg !22428
  %104 = load i32, i32* %speed, align 4, !dbg !22429
  %cmp168 = icmp eq i32 %104, 10, !dbg !22431
  br i1 %cmp168, label %land.lhs.true170, label %if.end178, !dbg !22432

land.lhs.true170:                                 ; preds = %if.else161
  %105 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22433
  %base171 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %105, i32 0, i32 0, !dbg !22434
  %duplex172 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base171, i32 0, i32 2, !dbg !22435
  %106 = load i8, i8* %duplex172, align 8, !dbg !22435
  %conv173 = zext i8 %106 to i32, !dbg !22433
  %cmp174 = icmp eq i32 %conv173, 0, !dbg !22436
  br i1 %cmp174, label %if.then176, label %if.end178, !dbg !22437

if.then176:                                       ; preds = %land.lhs.true170
  %107 = load i32, i32* %adv162, align 4, !dbg !22438
  %or177 = or i32 %107, 32, !dbg !22438
  store i32 %or177, i32* %adv162, align 4, !dbg !22438
  br label %if.end178, !dbg !22439

if.end178:                                        ; preds = %if.then176, %land.lhs.true170, %if.else161
  %108 = load i32, i32* %speed, align 4, !dbg !22440
  %cmp179 = icmp eq i32 %108, 10, !dbg !22442
  br i1 %cmp179, label %land.lhs.true181, label %if.end189, !dbg !22443

land.lhs.true181:                                 ; preds = %if.end178
  %109 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22444
  %base182 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %109, i32 0, i32 0, !dbg !22445
  %duplex183 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base182, i32 0, i32 2, !dbg !22446
  %110 = load i8, i8* %duplex183, align 8, !dbg !22446
  %conv184 = zext i8 %110 to i32, !dbg !22444
  %cmp185 = icmp eq i32 %conv184, 1, !dbg !22447
  br i1 %cmp185, label %if.then187, label %if.end189, !dbg !22448

if.then187:                                       ; preds = %land.lhs.true181
  %111 = load i32, i32* %adv162, align 4, !dbg !22449
  %or188 = or i32 %111, 64, !dbg !22449
  store i32 %or188, i32* %adv162, align 4, !dbg !22449
  br label %if.end189, !dbg !22450

if.end189:                                        ; preds = %if.then187, %land.lhs.true181, %if.end178
  %112 = load i32, i32* %speed, align 4, !dbg !22451
  %cmp190 = icmp eq i32 %112, 100, !dbg !22453
  br i1 %cmp190, label %land.lhs.true192, label %if.end200, !dbg !22454

land.lhs.true192:                                 ; preds = %if.end189
  %113 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22455
  %base193 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %113, i32 0, i32 0, !dbg !22456
  %duplex194 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base193, i32 0, i32 2, !dbg !22457
  %114 = load i8, i8* %duplex194, align 8, !dbg !22457
  %conv195 = zext i8 %114 to i32, !dbg !22455
  %cmp196 = icmp eq i32 %conv195, 0, !dbg !22458
  br i1 %cmp196, label %if.then198, label %if.end200, !dbg !22459

if.then198:                                       ; preds = %land.lhs.true192
  %115 = load i32, i32* %adv162, align 4, !dbg !22460
  %or199 = or i32 %115, 128, !dbg !22460
  store i32 %or199, i32* %adv162, align 4, !dbg !22460
  br label %if.end200, !dbg !22461

if.end200:                                        ; preds = %if.then198, %land.lhs.true192, %if.end189
  %116 = load i32, i32* %speed, align 4, !dbg !22462
  %cmp201 = icmp eq i32 %116, 100, !dbg !22464
  br i1 %cmp201, label %land.lhs.true203, label %if.end211, !dbg !22465

land.lhs.true203:                                 ; preds = %if.end200
  %117 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !22466
  %base204 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %117, i32 0, i32 0, !dbg !22467
  %duplex205 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base204, i32 0, i32 2, !dbg !22468
  %118 = load i8, i8* %duplex205, align 8, !dbg !22468
  %conv206 = zext i8 %118 to i32, !dbg !22466
  %cmp207 = icmp eq i32 %conv206, 1, !dbg !22469
  br i1 %cmp207, label %if.then209, label %if.end211, !dbg !22470

if.then209:                                       ; preds = %land.lhs.true203
  %119 = load i32, i32* %adv162, align 4, !dbg !22471
  %or210 = or i32 %119, 256, !dbg !22471
  store i32 %or210, i32* %adv162, align 4, !dbg !22471
  br label %if.end211, !dbg !22472

if.end211:                                        ; preds = %if.then209, %land.lhs.true203, %if.end200
  %120 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22473
  %pause_flags212 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %120, i32 0, i32 71, !dbg !22474
  %121 = load i32, i32* %pause_flags212, align 8, !dbg !22475
  %and213 = and i32 %121, -77, !dbg !22475
  store i32 %and213, i32* %pause_flags212, align 8, !dbg !22475
  %122 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22476
  %pause_flags214 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %122, i32 0, i32 71, !dbg !22478
  %123 = load i32, i32* %pause_flags214, align 8, !dbg !22478
  %and215 = and i32 %123, 16, !dbg !22479
  %tobool216 = icmp ne i32 %and215, 0, !dbg !22479
  br i1 %tobool216, label %if.then217, label %if.end221, !dbg !22480

if.then217:                                       ; preds = %if.end211
  %124 = load i32, i32* %adv162, align 4, !dbg !22481
  %or218 = or i32 %124, 3072, !dbg !22481
  store i32 %or218, i32* %adv162, align 4, !dbg !22481
  %125 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22483
  %pause_flags219 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %125, i32 0, i32 71, !dbg !22484
  %126 = load i32, i32* %pause_flags219, align 8, !dbg !22485
  %or220 = or i32 %126, 4, !dbg !22485
  store i32 %or220, i32* %pause_flags219, align 8, !dbg !22485
  br label %if.end221, !dbg !22486

if.end221:                                        ; preds = %if.then217, %if.end211
  %127 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22487
  %pause_flags222 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %127, i32 0, i32 71, !dbg !22489
  %128 = load i32, i32* %pause_flags222, align 8, !dbg !22489
  %and223 = and i32 %128, 32, !dbg !22490
  %tobool224 = icmp ne i32 %and223, 0, !dbg !22490
  br i1 %tobool224, label %if.then225, label %if.end229, !dbg !22491

if.then225:                                       ; preds = %if.end221
  %129 = load i32, i32* %adv162, align 4, !dbg !22492
  %or226 = or i32 %129, 2048, !dbg !22492
  store i32 %or226, i32* %adv162, align 4, !dbg !22492
  %130 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22494
  %pause_flags227 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %130, i32 0, i32 71, !dbg !22495
  %131 = load i32, i32* %pause_flags227, align 8, !dbg !22496
  %or228 = or i32 %131, 8, !dbg !22496
  store i32 %or228, i32* %pause_flags227, align 8, !dbg !22496
  br label %if.end229, !dbg !22497

if.end229:                                        ; preds = %if.then225, %if.end221
  %132 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22498
  %133 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22499
  %phyaddr230 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %133, i32 0, i32 10, !dbg !22500
  %134 = load i32, i32* %phyaddr230, align 4, !dbg !22500
  %135 = load i32, i32* %adv162, align 4, !dbg !22501
  %call231 = call i32 @mii_rw(%struct.net_device* %132, i32 %134, i32 4, i32 %135) #13, !dbg !22502
  %136 = load i32, i32* %adv162, align 4, !dbg !22503
  %137 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22504
  %fixed_mode = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %137, i32 0, i32 9, !dbg !22505
  store i32 %136, i32* %fixed_mode, align 8, !dbg !22506
  %138 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22507
  %gigabit232 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %138, i32 0, i32 15, !dbg !22509
  %139 = load i16, i16* %gigabit232, align 8, !dbg !22509
  %conv233 = zext i16 %139 to i32, !dbg !22507
  %cmp234 = icmp eq i32 %conv233, 256, !dbg !22510
  br i1 %cmp234, label %if.then236, label %if.end242, !dbg !22511

if.then236:                                       ; preds = %if.end229
  %140 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22512
  %141 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22514
  %phyaddr237 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %141, i32 0, i32 10, !dbg !22515
  %142 = load i32, i32* %phyaddr237, align 4, !dbg !22515
  %call238 = call i32 @mii_rw(%struct.net_device* %140, i32 %142, i32 9, i32 -1) #13, !dbg !22516
  store i32 %call238, i32* %adv162, align 4, !dbg !22517
  %143 = load i32, i32* %adv162, align 4, !dbg !22518
  %and239 = and i32 %143, -513, !dbg !22518
  store i32 %and239, i32* %adv162, align 4, !dbg !22518
  %144 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22519
  %145 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22520
  %phyaddr240 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %145, i32 0, i32 10, !dbg !22521
  %146 = load i32, i32* %phyaddr240, align 4, !dbg !22521
  %147 = load i32, i32* %adv162, align 4, !dbg !22522
  %call241 = call i32 @mii_rw(%struct.net_device* %144, i32 %146, i32 9, i32 %147) #13, !dbg !22523
  br label %if.end242, !dbg !22524

if.end242:                                        ; preds = %if.then236, %if.end229
  %148 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22525
  %149 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22526
  %phyaddr243 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %149, i32 0, i32 10, !dbg !22527
  %150 = load i32, i32* %phyaddr243, align 4, !dbg !22527
  %call244 = call i32 @mii_rw(%struct.net_device* %148, i32 %150, i32 0, i32 -1) #13, !dbg !22528
  store i32 %call244, i32* %bmcr163, align 4, !dbg !22529
  %151 = load i32, i32* %bmcr163, align 4, !dbg !22530
  %and245 = and i32 %151, -12609, !dbg !22530
  store i32 %and245, i32* %bmcr163, align 4, !dbg !22530
  %152 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22531
  %fixed_mode246 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %152, i32 0, i32 9, !dbg !22533
  %153 = load i32, i32* %fixed_mode246, align 8, !dbg !22533
  %and247 = and i32 %153, 320, !dbg !22534
  %tobool248 = icmp ne i32 %and247, 0, !dbg !22534
  br i1 %tobool248, label %if.then249, label %if.end251, !dbg !22535

if.then249:                                       ; preds = %if.end242
  %154 = load i32, i32* %bmcr163, align 4, !dbg !22536
  %or250 = or i32 %154, 256, !dbg !22536
  store i32 %or250, i32* %bmcr163, align 4, !dbg !22536
  br label %if.end251, !dbg !22537

if.end251:                                        ; preds = %if.then249, %if.end242
  %155 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22538
  %fixed_mode252 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %155, i32 0, i32 9, !dbg !22540
  %156 = load i32, i32* %fixed_mode252, align 8, !dbg !22540
  %and253 = and i32 %156, 384, !dbg !22541
  %tobool254 = icmp ne i32 %and253, 0, !dbg !22541
  br i1 %tobool254, label %if.then255, label %if.end257, !dbg !22542

if.then255:                                       ; preds = %if.end251
  %157 = load i32, i32* %bmcr163, align 4, !dbg !22543
  %or256 = or i32 %157, 8192, !dbg !22543
  store i32 %or256, i32* %bmcr163, align 4, !dbg !22543
  br label %if.end257, !dbg !22544

if.end257:                                        ; preds = %if.then255, %if.end251
  %158 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22545
  %phy_oui = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %158, i32 0, i32 12, !dbg !22547
  %159 = load i32, i32* %phy_oui, align 4, !dbg !22547
  %cmp258 = icmp eq i32 %159, 20547, !dbg !22548
  br i1 %cmp258, label %if.then260, label %if.else265, !dbg !22549

if.then260:                                       ; preds = %if.end257
  %160 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22550
  %161 = load i32, i32* %bmcr163, align 4, !dbg !22553
  %call261 = call i32 @phy_reset(%struct.net_device* %160, i32 %161) #13, !dbg !22554
  %tobool262 = icmp ne i32 %call261, 0, !dbg !22554
  br i1 %tobool262, label %if.then263, label %if.end264, !dbg !22555

if.then263:                                       ; preds = %if.then260
  %162 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22556
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %162, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i64 0, i64 0)) #14, !dbg !22558
  store i32 -22, i32* %retval, align 4, !dbg !22559
  br label %return, !dbg !22559

if.end264:                                        ; preds = %if.then260
  br label %if.end271, !dbg !22560

if.else265:                                       ; preds = %if.end257
  %163 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22561
  %164 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22563
  %phyaddr266 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %164, i32 0, i32 10, !dbg !22564
  %165 = load i32, i32* %phyaddr266, align 4, !dbg !22564
  %166 = load i32, i32* %bmcr163, align 4, !dbg !22565
  %call267 = call i32 @mii_rw(%struct.net_device* %163, i32 %165, i32 0, i32 %166) #13, !dbg !22566
  %167 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22567
  %call268 = call zeroext i1 @netif_running(%struct.net_device* %167) #13, !dbg !22569
  br i1 %call268, label %if.then269, label %if.end270, !dbg !22570

if.then269:                                       ; preds = %if.else265
  call void @__const_udelay(i64 42950) #13, !dbg !22571
  %168 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22577
  call void @nv_linkchange(%struct.net_device* %168) #13, !dbg !22578
  br label %if.end270, !dbg !22579

if.end270:                                        ; preds = %if.then269, %if.else265
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end264
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.end160
  %169 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22580
  %call273 = call zeroext i1 @netif_running(%struct.net_device* %169) #13, !dbg !22582
  br i1 %call273, label %if.then274, label %if.end275, !dbg !22583

if.then274:                                       ; preds = %if.end272
  %170 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22584
  call void @nv_start_rxtx(%struct.net_device* %170) #13, !dbg !22586
  %171 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22587
  call void @nv_enable_irq(%struct.net_device* %171) #13, !dbg !22588
  br label %if.end275, !dbg !22589

if.end275:                                        ; preds = %if.then274, %if.end272
  store i32 0, i32* %retval, align 4, !dbg !22590
  br label %return, !dbg !22590

return:                                           ; preds = %if.end275, %if.then263, %if.then154, %if.else52, %if.then50, %if.then38, %if.then26, %if.then10, %if.then
  %172 = load i32, i32* %retval, align 4, !dbg !22591
  ret i32 %172, !dbg !22591
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #2 !dbg !22592 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !22597, metadata !DIExpression()), !dbg !22598
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !22599
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !22600
  %call = call i8* @dev_name(%struct.device* %dev) #13, !dbg !22601
  ret i8* %call, !dbg !22602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_reset(%struct.net_device* %dev, i32 %bmcr_setup) #2 !dbg !22603 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %bmcr_setup.addr = alloca i32, align 4
  %np = alloca %struct.fe_priv*, align 8
  %miicontrol = alloca i32, align 4
  %tries = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22604, metadata !DIExpression()), !dbg !22605
  store i32 %bmcr_setup, i32* %bmcr_setup.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bmcr_setup.addr, metadata !22606, metadata !DIExpression()), !dbg !22607
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !22608, metadata !DIExpression()), !dbg !22609
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22610
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22611
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !22611
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !22609
  call void @llvm.dbg.declare(metadata i32* %miicontrol, metadata !22612, metadata !DIExpression()), !dbg !22613
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !22614, metadata !DIExpression()), !dbg !22615
  store i32 0, i32* %tries, align 4, !dbg !22615
  %2 = load i32, i32* %bmcr_setup.addr, align 4, !dbg !22616
  %or = or i32 32768, %2, !dbg !22617
  store i32 %or, i32* %miicontrol, align 4, !dbg !22618
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22619
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22621
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 10, !dbg !22622
  %5 = load i32, i32* %phyaddr, align 4, !dbg !22622
  %6 = load i32, i32* %miicontrol, align 4, !dbg !22623
  %call1 = call i32 @mii_rw(%struct.net_device* %3, i32 %5, i32 0, i32 %6) #13, !dbg !22624
  %tobool = icmp ne i32 %call1, 0, !dbg !22624
  br i1 %tobool, label %if.then, label %if.end, !dbg !22625

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !22626
  br label %return, !dbg !22626

if.end:                                           ; preds = %entry
  call void @msleep(i32 500) #13, !dbg !22627
  br label %while.cond, !dbg !22628

while.cond:                                       ; preds = %if.end6, %if.end
  %7 = load i32, i32* %miicontrol, align 4, !dbg !22629
  %and = and i32 %7, 32768, !dbg !22630
  %tobool2 = icmp ne i32 %and, 0, !dbg !22628
  br i1 %tobool2, label %while.body, label %while.end, !dbg !22628

while.body:                                       ; preds = %while.cond
  call void @usleep_range(i64 10000, i64 20000) #13, !dbg !22631
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22633
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22634
  %phyaddr3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 10, !dbg !22635
  %10 = load i32, i32* %phyaddr3, align 4, !dbg !22635
  %call4 = call i32 @mii_rw(%struct.net_device* %8, i32 %10, i32 0, i32 -1) #13, !dbg !22636
  store i32 %call4, i32* %miicontrol, align 4, !dbg !22637
  %11 = load i32, i32* %tries, align 4, !dbg !22638
  %inc = add i32 %11, 1, !dbg !22638
  store i32 %inc, i32* %tries, align 4, !dbg !22638
  %cmp = icmp ugt i32 %11, 100, !dbg !22640
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !22641

if.then5:                                         ; preds = %while.body
  store i32 -1, i32* %retval, align 4, !dbg !22642
  br label %return, !dbg !22642

if.end6:                                          ; preds = %while.body
  br label %while.cond, !dbg !22628, !llvm.loop !22643

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !22645
  br label %return, !dbg !22645

return:                                           ; preds = %while.end, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !22646
  ret i32 %12, !dbg !22646
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !22647 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22650, metadata !DIExpression()), !dbg !22651
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22652, metadata !DIExpression()), !dbg !22653
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !22654, metadata !DIExpression()), !dbg !22655
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !22656, metadata !DIExpression()), !dbg !22657
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22658
  %1 = load i64, i64* %size.addr, align 8, !dbg !22659
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !22660
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !22661
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #13, !dbg !22662
  ret void, !dbg !22663
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_link_test(%struct.net_device* %dev) #2 !dbg !22664 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %mii_status = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22665, metadata !DIExpression()), !dbg !22666
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !22667, metadata !DIExpression()), !dbg !22668
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22669
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22670
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !22670
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !22668
  call void @llvm.dbg.declare(metadata i32* %mii_status, metadata !22671, metadata !DIExpression()), !dbg !22672
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22673
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22674
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 10, !dbg !22675
  %4 = load i32, i32* %phyaddr, align 4, !dbg !22675
  %call1 = call i32 @mii_rw(%struct.net_device* %2, i32 %4, i32 1, i32 -1) #13, !dbg !22676
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22677
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22678
  %phyaddr2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 10, !dbg !22679
  %7 = load i32, i32* %phyaddr2, align 4, !dbg !22679
  %call3 = call i32 @mii_rw(%struct.net_device* %5, i32 %7, i32 1, i32 -1) #13, !dbg !22680
  store i32 %call3, i32* %mii_status, align 4, !dbg !22681
  %8 = load i32, i32* %mii_status, align 4, !dbg !22682
  %and = and i32 %8, 4, !dbg !22684
  %tobool = icmp ne i32 %and, 0, !dbg !22684
  br i1 %tobool, label %if.else, label %if.then, !dbg !22685

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !22686
  br label %return, !dbg !22686

if.else:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !22687
  br label %return, !dbg !22687

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !22688
  ret i32 %9, !dbg !22688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_register_test(%struct.net_device* %dev) #2 !dbg !22689 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %base = alloca i8*, align 8
  %i = alloca i32, align 4
  %orig_read = alloca i32, align 4
  %new_read = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22690, metadata !DIExpression()), !dbg !22691
  call void @llvm.dbg.declare(metadata i8** %base, metadata !22692, metadata !DIExpression()), !dbg !22693
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22694
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !22695
  store i8* %call, i8** %base, align 8, !dbg !22693
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22696, metadata !DIExpression()), !dbg !22697
  store i32 0, i32* %i, align 4, !dbg !22697
  call void @llvm.dbg.declare(metadata i32* %orig_read, metadata !22698, metadata !DIExpression()), !dbg !22699
  call void @llvm.dbg.declare(metadata i32* %new_read, metadata !22700, metadata !DIExpression()), !dbg !22701
  br label %do.body, !dbg !22702

do.body:                                          ; preds = %do.cond, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !22703
  %2 = load i32, i32* %i, align 4, !dbg !22705
  %idxprom = sext i32 %2 to i64, !dbg !22706
  %arrayidx = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom, !dbg !22706
  %reg = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx, i32 0, i32 0, !dbg !22707
  %3 = load i32, i32* %reg, align 8, !dbg !22707
  %idx.ext = zext i32 %3 to i64, !dbg !22708
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !22708
  %call1 = call i32 @readl(i8* %add.ptr) #13, !dbg !22709
  store i32 %call1, i32* %orig_read, align 4, !dbg !22710
  %4 = load i32, i32* %i, align 4, !dbg !22711
  %idxprom2 = sext i32 %4 to i64, !dbg !22712
  %arrayidx3 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom2, !dbg !22712
  %mask = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx3, i32 0, i32 1, !dbg !22713
  %5 = load i32, i32* %mask, align 4, !dbg !22713
  %6 = load i32, i32* %orig_read, align 4, !dbg !22714
  %xor = xor i32 %6, %5, !dbg !22714
  store i32 %xor, i32* %orig_read, align 4, !dbg !22714
  %7 = load i32, i32* %orig_read, align 4, !dbg !22715
  %8 = load i8*, i8** %base, align 8, !dbg !22716
  %9 = load i32, i32* %i, align 4, !dbg !22717
  %idxprom4 = sext i32 %9 to i64, !dbg !22718
  %arrayidx5 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom4, !dbg !22718
  %reg6 = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx5, i32 0, i32 0, !dbg !22719
  %10 = load i32, i32* %reg6, align 8, !dbg !22719
  %idx.ext7 = zext i32 %10 to i64, !dbg !22720
  %add.ptr8 = getelementptr i8, i8* %8, i64 %idx.ext7, !dbg !22720
  call void @writel(i32 %7, i8* %add.ptr8) #13, !dbg !22721
  %11 = load i8*, i8** %base, align 8, !dbg !22722
  %12 = load i32, i32* %i, align 4, !dbg !22723
  %idxprom9 = sext i32 %12 to i64, !dbg !22724
  %arrayidx10 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom9, !dbg !22724
  %reg11 = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx10, i32 0, i32 0, !dbg !22725
  %13 = load i32, i32* %reg11, align 8, !dbg !22725
  %idx.ext12 = zext i32 %13 to i64, !dbg !22726
  %add.ptr13 = getelementptr i8, i8* %11, i64 %idx.ext12, !dbg !22726
  %call14 = call i32 @readl(i8* %add.ptr13) #13, !dbg !22727
  store i32 %call14, i32* %new_read, align 4, !dbg !22728
  %14 = load i32, i32* %new_read, align 4, !dbg !22729
  %15 = load i32, i32* %i, align 4, !dbg !22731
  %idxprom15 = sext i32 %15 to i64, !dbg !22732
  %arrayidx16 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom15, !dbg !22732
  %mask17 = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx16, i32 0, i32 1, !dbg !22733
  %16 = load i32, i32* %mask17, align 4, !dbg !22733
  %and = and i32 %14, %16, !dbg !22734
  %17 = load i32, i32* %orig_read, align 4, !dbg !22735
  %18 = load i32, i32* %i, align 4, !dbg !22736
  %idxprom18 = sext i32 %18 to i64, !dbg !22737
  %arrayidx19 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom18, !dbg !22737
  %mask20 = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx19, i32 0, i32 1, !dbg !22738
  %19 = load i32, i32* %mask20, align 4, !dbg !22738
  %and21 = and i32 %17, %19, !dbg !22739
  %cmp = icmp ne i32 %and, %and21, !dbg !22740
  br i1 %cmp, label %if.then, label %if.end, !dbg !22741

if.then:                                          ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !22742
  br label %return, !dbg !22742

if.end:                                           ; preds = %do.body
  %20 = load i32, i32* %i, align 4, !dbg !22743
  %idxprom22 = sext i32 %20 to i64, !dbg !22744
  %arrayidx23 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom22, !dbg !22744
  %mask24 = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx23, i32 0, i32 1, !dbg !22745
  %21 = load i32, i32* %mask24, align 4, !dbg !22745
  %22 = load i32, i32* %orig_read, align 4, !dbg !22746
  %xor25 = xor i32 %22, %21, !dbg !22746
  store i32 %xor25, i32* %orig_read, align 4, !dbg !22746
  %23 = load i32, i32* %orig_read, align 4, !dbg !22747
  %24 = load i8*, i8** %base, align 8, !dbg !22748
  %25 = load i32, i32* %i, align 4, !dbg !22749
  %idxprom26 = sext i32 %25 to i64, !dbg !22750
  %arrayidx27 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom26, !dbg !22750
  %reg28 = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx27, i32 0, i32 0, !dbg !22751
  %26 = load i32, i32* %reg28, align 8, !dbg !22751
  %idx.ext29 = zext i32 %26 to i64, !dbg !22752
  %add.ptr30 = getelementptr i8, i8* %24, i64 %idx.ext29, !dbg !22752
  call void @writel(i32 %23, i8* %add.ptr30) #13, !dbg !22753
  br label %do.cond, !dbg !22754

do.cond:                                          ; preds = %if.end
  %27 = load i32, i32* %i, align 4, !dbg !22755
  %inc = add i32 %27, 1, !dbg !22755
  store i32 %inc, i32* %i, align 4, !dbg !22755
  %idxprom31 = sext i32 %inc to i64, !dbg !22756
  %arrayidx32 = getelementptr [7 x %struct.register_test], [7 x %struct.register_test]* @nv_registers_test, i64 0, i64 %idxprom31, !dbg !22756
  %reg33 = getelementptr inbounds %struct.register_test, %struct.register_test* %arrayidx32, i32 0, i32 0, !dbg !22757
  %28 = load i32, i32* %reg33, align 8, !dbg !22757
  %cmp34 = icmp ne i32 %28, 0, !dbg !22758
  br i1 %cmp34, label %do.body, label %do.end, !dbg !22754, !llvm.loop !22759

do.end:                                           ; preds = %do.cond
  store i32 1, i32* %retval, align 4, !dbg !22761
  br label %return, !dbg !22761

return:                                           ; preds = %do.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !22762
  ret i32 %29, !dbg !22762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_interrupt_test(%struct.net_device* %dev) #2 !dbg !22763 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !8241, metadata !DIExpression()), !dbg !22764
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8251, metadata !DIExpression()), !dbg !22766
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %ret = alloca i32, align 4
  %testcnt = alloca i32, align 4
  %save_msi_flags = alloca i32, align 4
  %save_poll_interval = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22768, metadata !DIExpression()), !dbg !22769
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !22770, metadata !DIExpression()), !dbg !22771
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22772
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22773
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !22773
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !22771
  call void @llvm.dbg.declare(metadata i8** %base, metadata !22774, metadata !DIExpression()), !dbg !22775
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22776
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !22777
  store i8* %call1, i8** %base, align 8, !dbg !22775
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22778, metadata !DIExpression()), !dbg !22779
  store i32 1, i32* %ret, align 4, !dbg !22779
  call void @llvm.dbg.declare(metadata i32* %testcnt, metadata !22780, metadata !DIExpression()), !dbg !22781
  call void @llvm.dbg.declare(metadata i32* %save_msi_flags, metadata !22782, metadata !DIExpression()), !dbg !22783
  call void @llvm.dbg.declare(metadata i32* %save_poll_interval, metadata !22784, metadata !DIExpression()), !dbg !22785
  store i32 0, i32* %save_poll_interval, align 4, !dbg !22785
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22786
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %3) #13, !dbg !22788
  br i1 %call2, label %if.then, label %if.end, !dbg !22789

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22790
  call void @nv_free_irq(%struct.net_device* %4) #13, !dbg !22792
  %5 = load i8*, i8** %base, align 8, !dbg !22793
  %add.ptr = getelementptr i8, i8* %5, i64 12, !dbg !22794
  %call3 = call i32 @readl(i8* %add.ptr) #13, !dbg !22795
  store i32 %call3, i32* %save_poll_interval, align 4, !dbg !22796
  br label %if.end, !dbg !22797

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22798
  %intr_test = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %6, i32 0, i32 16, !dbg !22799
  store i32 0, i32* %intr_test, align 4, !dbg !22800
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22801
  %msi_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 69, !dbg !22802
  %8 = load i32, i32* %msi_flags, align 4, !dbg !22802
  store i32 %8, i32* %save_msi_flags, align 4, !dbg !22803
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22804
  %msi_flags4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 69, !dbg !22805
  %10 = load i32, i32* %msi_flags4, align 4, !dbg !22806
  %and = and i32 %10, -16, !dbg !22806
  store i32 %and, i32* %msi_flags4, align 4, !dbg !22806
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22807
  %msi_flags5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 69, !dbg !22808
  %12 = load i32, i32* %msi_flags5, align 4, !dbg !22809
  %or = or i32 %12, 1, !dbg !22809
  store i32 %or, i32* %msi_flags5, align 4, !dbg !22809
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22810
  %call6 = call i32 @nv_request_irq(%struct.net_device* %13, i32 1) #13, !dbg !22812
  %tobool = icmp ne i32 %call6, 0, !dbg !22812
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !22813

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !22814
  br label %return, !dbg !22814

if.end8:                                          ; preds = %if.end
  %14 = load i8*, i8** %base, align 8, !dbg !22815
  %add.ptr9 = getelementptr i8, i8* %14, i64 12, !dbg !22816
  call void @writel(i32 13, i8* %add.ptr9) #13, !dbg !22817
  %15 = load i8*, i8** %base, align 8, !dbg !22818
  %add.ptr10 = getelementptr i8, i8* %15, i64 8, !dbg !22819
  call void @writel(i32 3, i8* %add.ptr10) #13, !dbg !22820
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22821
  call void @nv_enable_hw_interrupts(%struct.net_device* %16, i32 32) #13, !dbg !22822
  call void @msleep(i32 100) #13, !dbg !22823
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22824
  %lock = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 0, !dbg !22825
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !22826
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22827, !srcloc !9174
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22828
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !22828
  %rlock.i = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !22828
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22829
  %intr_test11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 16, !dbg !22830
  %21 = load i32, i32* %intr_test11, align 4, !dbg !22830
  store i32 %21, i32* %testcnt, align 4, !dbg !22831
  %22 = load i32, i32* %testcnt, align 4, !dbg !22832
  %tobool12 = icmp ne i32 %22, 0, !dbg !22832
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !22834

if.then13:                                        ; preds = %if.end8
  store i32 2, i32* %ret, align 4, !dbg !22835
  br label %if.end14, !dbg !22836

if.end14:                                         ; preds = %if.then13, %if.end8
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22837
  call void @nv_disable_hw_interrupts(%struct.net_device* %23, i32 32) #13, !dbg !22838
  %24 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22839
  %msi_flags15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %24, i32 0, i32 69, !dbg !22841
  %25 = load i32, i32* %msi_flags15, align 4, !dbg !22841
  %and16 = and i32 %25, 128, !dbg !22842
  %tobool17 = icmp ne i32 %and16, 0, !dbg !22842
  br i1 %tobool17, label %if.else, label %if.then18, !dbg !22843

if.then18:                                        ; preds = %if.end14
  %26 = load i8*, i8** %base, align 8, !dbg !22844
  %add.ptr19 = getelementptr i8, i8* %26, i64 0, !dbg !22845
  call void @writel(i32 33791, i8* %add.ptr19) #13, !dbg !22846
  br label %if.end21, !dbg !22846

if.else:                                          ; preds = %if.end14
  %27 = load i8*, i8** %base, align 8, !dbg !22847
  %add.ptr20 = getelementptr i8, i8* %27, i64 1008, !dbg !22848
  call void @writel(i32 33791, i8* %add.ptr20) #13, !dbg !22849
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  %28 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22850
  %lock22 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %28, i32 0, i32 0, !dbg !22851
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i33, align 8
  call void @arch_local_irq_enable() #15, !dbg !22852
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22853, !srcloc !9188
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !22854
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !22854
  %rlock.i34 = bitcast %union.anon.2* %30 to %struct.raw_spinlock*, !dbg !22854
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22855
  call void @nv_free_irq(%struct.net_device* %31) #13, !dbg !22856
  %32 = load i32, i32* %save_msi_flags, align 4, !dbg !22857
  %33 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22858
  %msi_flags23 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %33, i32 0, i32 69, !dbg !22859
  store i32 %32, i32* %msi_flags23, align 4, !dbg !22860
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22861
  %call24 = call zeroext i1 @netif_running(%struct.net_device* %34) #13, !dbg !22863
  br i1 %call24, label %if.then25, label %if.end32, !dbg !22864

if.then25:                                        ; preds = %if.end21
  %35 = load i32, i32* %save_poll_interval, align 4, !dbg !22865
  %36 = load i8*, i8** %base, align 8, !dbg !22867
  %add.ptr26 = getelementptr i8, i8* %36, i64 12, !dbg !22868
  call void @writel(i32 %35, i8* %add.ptr26) #13, !dbg !22869
  %37 = load i8*, i8** %base, align 8, !dbg !22870
  %add.ptr27 = getelementptr i8, i8* %37, i64 8, !dbg !22871
  call void @writel(i32 3, i8* %add.ptr27) #13, !dbg !22872
  %38 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22873
  %call28 = call i32 @nv_request_irq(%struct.net_device* %38, i32 0) #13, !dbg !22875
  %tobool29 = icmp ne i32 %call28, 0, !dbg !22875
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !22876

if.then30:                                        ; preds = %if.then25
  store i32 0, i32* %retval, align 4, !dbg !22877
  br label %return, !dbg !22877

if.end31:                                         ; preds = %if.then25
  br label %if.end32, !dbg !22878

if.end32:                                         ; preds = %if.end31, %if.end21
  %39 = load i32, i32* %ret, align 4, !dbg !22879
  store i32 %39, i32* %retval, align 4, !dbg !22880
  br label %return, !dbg !22880

return:                                           ; preds = %if.end32, %if.then30, %if.then7
  %40 = load i32, i32* %retval, align 4, !dbg !22881
  ret i32 %40, !dbg !22881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_loopback_test(%struct.net_device* %dev) #2 !dbg !22882 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %tx_skb = alloca %struct.sk_buff*, align 8
  %rx_skb = alloca %struct.sk_buff*, align 8
  %test_dma_addr = alloca i64, align 8
  %tx_flags_extra = alloca i32, align 4
  %flags = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %pkt_len = alloca i32, align 4
  %pkt_data = alloca i8*, align 8
  %filter_flags = alloca i32, align 4
  %misc1_flags = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22883, metadata !DIExpression()), !dbg !22884
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !22885, metadata !DIExpression()), !dbg !22886
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22887
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22888
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !22888
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !22886
  call void @llvm.dbg.declare(metadata i8** %base, metadata !22889, metadata !DIExpression()), !dbg !22890
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22891
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !22892
  store i8* %call1, i8** %base, align 8, !dbg !22890
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %tx_skb, metadata !22893, metadata !DIExpression()), !dbg !22894
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %rx_skb, metadata !22895, metadata !DIExpression()), !dbg !22896
  call void @llvm.dbg.declare(metadata i64* %test_dma_addr, metadata !22897, metadata !DIExpression()), !dbg !22898
  call void @llvm.dbg.declare(metadata i32* %tx_flags_extra, metadata !22899, metadata !DIExpression()), !dbg !22900
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22901
  %desc_ver = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 24, !dbg !22902
  %4 = load i32, i32* %desc_ver, align 8, !dbg !22902
  %cmp = icmp eq i32 %4, 1, !dbg !22903
  %5 = zext i1 %cmp to i64, !dbg !22901
  %cond = select i1 %cmp, i32 65536, i32 536870912, !dbg !22901
  store i32 %cond, i32* %tx_flags_extra, align 4, !dbg !22900
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !22904, metadata !DIExpression()), !dbg !22905
  call void @llvm.dbg.declare(metadata i32* %len, metadata !22906, metadata !DIExpression()), !dbg !22907
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22908, metadata !DIExpression()), !dbg !22909
  call void @llvm.dbg.declare(metadata i32* %pkt_len, metadata !22910, metadata !DIExpression()), !dbg !22911
  call void @llvm.dbg.declare(metadata i8** %pkt_data, metadata !22912, metadata !DIExpression()), !dbg !22913
  call void @llvm.dbg.declare(metadata i32* %filter_flags, metadata !22914, metadata !DIExpression()), !dbg !22915
  store i32 0, i32* %filter_flags, align 4, !dbg !22915
  call void @llvm.dbg.declare(metadata i32* %misc1_flags, metadata !22916, metadata !DIExpression()), !dbg !22917
  store i32 0, i32* %misc1_flags, align 4, !dbg !22917
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22918, metadata !DIExpression()), !dbg !22919
  store i32 1, i32* %ret, align 4, !dbg !22919
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22920
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %6) #13, !dbg !22922
  br i1 %call2, label %if.then, label %if.else, !dbg !22923

if.then:                                          ; preds = %entry
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22924
  call void @nv_disable_irq(%struct.net_device* %7) #13, !dbg !22926
  %8 = load i8*, i8** %base, align 8, !dbg !22927
  %add.ptr = getelementptr i8, i8* %8, i64 140, !dbg !22928
  %call3 = call i32 @readl(i8* %add.ptr) #13, !dbg !22929
  store i32 %call3, i32* %filter_flags, align 4, !dbg !22930
  %9 = load i8*, i8** %base, align 8, !dbg !22931
  %add.ptr4 = getelementptr i8, i8* %9, i64 128, !dbg !22932
  %call5 = call i32 @readl(i8* %add.ptr4) #13, !dbg !22933
  store i32 %call5, i32* %misc1_flags, align 4, !dbg !22934
  br label %if.end, !dbg !22935

if.else:                                          ; preds = %entry
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22936
  call void @nv_txrx_reset(%struct.net_device* %10) #13, !dbg !22938
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22939
  call void @set_bufsize(%struct.net_device* %11) #13, !dbg !22940
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22941
  %call6 = call i32 @nv_init_ring(%struct.net_device* %12) #13, !dbg !22942
  %13 = load i8*, i8** %base, align 8, !dbg !22943
  %add.ptr7 = getelementptr i8, i8* %13, i64 128, !dbg !22944
  call void @writel(i32 3870524, i8* %add.ptr7) #13, !dbg !22945
  %14 = load i8*, i8** %base, align 8, !dbg !22946
  %add.ptr8 = getelementptr i8, i8* %14, i64 140, !dbg !22947
  call void @writel(i32 8323088, i8* %add.ptr8) #13, !dbg !22948
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22949
  %rx_buf_sz = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 42, !dbg !22950
  %16 = load i32, i32* %rx_buf_sz, align 8, !dbg !22950
  %17 = load i8*, i8** %base, align 8, !dbg !22951
  %add.ptr9 = getelementptr i8, i8* %17, i64 144, !dbg !22952
  call void @writel(i32 %16, i8* %add.ptr9) #13, !dbg !22953
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22954
  call void @setup_hw_rings(%struct.net_device* %18, i32 3) #13, !dbg !22955
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22956
  %rx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 48, !dbg !22957
  %20 = load i32, i32* %rx_ring_size, align 4, !dbg !22957
  %sub = sub i32 %20, 1, !dbg !22958
  %shl = shl i32 %sub, 16, !dbg !22959
  %21 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22960
  %tx_ring_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %21, i32 0, i32 62, !dbg !22961
  %22 = load i32, i32* %tx_ring_size, align 4, !dbg !22961
  %sub10 = sub i32 %22, 1, !dbg !22962
  %shl11 = shl i32 %sub10, 0, !dbg !22963
  %add = add i32 %shl, %shl11, !dbg !22964
  %23 = load i8*, i8** %base, align 8, !dbg !22965
  %add.ptr12 = getelementptr i8, i8* %23, i64 264, !dbg !22966
  call void @writel(i32 %add, i8* %add.ptr12) #13, !dbg !22967
  %24 = load i8*, i8** %base, align 8, !dbg !22968
  call void @pci_push(i8* %24) #13, !dbg !22969
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22970
  call void @nv_start_rxtx(%struct.net_device* %25) #13, !dbg !22971
  store i32 1500, i32* %pkt_len, align 4, !dbg !22972
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22973
  %27 = load i32, i32* %pkt_len, align 4, !dbg !22974
  %call13 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %26, i32 %27) #13, !dbg !22975
  store %struct.sk_buff* %call13, %struct.sk_buff** %tx_skb, align 8, !dbg !22976
  %28 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !22977
  %tobool = icmp ne %struct.sk_buff* %28, null, !dbg !22977
  br i1 %tobool, label %if.end15, label %if.then14, !dbg !22979

if.then14:                                        ; preds = %if.end
  store i32 0, i32* %ret, align 4, !dbg !22980
  br label %out, !dbg !22982

if.end15:                                         ; preds = %if.end
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22983
  %pci_dev = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 20, !dbg !22983
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !22983
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !22983
  %31 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !22983
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 37, !dbg !22983
  %32 = load i8*, i8** %data, align 8, !dbg !22983
  %33 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !22983
  %call17 = call i32 @skb_tailroom(%struct.sk_buff* %33) #13, !dbg !22983
  %conv = sext i32 %call17 to i64, !dbg !22983
  %call18 = call i64 @dma_map_single_attrs(%struct.device* %dev16, i8* %32, i64 %conv, i32 2, i64 0) #13, !dbg !22983
  store i64 %call18, i64* %test_dma_addr, align 8, !dbg !22984
  %34 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !22985
  %pci_dev19 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %34, i32 0, i32 20, !dbg !22985
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev19, align 8, !dbg !22985
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 41, !dbg !22985
  %36 = load i64, i64* %test_dma_addr, align 8, !dbg !22985
  %call21 = call i32 @dma_mapping_error(%struct.device* %dev20, i64 %36) #13, !dbg !22985
  %tobool22 = icmp ne i32 %call21, 0, !dbg !22985
  %lnot = xor i1 %tobool22, true, !dbg !22985
  %lnot23 = xor i1 %lnot, true, !dbg !22985
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !22985
  %conv24 = sext i32 %lnot.ext to i64, !dbg !22985
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !22985
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !22987

if.then26:                                        ; preds = %if.end15
  %37 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !22988
  call void @dev_kfree_skb_any(%struct.sk_buff* %37) #13, !dbg !22990
  br label %out, !dbg !22991

if.end27:                                         ; preds = %if.end15
  %38 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !22992
  %39 = load i32, i32* %pkt_len, align 4, !dbg !22993
  %call28 = call i8* @skb_put(%struct.sk_buff* %38, i32 %39) #13, !dbg !22994
  store i8* %call28, i8** %pkt_data, align 8, !dbg !22995
  store i32 0, i32* %i, align 4, !dbg !22996
  br label %for.cond, !dbg !22998

for.cond:                                         ; preds = %for.inc, %if.end27
  %40 = load i32, i32* %i, align 4, !dbg !22999
  %41 = load i32, i32* %pkt_len, align 4, !dbg !23001
  %cmp29 = icmp slt i32 %40, %41, !dbg !23002
  br i1 %cmp29, label %for.body, label %for.end, !dbg !23003

for.body:                                         ; preds = %for.cond
  %42 = load i32, i32* %i, align 4, !dbg !23004
  %and = and i32 %42, 255, !dbg !23005
  %conv31 = trunc i32 %and to i8, !dbg !23006
  %43 = load i8*, i8** %pkt_data, align 8, !dbg !23007
  %44 = load i32, i32* %i, align 4, !dbg !23008
  %idxprom = sext i32 %44 to i64, !dbg !23007
  %arrayidx = getelementptr i8, i8* %43, i64 %idxprom, !dbg !23007
  store i8 %conv31, i8* %arrayidx, align 1, !dbg !23009
  br label %for.inc, !dbg !23007

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %i, align 4, !dbg !23010
  %inc = add i32 %45, 1, !dbg !23010
  store i32 %inc, i32* %i, align 4, !dbg !23010
  br label %for.cond, !dbg !23011, !llvm.loop !23012

for.end:                                          ; preds = %for.cond
  %46 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23014
  %call32 = call zeroext i1 @nv_optimized(%struct.fe_priv* %46) #13, !dbg !23016
  br i1 %call32, label %if.else41, label %if.then33, !dbg !23017

if.then33:                                        ; preds = %for.end
  %47 = load i64, i64* %test_dma_addr, align 8, !dbg !23018
  %conv34 = trunc i64 %47 to i32, !dbg !23018
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23020
  %tx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 60, !dbg !23021
  %orig = bitcast %union.ring_type* %tx_ring to %struct.ring_desc**, !dbg !23022
  %49 = load %struct.ring_desc*, %struct.ring_desc** %orig, align 8, !dbg !23022
  %arrayidx35 = getelementptr %struct.ring_desc, %struct.ring_desc* %49, i64 0, !dbg !23020
  %buf = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx35, i32 0, i32 0, !dbg !23023
  store i32 %conv34, i32* %buf, align 4, !dbg !23024
  %50 = load i32, i32* %pkt_len, align 4, !dbg !23025
  %sub36 = sub i32 %50, 1, !dbg !23025
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23025
  %tx_flags = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 61, !dbg !23025
  %52 = load i32, i32* %tx_flags, align 8, !dbg !23025
  %or = or i32 %sub36, %52, !dbg !23025
  %53 = load i32, i32* %tx_flags_extra, align 4, !dbg !23025
  %or37 = or i32 %or, %53, !dbg !23025
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23026
  %tx_ring38 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 60, !dbg !23027
  %orig39 = bitcast %union.ring_type* %tx_ring38 to %struct.ring_desc**, !dbg !23028
  %55 = load %struct.ring_desc*, %struct.ring_desc** %orig39, align 8, !dbg !23028
  %arrayidx40 = getelementptr %struct.ring_desc, %struct.ring_desc* %55, i64 0, !dbg !23026
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx40, i32 0, i32 1, !dbg !23029
  store i32 %or37, i32* %flaglen, align 4, !dbg !23030
  br label %if.end57, !dbg !23031

if.else41:                                        ; preds = %for.end
  %56 = load i64, i64* %test_dma_addr, align 8, !dbg !23032
  %call42 = call i32 @dma_high(i64 %56) #13, !dbg !23032
  %57 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23034
  %tx_ring43 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %57, i32 0, i32 60, !dbg !23035
  %ex = bitcast %union.ring_type* %tx_ring43 to %struct.ring_desc_ex**, !dbg !23036
  %58 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex, align 8, !dbg !23036
  %arrayidx44 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %58, i64 0, !dbg !23034
  %bufhigh = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx44, i32 0, i32 0, !dbg !23037
  store i32 %call42, i32* %bufhigh, align 4, !dbg !23038
  %59 = load i64, i64* %test_dma_addr, align 8, !dbg !23039
  %call45 = call i32 @dma_low(i64 %59) #13, !dbg !23039
  %60 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23040
  %tx_ring46 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %60, i32 0, i32 60, !dbg !23041
  %ex47 = bitcast %union.ring_type* %tx_ring46 to %struct.ring_desc_ex**, !dbg !23042
  %61 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex47, align 8, !dbg !23042
  %arrayidx48 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %61, i64 0, !dbg !23040
  %buflow = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx48, i32 0, i32 1, !dbg !23043
  store i32 %call45, i32* %buflow, align 4, !dbg !23044
  %62 = load i32, i32* %pkt_len, align 4, !dbg !23045
  %sub49 = sub i32 %62, 1, !dbg !23045
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23045
  %tx_flags50 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 61, !dbg !23045
  %64 = load i32, i32* %tx_flags50, align 8, !dbg !23045
  %or51 = or i32 %sub49, %64, !dbg !23045
  %65 = load i32, i32* %tx_flags_extra, align 4, !dbg !23045
  %or52 = or i32 %or51, %65, !dbg !23045
  %66 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23046
  %tx_ring53 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %66, i32 0, i32 60, !dbg !23047
  %ex54 = bitcast %union.ring_type* %tx_ring53 to %struct.ring_desc_ex**, !dbg !23048
  %67 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex54, align 8, !dbg !23048
  %arrayidx55 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %67, i64 0, !dbg !23046
  %flaglen56 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx55, i32 0, i32 3, !dbg !23049
  store i32 %or52, i32* %flaglen56, align 4, !dbg !23050
  br label %if.end57

if.end57:                                         ; preds = %if.else41, %if.then33
  %68 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23051
  %txrxctl_bits = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %68, i32 0, i32 25, !dbg !23052
  %69 = load i32, i32* %txrxctl_bits, align 4, !dbg !23052
  %or58 = or i32 1, %69, !dbg !23053
  %70 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23054
  %call59 = call i8* @get_hwbase(%struct.net_device* %70) #13, !dbg !23055
  %add.ptr60 = getelementptr i8, i8* %call59, i64 324, !dbg !23056
  call void @writel(i32 %or58, i8* %add.ptr60) #13, !dbg !23057
  %71 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23058
  %call61 = call i8* @get_hwbase(%struct.net_device* %71) #13, !dbg !23059
  call void @pci_push(i8* %call61) #13, !dbg !23060
  call void @msleep(i32 500) #13, !dbg !23061
  %72 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23062
  %call62 = call zeroext i1 @nv_optimized(%struct.fe_priv* %72) #13, !dbg !23064
  br i1 %call62, label %if.else72, label %if.then63, !dbg !23065

if.then63:                                        ; preds = %if.end57
  %73 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23066
  %rx_ring = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %73, i32 0, i32 41, !dbg !23066
  %orig64 = bitcast %union.ring_type* %rx_ring to %struct.ring_desc**, !dbg !23066
  %74 = load %struct.ring_desc*, %struct.ring_desc** %orig64, align 8, !dbg !23066
  %arrayidx65 = getelementptr %struct.ring_desc, %struct.ring_desc* %74, i64 0, !dbg !23066
  %flaglen66 = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %arrayidx65, i32 0, i32 1, !dbg !23066
  %75 = load i32, i32* %flaglen66, align 4, !dbg !23066
  store i32 %75, i32* %flags, align 4, !dbg !23068
  %76 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23069
  %rx_ring67 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %76, i32 0, i32 41, !dbg !23070
  %orig68 = bitcast %union.ring_type* %rx_ring67 to %struct.ring_desc**, !dbg !23071
  %77 = load %struct.ring_desc*, %struct.ring_desc** %orig68, align 8, !dbg !23071
  %arrayidx69 = getelementptr %struct.ring_desc, %struct.ring_desc* %77, i64 0, !dbg !23069
  %78 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23072
  %desc_ver70 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %78, i32 0, i32 24, !dbg !23073
  %79 = load i32, i32* %desc_ver70, align 8, !dbg !23073
  %call71 = call i32 @nv_descr_getlength(%struct.ring_desc* %arrayidx69, i32 %79) #13, !dbg !23074
  store i32 %call71, i32* %len, align 4, !dbg !23075
  br label %if.end82, !dbg !23076

if.else72:                                        ; preds = %if.end57
  %80 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23077
  %rx_ring73 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %80, i32 0, i32 41, !dbg !23077
  %ex74 = bitcast %union.ring_type* %rx_ring73 to %struct.ring_desc_ex**, !dbg !23077
  %81 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex74, align 8, !dbg !23077
  %arrayidx75 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %81, i64 0, !dbg !23077
  %flaglen76 = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %arrayidx75, i32 0, i32 3, !dbg !23077
  %82 = load i32, i32* %flaglen76, align 4, !dbg !23077
  store i32 %82, i32* %flags, align 4, !dbg !23079
  %83 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23080
  %rx_ring77 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %83, i32 0, i32 41, !dbg !23081
  %ex78 = bitcast %union.ring_type* %rx_ring77 to %struct.ring_desc_ex**, !dbg !23082
  %84 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %ex78, align 8, !dbg !23082
  %arrayidx79 = getelementptr %struct.ring_desc_ex, %struct.ring_desc_ex* %84, i64 0, !dbg !23080
  %85 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23083
  %desc_ver80 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %85, i32 0, i32 24, !dbg !23084
  %86 = load i32, i32* %desc_ver80, align 8, !dbg !23084
  %call81 = call i32 @nv_descr_getlength_ex(%struct.ring_desc_ex* %arrayidx79, i32 %86) #13, !dbg !23085
  store i32 %call81, i32* %len, align 4, !dbg !23086
  br label %if.end82

if.end82:                                         ; preds = %if.else72, %if.then63
  %87 = load i32, i32* %flags, align 4, !dbg !23087
  %and83 = and i32 %87, -2147483648, !dbg !23089
  %tobool84 = icmp ne i32 %and83, 0, !dbg !23089
  br i1 %tobool84, label %if.then85, label %if.else86, !dbg !23090

if.then85:                                        ; preds = %if.end82
  store i32 0, i32* %ret, align 4, !dbg !23091
  br label %if.end101, !dbg !23093

if.else86:                                        ; preds = %if.end82
  %88 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23094
  %desc_ver87 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %88, i32 0, i32 24, !dbg !23096
  %89 = load i32, i32* %desc_ver87, align 8, !dbg !23096
  %cmp88 = icmp eq i32 %89, 1, !dbg !23097
  br i1 %cmp88, label %if.then90, label %if.else95, !dbg !23098

if.then90:                                        ; preds = %if.else86
  %90 = load i32, i32* %flags, align 4, !dbg !23099
  %and91 = and i32 %90, 1073741824, !dbg !23102
  %tobool92 = icmp ne i32 %and91, 0, !dbg !23102
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !23103

if.then93:                                        ; preds = %if.then90
  store i32 0, i32* %ret, align 4, !dbg !23104
  br label %if.end94, !dbg !23105

if.end94:                                         ; preds = %if.then93, %if.then90
  br label %if.end100, !dbg !23106

if.else95:                                        ; preds = %if.else86
  %91 = load i32, i32* %flags, align 4, !dbg !23107
  %and96 = and i32 %91, 1073741824, !dbg !23110
  %tobool97 = icmp ne i32 %and96, 0, !dbg !23110
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !23111

if.then98:                                        ; preds = %if.else95
  store i32 0, i32* %ret, align 4, !dbg !23112
  br label %if.end99, !dbg !23113

if.end99:                                         ; preds = %if.then98, %if.else95
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end94
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then85
  %92 = load i32, i32* %ret, align 4, !dbg !23114
  %tobool102 = icmp ne i32 %92, 0, !dbg !23114
  br i1 %tobool102, label %if.then103, label %if.end129, !dbg !23116

if.then103:                                       ; preds = %if.end101
  %93 = load i32, i32* %len, align 4, !dbg !23117
  %94 = load i32, i32* %pkt_len, align 4, !dbg !23120
  %cmp104 = icmp ne i32 %93, %94, !dbg !23121
  br i1 %cmp104, label %if.then106, label %if.else107, !dbg !23122

if.then106:                                       ; preds = %if.then103
  store i32 0, i32* %ret, align 4, !dbg !23123
  br label %if.end128, !dbg !23125

if.else107:                                       ; preds = %if.then103
  %95 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23126
  %rx_skb108 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %95, i32 0, i32 40, !dbg !23128
  %96 = load %struct.nv_skb_map*, %struct.nv_skb_map** %rx_skb108, align 8, !dbg !23128
  %arrayidx109 = getelementptr %struct.nv_skb_map, %struct.nv_skb_map* %96, i64 0, !dbg !23126
  %skb = getelementptr inbounds %struct.nv_skb_map, %struct.nv_skb_map* %arrayidx109, i32 0, i32 0, !dbg !23129
  %97 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23129
  store %struct.sk_buff* %97, %struct.sk_buff** %rx_skb, align 8, !dbg !23130
  store i32 0, i32* %i, align 4, !dbg !23131
  br label %for.cond110, !dbg !23133

for.cond110:                                      ; preds = %for.inc125, %if.else107
  %98 = load i32, i32* %i, align 4, !dbg !23134
  %99 = load i32, i32* %pkt_len, align 4, !dbg !23136
  %cmp111 = icmp slt i32 %98, %99, !dbg !23137
  br i1 %cmp111, label %for.body113, label %for.end127, !dbg !23138

for.body113:                                      ; preds = %for.cond110
  %100 = load %struct.sk_buff*, %struct.sk_buff** %rx_skb, align 8, !dbg !23139
  %data114 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %100, i32 0, i32 37, !dbg !23142
  %101 = load i8*, i8** %data114, align 8, !dbg !23142
  %102 = load i32, i32* %i, align 4, !dbg !23143
  %idxprom115 = sext i32 %102 to i64, !dbg !23139
  %arrayidx116 = getelementptr i8, i8* %101, i64 %idxprom115, !dbg !23139
  %103 = load i8, i8* %arrayidx116, align 1, !dbg !23139
  %conv117 = zext i8 %103 to i32, !dbg !23139
  %104 = load i32, i32* %i, align 4, !dbg !23144
  %and118 = and i32 %104, 255, !dbg !23145
  %conv119 = trunc i32 %and118 to i8, !dbg !23146
  %conv120 = zext i8 %conv119 to i32, !dbg !23146
  %cmp121 = icmp ne i32 %conv117, %conv120, !dbg !23147
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !23148

if.then123:                                       ; preds = %for.body113
  store i32 0, i32* %ret, align 4, !dbg !23149
  br label %for.end127, !dbg !23151

if.end124:                                        ; preds = %for.body113
  br label %for.inc125, !dbg !23152

for.inc125:                                       ; preds = %if.end124
  %105 = load i32, i32* %i, align 4, !dbg !23153
  %inc126 = add i32 %105, 1, !dbg !23153
  store i32 %inc126, i32* %i, align 4, !dbg !23153
  br label %for.cond110, !dbg !23154, !llvm.loop !23155

for.end127:                                       ; preds = %if.then123, %for.cond110
  br label %if.end128

if.end128:                                        ; preds = %for.end127, %if.then106
  br label %if.end129, !dbg !23157

if.end129:                                        ; preds = %if.end128, %if.end101
  %106 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23158
  %pci_dev130 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %106, i32 0, i32 20, !dbg !23158
  %107 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev130, align 8, !dbg !23158
  %dev131 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %107, i32 0, i32 41, !dbg !23158
  %108 = load i64, i64* %test_dma_addr, align 8, !dbg !23158
  %109 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !23158
  %call132 = call i8* @skb_end_pointer(%struct.sk_buff* %109) #13, !dbg !23158
  %110 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !23158
  %data133 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %110, i32 0, i32 37, !dbg !23158
  %111 = load i8*, i8** %data133, align 8, !dbg !23158
  %sub.ptr.lhs.cast = ptrtoint i8* %call132 to i64, !dbg !23158
  %sub.ptr.rhs.cast = ptrtoint i8* %111 to i64, !dbg !23158
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !23158
  call void @dma_unmap_single_attrs(%struct.device* %dev131, i64 %108, i64 %sub.ptr.sub, i32 1, i64 0) #13, !dbg !23158
  %112 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !23159
  call void @dev_kfree_skb_any(%struct.sk_buff* %112) #13, !dbg !23160
  br label %out, !dbg !23160

out:                                              ; preds = %if.end129, %if.then26, %if.then14
  call void @llvm.dbg.label(metadata !23161), !dbg !23162
  %113 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23163
  call void @nv_stop_rxtx(%struct.net_device* %113) #13, !dbg !23164
  %114 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23165
  call void @nv_txrx_reset(%struct.net_device* %114) #13, !dbg !23166
  %115 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23167
  call void @nv_drain_rxtx(%struct.net_device* %115) #13, !dbg !23168
  %116 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23169
  %call134 = call zeroext i1 @netif_running(%struct.net_device* %116) #13, !dbg !23171
  br i1 %call134, label %if.then135, label %if.end138, !dbg !23172

if.then135:                                       ; preds = %out
  %117 = load i32, i32* %misc1_flags, align 4, !dbg !23173
  %118 = load i8*, i8** %base, align 8, !dbg !23175
  %add.ptr136 = getelementptr i8, i8* %118, i64 128, !dbg !23176
  call void @writel(i32 %117, i8* %add.ptr136) #13, !dbg !23177
  %119 = load i32, i32* %filter_flags, align 4, !dbg !23178
  %120 = load i8*, i8** %base, align 8, !dbg !23179
  %add.ptr137 = getelementptr i8, i8* %120, i64 140, !dbg !23180
  call void @writel(i32 %119, i8* %add.ptr137) #13, !dbg !23181
  %121 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23182
  call void @nv_enable_irq(%struct.net_device* %121) #13, !dbg !23183
  br label %if.end138, !dbg !23184

if.end138:                                        ; preds = %if.then135, %out
  %122 = load i32, i32* %ret, align 4, !dbg !23185
  ret i32 %122, !dbg !23186
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_descr_getlength(%struct.ring_desc* %prd, i32 %v) #2 !dbg !23187 {
entry:
  %prd.addr = alloca %struct.ring_desc*, align 8
  %v.addr = alloca i32, align 4
  store %struct.ring_desc* %prd, %struct.ring_desc** %prd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ring_desc** %prd.addr, metadata !23190, metadata !DIExpression()), !dbg !23191
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !23192, metadata !DIExpression()), !dbg !23193
  %0 = load %struct.ring_desc*, %struct.ring_desc** %prd.addr, align 8, !dbg !23194
  %flaglen = getelementptr inbounds %struct.ring_desc, %struct.ring_desc* %0, i32 0, i32 1, !dbg !23194
  %1 = load i32, i32* %flaglen, align 4, !dbg !23194
  %2 = load i32, i32* %v.addr, align 4, !dbg !23195
  %cmp = icmp eq i32 %2, 1, !dbg !23196
  %3 = zext i1 %cmp to i64, !dbg !23197
  %cond = select i1 %cmp, i32 65535, i32 16383, !dbg !23197
  %and = and i32 %1, %cond, !dbg !23198
  ret i32 %and, !dbg !23199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_descr_getlength_ex(%struct.ring_desc_ex* %prd, i32 %v) #2 !dbg !23200 {
entry:
  %prd.addr = alloca %struct.ring_desc_ex*, align 8
  %v.addr = alloca i32, align 4
  store %struct.ring_desc_ex* %prd, %struct.ring_desc_ex** %prd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ring_desc_ex** %prd.addr, metadata !23203, metadata !DIExpression()), !dbg !23204
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !23205, metadata !DIExpression()), !dbg !23206
  %0 = load %struct.ring_desc_ex*, %struct.ring_desc_ex** %prd.addr, align 8, !dbg !23207
  %flaglen = getelementptr inbounds %struct.ring_desc_ex, %struct.ring_desc_ex* %0, i32 0, i32 3, !dbg !23207
  %1 = load i32, i32* %flaglen, align 4, !dbg !23207
  %and = and i32 %1, 16383, !dbg !23208
  ret i32 %and, !dbg !23209
}

; Function Attrs: noredzone
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(i64*, i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32*, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !23210 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23213, metadata !DIExpression()), !dbg !23214
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !23215, metadata !DIExpression()), !dbg !23216
  %0 = load i8*, i8** %data.addr, align 8, !dbg !23217
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23218
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !23219
  store i8* %0, i8** %driver_data, align 8, !dbg !23220
  ret void, !dbg !23221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #2 !dbg !23222 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !23223, metadata !DIExpression()), !dbg !23224
  call void @llvm.dbg.declare(metadata i32* %a, metadata !23225, metadata !DIExpression()), !dbg !23226
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !23227
  %1 = bitcast i8* %0 to i32*, !dbg !23228
  %2 = load i32, i32* %1, align 4, !dbg !23228
  store i32 %2, i32* %a, align 4, !dbg !23226
  %3 = load i32, i32* %a, align 4, !dbg !23229
  %and = and i32 1, %3, !dbg !23230
  %tobool = icmp ne i32 %and, 0, !dbg !23231
  ret i1 %tobool, !dbg !23232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #2 !dbg !23233 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !23234, metadata !DIExpression()), !dbg !23235
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !23236
  %1 = bitcast i8* %0 to i32*, !dbg !23237
  %2 = load i32, i32* %1, align 4, !dbg !23237
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !23238
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !23239
  %4 = bitcast i8* %add.ptr to i16*, !dbg !23240
  %5 = load i16, i16* %4, align 2, !dbg !23240
  %conv = zext i16 %5 to i32, !dbg !23241
  %or = or i32 %2, %conv, !dbg !23242
  %cmp = icmp eq i32 %or, 0, !dbg !23243
  ret i1 %cmp, !dbg !23244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_random_addr(i8* %addr) #2 !dbg !23245 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !23246, metadata !DIExpression()), !dbg !23247
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !23248
  call void @get_random_bytes(i8* %0, i32 6) #13, !dbg !23249
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !23250
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !23250
  %2 = load i8, i8* %arrayidx, align 1, !dbg !23251
  %conv = zext i8 %2 to i32, !dbg !23251
  %and = and i32 %conv, 254, !dbg !23251
  %conv1 = trunc i32 %and to i8, !dbg !23251
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !23251
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !23252
  %arrayidx2 = getelementptr i8, i8* %3, i64 0, !dbg !23252
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !23253
  %conv3 = zext i8 %4 to i32, !dbg !23253
  %or = or i32 %conv3, 2, !dbg !23253
  %conv4 = trunc i32 %or to i8, !dbg !23253
  store i8 %conv4, i8* %arrayidx2, align 1, !dbg !23253
  ret void, !dbg !23254
}

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout_uninterruptible(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #2 !dbg !23255 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !23256, metadata !DIExpression()), !dbg !23258
  %0 = load i64, i64* %__edi, align 8, !dbg !23258
  store i64 %0, i64* %__edi, align 8, !dbg !23258
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !23259, metadata !DIExpression()), !dbg !23258
  %1 = load i64, i64* %__esi, align 8, !dbg !23258
  store i64 %1, i64* %__esi, align 8, !dbg !23258
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !23260, metadata !DIExpression()), !dbg !23258
  %2 = load i64, i64* %__edx, align 8, !dbg !23258
  store i64 %2, i64* %__edx, align 8, !dbg !23258
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !23261, metadata !DIExpression()), !dbg !23258
  %3 = load i64, i64* %__ecx, align 8, !dbg !23258
  store i64 %3, i64* %__ecx, align 8, !dbg !23258
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !23262, metadata !DIExpression()), !dbg !23258
  %4 = load i64, i64* %__eax, align 8, !dbg !23258
  store i64 %4, i64* %__eax, align 8, !dbg !23258
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !23258
  %6 = call i64 @llvm.read_register.i64(metadata !8229), !dbg !23258
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !23258, !srcloc !23263
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !23258
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !23258
  store i64 %asmresult, i64* %__eax, align 8, !dbg !23258
  call void @llvm.write_register.i64(metadata !8229, i64 %asmresult1), !dbg !23258
  ret void, !dbg !23264
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_realtek_8211b(%struct.net_device* %dev, %struct.fe_priv* %np) #2 !dbg !8215 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np.addr = alloca %struct.fe_priv*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23265, metadata !DIExpression()), !dbg !23266
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !23267, metadata !DIExpression()), !dbg !23268
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23269, metadata !DIExpression()), !dbg !23270
  store i32 0, i32* %i, align 4, !dbg !23271
  br label %for.cond, !dbg !23273

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !23274
  %conv = sext i32 %0 to i64, !dbg !23274
  %cmp = icmp ult i64 %conv, 7, !dbg !23276
  br i1 %cmp, label %for.body, label %for.end, !dbg !23277

for.body:                                         ; preds = %for.cond
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23278
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23281
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 10, !dbg !23282
  %3 = load i32, i32* %phyaddr, align 4, !dbg !23282
  %4 = load i32, i32* %i, align 4, !dbg !23283
  %idxprom = sext i32 %4 to i64, !dbg !23284
  %arrayidx = getelementptr [7 x %struct.anon.131], [7 x %struct.anon.131]* @init_realtek_8211b.ri, i64 0, i64 %idxprom, !dbg !23284
  %reg = getelementptr inbounds %struct.anon.131, %struct.anon.131* %arrayidx, i32 0, i32 0, !dbg !23285
  %5 = load i32, i32* %reg, align 8, !dbg !23285
  %6 = load i32, i32* %i, align 4, !dbg !23286
  %idxprom2 = sext i32 %6 to i64, !dbg !23287
  %arrayidx3 = getelementptr [7 x %struct.anon.131], [7 x %struct.anon.131]* @init_realtek_8211b.ri, i64 0, i64 %idxprom2, !dbg !23287
  %init = getelementptr inbounds %struct.anon.131, %struct.anon.131* %arrayidx3, i32 0, i32 1, !dbg !23288
  %7 = load i32, i32* %init, align 4, !dbg !23288
  %call = call i32 @mii_rw(%struct.net_device* %1, i32 %3, i32 %5, i32 %7) #13, !dbg !23289
  %tobool = icmp ne i32 %call, 0, !dbg !23289
  br i1 %tobool, label %if.then, label %if.end, !dbg !23290

if.then:                                          ; preds = %for.body
  store i32 2, i32* %retval, align 4, !dbg !23291
  br label %return, !dbg !23291

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !23292

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !23293
  %inc = add i32 %8, 1, !dbg !23293
  store i32 %inc, i32* %i, align 4, !dbg !23293
  br label %for.cond, !dbg !23294, !llvm.loop !23295

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !23297
  br label %return, !dbg !23297

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !23298
  ret i32 %9, !dbg !23298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_realtek_8211c(%struct.net_device* %dev, %struct.fe_priv* %np) #2 !dbg !23299 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np.addr = alloca %struct.fe_priv*, align 8
  %reg = alloca i32, align 4
  %base = alloca i8*, align 8
  %powerstate = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23300, metadata !DIExpression()), !dbg !23301
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !23302, metadata !DIExpression()), !dbg !23303
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !23304, metadata !DIExpression()), !dbg !23305
  call void @llvm.dbg.declare(metadata i8** %base, metadata !23306, metadata !DIExpression()), !dbg !23307
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23308
  %call = call i8* @get_hwbase(%struct.net_device* %0) #13, !dbg !23309
  store i8* %call, i8** %base, align 8, !dbg !23307
  call void @llvm.dbg.declare(metadata i32* %powerstate, metadata !23310, metadata !DIExpression()), !dbg !23311
  %1 = load i8*, i8** %base, align 8, !dbg !23312
  %add.ptr = getelementptr i8, i8* %1, i64 1536, !dbg !23313
  %call1 = call i32 @readl(i8* %add.ptr) #13, !dbg !23314
  store i32 %call1, i32* %powerstate, align 4, !dbg !23311
  %2 = load i32, i32* %powerstate, align 4, !dbg !23315
  %or = or i32 %2, 4, !dbg !23315
  store i32 %or, i32* %powerstate, align 4, !dbg !23315
  %3 = load i32, i32* %powerstate, align 4, !dbg !23316
  %4 = load i8*, i8** %base, align 8, !dbg !23317
  %add.ptr2 = getelementptr i8, i8* %4, i64 1536, !dbg !23318
  call void @writel(i32 %3, i8* %add.ptr2) #13, !dbg !23319
  call void @msleep(i32 25) #13, !dbg !23320
  %5 = load i32, i32* %powerstate, align 4, !dbg !23321
  %and = and i32 %5, -5, !dbg !23321
  store i32 %and, i32* %powerstate, align 4, !dbg !23321
  %6 = load i32, i32* %powerstate, align 4, !dbg !23322
  %7 = load i8*, i8** %base, align 8, !dbg !23323
  %add.ptr3 = getelementptr i8, i8* %7, i64 1536, !dbg !23324
  call void @writel(i32 %6, i8* %add.ptr3) #13, !dbg !23325
  call void @msleep(i32 25) #13, !dbg !23326
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23327
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23328
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 10, !dbg !23329
  %10 = load i32, i32* %phyaddr, align 4, !dbg !23329
  %call4 = call i32 @mii_rw(%struct.net_device* %8, i32 %10, i32 17, i32 -1) #13, !dbg !23330
  store i32 %call4, i32* %reg, align 4, !dbg !23331
  %11 = load i32, i32* %reg, align 4, !dbg !23332
  %or5 = or i32 %11, 8, !dbg !23332
  store i32 %or5, i32* %reg, align 4, !dbg !23332
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23333
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23335
  %phyaddr6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 10, !dbg !23336
  %14 = load i32, i32* %phyaddr6, align 4, !dbg !23336
  %15 = load i32, i32* %reg, align 4, !dbg !23337
  %call7 = call i32 @mii_rw(%struct.net_device* %12, i32 %14, i32 17, i32 %15) #13, !dbg !23338
  %tobool = icmp ne i32 %call7, 0, !dbg !23338
  br i1 %tobool, label %if.then, label %if.end, !dbg !23339

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !23340
  br label %return, !dbg !23340

if.end:                                           ; preds = %entry
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23341
  %17 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23343
  %phyaddr8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %17, i32 0, i32 10, !dbg !23344
  %18 = load i32, i32* %phyaddr8, align 4, !dbg !23344
  %call9 = call i32 @mii_rw(%struct.net_device* %16, i32 %18, i32 31, i32 5) #13, !dbg !23345
  %tobool10 = icmp ne i32 %call9, 0, !dbg !23345
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !23346

if.then11:                                        ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !23347
  br label %return, !dbg !23347

if.end12:                                         ; preds = %if.end
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23348
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23349
  %phyaddr13 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 10, !dbg !23350
  %21 = load i32, i32* %phyaddr13, align 4, !dbg !23350
  %call14 = call i32 @mii_rw(%struct.net_device* %19, i32 %21, i32 1, i32 -1) #13, !dbg !23351
  store i32 %call14, i32* %reg, align 4, !dbg !23352
  %22 = load i32, i32* %reg, align 4, !dbg !23353
  %and15 = and i32 %22, 512, !dbg !23355
  %tobool16 = icmp ne i32 %and15, 0, !dbg !23355
  br i1 %tobool16, label %if.end24, label %if.then17, !dbg !23356

if.then17:                                        ; preds = %if.end12
  %23 = load i32, i32* %reg, align 4, !dbg !23357
  %or18 = or i32 %23, 512, !dbg !23357
  store i32 %or18, i32* %reg, align 4, !dbg !23357
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23359
  %25 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23361
  %phyaddr19 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %25, i32 0, i32 10, !dbg !23362
  %26 = load i32, i32* %phyaddr19, align 4, !dbg !23362
  %27 = load i32, i32* %reg, align 4, !dbg !23363
  %call20 = call i32 @mii_rw(%struct.net_device* %24, i32 %26, i32 1, i32 %27) #13, !dbg !23364
  %tobool21 = icmp ne i32 %call20, 0, !dbg !23364
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !23365

if.then22:                                        ; preds = %if.then17
  store i32 2, i32* %retval, align 4, !dbg !23366
  br label %return, !dbg !23366

if.end23:                                         ; preds = %if.then17
  br label %if.end24, !dbg !23367

if.end24:                                         ; preds = %if.end23, %if.end12
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23368
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23370
  %phyaddr25 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 10, !dbg !23371
  %30 = load i32, i32* %phyaddr25, align 4, !dbg !23371
  %call26 = call i32 @mii_rw(%struct.net_device* %28, i32 %30, i32 31, i32 0) #13, !dbg !23372
  %tobool27 = icmp ne i32 %call26, 0, !dbg !23372
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !23373

if.then28:                                        ; preds = %if.end24
  store i32 2, i32* %retval, align 4, !dbg !23374
  br label %return, !dbg !23374

if.end29:                                         ; preds = %if.end24
  store i32 0, i32* %retval, align 4, !dbg !23375
  br label %return, !dbg !23375

return:                                           ; preds = %if.end29, %if.then28, %if.then22, %if.then11, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !23376
  ret i32 %31, !dbg !23376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_realtek_8201(%struct.net_device* %dev, %struct.fe_priv* %np) #2 !dbg !23377 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np.addr = alloca %struct.fe_priv*, align 8
  %phy_reserved = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23378, metadata !DIExpression()), !dbg !23379
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !23380, metadata !DIExpression()), !dbg !23381
  call void @llvm.dbg.declare(metadata i32* %phy_reserved, metadata !23382, metadata !DIExpression()), !dbg !23383
  %0 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23384
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %0, i32 0, i32 27, !dbg !23386
  %1 = load i32, i32* %driver_data, align 4, !dbg !23386
  %and = and i32 %1, 4194304, !dbg !23387
  %tobool = icmp ne i32 %and, 0, !dbg !23387
  br i1 %tobool, label %if.then, label %if.end5, !dbg !23388

if.then:                                          ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23389
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23391
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 10, !dbg !23392
  %4 = load i32, i32* %phyaddr, align 4, !dbg !23392
  %call = call i32 @mii_rw(%struct.net_device* %2, i32 %4, i32 17, i32 -1) #13, !dbg !23393
  store i32 %call, i32* %phy_reserved, align 4, !dbg !23394
  %5 = load i32, i32* %phy_reserved, align 4, !dbg !23395
  %or = or i32 %5, 4096, !dbg !23395
  store i32 %or, i32* %phy_reserved, align 4, !dbg !23395
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23396
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23398
  %phyaddr1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 10, !dbg !23399
  %8 = load i32, i32* %phyaddr1, align 4, !dbg !23399
  %9 = load i32, i32* %phy_reserved, align 4, !dbg !23400
  %call2 = call i32 @mii_rw(%struct.net_device* %6, i32 %8, i32 17, i32 %9) #13, !dbg !23401
  %tobool3 = icmp ne i32 %call2, 0, !dbg !23401
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !23402

if.then4:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !23403
  br label %return, !dbg !23403

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !23404

if.end5:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !23405
  br label %return, !dbg !23405

return:                                           ; preds = %if.end5, %if.then4
  %10 = load i32, i32* %retval, align 4, !dbg !23406
  ret i32 %10, !dbg !23406
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_cicada(%struct.net_device* %dev, %struct.fe_priv* %np, i32 %phyinterface) #2 !dbg !23407 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np.addr = alloca %struct.fe_priv*, align 8
  %phyinterface.addr = alloca i32, align 4
  %phy_reserved = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23410, metadata !DIExpression()), !dbg !23411
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !23412, metadata !DIExpression()), !dbg !23413
  store i32 %phyinterface, i32* %phyinterface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phyinterface.addr, metadata !23414, metadata !DIExpression()), !dbg !23415
  call void @llvm.dbg.declare(metadata i32* %phy_reserved, metadata !23416, metadata !DIExpression()), !dbg !23417
  %0 = load i32, i32* %phyinterface.addr, align 4, !dbg !23418
  %and = and i32 %0, 268435456, !dbg !23420
  %tobool = icmp ne i32 %and, 0, !dbg !23420
  br i1 %tobool, label %if.then, label %if.end14, !dbg !23421

if.then:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23422
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23424
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 10, !dbg !23425
  %3 = load i32, i32* %phyaddr, align 4, !dbg !23425
  %call = call i32 @mii_rw(%struct.net_device* %1, i32 %3, i32 23, i32 -1) #13, !dbg !23426
  store i32 %call, i32* %phy_reserved, align 4, !dbg !23427
  %4 = load i32, i32* %phy_reserved, align 4, !dbg !23428
  %and1 = and i32 %4, -65025, !dbg !23428
  store i32 %and1, i32* %phy_reserved, align 4, !dbg !23428
  %5 = load i32, i32* %phy_reserved, align 4, !dbg !23429
  %or = or i32 %5, 4608, !dbg !23429
  store i32 %or, i32* %phy_reserved, align 4, !dbg !23429
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23430
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23432
  %phyaddr2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 10, !dbg !23433
  %8 = load i32, i32* %phyaddr2, align 4, !dbg !23433
  %9 = load i32, i32* %phy_reserved, align 4, !dbg !23434
  %call3 = call i32 @mii_rw(%struct.net_device* %6, i32 %8, i32 23, i32 %9) #13, !dbg !23435
  %tobool4 = icmp ne i32 %call3, 0, !dbg !23435
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !23436

if.then5:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !23437
  br label %return, !dbg !23437

if.end:                                           ; preds = %if.then
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23438
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23439
  %phyaddr6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 10, !dbg !23440
  %12 = load i32, i32* %phyaddr6, align 4, !dbg !23440
  %call7 = call i32 @mii_rw(%struct.net_device* %10, i32 %12, i32 28, i32 -1) #13, !dbg !23441
  store i32 %call7, i32* %phy_reserved, align 4, !dbg !23442
  %13 = load i32, i32* %phy_reserved, align 4, !dbg !23443
  %or8 = or i32 %13, 4, !dbg !23443
  store i32 %or8, i32* %phy_reserved, align 4, !dbg !23443
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23444
  %15 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23446
  %phyaddr9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %15, i32 0, i32 10, !dbg !23447
  %16 = load i32, i32* %phyaddr9, align 4, !dbg !23447
  %17 = load i32, i32* %phy_reserved, align 4, !dbg !23448
  %call10 = call i32 @mii_rw(%struct.net_device* %14, i32 %16, i32 28, i32 %17) #13, !dbg !23449
  %tobool11 = icmp ne i32 %call10, 0, !dbg !23449
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !23450

if.then12:                                        ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !23451
  br label %return, !dbg !23451

if.end13:                                         ; preds = %if.end
  br label %if.end14, !dbg !23452

if.end14:                                         ; preds = %if.end13, %entry
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23453
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23454
  %phyaddr15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 10, !dbg !23455
  %20 = load i32, i32* %phyaddr15, align 4, !dbg !23455
  %call16 = call i32 @mii_rw(%struct.net_device* %18, i32 %20, i32 22, i32 -1) #13, !dbg !23456
  store i32 %call16, i32* %phy_reserved, align 4, !dbg !23457
  %21 = load i32, i32* %phy_reserved, align 4, !dbg !23458
  %or17 = or i32 %21, 8192, !dbg !23458
  store i32 %or17, i32* %phy_reserved, align 4, !dbg !23458
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23459
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23461
  %phyaddr18 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 10, !dbg !23462
  %24 = load i32, i32* %phyaddr18, align 4, !dbg !23462
  %25 = load i32, i32* %phy_reserved, align 4, !dbg !23463
  %call19 = call i32 @mii_rw(%struct.net_device* %22, i32 %24, i32 22, i32 %25) #13, !dbg !23464
  %tobool20 = icmp ne i32 %call19, 0, !dbg !23464
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !23465

if.then21:                                        ; preds = %if.end14
  store i32 2, i32* %retval, align 4, !dbg !23466
  br label %return, !dbg !23466

if.end22:                                         ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !23467
  br label %return, !dbg !23467

return:                                           ; preds = %if.end22, %if.then21, %if.then12, %if.then5
  %26 = load i32, i32* %retval, align 4, !dbg !23468
  ret i32 %26, !dbg !23468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_vitesse(%struct.net_device* %dev, %struct.fe_priv* %np) #2 !dbg !23469 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np.addr = alloca %struct.fe_priv*, align 8
  %phy_reserved = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23470, metadata !DIExpression()), !dbg !23471
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !23472, metadata !DIExpression()), !dbg !23473
  call void @llvm.dbg.declare(metadata i32* %phy_reserved, metadata !23474, metadata !DIExpression()), !dbg !23475
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23476
  %1 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23478
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %1, i32 0, i32 10, !dbg !23479
  %2 = load i32, i32* %phyaddr, align 4, !dbg !23479
  %call = call i32 @mii_rw(%struct.net_device* %0, i32 %2, i32 31, i32 21173) #13, !dbg !23480
  %tobool = icmp ne i32 %call, 0, !dbg !23480
  br i1 %tobool, label %if.then, label %if.end, !dbg !23481

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !23482
  br label %return, !dbg !23482

if.end:                                           ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23483
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23485
  %phyaddr1 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 10, !dbg !23486
  %5 = load i32, i32* %phyaddr1, align 4, !dbg !23486
  %call2 = call i32 @mii_rw(%struct.net_device* %3, i32 %5, i32 16, i32 44938) #13, !dbg !23487
  %tobool3 = icmp ne i32 %call2, 0, !dbg !23487
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !23488

if.then4:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !23489
  br label %return, !dbg !23489

if.end5:                                          ; preds = %if.end
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23490
  %7 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23491
  %phyaddr6 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %7, i32 0, i32 10, !dbg !23492
  %8 = load i32, i32* %phyaddr6, align 4, !dbg !23492
  %call7 = call i32 @mii_rw(%struct.net_device* %6, i32 %8, i32 18, i32 -1) #13, !dbg !23493
  store i32 %call7, i32* %phy_reserved, align 4, !dbg !23494
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23495
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23497
  %phyaddr8 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 10, !dbg !23498
  %11 = load i32, i32* %phyaddr8, align 4, !dbg !23498
  %12 = load i32, i32* %phy_reserved, align 4, !dbg !23499
  %call9 = call i32 @mii_rw(%struct.net_device* %9, i32 %11, i32 18, i32 %12) #13, !dbg !23500
  %tobool10 = icmp ne i32 %call9, 0, !dbg !23500
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !23501

if.then11:                                        ; preds = %if.end5
  store i32 2, i32* %retval, align 4, !dbg !23502
  br label %return, !dbg !23502

if.end12:                                         ; preds = %if.end5
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23503
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23504
  %phyaddr13 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 10, !dbg !23505
  %15 = load i32, i32* %phyaddr13, align 4, !dbg !23505
  %call14 = call i32 @mii_rw(%struct.net_device* %13, i32 %15, i32 17, i32 -1) #13, !dbg !23506
  store i32 %call14, i32* %phy_reserved, align 4, !dbg !23507
  %16 = load i32, i32* %phy_reserved, align 4, !dbg !23508
  %and = and i32 %16, -13, !dbg !23508
  store i32 %and, i32* %phy_reserved, align 4, !dbg !23508
  %17 = load i32, i32* %phy_reserved, align 4, !dbg !23509
  %or = or i32 %17, 8, !dbg !23509
  store i32 %or, i32* %phy_reserved, align 4, !dbg !23509
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23510
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23512
  %phyaddr15 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 10, !dbg !23513
  %20 = load i32, i32* %phyaddr15, align 4, !dbg !23513
  %21 = load i32, i32* %phy_reserved, align 4, !dbg !23514
  %call16 = call i32 @mii_rw(%struct.net_device* %18, i32 %20, i32 17, i32 %21) #13, !dbg !23515
  %tobool17 = icmp ne i32 %call16, 0, !dbg !23515
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !23516

if.then18:                                        ; preds = %if.end12
  store i32 2, i32* %retval, align 4, !dbg !23517
  br label %return, !dbg !23517

if.end19:                                         ; preds = %if.end12
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23518
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23520
  %phyaddr20 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 10, !dbg !23521
  %24 = load i32, i32* %phyaddr20, align 4, !dbg !23521
  %call21 = call i32 @mii_rw(%struct.net_device* %22, i32 %24, i32 16, i32 36746) #13, !dbg !23522
  %tobool22 = icmp ne i32 %call21, 0, !dbg !23522
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !23523

if.then23:                                        ; preds = %if.end19
  store i32 2, i32* %retval, align 4, !dbg !23524
  br label %return, !dbg !23524

if.end24:                                         ; preds = %if.end19
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23525
  %26 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23527
  %phyaddr25 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %26, i32 0, i32 10, !dbg !23528
  %27 = load i32, i32* %phyaddr25, align 4, !dbg !23528
  %call26 = call i32 @mii_rw(%struct.net_device* %25, i32 %27, i32 16, i32 44934) #13, !dbg !23529
  %tobool27 = icmp ne i32 %call26, 0, !dbg !23529
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !23530

if.then28:                                        ; preds = %if.end24
  store i32 2, i32* %retval, align 4, !dbg !23531
  br label %return, !dbg !23531

if.end29:                                         ; preds = %if.end24
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23532
  %29 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23533
  %phyaddr30 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %29, i32 0, i32 10, !dbg !23534
  %30 = load i32, i32* %phyaddr30, align 4, !dbg !23534
  %call31 = call i32 @mii_rw(%struct.net_device* %28, i32 %30, i32 18, i32 -1) #13, !dbg !23535
  store i32 %call31, i32* %phy_reserved, align 4, !dbg !23536
  %31 = load i32, i32* %phy_reserved, align 4, !dbg !23537
  %and32 = and i32 %31, -13, !dbg !23537
  store i32 %and32, i32* %phy_reserved, align 4, !dbg !23537
  %32 = load i32, i32* %phy_reserved, align 4, !dbg !23538
  %or33 = or i32 %32, 8, !dbg !23538
  store i32 %or33, i32* %phy_reserved, align 4, !dbg !23538
  %33 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23539
  %34 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23541
  %phyaddr34 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %34, i32 0, i32 10, !dbg !23542
  %35 = load i32, i32* %phyaddr34, align 4, !dbg !23542
  %36 = load i32, i32* %phy_reserved, align 4, !dbg !23543
  %call35 = call i32 @mii_rw(%struct.net_device* %33, i32 %35, i32 18, i32 %36) #13, !dbg !23544
  %tobool36 = icmp ne i32 %call35, 0, !dbg !23544
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !23545

if.then37:                                        ; preds = %if.end29
  store i32 2, i32* %retval, align 4, !dbg !23546
  br label %return, !dbg !23546

if.end38:                                         ; preds = %if.end29
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23547
  %38 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23548
  %phyaddr39 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %38, i32 0, i32 10, !dbg !23549
  %39 = load i32, i32* %phyaddr39, align 4, !dbg !23549
  %call40 = call i32 @mii_rw(%struct.net_device* %37, i32 %39, i32 17, i32 -1) #13, !dbg !23550
  store i32 %call40, i32* %phy_reserved, align 4, !dbg !23551
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23552
  %41 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23554
  %phyaddr41 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %41, i32 0, i32 10, !dbg !23555
  %42 = load i32, i32* %phyaddr41, align 4, !dbg !23555
  %43 = load i32, i32* %phy_reserved, align 4, !dbg !23556
  %call42 = call i32 @mii_rw(%struct.net_device* %40, i32 %42, i32 17, i32 %43) #13, !dbg !23557
  %tobool43 = icmp ne i32 %call42, 0, !dbg !23557
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !23558

if.then44:                                        ; preds = %if.end38
  store i32 2, i32* %retval, align 4, !dbg !23559
  br label %return, !dbg !23559

if.end45:                                         ; preds = %if.end38
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23560
  %45 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23562
  %phyaddr46 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %45, i32 0, i32 10, !dbg !23563
  %46 = load i32, i32* %phyaddr46, align 4, !dbg !23563
  %call47 = call i32 @mii_rw(%struct.net_device* %44, i32 %46, i32 16, i32 36742) #13, !dbg !23564
  %tobool48 = icmp ne i32 %call47, 0, !dbg !23564
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !23565

if.then49:                                        ; preds = %if.end45
  store i32 2, i32* %retval, align 4, !dbg !23566
  br label %return, !dbg !23566

if.end50:                                         ; preds = %if.end45
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23567
  %48 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23569
  %phyaddr51 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %48, i32 0, i32 10, !dbg !23570
  %49 = load i32, i32* %phyaddr51, align 4, !dbg !23570
  %call52 = call i32 @mii_rw(%struct.net_device* %47, i32 %49, i32 16, i32 44930) #13, !dbg !23571
  %tobool53 = icmp ne i32 %call52, 0, !dbg !23571
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !23572

if.then54:                                        ; preds = %if.end50
  store i32 2, i32* %retval, align 4, !dbg !23573
  br label %return, !dbg !23573

if.end55:                                         ; preds = %if.end50
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23574
  %51 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23575
  %phyaddr56 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %51, i32 0, i32 10, !dbg !23576
  %52 = load i32, i32* %phyaddr56, align 4, !dbg !23576
  %call57 = call i32 @mii_rw(%struct.net_device* %50, i32 %52, i32 18, i32 -1) #13, !dbg !23577
  store i32 %call57, i32* %phy_reserved, align 4, !dbg !23578
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23579
  %54 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23581
  %phyaddr58 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %54, i32 0, i32 10, !dbg !23582
  %55 = load i32, i32* %phyaddr58, align 4, !dbg !23582
  %56 = load i32, i32* %phy_reserved, align 4, !dbg !23583
  %call59 = call i32 @mii_rw(%struct.net_device* %53, i32 %55, i32 18, i32 %56) #13, !dbg !23584
  %tobool60 = icmp ne i32 %call59, 0, !dbg !23584
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !23585

if.then61:                                        ; preds = %if.end55
  store i32 2, i32* %retval, align 4, !dbg !23586
  br label %return, !dbg !23586

if.end62:                                         ; preds = %if.end55
  %57 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23587
  %58 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23588
  %phyaddr63 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %58, i32 0, i32 10, !dbg !23589
  %59 = load i32, i32* %phyaddr63, align 4, !dbg !23589
  %call64 = call i32 @mii_rw(%struct.net_device* %57, i32 %59, i32 17, i32 -1) #13, !dbg !23590
  store i32 %call64, i32* %phy_reserved, align 4, !dbg !23591
  %60 = load i32, i32* %phy_reserved, align 4, !dbg !23592
  %and65 = and i32 %60, -385, !dbg !23592
  store i32 %and65, i32* %phy_reserved, align 4, !dbg !23592
  %61 = load i32, i32* %phy_reserved, align 4, !dbg !23593
  %or66 = or i32 %61, 256, !dbg !23593
  store i32 %or66, i32* %phy_reserved, align 4, !dbg !23593
  %62 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23594
  %63 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23596
  %phyaddr67 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %63, i32 0, i32 10, !dbg !23597
  %64 = load i32, i32* %phyaddr67, align 4, !dbg !23597
  %65 = load i32, i32* %phy_reserved, align 4, !dbg !23598
  %call68 = call i32 @mii_rw(%struct.net_device* %62, i32 %64, i32 17, i32 %65) #13, !dbg !23599
  %tobool69 = icmp ne i32 %call68, 0, !dbg !23599
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !23600

if.then70:                                        ; preds = %if.end62
  store i32 2, i32* %retval, align 4, !dbg !23601
  br label %return, !dbg !23601

if.end71:                                         ; preds = %if.end62
  %66 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23602
  %67 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23604
  %phyaddr72 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %67, i32 0, i32 10, !dbg !23605
  %68 = load i32, i32* %phyaddr72, align 4, !dbg !23605
  %call73 = call i32 @mii_rw(%struct.net_device* %66, i32 %68, i32 16, i32 36738) #13, !dbg !23606
  %tobool74 = icmp ne i32 %call73, 0, !dbg !23606
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !23607

if.then75:                                        ; preds = %if.end71
  store i32 2, i32* %retval, align 4, !dbg !23608
  br label %return, !dbg !23608

if.end76:                                         ; preds = %if.end71
  %69 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23609
  %70 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23611
  %phyaddr77 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %70, i32 0, i32 10, !dbg !23612
  %71 = load i32, i32* %phyaddr77, align 4, !dbg !23612
  %call78 = call i32 @mii_rw(%struct.net_device* %69, i32 %71, i32 31, i32 0) #13, !dbg !23613
  %tobool79 = icmp ne i32 %call78, 0, !dbg !23613
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !23614

if.then80:                                        ; preds = %if.end76
  store i32 2, i32* %retval, align 4, !dbg !23615
  br label %return, !dbg !23615

if.end81:                                         ; preds = %if.end76
  store i32 0, i32* %retval, align 4, !dbg !23616
  br label %return, !dbg !23616

return:                                           ; preds = %if.end81, %if.then80, %if.then75, %if.then70, %if.then61, %if.then54, %if.then49, %if.then44, %if.then37, %if.then28, %if.then23, %if.then18, %if.then11, %if.then4, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !23617
  ret i32 %72, !dbg !23617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_realtek_8201_cross(%struct.net_device* %dev, %struct.fe_priv* %np) #2 !dbg !23618 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np.addr = alloca %struct.fe_priv*, align 8
  %phy_reserved = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23619, metadata !DIExpression()), !dbg !23620
  store %struct.fe_priv* %np, %struct.fe_priv** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np.addr, metadata !23621, metadata !DIExpression()), !dbg !23622
  call void @llvm.dbg.declare(metadata i32* %phy_reserved, metadata !23623, metadata !DIExpression()), !dbg !23624
  %0 = load i32, i32* @phy_cross, align 4, !dbg !23625
  %cmp = icmp eq i32 %0, 0, !dbg !23627
  br i1 %cmp, label %if.then, label %if.end14, !dbg !23628

if.then:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23629
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23632
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 10, !dbg !23633
  %3 = load i32, i32* %phyaddr, align 4, !dbg !23633
  %call = call i32 @mii_rw(%struct.net_device* %1, i32 %3, i32 31, i32 1) #13, !dbg !23634
  %tobool = icmp ne i32 %call, 0, !dbg !23634
  br i1 %tobool, label %if.then1, label %if.end, !dbg !23635

if.then1:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !23636
  br label %return, !dbg !23636

if.end:                                           ; preds = %if.then
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23637
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23638
  %phyaddr2 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 10, !dbg !23639
  %6 = load i32, i32* %phyaddr2, align 4, !dbg !23639
  %call3 = call i32 @mii_rw(%struct.net_device* %4, i32 %6, i32 25, i32 -1) #13, !dbg !23640
  store i32 %call3, i32* %phy_reserved, align 4, !dbg !23641
  %7 = load i32, i32* %phy_reserved, align 4, !dbg !23642
  %and = and i32 %7, -4, !dbg !23642
  store i32 %and, i32* %phy_reserved, align 4, !dbg !23642
  %8 = load i32, i32* %phy_reserved, align 4, !dbg !23643
  %or = or i32 %8, 1, !dbg !23643
  store i32 %or, i32* %phy_reserved, align 4, !dbg !23643
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23644
  %10 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23646
  %phyaddr4 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %10, i32 0, i32 10, !dbg !23647
  %11 = load i32, i32* %phyaddr4, align 4, !dbg !23647
  %12 = load i32, i32* %phy_reserved, align 4, !dbg !23648
  %call5 = call i32 @mii_rw(%struct.net_device* %9, i32 %11, i32 25, i32 %12) #13, !dbg !23649
  %tobool6 = icmp ne i32 %call5, 0, !dbg !23649
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !23650

if.then7:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !23651
  br label %return, !dbg !23651

if.end8:                                          ; preds = %if.end
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23652
  %14 = load %struct.fe_priv*, %struct.fe_priv** %np.addr, align 8, !dbg !23654
  %phyaddr9 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %14, i32 0, i32 10, !dbg !23655
  %15 = load i32, i32* %phyaddr9, align 4, !dbg !23655
  %call10 = call i32 @mii_rw(%struct.net_device* %13, i32 %15, i32 31, i32 0) #13, !dbg !23656
  %tobool11 = icmp ne i32 %call10, 0, !dbg !23656
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !23657

if.then12:                                        ; preds = %if.end8
  store i32 2, i32* %retval, align 4, !dbg !23658
  br label %return, !dbg !23658

if.end13:                                         ; preds = %if.end8
  br label %if.end14, !dbg !23659

if.end14:                                         ; preds = %if.end13, %entry
  store i32 0, i32* %retval, align 4, !dbg !23660
  br label %return, !dbg !23660

return:                                           ; preds = %if.end14, %if.then12, %if.then7, %if.then1
  %16 = load i32, i32* %retval, align 4, !dbg !23661
  ret i32 %16, !dbg !23661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !23662 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !23665, metadata !DIExpression()), !dbg !23666
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !23667
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !23668
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #13, !dbg !23669
  ret i8* %call, !dbg !23670
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_restore_mac_addr(%struct.pci_dev* %pci_dev) #2 !dbg !23671 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !23672, metadata !DIExpression()), !dbg !23673
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !23674, metadata !DIExpression()), !dbg !23675
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !23676
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #13, !dbg !23677
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !23677
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !23675
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !23678, metadata !DIExpression()), !dbg !23679
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23680
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !23681
  %3 = bitcast i8* %call1 to %struct.fe_priv*, !dbg !23681
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !23679
  call void @llvm.dbg.declare(metadata i8** %base, metadata !23682, metadata !DIExpression()), !dbg !23683
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23684
  %call2 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !23685
  store i8* %call2, i8** %base, align 8, !dbg !23683
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23686
  %orig_mac = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 21, !dbg !23687
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %orig_mac, i64 0, i64 0, !dbg !23686
  %6 = load i32, i32* %arrayidx, align 8, !dbg !23686
  %7 = load i8*, i8** %base, align 8, !dbg !23688
  %add.ptr = getelementptr i8, i8* %7, i64 168, !dbg !23689
  call void @writel(i32 %6, i8* %add.ptr) #13, !dbg !23690
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23691
  %orig_mac3 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 21, !dbg !23692
  %arrayidx4 = getelementptr [2 x i32], [2 x i32]* %orig_mac3, i64 0, i64 1, !dbg !23691
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !23691
  %10 = load i8*, i8** %base, align 8, !dbg !23693
  %add.ptr5 = getelementptr i8, i8* %10, i64 172, !dbg !23694
  call void @writel(i32 %9, i8* %add.ptr5) #13, !dbg !23695
  %11 = load i8*, i8** %base, align 8, !dbg !23696
  %add.ptr6 = getelementptr i8, i8* %11, i64 268, !dbg !23697
  %call7 = call i32 @readl(i8* %add.ptr6) #13, !dbg !23698
  %and = and i32 %call7, -32769, !dbg !23699
  %12 = load i8*, i8** %base, align 8, !dbg !23700
  %add.ptr8 = getelementptr i8, i8* %12, i64 268, !dbg !23701
  call void @writel(i32 %and, i8* %add.ptr8) #13, !dbg !23702
  ret void, !dbg !23703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_restore_phy(%struct.net_device* %dev) #2 !dbg !23704 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %phy_reserved = alloca i16, align 2
  %mii_control = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23705, metadata !DIExpression()), !dbg !23706
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !23707, metadata !DIExpression()), !dbg !23708
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23709
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !23710
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !23710
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !23708
  call void @llvm.dbg.declare(metadata i16* %phy_reserved, metadata !23711, metadata !DIExpression()), !dbg !23712
  call void @llvm.dbg.declare(metadata i16* %mii_control, metadata !23713, metadata !DIExpression()), !dbg !23714
  %2 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23715
  %phy_oui = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %2, i32 0, i32 12, !dbg !23717
  %3 = load i32, i32* %phy_oui, align 4, !dbg !23717
  %cmp = icmp eq i32 %3, 1842, !dbg !23718
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !23719

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23720
  %phy_model = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %4, i32 0, i32 13, !dbg !23721
  %5 = load i32, i32* %phy_model, align 8, !dbg !23721
  %cmp1 = icmp eq i32 %5, 512, !dbg !23722
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !23723

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load i32, i32* @phy_cross, align 4, !dbg !23724
  %cmp3 = icmp eq i32 %6, 0, !dbg !23725
  br i1 %cmp3, label %if.then, label %if.end, !dbg !23726

if.then:                                          ; preds = %land.lhs.true2
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23727
  %8 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23729
  %phyaddr = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %8, i32 0, i32 10, !dbg !23730
  %9 = load i32, i32* %phyaddr, align 4, !dbg !23730
  %call4 = call i32 @mii_rw(%struct.net_device* %7, i32 %9, i32 31, i32 1) #13, !dbg !23731
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23732
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23733
  %phyaddr5 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 10, !dbg !23734
  %12 = load i32, i32* %phyaddr5, align 4, !dbg !23734
  %call6 = call i32 @mii_rw(%struct.net_device* %10, i32 %12, i32 25, i32 -1) #13, !dbg !23735
  %conv = trunc i32 %call6 to i16, !dbg !23735
  store i16 %conv, i16* %phy_reserved, align 2, !dbg !23736
  %13 = load i16, i16* %phy_reserved, align 2, !dbg !23737
  %conv7 = zext i16 %13 to i32, !dbg !23737
  %and = and i32 %conv7, -4, !dbg !23737
  %conv8 = trunc i32 %and to i16, !dbg !23737
  store i16 %conv8, i16* %phy_reserved, align 2, !dbg !23737
  %14 = load i16, i16* %phy_reserved, align 2, !dbg !23738
  %conv9 = zext i16 %14 to i32, !dbg !23738
  %or = or i32 %conv9, 3, !dbg !23738
  %conv10 = trunc i32 %or to i16, !dbg !23738
  store i16 %conv10, i16* %phy_reserved, align 2, !dbg !23738
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23739
  %16 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23740
  %phyaddr11 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %16, i32 0, i32 10, !dbg !23741
  %17 = load i32, i32* %phyaddr11, align 4, !dbg !23741
  %18 = load i16, i16* %phy_reserved, align 2, !dbg !23742
  %conv12 = zext i16 %18 to i32, !dbg !23742
  %call13 = call i32 @mii_rw(%struct.net_device* %15, i32 %17, i32 25, i32 %conv12) #13, !dbg !23743
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23744
  %20 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23745
  %phyaddr14 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %20, i32 0, i32 10, !dbg !23746
  %21 = load i32, i32* %phyaddr14, align 4, !dbg !23746
  %call15 = call i32 @mii_rw(%struct.net_device* %19, i32 %21, i32 31, i32 0) #13, !dbg !23747
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23748
  %23 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23749
  %phyaddr16 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %23, i32 0, i32 10, !dbg !23750
  %24 = load i32, i32* %phyaddr16, align 4, !dbg !23750
  %call17 = call i32 @mii_rw(%struct.net_device* %22, i32 %24, i32 0, i32 -1) #13, !dbg !23751
  %conv18 = trunc i32 %call17 to i16, !dbg !23751
  store i16 %conv18, i16* %mii_control, align 2, !dbg !23752
  %25 = load i16, i16* %mii_control, align 2, !dbg !23753
  %conv19 = zext i16 %25 to i32, !dbg !23753
  %or20 = or i32 %conv19, 4608, !dbg !23753
  %conv21 = trunc i32 %or20 to i16, !dbg !23753
  store i16 %conv21, i16* %mii_control, align 2, !dbg !23753
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23754
  %27 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23755
  %phyaddr22 = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %27, i32 0, i32 10, !dbg !23756
  %28 = load i32, i32* %phyaddr22, align 4, !dbg !23756
  %29 = load i16, i16* %mii_control, align 2, !dbg !23757
  %conv23 = zext i16 %29 to i32, !dbg !23757
  %call24 = call i32 @mii_rw(%struct.net_device* %26, i32 %28, i32 0, i32 %conv23) #13, !dbg !23758
  br label %if.end, !dbg !23759

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !23760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_mgmt_release_sema(%struct.net_device* %dev) #2 !dbg !23761 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %tx_ctrl = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23762, metadata !DIExpression()), !dbg !23763
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !23764, metadata !DIExpression()), !dbg !23765
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23766
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !23767
  %1 = bitcast i8* %call to %struct.fe_priv*, !dbg !23767
  store %struct.fe_priv* %1, %struct.fe_priv** %np, align 8, !dbg !23765
  call void @llvm.dbg.declare(metadata i8** %base, metadata !23768, metadata !DIExpression()), !dbg !23769
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23770
  %call1 = call i8* @get_hwbase(%struct.net_device* %2) #13, !dbg !23771
  store i8* %call1, i8** %base, align 8, !dbg !23769
  call void @llvm.dbg.declare(metadata i32* %tx_ctrl, metadata !23772, metadata !DIExpression()), !dbg !23773
  %3 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23774
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %3, i32 0, i32 27, !dbg !23776
  %4 = load i32, i32* %driver_data, align 4, !dbg !23776
  %and = and i32 %4, 8192, !dbg !23777
  %tobool = icmp ne i32 %and, 0, !dbg !23777
  br i1 %tobool, label %if.then, label %if.end7, !dbg !23778

if.then:                                          ; preds = %entry
  %5 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23779
  %mgmt_sema = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %5, i32 0, i32 32, !dbg !23782
  %6 = load i32, i32* %mgmt_sema, align 8, !dbg !23782
  %tobool2 = icmp ne i32 %6, 0, !dbg !23779
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !23783

if.then3:                                         ; preds = %if.then
  %7 = load i8*, i8** %base, align 8, !dbg !23784
  %add.ptr = getelementptr i8, i8* %7, i64 132, !dbg !23786
  %call4 = call i32 @readl(i8* %add.ptr) #13, !dbg !23787
  store i32 %call4, i32* %tx_ctrl, align 4, !dbg !23788
  %8 = load i32, i32* %tx_ctrl, align 4, !dbg !23789
  %and5 = and i32 %8, -61441, !dbg !23789
  store i32 %and5, i32* %tx_ctrl, align 4, !dbg !23789
  %9 = load i32, i32* %tx_ctrl, align 4, !dbg !23790
  %10 = load i8*, i8** %base, align 8, !dbg !23791
  %add.ptr6 = getelementptr i8, i8* %10, i64 132, !dbg !23792
  call void @writel(i32 %9, i8* %add.ptr6) #13, !dbg !23793
  br label %if.end, !dbg !23794

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end7, !dbg !23795

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !23796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !23797 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23800, metadata !DIExpression()), !dbg !23801
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23802
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !23803
  %1 = load i8*, i8** %driver_data, align 8, !dbg !23803
  ret i8* %1, !dbg !23804
}

; Function Attrs: noredzone
declare dso_local i32 @pci_wake_from_d3(%struct.pci_dev*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_set_power_state(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_suspend(%struct.device* %device) #2 !dbg !23805 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !23806, metadata !DIExpression()), !dbg !23807
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !23808, metadata !DIExpression()), !dbg !23809
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !23810
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #13, !dbg !23811
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !23811
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !23809
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !23812, metadata !DIExpression()), !dbg !23813
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23814
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #13, !dbg !23815
  %3 = bitcast i8* %call1 to %struct.fe_priv*, !dbg !23815
  store %struct.fe_priv* %3, %struct.fe_priv** %np, align 8, !dbg !23813
  call void @llvm.dbg.declare(metadata i8** %base, metadata !23816, metadata !DIExpression()), !dbg !23817
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23818
  %call2 = call i8* @get_hwbase(%struct.net_device* %4) #13, !dbg !23819
  store i8* %call2, i8** %base, align 8, !dbg !23817
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23820, metadata !DIExpression()), !dbg !23821
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23822
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %5) #13, !dbg !23824
  br i1 %call3, label %if.then, label %if.end, !dbg !23825

if.then:                                          ; preds = %entry
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23826
  %call4 = call i32 @nv_close(%struct.net_device* %6) #13, !dbg !23828
  br label %if.end, !dbg !23829

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23830
  call void @netif_device_detach(%struct.net_device* %7) #13, !dbg !23831
  store i32 0, i32* %i, align 4, !dbg !23832
  br label %for.cond, !dbg !23834

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !23835
  %conv = sext i32 %8 to i64, !dbg !23835
  %9 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23837
  %register_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %9, i32 0, i32 29, !dbg !23838
  %10 = load i32, i32* %register_size, align 4, !dbg !23838
  %conv5 = zext i32 %10 to i64, !dbg !23837
  %div = udiv i64 %conv5, 4, !dbg !23839
  %cmp = icmp ule i64 %conv, %div, !dbg !23840
  br i1 %cmp, label %for.body, label %for.end, !dbg !23841

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %base, align 8, !dbg !23842
  %12 = load i32, i32* %i, align 4, !dbg !23843
  %conv7 = sext i32 %12 to i64, !dbg !23843
  %mul = mul i64 %conv7, 4, !dbg !23844
  %add.ptr = getelementptr i8, i8* %11, i64 %mul, !dbg !23845
  %call8 = call i32 @readl(i8* %add.ptr) #13, !dbg !23846
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23847
  %saved_config_space = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 72, !dbg !23848
  %14 = load i32, i32* %i, align 4, !dbg !23849
  %idxprom = sext i32 %14 to i64, !dbg !23847
  %arrayidx = getelementptr [385 x i32], [385 x i32]* %saved_config_space, i64 0, i64 %idxprom, !dbg !23847
  store i32 %call8, i32* %arrayidx, align 4, !dbg !23850
  br label %for.inc, !dbg !23847

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !23851
  %inc = add i32 %15, 1, !dbg !23851
  store i32 %inc, i32* %i, align 4, !dbg !23851
  br label %for.cond, !dbg !23852, !llvm.loop !23853

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !23855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nv_resume(%struct.device* %device) #2 !dbg !23856 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net_device*, align 8
  %np = alloca %struct.fe_priv*, align 8
  %base = alloca i8*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !23857, metadata !DIExpression()), !dbg !23858
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !23859, metadata !DIExpression()), !dbg !23860
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !23861, metadata !DIExpression()), !dbg !23863
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !23863
  %1 = bitcast %struct.device* %0 to i8*, !dbg !23863
  store i8* %1, i8** %__mptr, align 8, !dbg !23863
  br label %do.body, !dbg !23863

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !23864

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !23863
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !23863
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !23863
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !23864
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !23863
  store %struct.pci_dev* %4, %struct.pci_dev** %pdev, align 8, !dbg !23860
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !23866, metadata !DIExpression()), !dbg !23867
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !23868
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %5) #13, !dbg !23869
  %6 = bitcast i8* %call to %struct.net_device*, !dbg !23869
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !23867
  call void @llvm.dbg.declare(metadata %struct.fe_priv** %np, metadata !23870, metadata !DIExpression()), !dbg !23871
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23872
  %call1 = call i8* @netdev_priv(%struct.net_device* %7) #13, !dbg !23873
  %8 = bitcast i8* %call1 to %struct.fe_priv*, !dbg !23873
  store %struct.fe_priv* %8, %struct.fe_priv** %np, align 8, !dbg !23871
  call void @llvm.dbg.declare(metadata i8** %base, metadata !23874, metadata !DIExpression()), !dbg !23875
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23876
  %call2 = call i8* @get_hwbase(%struct.net_device* %9) #13, !dbg !23877
  store i8* %call2, i8** %base, align 8, !dbg !23875
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23878, metadata !DIExpression()), !dbg !23879
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !23880, metadata !DIExpression()), !dbg !23881
  store i32 0, i32* %rc, align 4, !dbg !23881
  store i32 0, i32* %i, align 4, !dbg !23882
  br label %for.cond, !dbg !23884

for.cond:                                         ; preds = %for.inc, %do.end
  %10 = load i32, i32* %i, align 4, !dbg !23885
  %conv = sext i32 %10 to i64, !dbg !23885
  %11 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23887
  %register_size = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %11, i32 0, i32 29, !dbg !23888
  %12 = load i32, i32* %register_size, align 4, !dbg !23888
  %conv3 = zext i32 %12 to i64, !dbg !23887
  %div = udiv i64 %conv3, 4, !dbg !23889
  %cmp = icmp ule i64 %conv, %div, !dbg !23890
  br i1 %cmp, label %for.body, label %for.end, !dbg !23891

for.body:                                         ; preds = %for.cond
  %13 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23892
  %saved_config_space = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %13, i32 0, i32 72, !dbg !23893
  %14 = load i32, i32* %i, align 4, !dbg !23894
  %idxprom = sext i32 %14 to i64, !dbg !23892
  %arrayidx = getelementptr [385 x i32], [385 x i32]* %saved_config_space, i64 0, i64 %idxprom, !dbg !23892
  %15 = load i32, i32* %arrayidx, align 4, !dbg !23892
  %16 = load i8*, i8** %base, align 8, !dbg !23895
  %17 = load i32, i32* %i, align 4, !dbg !23896
  %conv5 = sext i32 %17 to i64, !dbg !23896
  %mul = mul i64 %conv5, 4, !dbg !23897
  %add.ptr6 = getelementptr i8, i8* %16, i64 %mul, !dbg !23898
  call void @writel(i32 %15, i8* %add.ptr6) #13, !dbg !23899
  br label %for.inc, !dbg !23899

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !23900
  %inc = add i32 %18, 1, !dbg !23900
  store i32 %inc, i32* %i, align 4, !dbg !23900
  br label %for.cond, !dbg !23901, !llvm.loop !23902

for.end:                                          ; preds = %for.cond
  %19 = load %struct.fe_priv*, %struct.fe_priv** %np, align 8, !dbg !23904
  %driver_data = getelementptr inbounds %struct.fe_priv, %struct.fe_priv* %19, i32 0, i32 27, !dbg !23906
  %20 = load i32, i32* %driver_data, align 4, !dbg !23906
  %and = and i32 %20, 16777216, !dbg !23907
  %tobool = icmp ne i32 %and, 0, !dbg !23907
  br i1 %tobool, label %if.then, label %if.end, !dbg !23908

if.then:                                          ; preds = %for.end
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !23909
  %call7 = call i32 @pci_write_config_dword(%struct.pci_dev* %21, i32 104, i32 -1) #13, !dbg !23910
  br label %if.end, !dbg !23910

if.end:                                           ; preds = %if.then, %for.end
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23911
  %call8 = call i32 @phy_init(%struct.net_device* %22) #13, !dbg !23912
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23913
  call void @netif_device_attach(%struct.net_device* %23) #13, !dbg !23914
  %24 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23915
  %call9 = call zeroext i1 @netif_running(%struct.net_device* %24) #13, !dbg !23917
  br i1 %call9, label %if.then10, label %if.end12, !dbg !23918

if.then10:                                        ; preds = %if.end
  %25 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23919
  %call11 = call i32 @nv_open(%struct.net_device* %25) #13, !dbg !23921
  store i32 %call11, i32* %rc, align 4, !dbg !23922
  %26 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23923
  call void @nv_set_multicast(%struct.net_device* %26) #13, !dbg !23924
  br label %if.end12, !dbg !23925

if.end12:                                         ; preds = %if.then10, %if.end
  %27 = load i32, i32* %rc, align 4, !dbg !23926
  ret i32 %27, !dbg !23927
}

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind willreturn }
attributes #12 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noredzone }
attributes #14 = { cold noredzone }
attributes #15 = { noredzone nounwind }
attributes #16 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!8229}
!llvm.module.flags = !{!8230, !8231, !8232, !8233}
!llvm.ident = !{!8234}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_max_interrupt_work", scope: !2, file: !3, line: 6478, type: !8226, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7435, globals: !7955, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/nvidia/forcedeth.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !6491, !4289, !4384, !5051, !5070, !6198, !6627, !6707, !6783, !6791, !7052, !7064, !7128, !7215, !7220, !7225, !7233, !7238, !7245, !7249, !7255, !7262, !7271, !7280, !7301, !7320, !7326, !7421, !7425}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7045)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !5519, !6035, !6039, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6110, !6111, !6112, !6392, !6393, !6394, !6395, !6398, !6401, !6404, !6407, !6410, !6411, !6424, !6425, !6426, !6427, !6428, !6429, !6436, !6437, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6482, !6483, !6484, !6485, !6486, !6487, !6488, !6489, !6490, !6495, !6496, !6497, !6502, !6539, !7000, !7002, !7003, !7007, !7008, !7009, !7010, !7016, !7018, !7021, !7024, !7026, !7027, !7028, !7029, !7030, !7034, !7037}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !5479, !5499, !5503, !5509, !5515}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 19, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !5472}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !5451, !5452, !5470, !5471}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !5097, !5101, !5105, !5106, !5110, !5116, !5117, !5118, !5119, !5120, !5124, !5128, !5132, !5133, !5134, !5138, !5139, !5151, !5155, !5159, !5171, !5360, !5364, !5368, !5373, !5377, !5381, !5385, !5391, !5395, !5402, !5406, !5408, !5409}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !5047, !5048, !5049, !5050, !5059, !5060, !5061, !5062, !5063, !5064, !5080, !5081, !5090, !5091, !5092, !5093, !5094, !5095, !5096}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !5016, !5017, !5029, !5030, !5031, !5032, !5033, !5039, !5040, !5041}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !4745, !4746, !4747, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4992, !5000, !5001, !5002, !5012, !5013, !5014, !5015}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1597, !4347, !4435, !4518, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4534, !4538, !4539, !4542, !4543, !4546, !4547, !4548, !4589, !4616, !4617, !4618, !4619, !4620, !4621, !4624, !4626, !4632, !4633, !4635, !4636, !4637, !4696, !4697, !4712, !4713, !4714, !4715, !4716, !4719, !4720, !4721, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1566, !1570, !1574, !1578, !1579, !1580, !1584, !1588, !1589, !1590, !1594, !1595, !1596}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1565, line: 28, flags: DIFlagFwdDecl)
!1565 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1338, !1554, !32, !292, !591}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1545}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1581, size: 64, offset: 512)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1581, file: !277, line: 183, baseType: !280, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1585, offset: 576)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1586, line: 187, elements: !1587)
!1586 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1587 = !{}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1585, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1585, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1591, offset: 576)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 3)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1585, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1585, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1585, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1598, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1601)
!1601 = !{!1602, !1606, !1610, !1611, !1615, !1621, !1625, !1626, !1627, !1631, !1635, !1636, !1637, !1638, !1644, !1648, !1649, !1712, !1713, !1714, !1715, !4331, !4346}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1600, file: !1317, line: 1936, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1375, !1545}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1600, file: !1317, line: 1937, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1375}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1600, file: !1317, line: 1938, baseType: !1607, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1600, file: !1317, line: 1940, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{null, !1375, !32}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1600, file: !1317, line: 1941, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!32, !1375, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1600, file: !1317, line: 1942, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!32, !1375}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1600, file: !1317, line: 1943, baseType: !1607, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1600, file: !1317, line: 1944, baseType: !1575, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1600, file: !1317, line: 1945, baseType: !1628, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!32, !1545, !32}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1600, file: !1317, line: 1946, baseType: !1632, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!32, !1545}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1600, file: !1317, line: 1947, baseType: !1632, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1600, file: !1317, line: 1948, baseType: !1632, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1600, file: !1317, line: 1949, baseType: !1632, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1600, file: !1317, line: 1950, baseType: !1639, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!32, !1338, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1600, file: !1317, line: 1951, baseType: !1645, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!32, !1545, !1001, !1038}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1600, file: !1317, line: 1952, baseType: !1575, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1600, file: !1317, line: 1954, baseType: !1650, size: 64, offset: 1024)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!32, !1653, !1338}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1655, line: 16, size: 896, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1685, !1707, !1708, !1711}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1654, file: !1655, line: 17, baseType: !1038, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1654, file: !1655, line: 18, baseType: !1039, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1654, file: !1655, line: 19, baseType: !1039, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1654, file: !1655, line: 20, baseType: !1039, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1654, file: !1655, line: 21, baseType: !1039, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !1655, line: 22, baseType: !1476, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1654, file: !1655, line: 23, baseType: !1476, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1655, line: 24, baseType: !1665, size: 192, offset: 448)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1666, line: 53, size: 192, elements: !1667)
!1666 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1667 = !{!1668, !1669, !1684}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1665, file: !1666, line: 54, baseType: !371, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1665, file: !1666, line: 55, baseType: !1670, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1671, line: 83, baseType: !1672)
!1671 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1671, line: 71, elements: !1673)
!1673 = !{!1674}
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1671, line: 72, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1671, line: 72, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1675, file: !1671, line: 73, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1671, line: 20, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1678, file: !1671, line: 21, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1682, line: 25, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 25, elements: !1587)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1665, file: !1666, line: 59, baseType: !284, size: 128, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1654, file: !1655, line: 25, baseType: !1686, size: 64, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1655, line: 31, size: 256, elements: !1689)
!1689 = !{!1690, !1695, !1699, !1703}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1688, file: !1655, line: 32, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!591, !1653, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1688, file: !1655, line: 33, baseType: !1696, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1653, !591}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1655, line: 34, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!591, !1653, !591, !1694}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1688, file: !1655, line: 35, baseType: !1704, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!32, !1653, !591}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1654, file: !1655, line: 26, baseType: !32, size: 32, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1654, file: !1655, line: 27, baseType: !1709, size: 64, offset: 768)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1654, file: !1655, line: 28, baseType: !591, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1600, file: !1317, line: 1955, baseType: !1650, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1600, file: !1317, line: 1956, baseType: !1650, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1600, file: !1317, line: 1957, baseType: !1650, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1600, file: !1317, line: 1963, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!32, !1545, !1719, !1742}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1721, line: 68, size: 512, align: 128, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !4323, !4330}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 69, baseType: !312, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 77, baseType: !1725, size: 320, offset: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 77, size: 320, elements: !1726)
!1726 = !{!1727, !2032, !2037, !2065, !2073, !2079, !4247, !4322}
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 78, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 78, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !2030, !2031}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1728, file: !1721, line: 84, baseType: !284, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1728, file: !1721, line: 86, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1744, !1745, !1746, !1754, !1763, !1764, !1765, !1766, !2023, !2024, !2027, !2028, !2029}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1733, file: !1317, line: 452, baseType: !1375, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1733, file: !1317, line: 453, baseType: !1737, size: 128, offset: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1738, line: 292, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1737, file: !1738, line: 293, baseType: !1670)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1737, file: !1738, line: 295, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1737, file: !1738, line: 296, baseType: !591, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1733, file: !1317, line: 454, baseType: !1742, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1733, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1733, file: !1317, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1748)
!1748 = !{!1749, !1753}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !434, line: 126, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1750, file: !434, line: 32, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1733, file: !1317, line: 461, baseType: !1755, size: 256, offset: 384)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1756, line: 35, size: 256, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 36, baseType: !371, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1755, file: !1756, line: 42, baseType: !371, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1755, file: !1756, line: 46, baseType: !1761, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1671, line: 29, baseType: !1678)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1755, file: !1756, line: 47, baseType: !284, size: 128, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1733, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1733, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1733, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1733, file: !1317, line: 465, baseType: !1767, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1770)
!1770 = !{!1771, !1775, !1779, !1783, !1787, !1791, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1987, !1991, !1997, !1998, !1999, !2003, !2008, !2012, !2019}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1769, file: !1317, line: 368, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!32, !1719, !1619}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1769, file: !1317, line: 369, baseType: !1776, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!32, !1315, !1719}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1769, file: !1317, line: 372, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!32, !1732, !1619}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1769, file: !1317, line: 375, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!32, !1719}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1769, file: !1317, line: 381, baseType: !1788, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!32, !1315, !1732, !287, !7}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1769, file: !1317, line: 383, baseType: !1792, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1769, file: !1317, line: 385, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!32, !1315, !1732, !1476, !7, !7, !1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1769, file: !1317, line: 388, baseType: !1804, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!32, !1315, !1732, !1476, !7, !7, !1719, !591}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1769, file: !1317, line: 393, baseType: !1808, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1732, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1769, file: !1317, line: 394, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1719, !7, !7}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1769, file: !1317, line: 395, baseType: !1817, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!32, !1719, !1742}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1769, file: !1317, line: 396, baseType: !1821, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1719}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1769, file: !1317, line: 397, baseType: !1825, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1521, !1828, !1848}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1837, !1838, !1839, !1840, !1841}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1829, file: !1317, line: 321, baseType: !1315, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1829, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1829, file: !1317, line: 327, baseType: !1834, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !1828, !998, !998}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1829, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1829, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1829, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1829, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !1317, line: 332, baseType: !1842, size: 64, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1829, file: !1317, line: 332, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1842, file: !1317, line: 333, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1842, file: !1317, line: 334, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1850, line: 29, size: 320, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854, !1855, !1978}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1850, line: 35, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1849, file: !1850, line: 36, baseType: !1039, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1850, line: 37, baseType: !1039, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 38, baseType: !1856, size: 64, offset: 192)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 38, size: 64, elements: !1857)
!1857 = !{!1858, !1866, !1873, !1882}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1856, file: !1850, line: 39, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1862, line: 17, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1861, file: !1862, line: 19, baseType: !591, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1861, file: !1862, line: 20, baseType: !1040, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1856, file: !1850, line: 40, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1850, line: 15, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1869, file: !1850, line: 16, baseType: !591, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1869, file: !1850, line: 17, baseType: !1039, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1856, file: !1850, line: 41, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1877, line: 31, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1876, file: !1877, line: 32, baseType: !1719, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1876, file: !1877, line: 33, baseType: !7, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1876, file: !1877, line: 34, baseType: !7, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1856, file: !1850, line: 42, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1885, line: 57, size: 1088, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1924, !1925, !1952}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1884, file: !1885, line: 58, baseType: !1665, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1890, line: 40, baseType: !1891)
!1890 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1890, line: 36, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1891, file: !1890, line: 37, baseType: !1670)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1890, line: 38, baseType: !284, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1884, file: !1885, line: 60, baseType: !7, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1884, file: !1885, line: 61, baseType: !7, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1884, file: !1885, line: 62, baseType: !7, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1884, file: !1885, line: 63, baseType: !7, size: 32, offset: 544)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1884, file: !1885, line: 67, baseType: !7, size: 32, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1884, file: !1885, line: 68, baseType: !7, size: 32, offset: 608)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1884, file: !1885, line: 69, baseType: !7, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1884, file: !1885, line: 70, baseType: !7, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1884, file: !1885, line: 71, baseType: !7, size: 32, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1884, file: !1885, line: 72, baseType: !7, size: 32, offset: 736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1884, file: !1885, line: 73, baseType: !1719, size: 64, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1884, file: !1885, line: 74, baseType: !1908, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1910)
!1910 = !{!1911, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1909, file: !1317, line: 1315, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1913, line: 20, baseType: !1914)
!1913 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1913, line: 11, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1914, file: !1913, line: 12, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1682, line: 33, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 31, elements: !1587)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1909, file: !1317, line: 1316, baseType: !32, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1909, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1909, file: !1317, line: 1318, baseType: !1908, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1909, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1909, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1884, file: !1885, line: 75, baseType: !1908, size: 64, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1884, file: !1885, line: 76, baseType: !1926, size: 64, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1885, line: 26, size: 320, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1950, !1951}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1927, file: !1885, line: 27, baseType: !1719, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1885, line: 29, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1885, line: 93, size: 256, elements: !1936)
!1936 = !{!1937, !1941, !1945, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1935, file: !1885, line: 101, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!32, !1883, !1926}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1935, file: !1885, line: 107, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1883, !1926}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1935, file: !1885, line: 117, baseType: !1946, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!771, !1883, !1926}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1935, file: !1885, line: 122, baseType: !1946, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1885, line: 30, baseType: !7, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1927, file: !1885, line: 31, baseType: !312, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1884, file: !1885, line: 77, baseType: !1953, size: 64, offset: 1024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1955, line: 13, size: 896, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1954, file: !1955, line: 14, baseType: !568, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1954, file: !1955, line: 15, baseType: !383, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1954, file: !1955, line: 16, baseType: !383, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1954, file: !1955, line: 21, baseType: !371, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1954, file: !1955, line: 27, baseType: !312, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1954, file: !1955, line: 28, baseType: !312, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1954, file: !1955, line: 29, baseType: !371, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1954, file: !1955, line: 32, baseType: !276, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1954, file: !1955, line: 33, baseType: !1382, size: 32, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1954, file: !1955, line: 37, baseType: !371, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1954, file: !1955, line: 44, baseType: !1968, size: 256, offset: 640)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1969, line: 15, size: 256, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1968, file: !1969, line: 16, baseType: !1761)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1968, file: !1969, line: 18, baseType: !32, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1968, file: !1969, line: 19, baseType: !32, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1968, file: !1969, line: 20, baseType: !32, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1968, file: !1969, line: 21, baseType: !32, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1968, file: !1969, line: 22, baseType: !312, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1968, file: !1969, line: 23, baseType: !312, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 44, baseType: !1979, size: 64, offset: 256)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 44, size: 64, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1979, file: !1850, line: 45, baseType: !312, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !1850, line: 46, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1850, line: 46, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1983, file: !1850, line: 47, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1983, file: !1850, line: 48, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1769, file: !1317, line: 402, baseType: !1988, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!32, !1732, !1719, !1719, !5}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1769, file: !1317, line: 404, baseType: !1992, size: 64, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!771, !1719, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1996, line: 305, baseType: !7)
!1996 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1769, file: !1317, line: 405, baseType: !1821, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1769, file: !1317, line: 406, baseType: !1784, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1769, file: !1317, line: 407, baseType: !2000, size: 64, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!32, !1719, !312, !312}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1769, file: !1317, line: 409, baseType: !2004, size: 64, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !1719, !2007, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1769, file: !1317, line: 410, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!32, !1732, !1719}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1769, file: !1317, line: 413, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!32, !2016, !1315, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1769, file: !1317, line: 415, baseType: !2020, size: 64, offset: 1344)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1315}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1733, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1733, file: !1317, line: 467, baseType: !2025, size: 32, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2026, line: 8, baseType: !987)
!2026 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1733, file: !1317, line: 468, baseType: !1670, offset: 992)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1733, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1733, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1728, file: !1721, line: 87, baseType: !312, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1728, file: !1721, line: 94, baseType: !312, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 96, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 96, size: 64, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2033, file: !1721, line: 101, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 103, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 103, size: 320, elements: !2039)
!2039 = !{!2040, !2050, !2053, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 104, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2041, file: !1721, line: 105, baseType: !284, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !1721, line: 106, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2041, file: !1721, line: 106, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1721, line: 107, baseType: !1719, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2045, file: !1721, line: 109, baseType: !32, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2045, file: !1721, line: 110, baseType: !32, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2038, file: !1721, line: 117, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1721, line: 117, flags: DIFlagFwdDecl)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2038, file: !1721, line: 119, baseType: !591, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 120, baseType: !2055, size: 64, offset: 256)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 120, size: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2055, file: !1721, line: 121, baseType: !591, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2055, file: !1721, line: 122, baseType: !312, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !1721, line: 123, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !1721, line: 123, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2060, file: !1721, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2060, file: !1721, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2060, file: !1721, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 130, baseType: !2066, size: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 130, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2066, file: !1721, line: 131, baseType: !312, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2066, file: !1721, line: 134, baseType: !482, size: 8, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2066, file: !1721, line: 135, baseType: !482, size: 8, offset: 72)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2066, file: !1721, line: 136, baseType: !383, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2066, file: !1721, line: 137, baseType: !7, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 139, baseType: !2074, size: 256)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 139, size: 256, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2074, file: !1721, line: 140, baseType: !312, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2074, file: !1721, line: 141, baseType: !383, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2074, file: !1721, line: 143, baseType: !284, size: 128, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 145, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 145, size: 256, elements: !2081)
!2081 = !{!2082, !2083, !2086, !2087, !4246}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2080, file: !1721, line: 146, baseType: !312, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2080, file: !1721, line: 147, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2085, line: 509, baseType: !1719)
!2085 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2080, file: !1721, line: 148, baseType: !312, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !1721, line: 149, baseType: !2088, size: 64, offset: 192)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !1721, line: 149, size: 64, elements: !2089)
!2089 = !{!2090, !4245}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2088, file: !1721, line: 150, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1721, line: 388, size: 7296, elements: !2093)
!2093 = !{!2094, !4243}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !1721, line: 389, baseType: !2095, size: 7296)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2092, file: !1721, line: 389, size: 7296, elements: !2096)
!2096 = !{!2097, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2274, !2277, !2316, !2317, !4227, !4228, !4231, !4232, !4233, !4236, !4237, !4238, !4241, !4242}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2095, file: !1721, line: 390, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1721, line: 305, size: 1472, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2115, !2116, !2121, !2122, !2125, !2209, !2210, !2211, !2212, !2213}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2099, file: !1721, line: 308, baseType: !312, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2099, file: !1721, line: 309, baseType: !312, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2099, file: !1721, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2099, file: !1721, line: 323, baseType: !312, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2099, file: !1721, line: 327, baseType: !2091, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2099, file: !1721, line: 333, baseType: !2109, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2085, line: 284, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2085, line: 284, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2110, file: !2085, line: 284, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2114, line: 19, baseType: !312)
!2114 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2099, file: !1721, line: 334, baseType: !312, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2099, file: !1721, line: 343, baseType: !2117, size: 256, offset: 704)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !1721, line: 340, size: 256, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !1721, line: 341, baseType: !433, size: 192, align: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2117, file: !1721, line: 342, baseType: !312, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2099, file: !1721, line: 351, baseType: !284, size: 128, offset: 960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2099, file: !1721, line: 353, baseType: !2123, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1721, line: 353, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2099, file: !1721, line: 356, baseType: !2126, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2129)
!2129 = !{!2130, !2134, !2135, !2139, !2143, !2183, !2187, !2191, !2195, !2196, !2197, !2201, !2205}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2128, file: !14, line: 558, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2098}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2128, file: !14, line: 559, baseType: !2131, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2128, file: !14, line: 560, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!32, !2098, !312}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2128, file: !14, line: 561, baseType: !2140, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!32, !2098}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2128, file: !14, line: 562, baseType: !2144, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1721, line: 682, baseType: !7)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2163, !2170, !2176, !2177, !2178, !2180, !2182}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2149, file: !14, line: 509, baseType: !2098, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2149, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2149, file: !14, line: 511, baseType: !1742, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2149, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2149, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2149, file: !14, line: 514, baseType: !2157, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2085, line: 385, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 385, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2159, file: !2085, line: 385, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2114, line: 15, baseType: !312)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2149, file: !14, line: 516, baseType: !2164, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2085, line: 359, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 359, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2166, file: !2085, line: 359, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2114, line: 16, baseType: !312)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2149, file: !14, line: 519, baseType: !2171, size: 64, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2114, line: 21, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2114, line: 21, size: 64, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2172, file: !2114, line: 21, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2114, line: 14, baseType: !312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2149, file: !14, line: 521, baseType: !1719, size: 64, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2149, file: !14, line: 522, baseType: !1719, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2149, file: !14, line: 528, baseType: !2179, size: 64, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2149, file: !14, line: 532, baseType: !2181, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2149, file: !14, line: 536, baseType: !2084, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2128, file: !14, line: 563, baseType: !2184, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2147, !2148, !13}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2128, file: !14, line: 565, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2148, !312, !312}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2128, file: !14, line: 567, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!312, !2098}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2128, file: !14, line: 571, baseType: !2144, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2128, file: !14, line: 574, baseType: !2144, size: 64, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2128, file: !14, line: 579, baseType: !2198, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!32, !2098, !312, !591, !32, !32}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !14, line: 585, baseType: !2202, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!292, !2098}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2128, file: !14, line: 615, baseType: !2206, size: 64, offset: 768)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!1719, !2098, !312}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2099, file: !1721, line: 359, baseType: !312, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2099, file: !1721, line: 361, baseType: !1315, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2099, file: !1721, line: 362, baseType: !591, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2099, file: !1721, line: 365, baseType: !371, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2099, file: !1721, line: 373, baseType: !2214, offset: 1472)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1721, line: 296, elements: !1587)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2095, file: !1721, line: 391, baseType: !1750, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2095, file: !1721, line: 392, baseType: !331, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2095, file: !1721, line: 394, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!312, !1315, !312, !312, !312, !312}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2095, file: !1721, line: 398, baseType: !312, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2095, file: !1721, line: 399, baseType: !312, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2095, file: !1721, line: 405, baseType: !312, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2095, file: !1721, line: 406, baseType: !312, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2095, file: !1721, line: 407, baseType: !2226, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2085, line: 286, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 286, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2228, file: !2085, line: 286, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2114, line: 18, baseType: !312)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2095, file: !1721, line: 416, baseType: !383, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2095, file: !1721, line: 428, baseType: !383, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2095, file: !1721, line: 437, baseType: !383, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2095, file: !1721, line: 447, baseType: !383, size: 32, offset: 672)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2095, file: !1721, line: 450, baseType: !371, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2095, file: !1721, line: 452, baseType: !32, size: 32, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2095, file: !1721, line: 454, baseType: !1670, offset: 800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2095, file: !1721, line: 457, baseType: !1755, size: 256, offset: 832)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2095, file: !1721, line: 459, baseType: !284, size: 128, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2095, file: !1721, line: 466, baseType: !312, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2095, file: !1721, line: 467, baseType: !312, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2095, file: !1721, line: 469, baseType: !312, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2095, file: !1721, line: 470, baseType: !312, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2095, file: !1721, line: 471, baseType: !373, size: 64, offset: 1472)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2095, file: !1721, line: 472, baseType: !312, size: 64, offset: 1536)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2095, file: !1721, line: 473, baseType: !312, size: 64, offset: 1600)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2095, file: !1721, line: 474, baseType: !312, size: 64, offset: 1664)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2095, file: !1721, line: 475, baseType: !312, size: 64, offset: 1728)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2095, file: !1721, line: 477, baseType: !1670, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1792)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1920)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1984)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2112)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2240)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2304)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2368)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2432)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2095, file: !1721, line: 482, baseType: !2263, size: 2816, offset: 2496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 44)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2095, file: !1721, line: 488, baseType: !2267, size: 256, offset: 5312)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2268, line: 60, size: 256, elements: !2269)
!2268 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !2268, line: 61, baseType: !2271, size: 256)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2095, file: !1721, line: 490, baseType: !2275, size: 64, offset: 5568)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1721, line: 490, flags: DIFlagFwdDecl)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2095, file: !1721, line: 493, baseType: !2278, size: 896, offset: 5632)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2279, line: 53, baseType: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2279, line: 13, size: 896, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2288, !2289, !2290, !2291, !2311, !2312, !2313}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2280, file: !2279, line: 18, baseType: !331, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2280, file: !2279, line: 28, baseType: !373, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2280, file: !2279, line: 31, baseType: !1755, size: 256, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2280, file: !2279, line: 32, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2279, line: 32, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2280, file: !2279, line: 37, baseType: !476, size: 16, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 40, baseType: !1665, size: 192, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2280, file: !2279, line: 41, baseType: !591, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2280, file: !2279, line: 42, baseType: !2292, size: 64, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2295, line: 13, size: 896, elements: !2296)
!2295 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2294, file: !2295, line: 14, baseType: !591, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2295, line: 15, baseType: !312, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2294, file: !2295, line: 19, baseType: !998, size: 64, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2294, file: !2295, line: 21, baseType: !998, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2294, file: !2295, line: 22, baseType: !998, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2294, file: !2295, line: 23, baseType: !998, size: 64, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2294, file: !2295, line: 24, baseType: !998, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2294, file: !2295, line: 25, baseType: !998, size: 64, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2294, file: !2295, line: 26, baseType: !998, size: 64, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2294, file: !2295, line: 27, baseType: !998, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2294, file: !2295, line: 28, baseType: !998, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2294, file: !2295, line: 29, baseType: !998, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2280, file: !2279, line: 44, baseType: !383, size: 32, offset: 832)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2280, file: !2279, line: 50, baseType: !581, size: 16, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2280, file: !2279, line: 51, baseType: !2314, size: 16, offset: 880)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2095, file: !1721, line: 495, baseType: !312, size: 64, offset: 6528)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2095, file: !1721, line: 497, baseType: !2318, size: 64, offset: 6592)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1721, line: 381, size: 384, elements: !2320)
!2320 = !{!2321, !2322, !4226}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2319, file: !1721, line: 382, baseType: !383, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2319, file: !1721, line: 383, baseType: !2323, size: 128, offset: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1721, line: 376, size: 128, elements: !2324)
!2324 = !{!2325, !4224}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2323, file: !1721, line: 377, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2328, line: 640, size: 48640, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2336, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2351, !2369, !2380, !2461, !2462, !2463, !2474, !2475, !2477, !2478, !2479, !2480, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2591, !2593, !2594, !2595, !2607, !2608, !2609, !2610, !2611, !2612, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2636, !2641, !2949, !2950, !2951, !2952, !2953, !2956, !2959, !2962, !2965, !3687, !3783, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3831, !3832, !3833, !3834, !3835, !3840, !3841, !3842, !3845, !3846, !3849, !3852, !3855, !3858, !3890, !3893, !3894, !3973, !3974, !3977, !3978, !3981, !3982, !3983, !3987, !3988, !3989, !4002, !4003, !4004, !4014, !4019, !4020, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2327, file: !2328, line: 646, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2332, line: 56, size: 128, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2331, file: !2332, line: 57, baseType: !312, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2331, file: !2332, line: 58, baseType: !987, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2327, file: !2328, line: 649, baseType: !2337, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2327, file: !2328, line: 657, baseType: !591, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2327, file: !2328, line: 658, baseType: !568, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2328, line: 660, baseType: !7, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2327, file: !2328, line: 661, baseType: !7, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2327, file: !2328, line: 684, baseType: !32, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !2328, line: 686, baseType: !32, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2327, file: !2328, line: 687, baseType: !32, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2327, file: !2328, line: 688, baseType: !32, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2327, file: !2328, line: 689, baseType: !7, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2327, file: !2328, line: 691, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2328, line: 691, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2327, file: !2328, line: 692, baseType: !2352, size: 832, offset: 576)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2328, line: 451, size: 832, elements: !2353)
!2353 = !{!2354, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2352, file: !2328, line: 453, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2328, line: 325, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2355, file: !2328, line: 326, baseType: !312, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2355, file: !2328, line: 327, baseType: !987, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2352, file: !2328, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2352, file: !2328, line: 455, baseType: !284, size: 128, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2352, file: !2328, line: 456, baseType: !7, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2352, file: !2328, line: 458, baseType: !331, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2352, file: !2328, line: 459, baseType: !331, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2352, file: !2328, line: 460, baseType: !331, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2352, file: !2328, line: 461, baseType: !331, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2352, file: !2328, line: 463, baseType: !331, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2352, file: !2328, line: 465, baseType: !2368, offset: 832)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2328, line: 415, elements: !1587)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2327, file: !2328, line: 693, baseType: !2370, size: 384, offset: 1408)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2328, line: 489, size: 384, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2370, file: !2328, line: 490, baseType: !284, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2370, file: !2328, line: 491, baseType: !312, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2370, file: !2328, line: 492, baseType: !312, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2370, file: !2328, line: 493, baseType: !7, size: 32, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2370, file: !2328, line: 494, baseType: !476, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2370, file: !2328, line: 495, baseType: !476, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2370, file: !2328, line: 497, baseType: !2379, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2327, file: !2328, line: 697, baseType: !2381, size: 1792, offset: 1792)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2328, line: 507, size: 1792, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2458, !2459}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2381, file: !2328, line: 508, baseType: !433, size: 192, align: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2381, file: !2328, line: 515, baseType: !331, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2381, file: !2328, line: 516, baseType: !331, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2381, file: !2328, line: 517, baseType: !331, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2381, file: !2328, line: 518, baseType: !331, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2381, file: !2328, line: 519, baseType: !331, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2381, file: !2328, line: 526, baseType: !377, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2381, file: !2328, line: 527, baseType: !331, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !2328, line: 528, baseType: !7, size: 32, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2381, file: !2328, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2381, file: !2328, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2381, file: !2328, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2381, file: !2328, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2381, file: !2328, line: 563, baseType: !2397, size: 512, offset: 704)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2398)
!2398 = !{!2399, !2405, !2406, !2411, !2454, !2455, !2456, !2457}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !20, line: 119, baseType: !2400, size: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2401, line: 9, size: 256, elements: !2402)
!2401 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2400, file: !2401, line: 10, baseType: !433, size: 192, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2400, file: !2401, line: 11, baseType: !453, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2397, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2397, file: !20, line: 121, baseType: !2407, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!19, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2397, file: !20, line: 122, baseType: !2412, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2414)
!2414 = !{!2415, !2435, !2436, !2439, !2444, !2445, !2449, !2453}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2413, file: !20, line: 160, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !20, line: 215, baseType: !1761)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2417, file: !20, line: 216, baseType: !7, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2417, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2417, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2417, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2417, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2417, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2417, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2417, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2417, file: !20, line: 234, baseType: !2410, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2417, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2417, file: !20, line: 236, baseType: !2410, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2417, file: !20, line: 237, baseType: !2432, size: 4096, offset: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 4096, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2413, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2413, file: !20, line: 162, baseType: !2437, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2413, file: !20, line: 163, baseType: !2440, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2441, file: !1344, line: 276, baseType: !1348, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2413, file: !20, line: 164, baseType: !2410, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2413, file: !20, line: 165, baseType: !2446, size: 128, offset: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2401, line: 14, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2446, file: !2401, line: 15, baseType: !1747, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2413, file: !20, line: 166, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2397, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2397, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2397, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2381, file: !2328, line: 572, baseType: !2397, size: 512, offset: 1216)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2381, file: !2328, line: 580, baseType: !2460, size: 64, offset: 1728)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2327, file: !2328, line: 721, baseType: !7, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2327, file: !2328, line: 722, baseType: !32, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2327, file: !2328, line: 723, baseType: !2464, size: 64, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2467, line: 17, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2467, line: 17, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2468, file: !2467, line: 17, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 1)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2327, file: !2328, line: 724, baseType: !2466, size: 64, offset: 3712)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2327, file: !2328, line: 749, baseType: !2476, offset: 3776)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2328, line: 290, elements: !1587)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2327, file: !2328, line: 751, baseType: !284, size: 128, offset: 3776)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2327, file: !2328, line: 757, baseType: !2091, size: 64, offset: 3904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2327, file: !2328, line: 758, baseType: !2091, size: 64, offset: 3968)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2327, file: !2328, line: 761, baseType: !2481, size: 320, offset: 4032)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2268, line: 34, size: 320, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2481, file: !2268, line: 35, baseType: !331, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2481, file: !2268, line: 36, baseType: !2485, size: 256, offset: 64)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 256, elements: !2272)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2327, file: !2328, line: 766, baseType: !32, size: 32, offset: 4352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2327, file: !2328, line: 767, baseType: !32, size: 32, offset: 4384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2327, file: !2328, line: 768, baseType: !32, size: 32, offset: 4416)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2327, file: !2328, line: 770, baseType: !32, size: 32, offset: 4448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2327, file: !2328, line: 772, baseType: !312, size: 64, offset: 4480)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2327, file: !2328, line: 775, baseType: !7, size: 32, offset: 4544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2327, file: !2328, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2327, file: !2328, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2327, file: !2328, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2327, file: !2328, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2327, file: !2328, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2327, file: !2328, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2327, file: !2328, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2327, file: !2328, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2327, file: !2328, line: 831, baseType: !312, size: 64, offset: 4672)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2327, file: !2328, line: 833, baseType: !2502, size: 384, offset: 4736)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2503)
!2503 = !{!2504, !2509}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2502, file: !25, line: 26, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!998, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !25, line: 27, baseType: !2510, size: 320, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !25, line: 27, size: 320, elements: !2511)
!2511 = !{!2512, !2522, !2548}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2510, file: !25, line: 36, baseType: !2513, size: 320)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 29, size: 320, elements: !2514)
!2514 = !{!2515, !2517, !2518, !2519, !2520, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2513, file: !25, line: 30, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2513, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2513, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2513, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2513, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2513, file: !25, line: 35, baseType: !2516, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2510, file: !25, line: 46, baseType: !2523, size: 192)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 38, size: 192, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2547}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2523, file: !25, line: 39, baseType: !2437, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2523, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !25, line: 41, baseType: !2528, size: 64, offset: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !25, line: 41, size: 64, elements: !2529)
!2529 = !{!2530, !2538}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2528, file: !25, line: 42, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2533, line: 7, size: 128, elements: !2534)
!2533 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2532, file: !2533, line: 8, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2532, file: !2533, line: 9, baseType: !379, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2528, file: !25, line: 43, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2541, line: 7, size: 64, elements: !2542)
!2541 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2540, file: !2541, line: 8, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2541, line: 5, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2540, file: !2541, line: 9, baseType: !2545, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2523, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2510, file: !25, line: 54, baseType: !2549, size: 256)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 48, size: 256, elements: !2550)
!2550 = !{!2551, !2554, !2555, !2556, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2549, file: !25, line: 49, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2549, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2549, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2549, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2549, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2327, file: !2328, line: 835, baseType: !2559, size: 32, offset: 5120)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2327, file: !2328, line: 836, baseType: !2559, size: 32, offset: 5152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2327, file: !2328, line: 840, baseType: !312, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2327, file: !2328, line: 849, baseType: !2326, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2327, file: !2328, line: 852, baseType: !2326, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !2328, line: 857, baseType: !284, size: 128, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2327, file: !2328, line: 858, baseType: !284, size: 128, offset: 5504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2327, file: !2328, line: 859, baseType: !2326, size: 64, offset: 5632)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2327, file: !2328, line: 867, baseType: !284, size: 128, offset: 5696)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2327, file: !2328, line: 868, baseType: !284, size: 128, offset: 5824)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2327, file: !2328, line: 871, baseType: !2571, size: 64, offset: 5952)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2573, line: 59, size: 768, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2572, file: !2573, line: 61, baseType: !568, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2572, file: !2573, line: 62, baseType: !7, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !2573, line: 63, baseType: !1670, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2572, file: !2573, line: 65, baseType: !2579, size: 256, offset: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2572, file: !2573, line: 66, baseType: !1581, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2572, file: !2573, line: 68, baseType: !1889, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2572, file: !2573, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2572, file: !2573, line: 70, baseType: !2584, size: 128, offset: 640)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 128, elements: !2472)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2573, line: 54, size: 128, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2585, file: !2573, line: 55, baseType: !32, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2585, file: !2573, line: 56, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2573, line: 56, flags: DIFlagFwdDecl)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2327, file: !2328, line: 872, baseType: !2592, size: 512, offset: 6016)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2272)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2327, file: !2328, line: 873, baseType: !284, size: 128, offset: 6528)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2327, file: !2328, line: 874, baseType: !284, size: 128, offset: 6656)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2327, file: !2328, line: 876, baseType: !2596, size: 64, offset: 6784)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2598, line: 26, size: 192, elements: !2599)
!2598 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2597, file: !2598, line: 27, baseType: !7, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2597, file: !2598, line: 28, baseType: !2602, size: 128, offset: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2603, line: 43, size: 128, elements: !2604)
!2603 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2604 = !{!2605, !2606}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2602, file: !2603, line: 44, baseType: !1761)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2602, file: !2603, line: 45, baseType: !284, size: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2327, file: !2328, line: 879, baseType: !1001, size: 64, offset: 6848)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2327, file: !2328, line: 882, baseType: !1001, size: 64, offset: 6912)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2328, line: 884, baseType: !331, size: 64, offset: 6976)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2328, line: 885, baseType: !331, size: 64, offset: 7040)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2327, file: !2328, line: 890, baseType: !331, size: 64, offset: 7104)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2327, file: !2328, line: 891, baseType: !2613, size: 128, offset: 7168)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2328, line: 242, size: 128, elements: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2613, file: !2328, line: 244, baseType: !331, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2613, file: !2328, line: 245, baseType: !331, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2613, file: !2328, line: 246, baseType: !1761, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2327, file: !2328, line: 900, baseType: !312, size: 64, offset: 7296)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2327, file: !2328, line: 901, baseType: !312, size: 64, offset: 7360)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2327, file: !2328, line: 904, baseType: !331, size: 64, offset: 7424)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2327, file: !2328, line: 907, baseType: !331, size: 64, offset: 7488)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2327, file: !2328, line: 910, baseType: !312, size: 64, offset: 7552)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2327, file: !2328, line: 911, baseType: !312, size: 64, offset: 7616)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2327, file: !2328, line: 914, baseType: !2625, size: 640, offset: 7680)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2626, line: 123, size: 640, elements: !2627)
!2626 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2627 = !{!2628, !2634, !2635}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2625, file: !2626, line: 124, baseType: !2629, size: 576)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2630, size: 576, elements: !1592)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2626, line: 108, size: 192, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2630, file: !2626, line: 109, baseType: !331, size: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2630, file: !2626, line: 110, baseType: !2446, size: 128, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2625, file: !2626, line: 125, baseType: !7, size: 32, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2625, file: !2626, line: 126, baseType: !7, size: 32, offset: 608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2327, file: !2328, line: 917, baseType: !2637, size: 192, offset: 8320)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2626, line: 134, size: 192, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2637, file: !2626, line: 135, baseType: !299, size: 128, align: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2637, file: !2626, line: 136, baseType: !7, size: 32, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2327, file: !2328, line: 923, baseType: !2642, size: 64, offset: 8512)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2645, line: 111, size: 1280, elements: !2646)
!2645 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2666, !2667, !2668, !2669, !2670, !2671, !2776, !2777, !2778, !2779, !2780, !2936, !2944}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2644, file: !2645, line: 112, baseType: !383, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2644, file: !2645, line: 120, baseType: !1382, size: 32, offset: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2644, file: !2645, line: 121, baseType: !1390, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2644, file: !2645, line: 122, baseType: !1382, size: 32, offset: 96)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2644, file: !2645, line: 123, baseType: !1390, size: 32, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2644, file: !2645, line: 124, baseType: !1382, size: 32, offset: 160)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2644, file: !2645, line: 125, baseType: !1390, size: 32, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2644, file: !2645, line: 126, baseType: !1382, size: 32, offset: 224)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2644, file: !2645, line: 127, baseType: !1390, size: 32, offset: 256)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2644, file: !2645, line: 128, baseType: !7, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2644, file: !2645, line: 129, baseType: !2658, size: 64, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2659, line: 26, baseType: !2660)
!2659 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2659, line: 24, size: 64, elements: !2661)
!2661 = !{!2662}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2660, file: !2659, line: 25, baseType: !2663, size: 64)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2664)
!2664 = !{!2665}
!2665 = !DISubrange(count: 2)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2644, file: !2645, line: 130, baseType: !2658, size: 64, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2644, file: !2645, line: 131, baseType: !2658, size: 64, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2644, file: !2645, line: 132, baseType: !2658, size: 64, offset: 512)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2644, file: !2645, line: 133, baseType: !2658, size: 64, offset: 576)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2644, file: !2645, line: 135, baseType: !482, size: 8, offset: 640)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2644, file: !2645, line: 137, baseType: !2672, size: 64, offset: 704)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2674, line: 189, size: 1664, elements: !2675)
!2674 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2675 = !{!2676, !2677, !2680, !2685, !2686, !2689, !2690, !2695, !2696, !2697, !2698, !2700, !2701, !2702, !2703, !2704, !2740, !2761}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2673, file: !2674, line: 190, baseType: !568, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2673, file: !2674, line: 191, baseType: !2678, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2674, line: 28, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2545)
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 192, baseType: !2681, size: 192, offset: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 192, size: 192, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2681, file: !2674, line: 193, baseType: !284, size: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2681, file: !2674, line: 194, baseType: !433, size: 192, align: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2673, file: !2674, line: 199, baseType: !1755, size: 256, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2673, file: !2674, line: 200, baseType: !2687, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2674, line: 200, flags: DIFlagFwdDecl)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2673, file: !2674, line: 201, baseType: !591, size: 64, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 202, baseType: !2691, size: 64, offset: 640)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 202, size: 64, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2691, file: !2674, line: 203, baseType: !1483, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2691, file: !2674, line: 204, baseType: !1483, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2673, file: !2674, line: 206, baseType: !1483, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2673, file: !2674, line: 207, baseType: !1382, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2673, file: !2674, line: 208, baseType: !1390, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2673, file: !2674, line: 209, baseType: !2699, size: 32, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2674, line: 31, baseType: !1502)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2673, file: !2674, line: 210, baseType: !476, size: 16, offset: 864)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2673, file: !2674, line: 211, baseType: !476, size: 16, offset: 880)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2673, file: !2674, line: 215, baseType: !625, size: 16, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2673, file: !2674, line: 222, baseType: !312, size: 64, offset: 960)
!2704 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 239, baseType: !2705, size: 320, offset: 1024)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 239, size: 320, elements: !2706)
!2706 = !{!2707, !2732}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2705, file: !2674, line: 240, baseType: !2708, size: 320)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2674, line: 108, size: 320, elements: !2709)
!2709 = !{!2710, !2711, !2721, !2724, !2731}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2708, file: !2674, line: 110, baseType: !312, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2708, file: !2674, line: 111, baseType: !2712, size: 64, offset: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2708, file: !2674, line: 111, size: 64, elements: !2713)
!2713 = !{!2714, !2720}
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2674, line: 112, baseType: !2715, size: 64)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2712, file: !2674, line: 112, size: 64, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2715, file: !2674, line: 114, baseType: !581, size: 16)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2715, file: !2674, line: 115, baseType: !2719, size: 48, offset: 16)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2712, file: !2674, line: 121, baseType: !312, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2708, file: !2674, line: 123, baseType: !2722, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2674, line: 96, flags: DIFlagFwdDecl)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2708, file: !2674, line: 124, baseType: !2725, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2674, line: 102, size: 192, elements: !2727)
!2727 = !{!2728, !2729, !2730}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2726, file: !2674, line: 103, baseType: !299, size: 128, align: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2726, file: !2674, line: 104, baseType: !568, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2726, file: !2674, line: 105, baseType: !771, size: 8, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2708, file: !2674, line: 125, baseType: !292, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !2674, line: 241, baseType: !2733, size: 320)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2674, line: 241, size: 320, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2739}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2733, file: !2674, line: 242, baseType: !312, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2733, file: !2674, line: 243, baseType: !312, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2733, file: !2674, line: 244, baseType: !2722, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2733, file: !2674, line: 245, baseType: !2725, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2733, file: !2674, line: 246, baseType: !1038, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 254, baseType: !2741, size: 256, offset: 1344)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 254, size: 256, elements: !2742)
!2742 = !{!2743, !2749}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2741, file: !2674, line: 255, baseType: !2744, size: 256)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2674, line: 128, size: 256, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2744, file: !2674, line: 129, baseType: !591, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2744, file: !2674, line: 130, baseType: !2748, size: 256)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2272)
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2674, line: 256, baseType: !2750, size: 256)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2741, file: !2674, line: 256, size: 256, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2750, file: !2674, line: 258, baseType: !284, size: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2750, file: !2674, line: 259, baseType: !2754, size: 128, offset: 128)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2755, line: 22, size: 128, elements: !2756)
!2755 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2756 = !{!2757, !2760}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2754, file: !2755, line: 23, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2755, line: 23, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2754, file: !2755, line: 24, baseType: !312, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2673, file: !2674, line: 274, baseType: !2762, size: 64, offset: 1600)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2674, line: 170, size: 192, elements: !2764)
!2764 = !{!2765, !2774, !2775}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2763, file: !2674, line: 171, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2674, line: 165, baseType: !2767)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!32, !2672, !2770, !2772, !2672}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2723)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2744)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2763, file: !2674, line: 172, baseType: !2672, size: 64, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2763, file: !2674, line: 173, baseType: !2722, size: 64, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2644, file: !2645, line: 138, baseType: !2672, size: 64, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2644, file: !2645, line: 139, baseType: !2672, size: 64, offset: 832)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2644, file: !2645, line: 140, baseType: !2672, size: 64, offset: 896)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2644, file: !2645, line: 145, baseType: !1953, size: 64, offset: 960)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2644, file: !2645, line: 146, baseType: !2781, size: 64, offset: 1024)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2783, line: 56, size: 4160, elements: !2784)
!2783 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2784 = !{!2785, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2824, !2825, !2826, !2827, !2828, !2840, !2921, !2922, !2934}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2782, file: !2783, line: 57, baseType: !2786, size: 576)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2783, line: 23, size: 576, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2786, file: !2783, line: 24, baseType: !987, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2783, line: 25, baseType: !2790, size: 512, offset: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2783, line: 25, size: 512, elements: !2791)
!2791 = !{!2792, !2801}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2790, file: !2783, line: 26, baseType: !2793, size: 480)
!2793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2794, size: 480, elements: !2799)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2783, line: 17, size: 96, elements: !2795)
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2794, file: !2783, line: 18, baseType: !987, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2794, file: !2783, line: 19, baseType: !987, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2794, file: !2783, line: 20, baseType: !987, size: 32, offset: 64)
!2799 = !{!2800}
!2800 = !DISubrange(count: 5)
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2790, file: !2783, line: 27, baseType: !2802, size: 128)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2790, file: !2783, line: 27, size: 128, elements: !2803)
!2803 = !{!2804, !2806}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2802, file: !2783, line: 28, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2802, file: !2783, line: 29, baseType: !2805, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2782, file: !2783, line: 58, baseType: !2786, size: 576, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2782, file: !2783, line: 59, baseType: !2786, size: 576, offset: 1152)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2782, file: !2783, line: 60, baseType: !383, size: 32, offset: 1728)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2782, file: !2783, line: 61, baseType: !2781, size: 64, offset: 1792)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2782, file: !2783, line: 62, baseType: !32, size: 32, offset: 1856)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2782, file: !2783, line: 63, baseType: !1382, size: 32, offset: 1888)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2782, file: !2783, line: 64, baseType: !1390, size: 32, offset: 1920)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2782, file: !2783, line: 65, baseType: !2815, size: 192, offset: 1984)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2816, line: 7, size: 192, elements: !2817)
!2816 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2819, !2823}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2815, file: !2816, line: 8, baseType: !371, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2815, file: !2816, line: 9, baseType: !2820, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2816, line: 5, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2815, file: !2816, line: 10, baseType: !7, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2782, file: !2783, line: 66, baseType: !312, size: 64, offset: 2176)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2782, file: !2783, line: 74, baseType: !284, size: 128, offset: 2240)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2782, file: !2783, line: 75, baseType: !2672, size: 64, offset: 2368)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2782, file: !2783, line: 76, baseType: !1755, size: 256, offset: 2432)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2782, file: !2783, line: 83, baseType: !2829, size: 256, offset: 2688)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2830, line: 102, size: 256, elements: !2831)
!2830 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2831 = !{!2832, !2833, !2834}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2829, file: !2830, line: 103, baseType: !371, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2829, file: !2830, line: 104, baseType: !284, size: 128, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2829, file: !2830, line: 105, baseType: !2835, size: 64, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2830, line: 21, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{null, !2839}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2782, file: !2783, line: 85, baseType: !2841, size: 768, offset: 2944)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2842, line: 156, size: 768, elements: !2843)
!2842 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2843 = !{!2844, !2849}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2841, file: !2842, line: 157, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!32, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2841, file: !2842, line: 158, baseType: !2850, size: 704, offset: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2842, line: 150, size: 704, elements: !2851)
!2851 = !{!2852, !2920}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2850, file: !2842, line: 152, baseType: !2853, size: 640)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2842, line: 131, size: 640, elements: !2854)
!2854 = !{!2855, !2888, !2889, !2890, !2910, !2911, !2913, !2919}
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2853, file: !2842, line: 132, baseType: !2856, size: 192)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2853, file: !2842, line: 132, size: 192, elements: !2857)
!2857 = !{!2858, !2887}
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !2842, line: 133, baseType: !2859, size: 192)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2856, file: !2842, line: 133, size: 192, elements: !2860)
!2860 = !{!2861, !2884, !2885, !2886}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2859, file: !2842, line: 134, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2842, line: 112, size: 512, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869, !2870, !2876, !2882, !2883}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2863, file: !2842, line: 113, baseType: !292, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2863, file: !2842, line: 114, baseType: !591, size: 64, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2863, file: !2842, line: 115, baseType: !32, size: 32, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2863, file: !2842, line: 116, baseType: !1379, size: 16, offset: 160)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2863, file: !2842, line: 117, baseType: !2862, size: 64, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2863, file: !2842, line: 118, baseType: !2871, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2842, line: 47, baseType: !2873)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!32, !2862, !32, !591, !2875, !1694}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2863, file: !2842, line: 119, baseType: !2877, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2842, line: 94, size: 192, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2878, file: !2842, line: 95, baseType: !383, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2878, file: !2842, line: 96, baseType: !1889, size: 128, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2863, file: !2842, line: 120, baseType: !591, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2863, file: !2842, line: 121, baseType: !591, size: 64, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2859, file: !2842, line: 135, baseType: !32, size: 32, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2859, file: !2842, line: 136, baseType: !32, size: 32, offset: 96)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2859, file: !2842, line: 137, baseType: !32, size: 32, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2856, file: !2842, line: 139, baseType: !299, size: 128, align: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2853, file: !2842, line: 141, baseType: !2596, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2853, file: !2842, line: 142, baseType: !2862, size: 64, offset: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2853, file: !2842, line: 143, baseType: !2891, size: 64, offset: 320)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2842, line: 161, size: 960, elements: !2893)
!2893 = !{!2894, !2895, !2899, !2906}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2892, file: !2842, line: 162, baseType: !2841, size: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2892, file: !2842, line: 163, baseType: !2896, size: 64, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!2848, !2891}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2892, file: !2842, line: 164, baseType: !2900, size: 64, offset: 832)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{null, !2903, !2862, !2904, !2905}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2892, file: !2842, line: 167, baseType: !2907, size: 64, offset: 896)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!32, !2903, !2862}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2853, file: !2842, line: 144, baseType: !2848, size: 64, offset: 384)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2853, file: !2842, line: 145, baseType: !2912, size: 64, offset: 448)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2853, file: !2842, line: 146, baseType: !2914, size: 64, offset: 512)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2842, line: 124, size: 256, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2915, file: !2842, line: 125, baseType: !433, size: 192, align: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2915, file: !2842, line: 126, baseType: !2903, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2853, file: !2842, line: 147, baseType: !1581, size: 64, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2850, file: !2842, line: 153, baseType: !1750, size: 64, offset: 640)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2782, file: !2783, line: 86, baseType: !2903, size: 64, offset: 3712)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2782, file: !2783, line: 88, baseType: !2923, size: 64, offset: 3776)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2783, line: 92, size: 576, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2924, file: !2783, line: 93, baseType: !276, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2924, file: !2783, line: 94, baseType: !2781, size: 64, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2924, file: !2783, line: 95, baseType: !1382, size: 32, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2924, file: !2783, line: 96, baseType: !32, size: 32, offset: 224)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2924, file: !2783, line: 97, baseType: !2931, size: 320, offset: 256)
!2931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2932)
!2932 = !{!2933}
!2933 = !DISubrange(count: 10)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2782, file: !2783, line: 89, baseType: !2935, size: 320, offset: 3840)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2932)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2644, file: !2645, line: 147, baseType: !2937, size: 64, offset: 1088)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2645, line: 25, size: 64, elements: !2939)
!2939 = !{!2940, !2941, !2942}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2938, file: !2645, line: 26, baseType: !383, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2938, file: !2645, line: 27, baseType: !32, size: 32, offset: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2938, file: !2645, line: 28, baseType: !2943, offset: 64)
!2943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2944 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 149, baseType: !2945, size: 128, offset: 1152)
!2945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 149, size: 128, elements: !2946)
!2946 = !{!2947, !2948}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2945, file: !2645, line: 150, baseType: !32, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2945, file: !2645, line: 151, baseType: !299, size: 128, align: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2327, file: !2328, line: 926, baseType: !2642, size: 64, offset: 8576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2327, file: !2328, line: 929, baseType: !2642, size: 64, offset: 8640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2327, file: !2328, line: 933, baseType: !2672, size: 64, offset: 8704)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2327, file: !2328, line: 943, baseType: !267, size: 128, offset: 8768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2327, file: !2328, line: 945, baseType: !2954, size: 64, offset: 8896)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2328, line: 49, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2327, file: !2328, line: 956, baseType: !2957, size: 64, offset: 8960)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2328, line: 45, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !2328, line: 959, baseType: !2960, size: 64, offset: 9024)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2328, line: 959, flags: DIFlagFwdDecl)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2327, file: !2328, line: 962, baseType: !2963, size: 64, offset: 9088)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2328, line: 66, flags: DIFlagFwdDecl)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2327, file: !2328, line: 966, baseType: !2966, size: 64, offset: 9152)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2968, line: 31, size: 576, elements: !2969)
!2968 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2969 = !{!2970, !2971, !2974, !2977, !2980, !2981, !3670, !3673, !3674}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2967, file: !2968, line: 32, baseType: !383, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2967, file: !2968, line: 33, baseType: !2972, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2968, line: 9, flags: DIFlagFwdDecl)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2967, file: !2968, line: 34, baseType: !2975, size: 64, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2968, line: 10, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2967, file: !2968, line: 35, baseType: !2978, size: 64, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2968, line: 8, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2967, file: !2968, line: 36, baseType: !2589, size: 64, offset: 256)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2967, file: !2968, line: 37, baseType: !2982, size: 64, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2984, line: 56, size: 16896, elements: !2985)
!2984 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3007, !3008, !3009, !3013, !3014, !3015, !3016, !3017, !3020, !3022, !3023, !3038, !3039, !3040, !3041, !3051, !3121, !3127, !3133, !3146, !3455, !3609, !3616, !3619, !3642, !3643, !3669}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2983, file: !2984, line: 60, baseType: !568, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2983, file: !2984, line: 63, baseType: !568, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2983, file: !2984, line: 66, baseType: !1670, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2983, file: !2984, line: 68, baseType: !7, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2983, file: !2984, line: 70, baseType: !7, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2983, file: !2984, line: 71, baseType: !32, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2983, file: !2984, line: 73, baseType: !1670, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2983, file: !2984, line: 74, baseType: !383, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2983, file: !2984, line: 76, baseType: !284, size: 128, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2983, file: !2984, line: 77, baseType: !284, size: 128, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2983, file: !2984, line: 83, baseType: !1323, size: 64, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2983, file: !2984, line: 86, baseType: !2725, size: 64, offset: 512)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2983, file: !2984, line: 88, baseType: !2781, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2983, file: !2984, line: 89, baseType: !2923, size: 64, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2983, file: !2984, line: 90, baseType: !3001, size: 192, offset: 704)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3002, line: 19, size: 192, elements: !3003)
!3002 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3003 = !{!3004, !3005, !3006}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3001, file: !3002, line: 20, baseType: !1737, size: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3001, file: !3002, line: 21, baseType: !7, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3001, file: !3002, line: 22, baseType: !7, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2983, file: !2984, line: 92, baseType: !2815, size: 192, offset: 896)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2983, file: !2984, line: 94, baseType: !284, size: 128, offset: 1088)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2983, file: !2984, line: 95, baseType: !3010, size: 64, offset: 1216)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3012, line: 123, flags: DIFlagFwdDecl)
!3012 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2983, file: !2984, line: 96, baseType: !3010, size: 64, offset: 1280)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2983, file: !2984, line: 99, baseType: !2841, size: 768, offset: 1344)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2983, file: !2984, line: 102, baseType: !445, size: 64, offset: 2112)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2983, file: !2984, line: 103, baseType: !445, size: 64, offset: 2176)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2983, file: !2984, line: 105, baseType: !3018, size: 64, offset: 2240)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2984, line: 48, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2983, file: !2984, line: 107, baseType: !3021, size: 64, offset: 2304)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2983, file: !2984, line: 108, baseType: !3021, size: 64, offset: 2368)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2983, file: !2984, line: 109, baseType: !3024, size: 64, offset: 2432)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3025, line: 70, size: 64, elements: !3026)
!3025 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3024, file: !3025, line: 71, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3025, line: 54, size: 192, elements: !3030)
!3030 = !{!3031, !3036, !3037}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3029, file: !3025, line: 55, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3025, line: 51, baseType: !3033)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!32, !3028, !312, !591}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3029, file: !3025, line: 56, baseType: !3028, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3029, file: !3025, line: 57, baseType: !32, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2983, file: !2984, line: 114, baseType: !987, size: 32, offset: 2496)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2983, file: !2984, line: 116, baseType: !290, size: 64, offset: 2560)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2983, file: !2984, line: 119, baseType: !284, size: 128, offset: 2624)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2983, file: !2984, line: 121, baseType: !3042, size: 256, offset: 2752)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3043, line: 8, size: 256, elements: !3044)
!3043 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !{!3045, !3046, !3047, !3048}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3042, file: !3043, line: 10, baseType: !2903, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3042, file: !3043, line: 12, baseType: !32, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3042, file: !3043, line: 15, baseType: !1001, size: 64, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3042, file: !3043, line: 16, baseType: !3049, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3043, line: 6, flags: DIFlagFwdDecl)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2983, file: !2984, line: 122, baseType: !3052, size: 832, offset: 3008)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3053, line: 7, size: 832, elements: !3054)
!3053 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3054 = !{!3055, !3062, !3073, !3081, !3089, !3090, !3098, !3106, !3107, !3108, !3109, !3110, !3116}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3052, file: !3053, line: 8, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3058, line: 92, size: 1024, elements: !3059)
!3058 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3059 = !{!3060}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3057, file: !3058, line: 93, baseType: !3061, size: 1024)
!3061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3052, file: !3053, line: 9, baseType: !3063, size: 64, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3058, line: 51, size: 2368, elements: !3065)
!3065 = !{!3066, !3070}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3064, file: !3058, line: 53, baseType: !3067, size: 2368)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3068)
!3068 = !{!3069}
!3069 = !DISubrange(count: 37)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3064, file: !3058, line: 54, baseType: !3071, offset: 2368)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3072, line: 68, elements: !1587)
!3072 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3052, file: !3053, line: 10, baseType: !3074, size: 64, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3058, line: 104, size: 7936, elements: !3076)
!3076 = !{!3077}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3075, file: !3058, line: 105, baseType: !3078, size: 7936)
!3078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3079)
!3079 = !{!3080}
!3080 = !DISubrange(count: 124)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3052, file: !3053, line: 11, baseType: !3082, size: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3058, line: 98, size: 576, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3083, file: !3058, line: 99, baseType: !3086, size: 576)
!3086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3087)
!3087 = !{!3088}
!3088 = !DISubrange(count: 9)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3052, file: !3053, line: 12, baseType: !3082, size: 64, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3052, file: !3053, line: 13, baseType: !3091, size: 64, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3058, line: 59, size: 1792, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3092, file: !3058, line: 60, baseType: !3095, size: 1792)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3096)
!3096 = !{!3097}
!3097 = !DISubrange(count: 28)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3052, file: !3053, line: 14, baseType: !3099, size: 64, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3058, line: 64, size: 32768, elements: !3101)
!3101 = !{!3102}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3100, file: !3058, line: 65, baseType: !3103, size: 32768)
!3103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3104)
!3104 = !{!3105}
!3105 = !DISubrange(count: 512)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3052, file: !3053, line: 17, baseType: !3010, size: 64, offset: 448)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3052, file: !3053, line: 18, baseType: !3082, size: 64, offset: 512)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3052, file: !3053, line: 19, baseType: !3082, size: 64, offset: 576)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3052, file: !3053, line: 20, baseType: !3063, size: 64, offset: 640)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3052, file: !3053, line: 21, baseType: !3111, size: 64, offset: 704)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3058, line: 71, size: 384, elements: !3113)
!3113 = !{!3114}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3112, file: !3058, line: 72, baseType: !3115, size: 384)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3052, file: !3053, line: 22, baseType: !3117, size: 64, offset: 768)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3058, line: 81, size: 32768, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3118, file: !3058, line: 82, baseType: !3103, size: 32768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2983, file: !2984, line: 123, baseType: !3122, size: 256, offset: 3840)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3123, line: 11, size: 256, elements: !3124)
!3123 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3124 = !{!3125, !3126}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3122, file: !3123, line: 12, baseType: !1665, size: 192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3122, file: !3123, line: 13, baseType: !1581, size: 64, offset: 192)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2983, file: !2984, line: 124, baseType: !3128, size: 128, offset: 4096)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3129, line: 9, size: 128, elements: !3130)
!3129 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3128, file: !3129, line: 10, baseType: !32, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3128, file: !3129, line: 11, baseType: !2903, size: 64, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2983, file: !2984, line: 125, baseType: !3134, size: 512, offset: 4224)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3135, line: 11, size: 512, elements: !3136)
!3135 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3136 = !{!3137, !3138, !3139, !3140, !3141}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3134, file: !3135, line: 12, baseType: !1750, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3134, file: !3135, line: 13, baseType: !3021, size: 64, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3134, file: !3135, line: 15, baseType: !7, size: 32, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3134, file: !3135, line: 16, baseType: !987, size: 32, offset: 160)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3134, file: !3135, line: 17, baseType: !3142, size: 320, offset: 192)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3025, line: 65, size: 320, elements: !3143)
!3143 = !{!3144, !3145}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3142, file: !3025, line: 66, baseType: !1755, size: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3142, file: !3025, line: 67, baseType: !3028, size: 64, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2983, file: !2984, line: 126, baseType: !3147, size: 5440, offset: 4736)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3148, line: 43, size: 5440, elements: !3149)
!3148 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3158, !3159, !3162, !3163, !3164, !3165, !3166, !3167, !3169, !3170, !3173, !3174, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3399, !3400, !3401, !3402, !3403, !3411, !3412, !3413, !3417, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3437, !3438, !3440, !3441, !3444, !3445, !3446, !3447, !3448}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3147, file: !3148, line: 45, baseType: !2903, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3147, file: !3148, line: 46, baseType: !2903, size: 64, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3147, file: !3148, line: 47, baseType: !2903, size: 64, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3147, file: !3148, line: 48, baseType: !2903, size: 64, offset: 192)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3147, file: !3148, line: 49, baseType: !2903, size: 64, offset: 256)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3147, file: !3148, line: 51, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3148, line: 16, flags: DIFlagFwdDecl)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3147, file: !3148, line: 52, baseType: !3156, size: 64, offset: 384)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3147, file: !3148, line: 53, baseType: !3160, size: 64, offset: 448)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3148, line: 53, flags: DIFlagFwdDecl)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3147, file: !3148, line: 54, baseType: !1665, size: 192, offset: 512)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3147, file: !3148, line: 62, baseType: !771, size: 8, offset: 704)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3147, file: !3148, line: 66, baseType: !3021, size: 64, offset: 768)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3147, file: !3148, line: 67, baseType: !771, size: 8, offset: 832)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3147, file: !3148, line: 68, baseType: !445, size: 64, offset: 896)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3147, file: !3148, line: 70, baseType: !3168, size: 64, offset: 960)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3147, file: !3148, line: 71, baseType: !445, size: 64, offset: 1024)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3147, file: !3148, line: 73, baseType: !3171, size: 64, offset: 1088)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3148, line: 73, flags: DIFlagFwdDecl)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3147, file: !3148, line: 74, baseType: !3168, size: 64, offset: 1152)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3147, file: !3148, line: 75, baseType: !3175, size: 64, offset: 1216)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3177, line: 9, size: 1728, elements: !3178)
!3177 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3310, !3311, !3312, !3313, !3314}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3176, file: !3177, line: 11, baseType: !998, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3176, file: !3177, line: 12, baseType: !998, size: 64, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3176, file: !3177, line: 13, baseType: !32, size: 32, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3176, file: !3177, line: 14, baseType: !32, size: 32, offset: 160)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3176, file: !3177, line: 15, baseType: !3184, size: 64, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3177, line: 98, size: 960, elements: !3186)
!3186 = !{!3187, !3188, !3260, !3264, !3265, !3266, !3267, !3308, !3309}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3185, file: !3177, line: 99, baseType: !7, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3185, file: !3177, line: 101, baseType: !3189, size: 64, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{null, !3192, !3258}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3177, line: 77, size: 1408, elements: !3194)
!3194 = !{!3195, !3201, !3234, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3193, file: !3177, line: 78, baseType: !3196, size: 64)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3197, line: 17, size: 64, elements: !3198)
!3197 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3198 = !{!3199}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3196, file: !3197, line: 18, baseType: !3200, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3193, file: !3177, line: 82, baseType: !3202, size: 352, offset: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3193, file: !3177, line: 79, size: 352, elements: !3203)
!3203 = !{!3204, !3214}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3202, file: !3177, line: 80, baseType: !3205, size: 160)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3177, line: 41, size: 160, elements: !3206)
!3206 = !{!3207, !3209, !3210, !3211, !3212, !3213}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3205, file: !3177, line: 42, baseType: !3208, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3205, file: !3177, line: 43, baseType: !3208, size: 32, offset: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3205, file: !3177, line: 44, baseType: !987, size: 32, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3205, file: !3177, line: 45, baseType: !987, size: 32, offset: 96)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3205, file: !3177, line: 46, baseType: !535, size: 16, offset: 128)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3205, file: !3177, line: 47, baseType: !581, size: 16, offset: 144)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3202, file: !3177, line: 81, baseType: !3215, size: 352)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3177, line: 50, size: 352, elements: !3216)
!3216 = !{!3217, !3230, !3231, !3232, !3233}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3215, file: !3177, line: 51, baseType: !3218, size: 128)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3219, line: 33, size: 128, elements: !3220)
!3219 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3220 = !{!3221}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3218, file: !3219, line: 40, baseType: !3222, size: 128)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3218, file: !3219, line: 34, size: 128, elements: !3223)
!3223 = !{!3224, !3226, !3228}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3222, file: !3219, line: 35, baseType: !3225, size: 128)
!3225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3222, file: !3219, line: 37, baseType: !3227, size: 128)
!3227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2433)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3222, file: !3219, line: 38, baseType: !3229, size: 128)
!3229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 128, elements: !2272)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3215, file: !3177, line: 52, baseType: !3218, size: 128, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3215, file: !3177, line: 53, baseType: !987, size: 32, offset: 256)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3215, file: !3177, line: 54, baseType: !3208, size: 32, offset: 288)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3215, file: !3177, line: 55, baseType: !987, size: 32, offset: 320)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3193, file: !3177, line: 83, baseType: !3235, size: 320, offset: 448)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3236, line: 11, size: 320, elements: !3237)
!3236 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3237 = !{!3238, !3239, !3240, !3245}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3235, file: !3236, line: 16, baseType: !276, size: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3235, file: !3236, line: 17, baseType: !312, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3235, file: !3236, line: 18, baseType: !3241, size: 64, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{null, !3244}
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3235, file: !3236, line: 19, baseType: !987, size: 32, offset: 256)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3193, file: !3177, line: 84, baseType: !1670, offset: 768)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3193, file: !3177, line: 85, baseType: !568, size: 32, offset: 768)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3193, file: !3177, line: 86, baseType: !1750, size: 64, offset: 832)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3193, file: !3177, line: 87, baseType: !415, size: 64, offset: 896)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3193, file: !3177, line: 88, baseType: !415, size: 64, offset: 960)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3193, file: !3177, line: 89, baseType: !453, size: 64, offset: 1024)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3193, file: !3177, line: 90, baseType: !32, size: 32, offset: 1088)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3193, file: !3177, line: 91, baseType: !32, size: 32, offset: 1120)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3193, file: !3177, line: 92, baseType: !481, size: 8, offset: 1152)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3193, file: !3177, line: 93, baseType: !581, size: 16, offset: 1168)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3193, file: !3177, line: 94, baseType: !3175, size: 64, offset: 1216)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3193, file: !3177, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3185, file: !3177, line: 103, baseType: !3261, size: 64, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{null, !3192}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3185, file: !3177, line: 104, baseType: !3241, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3185, file: !3177, line: 105, baseType: !2051, size: 64, offset: 256)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3185, file: !3177, line: 106, baseType: !292, size: 64, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3185, file: !3177, line: 107, baseType: !3268, size: 320, offset: 384)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3197, line: 56, size: 320, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3282, !3284}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3268, file: !3197, line: 57, baseType: !581, size: 16)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3268, file: !3197, line: 58, baseType: !581, size: 16, offset: 16)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3268, file: !3197, line: 59, baseType: !581, size: 16, offset: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3268, file: !3197, line: 60, baseType: !581, size: 16, offset: 48)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3268, file: !3197, line: 61, baseType: !7, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3268, file: !3197, line: 62, baseType: !581, size: 16, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3268, file: !3197, line: 63, baseType: !771, size: 8, offset: 112)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3268, file: !3197, line: 64, baseType: !3278, size: 64, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3197, line: 38, baseType: !3279)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!987, !3258, !987, !987}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3268, file: !3197, line: 65, baseType: !3283, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3197, line: 39, baseType: !3279)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3268, file: !3197, line: 66, baseType: !3285, size: 64, offset: 256)
!3285 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3197, line: 40, baseType: !3286)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!32, !3289, !3258}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3197, line: 33, size: 128, elements: !3291)
!3291 = !{!3292, !3307}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3290, file: !3197, line: 34, baseType: !3293, size: 64)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3197, line: 81, size: 1024, elements: !3295)
!3295 = !{!3296, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3294, file: !3197, line: 82, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3197, line: 26, flags: DIFlagFwdDecl)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3294, file: !3197, line: 83, baseType: !7, size: 32, offset: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3294, file: !3197, line: 84, baseType: !7, size: 32, offset: 96)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3294, file: !3197, line: 85, baseType: !3268, size: 320, offset: 128)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3294, file: !3197, line: 86, baseType: !771, size: 8, offset: 448)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3294, file: !3197, line: 87, baseType: !2829, size: 256, offset: 512)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3294, file: !3197, line: 88, baseType: !1665, size: 192, offset: 768)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3294, file: !3197, line: 89, baseType: !1670, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3294, file: !3197, line: 90, baseType: !383, size: 32, offset: 960)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3290, file: !3197, line: 35, baseType: !3258, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3185, file: !3177, line: 108, baseType: !568, size: 32, offset: 704)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3185, file: !3177, line: 109, baseType: !2597, size: 192, offset: 768)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3176, file: !3177, line: 16, baseType: !2982, size: 64, offset: 256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3176, file: !3177, line: 17, baseType: !771, size: 8, offset: 320)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3176, file: !3177, line: 19, baseType: !3294, size: 1024, offset: 384)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3176, file: !3177, line: 22, baseType: !371, size: 64, offset: 1408)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3176, file: !3177, line: 23, baseType: !2829, size: 256, offset: 1472)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3147, file: !3148, line: 87, baseType: !32, size: 32, offset: 1280)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3147, file: !3148, line: 88, baseType: !32, size: 32, offset: 1312)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3147, file: !3148, line: 89, baseType: !32, size: 32, offset: 1344)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3147, file: !3148, line: 90, baseType: !32, size: 32, offset: 1376)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3147, file: !3148, line: 91, baseType: !32, size: 32, offset: 1408)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3147, file: !3148, line: 92, baseType: !32, size: 32, offset: 1440)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3147, file: !3148, line: 94, baseType: !3322, size: 128, offset: 1472)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3148, line: 21, size: 128, elements: !3323)
!3323 = !{!3324, !3330, !3332}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3322, file: !3148, line: 22, baseType: !3325, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3326)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3327)
!3327 = !{!3328, !3329}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3326, file: !1344, line: 803, baseType: !1343, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3326, file: !1344, line: 804, baseType: !1670, offset: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3322, file: !3148, line: 23, baseType: !3331, size: 64, offset: 32)
!3331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2664)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3322, file: !3148, line: 24, baseType: !771, size: 8, offset: 96)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3147, file: !3148, line: 96, baseType: !32, size: 32, offset: 1600)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3147, file: !3148, line: 97, baseType: !32, size: 32, offset: 1632)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3147, file: !3148, line: 99, baseType: !32, size: 32, offset: 1664)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3147, file: !3148, line: 100, baseType: !32, size: 32, offset: 1696)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3147, file: !3148, line: 101, baseType: !32, size: 32, offset: 1728)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3147, file: !3148, line: 102, baseType: !32, size: 32, offset: 1760)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3147, file: !3148, line: 103, baseType: !32, size: 32, offset: 1792)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3147, file: !3148, line: 104, baseType: !32, size: 32, offset: 1824)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3147, file: !3148, line: 106, baseType: !32, size: 32, offset: 1856)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3147, file: !3148, line: 107, baseType: !32, size: 32, offset: 1888)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3147, file: !3148, line: 111, baseType: !32, size: 32, offset: 1920)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3147, file: !3148, line: 112, baseType: !32, size: 32, offset: 1952)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3147, file: !3148, line: 114, baseType: !32, size: 32, offset: 1984)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3147, file: !3148, line: 116, baseType: !32, size: 32, offset: 2016)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3147, file: !3148, line: 117, baseType: !32, size: 32, offset: 2048)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3147, file: !3148, line: 121, baseType: !32, size: 32, offset: 2080)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3147, file: !3148, line: 122, baseType: !32, size: 32, offset: 2112)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3147, file: !3148, line: 123, baseType: !32, size: 32, offset: 2144)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3147, file: !3148, line: 124, baseType: !32, size: 32, offset: 2176)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3147, file: !3148, line: 125, baseType: !32, size: 32, offset: 2208)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3147, file: !3148, line: 126, baseType: !987, size: 32, offset: 2240)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3147, file: !3148, line: 128, baseType: !32, size: 32, offset: 2272)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3147, file: !3148, line: 129, baseType: !32, size: 32, offset: 2304)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3147, file: !3148, line: 130, baseType: !32, size: 32, offset: 2336)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3147, file: !3148, line: 132, baseType: !32, size: 32, offset: 2368)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3147, file: !3148, line: 133, baseType: !32, size: 32, offset: 2400)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3147, file: !3148, line: 134, baseType: !32, size: 32, offset: 2432)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3147, file: !3148, line: 135, baseType: !32, size: 32, offset: 2464)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3147, file: !3148, line: 136, baseType: !32, size: 32, offset: 2496)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3147, file: !3148, line: 137, baseType: !32, size: 32, offset: 2528)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3147, file: !3148, line: 138, baseType: !32, size: 32, offset: 2560)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3147, file: !3148, line: 139, baseType: !32, size: 32, offset: 2592)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3147, file: !3148, line: 140, baseType: !7, size: 32, offset: 2624)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3147, file: !3148, line: 141, baseType: !32, size: 32, offset: 2656)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3147, file: !3148, line: 142, baseType: !32, size: 32, offset: 2688)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3147, file: !3148, line: 143, baseType: !32, size: 32, offset: 2720)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3147, file: !3148, line: 144, baseType: !32, size: 32, offset: 2752)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3147, file: !3148, line: 145, baseType: !32, size: 32, offset: 2784)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3147, file: !3148, line: 146, baseType: !32, size: 32, offset: 2816)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3147, file: !3148, line: 147, baseType: !32, size: 32, offset: 2848)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3147, file: !3148, line: 148, baseType: !32, size: 32, offset: 2880)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3147, file: !3148, line: 149, baseType: !32, size: 32, offset: 2912)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3147, file: !3148, line: 150, baseType: !32, size: 32, offset: 2944)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3147, file: !3148, line: 151, baseType: !32, size: 32, offset: 2976)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3147, file: !3148, line: 152, baseType: !32, size: 32, offset: 3008)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3147, file: !3148, line: 153, baseType: !32, size: 32, offset: 3040)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3147, file: !3148, line: 154, baseType: !32, size: 32, offset: 3072)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3147, file: !3148, line: 155, baseType: !32, size: 32, offset: 3104)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3147, file: !3148, line: 156, baseType: !32, size: 32, offset: 3136)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3147, file: !3148, line: 157, baseType: !32, size: 32, offset: 3168)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3147, file: !3148, line: 158, baseType: !32, size: 32, offset: 3200)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3147, file: !3148, line: 159, baseType: !32, size: 32, offset: 3232)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3147, file: !3148, line: 160, baseType: !32, size: 32, offset: 3264)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3147, file: !3148, line: 161, baseType: !32, size: 32, offset: 3296)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3147, file: !3148, line: 162, baseType: !32, size: 32, offset: 3328)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3147, file: !3148, line: 163, baseType: !32, size: 32, offset: 3360)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3147, file: !3148, line: 164, baseType: !32, size: 32, offset: 3392)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3147, file: !3148, line: 165, baseType: !32, size: 32, offset: 3424)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3147, file: !3148, line: 166, baseType: !32, size: 32, offset: 3456)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3147, file: !3148, line: 167, baseType: !32, size: 32, offset: 3488)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3147, file: !3148, line: 168, baseType: !32, size: 32, offset: 3520)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3147, file: !3148, line: 169, baseType: !32, size: 32, offset: 3552)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3147, file: !3148, line: 170, baseType: !32, size: 32, offset: 3584)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3147, file: !3148, line: 171, baseType: !32, size: 32, offset: 3616)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3147, file: !3148, line: 172, baseType: !3398, size: 96, offset: 3648)
!3398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1592)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3147, file: !3148, line: 173, baseType: !3398, size: 96, offset: 3744)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3147, file: !3148, line: 174, baseType: !32, size: 32, offset: 3840)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3147, file: !3148, line: 175, baseType: !312, size: 64, offset: 3904)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3147, file: !3148, line: 176, baseType: !312, size: 64, offset: 3968)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3147, file: !3148, line: 177, baseType: !3404, size: 192, offset: 4032)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3148, line: 34, size: 192, elements: !3405)
!3405 = !{!3406, !3407, !3410}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3404, file: !3148, line: 35, baseType: !383, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3404, file: !3148, line: 37, baseType: !3408, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3148, line: 32, flags: DIFlagFwdDecl)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3404, file: !3148, line: 38, baseType: !32, size: 32, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3147, file: !3148, line: 178, baseType: !32, size: 32, offset: 4224)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3147, file: !3148, line: 179, baseType: !32, size: 32, offset: 4256)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3147, file: !3148, line: 180, baseType: !3414, size: 64, offset: 4288)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3416)
!3416 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3148, line: 180, flags: DIFlagFwdDecl)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3147, file: !3148, line: 181, baseType: !3418, size: 64, offset: 4352)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3148, line: 41, flags: DIFlagFwdDecl)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3147, file: !3148, line: 182, baseType: !1670, offset: 4416)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3147, file: !3148, line: 183, baseType: !7, size: 32, offset: 4416)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3147, file: !3148, line: 184, baseType: !383, size: 32, offset: 4448)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3147, file: !3148, line: 185, baseType: !312, size: 64, offset: 4480)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3147, file: !3148, line: 186, baseType: !32, size: 32, offset: 4544)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3147, file: !3148, line: 188, baseType: !32, size: 32, offset: 4576)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3147, file: !3148, line: 189, baseType: !32, size: 32, offset: 4608)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3147, file: !3148, line: 195, baseType: !32, size: 32, offset: 4640)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3147, file: !3148, line: 196, baseType: !32, size: 32, offset: 4672)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3147, file: !3148, line: 197, baseType: !32, size: 32, offset: 4704)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3147, file: !3148, line: 198, baseType: !32, size: 32, offset: 4736)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3147, file: !3148, line: 200, baseType: !3432, size: 96, offset: 4768)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3148, line: 27, size: 96, elements: !3433)
!3433 = !{!3434, !3435}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3432, file: !3148, line: 28, baseType: !3325, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3432, file: !3148, line: 29, baseType: !3436, size: 64, offset: 32)
!3436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2664)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3147, file: !3148, line: 202, baseType: !383, size: 32, offset: 4864)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3147, file: !3148, line: 205, baseType: !3439, size: 64, offset: 4928)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3147, file: !3148, line: 206, baseType: !32, size: 32, offset: 4992)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3147, file: !3148, line: 222, baseType: !3442, size: 64, offset: 5056)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3148, line: 222, flags: DIFlagFwdDecl)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3147, file: !3148, line: 223, baseType: !7, size: 32, offset: 5120)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3147, file: !3148, line: 225, baseType: !3442, size: 64, offset: 5184)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3147, file: !3148, line: 226, baseType: !7, size: 32, offset: 5248)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3147, file: !3148, line: 228, baseType: !383, size: 32, offset: 5280)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3147, file: !3148, line: 229, baseType: !3449, size: 128, offset: 5312)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3450, line: 22, baseType: !3451)
!3450 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3450, line: 20, size: 128, elements: !3452)
!3452 = !{!3453}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3451, file: !3450, line: 21, baseType: !3454, size: 128)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2664)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2983, file: !2984, line: 128, baseType: !3456, size: 4608, offset: 10176)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3457, line: 56, size: 4608, elements: !3458)
!3457 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3458 = !{!3459, !3499, !3502, !3503, !3504, !3505, !3508, !3511, !3514, !3515, !3516, !3519, !3520, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3600, !3601, !3602, !3603}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3456, file: !3457, line: 57, baseType: !3460, size: 1600)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3457, line: 15, size: 1600, elements: !3461)
!3461 = !{!3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3460, file: !3457, line: 17, baseType: !2903, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3460, file: !3457, line: 18, baseType: !2903, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3460, file: !3457, line: 19, baseType: !2903, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3460, file: !3457, line: 20, baseType: !2903, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3460, file: !3457, line: 21, baseType: !2903, size: 64, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3460, file: !3457, line: 23, baseType: !32, size: 32, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3460, file: !3457, line: 24, baseType: !32, size: 32, offset: 352)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3460, file: !3457, line: 25, baseType: !32, size: 32, offset: 384)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3460, file: !3457, line: 26, baseType: !32, size: 32, offset: 416)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3460, file: !3457, line: 27, baseType: !32, size: 32, offset: 448)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3460, file: !3457, line: 28, baseType: !32, size: 32, offset: 480)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3460, file: !3457, line: 29, baseType: !32, size: 32, offset: 512)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3460, file: !3457, line: 30, baseType: !32, size: 32, offset: 544)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3460, file: !3457, line: 31, baseType: !32, size: 32, offset: 576)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3460, file: !3457, line: 32, baseType: !32, size: 32, offset: 608)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3460, file: !3457, line: 33, baseType: !32, size: 32, offset: 640)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3460, file: !3457, line: 34, baseType: !32, size: 32, offset: 672)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3460, file: !3457, line: 35, baseType: !32, size: 32, offset: 704)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3460, file: !3457, line: 36, baseType: !32, size: 32, offset: 736)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3460, file: !3457, line: 37, baseType: !32, size: 32, offset: 768)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3460, file: !3457, line: 38, baseType: !32, size: 32, offset: 800)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3460, file: !3457, line: 39, baseType: !3484, size: 256, offset: 832)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2272)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3460, file: !3457, line: 40, baseType: !3439, size: 64, offset: 1088)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3460, file: !3457, line: 41, baseType: !32, size: 32, offset: 1152)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3460, file: !3457, line: 42, baseType: !32, size: 32, offset: 1184)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3460, file: !3457, line: 43, baseType: !32, size: 32, offset: 1216)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3460, file: !3457, line: 44, baseType: !32, size: 32, offset: 1248)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3460, file: !3457, line: 45, baseType: !32, size: 32, offset: 1280)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3460, file: !3457, line: 46, baseType: !32, size: 32, offset: 1312)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3460, file: !3457, line: 47, baseType: !32, size: 32, offset: 1344)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3460, file: !3457, line: 48, baseType: !32, size: 32, offset: 1376)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3460, file: !3457, line: 49, baseType: !32, size: 32, offset: 1408)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3460, file: !3457, line: 50, baseType: !32, size: 32, offset: 1440)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3460, file: !3457, line: 51, baseType: !32, size: 32, offset: 1472)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3460, file: !3457, line: 52, baseType: !32, size: 32, offset: 1504)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3460, file: !3457, line: 53, baseType: !771, size: 8, offset: 1536)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3456, file: !3457, line: 58, baseType: !3500, size: 64, offset: 1600)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3457, line: 58, flags: DIFlagFwdDecl)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3456, file: !3457, line: 59, baseType: !3500, size: 64, offset: 1664)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3456, file: !3457, line: 60, baseType: !3171, size: 64, offset: 1728)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3456, file: !3457, line: 61, baseType: !3175, size: 64, offset: 1792)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3456, file: !3457, line: 71, baseType: !3506, size: 64, offset: 1856)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3457, line: 71, flags: DIFlagFwdDecl)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3456, file: !3457, line: 72, baseType: !3509, size: 64, offset: 1920)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3457, line: 72, flags: DIFlagFwdDecl)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3456, file: !3457, line: 73, baseType: !3512, size: 64, offset: 1984)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3457, line: 73, flags: DIFlagFwdDecl)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3456, file: !3457, line: 74, baseType: !3235, size: 320, offset: 2048)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3456, file: !3457, line: 75, baseType: !3021, size: 64, offset: 2368)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3456, file: !3457, line: 76, baseType: !3517, size: 64, offset: 2432)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3457, line: 76, flags: DIFlagFwdDecl)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3456, file: !3457, line: 77, baseType: !284, size: 128, offset: 2496)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3456, file: !3457, line: 78, baseType: !3521, size: 1088, offset: 2624)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3530, !3536, !3542, !3543, !3547, !3551, !3555, !3559, !3560, !3564, !3568, !3572, !3576, !3580, !3581}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3521, file: !925, line: 16, baseType: !476, size: 16)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3521, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3521, file: !925, line: 19, baseType: !3526, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!32, !3529}
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3521, file: !925, line: 20, baseType: !3531, size: 64, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!3534, !3534, !493}
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3521, file: !925, line: 21, baseType: !3537, size: 64, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!7, !3540}
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3535)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3521, file: !925, line: 22, baseType: !3537, size: 64, offset: 256)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3521, file: !925, line: 23, baseType: !3544, size: 64, offset: 320)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!2516, !3534, !312}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3521, file: !925, line: 24, baseType: !3548, size: 64, offset: 384)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !3534}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3521, file: !925, line: 25, baseType: !3552, size: 64, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !3534, !290, !32}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3521, file: !925, line: 27, baseType: !3556, size: 64, offset: 512)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!3534, !3534}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3521, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3521, file: !925, line: 29, baseType: !3561, size: 64, offset: 640)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3534, !445, !415, !987, !771}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3521, file: !925, line: 32, baseType: !3565, size: 64, offset: 704)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{null, !3534, !445, !415}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3521, file: !925, line: 34, baseType: !3569, size: 64, offset: 768)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!32, !2982, !445, !415}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3521, file: !925, line: 35, baseType: !3573, size: 64, offset: 832)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!923, !3540, !415, !3258}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3521, file: !925, line: 38, baseType: !3577, size: 64, offset: 896)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{null, !3540, !3258}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3521, file: !925, line: 41, baseType: !2051, size: 64, offset: 960)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3521, file: !925, line: 43, baseType: !3582, size: 64, offset: 1024)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3583, line: 97, size: 64, elements: !3584)
!3583 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3584 = !{!3585}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3582, file: !3583, line: 98, baseType: !377, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3456, file: !3457, line: 79, baseType: !1912, offset: 3712)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3456, file: !3457, line: 80, baseType: !1670, offset: 3712)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3456, file: !3457, line: 81, baseType: !7, size: 32, offset: 3712)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3456, file: !3457, line: 82, baseType: !312, size: 64, offset: 3776)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3456, file: !3457, line: 94, baseType: !3168, size: 64, offset: 3840)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3456, file: !3457, line: 95, baseType: !445, size: 64, offset: 3904)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3456, file: !3457, line: 96, baseType: !445, size: 64, offset: 3968)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3456, file: !3457, line: 97, baseType: !445, size: 64, offset: 4032)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3456, file: !3457, line: 98, baseType: !445, size: 64, offset: 4096)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3456, file: !3457, line: 107, baseType: !383, size: 32, offset: 4160)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3456, file: !3457, line: 108, baseType: !383, size: 32, offset: 4192)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3456, file: !3457, line: 109, baseType: !3598, size: 64, offset: 4224)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3457, line: 109, flags: DIFlagFwdDecl)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3456, file: !3457, line: 110, baseType: !3442, size: 64, offset: 4288)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3456, file: !3457, line: 111, baseType: !3442, size: 64, offset: 4352)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3456, file: !3457, line: 112, baseType: !7, size: 32, offset: 4416)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3456, file: !3457, line: 117, baseType: !3604, size: 128, offset: 4480)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3456, file: !3457, line: 113, size: 128, elements: !3605)
!3605 = !{!3606, !3607, !3608}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3604, file: !3457, line: 114, baseType: !1581, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3604, file: !3457, line: 115, baseType: !1670, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3604, file: !3457, line: 116, baseType: !987, size: 32, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2983, file: !2984, line: 162, baseType: !3610, size: 192, offset: 14784)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3611)
!3611 = !{!3612, !3613, !3614, !3615}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3610, file: !417, line: 293, baseType: !415, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3610, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3610, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3610, file: !417, line: 297, baseType: !1670, offset: 160)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2983, file: !2984, line: 164, baseType: !3617, size: 64, offset: 14976)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2984, line: 47, flags: DIFlagFwdDecl)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2983, file: !2984, line: 167, baseType: !3620, size: 512, offset: 15040)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3621, line: 14, size: 512, elements: !3622)
!3621 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3622 = !{!3623, !3638, !3640}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3620, file: !3621, line: 16, baseType: !3624, size: 128)
!3624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3625, size: 128, elements: !2664)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3627)
!3627 = !{!3628, !3629}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3626, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3626, file: !65, line: 1039, baseType: !3630, offset: 128)
!3630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3631, elements: !309)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3632)
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3631, file: !65, line: 1033, baseType: !1088, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3631, file: !65, line: 1034, baseType: !3635, size: 128, offset: 64)
!3635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3636, size: 128, elements: !2664)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3620, file: !3621, line: 17, baseType: !3639, size: 128, offset: 128)
!3639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3620, file: !3621, line: 18, baseType: !3641, size: 256, offset: 256)
!3641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2983, file: !2984, line: 174, baseType: !373, size: 64, offset: 15552)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2983, file: !2984, line: 183, baseType: !3644, size: 1216, offset: 15616)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3645, line: 15, size: 1216, elements: !3646)
!3645 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3660, !3661, !3662, !3665, !3668}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3644, file: !3645, line: 17, baseType: !3010, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3644, file: !3645, line: 18, baseType: !3010, size: 64, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3644, file: !3645, line: 19, baseType: !3010, size: 64, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3644, file: !3645, line: 20, baseType: !3010, size: 64, offset: 192)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3644, file: !3645, line: 21, baseType: !3010, size: 64, offset: 256)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3644, file: !3645, line: 22, baseType: !3010, size: 64, offset: 320)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3644, file: !3645, line: 23, baseType: !3010, size: 64, offset: 384)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3644, file: !3645, line: 24, baseType: !3010, size: 64, offset: 448)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3644, file: !3645, line: 25, baseType: !3010, size: 64, offset: 512)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3644, file: !3645, line: 26, baseType: !3010, size: 64, offset: 576)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3644, file: !3645, line: 30, baseType: !3658, size: 64, offset: 640)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3645, line: 11, flags: DIFlagFwdDecl)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3644, file: !3645, line: 31, baseType: !1670, offset: 704)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3644, file: !3645, line: 32, baseType: !3235, size: 320, offset: 704)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3644, file: !3645, line: 33, baseType: !3663, size: 64, offset: 1024)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3645, line: 12, flags: DIFlagFwdDecl)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3644, file: !3645, line: 34, baseType: !3666, size: 64, offset: 1088)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3645, line: 13, flags: DIFlagFwdDecl)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3644, file: !3645, line: 37, baseType: !1581, size: 64, offset: 1152)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2983, file: !2984, line: 191, baseType: !445, size: 64, offset: 16832)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2967, file: !2968, line: 38, baseType: !3671, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2968, line: 38, flags: DIFlagFwdDecl)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2967, file: !2968, line: 39, baseType: !3671, size: 64, offset: 448)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2967, file: !2968, line: 40, baseType: !3675, size: 64, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3677, line: 856, size: 448, elements: !3678)
!3677 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3678 = !{!3679, !3680, !3681, !3682, !3683}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3676, file: !3677, line: 857, baseType: !568, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3676, file: !3677, line: 858, baseType: !2815, size: 192, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3676, file: !3677, line: 859, baseType: !2781, size: 64, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3676, file: !3677, line: 860, baseType: !2923, size: 64, offset: 320)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3676, file: !3677, line: 861, baseType: !3684, size: 64, offset: 384)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3686, line: 16, flags: DIFlagFwdDecl)
!3686 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2327, file: !2328, line: 969, baseType: !3688, size: 64, offset: 9216)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3690, line: 82, size: 7296, elements: !3691)
!3690 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3691 = !{!3692, !3693, !3694, !3695, !3696, !3697, !3698, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3727, !3736, !3737, !3739, !3740, !3741, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3769, !3770, !3777, !3778, !3779, !3780, !3781, !3782}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3689, file: !3690, line: 83, baseType: !568, size: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3689, file: !3690, line: 84, baseType: !383, size: 32, offset: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3689, file: !3690, line: 85, baseType: !32, size: 32, offset: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3689, file: !3690, line: 86, baseType: !284, size: 128, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3689, file: !3690, line: 88, baseType: !1889, size: 128, offset: 256)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3689, file: !3690, line: 91, baseType: !2326, size: 64, offset: 384)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3689, file: !3690, line: 94, baseType: !3699, size: 192, offset: 448)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3700, line: 30, size: 192, elements: !3701)
!3700 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3701 = !{!3702, !3703}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3699, file: !3700, line: 31, baseType: !284, size: 128)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3699, file: !3700, line: 32, baseType: !3704, size: 64, offset: 128)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3705, line: 25, baseType: !3706)
!3705 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3705, line: 23, size: 64, elements: !3707)
!3707 = !{!3708}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3706, file: !3705, line: 24, baseType: !2471, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3689, file: !3690, line: 97, baseType: !1581, size: 64, offset: 640)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3689, file: !3690, line: 100, baseType: !32, size: 32, offset: 704)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3689, file: !3690, line: 106, baseType: !32, size: 32, offset: 736)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3689, file: !3690, line: 107, baseType: !2326, size: 64, offset: 768)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3689, file: !3690, line: 110, baseType: !32, size: 32, offset: 832)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3689, file: !3690, line: 111, baseType: !7, size: 32, offset: 864)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3689, file: !3690, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3689, file: !3690, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3689, file: !3690, line: 128, baseType: !32, size: 32, offset: 928)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3689, file: !3690, line: 129, baseType: !284, size: 128, offset: 960)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3689, file: !3690, line: 132, baseType: !2397, size: 512, offset: 1088)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3689, file: !3690, line: 133, baseType: !453, size: 64, offset: 1600)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3689, file: !3690, line: 140, baseType: !3722, size: 256, offset: 1664)
!3722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3723, size: 256, elements: !2664)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3690, line: 38, size: 128, elements: !3724)
!3724 = !{!3725, !3726}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3723, file: !3690, line: 39, baseType: !331, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3723, file: !3690, line: 40, baseType: !331, size: 64, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3689, file: !3690, line: 146, baseType: !3728, size: 192, offset: 1920)
!3728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3690, line: 66, size: 192, elements: !3729)
!3729 = !{!3730}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3728, file: !3690, line: 67, baseType: !3731, size: 192)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3690, line: 47, size: 192, elements: !3732)
!3732 = !{!3733, !3734, !3735}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3731, file: !3690, line: 48, baseType: !373, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3731, file: !3690, line: 49, baseType: !373, size: 64, offset: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3731, file: !3690, line: 50, baseType: !373, size: 64, offset: 128)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3689, file: !3690, line: 150, baseType: !2625, size: 640, offset: 2112)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3689, file: !3690, line: 153, baseType: !3738, size: 256, offset: 2752)
!3738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 256, elements: !2272)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3689, file: !3690, line: 159, baseType: !2571, size: 64, offset: 3008)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3689, file: !3690, line: 162, baseType: !32, size: 32, offset: 3072)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3689, file: !3690, line: 164, baseType: !3742, size: 64, offset: 3136)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3690, line: 164, flags: DIFlagFwdDecl)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3689, file: !3690, line: 175, baseType: !3325, size: 32, offset: 3200)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3264)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3328)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3392)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3456)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3689, file: !3690, line: 177, baseType: !331, size: 64, offset: 3520)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3689, file: !3690, line: 178, baseType: !331, size: 64, offset: 3584)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3689, file: !3690, line: 179, baseType: !2613, size: 128, offset: 3648)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3776)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3840)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3904)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3968)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4032)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4096)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4160)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4224)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4288)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4352)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4416)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4480)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4544)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4608)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3689, file: !3690, line: 184, baseType: !3767, offset: 4672)
!3767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3768, line: 12, elements: !1587)
!3768 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3689, file: !3690, line: 192, baseType: !335, size: 64, offset: 4672)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3689, file: !3690, line: 203, baseType: !3771, size: 2048, offset: 4736)
!3771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3772, size: 2048, elements: !269)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3773, line: 43, size: 128, elements: !3774)
!3773 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3774 = !{!3775, !3776}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3772, file: !3773, line: 44, baseType: !1042, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3772, file: !3773, line: 45, baseType: !1042, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3689, file: !3690, line: 220, baseType: !771, size: 8, offset: 6784)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3689, file: !3690, line: 221, baseType: !625, size: 16, offset: 6800)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3689, file: !3690, line: 222, baseType: !625, size: 16, offset: 6816)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3689, file: !3690, line: 224, baseType: !2091, size: 64, offset: 6848)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3689, file: !3690, line: 227, baseType: !1665, size: 192, offset: 6912)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3689, file: !3690, line: 233, baseType: !1665, size: 192, offset: 7104)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2327, file: !2328, line: 970, baseType: !3784, size: 64, offset: 9280)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3690, line: 20, size: 16576, elements: !3786)
!3786 = !{!3787, !3788, !3789, !3790}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3785, file: !3690, line: 21, baseType: !1670)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3785, file: !3690, line: 22, baseType: !568, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3785, file: !3690, line: 23, baseType: !1889, size: 128, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3785, file: !3690, line: 24, baseType: !3791, size: 16384, offset: 192)
!3791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3792, size: 16384, elements: !3812)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3700, line: 49, size: 256, elements: !3793)
!3793 = !{!3794}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3792, file: !3700, line: 50, baseType: !3795, size: 256)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3700, line: 35, size: 256, elements: !3796)
!3796 = !{!3797, !3804, !3805, !3811}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3795, file: !3700, line: 37, baseType: !3798, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3799, line: 19, baseType: !3800)
!3799 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3799, line: 18, baseType: !3802)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !32}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3795, file: !3700, line: 38, baseType: !312, size: 64, offset: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3795, file: !3700, line: 44, baseType: !3806, size: 64, offset: 128)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3799, line: 22, baseType: !3807)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3799, line: 21, baseType: !3809)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3795, file: !3700, line: 46, baseType: !3704, size: 64, offset: 192)
!3812 = !{!3813}
!3813 = !DISubrange(count: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2327, file: !2328, line: 971, baseType: !3704, size: 64, offset: 9344)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2327, file: !2328, line: 972, baseType: !3704, size: 64, offset: 9408)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2327, file: !2328, line: 974, baseType: !3704, size: 64, offset: 9472)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2327, file: !2328, line: 975, baseType: !3699, size: 192, offset: 9536)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2327, file: !2328, line: 976, baseType: !312, size: 64, offset: 9728)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2327, file: !2328, line: 977, baseType: !1039, size: 64, offset: 9792)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2327, file: !2328, line: 978, baseType: !7, size: 32, offset: 9856)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2327, file: !2328, line: 980, baseType: !302, size: 64, offset: 9920)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2327, file: !2328, line: 989, baseType: !3823, size: 128, offset: 9984)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3824, line: 35, size: 128, elements: !3825)
!3824 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3825 = !{!3826, !3827, !3828}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3823, file: !3824, line: 36, baseType: !32, size: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3823, file: !3824, line: 37, baseType: !383, size: 32, offset: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3823, file: !3824, line: 38, baseType: !3829, size: 64, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3824, line: 23, flags: DIFlagFwdDecl)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2327, file: !2328, line: 992, baseType: !331, size: 64, offset: 10112)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2327, file: !2328, line: 993, baseType: !331, size: 64, offset: 10176)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2327, file: !2328, line: 996, baseType: !1670, offset: 10240)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2327, file: !2328, line: 999, baseType: !1761, offset: 10240)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2327, file: !2328, line: 1001, baseType: !3836, size: 64, offset: 10240)
!3836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2328, line: 636, size: 64, elements: !3837)
!3837 = !{!3838}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3836, file: !2328, line: 637, baseType: !3839, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2327, file: !2328, line: 1005, baseType: !1747, size: 128, offset: 10304)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2327, file: !2328, line: 1007, baseType: !2326, size: 64, offset: 10432)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2327, file: !2328, line: 1009, baseType: !3843, size: 64, offset: 10496)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2328, line: 1009, flags: DIFlagFwdDecl)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2327, file: !2328, line: 1043, baseType: !591, size: 64, offset: 10560)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2327, file: !2328, line: 1046, baseType: !3847, size: 64, offset: 10624)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2328, line: 41, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2327, file: !2328, line: 1050, baseType: !3850, size: 64, offset: 10688)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2328, line: 42, flags: DIFlagFwdDecl)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2327, file: !2328, line: 1054, baseType: !3853, size: 64, offset: 10752)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2328, line: 55, flags: DIFlagFwdDecl)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2327, file: !2328, line: 1056, baseType: !3856, size: 64, offset: 10816)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2328, line: 40, flags: DIFlagFwdDecl)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2327, file: !2328, line: 1058, baseType: !3859, size: 64, offset: 10880)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3861, line: 99, size: 704, elements: !3862)
!3861 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3862 = !{!3863, !3864, !3865, !3866, !3867, !3868, !3869, !3888, !3889}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3860, file: !3861, line: 100, baseType: !371, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3860, file: !3861, line: 101, baseType: !383, size: 32, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3860, file: !3861, line: 102, baseType: !383, size: 32, offset: 96)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3860, file: !3861, line: 105, baseType: !1670, offset: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3860, file: !3861, line: 107, baseType: !476, size: 16, offset: 128)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3860, file: !3861, line: 109, baseType: !1737, size: 128, offset: 192)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3860, file: !3861, line: 110, baseType: !3870, size: 64, offset: 320)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3861, line: 73, size: 448, elements: !3872)
!3872 = !{!3873, !3876, !3877, !3882, !3887}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3871, file: !3861, line: 74, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3861, line: 74, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3871, file: !3861, line: 75, baseType: !3859, size: 64, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 83, baseType: !3878, size: 128, offset: 128)
!3878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 83, size: 128, elements: !3879)
!3879 = !{!3880, !3881}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3878, file: !3861, line: 84, baseType: !284, size: 128)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3878, file: !3861, line: 85, baseType: !2051, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 87, baseType: !3883, size: 128, offset: 256)
!3883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 87, size: 128, elements: !3884)
!3884 = !{!3885, !3886}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3883, file: !3861, line: 88, baseType: !276, size: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3883, file: !3861, line: 89, baseType: !299, size: 128, align: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3871, file: !3861, line: 92, baseType: !7, size: 32, offset: 384)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3860, file: !3861, line: 111, baseType: !1581, size: 64, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3860, file: !3861, line: 113, baseType: !2829, size: 256, offset: 448)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2327, file: !2328, line: 1061, baseType: !3891, size: 64, offset: 10944)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2328, line: 43, flags: DIFlagFwdDecl)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2327, file: !2328, line: 1064, baseType: !312, size: 64, offset: 11008)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2327, file: !2328, line: 1065, baseType: !3895, size: 64, offset: 11072)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3700, line: 14, baseType: !3897)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3700, line: 12, size: 384, elements: !3898)
!3898 = !{!3899}
!3899 = !DIDerivedType(tag: DW_TAG_member, scope: !3897, file: !3700, line: 13, baseType: !3900, size: 384)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3897, file: !3700, line: 13, size: 384, elements: !3901)
!3901 = !{!3902, !3903, !3904, !3905}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 32)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3900, file: !3700, line: 13, baseType: !3906, size: 256, offset: 128)
!3906 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3907, line: 32, size: 256, elements: !3908)
!3907 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3908 = !{!3909, !3914, !3927, !3933, !3942, !3962, !3967}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3906, file: !3907, line: 37, baseType: !3910, size: 64)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 34, size: 64, elements: !3911)
!3911 = !{!3912, !3913}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3910, file: !3907, line: 35, baseType: !2560, size: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3910, file: !3907, line: 36, baseType: !1388, size: 32, offset: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3906, file: !3907, line: 45, baseType: !3915, size: 192)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 40, size: 192, elements: !3916)
!3916 = !{!3917, !3919, !3920, !3926}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3915, file: !3907, line: 41, baseType: !3918, size: 32)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3915, file: !3907, line: 42, baseType: !32, size: 32, offset: 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3915, file: !3907, line: 43, baseType: !3921, size: 64, offset: 64)
!3921 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3907, line: 11, baseType: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3907, line: 8, size: 64, elements: !3923)
!3923 = !{!3924, !3925}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3922, file: !3907, line: 9, baseType: !32, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3922, file: !3907, line: 10, baseType: !591, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3915, file: !3907, line: 44, baseType: !32, size: 32, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3906, file: !3907, line: 52, baseType: !3928, size: 128)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 48, size: 128, elements: !3929)
!3929 = !{!3930, !3931, !3932}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3928, file: !3907, line: 49, baseType: !2560, size: 32)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3928, file: !3907, line: 50, baseType: !1388, size: 32, offset: 32)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3928, file: !3907, line: 51, baseType: !3921, size: 64, offset: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3906, file: !3907, line: 61, baseType: !3934, size: 256)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 55, size: 256, elements: !3935)
!3935 = !{!3936, !3937, !3938, !3939, !3941}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3934, file: !3907, line: 56, baseType: !2560, size: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3934, file: !3907, line: 57, baseType: !1388, size: 32, offset: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3934, file: !3907, line: 58, baseType: !32, size: 32, offset: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3934, file: !3907, line: 59, baseType: !3940, size: 64, offset: 128)
!3940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3934, file: !3907, line: 60, baseType: !3940, size: 64, offset: 192)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3906, file: !3907, line: 95, baseType: !3943, size: 256)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 64, size: 256, elements: !3944)
!3944 = !{!3945, !3946}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3943, file: !3907, line: 65, baseType: !591, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, scope: !3943, file: !3907, line: 77, baseType: !3947, size: 192, offset: 64)
!3947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3943, file: !3907, line: 77, size: 192, elements: !3948)
!3948 = !{!3949, !3950, !3957}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3947, file: !3907, line: 82, baseType: !625, size: 16)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3947, file: !3907, line: 88, baseType: !3951, size: 192)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 84, size: 192, elements: !3952)
!3952 = !{!3953, !3955, !3956}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3951, file: !3907, line: 85, baseType: !3954, size: 64)
!3954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2433)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3951, file: !3907, line: 86, baseType: !591, size: 64, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3951, file: !3907, line: 87, baseType: !591, size: 64, offset: 128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3947, file: !3907, line: 93, baseType: !3958, size: 96)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 90, size: 96, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3958, file: !3907, line: 91, baseType: !3954, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3958, file: !3907, line: 92, baseType: !493, size: 32, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3906, file: !3907, line: 101, baseType: !3963, size: 128)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 98, size: 128, elements: !3964)
!3964 = !{!3965, !3966}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3963, file: !3907, line: 99, baseType: !998, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3963, file: !3907, line: 100, baseType: !32, size: 32, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3906, file: !3907, line: 108, baseType: !3968, size: 128)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 104, size: 128, elements: !3969)
!3969 = !{!3970, !3971, !3972}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3968, file: !3907, line: 105, baseType: !591, size: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3968, file: !3907, line: 106, baseType: !32, size: 32, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3968, file: !3907, line: 107, baseType: !7, size: 32, offset: 96)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2327, file: !2328, line: 1067, baseType: !3767, offset: 11136)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2327, file: !2328, line: 1099, baseType: !3975, size: 64, offset: 11136)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2328, line: 56, flags: DIFlagFwdDecl)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2327, file: !2328, line: 1103, baseType: !284, size: 128, offset: 11200)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2327, file: !2328, line: 1104, baseType: !3979, size: 64, offset: 11328)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2328, line: 46, flags: DIFlagFwdDecl)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2327, file: !2328, line: 1105, baseType: !1665, size: 192, offset: 11392)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2327, file: !2328, line: 1106, baseType: !7, size: 32, offset: 11584)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2327, file: !2328, line: 1109, baseType: !3984, size: 128, offset: 11648)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3985, size: 128, elements: !2664)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2328, line: 51, flags: DIFlagFwdDecl)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2327, file: !2328, line: 1110, baseType: !1665, size: 192, offset: 11776)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2327, file: !2328, line: 1111, baseType: !284, size: 128, offset: 11968)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2327, file: !2328, line: 1173, baseType: !3990, size: 64, offset: 12096)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3992, line: 62, size: 256, align: 256, elements: !3993)
!3992 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3993 = !{!3994, !3995, !3996, !4001}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3991, file: !3992, line: 75, baseType: !493, size: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3991, file: !3992, line: 90, baseType: !493, size: 32, offset: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3991, file: !3992, line: 124, baseType: !3997, size: 64, offset: 64)
!3997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3991, file: !3992, line: 109, size: 64, elements: !3998)
!3998 = !{!3999, !4000}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3997, file: !3992, line: 110, baseType: !333, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3997, file: !3992, line: 112, baseType: !333, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3991, file: !3992, line: 144, baseType: !493, size: 32, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2327, file: !2328, line: 1174, baseType: !987, size: 32, offset: 12160)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2327, file: !2328, line: 1179, baseType: !312, size: 64, offset: 12224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2327, file: !2328, line: 1182, baseType: !4005, size: 128, offset: 12288)
!4005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2268, line: 76, size: 128, elements: !4006)
!4006 = !{!4007, !4012, !4013}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4005, file: !2268, line: 85, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4009, line: 7, size: 64, elements: !4010)
!4009 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !{!4011}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4008, file: !4009, line: 12, baseType: !2468, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4005, file: !2268, line: 88, baseType: !771, size: 8, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4005, file: !2268, line: 95, baseType: !771, size: 8, offset: 72)
!4014 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !2328, line: 1184, baseType: !4015, size: 128, offset: 12416)
!4015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !2328, line: 1184, size: 128, elements: !4016)
!4016 = !{!4017, !4018}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4015, file: !2328, line: 1185, baseType: !568, size: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4015, file: !2328, line: 1186, baseType: !299, size: 128, align: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2327, file: !2328, line: 1190, baseType: !1883, size: 64, offset: 12544)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2327, file: !2328, line: 1192, baseType: !4021, size: 128, offset: 12608)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2268, line: 64, size: 128, elements: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4021, file: !2268, line: 65, baseType: !1719, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4021, file: !2268, line: 67, baseType: !493, size: 32, offset: 64)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4021, file: !2268, line: 68, baseType: !493, size: 32, offset: 96)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2327, file: !2328, line: 1206, baseType: !32, size: 32, offset: 12736)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2327, file: !2328, line: 1207, baseType: !32, size: 32, offset: 12768)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2327, file: !2328, line: 1209, baseType: !312, size: 64, offset: 12800)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2327, file: !2328, line: 1219, baseType: !331, size: 64, offset: 12864)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2327, file: !2328, line: 1220, baseType: !331, size: 64, offset: 12928)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2327, file: !2328, line: 1317, baseType: !32, size: 32, offset: 12992)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2327, file: !2328, line: 1319, baseType: !2326, size: 64, offset: 13056)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2327, file: !2328, line: 1322, baseType: !4034, size: 64, offset: 13120)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4036, line: 56, size: 512, elements: !4037)
!4036 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4037 = !{!4038, !4039, !4040, !4041, !4042, !4043, !4044, !4046}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4035, file: !4036, line: 57, baseType: !4034, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4035, file: !4036, line: 58, baseType: !591, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4035, file: !4036, line: 59, baseType: !312, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4035, file: !4036, line: 60, baseType: !312, size: 64, offset: 192)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4035, file: !4036, line: 61, baseType: !1801, size: 64, offset: 256)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4035, file: !4036, line: 62, baseType: !7, size: 32, offset: 320)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4035, file: !4036, line: 63, baseType: !4045, size: 64, offset: 384)
!4045 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4035, file: !4036, line: 64, baseType: !3258, size: 64, offset: 448)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2327, file: !2328, line: 1326, baseType: !568, size: 32, offset: 13184)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2327, file: !2328, line: 1342, baseType: !591, size: 64, offset: 13248)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2327, file: !2328, line: 1343, baseType: !333, size: 64, offset: 13312)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2327, file: !2328, line: 1344, baseType: !331, size: 64, offset: 13376)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2327, file: !2328, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2327, file: !2328, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2327, file: !2328, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2327, file: !2328, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2327, file: !2328, line: 1358, baseType: !4056, size: 34816, offset: 13824)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4057, line: 485, size: 34816, elements: !4058)
!4057 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4058 = !{!4059, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4088, !4089, !4090, !4091, !4092, !4093, !4096, !4097, !4098}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4056, file: !4057, line: 487, baseType: !4060, size: 192)
!4060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4061, size: 192, elements: !1592)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4062, line: 16, size: 64, elements: !4063)
!4062 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4061, file: !4062, line: 17, baseType: !581, size: 16)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4061, file: !4062, line: 18, baseType: !581, size: 16, offset: 16)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4061, file: !4062, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4061, file: !4062, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4061, file: !4062, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4061, file: !4062, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4061, file: !4062, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4056, file: !4057, line: 491, baseType: !312, size: 64, offset: 192)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4056, file: !4057, line: 495, baseType: !476, size: 16, offset: 256)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4056, file: !4057, line: 496, baseType: !476, size: 16, offset: 272)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4056, file: !4057, line: 497, baseType: !476, size: 16, offset: 288)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4056, file: !4057, line: 498, baseType: !476, size: 16, offset: 304)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4056, file: !4057, line: 502, baseType: !312, size: 64, offset: 320)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4056, file: !4057, line: 503, baseType: !312, size: 64, offset: 384)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4056, file: !4057, line: 514, baseType: !4085, size: 256, offset: 448)
!4085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4086, size: 256, elements: !2272)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4057, line: 483, flags: DIFlagFwdDecl)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4056, file: !4057, line: 516, baseType: !312, size: 64, offset: 704)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4056, file: !4057, line: 518, baseType: !312, size: 64, offset: 768)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4056, file: !4057, line: 520, baseType: !312, size: 64, offset: 832)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4056, file: !4057, line: 521, baseType: !312, size: 64, offset: 896)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4056, file: !4057, line: 522, baseType: !312, size: 64, offset: 960)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4056, file: !4057, line: 528, baseType: !4094, size: 64, offset: 1024)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4057, line: 10, flags: DIFlagFwdDecl)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4056, file: !4057, line: 535, baseType: !312, size: 64, offset: 1088)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4056, file: !4057, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4056, file: !4057, line: 540, baseType: !4099, size: 33280, offset: 1536)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4100, line: 317, size: 33280, elements: !4101)
!4100 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4101 = !{!4102, !4103, !4104}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4099, file: !4100, line: 330, baseType: !7, size: 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4099, file: !4100, line: 337, baseType: !312, size: 64, offset: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4099, file: !4100, line: 348, baseType: !4105, size: 32768, offset: 512)
!4105 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4100, line: 304, size: 32768, elements: !4106)
!4106 = !{!4107, !4120, !4157, !4207, !4220}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4105, file: !4100, line: 305, baseType: !4108, size: 896)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4100, line: 12, size: 896, elements: !4109)
!4109 = !{!4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4119}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4108, file: !4100, line: 13, baseType: !987, size: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4108, file: !4100, line: 14, baseType: !987, size: 32, offset: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4108, file: !4100, line: 15, baseType: !987, size: 32, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4108, file: !4100, line: 16, baseType: !987, size: 32, offset: 96)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4108, file: !4100, line: 17, baseType: !987, size: 32, offset: 128)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4108, file: !4100, line: 18, baseType: !987, size: 32, offset: 160)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4108, file: !4100, line: 19, baseType: !987, size: 32, offset: 192)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4108, file: !4100, line: 22, baseType: !4118, size: 640, offset: 224)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4108, file: !4100, line: 25, baseType: !987, size: 32, offset: 864)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4105, file: !4100, line: 306, baseType: !4121, size: 4096, align: 128)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4100, line: 34, size: 4096, align: 128, elements: !4122)
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4142, !4143, !4144, !4146, !4148, !4152}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4121, file: !4100, line: 35, baseType: !581, size: 16)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4121, file: !4100, line: 36, baseType: !581, size: 16, offset: 16)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4121, file: !4100, line: 37, baseType: !581, size: 16, offset: 32)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4121, file: !4100, line: 38, baseType: !581, size: 16, offset: 48)
!4127 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 39, baseType: !4128, size: 128, offset: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 39, size: 128, elements: !4129)
!4129 = !{!4130, !4135}
!4130 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 40, baseType: !4131, size: 128)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 40, size: 128, elements: !4132)
!4132 = !{!4133, !4134}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4131, file: !4100, line: 41, baseType: !331, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4131, file: !4100, line: 42, baseType: !331, size: 64, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 44, baseType: !4136, size: 128)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 44, size: 128, elements: !4137)
!4137 = !{!4138, !4139, !4140, !4141}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4136, file: !4100, line: 45, baseType: !987, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4136, file: !4100, line: 46, baseType: !987, size: 32, offset: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4136, file: !4100, line: 47, baseType: !987, size: 32, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4136, file: !4100, line: 48, baseType: !987, size: 32, offset: 96)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4121, file: !4100, line: 51, baseType: !987, size: 32, offset: 192)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4121, file: !4100, line: 52, baseType: !987, size: 32, offset: 224)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4121, file: !4100, line: 55, baseType: !4145, size: 1024, offset: 256)
!4145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4121, file: !4100, line: 58, baseType: !4147, size: 2048, offset: 1280)
!4147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3812)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4121, file: !4100, line: 60, baseType: !4149, size: 384, offset: 3328)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !4150)
!4150 = !{!4151}
!4151 = !DISubrange(count: 12)
!4152 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 62, baseType: !4153, size: 384, offset: 3712)
!4153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 62, size: 384, elements: !4154)
!4154 = !{!4155, !4156}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4153, file: !4100, line: 63, baseType: !4149, size: 384)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4153, file: !4100, line: 64, baseType: !4149, size: 384)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4105, file: !4100, line: 307, baseType: !4158, size: 1088)
!4158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4100, line: 79, size: 1088, elements: !4159)
!4159 = !{!4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4206}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4158, file: !4100, line: 80, baseType: !987, size: 32)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4158, file: !4100, line: 81, baseType: !987, size: 32, offset: 32)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4158, file: !4100, line: 82, baseType: !987, size: 32, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4158, file: !4100, line: 83, baseType: !987, size: 32, offset: 96)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4158, file: !4100, line: 84, baseType: !987, size: 32, offset: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4158, file: !4100, line: 85, baseType: !987, size: 32, offset: 160)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4158, file: !4100, line: 86, baseType: !987, size: 32, offset: 192)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4158, file: !4100, line: 88, baseType: !4118, size: 640, offset: 224)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4158, file: !4100, line: 89, baseType: !794, size: 8, offset: 864)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4158, file: !4100, line: 90, baseType: !794, size: 8, offset: 872)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4158, file: !4100, line: 91, baseType: !794, size: 8, offset: 880)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4158, file: !4100, line: 92, baseType: !794, size: 8, offset: 888)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4158, file: !4100, line: 93, baseType: !794, size: 8, offset: 896)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4158, file: !4100, line: 94, baseType: !794, size: 8, offset: 904)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4158, file: !4100, line: 95, baseType: !4175, size: 64, offset: 960)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4177, line: 11, size: 128, elements: !4178)
!4177 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4178 = !{!4179, !4180}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4176, file: !4177, line: 12, baseType: !998, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4176, file: !4177, line: 13, baseType: !4181, size: 64, offset: 64)
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4183, line: 56, size: 1344, elements: !4184)
!4183 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4182, file: !4183, line: 61, baseType: !312, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4182, file: !4183, line: 62, baseType: !312, size: 64, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4182, file: !4183, line: 63, baseType: !312, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4182, file: !4183, line: 64, baseType: !312, size: 64, offset: 192)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4182, file: !4183, line: 65, baseType: !312, size: 64, offset: 256)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4182, file: !4183, line: 66, baseType: !312, size: 64, offset: 320)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4182, file: !4183, line: 68, baseType: !312, size: 64, offset: 384)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4182, file: !4183, line: 69, baseType: !312, size: 64, offset: 448)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4182, file: !4183, line: 70, baseType: !312, size: 64, offset: 512)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4182, file: !4183, line: 71, baseType: !312, size: 64, offset: 576)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4182, file: !4183, line: 72, baseType: !312, size: 64, offset: 640)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4182, file: !4183, line: 73, baseType: !312, size: 64, offset: 704)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4182, file: !4183, line: 74, baseType: !312, size: 64, offset: 768)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4182, file: !4183, line: 75, baseType: !312, size: 64, offset: 832)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4182, file: !4183, line: 76, baseType: !312, size: 64, offset: 896)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4182, file: !4183, line: 81, baseType: !312, size: 64, offset: 960)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4182, file: !4183, line: 83, baseType: !312, size: 64, offset: 1024)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4182, file: !4183, line: 84, baseType: !312, size: 64, offset: 1088)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4182, file: !4183, line: 85, baseType: !312, size: 64, offset: 1152)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4182, file: !4183, line: 86, baseType: !312, size: 64, offset: 1216)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4182, file: !4183, line: 87, baseType: !312, size: 64, offset: 1280)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4158, file: !4100, line: 96, baseType: !987, size: 32, offset: 1024)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4105, file: !4100, line: 308, baseType: !4208, size: 4608, align: 512)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4100, line: 289, size: 4608, align: 512, elements: !4209)
!4209 = !{!4210, !4211, !4218}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4208, file: !4100, line: 290, baseType: !4121, size: 4096, align: 128)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4208, file: !4100, line: 291, baseType: !4212, size: 512, offset: 4096)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4100, line: 268, size: 512, elements: !4213)
!4213 = !{!4214, !4215, !4216}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4212, file: !4100, line: 269, baseType: !331, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4212, file: !4100, line: 270, baseType: !331, size: 64, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4212, file: !4100, line: 271, baseType: !4217, size: 384, offset: 128)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4208, file: !4100, line: 292, baseType: !4219, offset: 4608)
!4219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4105, file: !4100, line: 309, baseType: !4221, size: 32768)
!4221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !4222)
!4222 = !{!4223}
!4223 = !DISubrange(count: 4096)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !1721, line: 378, baseType: !4225, size: 64, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2319, file: !1721, line: 384, baseType: !2597, size: 192, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2095, file: !1721, line: 500, baseType: !1670, offset: 6656)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2095, file: !1721, line: 501, baseType: !4229, size: 64, offset: 6656)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1721, line: 387, flags: DIFlagFwdDecl)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2095, file: !1721, line: 516, baseType: !2781, size: 64, offset: 6720)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2095, file: !1721, line: 519, baseType: !1315, size: 64, offset: 6784)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2095, file: !1721, line: 521, baseType: !4234, size: 64, offset: 6848)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1721, line: 521, flags: DIFlagFwdDecl)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2095, file: !1721, line: 545, baseType: !383, size: 32, offset: 6912)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2095, file: !1721, line: 548, baseType: !771, size: 8, offset: 6944)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2095, file: !1721, line: 550, baseType: !4239, offset: 6952)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4240, line: 142, elements: !1587)
!4240 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2095, file: !1721, line: 554, baseType: !2829, size: 256, offset: 6976)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2095, file: !1721, line: 557, baseType: !987, size: 32, offset: 7232)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2092, file: !1721, line: 565, baseType: !4244, offset: 7296)
!4244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2088, file: !1721, line: 151, baseType: !383, size: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2080, file: !1721, line: 156, baseType: !1670, offset: 256)
!4247 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 159, baseType: !4248, size: 128)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 159, size: 128, elements: !4249)
!4249 = !{!4250, !4321}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4248, file: !1721, line: 161, baseType: !4251, size: 64)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4253, line: 110, size: 1152, elements: !4254)
!4253 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4254 = !{!4255, !4265, !4286, !4287, !4288, !4295, !4296, !4308, !4309, !4310}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4252, file: !4253, line: 111, baseType: !4256, size: 384)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4253, line: 19, size: 384, elements: !4257)
!4257 = !{!4258, !4260, !4261, !4262, !4263, !4264}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4256, file: !4253, line: 20, baseType: !4259, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4256, file: !4253, line: 21, baseType: !4259, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4256, file: !4253, line: 22, baseType: !4259, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4256, file: !4253, line: 23, baseType: !312, size: 64, offset: 192)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4256, file: !4253, line: 24, baseType: !312, size: 64, offset: 256)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4256, file: !4253, line: 25, baseType: !312, size: 64, offset: 320)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4252, file: !4253, line: 112, baseType: !4266, size: 64, offset: 384)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4268, line: 105, size: 128, elements: !4269)
!4268 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4269 = !{!4270, !4271}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4267, file: !4268, line: 110, baseType: !312, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4267, file: !4268, line: 118, baseType: !4272, size: 64, offset: 64)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4268, line: 95, size: 448, elements: !4274)
!4274 = !{!4275, !4276, !4281, !4282, !4283, !4284, !4285}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4273, file: !4268, line: 96, baseType: !371, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4273, file: !4268, line: 97, baseType: !4277, size: 64, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4268, line: 60, baseType: !4279)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{null, !4266}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4273, file: !4268, line: 98, baseType: !4277, size: 64, offset: 128)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4273, file: !4268, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4273, file: !4268, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4273, file: !4268, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4273, file: !4268, line: 102, baseType: !4266, size: 64, offset: 384)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4252, file: !4253, line: 113, baseType: !4267, size: 128, offset: 448)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4252, file: !4253, line: 114, baseType: !2597, size: 192, offset: 576)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4252, file: !4253, line: 115, baseType: !4289, size: 32, offset: 768)
!4289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4253, line: 59, baseType: !7, size: 32, elements: !4290)
!4290 = !{!4291, !4292, !4293, !4294}
!4291 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4292 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4293 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4294 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4252, file: !4253, line: 116, baseType: !7, size: 32, offset: 800)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4252, file: !4253, line: 117, baseType: !4297, size: 64, offset: 832)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4253, line: 67, size: 256, elements: !4300)
!4300 = !{!4301, !4302, !4306, !4307}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4299, file: !4253, line: 73, baseType: !1821, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4299, file: !4253, line: 78, baseType: !4303, size: 64, offset: 64)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{null, !4251}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4299, file: !4253, line: 83, baseType: !4303, size: 64, offset: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4299, file: !4253, line: 89, baseType: !2144, size: 64, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4252, file: !4253, line: 118, baseType: !591, size: 64, offset: 896)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4252, file: !4253, line: 119, baseType: !32, size: 32, offset: 960)
!4310 = !DIDerivedType(tag: DW_TAG_member, scope: !4252, file: !4253, line: 120, baseType: !4311, size: 128, offset: 1024)
!4311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4252, file: !4253, line: 120, size: 128, elements: !4312)
!4312 = !{!4313, !4319}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4311, file: !4253, line: 121, baseType: !4314, size: 128)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4315, line: 6, size: 128, elements: !4316)
!4315 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4316 = !{!4317, !4318}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4314, file: !4315, line: 7, baseType: !331, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4314, file: !4315, line: 8, baseType: !331, size: 64, offset: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4311, file: !4253, line: 122, baseType: !4320)
!4320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4314, elements: !483)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4248, file: !1721, line: 162, baseType: !591, size: 64, offset: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1725, file: !1721, line: 176, baseType: !299, size: 128, align: 64)
!4323 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 179, baseType: !4324, size: 32, offset: 384)
!4324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 179, size: 32, elements: !4325)
!4325 = !{!4326, !4327, !4328, !4329}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4324, file: !1721, line: 184, baseType: !383, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4324, file: !1721, line: 192, baseType: !7, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4324, file: !1721, line: 194, baseType: !7, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4324, file: !1721, line: 195, baseType: !32, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1720, file: !1721, line: 199, baseType: !383, size: 32, offset: 416)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1600, file: !1317, line: 1964, baseType: !4332, size: 64, offset: 1344)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!998, !1545, !4335}
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4337, line: 12, size: 256, elements: !4338)
!4337 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4338 = !{!4339, !4340, !4341, !4342, !4343}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4336, file: !4337, line: 13, baseType: !1742, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4336, file: !4337, line: 16, baseType: !32, size: 32, offset: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4336, file: !4337, line: 23, baseType: !312, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4336, file: !4337, line: 30, baseType: !312, size: 64, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4336, file: !4337, line: 33, baseType: !4344, size: 64, offset: 192)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1721, line: 27, flags: DIFlagFwdDecl)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1600, file: !1317, line: 1966, baseType: !4332, size: 64, offset: 1408)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !4348, size: 64, offset: 448)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4350)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4351, line: 322, size: 704, elements: !4352)
!4351 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4352 = !{!4353, !4404, !4408, !4412, !4413, !4414, !4415, !4416, !4421, !4426, !4430}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4350, file: !4351, line: 323, baseType: !4354, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!32, !4357}
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4351, line: 294, size: 1600, elements: !4359)
!4359 = !{!4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4389, !4390, !4391}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4358, file: !4351, line: 295, baseType: !276, size: 128)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4358, file: !4351, line: 296, baseType: !284, size: 128, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4358, file: !4351, line: 297, baseType: !284, size: 128, offset: 256)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4358, file: !4351, line: 298, baseType: !284, size: 128, offset: 384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4358, file: !4351, line: 299, baseType: !1665, size: 192, offset: 512)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4358, file: !4351, line: 300, baseType: !1670, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4358, file: !4351, line: 301, baseType: !383, size: 32, offset: 704)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4358, file: !4351, line: 302, baseType: !1545, size: 64, offset: 768)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4358, file: !4351, line: 303, baseType: !4369, size: 64, offset: 832)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4351, line: 68, size: 64, elements: !4370)
!4370 = !{!4371, !4383}
!4371 = !DIDerivedType(tag: DW_TAG_member, scope: !4369, file: !4351, line: 69, baseType: !4372, size: 32)
!4372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4369, file: !4351, line: 69, size: 32, elements: !4373)
!4373 = !{!4374, !4375, !4376}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4372, file: !4351, line: 70, baseType: !1382, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4372, file: !4351, line: 71, baseType: !1390, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4372, file: !4351, line: 72, baseType: !4377, size: 32)
!4377 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4378, line: 24, baseType: !4379)
!4378 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4378, line: 22, size: 32, elements: !4380)
!4380 = !{!4381}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4379, file: !4378, line: 23, baseType: !4382, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4378, line: 20, baseType: !1388)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4369, file: !4351, line: 74, baseType: !4384, size: 32, offset: 32)
!4384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4351, line: 54, baseType: !7, size: 32, elements: !4385)
!4385 = !{!4386, !4387, !4388}
!4386 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4387 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4388 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4358, file: !4351, line: 304, baseType: !1476, size: 64, offset: 896)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4358, file: !4351, line: 305, baseType: !312, size: 64, offset: 960)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4358, file: !4351, line: 306, baseType: !4392, size: 576, offset: 1024)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4351, line: 205, size: 576, elements: !4393)
!4393 = !{!4394, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4392, file: !4351, line: 206, baseType: !4395, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4351, line: 66, baseType: !379)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4392, file: !4351, line: 207, baseType: !4395, size: 64, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4392, file: !4351, line: 208, baseType: !4395, size: 64, offset: 128)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4392, file: !4351, line: 209, baseType: !4395, size: 64, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4392, file: !4351, line: 210, baseType: !4395, size: 64, offset: 256)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4392, file: !4351, line: 211, baseType: !4395, size: 64, offset: 320)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4392, file: !4351, line: 212, baseType: !4395, size: 64, offset: 384)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4392, file: !4351, line: 213, baseType: !1483, size: 64, offset: 448)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4392, file: !4351, line: 214, baseType: !1483, size: 64, offset: 512)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4350, file: !4351, line: 324, baseType: !4405, size: 64, offset: 64)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4357, !1545, !32}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4350, file: !4351, line: 325, baseType: !4409, size: 64, offset: 128)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{null, !4357}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4350, file: !4351, line: 326, baseType: !4354, size: 64, offset: 192)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4350, file: !4351, line: 327, baseType: !4354, size: 64, offset: 256)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4350, file: !4351, line: 328, baseType: !4354, size: 64, offset: 320)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4350, file: !4351, line: 329, baseType: !1628, size: 64, offset: 384)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4350, file: !4351, line: 332, baseType: !4417, size: 64, offset: 448)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!4420, !1375}
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4350, file: !4351, line: 333, baseType: !4422, size: 64, offset: 512)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!32, !1375, !4425}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4350, file: !4351, line: 335, baseType: !4427, size: 64, offset: 576)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!32, !1375, !4420}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4350, file: !4351, line: 337, baseType: !4431, size: 64, offset: 640)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!32, !1545, !4434}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !4436, size: 64, offset: 512)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4438)
!4438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4351, line: 428, size: 704, elements: !4439)
!4439 = !{!4440, !4444, !4445, !4449, !4450, !4451, !4466, !4489, !4493, !4494, !4517}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4438, file: !4351, line: 429, baseType: !4441, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!32, !1545, !32, !32, !1492}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4438, file: !4351, line: 430, baseType: !1628, size: 64, offset: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4438, file: !4351, line: 431, baseType: !4446, size: 64, offset: 128)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!32, !1545, !7}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4438, file: !4351, line: 432, baseType: !4446, size: 64, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4438, file: !4351, line: 433, baseType: !1628, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4438, file: !4351, line: 434, baseType: !4452, size: 64, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!32, !1545, !32, !4455}
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4351, line: 415, size: 256, elements: !4457)
!4457 = !{!4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4456, file: !4351, line: 416, baseType: !32, size: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4456, file: !4351, line: 417, baseType: !7, size: 32, offset: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4456, file: !4351, line: 418, baseType: !7, size: 32, offset: 64)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4456, file: !4351, line: 420, baseType: !7, size: 32, offset: 96)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4456, file: !4351, line: 421, baseType: !7, size: 32, offset: 128)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4456, file: !4351, line: 422, baseType: !7, size: 32, offset: 160)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4456, file: !4351, line: 423, baseType: !7, size: 32, offset: 192)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4456, file: !4351, line: 424, baseType: !7, size: 32, offset: 224)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4438, file: !4351, line: 435, baseType: !4467, size: 64, offset: 384)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!32, !1545, !4369, !4470}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4351, line: 343, size: 960, elements: !4472)
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4471, file: !4351, line: 344, baseType: !32, size: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4471, file: !4351, line: 345, baseType: !331, size: 64, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4471, file: !4351, line: 346, baseType: !331, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4471, file: !4351, line: 347, baseType: !331, size: 64, offset: 192)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4471, file: !4351, line: 348, baseType: !331, size: 64, offset: 256)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4471, file: !4351, line: 349, baseType: !331, size: 64, offset: 320)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4471, file: !4351, line: 350, baseType: !331, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4471, file: !4351, line: 351, baseType: !377, size: 64, offset: 448)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4471, file: !4351, line: 353, baseType: !377, size: 64, offset: 512)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4471, file: !4351, line: 354, baseType: !32, size: 32, offset: 576)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4471, file: !4351, line: 355, baseType: !32, size: 32, offset: 608)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4471, file: !4351, line: 356, baseType: !331, size: 64, offset: 640)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4471, file: !4351, line: 357, baseType: !331, size: 64, offset: 704)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4471, file: !4351, line: 358, baseType: !331, size: 64, offset: 768)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4471, file: !4351, line: 359, baseType: !377, size: 64, offset: 832)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4471, file: !4351, line: 360, baseType: !32, size: 32, offset: 896)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4438, file: !4351, line: 436, baseType: !4490, size: 64, offset: 448)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!32, !1545, !4434, !4470}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4438, file: !4351, line: 438, baseType: !4467, size: 64, offset: 512)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4438, file: !4351, line: 439, baseType: !4495, size: 64, offset: 576)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!32, !1545, !4498}
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4351, line: 409, size: 1408, elements: !4500)
!4500 = !{!4501, !4502}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4499, file: !4351, line: 410, baseType: !7, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4499, file: !4351, line: 411, baseType: !4503, size: 1344, offset: 64)
!4503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4504, size: 1344, elements: !1592)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4351, line: 395, size: 448, elements: !4505)
!4505 = !{!4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4516}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4504, file: !4351, line: 396, baseType: !7, size: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4504, file: !4351, line: 397, baseType: !7, size: 32, offset: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4504, file: !4351, line: 399, baseType: !7, size: 32, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4504, file: !4351, line: 400, baseType: !7, size: 32, offset: 96)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4504, file: !4351, line: 401, baseType: !7, size: 32, offset: 128)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4504, file: !4351, line: 402, baseType: !7, size: 32, offset: 160)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4504, file: !4351, line: 403, baseType: !7, size: 32, offset: 192)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4504, file: !4351, line: 404, baseType: !335, size: 64, offset: 256)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4504, file: !4351, line: 405, baseType: !4515, size: 64, offset: 320)
!4515 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4504, file: !4351, line: 406, baseType: !4515, size: 64, offset: 384)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4438, file: !4351, line: 440, baseType: !4446, size: 64, offset: 640)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !4519, size: 64, offset: 576)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4521)
!4521 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1755, size: 256, offset: 896)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !4530, size: 64, offset: 1216)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!4533 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !4535, size: 64, offset: 1280)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !4536)
!4536 = !{!4537}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4535, file: !1354, line: 35, baseType: !1357, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !4540, size: 64, offset: 1472)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1317, line: 699, flags: DIFlagFwdDecl)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !3856, size: 64, offset: 1536)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !4544, size: 64, offset: 1600)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !4549, size: 2432, offset: 1856)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4351, line: 518, size: 2432, elements: !4550)
!4550 = !{!4551, !4552, !4553, !4555, !4587}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4549, file: !4351, line: 519, baseType: !7, size: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4549, file: !4351, line: 520, baseType: !1755, size: 256, offset: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4549, file: !4351, line: 521, baseType: !4554, size: 192, offset: 320)
!4554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1592)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4549, file: !4351, line: 522, baseType: !4556, size: 1728, offset: 512)
!4556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4557, size: 1728, elements: !1592)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4351, line: 222, size: 576, elements: !4558)
!4558 = !{!4559, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4557, file: !4351, line: 223, baseType: !4560, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4351, line: 443, size: 256, elements: !4562)
!4562 = !{!4563, !4564, !4577, !4578}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4561, file: !4351, line: 444, baseType: !32, size: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4561, file: !4351, line: 445, baseType: !4565, size: 64, offset: 64)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4567)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4351, line: 310, size: 512, elements: !4568)
!4568 = !{!4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4567, file: !4351, line: 311, baseType: !1628, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4567, file: !4351, line: 312, baseType: !1628, size: 64, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4567, file: !4351, line: 313, baseType: !1628, size: 64, offset: 128)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4567, file: !4351, line: 314, baseType: !1628, size: 64, offset: 192)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4567, file: !4351, line: 315, baseType: !4354, size: 64, offset: 256)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4567, file: !4351, line: 316, baseType: !4354, size: 64, offset: 320)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4567, file: !4351, line: 317, baseType: !4354, size: 64, offset: 384)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4567, file: !4351, line: 318, baseType: !4431, size: 64, offset: 448)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4561, file: !4351, line: 446, baseType: !980, size: 64, offset: 128)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4561, file: !4351, line: 447, baseType: !4560, size: 64, offset: 192)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4557, file: !4351, line: 224, baseType: !32, size: 32, offset: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4557, file: !4351, line: 226, baseType: !284, size: 128, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4557, file: !4351, line: 227, baseType: !312, size: 64, offset: 256)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4557, file: !4351, line: 228, baseType: !7, size: 32, offset: 320)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4557, file: !4351, line: 229, baseType: !7, size: 32, offset: 352)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4557, file: !4351, line: 230, baseType: !4395, size: 64, offset: 384)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4557, file: !4351, line: 231, baseType: !4395, size: 64, offset: 448)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4557, file: !4351, line: 232, baseType: !591, size: 64, offset: 512)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4549, file: !4351, line: 523, baseType: !4588, size: 192, offset: 2240)
!4588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4565, size: 192, elements: !1592)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !4590, size: 2112, offset: 4288)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !4591)
!4591 = !{!4592, !4593, !4594}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4590, file: !1317, line: 1411, baseType: !32, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4590, file: !1317, line: 1412, baseType: !1889, size: 128, offset: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4590, file: !1317, line: 1413, baseType: !4595, size: 1920, offset: 192)
!4595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4596, size: 1920, elements: !1592)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4597, line: 12, size: 640, elements: !4598)
!4597 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4598 = !{!4599, !4607, !4609, !4614, !4615}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4596, file: !4597, line: 13, baseType: !4600, size: 320)
!4600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4601, line: 17, size: 320, elements: !4602)
!4601 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4602 = !{!4603, !4604, !4605, !4606}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4600, file: !4601, line: 18, baseType: !32, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4600, file: !4601, line: 19, baseType: !32, size: 32, offset: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4600, file: !4601, line: 20, baseType: !1889, size: 128, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4600, file: !4601, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4596, file: !4597, line: 14, baseType: !4608, size: 64, offset: 320)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4596, file: !4597, line: 15, baseType: !4610, size: 64, offset: 384)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4611, line: 16, size: 64, elements: !4612)
!4611 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4612 = !{!4613}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4610, file: !4611, line: 17, baseType: !2326, size: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4596, file: !4597, line: 16, baseType: !1889, size: 128, offset: 448)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4596, file: !4597, line: 17, baseType: !383, size: 32, offset: 576)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !4622, size: 64, offset: 6720)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !4625, size: 256, offset: 6784)
!4625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !4627, size: 128, offset: 7040)
!4627 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4628, line: 18, baseType: !4629)
!4628 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4628, line: 16, size: 128, elements: !4630)
!4630 = !{!4631}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4629, file: !4628, line: 17, baseType: !3225, size: 128)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !4634, size: 32, offset: 7200)
!4634 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1665, size: 192, offset: 7232)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !4638, size: 64, offset: 7488)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4640)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !4641)
!4641 = !{!4642, !4646, !4647, !4654, !4660, !4664, !4668, !4672, !4673, !4677, !4681, !4686, !4690}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4640, file: !1336, line: 136, baseType: !4643, size: 64)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!32, !1338, !7}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4640, file: !1336, line: 137, baseType: !4643, size: 64, offset: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4640, file: !1336, line: 138, baseType: !4648, size: 64, offset: 128)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!32, !4651, !4653}
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4640, file: !1336, line: 139, baseType: !4655, size: 64, offset: 192)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!32, !4651, !7, !292, !4658}
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4640, file: !1336, line: 141, baseType: !4661, size: 64, offset: 256)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!32, !4651}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4640, file: !1336, line: 142, baseType: !4665, size: 64, offset: 320)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!32, !1338}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4640, file: !1336, line: 143, baseType: !4669, size: 64, offset: 384)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{null, !1338}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4640, file: !1336, line: 144, baseType: !4669, size: 64, offset: 448)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4640, file: !1336, line: 145, baseType: !4674, size: 64, offset: 512)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{null, !1338, !1375}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4640, file: !1336, line: 146, baseType: !4678, size: 64, offset: 576)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!1038, !1338, !1038, !32}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4640, file: !1336, line: 147, baseType: !4682, size: 64, offset: 640)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!1334, !4685}
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4640, file: !1336, line: 148, baseType: !4687, size: 64, offset: 704)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!32, !1492, !771}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4640, file: !1336, line: 149, baseType: !4691, size: 64, offset: 768)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!1338, !1338, !4694}
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !4698, size: 448, offset: 7616)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4337, line: 60, size: 448, elements: !4699)
!4699 = !{!4700, !4705, !4706, !4707, !4708, !4709, !4710}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4698, file: !4337, line: 61, baseType: !4701, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!312, !4704, !4335}
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4698, file: !4337, line: 63, baseType: !4701, size: 64, offset: 64)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4698, file: !4337, line: 66, baseType: !998, size: 64, offset: 128)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4698, file: !4337, line: 67, baseType: !32, size: 32, offset: 192)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4698, file: !4337, line: 68, baseType: !7, size: 32, offset: 224)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4698, file: !4337, line: 71, baseType: !284, size: 128, offset: 256)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4698, file: !4337, line: 77, baseType: !4711, size: 64, offset: 384)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2025, size: 32, offset: 8224)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !4717, size: 64, offset: 8256)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2830, line: 18, flags: DIFlagFwdDecl)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1581, size: 64, offset: 8320)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2781, size: 64, offset: 8384)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !4722, size: 64, offset: 8448)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4723, line: 52, size: 64, elements: !4724)
!4723 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4724 = !{!4725}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4722, file: !4723, line: 53, baseType: !4726, size: 64)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4723, line: 40, size: 256, elements: !4728)
!4728 = !{!4729, !4730, !4735}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4727, file: !4723, line: 42, baseType: !1670)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4727, file: !4723, line: 44, baseType: !4731, size: 192)
!4731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4723, line: 28, size: 192, elements: !4732)
!4732 = !{!4733, !4734}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4731, file: !4723, line: 29, baseType: !284, size: 128)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4731, file: !4723, line: 31, baseType: !998, size: 64, offset: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4727, file: !4723, line: 49, baseType: !998, size: 64, offset: 192)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !4722, size: 64, offset: 8512)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2829, size: 256, offset: 8704)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1665, size: 192, offset: 8960)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1670, offset: 9184)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1670, offset: 9344)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1732, size: 64, offset: 256)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!4747 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !4748, size: 32, offset: 384)
!4748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !4749)
!4749 = !{!4750, !4752}
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4748, file: !1317, line: 640, baseType: !4751, size: 32)
!4751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4748, file: !1317, line: 641, baseType: !7, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1670, offset: 896)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !4515, size: 64, offset: 960)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1755, size: 256, offset: 1088)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!4772 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !4773, size: 128, offset: 2112)
!4773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !4774)
!4774 = !{!4775, !4776}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4773, file: !1317, line: 679, baseType: !1581, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4773, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!4783 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !4784, size: 64, offset: 2496)
!4784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !4785)
!4785 = !{!4786, !4991}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4784, file: !1317, line: 691, baseType: !4787, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4789)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !4790)
!4790 = !{!4791, !4792, !4796, !4800, !4804, !4805, !4806, !4810, !4823, !4824, !4831, !4835, !4836, !4840, !4841, !4845, !4850, !4851, !4855, !4859, !4951, !4955, !4956, !4960, !4961, !4965, !4969, !4974, !4978, !4982, !4986, !4990}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4789, file: !1317, line: 1823, baseType: !980, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4789, file: !1317, line: 1824, baseType: !4793, size: 64, offset: 64)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!1476, !1315, !1476, !32}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4789, file: !1317, line: 1825, baseType: !4797, size: 64, offset: 128)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!1521, !1315, !1038, !1039, !1694}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4789, file: !1317, line: 1826, baseType: !4801, size: 64, offset: 192)
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!1521, !1315, !292, !1039, !1694}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4789, file: !1317, line: 1827, baseType: !1825, size: 64, offset: 256)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4789, file: !1317, line: 1828, baseType: !1825, size: 64, offset: 320)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4789, file: !1317, line: 1829, baseType: !4807, size: 64, offset: 384)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!32, !1828, !771}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4789, file: !1317, line: 1830, baseType: !4811, size: 64, offset: 448)
!4811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 64)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!32, !1315, !4814}
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !4816)
!4816 = !{!4817, !4822}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4815, file: !1317, line: 1777, baseType: !4818, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !4819)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!32, !4814, !292, !32, !1476, !331, !7}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4815, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4789, file: !1317, line: 1831, baseType: !4811, size: 64, offset: 512)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4789, file: !1317, line: 1832, baseType: !4825, size: 64, offset: 576)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!4828, !1315, !4829}
!4828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1565, line: 27, flags: DIFlagFwdDecl)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4789, file: !1317, line: 1833, baseType: !4832, size: 64, offset: 640)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!998, !1315, !7, !312}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4789, file: !1317, line: 1834, baseType: !4832, size: 64, offset: 704)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4789, file: !1317, line: 1835, baseType: !4837, size: 64, offset: 768)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!32, !1315, !2098}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4789, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4789, file: !1317, line: 1837, baseType: !4842, size: 64, offset: 896)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!32, !1375, !1315}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4789, file: !1317, line: 1838, baseType: !4846, size: 64, offset: 960)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!32, !1315, !4849}
!4849 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4789, file: !1317, line: 1839, baseType: !4842, size: 64, offset: 1024)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4789, file: !1317, line: 1840, baseType: !4852, size: 64, offset: 1088)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!32, !1315, !1476, !1476, !32}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4789, file: !1317, line: 1841, baseType: !4856, size: 64, offset: 1152)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!32, !32, !1315, !32}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4789, file: !1317, line: 1842, baseType: !4860, size: 64, offset: 1216)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!32, !1315, !32, !4863}
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !4865)
!4865 = !{!4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4896, !4927}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4864, file: !1317, line: 1063, baseType: !4863, size: 64)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4864, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4864, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4864, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4864, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4864, file: !1317, line: 1072, baseType: !4849, size: 64, offset: 576)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4864, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4864, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4864, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4864, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4864, file: !1317, line: 1077, baseType: !1889, size: 128, offset: 768)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4864, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4864, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4864, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4864, file: !1317, line: 1082, baseType: !1908, size: 64, offset: 1088)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4864, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4864, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4864, file: !1317, line: 1087, baseType: !4884, size: 64, offset: 1280)
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4886)
!4886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !4887)
!4887 = !{!4888, !4892}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4886, file: !1317, line: 1012, baseType: !4889, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{null, !4863, !4863}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4886, file: !1317, line: 1013, baseType: !4893, size: 64, offset: 64)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{null, !4863}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4864, file: !1317, line: 1088, baseType: !4897, size: 64, offset: 1344)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4899)
!4899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !4900)
!4900 = !{!4901, !4905, !4909, !4910, !4914, !4918, !4922, !4926}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4899, file: !1317, line: 1017, baseType: !4902, size: 64)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4903, size: 64)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!4849, !4849}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4899, file: !1317, line: 1018, baseType: !4906, size: 64, offset: 64)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{null, !4849}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4899, file: !1317, line: 1019, baseType: !4893, size: 64, offset: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4899, file: !1317, line: 1020, baseType: !4911, size: 64, offset: 192)
!4911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4912, size: 64)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!32, !4863, !32}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4899, file: !1317, line: 1021, baseType: !4915, size: 64, offset: 256)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!771, !4863}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4899, file: !1317, line: 1022, baseType: !4919, size: 64, offset: 320)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!32, !4863, !32, !287}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4899, file: !1317, line: 1023, baseType: !4923, size: 64, offset: 384)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{null, !4863, !1802}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4899, file: !1317, line: 1024, baseType: !4915, size: 64, offset: 448)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4864, file: !1317, line: 1097, baseType: !4928, size: 256, offset: 1408)
!4928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4864, file: !1317, line: 1089, size: 256, elements: !4929)
!4929 = !{!4930, !4939, !4945}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4928, file: !1317, line: 1090, baseType: !4931, size: 256)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4932, line: 10, size: 256, elements: !4933)
!4932 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4933 = !{!4934, !4935, !4938}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4931, file: !4932, line: 11, baseType: !987, size: 32)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4931, file: !4932, line: 12, baseType: !4936, size: 64, offset: 64)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4932, line: 5, flags: DIFlagFwdDecl)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4931, file: !4932, line: 13, baseType: !284, size: 128, offset: 128)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4928, file: !1317, line: 1091, baseType: !4940, size: 64)
!4940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4932, line: 17, size: 64, elements: !4941)
!4941 = !{!4942}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4940, file: !4932, line: 18, baseType: !4943, size: 64)
!4943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4944, size: 64)
!4944 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4932, line: 16, flags: DIFlagFwdDecl)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4928, file: !1317, line: 1096, baseType: !4946, size: 192)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4928, file: !1317, line: 1092, size: 192, elements: !4947)
!4947 = !{!4948, !4949, !4950}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4946, file: !1317, line: 1093, baseType: !284, size: 128)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4946, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4946, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4789, file: !1317, line: 1843, baseType: !4952, size: 64, offset: 1280)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!1521, !1315, !1719, !32, !1039, !1694, !32}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4789, file: !1317, line: 1844, baseType: !2218, size: 64, offset: 1344)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4789, file: !1317, line: 1845, baseType: !4957, size: 64, offset: 1408)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!32, !32}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4789, file: !1317, line: 1846, baseType: !4860, size: 64, offset: 1472)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4789, file: !1317, line: 1847, baseType: !4962, size: 64, offset: 1536)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!1521, !1883, !1315, !1694, !1039, !7}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4789, file: !1317, line: 1848, baseType: !4966, size: 64, offset: 1600)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!1521, !1315, !1694, !1883, !1039, !7}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4789, file: !1317, line: 1849, baseType: !4970, size: 64, offset: 1664)
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!32, !1315, !998, !4973, !1802}
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4789, file: !1317, line: 1850, baseType: !4975, size: 64, offset: 1728)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!998, !1315, !32, !1476, !1476}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4789, file: !1317, line: 1852, baseType: !4979, size: 64, offset: 1792)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !1653, !1315}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4789, file: !1317, line: 1856, baseType: !4983, size: 64, offset: 1856)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4789, file: !1317, line: 1858, baseType: !4987, size: 64, offset: 1920)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4789, file: !1317, line: 1861, baseType: !4852, size: 64, offset: 1984)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4784, file: !1317, line: 692, baseType: !1607, size: 64)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !4993, size: 64, offset: 2560)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !4995)
!4995 = !{!4996, !4997, !4998, !4999}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4994, file: !1317, line: 1101, baseType: !1670)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4994, file: !1317, line: 1102, baseType: !284, size: 128)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4994, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4994, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1733, size: 1216, align: 64, offset: 2624)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!5002 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !5003, size: 64, offset: 3968)
!5003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !5004)
!5004 = !{!5005, !5006, !5007, !5010, !5011}
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5003, file: !1317, line: 698, baseType: !1883, size: 64)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5003, file: !1317, line: 699, baseType: !4540, size: 64)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5003, file: !1317, line: 700, baseType: !5008, size: 64)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1317, line: 700, flags: DIFlagFwdDecl)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5003, file: !1317, line: 701, baseType: !1038, size: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5003, file: !1317, line: 702, baseType: !7, size: 32)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !4622, size: 64, offset: 4096)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !5018, size: 32, offset: 704)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5019, line: 25, size: 32, elements: !5020)
!5019 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5020 = !{!5021}
!5021 = !DIDerivedType(tag: DW_TAG_member, scope: !5018, file: !5019, line: 26, baseType: !5022, size: 32)
!5022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5018, file: !5019, line: 26, size: 32, elements: !5023)
!5023 = !{!5024}
!5024 = !DIDerivedType(tag: DW_TAG_member, scope: !5022, file: !5019, line: 30, baseType: !5025, size: 32)
!5025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5022, file: !5019, line: 30, size: 32, elements: !5026)
!5026 = !{!5027, !5028}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5025, file: !5019, line: 31, baseType: !1670)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5025, file: !5019, line: 32, baseType: !32, size: 32)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !4638, size: 64, offset: 768)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!5033 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !5034, size: 128, offset: 1024)
!5034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !5035)
!5035 = !{!5036, !5037}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5034, file: !1336, line: 108, baseType: !284, size: 128)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5034, file: !1336, line: 109, baseType: !5038, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !5042, size: 128, offset: 1408)
!5042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !5043)
!5043 = !{!5044, !5045, !5046}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5042, file: !1336, line: 117, baseType: !276, size: 128)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5042, file: !1336, line: 118, baseType: !1353, size: 128)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5042, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !4787, size: 64, offset: 320)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1670, offset: 384)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !5051, size: 32, offset: 384)
!5051 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !5052)
!5052 = !{!5053, !5054, !5055, !5056, !5057, !5058}
!5053 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!5054 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!5055 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!5056 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!5057 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!5058 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !4634, size: 32, offset: 544)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1665, size: 192, offset: 576)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !5065, size: 192, offset: 832)
!5065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !5066)
!5066 = !{!5067, !5068, !5069, !5077, !5078, !5079}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5065, file: !1317, line: 886, baseType: !1912)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5065, file: !1317, line: 887, baseType: !2571, size: 64)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5065, file: !1317, line: 888, baseType: !5070, size: 32, offset: 64)
!5070 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2573, line: 9, baseType: !7, size: 32, elements: !5071)
!5071 = !{!5072, !5073, !5074, !5075, !5076}
!5072 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!5073 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!5074 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!5075 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!5076 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5065, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5065, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5065, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2642, size: 64, offset: 1024)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !5082, size: 256, offset: 1088)
!5082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !5083)
!5083 = !{!5084, !5085, !5086, !5087, !5088, !5089}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5082, file: !1317, line: 897, baseType: !312, size: 64)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5082, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5082, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5082, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5082, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5082, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1732, size: 64, offset: 1728)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2025, size: 32, offset: 1792)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2025, size: 32, offset: 1824)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !5098, size: 64, offset: 192)
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{null, !1310}
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !5102, size: 64, offset: 256)
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!32, !1310, !591, !591}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !5098, size: 64, offset: 320)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !5107, size: 64, offset: 384)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!591, !1310, !591}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !5111, size: 64, offset: 448)
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!32, !1310, !5114, !1111}
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 64)
!5115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !5111, size: 64, offset: 512)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !5111, size: 64, offset: 576)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !5111, size: 64, offset: 640)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !5107, size: 64, offset: 704)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !5121, size: 64, offset: 768)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!32, !1310, !591, !591, !331}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !5125, size: 64, offset: 832)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!32, !1310, !591}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !5129, size: 64, offset: 896)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!32, !1310, !591, !331}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !5125, size: 64, offset: 960)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !5125, size: 64, offset: 1024)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !5135, size: 64, offset: 1088)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!591, !1310, !1315, !32}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !5140, size: 64, offset: 1216)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!32, !1310, !5143}
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !5145)
!5145 = !{!5146, !5147, !5148, !5149, !5150}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5144, file: !96, line: 66, baseType: !481, size: 8)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5144, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5144, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5144, file: !96, line: 69, baseType: !2315, size: 16, offset: 16)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5144, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !5152, size: 64, offset: 1280)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!987, !591}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !5156, size: 64, offset: 1344)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{null, !1310, !591, !1653}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !5160, size: 64, offset: 1408)
!5160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 64)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{!32, !5163, !5165, !5168, !5168}
!5163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 64)
!5164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5167)
!5167 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5170)
!5170 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !5172, size: 64, offset: 1472)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 64)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{!32, !1310, !5175}
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !5177)
!5177 = !{!5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5199, !5200, !5201, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5258, !5259, !5278, !5279, !5280, !5289, !5291, !5292, !5293, !5294, !5295, !5297, !5298, !5313, !5315, !5321, !5327, !5335, !5336, !5337, !5338, !5339, !5340, !5348, !5355}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5176, file: !65, line: 758, baseType: !373, size: 64)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5176, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5176, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5176, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5176, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5176, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5176, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5176, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5176, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5176, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5176, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5176, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5176, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5176, file: !65, line: 771, baseType: !5192, size: 64, offset: 448)
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5193, size: 64)
!5193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5194)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !5195)
!5195 = !{!5196, !5197, !5198}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5194, file: !65, line: 752, baseType: !987, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5194, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5194, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5176, file: !65, line: 772, baseType: !1665, size: 192, offset: 512)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5176, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5176, file: !65, line: 774, baseType: !5202, size: 64, offset: 768)
!5202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5203, size: 64)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !5204)
!5204 = !{!5205, !5206, !5207, !5208, !5209, !5221, !5222, !5224, !5225, !5226, !5227}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5203, file: !65, line: 588, baseType: !276, size: 128)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5203, file: !65, line: 590, baseType: !1665, size: 192, offset: 128)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5203, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5203, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5203, file: !65, line: 597, baseType: !5210, size: 256, offset: 448)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5203, file: !65, line: 593, size: 256, elements: !5211)
!5211 = !{!5212, !5219, !5220}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5210, file: !65, line: 594, baseType: !5213, size: 112)
!5213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !5214)
!5214 = !{!5215, !5216, !5217}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5213, file: !65, line: 510, baseType: !794, size: 8)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5213, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5213, file: !65, line: 512, baseType: !5218, size: 96, offset: 16)
!5218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !4150)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5210, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5210, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5203, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5203, file: !65, line: 604, baseType: !5223, size: 192, offset: 768)
!5223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 192, elements: !1592)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5203, file: !65, line: 606, baseType: !3398, size: 96, offset: 960)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5203, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5203, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5203, file: !65, line: 610, baseType: !5228, size: 1728, offset: 1216)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !5229)
!5229 = !{!5230, !5231, !5232, !5236, !5237, !5243}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5228, file: !65, line: 570, baseType: !312, size: 64)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5228, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5228, file: !65, line: 572, baseType: !5233, size: 1024, offset: 128)
!5233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !5234)
!5234 = !{!5235}
!5235 = !DISubrange(count: 128)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5228, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5228, file: !65, line: 574, baseType: !5238, size: 384, offset: 1280)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5239, line: 40, size: 384, elements: !5240)
!5239 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5240 = !{!5241}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5238, file: !5239, line: 41, baseType: !5242, size: 384)
!5242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2664)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5228, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5176, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5176, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5176, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5176, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5176, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5176, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5176, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5176, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5176, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5176, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5176, file: !65, line: 786, baseType: !5168, size: 64, offset: 1152)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5176, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5176, file: !65, line: 789, baseType: !5257, size: 64, offset: 1280)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5176, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5176, file: !65, line: 791, baseType: !5260, size: 64, offset: 1408)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !5262)
!5262 = !{!5263, !5264, !5265, !5266, !5274, !5275, !5276, !5277}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5261, file: !65, line: 735, baseType: !591, size: 64)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5261, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5261, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!5266 = !DIDerivedType(tag: DW_TAG_member, scope: !5261, file: !65, line: 738, baseType: !5267, size: 128, offset: 192)
!5267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5261, file: !65, line: 738, size: 128, elements: !5268)
!5268 = !{!5269}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5267, file: !65, line: 742, baseType: !5270, size: 128)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5267, file: !65, line: 739, size: 128, elements: !5271)
!5271 = !{!5272, !5273}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5270, file: !65, line: 740, baseType: !1310, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5270, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5261, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5261, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5261, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5261, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5176, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5176, file: !65, line: 793, baseType: !5228, size: 1728, offset: 1536)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5176, file: !65, line: 794, baseType: !5281, size: 64, offset: 3264)
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 64)
!5282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5283)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !5284)
!5284 = !{!5285}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5283, file: !65, line: 433, baseType: !5286, size: 64)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{!32, !1088, !5114, !1111}
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5176, file: !65, line: 795, baseType: !5290, size: 64, offset: 3328)
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5176, file: !65, line: 796, baseType: !1665, size: 192, offset: 3392)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5176, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5176, file: !65, line: 798, baseType: !1953, size: 64, offset: 3648)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5176, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5176, file: !65, line: 800, baseType: !5296, size: 128, offset: 3776)
!5296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2664)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5176, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5176, file: !65, line: 805, baseType: !5299, size: 64, offset: 4032)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !5301)
!5301 = !{!5302, !5303, !5304, !5307, !5308, !5309, !5310, !5311, !5312}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5300, file: !65, line: 479, baseType: !1088, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5300, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5300, file: !65, line: 481, baseType: !5305, size: 64, offset: 128)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5300, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5300, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5300, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5300, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5300, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5300, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5176, file: !65, line: 806, baseType: !5314, size: 64, offset: 4096)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5176, file: !65, line: 807, baseType: !5316, size: 64, offset: 4160)
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 64)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !5318)
!5318 = !{!5319, !5320}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5317, file: !96, line: 4964, baseType: !493, size: 32)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5317, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5176, file: !65, line: 808, baseType: !5322, size: 64, offset: 4224)
!5322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5323, size: 64)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !5324)
!5324 = !{!5325, !5326}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5323, file: !65, line: 725, baseType: !581, size: 16)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5323, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5176, file: !65, line: 815, baseType: !5328, size: 64, offset: 4288)
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5329, size: 64)
!5329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !5330)
!5330 = !{!5331, !5332, !5333, !5334}
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5329, file: !96, line: 4972, baseType: !493, size: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5329, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5329, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5329, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5176, file: !65, line: 823, baseType: !1802, size: 64, offset: 4352)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5176, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5176, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5176, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5176, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5176, file: !65, line: 832, baseType: !5341, size: 64, offset: 4544)
!5341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 64)
!5342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5343, line: 17, size: 96, elements: !5344)
!5343 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5344 = !{!5345, !5346, !5347}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32, offset: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32, offset: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5176, file: !65, line: 833, baseType: !5349, size: 64, offset: 4608)
!5349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 64)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !5351)
!5351 = !{!5352, !5353, !5354}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5350, file: !65, line: 504, baseType: !331, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5350, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5350, file: !65, line: 506, baseType: !3071, offset: 128)
!5355 = !DIDerivedType(tag: DW_TAG_member, scope: !5176, file: !65, line: 834, baseType: !5356, size: 256, offset: 4672)
!5356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5176, file: !65, line: 834, size: 256, elements: !5357)
!5357 = !{!5358, !5359}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5356, file: !65, line: 835, baseType: !2829, size: 256)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5356, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !5361, size: 64, offset: 1536)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{null, !1310, !5175}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !5365, size: 64, offset: 1600)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !1310, !987, !1088, !1088}
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !5369, size: 64, offset: 1664)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!32, !5163, !5372, !987}
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !5374, size: 64, offset: 1728)
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!32, !5163, !331, !2516}
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !5378, size: 64, offset: 1792)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!32, !1310, !2098}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !5382, size: 64, offset: 1856)
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5383, size: 64)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!4828, !1310, !1315, !4829}
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !5386, size: 64, offset: 1920)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 64)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!32, !5389, !591, !987}
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5390, size: 64)
!5390 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !5392, size: 64, offset: 1984)
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 64)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !5389, !591, !987}
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !5396, size: 64, offset: 2048)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!5399, !591}
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !5403, size: 64, offset: 2112)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!771, !5163, !5163}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !5407, size: 64, offset: 2176)
!5407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !5410, size: 64, offset: 2304)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5412)
!5412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !5413)
!5413 = !{!5414, !5415, !5422, !5424}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5412, file: !65, line: 47, baseType: !1686, size: 64)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5412, file: !65, line: 48, baseType: !5416, size: 64, offset: 64)
!5416 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !5417)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!32, !591, !5420}
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5412, file: !65, line: 49, baseType: !5423, size: 64, offset: 128)
!5423 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5412, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !5314, size: 64, offset: 448)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !5438, size: 128, offset: 512)
!5438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !5439)
!5439 = !{!5440, !5441}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5438, file: !65, line: 137, baseType: !987, size: 32)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5438, file: !65, line: 138, baseType: !1953, size: 64, offset: 64)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2829, size: 256, offset: 1152)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1665, size: 192, offset: 1408)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !5453, size: 64, offset: 2112)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 64)
!5454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5455)
!5455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !5456)
!5456 = !{!5457, !5461, !5462, !5466}
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5455, file: !65, line: 213, baseType: !5458, size: 64)
!5458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5459, size: 64)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!32, !1096, !591, !591}
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5455, file: !65, line: 215, baseType: !5458, size: 64, offset: 64)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5455, file: !65, line: 217, baseType: !5463, size: 64, offset: 128)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 64)
!5464 = !DISubroutineType(types: !5465)
!5465 = !{!32, !1096, !591, !591, !331}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5455, file: !65, line: 219, baseType: !5467, size: 64, offset: 192)
!5467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5468, size: 64)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!32, !1096, !591}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !5473, size: 128)
!5473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !5474)
!5474 = !{!5475, !5478}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5473, file: !31, line: 909, baseType: !5476, size: 64)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5473, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !5480, size: 64, offset: 4096)
!5480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5481, size: 64)
!5481 = !DISubroutineType(types: !5482)
!5482 = !{!32, !290, !32, !5483, !987}
!5483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5484, size: 64)
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5486, line: 94, size: 256, elements: !5487)
!5486 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5487 = !{!5488, !5489, !5490, !5491, !5492, !5493, !5498}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5485, file: !5486, line: 95, baseType: !591, size: 64)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5485, file: !5486, line: 96, baseType: !581, size: 16, offset: 64)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5485, file: !5486, line: 97, baseType: !581, size: 16, offset: 80)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5485, file: !5486, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5485, file: !5486, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5485, file: !5486, line: 103, baseType: !5494, size: 64, offset: 128)
!5494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5486, line: 50, size: 64, elements: !5495)
!5495 = !{!5496, !5497}
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5494, file: !5486, line: 51, baseType: !987, size: 32)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5494, file: !5486, line: 52, baseType: !987, size: 32, offset: 32)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5485, file: !5486, line: 104, baseType: !290, size: 64, offset: 192)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !5500, size: 64, offset: 4160)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!32, !290, !987, !987}
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !5504, size: 64, offset: 4224)
!5504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5505, size: 64)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!5507, !290}
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !5510, size: 64, offset: 4288)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!32, !290, !5513, !32}
!5513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5514, size: 64)
!5514 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !5516, size: 64, offset: 4352)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{!290, !290}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !5520, size: 64, offset: 4032)
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 64)
!5521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5522)
!5522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !5523)
!5523 = !{!5524, !5525, !5545, !5546, !5557, !5569, !5573, !5577, !5581, !5582, !5583, !5600, !5601, !5613, !5614, !5644, !5645, !5661, !5665, !5674, !5685, !5689, !5702, !5706, !5710, !5720, !5721, !5722, !5723, !5727, !5728, !5830, !5834, !5844, !5848, !5849, !5850, !5854, !5862, !5866, !5870, !5886, !5890, !5902, !5906, !5907, !5922, !5934, !5935, !5951, !5952, !5966, !5970, !5974, !5975, !6014, !6020, !6031, !6032, !6033, !6034}
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5522, file: !251, line: 422, baseType: !987, size: 32)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5522, file: !251, line: 423, baseType: !5526, size: 64, offset: 64)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5527, size: 64)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{null, !290, !5529}
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !5531)
!5531 = !{!5532, !5533, !5534, !5535, !5536, !5537, !5538, !5540, !5541, !5542, !5543, !5544}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5530, file: !209, line: 178, baseType: !493, size: 32)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5530, file: !209, line: 179, baseType: !4625, size: 256, offset: 32)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5530, file: !209, line: 180, baseType: !4625, size: 256, offset: 288)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5530, file: !209, line: 181, baseType: !4625, size: 256, offset: 544)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5530, file: !209, line: 182, baseType: !4625, size: 256, offset: 800)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5530, file: !209, line: 183, baseType: !4625, size: 256, offset: 1056)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5530, file: !209, line: 184, baseType: !5539, size: 96, offset: 1312)
!5539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !4150)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5530, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5530, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5530, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5530, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5530, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5522, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5522, file: !251, line: 425, baseType: !5547, size: 64, offset: 192)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{null, !290, !5550, !591}
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5551, size: 64)
!5551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !5552)
!5552 = !{!5553, !5554, !5555, !5556}
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5551, file: !209, line: 311, baseType: !493, size: 32)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5551, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5551, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5551, file: !209, line: 314, baseType: !480, offset: 96)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5522, file: !251, line: 426, baseType: !5558, size: 64, offset: 256)
!5558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5559, size: 64)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{null, !290, !5561}
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 64)
!5562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !5563)
!5563 = !{!5564, !5565, !5566, !5567}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5562, file: !209, line: 204, baseType: !493, size: 32)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5562, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5562, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5562, file: !209, line: 207, baseType: !5568, size: 48, offset: 96)
!5568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5522, file: !251, line: 427, baseType: !5570, size: 64, offset: 320)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!32, !290, !5561}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5522, file: !251, line: 428, baseType: !5574, size: 64, offset: 384)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!987, !290}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5522, file: !251, line: 429, baseType: !5578, size: 64, offset: 448)
!5578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5579, size: 64)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{null, !290, !987}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5522, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5522, file: !251, line: 431, baseType: !5574, size: 64, offset: 576)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5522, file: !251, line: 432, baseType: !5584, size: 64, offset: 640)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!32, !290, !5587}
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5588, size: 64)
!5588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !5589)
!5589 = !{!5590, !5591}
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5588, file: !251, line: 94, baseType: !208, size: 32)
!5591 = !DIDerivedType(tag: DW_TAG_member, scope: !5588, file: !251, line: 95, baseType: !5592, size: 32, offset: 32)
!5592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5588, file: !251, line: 95, size: 32, elements: !5593)
!5593 = !{!5594, !5595, !5596, !5597, !5598, !5599}
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5592, file: !251, line: 96, baseType: !221, size: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5592, file: !251, line: 97, baseType: !229, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5592, file: !251, line: 98, baseType: !235, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5592, file: !251, line: 99, baseType: !242, size: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5592, file: !251, line: 100, baseType: !246, size: 32)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5592, file: !251, line: 101, baseType: !794, size: 8)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5522, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5522, file: !251, line: 435, baseType: !5602, size: 64, offset: 768)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!32, !290, !5605, !793}
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !5607)
!5607 = !{!5608, !5609, !5610, !5611, !5612}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5606, file: !209, line: 336, baseType: !493, size: 32)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5606, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5606, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5606, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5606, file: !209, line: 340, baseType: !480, offset: 128)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5522, file: !251, line: 437, baseType: !5602, size: 64, offset: 832)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5522, file: !251, line: 439, baseType: !5615, size: 64, offset: 896)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 64)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{!32, !290, !5618}
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !5620)
!5620 = !{!5621, !5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643}
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5619, file: !209, line: 463, baseType: !493, size: 32)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5619, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5619, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5619, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5619, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5619, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5619, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5619, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5619, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5619, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5619, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5619, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5619, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5619, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5619, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5619, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5619, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5619, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5619, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5619, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5619, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5619, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5619, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5522, file: !251, line: 440, baseType: !5615, size: 64, offset: 960)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5522, file: !251, line: 441, baseType: !5646, size: 64, offset: 1024)
!5646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5647, size: 64)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{null, !290, !5649}
!5649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 64)
!5650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !5651)
!5651 = !{!5652, !5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660}
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5650, file: !209, line: 514, baseType: !493, size: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5650, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5650, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5650, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5650, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5650, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5650, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5650, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5650, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5522, file: !251, line: 443, baseType: !5662, size: 64, offset: 1088)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = !DISubroutineType(types: !5664)
!5664 = !{!32, !290, !5649}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5522, file: !251, line: 445, baseType: !5666, size: 64, offset: 1152)
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5667, size: 64)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{null, !290, !5669}
!5669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5670, size: 64)
!5670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !5671)
!5671 = !{!5672, !5673}
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5670, file: !251, line: 261, baseType: !331, size: 64)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5670, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5522, file: !251, line: 447, baseType: !5675, size: 64, offset: 1216)
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 64)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{null, !290, !5678}
!5678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5679, size: 64)
!5679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !5680)
!5680 = !{!5681, !5682, !5683, !5684}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5679, file: !209, line: 576, baseType: !493, size: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5679, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5679, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5679, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5522, file: !251, line: 449, baseType: !5686, size: 64, offset: 1280)
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = !DISubroutineType(types: !5688)
!5688 = !{!32, !290, !5678}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5522, file: !251, line: 451, baseType: !5690, size: 64, offset: 1344)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DISubroutineType(types: !5692)
!5692 = !{null, !290, !5693, !5372}
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !5695)
!5695 = !{!5696, !5697, !5698, !5699, !5700}
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5694, file: !209, line: 771, baseType: !493, size: 32)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5694, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5694, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5694, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5694, file: !209, line: 775, baseType: !5701, offset: 128)
!5701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5522, file: !251, line: 452, baseType: !5703, size: 64, offset: 1408)
!5703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5704, size: 64)
!5704 = !DISubroutineType(types: !5705)
!5705 = !{null, !290, !987, !793}
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5522, file: !251, line: 453, baseType: !5707, size: 64, offset: 1472)
!5707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5708, size: 64)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!32, !290, !250}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5522, file: !251, line: 454, baseType: !5711, size: 64, offset: 1536)
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{null, !290, !5714, !5372}
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !5716)
!5716 = !{!5717, !5718, !5719}
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5715, file: !209, line: 790, baseType: !493, size: 32)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5715, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5715, file: !209, line: 792, baseType: !5701, offset: 64)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5522, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5522, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5522, file: !251, line: 458, baseType: !5574, size: 64, offset: 1728)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5522, file: !251, line: 459, baseType: !5724, size: 64, offset: 1792)
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = !DISubroutineType(types: !5726)
!5726 = !{!32, !290, !987}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5522, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5522, file: !251, line: 461, baseType: !5729, size: 64, offset: 1920)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!32, !290, !5732, !2516}
!5732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5733, size: 64)
!5733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !5734)
!5734 = !{!5735, !5736, !5737, !5738, !5824, !5829}
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5733, file: !209, line: 1089, baseType: !493, size: 32)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5733, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5733, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !5733, file: !209, line: 1092, baseType: !5739, size: 1344, offset: 128)
!5739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !5740)
!5740 = !{!5741, !5742, !5810, !5820, !5821, !5822, !5823}
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5739, file: !209, line: 993, baseType: !493, size: 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !5739, file: !209, line: 994, baseType: !5743, size: 416, offset: 32)
!5743 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !5744)
!5744 = !{!5745, !5753, !5754, !5755, !5762, !5763, !5772, !5780, !5781, !5782, !5789, !5790, !5798, !5806}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !5743, file: !209, line: 940, baseType: !5746, size: 128)
!5746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !5747)
!5747 = !{!5748, !5749, !5750, !5751, !5752}
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5746, file: !209, line: 846, baseType: !3208, size: 32)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5746, file: !209, line: 847, baseType: !3208, size: 32, offset: 32)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5746, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5746, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5746, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !5743, file: !209, line: 941, baseType: !5746, size: 128)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !5743, file: !209, line: 942, baseType: !5746, size: 128)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !5743, file: !209, line: 943, baseType: !5756, size: 128)
!5756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !5757)
!5757 = !{!5758, !5759, !5760, !5761}
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5756, file: !209, line: 863, baseType: !3208, size: 32)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5756, file: !209, line: 864, baseType: !3208, size: 32, offset: 32)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5756, file: !209, line: 865, baseType: !3208, size: 32, offset: 64)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5756, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !5743, file: !209, line: 944, baseType: !5756, size: 128)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !5743, file: !209, line: 945, baseType: !5764, size: 128)
!5764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !5765)
!5765 = !{!5766, !5767, !5768, !5769, !5770, !5771}
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5764, file: !209, line: 881, baseType: !3208, size: 32)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5764, file: !209, line: 882, baseType: !3208, size: 32, offset: 32)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5764, file: !209, line: 883, baseType: !3208, size: 32, offset: 64)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5764, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !5764, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !5764, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !5743, file: !209, line: 946, baseType: !5773, size: 320)
!5773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !5774)
!5774 = !{!5775, !5776, !5777, !5778, !5779}
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5773, file: !209, line: 900, baseType: !3229, size: 128)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5773, file: !209, line: 901, baseType: !3229, size: 128, offset: 128)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5773, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5773, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5773, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !5743, file: !209, line: 947, baseType: !5773, size: 320)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !5743, file: !209, line: 948, baseType: !5773, size: 320)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !5743, file: !209, line: 949, baseType: !5783, size: 320)
!5783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !5784)
!5784 = !{!5785, !5786, !5787, !5788}
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5783, file: !209, line: 917, baseType: !3229, size: 128)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5783, file: !209, line: 918, baseType: !3229, size: 128, offset: 128)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5783, file: !209, line: 919, baseType: !3208, size: 32, offset: 256)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5783, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !5743, file: !209, line: 950, baseType: !5783, size: 320)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !5743, file: !209, line: 951, baseType: !5791, size: 320)
!5791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !5792)
!5792 = !{!5793, !5794, !5795, !5796, !5797}
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5791, file: !209, line: 932, baseType: !3229, size: 128)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5791, file: !209, line: 933, baseType: !3229, size: 128, offset: 128)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5791, file: !209, line: 934, baseType: !3208, size: 32, offset: 256)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5791, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !5791, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !5743, file: !209, line: 952, baseType: !5799, size: 112)
!5799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !5800, line: 164, size: 112, elements: !5801)
!5800 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!5801 = !{!5802, !5804, !5805}
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5799, file: !5800, line: 165, baseType: !5803, size: 48)
!5803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !5799, file: !5800, line: 166, baseType: !5803, size: 48, offset: 48)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !5799, file: !5800, line: 167, baseType: !535, size: 16, offset: 96)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !5743, file: !209, line: 953, baseType: !5807, size: 416)
!5807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !5808)
!5808 = !{!5809}
!5809 = !DISubrange(count: 52)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !5739, file: !209, line: 995, baseType: !5811, size: 160, offset: 448)
!5811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !5812)
!5812 = !{!5813, !5815, !5816, !5817, !5818}
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5811, file: !209, line: 968, baseType: !5814, size: 16)
!5814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2664)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5811, file: !209, line: 969, baseType: !5803, size: 48, offset: 16)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !5811, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !5811, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5811, file: !209, line: 972, baseType: !5819, size: 64, offset: 96)
!5819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 64, elements: !2664)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !5739, file: !209, line: 996, baseType: !5743, size: 416, offset: 608)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !5739, file: !209, line: 997, baseType: !5811, size: 160, offset: 1024)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !5739, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !5739, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!5824 = !DIDerivedType(tag: DW_TAG_member, scope: !5733, file: !209, line: 1093, baseType: !5825, size: 32, offset: 1472)
!5825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5733, file: !209, line: 1093, size: 32, elements: !5826)
!5826 = !{!5827, !5828}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !5825, file: !209, line: 1094, baseType: !493, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !5825, file: !209, line: 1095, baseType: !493, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !5733, file: !209, line: 1097, baseType: !492, offset: 1504)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5522, file: !251, line: 463, baseType: !5831, size: 64, offset: 1984)
!5831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 64)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{!32, !290, !5732}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5522, file: !251, line: 464, baseType: !5835, size: 64, offset: 2048)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!32, !290, !5838}
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !5840)
!5840 = !{!5841, !5842, !5843}
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5839, file: !209, line: 1218, baseType: !493, size: 32)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !5839, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5839, file: !209, line: 1220, baseType: !5233, size: 1024, offset: 64)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5522, file: !251, line: 465, baseType: !5845, size: 64, offset: 2112)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!32, !290, !2516}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5522, file: !251, line: 466, baseType: !5574, size: 64, offset: 2176)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5522, file: !251, line: 467, baseType: !5574, size: 64, offset: 2240)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5522, file: !251, line: 468, baseType: !5851, size: 64, offset: 2304)
!5851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5852, size: 64)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{!32, !290, !2516, !793, !793}
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5522, file: !251, line: 470, baseType: !5855, size: 64, offset: 2368)
!5855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5856, size: 64)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!32, !290, !5858, !5860, !5861}
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5861, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5522, file: !251, line: 472, baseType: !5863, size: 64, offset: 2432)
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5864, size: 64)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!32, !290, !2516, !793, !793, !987}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5522, file: !251, line: 474, baseType: !5867, size: 64, offset: 2496)
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 64)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{!32, !290, !5858, !5860, !5861, !2516, !771}
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5522, file: !251, line: 477, baseType: !5871, size: 64, offset: 2560)
!5871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5872, size: 64)
!5872 = !DISubroutineType(types: !5873)
!5873 = !{null, !290, !5874}
!5874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5875, size: 64)
!5875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !5876)
!5876 = !{!5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885}
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5875, file: !209, line: 542, baseType: !493, size: 32)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !5875, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !5875, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !5875, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !5875, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !5875, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !5875, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !5875, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !5875, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5522, file: !251, line: 478, baseType: !5887, size: 64, offset: 2624)
!5887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5888, size: 64)
!5888 = !DISubroutineType(types: !5889)
!5889 = !{!32, !290, !5874}
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5522, file: !251, line: 479, baseType: !5891, size: 64, offset: 2688)
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!32, !290, !5894}
!5894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !5896)
!5896 = !{!5897, !5898, !5899, !5900, !5901}
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5895, file: !209, line: 1238, baseType: !493, size: 32)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5895, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5895, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5895, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5895, file: !209, line: 1242, baseType: !480, offset: 128)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5522, file: !251, line: 480, baseType: !5903, size: 64, offset: 2752)
!5903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5904, size: 64)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{!32, !290, !5894, !591}
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5522, file: !251, line: 482, baseType: !5891, size: 64, offset: 2816)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5522, file: !251, line: 483, baseType: !5908, size: 64, offset: 2880)
!5908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5909, size: 64)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!32, !290, !5911}
!5911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5912, size: 64)
!5912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !5913)
!5913 = !{!5914, !5915, !5916, !5917, !5918, !5920, !5921}
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5912, file: !209, line: 1318, baseType: !493, size: 32)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !5912, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !5912, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !5912, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !5912, file: !209, line: 1322, baseType: !5919, size: 96, offset: 128)
!5919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1592)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !5912, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !5912, file: !209, line: 1324, baseType: !5919, size: 96, offset: 256)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5522, file: !251, line: 484, baseType: !5923, size: 64, offset: 2944)
!5923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5924, size: 64)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{!32, !290, !5926}
!5926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5927, size: 64)
!5927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !5928)
!5928 = !{!5929, !5930, !5931, !5932}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5927, file: !209, line: 383, baseType: !493, size: 32)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5927, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !5927, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5927, file: !209, line: 386, baseType: !5933, size: 256, offset: 96)
!5933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2433)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5522, file: !251, line: 486, baseType: !5602, size: 64, offset: 3008)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5522, file: !251, line: 488, baseType: !5936, size: 64, offset: 3072)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 64)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!32, !290, !5939}
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5940, size: 64)
!5940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !5941)
!5941 = !{!5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5940, file: !209, line: 361, baseType: !493, size: 32)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5940, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !5940, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !5940, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !5940, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !5940, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !5940, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !5940, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5940, file: !209, line: 369, baseType: !2663, size: 64, offset: 256)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5522, file: !251, line: 489, baseType: !5936, size: 64, offset: 3136)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5522, file: !251, line: 490, baseType: !5953, size: 64, offset: 3200)
!5953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5954, size: 64)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{!32, !290, !5956, !591}
!5956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5957, size: 64)
!5957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5958)
!5958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !5959)
!5959 = !{!5960, !5961, !5962, !5963, !5964}
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5958, file: !209, line: 245, baseType: !493, size: 32)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5958, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5958, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5958, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5958, file: !209, line: 249, baseType: !5965, offset: 128)
!5965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5522, file: !251, line: 492, baseType: !5967, size: 64, offset: 3264)
!5967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5968, size: 64)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{!32, !290, !5956, !3258}
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5522, file: !251, line: 494, baseType: !5971, size: 64, offset: 3328)
!5971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5972, size: 64)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!32, !290, !987, !5618}
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5522, file: !251, line: 496, baseType: !5971, size: 64, offset: 3392)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5522, file: !251, line: 498, baseType: !5976, size: 64, offset: 3456)
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{!32, !290, !5979}
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !5981)
!5981 = !{!5982, !6007}
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5980, file: !251, line: 125, baseType: !5983, size: 384)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !5984)
!5984 = !{!5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5997, !5998, !5999, !6000, !6002, !6006}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5983, file: !209, line: 1997, baseType: !493, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5983, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !5983, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5983, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !5983, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5983, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !5983, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !5983, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !5983, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !5983, file: !209, line: 2006, baseType: !5995, size: 8, offset: 120)
!5995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !5996)
!5996 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !5983, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !5983, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !5983, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5983, file: !209, line: 2010, baseType: !6001, size: 8, offset: 152)
!6001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2472)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5983, file: !209, line: 2011, baseType: !6003, size: 224, offset: 160)
!6003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !6004)
!6004 = !{!6005}
!6005 = !DISubrange(count: 7)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !5983, file: !209, line: 2012, baseType: !492, offset: 384)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !5980, file: !251, line: 130, baseType: !6008, size: 384, offset: 384)
!6008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5980, file: !251, line: 126, size: 384, elements: !6009)
!6009 = !{!6010, !6012, !6013}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6008, file: !251, line: 127, baseType: !6011, size: 128)
!6011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2664)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6008, file: !251, line: 128, baseType: !6011, size: 128, offset: 128)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6008, file: !251, line: 129, baseType: !6011, size: 128, offset: 256)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5522, file: !251, line: 500, baseType: !6015, size: 64, offset: 3520)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!32, !290, !6018}
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64)
!6019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5980)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5522, file: !251, line: 502, baseType: !6021, size: 64, offset: 3584)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{!32, !290, !6024}
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64)
!6025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !6026)
!6026 = !{!6027, !6028, !6029, !6030}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6025, file: !209, line: 1390, baseType: !493, size: 32)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6025, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6025, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6025, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5522, file: !251, line: 504, baseType: !6021, size: 64, offset: 3648)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5522, file: !251, line: 506, baseType: !5711, size: 64, offset: 3712)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5522, file: !251, line: 508, baseType: !5953, size: 64, offset: 3776)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5522, file: !251, line: 510, baseType: !5967, size: 64, offset: 3840)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !6036, size: 64, offset: 4096)
!6036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6037, size: 64)
!6037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6038)
!6038 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !6040, size: 64, offset: 4160)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6042)
!6042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !6043)
!6043 = !{!6044, !6048, !6054, !6067, !6071, !6075}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6042, file: !31, line: 271, baseType: !6045, size: 64)
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6046, size: 64)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!32, !415, !290, !476, !3258, !3258, !7}
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6042, file: !31, line: 274, baseType: !6049, size: 64, offset: 64)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!32, !6052, !564}
!6052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6053, size: 64)
!6053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6042, file: !31, line: 275, baseType: !6055, size: 64, offset: 128)
!6055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6056, size: 64)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!32, !6058, !6060, !535}
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6059, size: 64)
!6059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !6062)
!6062 = !{!6063, !6064, !6065}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6061, file: !31, line: 245, baseType: !7, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6061, file: !31, line: 246, baseType: !3325, size: 32, offset: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6061, file: !31, line: 254, baseType: !6066, size: 768, offset: 64)
!6066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !4150)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6042, file: !31, line: 276, baseType: !6068, size: 64, offset: 192)
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6069, size: 64)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{null, !6060, !773, !946}
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6042, file: !31, line: 279, baseType: !6072, size: 64, offset: 256)
!6072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6073, size: 64)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!771, !292, !7}
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6042, file: !31, line: 280, baseType: !6076, size: 64, offset: 320)
!6076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6077, size: 64)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{!535, !6052}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1670, offset: 4864)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !6106, size: 192, offset: 4864)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !6107)
!6107 = !{!6108, !6109}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6106, file: !31, line: 225, baseType: !284, size: 128)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6106, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !6106, size: 192, offset: 5056)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !6106, size: 192, offset: 5248)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !6113, size: 64, offset: 5440)
!6113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6114, size: 64)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6115, line: 192, size: 704, elements: !6116)
!6115 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6116 = !{!6117, !6118, !6119, !6359}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6114, file: !6115, line: 193, baseType: !284, size: 128)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6114, file: !6115, line: 194, baseType: !1670, offset: 128)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6114, file: !6115, line: 195, baseType: !6120, size: 512, offset: 128)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6115, line: 64, size: 512, elements: !6121)
!6121 = !{!6122, !6123, !6124, !6126, !6127, !6228, !6349, !6354, !6355, !6356, !6357, !6358}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6120, file: !6115, line: 65, baseType: !292, size: 64)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6120, file: !6115, line: 66, baseType: !284, size: 128, offset: 64)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6120, file: !6115, line: 67, baseType: !6125, size: 64, offset: 192)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 64)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6120, file: !6115, line: 68, baseType: !6113, size: 64, offset: 256)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6120, file: !6115, line: 69, baseType: !6128, size: 64, offset: 320)
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6129, size: 64)
!6129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6115, line: 138, size: 448, elements: !6130)
!6130 = !{!6131, !6135, !6154, !6156, !6189, !6220, !6224}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6129, file: !6115, line: 139, baseType: !6132, size: 64)
!6132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6133, size: 64)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{null, !6125}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6129, file: !6115, line: 140, baseType: !6136, size: 64, offset: 64)
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6137, size: 64)
!6137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6138)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6139, line: 230, size: 128, elements: !6140)
!6139 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6140 = !{!6141, !6150}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6138, file: !6139, line: 231, baseType: !6142, size: 64)
!6142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6143, size: 64)
!6143 = !DISubroutineType(types: !6144)
!6144 = !{!1521, !6125, !6145, !1038}
!6145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 64)
!6146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6139, line: 30, size: 128, elements: !6147)
!6147 = !{!6148, !6149}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6146, file: !6139, line: 31, baseType: !292, size: 64)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6146, file: !6139, line: 32, baseType: !1379, size: 16, offset: 64)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6138, file: !6139, line: 232, baseType: !6151, size: 64, offset: 64)
!6151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6152, size: 64)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!1521, !6125, !6145, !292, !1039}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6129, file: !6115, line: 141, baseType: !6155, size: 64, offset: 128)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6129, file: !6115, line: 142, baseType: !6157, size: 64, offset: 192)
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6159, size: 64)
!6159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6160)
!6160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6139, line: 84, size: 320, elements: !6161)
!6161 = !{!6162, !6163, !6167, !6186, !6187}
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6160, file: !6139, line: 85, baseType: !292, size: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6160, file: !6139, line: 86, baseType: !6164, size: 64, offset: 64)
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 64)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{!1379, !6125, !6145, !32}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6160, file: !6139, line: 88, baseType: !6168, size: 64, offset: 128)
!6168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 64)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!1379, !6125, !6171, !32}
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6172, size: 64)
!6172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6139, line: 168, size: 448, elements: !6173)
!6173 = !{!6174, !6175, !6176, !6177, !6181, !6182}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6172, file: !6139, line: 169, baseType: !6146, size: 128)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6172, file: !6139, line: 170, baseType: !1039, size: 64, offset: 128)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6172, file: !6139, line: 171, baseType: !591, size: 64, offset: 192)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6172, file: !6139, line: 172, baseType: !6178, size: 64, offset: 256)
!6178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6179, size: 64)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!1521, !1315, !6125, !6171, !1038, !1476, !1039}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6172, file: !6139, line: 174, baseType: !6178, size: 64, offset: 320)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6172, file: !6139, line: 176, baseType: !6183, size: 64, offset: 384)
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 64)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!32, !1315, !6125, !6171, !2098}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6160, file: !6139, line: 90, baseType: !6155, size: 64, offset: 192)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6160, file: !6139, line: 91, baseType: !6188, size: 64, offset: 256)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6129, file: !6115, line: 143, baseType: !6190, size: 64, offset: 256)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 64)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{!6193, !6125}
!6193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6194, size: 64)
!6194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6195)
!6195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !447, line: 39, size: 384, elements: !6196)
!6196 = !{!6197, !6203, !6207, !6211, !6215, !6219}
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6195, file: !447, line: 40, baseType: !6198, size: 32)
!6198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !447, line: 26, baseType: !7, size: 32, elements: !6199)
!6199 = !{!6200, !6201, !6202}
!6200 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!6201 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!6202 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6195, file: !447, line: 41, baseType: !6204, size: 64, offset: 64)
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 64)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!771}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6195, file: !447, line: 42, baseType: !6208, size: 64, offset: 128)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 64)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{!591}
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6195, file: !447, line: 43, baseType: !6212, size: 64, offset: 192)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 64)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!3258, !445}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6195, file: !447, line: 44, baseType: !6216, size: 64, offset: 256)
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 64)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!3258}
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6195, file: !447, line: 45, baseType: !1415, size: 64, offset: 320)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6129, file: !6115, line: 144, baseType: !6221, size: 64, offset: 320)
!6221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6222, size: 64)
!6222 = !DISubroutineType(types: !6223)
!6223 = !{!3258, !6125}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6129, file: !6115, line: 145, baseType: !6225, size: 64, offset: 384)
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 64)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{null, !6125, !2904, !2905}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6120, file: !6115, line: 70, baseType: !6229, size: 64, offset: 384)
!6229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6230, size: 64)
!6230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1565, line: 123, size: 1024, elements: !6231)
!6231 = !{!6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6342, !6343, !6344, !6345, !6346}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6230, file: !1565, line: 124, baseType: !383, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6230, file: !1565, line: 125, baseType: !383, size: 32, offset: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6230, file: !1565, line: 135, baseType: !6229, size: 64, offset: 64)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6230, file: !1565, line: 136, baseType: !292, size: 64, offset: 128)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6230, file: !1565, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6230, file: !1565, line: 140, baseType: !3258, size: 64, offset: 384)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6230, file: !1565, line: 141, baseType: !7, size: 32, offset: 448)
!6239 = !DIDerivedType(tag: DW_TAG_member, scope: !6230, file: !1565, line: 142, baseType: !6240, size: 256, offset: 512)
!6240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6230, file: !1565, line: 142, size: 256, elements: !6241)
!6241 = !{!6242, !6282, !6286}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6240, file: !1565, line: 143, baseType: !6243, size: 192)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1565, line: 91, size: 192, elements: !6244)
!6244 = !{!6245, !6246, !6247}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6243, file: !1565, line: 92, baseType: !312, size: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6243, file: !1565, line: 94, baseType: !1750, size: 64, offset: 64)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6243, file: !1565, line: 100, baseType: !6248, size: 64, offset: 128)
!6248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6249, size: 64)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1565, line: 180, size: 704, elements: !6250)
!6250 = !{!6251, !6252, !6253, !6254, !6255, !6256, !6280, !6281}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6249, file: !1565, line: 182, baseType: !6229, size: 64)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6249, file: !1565, line: 183, baseType: !7, size: 32, offset: 64)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6249, file: !1565, line: 186, baseType: !3001, size: 192, offset: 128)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6249, file: !1565, line: 187, baseType: !987, size: 32, offset: 320)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6249, file: !1565, line: 188, baseType: !987, size: 32, offset: 352)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6249, file: !1565, line: 189, baseType: !6257, size: 64, offset: 384)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1565, line: 168, size: 320, elements: !6259)
!6259 = !{!6260, !6264, !6268, !6272, !6276}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6258, file: !1565, line: 169, baseType: !6261, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 64)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!32, !1653, !6248}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6258, file: !1565, line: 171, baseType: !6265, size: 64, offset: 64)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!32, !6229, !292, !1379}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6258, file: !1565, line: 173, baseType: !6269, size: 64, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6270, size: 64)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!32, !6229}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6258, file: !1565, line: 174, baseType: !6273, size: 64, offset: 192)
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6274, size: 64)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{!32, !6229, !6229, !292}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6258, file: !1565, line: 176, baseType: !6277, size: 64, offset: 256)
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 64)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{!32, !1653, !6229, !6248}
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6249, file: !1565, line: 192, baseType: !284, size: 128, offset: 448)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6249, file: !1565, line: 194, baseType: !1889, size: 128, offset: 576)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6240, file: !1565, line: 144, baseType: !6283, size: 64)
!6283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1565, line: 103, size: 64, elements: !6284)
!6284 = !{!6285}
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6283, file: !1565, line: 104, baseType: !6229, size: 64)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6240, file: !1565, line: 145, baseType: !6287, size: 256)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1565, line: 107, size: 256, elements: !6288)
!6288 = !{!6289, !6337, !6340, !6341}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6287, file: !1565, line: 108, baseType: !6290, size: 64)
!6290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6291, size: 64)
!6291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6292)
!6292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1565, line: 217, size: 768, elements: !6293)
!6293 = !{!6294, !6314, !6318, !6319, !6320, !6321, !6322, !6326, !6327, !6328, !6329, !6333}
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6292, file: !1565, line: 222, baseType: !6295, size: 64)
!6295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6296, size: 64)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!32, !6298}
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 64)
!6299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1565, line: 197, size: 1088, elements: !6300)
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313}
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6299, file: !1565, line: 199, baseType: !6229, size: 64)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6299, file: !1565, line: 200, baseType: !1315, size: 64, offset: 64)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6299, file: !1565, line: 201, baseType: !1653, size: 64, offset: 128)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6299, file: !1565, line: 202, baseType: !591, size: 64, offset: 192)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6299, file: !1565, line: 205, baseType: !1665, size: 192, offset: 256)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6299, file: !1565, line: 206, baseType: !1665, size: 192, offset: 448)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6299, file: !1565, line: 207, baseType: !32, size: 32, offset: 640)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6299, file: !1565, line: 208, baseType: !284, size: 128, offset: 704)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6299, file: !1565, line: 209, baseType: !1038, size: 64, offset: 832)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6299, file: !1565, line: 211, baseType: !1039, size: 64, offset: 896)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6299, file: !1565, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6299, file: !1565, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6299, file: !1565, line: 214, baseType: !2126, size: 64, offset: 1024)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6292, file: !1565, line: 223, baseType: !6315, size: 64, offset: 64)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 64)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !6298}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6292, file: !1565, line: 236, baseType: !1704, size: 64, offset: 128)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6292, file: !1565, line: 238, baseType: !1691, size: 64, offset: 192)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6292, file: !1565, line: 239, baseType: !1700, size: 64, offset: 256)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6292, file: !1565, line: 240, baseType: !1696, size: 64, offset: 320)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6292, file: !1565, line: 242, baseType: !6323, size: 64, offset: 384)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!1521, !6298, !1038, !1039, !1476}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6292, file: !1565, line: 252, baseType: !1039, size: 64, offset: 448)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6292, file: !1565, line: 259, baseType: !771, size: 8, offset: 512)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6292, file: !1565, line: 260, baseType: !6323, size: 64, offset: 576)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6292, file: !1565, line: 263, baseType: !6330, size: 64, offset: 640)
!6330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6331, size: 64)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!4828, !6298, !4829}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6292, file: !1565, line: 266, baseType: !6334, size: 64, offset: 704)
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6335, size: 64)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!32, !6298, !2098}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6287, file: !1565, line: 109, baseType: !6338, size: 64, offset: 64)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 64)
!6339 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1565, line: 31, flags: DIFlagFwdDecl)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6287, file: !1565, line: 110, baseType: !1476, size: 64, offset: 128)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6287, file: !1565, line: 111, baseType: !6229, size: 64, offset: 192)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6230, file: !1565, line: 148, baseType: !591, size: 64, offset: 768)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6230, file: !1565, line: 154, baseType: !331, size: 64, offset: 832)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6230, file: !1565, line: 156, baseType: !476, size: 16, offset: 896)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6230, file: !1565, line: 157, baseType: !1379, size: 16, offset: 912)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6230, file: !1565, line: 158, baseType: !6347, size: 64, offset: 960)
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 64)
!6348 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1565, line: 32, flags: DIFlagFwdDecl)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6120, file: !6115, line: 71, baseType: !6350, size: 32, offset: 448)
!6350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6351, line: 19, size: 32, elements: !6352)
!6351 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6352 = !{!6353}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6350, file: !6351, line: 20, baseType: !568, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6120, file: !6115, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6120, file: !6115, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6120, file: !6115, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6120, file: !6115, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6120, file: !6115, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6114, file: !6115, line: 196, baseType: !6360, size: 64, offset: 640)
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6362)
!6362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6115, line: 156, size: 192, elements: !6363)
!6363 = !{!6364, !6369, !6374}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6362, file: !6115, line: 157, baseType: !6365, size: 64)
!6365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6366)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!32, !6113, !6125}
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6362, file: !6115, line: 158, baseType: !6370, size: 64, offset: 64)
!6370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6371)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!292, !6113, !6125}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6362, file: !6115, line: 159, baseType: !6375, size: 64, offset: 128)
!6375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6376)
!6376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 64)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!32, !6113, !6125, !6379}
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 64)
!6380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6115, line: 148, size: 20736, elements: !6381)
!6381 = !{!6382, !6384, !6386, !6387, !6391}
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6380, file: !6115, line: 149, baseType: !6383, size: 192)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1592)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6380, file: !6115, line: 150, baseType: !6385, size: 4096, offset: 192)
!6385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3812)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6380, file: !6115, line: 151, baseType: !32, size: 32, offset: 4288)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6380, file: !6115, line: 152, baseType: !6388, size: 16384, offset: 4320)
!6388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !6389)
!6389 = !{!6390}
!6390 = !DISubrange(count: 2048)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6380, file: !6115, line: 153, baseType: !32, size: 32, offset: 20704)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !6396, size: 64, offset: 5632)
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6397, size: 64)
!6397 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !6399, size: 64, offset: 5696)
!6399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6400, size: 64)
!6400 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !6402, size: 64, offset: 5760)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !6405, size: 64, offset: 5824)
!6405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6406, size: 64)
!6406 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !6408, size: 64, offset: 5888)
!6408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!6409 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !6412, size: 64, offset: 6016)
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !6414)
!6414 = !{!6415, !6416, !6417}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6413, file: !31, line: 741, baseType: !6120, size: 512)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6413, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !6413, file: !31, line: 743, baseType: !6418, size: 512, align: 512, offset: 1024)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5486, line: 57, size: 512, align: 512, elements: !6419)
!6419 = !{!6420, !6421, !6422, !6423}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6418, file: !5486, line: 58, baseType: !290, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !6418, file: !5486, line: 59, baseType: !987, size: 32, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !6418, file: !5486, line: 60, baseType: !987, size: 32, offset: 96)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6418, file: !5486, line: 61, baseType: !5494, size: 64, offset: 128)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !6430, size: 64, offset: 6336)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !6432)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{!6434, !6435}
!6434 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !6438, size: 64, offset: 6464)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !6440)
!6440 = !{!6441, !6442, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453, !6454}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6439, file: !31, line: 588, baseType: !290, size: 64)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !6439, file: !31, line: 589, baseType: !6443, size: 64, offset: 64)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6444 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !6439, file: !31, line: 590, baseType: !6443, size: 64, offset: 128)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6439, file: !31, line: 592, baseType: !6120, size: 512, offset: 192)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !6439, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !6439, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !6439, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !6439, file: !31, line: 612, baseType: !1670, offset: 896)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !6439, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !6439, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6439, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !6439, file: !31, line: 622, baseType: !6455, size: 512, offset: 1088)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !6456, line: 43, size: 512, elements: !6457)
!6456 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!6457 = !{!6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470}
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !6455, file: !6456, line: 45, baseType: !7, size: 32)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !6455, file: !6456, line: 46, baseType: !7, size: 32, offset: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !6455, file: !6456, line: 47, baseType: !7, size: 32, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6455, file: !6456, line: 51, baseType: !7, size: 32, offset: 96)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !6455, file: !6456, line: 52, baseType: !7, size: 32, offset: 128)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !6455, file: !6456, line: 54, baseType: !7, size: 32, offset: 160)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !6455, file: !6456, line: 55, baseType: !7, size: 32, offset: 192)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !6455, file: !6456, line: 56, baseType: !7, size: 32, offset: 224)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !6455, file: !6456, line: 58, baseType: !7, size: 32, offset: 256)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !6455, file: !6456, line: 59, baseType: !312, size: 64, offset: 320)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !6455, file: !6456, line: 62, baseType: !7, size: 32, offset: 384)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !6455, file: !6456, line: 63, baseType: !7, size: 32, offset: 416)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !6455, file: !6456, line: 64, baseType: !7, size: 32, offset: 448)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !6438, size: 64, offset: 6912)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !6443, size: 64, offset: 7040)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1670, offset: 7136)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !6480, size: 64, offset: 7168)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3235, size: 320, offset: 7232)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !6491, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!6491 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !6492)
!6492 = !{!6493, !6494}
!6493 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!6494 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !6498, size: 64, offset: 8064)
!6498 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2984, line: 318, baseType: !6499)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2984, line: 314, size: 64, elements: !6500)
!6500 = !{!6501}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6499, file: !2984, line: 316, baseType: !2982, size: 64)
!6502 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !6503, size: 64, offset: 8128)
!6503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !6504)
!6504 = !{!6505, !6506, !6527, !6536}
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !6503, file: !31, line: 2111, baseType: !591, size: 64)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !6503, file: !31, line: 2112, baseType: !6507, size: 64)
!6507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6508, size: 64)
!6508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !6509)
!6509 = !{!6510, !6525, !6526}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !6508, file: !31, line: 2543, baseType: !6511, size: 64)
!6511 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3072, line: 79, baseType: !6512)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3072, line: 77, size: 64, elements: !6513)
!6513 = !{!6514}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6512, file: !3072, line: 78, baseType: !6515, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !6516, line: 26, baseType: !6517)
!6516 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6516, line: 24, size: 64, elements: !6518)
!6518 = !{!6519}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6517, file: !6516, line: 25, baseType: !6520, size: 64)
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !6521, line: 12, baseType: !6522)
!6521 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!6522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6521, line: 10, size: 64, elements: !6523)
!6523 = !{!6524}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6522, file: !6521, line: 11, baseType: !371, size: 64)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6508, file: !31, line: 2544, baseType: !6511, size: 64, offset: 64)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6508, file: !31, line: 2545, baseType: !3071, offset: 128)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !6503, file: !31, line: 2113, baseType: !6528, size: 64)
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 64)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !6530)
!6530 = !{!6531, !6532, !6533, !6534, !6535}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6529, file: !31, line: 2535, baseType: !331, size: 64)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6529, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6529, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6529, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6529, file: !31, line: 2539, baseType: !3071, offset: 256)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !6503, file: !31, line: 2114, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 64)
!6538 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !6540, size: 5568, offset: 8192)
!6540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !6541, line: 461, size: 5568, elements: !6542)
!6541 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!6542 = !{!6543, !6544, !6546, !6549, !6550, !6602, !6694, !6695, !6696, !6697, !6698, !6713, !6820, !6833, !6836, !6837, !6841, !6842, !6843, !6844, !6848, !6854, !6855, !6858, !6862, !6952, !6953, !6954, !6955, !6956, !6988, !6989, !6990, !6993, !6996, !6997, !6998, !6999}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6540, file: !6541, line: 462, baseType: !6120, size: 512)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6540, file: !6541, line: 463, baseType: !6545, size: 64, offset: 512)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6540, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6540, file: !6541, line: 465, baseType: !6547, size: 64, offset: 576)
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 64)
!6548 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !6541, line: 36, flags: DIFlagFwdDecl)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !6540, file: !6541, line: 467, baseType: !292, size: 64, offset: 640)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6540, file: !6541, line: 468, baseType: !6551, size: 64, offset: 704)
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6553)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !6541, line: 87, size: 384, elements: !6554)
!6554 = !{!6555, !6556, !6557, !6561, !6566, !6570}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6553, file: !6541, line: 88, baseType: !292, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6553, file: !6541, line: 89, baseType: !6157, size: 64, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6553, file: !6541, line: 90, baseType: !6558, size: 64, offset: 128)
!6558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6559, size: 64)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{!32, !6545, !6379}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6553, file: !6541, line: 91, baseType: !6562, size: 64, offset: 192)
!6562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6563, size: 64)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{!1038, !6545, !6565, !2904, !2905}
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6553, file: !6541, line: 93, baseType: !6567, size: 64, offset: 256)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 64)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !6545}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6553, file: !6541, line: 95, baseType: !6571, size: 64, offset: 320)
!6571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6572, size: 64)
!6572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6573)
!6573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6574, line: 278, size: 1472, elements: !6575)
!6574 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6575 = !{!6576, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6573, file: !6574, line: 279, baseType: !6577, size: 64)
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6578, size: 64)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!32, !6545}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6573, file: !6574, line: 280, baseType: !6567, size: 64, offset: 64)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6573, file: !6574, line: 281, baseType: !6577, size: 64, offset: 128)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6573, file: !6574, line: 282, baseType: !6577, size: 64, offset: 192)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6573, file: !6574, line: 283, baseType: !6577, size: 64, offset: 256)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6573, file: !6574, line: 284, baseType: !6577, size: 64, offset: 320)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6573, file: !6574, line: 285, baseType: !6577, size: 64, offset: 384)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6573, file: !6574, line: 286, baseType: !6577, size: 64, offset: 448)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6573, file: !6574, line: 287, baseType: !6577, size: 64, offset: 512)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6573, file: !6574, line: 288, baseType: !6577, size: 64, offset: 576)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6573, file: !6574, line: 289, baseType: !6577, size: 64, offset: 640)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6573, file: !6574, line: 290, baseType: !6577, size: 64, offset: 704)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6573, file: !6574, line: 291, baseType: !6577, size: 64, offset: 768)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6573, file: !6574, line: 292, baseType: !6577, size: 64, offset: 832)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6573, file: !6574, line: 293, baseType: !6577, size: 64, offset: 896)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6573, file: !6574, line: 294, baseType: !6577, size: 64, offset: 960)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6573, file: !6574, line: 295, baseType: !6577, size: 64, offset: 1024)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6573, file: !6574, line: 296, baseType: !6577, size: 64, offset: 1088)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6573, file: !6574, line: 297, baseType: !6577, size: 64, offset: 1152)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6573, file: !6574, line: 298, baseType: !6577, size: 64, offset: 1216)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6573, file: !6574, line: 299, baseType: !6577, size: 64, offset: 1280)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6573, file: !6574, line: 300, baseType: !6577, size: 64, offset: 1344)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6573, file: !6574, line: 301, baseType: !6577, size: 64, offset: 1408)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6540, file: !6541, line: 470, baseType: !6603, size: 64, offset: 768)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6605, line: 82, size: 1408, elements: !6606)
!6605 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612, !6613, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6689, !6692, !6693}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6604, file: !6605, line: 83, baseType: !292, size: 64)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6604, file: !6605, line: 84, baseType: !292, size: 64, offset: 64)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6604, file: !6605, line: 85, baseType: !6545, size: 64, offset: 128)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6604, file: !6605, line: 86, baseType: !6157, size: 64, offset: 192)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6604, file: !6605, line: 87, baseType: !6157, size: 64, offset: 256)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6604, file: !6605, line: 88, baseType: !6157, size: 64, offset: 320)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6604, file: !6605, line: 90, baseType: !6614, size: 64, offset: 384)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{!32, !6545, !6617}
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6619, line: 95, size: 1152, elements: !6620)
!6619 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6620 = !{!6621, !6622, !6623, !6624, !6625, !6626, !6632, !6642, !6653, !6654, !6655, !6656, !6657, !6665, !6666, !6667, !6668, !6669, !6670}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6618, file: !6619, line: 96, baseType: !292, size: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6618, file: !6619, line: 97, baseType: !6603, size: 64, offset: 64)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6618, file: !6619, line: 99, baseType: !980, size: 64, offset: 128)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6618, file: !6619, line: 100, baseType: !292, size: 64, offset: 192)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6618, file: !6619, line: 102, baseType: !771, size: 8, offset: 256)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6618, file: !6619, line: 103, baseType: !6627, size: 32, offset: 288)
!6627 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6619, line: 44, baseType: !7, size: 32, elements: !6628)
!6628 = !{!6629, !6630, !6631}
!6629 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6630 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6631 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6618, file: !6619, line: 105, baseType: !6633, size: 64, offset: 320)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6635)
!6635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6636, line: 262, size: 1600, elements: !6637)
!6636 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6637 = !{!6638, !6639, !6640, !6641}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6635, file: !6636, line: 263, baseType: !4625, size: 256)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6635, file: !6636, line: 264, baseType: !4625, size: 256, offset: 256)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6635, file: !6636, line: 265, baseType: !5233, size: 1024, offset: 512)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6635, file: !6636, line: 266, baseType: !3258, size: 64, offset: 1536)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6618, file: !6619, line: 106, baseType: !6643, size: 64, offset: 384)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6645)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6636, line: 210, size: 256, elements: !6646)
!6646 = !{!6647, !6649, !6651, !6652}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6645, file: !6636, line: 211, baseType: !6648, size: 72)
!6648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3087)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6645, file: !6636, line: 212, baseType: !6650, size: 64, offset: 128)
!6650 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6636, line: 14, baseType: !312)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6645, file: !6636, line: 213, baseType: !493, size: 32, offset: 192)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6645, file: !6636, line: 214, baseType: !493, size: 32, offset: 224)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6618, file: !6619, line: 108, baseType: !6577, size: 64, offset: 448)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6618, file: !6619, line: 109, baseType: !6567, size: 64, offset: 512)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6618, file: !6619, line: 110, baseType: !6577, size: 64, offset: 576)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6618, file: !6619, line: 111, baseType: !6567, size: 64, offset: 640)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6618, file: !6619, line: 112, baseType: !6658, size: 64, offset: 704)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 64)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!32, !6545, !6661}
!6661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6574, line: 52, baseType: !6662)
!6662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6574, line: 50, size: 32, elements: !6663)
!6663 = !{!6664}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6662, file: !6574, line: 51, baseType: !32, size: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6618, file: !6619, line: 113, baseType: !6577, size: 64, offset: 768)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6618, file: !6619, line: 114, baseType: !6157, size: 64, offset: 832)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6618, file: !6619, line: 115, baseType: !6157, size: 64, offset: 896)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6618, file: !6619, line: 117, baseType: !6571, size: 64, offset: 960)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6618, file: !6619, line: 118, baseType: !6567, size: 64, offset: 1024)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6618, file: !6619, line: 120, baseType: !6671, size: 64, offset: 1088)
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6619, line: 120, flags: DIFlagFwdDecl)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6604, file: !6605, line: 91, baseType: !6558, size: 64, offset: 448)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6604, file: !6605, line: 92, baseType: !6577, size: 64, offset: 512)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6604, file: !6605, line: 93, baseType: !6567, size: 64, offset: 576)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6604, file: !6605, line: 94, baseType: !6577, size: 64, offset: 640)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6604, file: !6605, line: 95, baseType: !6567, size: 64, offset: 704)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6604, file: !6605, line: 97, baseType: !6577, size: 64, offset: 768)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6604, file: !6605, line: 98, baseType: !6577, size: 64, offset: 832)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6604, file: !6605, line: 100, baseType: !6658, size: 64, offset: 896)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6604, file: !6605, line: 101, baseType: !6577, size: 64, offset: 960)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6604, file: !6605, line: 103, baseType: !6577, size: 64, offset: 1024)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6604, file: !6605, line: 105, baseType: !6577, size: 64, offset: 1088)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6604, file: !6605, line: 107, baseType: !6571, size: 64, offset: 1152)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6604, file: !6605, line: 109, baseType: !6686, size: 64, offset: 1216)
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 64)
!6687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6688)
!6688 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6605, line: 109, flags: DIFlagFwdDecl)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6604, file: !6605, line: 111, baseType: !6690, size: 64, offset: 1280)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 64)
!6691 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6605, line: 111, flags: DIFlagFwdDecl)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6604, file: !6605, line: 112, baseType: !1585, offset: 1344)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6604, file: !6605, line: 114, baseType: !771, size: 8, offset: 1344)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6540, file: !6541, line: 471, baseType: !6617, size: 64, offset: 832)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !6540, file: !6541, line: 473, baseType: !591, size: 64, offset: 896)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6540, file: !6541, line: 475, baseType: !591, size: 64, offset: 960)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6540, file: !6541, line: 480, baseType: !1665, size: 192, offset: 1024)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !6540, file: !6541, line: 484, baseType: !6699, size: 576, offset: 1216)
!6699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !6541, line: 361, size: 576, elements: !6700)
!6700 = !{!6701, !6702, !6703, !6704, !6705, !6706}
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6699, file: !6541, line: 362, baseType: !284, size: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6699, file: !6541, line: 363, baseType: !284, size: 128, offset: 128)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6699, file: !6541, line: 364, baseType: !284, size: 128, offset: 256)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6699, file: !6541, line: 365, baseType: !284, size: 128, offset: 384)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6699, file: !6541, line: 366, baseType: !771, size: 8, offset: 512)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6699, file: !6541, line: 367, baseType: !6707, size: 32, offset: 544)
!6707 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !6541, line: 343, baseType: !7, size: 32, elements: !6708)
!6708 = !{!6709, !6710, !6711, !6712}
!6709 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6710 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6711 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6712 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !6540, file: !6541, line: 485, baseType: !6714, size: 2304, offset: 1792)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6574, line: 565, size: 2304, elements: !6715)
!6715 = !{!6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781, !6782, !6790, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6813, !6817}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6714, file: !6574, line: 566, baseType: !6661, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6714, file: !6574, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6714, file: !6574, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6714, file: !6574, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6714, file: !6574, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6714, file: !6574, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6714, file: !6574, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6714, file: !6574, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6714, file: !6574, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6714, file: !6574, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6714, file: !6574, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6714, file: !6574, line: 577, baseType: !987, size: 32, offset: 64)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6714, file: !6574, line: 578, baseType: !1670, offset: 96)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6714, file: !6574, line: 580, baseType: !284, size: 128, offset: 128)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6714, file: !6574, line: 581, baseType: !2597, size: 192, offset: 256)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6714, file: !6574, line: 582, baseType: !6732, size: 64, offset: 448)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6734, line: 43, size: 1472, elements: !6735)
!6734 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6735 = !{!6736, !6737, !6738, !6739, !6740, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6733, file: !6734, line: 44, baseType: !292, size: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6733, file: !6734, line: 45, baseType: !32, size: 32, offset: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6733, file: !6734, line: 46, baseType: !284, size: 128, offset: 128)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6733, file: !6734, line: 47, baseType: !1670, offset: 256)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6733, file: !6734, line: 48, baseType: !6741, size: 64, offset: 256)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6742 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6574, line: 533, flags: DIFlagFwdDecl)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6733, file: !6734, line: 49, baseType: !3235, size: 320, offset: 320)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6733, file: !6734, line: 50, baseType: !312, size: 64, offset: 640)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6733, file: !6734, line: 51, baseType: !453, size: 64, offset: 704)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6733, file: !6734, line: 52, baseType: !453, size: 64, offset: 768)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6733, file: !6734, line: 53, baseType: !453, size: 64, offset: 832)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6733, file: !6734, line: 54, baseType: !453, size: 64, offset: 896)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6733, file: !6734, line: 55, baseType: !453, size: 64, offset: 960)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6733, file: !6734, line: 56, baseType: !312, size: 64, offset: 1024)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6733, file: !6734, line: 57, baseType: !312, size: 64, offset: 1088)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6733, file: !6734, line: 58, baseType: !312, size: 64, offset: 1152)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6733, file: !6734, line: 59, baseType: !312, size: 64, offset: 1216)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6733, file: !6734, line: 60, baseType: !312, size: 64, offset: 1280)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6733, file: !6734, line: 61, baseType: !6545, size: 64, offset: 1344)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6733, file: !6734, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6733, file: !6734, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6714, file: !6574, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6714, file: !6574, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6714, file: !6574, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6714, file: !6574, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6714, file: !6574, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6714, file: !6574, line: 592, baseType: !2397, size: 512, offset: 576)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6714, file: !6574, line: 593, baseType: !331, size: 64, offset: 1088)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6714, file: !6574, line: 594, baseType: !2829, size: 256, offset: 1152)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6714, file: !6574, line: 595, baseType: !1889, size: 128, offset: 1408)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6714, file: !6574, line: 596, baseType: !6741, size: 64, offset: 1536)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6714, file: !6574, line: 597, baseType: !383, size: 32, offset: 1600)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6714, file: !6574, line: 598, baseType: !383, size: 32, offset: 1632)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6714, file: !6574, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6714, file: !6574, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6714, file: !6574, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6714, file: !6574, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6714, file: !6574, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6714, file: !6574, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6714, file: !6574, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6714, file: !6574, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6714, file: !6574, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6714, file: !6574, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6714, file: !6574, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6714, file: !6574, line: 610, baseType: !7, size: 32, offset: 1696)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6714, file: !6574, line: 611, baseType: !6783, size: 32, offset: 1728)
!6783 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6574, line: 524, baseType: !7, size: 32, elements: !6784)
!6784 = !{!6785, !6786, !6787, !6788, !6789}
!6785 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6786 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6787 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6788 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6789 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6714, file: !6574, line: 612, baseType: !6791, size: 32, offset: 1760)
!6791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6574, line: 502, baseType: !7, size: 32, elements: !6792)
!6792 = !{!6793, !6794, !6795, !6796}
!6793 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6794 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6795 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6796 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6714, file: !6574, line: 613, baseType: !32, size: 32, offset: 1792)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6714, file: !6574, line: 614, baseType: !32, size: 32, offset: 1824)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6714, file: !6574, line: 615, baseType: !331, size: 64, offset: 1856)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6714, file: !6574, line: 616, baseType: !331, size: 64, offset: 1920)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6714, file: !6574, line: 617, baseType: !331, size: 64, offset: 1984)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6714, file: !6574, line: 618, baseType: !331, size: 64, offset: 2048)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6714, file: !6574, line: 620, baseType: !6804, size: 64, offset: 2112)
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6805, size: 64)
!6805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6574, line: 536, size: 256, elements: !6806)
!6806 = !{!6807, !6808, !6809, !6810}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6805, file: !6574, line: 537, baseType: !1670)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6805, file: !6574, line: 538, baseType: !7, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6805, file: !6574, line: 540, baseType: !284, size: 128, offset: 64)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6805, file: !6574, line: 543, baseType: !6811, size: 64, offset: 192)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6574, line: 534, flags: DIFlagFwdDecl)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6714, file: !6574, line: 621, baseType: !6814, size: 64, offset: 2176)
!6814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 64)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{null, !6545, !2545}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6714, file: !6574, line: 622, baseType: !6818, size: 64, offset: 2240)
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6574, line: 622, flags: DIFlagFwdDecl)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !6540, file: !6541, line: 486, baseType: !6821, size: 64, offset: 4096)
!6821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6822, size: 64)
!6822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6574, line: 642, size: 1792, elements: !6823)
!6823 = !{!6824, !6825, !6826, !6830, !6831, !6832}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6822, file: !6574, line: 643, baseType: !6573, size: 1472)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6822, file: !6574, line: 644, baseType: !6577, size: 64, offset: 1472)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6822, file: !6574, line: 645, baseType: !6827, size: 64, offset: 1536)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{null, !6545, !771}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6822, file: !6574, line: 646, baseType: !6577, size: 64, offset: 1600)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6822, file: !6574, line: 647, baseType: !6567, size: 64, offset: 1664)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6822, file: !6574, line: 648, baseType: !6567, size: 64, offset: 1728)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !6540, file: !6541, line: 493, baseType: !6834, size: 64, offset: 4160)
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !6541, line: 493, flags: DIFlagFwdDecl)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !6540, file: !6541, line: 499, baseType: !284, size: 128, offset: 4224)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6540, file: !6541, line: 502, baseType: !6838, size: 64, offset: 4352)
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6839, size: 64)
!6839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6840)
!6840 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !6541, line: 502, flags: DIFlagFwdDecl)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6540, file: !6541, line: 504, baseType: !5372, size: 64, offset: 4416)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !6540, file: !6541, line: 505, baseType: !331, size: 64, offset: 4480)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !6540, file: !6541, line: 510, baseType: !331, size: 64, offset: 4544)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !6540, file: !6541, line: 511, baseType: !6845, size: 64, offset: 4608)
!6845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6846, size: 64)
!6846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6847)
!6847 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !6541, line: 511, flags: DIFlagFwdDecl)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6540, file: !6541, line: 513, baseType: !6849, size: 64, offset: 4672)
!6849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6850, size: 64)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !6541, line: 288, size: 128, elements: !6851)
!6851 = !{!6852, !6853}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6850, file: !6541, line: 293, baseType: !7, size: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6850, file: !6541, line: 294, baseType: !312, size: 64, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !6540, file: !6541, line: 515, baseType: !284, size: 128, offset: 4736)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6540, file: !6541, line: 526, baseType: !6856, offset: 4864)
!6856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6857, line: 5, elements: !1587)
!6857 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6540, file: !6541, line: 528, baseType: !6859, size: 64, offset: 4864)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6861, line: 14, flags: DIFlagFwdDecl)
!6861 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6540, file: !6541, line: 529, baseType: !6863, size: 64, offset: 4928)
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 64)
!6864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6865, line: 17, size: 192, elements: !6866)
!6865 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6866 = !{!6867, !6868, !6951}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6864, file: !6865, line: 18, baseType: !6863, size: 64)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6864, file: !6865, line: 19, baseType: !6869, size: 64, offset: 64)
!6869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6870, size: 64)
!6870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6871)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6865, line: 110, size: 1152, elements: !6872)
!6872 = !{!6873, !6877, !6881, !6887, !6893, !6897, !6901, !6906, !6910, !6911, !6915, !6919, !6923, !6934, !6935, !6936, !6937, !6947}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6871, file: !6865, line: 111, baseType: !6874, size: 64)
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 64)
!6875 = !DISubroutineType(types: !6876)
!6876 = !{!6863, !6863}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6871, file: !6865, line: 112, baseType: !6878, size: 64, offset: 64)
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6879, size: 64)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{null, !6863}
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6871, file: !6865, line: 113, baseType: !6882, size: 64, offset: 128)
!6882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6883, size: 64)
!6883 = !DISubroutineType(types: !6884)
!6884 = !{!771, !6885}
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6864)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6871, file: !6865, line: 114, baseType: !6888, size: 64, offset: 192)
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6889, size: 64)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{!3258, !6885, !6891}
!6891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6892, size: 64)
!6892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6540)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6871, file: !6865, line: 116, baseType: !6894, size: 64, offset: 256)
!6894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6895, size: 64)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!771, !6885, !292}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6871, file: !6865, line: 118, baseType: !6898, size: 64, offset: 320)
!6898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6899, size: 64)
!6899 = !DISubroutineType(types: !6900)
!6900 = !{!32, !6885, !292, !7, !591, !1039}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6871, file: !6865, line: 123, baseType: !6902, size: 64, offset: 384)
!6902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6903, size: 64)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!32, !6885, !292, !6905, !1039}
!6905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6871, file: !6865, line: 126, baseType: !6907, size: 64, offset: 448)
!6907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6908, size: 64)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!292, !6885}
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6871, file: !6865, line: 127, baseType: !6907, size: 64, offset: 512)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6871, file: !6865, line: 128, baseType: !6912, size: 64, offset: 576)
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 64)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{!6863, !6885}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6871, file: !6865, line: 130, baseType: !6916, size: 64, offset: 640)
!6916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6917, size: 64)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{!6863, !6885, !6863}
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6871, file: !6865, line: 133, baseType: !6920, size: 64, offset: 704)
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6921, size: 64)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{!6863, !6885, !292}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6871, file: !6865, line: 135, baseType: !6924, size: 64, offset: 768)
!6924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6925, size: 64)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{!32, !6885, !292, !292, !7, !7, !6927}
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 64)
!6928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6865, line: 43, size: 640, elements: !6929)
!6929 = !{!6930, !6931, !6932}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6928, file: !6865, line: 44, baseType: !6863, size: 64)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6928, file: !6865, line: 45, baseType: !7, size: 32, offset: 64)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6928, file: !6865, line: 46, baseType: !6933, size: 512, offset: 128)
!6933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2433)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6871, file: !6865, line: 140, baseType: !6916, size: 64, offset: 832)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6871, file: !6865, line: 143, baseType: !6912, size: 64, offset: 896)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6871, file: !6865, line: 145, baseType: !6874, size: 64, offset: 960)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6871, file: !6865, line: 146, baseType: !6938, size: 64, offset: 1024)
!6938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6939, size: 64)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{!32, !6885, !6941}
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6865, line: 29, size: 128, elements: !6943)
!6943 = !{!6944, !6945, !6946}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6942, file: !6865, line: 30, baseType: !7, size: 32)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6942, file: !6865, line: 31, baseType: !7, size: 32, offset: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6942, file: !6865, line: 32, baseType: !6885, size: 64, offset: 64)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6871, file: !6865, line: 148, baseType: !6948, size: 64, offset: 1088)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6949, size: 64)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{!32, !6885, !6545}
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6864, file: !6865, line: 20, baseType: !6545, size: 64, offset: 128)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !6540, file: !6541, line: 534, baseType: !1458, size: 32, offset: 4992)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6540, file: !6541, line: 535, baseType: !987, size: 32, offset: 5024)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !6540, file: !6541, line: 537, baseType: !1670, offset: 5056)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !6540, file: !6541, line: 538, baseType: !284, size: 128, offset: 5056)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6540, file: !6541, line: 540, baseType: !6957, size: 64, offset: 5184)
!6957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6958, size: 64)
!6958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6959, line: 54, size: 960, elements: !6960)
!6959 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6960 = !{!6961, !6962, !6963, !6964, !6965, !6966, !6967, !6971, !6975, !6976, !6977, !6978, !6982, !6986, !6987}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6958, file: !6959, line: 55, baseType: !292, size: 64)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6958, file: !6959, line: 56, baseType: !980, size: 64, offset: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6958, file: !6959, line: 58, baseType: !6157, size: 64, offset: 128)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6958, file: !6959, line: 59, baseType: !6157, size: 64, offset: 192)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6958, file: !6959, line: 60, baseType: !6125, size: 64, offset: 256)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6958, file: !6959, line: 62, baseType: !6558, size: 64, offset: 320)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6958, file: !6959, line: 63, baseType: !6968, size: 64, offset: 384)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6969, size: 64)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!1038, !6545, !6565}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6958, file: !6959, line: 65, baseType: !6972, size: 64, offset: 448)
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6973, size: 64)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{null, !6957}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6958, file: !6959, line: 66, baseType: !6567, size: 64, offset: 512)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6958, file: !6959, line: 68, baseType: !6577, size: 64, offset: 576)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6958, file: !6959, line: 70, baseType: !6193, size: 64, offset: 640)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6958, file: !6959, line: 71, baseType: !6979, size: 64, offset: 704)
!6979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6980, size: 64)
!6980 = !DISubroutineType(types: !6981)
!6981 = !{!3258, !6545}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6958, file: !6959, line: 73, baseType: !6983, size: 64, offset: 768)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 64)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{null, !6545, !2904, !2905}
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6958, file: !6959, line: 75, baseType: !6571, size: 64, offset: 832)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6958, file: !6959, line: 77, baseType: !6690, size: 64, offset: 896)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6540, file: !6541, line: 541, baseType: !6157, size: 64, offset: 5248)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6540, file: !6541, line: 543, baseType: !6567, size: 64, offset: 5312)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !6540, file: !6541, line: 544, baseType: !6991, size: 64, offset: 5376)
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 64)
!6992 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !6541, line: 45, flags: DIFlagFwdDecl)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !6540, file: !6541, line: 545, baseType: !6994, size: 64, offset: 5440)
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6541, line: 47, flags: DIFlagFwdDecl)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !6540, file: !6541, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6540, file: !6541, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !6540, file: !6541, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !6540, file: !6541, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7001, size: 256, offset: 13760)
!7001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6158, size: 256, elements: !2272)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !6158, size: 64, offset: 14016)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7004, size: 64, offset: 14080)
!7004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7005, size: 64)
!7005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7006)
!7006 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2314, size: 16, offset: 14192)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7011, size: 512, offset: 14208)
!7011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7012, size: 512, elements: !269)
!7012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7013)
!7013 = !{!7014, !7015}
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7012, file: !31, line: 794, baseType: !581, size: 16)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7012, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7017, size: 128, offset: 14720)
!7017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7019, size: 64, offset: 14848)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !251, line: 536, flags: DIFlagFwdDecl)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7022, size: 64, offset: 14912)
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 64)
!7023 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7025, size: 64, offset: 14976)
!7025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7025, size: 64, offset: 15040)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7031, size: 64, offset: 15296)
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7033)
!7033 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7035, size: 64, offset: 15360)
!7035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7036, size: 64)
!7036 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7038, size: 384, offset: 15424)
!7038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7039, size: 384, elements: !1592)
!7039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7040)
!7040 = !{!7041, !7042}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7039, file: !31, line: 890, baseType: !1088, size: 64)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7039, file: !31, line: 891, baseType: !7043, size: 64, offset: 64)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7045 = !{!7046, !7047, !7048, !7049, !7050, !7051}
!7046 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7047 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7048 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7049 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7050 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7051 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7052 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 89, baseType: !7, size: 32, elements: !7054)
!7053 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7054 = !{!7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063}
!7055 = !DIEnumerator(name: "PCI_STD_RESOURCES", value: 0, isUnsigned: true)
!7056 = !DIEnumerator(name: "PCI_STD_RESOURCE_END", value: 5, isUnsigned: true)
!7057 = !DIEnumerator(name: "PCI_ROM_RESOURCE", value: 6, isUnsigned: true)
!7058 = !DIEnumerator(name: "PCI_IOV_RESOURCES", value: 7, isUnsigned: true)
!7059 = !DIEnumerator(name: "PCI_IOV_RESOURCE_END", value: 12, isUnsigned: true)
!7060 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCES", value: 13, isUnsigned: true)
!7061 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCE_END", value: 16, isUnsigned: true)
!7062 = !DIEnumerator(name: "PCI_NUM_RESOURCES", value: 17, isUnsigned: true)
!7063 = !DIEnumerator(name: "DEVICE_COUNT_RESOURCE", value: 17, isUnsigned: true)
!7064 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !330, line: 14, baseType: !7, size: 32, elements: !7065)
!7065 = !{!7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106, !7107, !7108, !7109, !7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127}
!7066 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!7067 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!7068 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!7069 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!7070 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!7071 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!7072 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!7073 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!7074 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!7075 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!7076 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!7077 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!7078 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!7079 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!7080 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!7081 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!7082 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!7083 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!7084 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!7085 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!7086 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!7087 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!7088 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!7089 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!7090 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!7091 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!7092 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!7093 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!7094 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!7095 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!7096 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!7097 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!7098 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!7099 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!7100 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!7101 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!7102 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!7103 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!7104 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!7105 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!7106 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!7107 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!7108 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!7109 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!7110 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!7111 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!7112 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!7113 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!7114 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!7115 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!7116 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!7117 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!7118 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!7119 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!7120 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!7121 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!7122 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!7123 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!7124 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!7125 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!7126 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!7127 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!7128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 94, baseType: !7, size: 32, elements: !7129)
!7129 = !{!7130, !7131, !7132, !7133, !7134, !7135, !7136, !7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7151, !7152, !7153, !7154, !7155, !7156, !7157, !7158, !7159, !7160, !7161, !7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7198, !7199, !7200, !7201, !7202, !7203, !7204, !7205, !7206, !7207, !7208, !7209, !7210, !7211, !7212, !7213, !7214}
!7130 = !DIEnumerator(name: "NvRegIrqStatus", value: 0, isUnsigned: true)
!7131 = !DIEnumerator(name: "NvRegIrqMask", value: 4, isUnsigned: true)
!7132 = !DIEnumerator(name: "NvRegUnknownSetupReg6", value: 8, isUnsigned: true)
!7133 = !DIEnumerator(name: "NvRegPollingInterval", value: 12, isUnsigned: true)
!7134 = !DIEnumerator(name: "NvRegMSIMap0", value: 32, isUnsigned: true)
!7135 = !DIEnumerator(name: "NvRegMSIMap1", value: 36, isUnsigned: true)
!7136 = !DIEnumerator(name: "NvRegMSIIrqMask", value: 48, isUnsigned: true)
!7137 = !DIEnumerator(name: "NvRegMisc1", value: 128, isUnsigned: true)
!7138 = !DIEnumerator(name: "NvRegMacReset", value: 52, isUnsigned: true)
!7139 = !DIEnumerator(name: "NvRegTransmitterControl", value: 132, isUnsigned: true)
!7140 = !DIEnumerator(name: "NvRegTransmitterStatus", value: 136, isUnsigned: true)
!7141 = !DIEnumerator(name: "NvRegPacketFilterFlags", value: 140, isUnsigned: true)
!7142 = !DIEnumerator(name: "NvRegOffloadConfig", value: 144, isUnsigned: true)
!7143 = !DIEnumerator(name: "NvRegReceiverControl", value: 148, isUnsigned: true)
!7144 = !DIEnumerator(name: "NvRegReceiverStatus", value: 152, isUnsigned: true)
!7145 = !DIEnumerator(name: "NvRegSlotTime", value: 156, isUnsigned: true)
!7146 = !DIEnumerator(name: "NvRegTxDeferral", value: 160, isUnsigned: true)
!7147 = !DIEnumerator(name: "NvRegRxDeferral", value: 164, isUnsigned: true)
!7148 = !DIEnumerator(name: "NvRegMacAddrA", value: 168, isUnsigned: true)
!7149 = !DIEnumerator(name: "NvRegMacAddrB", value: 172, isUnsigned: true)
!7150 = !DIEnumerator(name: "NvRegMulticastAddrA", value: 176, isUnsigned: true)
!7151 = !DIEnumerator(name: "NvRegMulticastAddrB", value: 180, isUnsigned: true)
!7152 = !DIEnumerator(name: "NvRegMulticastMaskA", value: 184, isUnsigned: true)
!7153 = !DIEnumerator(name: "NvRegMulticastMaskB", value: 188, isUnsigned: true)
!7154 = !DIEnumerator(name: "NvRegPhyInterface", value: 192, isUnsigned: true)
!7155 = !DIEnumerator(name: "NvRegBackOffControl", value: 196, isUnsigned: true)
!7156 = !DIEnumerator(name: "NvRegTxRingPhysAddr", value: 256, isUnsigned: true)
!7157 = !DIEnumerator(name: "NvRegRxRingPhysAddr", value: 260, isUnsigned: true)
!7158 = !DIEnumerator(name: "NvRegRingSizes", value: 264, isUnsigned: true)
!7159 = !DIEnumerator(name: "NvRegTransmitPoll", value: 268, isUnsigned: true)
!7160 = !DIEnumerator(name: "NvRegLinkSpeed", value: 272, isUnsigned: true)
!7161 = !DIEnumerator(name: "NvRegUnknownSetupReg5", value: 304, isUnsigned: true)
!7162 = !DIEnumerator(name: "NvRegTxWatermark", value: 316, isUnsigned: true)
!7163 = !DIEnumerator(name: "NvRegTxRxControl", value: 324, isUnsigned: true)
!7164 = !DIEnumerator(name: "NvRegTxRingPhysAddrHigh", value: 328, isUnsigned: true)
!7165 = !DIEnumerator(name: "NvRegRxRingPhysAddrHigh", value: 332, isUnsigned: true)
!7166 = !DIEnumerator(name: "NvRegTxPauseFrame", value: 368, isUnsigned: true)
!7167 = !DIEnumerator(name: "NvRegTxPauseFrameLimit", value: 372, isUnsigned: true)
!7168 = !DIEnumerator(name: "NvRegMIIStatus", value: 384, isUnsigned: true)
!7169 = !DIEnumerator(name: "NvRegMIIMask", value: 388, isUnsigned: true)
!7170 = !DIEnumerator(name: "NvRegAdapterControl", value: 392, isUnsigned: true)
!7171 = !DIEnumerator(name: "NvRegMIISpeed", value: 396, isUnsigned: true)
!7172 = !DIEnumerator(name: "NvRegMIIControl", value: 400, isUnsigned: true)
!7173 = !DIEnumerator(name: "NvRegMIIData", value: 404, isUnsigned: true)
!7174 = !DIEnumerator(name: "NvRegTxUnicast", value: 416, isUnsigned: true)
!7175 = !DIEnumerator(name: "NvRegTxMulticast", value: 420, isUnsigned: true)
!7176 = !DIEnumerator(name: "NvRegTxBroadcast", value: 424, isUnsigned: true)
!7177 = !DIEnumerator(name: "NvRegWakeUpFlags", value: 512, isUnsigned: true)
!7178 = !DIEnumerator(name: "NvRegMgmtUnitGetVersion", value: 516, isUnsigned: true)
!7179 = !DIEnumerator(name: "NvRegMgmtUnitVersion", value: 520, isUnsigned: true)
!7180 = !DIEnumerator(name: "NvRegPowerCap", value: 616, isUnsigned: true)
!7181 = !DIEnumerator(name: "NvRegPowerState", value: 620, isUnsigned: true)
!7182 = !DIEnumerator(name: "NvRegMgmtUnitControl", value: 632, isUnsigned: true)
!7183 = !DIEnumerator(name: "NvRegTxCnt", value: 640, isUnsigned: true)
!7184 = !DIEnumerator(name: "NvRegTxZeroReXmt", value: 644, isUnsigned: true)
!7185 = !DIEnumerator(name: "NvRegTxOneReXmt", value: 648, isUnsigned: true)
!7186 = !DIEnumerator(name: "NvRegTxManyReXmt", value: 652, isUnsigned: true)
!7187 = !DIEnumerator(name: "NvRegTxLateCol", value: 656, isUnsigned: true)
!7188 = !DIEnumerator(name: "NvRegTxUnderflow", value: 660, isUnsigned: true)
!7189 = !DIEnumerator(name: "NvRegTxLossCarrier", value: 664, isUnsigned: true)
!7190 = !DIEnumerator(name: "NvRegTxExcessDef", value: 668, isUnsigned: true)
!7191 = !DIEnumerator(name: "NvRegTxRetryErr", value: 672, isUnsigned: true)
!7192 = !DIEnumerator(name: "NvRegRxFrameErr", value: 676, isUnsigned: true)
!7193 = !DIEnumerator(name: "NvRegRxExtraByte", value: 680, isUnsigned: true)
!7194 = !DIEnumerator(name: "NvRegRxLateCol", value: 684, isUnsigned: true)
!7195 = !DIEnumerator(name: "NvRegRxRunt", value: 688, isUnsigned: true)
!7196 = !DIEnumerator(name: "NvRegRxFrameTooLong", value: 692, isUnsigned: true)
!7197 = !DIEnumerator(name: "NvRegRxOverflow", value: 696, isUnsigned: true)
!7198 = !DIEnumerator(name: "NvRegRxFCSErr", value: 700, isUnsigned: true)
!7199 = !DIEnumerator(name: "NvRegRxFrameAlignErr", value: 704, isUnsigned: true)
!7200 = !DIEnumerator(name: "NvRegRxLenErr", value: 708, isUnsigned: true)
!7201 = !DIEnumerator(name: "NvRegRxUnicast", value: 712, isUnsigned: true)
!7202 = !DIEnumerator(name: "NvRegRxMulticast", value: 716, isUnsigned: true)
!7203 = !DIEnumerator(name: "NvRegRxBroadcast", value: 720, isUnsigned: true)
!7204 = !DIEnumerator(name: "NvRegTxDef", value: 724, isUnsigned: true)
!7205 = !DIEnumerator(name: "NvRegTxFrame", value: 728, isUnsigned: true)
!7206 = !DIEnumerator(name: "NvRegRxCnt", value: 732, isUnsigned: true)
!7207 = !DIEnumerator(name: "NvRegTxPause", value: 736, isUnsigned: true)
!7208 = !DIEnumerator(name: "NvRegRxPause", value: 740, isUnsigned: true)
!7209 = !DIEnumerator(name: "NvRegRxDropFrame", value: 744, isUnsigned: true)
!7210 = !DIEnumerator(name: "NvRegVlanControl", value: 768, isUnsigned: true)
!7211 = !DIEnumerator(name: "NvRegMSIXMap0", value: 992, isUnsigned: true)
!7212 = !DIEnumerator(name: "NvRegMSIXMap1", value: 996, isUnsigned: true)
!7213 = !DIEnumerator(name: "NvRegMSIXIrqStatus", value: 1008, isUnsigned: true)
!7214 = !DIEnumerator(name: "NvRegPowerState2", value: 1536, isUnsigned: true)
!7215 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7216, line: 10, baseType: !7, size: 32, elements: !7217)
!7216 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7217 = !{!7218, !7219}
!7218 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7219 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7220 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 870, baseType: !7, size: 32, elements: !7221)
!7221 = !{!7222, !7223, !7224}
!7222 = !DIEnumerator(name: "NV_OPTIMIZATION_MODE_THROUGHPUT", value: 0, isUnsigned: true)
!7223 = !DIEnumerator(name: "NV_OPTIMIZATION_MODE_CPU", value: 1, isUnsigned: true)
!7224 = !DIEnumerator(name: "NV_OPTIMIZATION_MODE_DYNAMIC", value: 2, isUnsigned: true)
!7225 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !31, line: 288, baseType: !7, size: 32, elements: !7226)
!7226 = !{!7227, !7228, !7229, !7230, !7231, !7232}
!7227 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!7228 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!7229 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!7230 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!7231 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!7232 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!7233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !31, line: 558, baseType: !7, size: 32, elements: !7234)
!7234 = !{!7235, !7236, !7237}
!7235 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7236 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7237 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !7239, line: 5, baseType: !7, size: 32, elements: !7240)
!7239 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!7240 = !{!7241, !7242, !7243, !7244}
!7241 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!7242 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!7243 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!7244 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!7245 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !31, line: 3780, baseType: !7, size: 32, elements: !7246)
!7246 = !{!7247, !7248}
!7247 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!7248 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!7249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7250, line: 11, baseType: !7, size: 32, elements: !7251)
!7250 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7251 = !{!7252, !7253, !7254}
!7252 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7253 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7254 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7256, line: 305, baseType: !7, size: 32, elements: !7257)
!7256 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7257 = !{!7258, !7259, !7260, !7261}
!7258 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7259 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7260 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7261 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7262 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 352, baseType: !7, size: 32, elements: !7263)
!7263 = !{!7264, !7265, !7266, !7267, !7268, !7269, !7270}
!7264 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!7265 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!7266 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!7267 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!7268 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!7269 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!7270 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!7271 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !417, line: 423, baseType: !7, size: 32, elements: !7272)
!7272 = !{!7273, !7274, !7275, !7276, !7277, !7278, !7279}
!7273 = !DIEnumerator(name: "SKBTX_HW_TSTAMP", value: 1, isUnsigned: true)
!7274 = !DIEnumerator(name: "SKBTX_SW_TSTAMP", value: 2, isUnsigned: true)
!7275 = !DIEnumerator(name: "SKBTX_IN_PROGRESS", value: 4, isUnsigned: true)
!7276 = !DIEnumerator(name: "SKBTX_DEV_ZEROCOPY", value: 8, isUnsigned: true)
!7277 = !DIEnumerator(name: "SKBTX_WIFI_STATUS", value: 16, isUnsigned: true)
!7278 = !DIEnumerator(name: "SKBTX_SHARED_FRAG", value: 32, isUnsigned: true)
!7279 = !DIEnumerator(name: "SKBTX_SCHED_TSTAMP", value: 64, isUnsigned: true)
!7280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !599, line: 82, baseType: !7, size: 32, elements: !7281)
!7281 = !{!7282, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294, !7295, !7296, !7297, !7298, !7299, !7300}
!7282 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!7283 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!7284 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!7285 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!7286 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!7287 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!7288 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!7289 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!7290 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!7291 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!7292 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!7293 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!7294 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!7295 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!7296 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!7297 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!7298 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!7299 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!7300 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!7301 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_stringset", file: !209, line: 674, baseType: !7, size: 32, elements: !7302)
!7302 = !{!7303, !7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318, !7319}
!7303 = !DIEnumerator(name: "ETH_SS_TEST", value: 0, isUnsigned: true)
!7304 = !DIEnumerator(name: "ETH_SS_STATS", value: 1, isUnsigned: true)
!7305 = !DIEnumerator(name: "ETH_SS_PRIV_FLAGS", value: 2, isUnsigned: true)
!7306 = !DIEnumerator(name: "ETH_SS_NTUPLE_FILTERS", value: 3, isUnsigned: true)
!7307 = !DIEnumerator(name: "ETH_SS_FEATURES", value: 4, isUnsigned: true)
!7308 = !DIEnumerator(name: "ETH_SS_RSS_HASH_FUNCS", value: 5, isUnsigned: true)
!7309 = !DIEnumerator(name: "ETH_SS_TUNABLES", value: 6, isUnsigned: true)
!7310 = !DIEnumerator(name: "ETH_SS_PHY_STATS", value: 7, isUnsigned: true)
!7311 = !DIEnumerator(name: "ETH_SS_PHY_TUNABLES", value: 8, isUnsigned: true)
!7312 = !DIEnumerator(name: "ETH_SS_LINK_MODES", value: 9, isUnsigned: true)
!7313 = !DIEnumerator(name: "ETH_SS_MSG_CLASSES", value: 10, isUnsigned: true)
!7314 = !DIEnumerator(name: "ETH_SS_WOL_MODES", value: 11, isUnsigned: true)
!7315 = !DIEnumerator(name: "ETH_SS_SOF_TIMESTAMPING", value: 12, isUnsigned: true)
!7316 = !DIEnumerator(name: "ETH_SS_TS_TX_TYPES", value: 13, isUnsigned: true)
!7317 = !DIEnumerator(name: "ETH_SS_TS_RX_FILTERS", value: 14, isUnsigned: true)
!7318 = !DIEnumerator(name: "ETH_SS_UDP_TUNNEL_TYPES", value: 15, isUnsigned: true)
!7319 = !DIEnumerator(name: "ETH_SS_COUNT", value: 16, isUnsigned: true)
!7320 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_test_flags", file: !209, line: 749, baseType: !7, size: 32, elements: !7321)
!7321 = !{!7322, !7323, !7324, !7325}
!7322 = !DIEnumerator(name: "ETH_TEST_FL_OFFLINE", value: 1, isUnsigned: true)
!7323 = !DIEnumerator(name: "ETH_TEST_FL_FAILED", value: 2, isUnsigned: true)
!7324 = !DIEnumerator(name: "ETH_TEST_FL_EXTERNAL_LB", value: 4, isUnsigned: true)
!7325 = !DIEnumerator(name: "ETH_TEST_FL_EXTERNAL_LB_DONE", value: 8, isUnsigned: true)
!7326 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !209, line: 1521, baseType: !7, size: 32, elements: !7327)
!7327 = !{!7328, !7329, !7330, !7331, !7332, !7333, !7334, !7335, !7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366, !7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399, !7400, !7401, !7402, !7403, !7404, !7405, !7406, !7407, !7408, !7409, !7410, !7411, !7412, !7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420}
!7328 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!7329 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!7330 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!7331 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!7332 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!7333 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!7334 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!7335 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!7336 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!7337 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!7338 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!7339 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!7340 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!7341 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!7342 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!7343 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!7344 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!7345 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!7346 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!7347 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!7348 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!7349 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!7350 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!7351 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!7352 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!7353 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!7354 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!7355 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!7356 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!7357 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!7358 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!7359 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!7360 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!7361 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!7362 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!7363 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!7364 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!7365 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!7366 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!7367 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!7368 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!7369 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!7370 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!7371 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!7372 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!7373 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!7374 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!7375 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!7376 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!7377 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!7378 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!7379 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!7380 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!7381 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!7382 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!7383 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!7384 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!7385 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!7386 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!7387 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!7388 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!7389 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!7390 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!7391 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!7392 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!7393 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!7394 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!7395 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!7396 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!7397 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!7398 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!7399 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!7400 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!7401 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!7402 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!7403 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!7404 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!7405 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!7406 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!7407 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!7408 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!7409 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!7410 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!7411 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!7412 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!7413 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!7414 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!7415 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!7416 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!7417 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!7418 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!7419 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!7420 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!7421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 922, baseType: !7, size: 32, elements: !7422)
!7422 = !{!7423, !7424}
!7423 = !DIEnumerator(name: "NV_CROSSOVER_DETECTION_DISABLED", value: 0, isUnsigned: true)
!7424 = !DIEnumerator(name: "NV_CROSSOVER_DETECTION_ENABLED", value: 1, isUnsigned: true)
!7425 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "system_states", file: !7426, line: 576, baseType: !7, size: 32, elements: !7427)
!7426 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!7427 = !{!7428, !7429, !7430, !7431, !7432, !7433, !7434}
!7428 = !DIEnumerator(name: "SYSTEM_BOOTING", value: 0, isUnsigned: true)
!7429 = !DIEnumerator(name: "SYSTEM_SCHEDULING", value: 1, isUnsigned: true)
!7430 = !DIEnumerator(name: "SYSTEM_RUNNING", value: 2, isUnsigned: true)
!7431 = !DIEnumerator(name: "SYSTEM_HALT", value: 3, isUnsigned: true)
!7432 = !DIEnumerator(name: "SYSTEM_POWER_OFF", value: 4, isUnsigned: true)
!7433 = !DIEnumerator(name: "SYSTEM_RESTART", value: 5, isUnsigned: true)
!7434 = !DIEnumerator(name: "SYSTEM_SUSPEND", value: 6, isUnsigned: true)
!7435 = !{!980, !7436, !329, !1742, !1038, !312, !591, !7446, !3439, !32, !987, !7898, !7900, !5372, !7824, !493, !2036, !1719, !290, !535, !475, !331, !7901, !7910, !7911, !998, !7914, !793, !794, !7935, !7946, !7947, !7948, !7949, !7950, !7820, !7827, !7837, !7952, !5858, !7953, !7702, !7531}
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 64)
!7437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nv_txrx_stats", file: !3, line: 716, size: 448, elements: !7438)
!7438 = !{!7439, !7440, !7441, !7442, !7443, !7444, !7445}
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "stat_rx_packets", scope: !7437, file: !3, line: 717, baseType: !331, size: 64)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "stat_rx_bytes", scope: !7437, file: !3, line: 718, baseType: !331, size: 64, offset: 64)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "stat_rx_missed_errors", scope: !7437, file: !3, line: 719, baseType: !331, size: 64, offset: 128)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "stat_rx_dropped", scope: !7437, file: !3, line: 720, baseType: !331, size: 64, offset: 192)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "stat_tx_packets", scope: !7437, file: !3, line: 721, baseType: !331, size: 64, offset: 256)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "stat_tx_bytes", scope: !7437, file: !3, line: 722, baseType: !331, size: 64, offset: 320)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "stat_tx_dropped", scope: !7437, file: !3, line: 723, baseType: !331, size: 64, offset: 384)
!7446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7447, size: 64)
!7447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fe_priv", file: !3, line: 753, size: 22336, elements: !7448)
!7448 = !{!7449, !7450, !7451, !7478, !7479, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7528, !7529, !7530, !7802, !7804, !7805, !7806, !7807, !7808, !7809, !7810, !7811, !7812, !7813, !7814, !7815, !7816, !7834, !7835, !7836, !7846, !7847, !7848, !7849, !7850, !7851, !7852, !7853, !7854, !7855, !7856, !7857, !7858, !7859, !7860, !7861, !7862, !7863, !7864, !7865, !7866, !7867, !7868, !7869, !7870, !7871, !7872, !7873, !7874, !7875, !7876, !7877, !7878, !7884, !7885, !7889, !7893, !7894}
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7447, file: !3, line: 754, baseType: !1670)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7447, file: !3, line: 756, baseType: !290, size: 64)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !7447, file: !3, line: 757, baseType: !7452, size: 3072, offset: 64)
!7452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !31, line: 324, size: 3072, elements: !7453)
!7453 = !{!7454, !7455, !7456, !7457, !7458, !7459, !7464, !7465, !7471, !7472, !7473, !7474, !7475, !7476, !7477}
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !7452, file: !31, line: 331, baseType: !284, size: 128)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7452, file: !31, line: 333, baseType: !312, size: 64, offset: 128)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !7452, file: !31, line: 334, baseType: !32, size: 32, offset: 192)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !7452, file: !31, line: 335, baseType: !32, size: 32, offset: 224)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !7452, file: !31, line: 336, baseType: !312, size: 64, offset: 256)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7452, file: !31, line: 337, baseType: !7460, size: 64, offset: 320)
!7460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7461, size: 64)
!7461 = !DISubroutineType(types: !7462)
!7462 = !{!32, !7463, !32}
!7463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7452, size: 64)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7452, file: !31, line: 341, baseType: !290, size: 64, offset: 384)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !7452, file: !31, line: 342, baseType: !7466, size: 1536, offset: 448)
!7466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7467, size: 1536, elements: !2433)
!7467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !31, line: 310, size: 192, elements: !7468)
!7468 = !{!7469, !7470}
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7467, file: !31, line: 311, baseType: !284, size: 128)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7467, file: !31, line: 312, baseType: !32, size: 32, offset: 128)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7452, file: !31, line: 343, baseType: !415, size: 64, offset: 1984)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !7452, file: !31, line: 344, baseType: !284, size: 128, offset: 2048)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !7452, file: !31, line: 345, baseType: !32, size: 32, offset: 2176)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7452, file: !31, line: 346, baseType: !2397, size: 512, offset: 2240)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !7452, file: !31, line: 347, baseType: !284, size: 128, offset: 2752)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !7452, file: !31, line: 348, baseType: !276, size: 128, offset: 2880)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7452, file: !31, line: 349, baseType: !7, size: 32, offset: 3008)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "hwstats_lock", scope: !7447, file: !3, line: 760, baseType: !1670, offset: 3136)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "estats", scope: !7447, file: !3, line: 761, baseType: !7480, size: 2112, offset: 3136)
!7480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nv_ethtool_stats", file: !3, line: 637, size: 2112, elements: !7481)
!7481 = !{!7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514}
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7480, file: !3, line: 638, baseType: !331, size: 64)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "tx_zero_rexmt", scope: !7480, file: !3, line: 639, baseType: !331, size: 64, offset: 64)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "tx_one_rexmt", scope: !7480, file: !3, line: 640, baseType: !331, size: 64, offset: 128)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "tx_many_rexmt", scope: !7480, file: !3, line: 641, baseType: !331, size: 64, offset: 192)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "tx_late_collision", scope: !7480, file: !3, line: 642, baseType: !331, size: 64, offset: 256)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7480, file: !3, line: 643, baseType: !331, size: 64, offset: 320)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7480, file: !3, line: 644, baseType: !331, size: 64, offset: 384)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "tx_excess_deferral", scope: !7480, file: !3, line: 645, baseType: !331, size: 64, offset: 448)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "tx_retry_error", scope: !7480, file: !3, line: 646, baseType: !331, size: 64, offset: 512)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_error", scope: !7480, file: !3, line: 647, baseType: !331, size: 64, offset: 576)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "rx_extra_byte", scope: !7480, file: !3, line: 648, baseType: !331, size: 64, offset: 640)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "rx_late_collision", scope: !7480, file: !3, line: 649, baseType: !331, size: 64, offset: 704)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "rx_runt", scope: !7480, file: !3, line: 650, baseType: !331, size: 64, offset: 768)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_too_long", scope: !7480, file: !3, line: 651, baseType: !331, size: 64, offset: 832)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7480, file: !3, line: 652, baseType: !331, size: 64, offset: 896)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7480, file: !3, line: 653, baseType: !331, size: 64, offset: 960)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_align_error", scope: !7480, file: !3, line: 654, baseType: !331, size: 64, offset: 1024)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_error", scope: !7480, file: !3, line: 655, baseType: !331, size: 64, offset: 1088)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "rx_unicast", scope: !7480, file: !3, line: 656, baseType: !331, size: 64, offset: 1152)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "rx_multicast", scope: !7480, file: !3, line: 657, baseType: !331, size: 64, offset: 1216)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "rx_broadcast", scope: !7480, file: !3, line: 658, baseType: !331, size: 64, offset: 1280)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7480, file: !3, line: 659, baseType: !331, size: 64, offset: 1344)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors_total", scope: !7480, file: !3, line: 660, baseType: !331, size: 64, offset: 1408)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors_total", scope: !7480, file: !3, line: 661, baseType: !331, size: 64, offset: 1472)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "tx_deferral", scope: !7480, file: !3, line: 664, baseType: !331, size: 64, offset: 1536)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7480, file: !3, line: 665, baseType: !331, size: 64, offset: 1600)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7480, file: !3, line: 666, baseType: !331, size: 64, offset: 1664)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !7480, file: !3, line: 667, baseType: !331, size: 64, offset: 1728)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !7480, file: !3, line: 668, baseType: !331, size: 64, offset: 1792)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "rx_drop_frame", scope: !7480, file: !3, line: 669, baseType: !331, size: 64, offset: 1856)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "tx_unicast", scope: !7480, file: !3, line: 672, baseType: !331, size: 64, offset: 1920)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "tx_multicast", scope: !7480, file: !3, line: 673, baseType: !331, size: 64, offset: 1984)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "tx_broadcast", scope: !7480, file: !3, line: 674, baseType: !331, size: 64, offset: 2048)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "in_shutdown", scope: !7447, file: !3, line: 763, baseType: !32, size: 32, offset: 5248)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "linkspeed", scope: !7447, file: !3, line: 764, baseType: !987, size: 32, offset: 5280)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7447, file: !3, line: 765, baseType: !32, size: 32, offset: 5312)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7447, file: !3, line: 766, baseType: !32, size: 32, offset: 5344)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_mode", scope: !7447, file: !3, line: 767, baseType: !32, size: 32, offset: 5376)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "phyaddr", scope: !7447, file: !3, line: 768, baseType: !32, size: 32, offset: 5408)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "wolenabled", scope: !7447, file: !3, line: 769, baseType: !32, size: 32, offset: 5440)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "phy_oui", scope: !7447, file: !3, line: 770, baseType: !7, size: 32, offset: 5472)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "phy_model", scope: !7447, file: !3, line: 771, baseType: !7, size: 32, offset: 5504)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "phy_rev", scope: !7447, file: !3, line: 772, baseType: !7, size: 32, offset: 5536)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "gigabit", scope: !7447, file: !3, line: 773, baseType: !581, size: 16, offset: 5568)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "intr_test", scope: !7447, file: !3, line: 774, baseType: !32, size: 32, offset: 5600)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "recover_error", scope: !7447, file: !3, line: 775, baseType: !32, size: 32, offset: 5632)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "quiet_count", scope: !7447, file: !3, line: 776, baseType: !32, size: 32, offset: 5664)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "ring_addr", scope: !7447, file: !3, line: 779, baseType: !2036, size: 64, offset: 5696)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "pci_dev", scope: !7447, file: !3, line: 780, baseType: !7531, size: 64, offset: 5760)
!7531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7532, size: 64)
!7532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !7053, line: 309, size: 19264, elements: !7533)
!7533 = !{!7534, !7535, !7604, !7605, !7606, !7607, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632, !7633, !7634, !7699, !7700, !7701, !7703, !7704, !7705, !7706, !7707, !7708, !7709, !7710, !7711, !7712, !7713, !7714, !7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7725, !7726, !7727, !7728, !7729, !7730, !7731, !7732, !7736, !7737, !7738, !7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766, !7767, !7768, !7769, !7770, !7771, !7772, !7773, !7775, !7776, !7778, !7779, !7780, !7781, !7783, !7784, !7785, !7788, !7795, !7796, !7797, !7798, !7799, !7800, !7801}
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !7532, file: !7053, line: 310, baseType: !284, size: 128)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7532, file: !7053, line: 311, baseType: !7536, size: 64, offset: 128)
!7536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7537, size: 64)
!7537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !7053, line: 605, size: 8064, elements: !7538)
!7538 = !{!7539, !7540, !7541, !7542, !7543, !7544, !7545, !7560, !7561, !7562, !7586, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7599, !7600, !7601, !7602, !7603}
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7537, file: !7053, line: 606, baseType: !284, size: 128)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7537, file: !7053, line: 607, baseType: !7536, size: 64, offset: 128)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7537, file: !7053, line: 608, baseType: !284, size: 128, offset: 192)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !7537, file: !7053, line: 609, baseType: !284, size: 128, offset: 320)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7537, file: !7053, line: 610, baseType: !7531, size: 64, offset: 448)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7537, file: !7053, line: 611, baseType: !284, size: 128, offset: 512)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7537, file: !7053, line: 613, baseType: !7546, size: 256, offset: 640)
!7546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7547, size: 256, elements: !2272)
!7547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7548, size: 64)
!7548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !7549, line: 20, size: 512, elements: !7550)
!7549 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!7550 = !{!7551, !7553, !7554, !7555, !7556, !7557, !7558, !7559}
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7548, file: !7549, line: 21, baseType: !7552, size: 64)
!7552 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !277, line: 158, baseType: !4045)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7548, file: !7549, line: 22, baseType: !7552, size: 64, offset: 64)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7548, file: !7549, line: 23, baseType: !292, size: 64, offset: 128)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7548, file: !7549, line: 24, baseType: !312, size: 64, offset: 192)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7548, file: !7549, line: 25, baseType: !312, size: 64, offset: 256)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7548, file: !7549, line: 26, baseType: !7547, size: 64, offset: 320)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !7548, file: !7549, line: 26, baseType: !7547, size: 64, offset: 384)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7548, file: !7549, line: 26, baseType: !7547, size: 64, offset: 448)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7537, file: !7053, line: 614, baseType: !284, size: 128, offset: 896)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !7537, file: !7053, line: 615, baseType: !7548, size: 512, offset: 1024)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7537, file: !7053, line: 617, baseType: !7563, size: 64, offset: 1536)
!7563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7564, size: 64)
!7564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !7053, line: 731, size: 320, elements: !7565)
!7565 = !{!7566, !7570, !7574, !7578, !7582}
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !7564, file: !7053, line: 732, baseType: !7567, size: 64)
!7567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7568, size: 64)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!32, !7536}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !7564, file: !7053, line: 733, baseType: !7571, size: 64, offset: 64)
!7571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7572, size: 64)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{null, !7536}
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !7564, file: !7053, line: 734, baseType: !7575, size: 64, offset: 128)
!7575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7576, size: 64)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!591, !7536, !7, !32}
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7564, file: !7053, line: 735, baseType: !7579, size: 64, offset: 192)
!7579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7580, size: 64)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!32, !7536, !7, !32, !32, !2516}
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7564, file: !7053, line: 736, baseType: !7583, size: 64, offset: 256)
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7584, size: 64)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{!32, !7536, !7, !32, !32, !987}
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !7537, file: !7053, line: 618, baseType: !7587, size: 64, offset: 1600)
!7587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7588, size: 64)
!7588 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !7053, line: 537, flags: DIFlagFwdDecl)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7537, file: !7053, line: 619, baseType: !591, size: 64, offset: 1664)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !7537, file: !7053, line: 620, baseType: !3010, size: 64, offset: 1728)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7537, file: !7053, line: 622, baseType: !482, size: 8, offset: 1792)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7537, file: !7053, line: 623, baseType: !482, size: 8, offset: 1800)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !7537, file: !7053, line: 624, baseType: !482, size: 8, offset: 1808)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !7537, file: !7053, line: 625, baseType: !482, size: 8, offset: 1816)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7537, file: !7053, line: 630, baseType: !457, size: 384, offset: 1824)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !7537, file: !7053, line: 632, baseType: !476, size: 16, offset: 2208)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !7537, file: !7053, line: 633, baseType: !7598, size: 16, offset: 2224)
!7598 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !7053, line: 237, baseType: !476)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !7537, file: !7053, line: 634, baseType: !6545, size: 64, offset: 2240)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7537, file: !7053, line: 635, baseType: !6540, size: 5568, offset: 2304)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !7537, file: !7053, line: 636, baseType: !6171, size: 64, offset: 7872)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !7537, file: !7053, line: 637, baseType: !6171, size: 64, offset: 7936)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !7537, file: !7053, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !7532, file: !7053, line: 312, baseType: !7536, size: 64, offset: 192)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7532, file: !7053, line: 314, baseType: !591, size: 64, offset: 256)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !7532, file: !7053, line: 315, baseType: !3010, size: 64, offset: 320)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7532, file: !7053, line: 316, baseType: !7608, size: 64, offset: 384)
!7608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7609, size: 64)
!7609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !7053, line: 69, size: 832, elements: !7610)
!7610 = !{!7611, !7612, !7613, !7616, !7617}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7609, file: !7053, line: 70, baseType: !7536, size: 64)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7609, file: !7053, line: 71, baseType: !284, size: 128, offset: 64)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7609, file: !7053, line: 72, baseType: !7614, size: 64, offset: 192)
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7615, size: 64)
!7615 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !7053, line: 72, flags: DIFlagFwdDecl)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7609, file: !7053, line: 73, baseType: !482, size: 8, offset: 256)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7609, file: !7053, line: 74, baseType: !6120, size: 512, offset: 320)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !7532, file: !7053, line: 318, baseType: !7, size: 32, offset: 448)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7532, file: !7053, line: 319, baseType: !476, size: 16, offset: 480)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7532, file: !7053, line: 320, baseType: !476, size: 16, offset: 496)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !7532, file: !7053, line: 321, baseType: !476, size: 16, offset: 512)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !7532, file: !7053, line: 322, baseType: !476, size: 16, offset: 528)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7532, file: !7053, line: 323, baseType: !7, size: 32, offset: 544)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !7532, file: !7053, line: 324, baseType: !794, size: 8, offset: 576)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !7532, file: !7053, line: 325, baseType: !794, size: 8, offset: 584)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !7532, file: !7053, line: 330, baseType: !794, size: 8, offset: 592)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !7532, file: !7053, line: 331, baseType: !794, size: 8, offset: 600)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !7532, file: !7053, line: 332, baseType: !794, size: 8, offset: 608)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !7532, file: !7053, line: 333, baseType: !794, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !7532, file: !7053, line: 334, baseType: !794, size: 8, offset: 624)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7532, file: !7053, line: 335, baseType: !794, size: 8, offset: 632)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !7532, file: !7053, line: 336, baseType: !581, size: 16, offset: 640)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !7532, file: !7053, line: 337, baseType: !3439, size: 64, offset: 704)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7532, file: !7053, line: 339, baseType: !7635, size: 64, offset: 768)
!7635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7636, size: 64)
!7636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !7053, line: 858, size: 2048, elements: !7637)
!7637 = !{!7638, !7639, !7640, !7652, !7656, !7660, !7664, !7668, !7669, !7673, !7692, !7693, !7694}
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7636, file: !7053, line: 859, baseType: !284, size: 128)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7636, file: !7053, line: 860, baseType: !292, size: 64, offset: 128)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7636, file: !7053, line: 861, baseType: !7641, size: 64, offset: 192)
!7641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7642, size: 64)
!7642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7643)
!7643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !6636, line: 38, size: 256, elements: !7644)
!7644 = !{!7645, !7646, !7647, !7648, !7649, !7650, !7651}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7643, file: !6636, line: 39, baseType: !493, size: 32)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7643, file: !6636, line: 39, baseType: !493, size: 32, offset: 32)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !7643, file: !6636, line: 40, baseType: !493, size: 32, offset: 64)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !7643, file: !6636, line: 40, baseType: !493, size: 32, offset: 96)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7643, file: !6636, line: 41, baseType: !493, size: 32, offset: 128)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !7643, file: !6636, line: 41, baseType: !493, size: 32, offset: 160)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7643, file: !6636, line: 42, baseType: !6650, size: 64, offset: 192)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7636, file: !7053, line: 862, baseType: !7653, size: 64, offset: 256)
!7653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7654, size: 64)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!32, !7531, !7641}
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7636, file: !7053, line: 863, baseType: !7657, size: 64, offset: 320)
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7658, size: 64)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{null, !7531}
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7636, file: !7053, line: 864, baseType: !7661, size: 64, offset: 384)
!7661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7662, size: 64)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{!32, !7531, !6661}
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7636, file: !7053, line: 865, baseType: !7665, size: 64, offset: 448)
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7666, size: 64)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!32, !7531}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7636, file: !7053, line: 866, baseType: !7657, size: 64, offset: 512)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !7636, file: !7053, line: 867, baseType: !7670, size: 64, offset: 576)
!7670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7671, size: 64)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!32, !7531, !32}
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !7636, file: !7053, line: 868, baseType: !7674, size: 64, offset: 640)
!7674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7675, size: 64)
!7675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7676)
!7676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !7053, line: 795, size: 384, elements: !7677)
!7677 = !{!7678, !7684, !7688, !7689, !7690, !7691}
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !7676, file: !7053, line: 797, baseType: !7679, size: 64)
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 64)
!7680 = !DISubroutineType(types: !7681)
!7681 = !{!7682, !7531, !7683}
!7682 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !7053, line: 772, baseType: !7)
!7683 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !7053, line: 180, baseType: !7)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !7676, file: !7053, line: 801, baseType: !7685, size: 64, offset: 64)
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7686, size: 64)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!7682, !7531}
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !7676, file: !7053, line: 804, baseType: !7685, size: 64, offset: 128)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !7676, file: !7053, line: 807, baseType: !7657, size: 64, offset: 192)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !7676, file: !7053, line: 808, baseType: !7657, size: 64, offset: 256)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7676, file: !7053, line: 811, baseType: !7657, size: 64, offset: 320)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7636, file: !7053, line: 869, baseType: !6157, size: 64, offset: 704)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7636, file: !7053, line: 870, baseType: !6618, size: 1152, offset: 768)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !7636, file: !7053, line: 871, baseType: !7695, size: 128, offset: 1920)
!7695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !7053, line: 759, size: 128, elements: !7696)
!7696 = !{!7697, !7698}
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7695, file: !7053, line: 760, baseType: !1670)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7695, file: !7053, line: 761, baseType: !284, size: 128)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7532, file: !7053, line: 340, baseType: !331, size: 64, offset: 832)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7532, file: !7053, line: 346, baseType: !6850, size: 128, offset: 896)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !7532, file: !7053, line: 348, baseType: !7702, size: 32, offset: 1024)
!7702 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !7053, line: 155, baseType: !32)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !7532, file: !7053, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !7532, file: !7053, line: 352, baseType: !794, size: 8, offset: 1064)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !7532, file: !7053, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !7532, file: !7053, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !7532, file: !7053, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !7532, file: !7053, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !7532, file: !7053, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !7532, file: !7053, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !7532, file: !7053, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !7532, file: !7053, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !7532, file: !7053, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !7532, file: !7053, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !7532, file: !7053, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !7532, file: !7053, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !7532, file: !7053, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !7532, file: !7053, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !7532, file: !7053, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !7532, file: !7053, line: 376, baseType: !7, size: 32, offset: 1120)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !7532, file: !7053, line: 377, baseType: !7, size: 32, offset: 1152)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7532, file: !7053, line: 380, baseType: !7723, size: 64, offset: 1216)
!7723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7724, size: 64)
!7724 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !7053, line: 303, flags: DIFlagFwdDecl)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !7532, file: !7053, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !7532, file: !7053, line: 383, baseType: !32, size: 32, offset: 1312)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !7532, file: !7053, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !7532, file: !7053, line: 387, baseType: !7683, size: 32, offset: 1376)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7532, file: !7053, line: 388, baseType: !6540, size: 5568, offset: 1408)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !7532, file: !7053, line: 390, baseType: !32, size: 32, offset: 6976)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7532, file: !7053, line: 396, baseType: !7, size: 32, offset: 7008)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7532, file: !7053, line: 397, baseType: !7733, size: 8704, offset: 7040)
!7733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7548, size: 8704, elements: !7734)
!7734 = !{!7735}
!7735 = !DISubrange(count: 17)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7532, file: !7053, line: 399, baseType: !771, size: 8, offset: 15744)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !7532, file: !7053, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !7532, file: !7053, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !7532, file: !7053, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !7532, file: !7053, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !7532, file: !7053, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !7532, file: !7053, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !7532, file: !7053, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !7532, file: !7053, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !7532, file: !7053, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !7532, file: !7053, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !7532, file: !7053, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !7532, file: !7053, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !7532, file: !7053, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !7532, file: !7053, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !7532, file: !7053, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !7532, file: !7053, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !7532, file: !7053, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !7532, file: !7053, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !7532, file: !7053, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7532, file: !7053, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !7532, file: !7053, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !7532, file: !7053, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !7532, file: !7053, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !7532, file: !7053, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !7532, file: !7053, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !7532, file: !7053, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !7532, file: !7053, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !7532, file: !7053, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !7532, file: !7053, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !7532, file: !7053, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !7532, file: !7053, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !7532, file: !7053, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !7532, file: !7053, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !7532, file: !7053, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !7532, file: !7053, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !7532, file: !7053, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7532, file: !7053, line: 450, baseType: !7774, size: 16, offset: 15792)
!7774 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !7053, line: 206, baseType: !476)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !7532, file: !7053, line: 451, baseType: !383, size: 32, offset: 15808)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7532, file: !7053, line: 453, baseType: !7777, size: 512, offset: 15840)
!7777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !269)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !7532, file: !7053, line: 454, baseType: !1581, size: 64, offset: 16384)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !7532, file: !7053, line: 455, baseType: !6171, size: 64, offset: 16448)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !7532, file: !7053, line: 456, baseType: !32, size: 32, offset: 16512)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !7532, file: !7053, line: 457, baseType: !7782, size: 1088, offset: 16576)
!7782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6171, size: 1088, elements: !7734)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !7532, file: !7053, line: 458, baseType: !7782, size: 1088, offset: 17664)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !7532, file: !7053, line: 469, baseType: !6157, size: 64, offset: 18752)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !7532, file: !7053, line: 471, baseType: !7786, size: 64, offset: 18816)
!7786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7787, size: 64)
!7787 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !7053, line: 304, flags: DIFlagFwdDecl)
!7788 = !DIDerivedType(tag: DW_TAG_member, scope: !7532, file: !7053, line: 478, baseType: !7789, size: 64, offset: 18880)
!7789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7532, file: !7053, line: 478, size: 64, elements: !7790)
!7790 = !{!7791, !7794}
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !7789, file: !7053, line: 479, baseType: !7792, size: 64)
!7792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7793, size: 64)
!7793 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !7053, line: 305, flags: DIFlagFwdDecl)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !7789, file: !7053, line: 480, baseType: !7531, size: 64)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !7532, file: !7053, line: 482, baseType: !581, size: 16, offset: 18944)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !7532, file: !7053, line: 483, baseType: !794, size: 8, offset: 18960)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !7532, file: !7053, line: 497, baseType: !581, size: 16, offset: 18976)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !7532, file: !7053, line: 498, baseType: !4045, size: 64, offset: 19008)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !7532, file: !7053, line: 499, baseType: !1039, size: 64, offset: 19072)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7532, file: !7053, line: 500, baseType: !1038, size: 64, offset: 19136)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !7532, file: !7053, line: 502, baseType: !312, size: 64, offset: 19200)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "orig_mac", scope: !7447, file: !3, line: 781, baseType: !7803, size: 64, offset: 5824)
!7803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 64, elements: !2664)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !7447, file: !3, line: 782, baseType: !987, size: 32, offset: 5888)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "irqmask", scope: !7447, file: !3, line: 783, baseType: !987, size: 32, offset: 5920)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "desc_ver", scope: !7447, file: !3, line: 784, baseType: !987, size: 32, offset: 5952)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "txrxctl_bits", scope: !7447, file: !3, line: 785, baseType: !987, size: 32, offset: 5984)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "vlanctl_bits", scope: !7447, file: !3, line: 786, baseType: !987, size: 32, offset: 6016)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7447, file: !3, line: 787, baseType: !987, size: 32, offset: 6048)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "device_id", scope: !7447, file: !3, line: 788, baseType: !987, size: 32, offset: 6080)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "register_size", scope: !7447, file: !3, line: 789, baseType: !987, size: 32, offset: 6112)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "mac_in_use", scope: !7447, file: !3, line: 790, baseType: !987, size: 32, offset: 6144)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "mgmt_version", scope: !7447, file: !3, line: 791, baseType: !32, size: 32, offset: 6176)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "mgmt_sema", scope: !7447, file: !3, line: 792, baseType: !32, size: 32, offset: 6208)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7447, file: !3, line: 794, baseType: !591, size: 64, offset: 6272)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "get_rx", scope: !7447, file: !3, line: 799, baseType: !7817, size: 64, offset: 6336)
!7817 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ring_type", file: !3, line: 354, size: 64, elements: !7818)
!7818 = !{!7819, !7826}
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !7817, file: !3, line: 355, baseType: !7820, size: 64)
!7820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7821, size: 64)
!7821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ring_desc", file: !3, line: 342, size: 64, elements: !7822)
!7822 = !{!7823, !7825}
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7821, file: !3, line: 343, baseType: !7824, size: 32)
!7824 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !525, line: 31, baseType: !493)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "flaglen", scope: !7821, file: !3, line: 344, baseType: !7824, size: 32, offset: 32)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "ex", scope: !7817, file: !3, line: 356, baseType: !7827, size: 64)
!7827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7828, size: 64)
!7828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ring_desc_ex", file: !3, line: 347, size: 128, elements: !7829)
!7829 = !{!7830, !7831, !7832, !7833}
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "bufhigh", scope: !7828, file: !3, line: 348, baseType: !7824, size: 32)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "buflow", scope: !7828, file: !3, line: 349, baseType: !7824, size: 32, offset: 32)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "txvlan", scope: !7828, file: !3, line: 350, baseType: !7824, size: 32, offset: 64)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "flaglen", scope: !7828, file: !3, line: 351, baseType: !7824, size: 32, offset: 96)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "put_rx", scope: !7447, file: !3, line: 799, baseType: !7817, size: 64, offset: 6400)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "last_rx", scope: !7447, file: !3, line: 799, baseType: !7817, size: 64, offset: 6464)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "get_rx_ctx", scope: !7447, file: !3, line: 800, baseType: !7837, size: 64, offset: 6528)
!7837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7838, size: 64)
!7838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nv_skb_map", file: !3, line: 707, size: 320, elements: !7839)
!7839 = !{!7840, !7841, !7842, !7843, !7844, !7845}
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7838, file: !3, line: 708, baseType: !415, size: 64)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7838, file: !3, line: 709, baseType: !2036, size: 64, offset: 64)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "dma_len", scope: !7838, file: !3, line: 710, baseType: !7, size: 31, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "dma_single", scope: !7838, file: !3, line: 711, baseType: !7, size: 1, offset: 159, flags: DIFlagBitField, extraData: i64 128)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "first_tx_desc", scope: !7838, file: !3, line: 712, baseType: !7827, size: 64, offset: 192)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "next_tx_ctx", scope: !7838, file: !3, line: 713, baseType: !7837, size: 64, offset: 256)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "put_rx_ctx", scope: !7447, file: !3, line: 800, baseType: !7837, size: 64, offset: 6592)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "last_rx_ctx", scope: !7447, file: !3, line: 801, baseType: !7837, size: 64, offset: 6656)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "rx_skb", scope: !7447, file: !3, line: 802, baseType: !7837, size: 64, offset: 6720)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring", scope: !7447, file: !3, line: 804, baseType: !7817, size: 64, offset: 6784)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf_sz", scope: !7447, file: !3, line: 805, baseType: !7, size: 32, offset: 6848)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_limit", scope: !7447, file: !3, line: 806, baseType: !7, size: 32, offset: 6880)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "oom_kick", scope: !7447, file: !3, line: 807, baseType: !3235, size: 320, offset: 6912)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "nic_poll", scope: !7447, file: !3, line: 808, baseType: !3235, size: 320, offset: 7232)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "stats_poll", scope: !7447, file: !3, line: 809, baseType: !3235, size: 320, offset: 7552)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "nic_poll_irq", scope: !7447, file: !3, line: 810, baseType: !987, size: 32, offset: 7872)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring_size", scope: !7447, file: !3, line: 811, baseType: !32, size: 32, offset: 7904)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "swstats_rx_syncp", scope: !7447, file: !3, line: 814, baseType: !3071, offset: 7936)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "txrx_stats", scope: !7447, file: !3, line: 815, baseType: !7436, size: 64, offset: 7936)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "need_linktimer", scope: !7447, file: !3, line: 820, baseType: !32, size: 32, offset: 8000)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "link_timeout", scope: !7447, file: !3, line: 821, baseType: !312, size: 64, offset: 8064)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "get_tx", scope: !7447, file: !3, line: 825, baseType: !7817, size: 64, offset: 8128)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "put_tx", scope: !7447, file: !3, line: 825, baseType: !7817, size: 64, offset: 8192)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "last_tx", scope: !7447, file: !3, line: 825, baseType: !7817, size: 64, offset: 8256)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "get_tx_ctx", scope: !7447, file: !3, line: 826, baseType: !7837, size: 64, offset: 8320)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "put_tx_ctx", scope: !7447, file: !3, line: 826, baseType: !7837, size: 64, offset: 8384)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "last_tx_ctx", scope: !7447, file: !3, line: 827, baseType: !7837, size: 64, offset: 8448)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skb", scope: !7447, file: !3, line: 828, baseType: !7837, size: 64, offset: 8512)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring", scope: !7447, file: !3, line: 830, baseType: !7817, size: 64, offset: 8576)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !7447, file: !3, line: 831, baseType: !987, size: 32, offset: 8640)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_size", scope: !7447, file: !3, line: 832, baseType: !32, size: 32, offset: 8672)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !7447, file: !3, line: 833, baseType: !32, size: 32, offset: 8704)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pkts_in_progress", scope: !7447, file: !3, line: 834, baseType: !987, size: 32, offset: 8736)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "tx_change_owner", scope: !7447, file: !3, line: 835, baseType: !7837, size: 64, offset: 8768)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "tx_end_flip", scope: !7447, file: !3, line: 836, baseType: !7837, size: 64, offset: 8832)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "tx_stop", scope: !7447, file: !3, line: 837, baseType: !32, size: 32, offset: 8896)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "swstats_tx_syncp", scope: !7447, file: !3, line: 840, baseType: !3071, offset: 8928)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "msi_flags", scope: !7447, file: !3, line: 843, baseType: !987, size: 32, offset: 8928)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "msi_x_entry", scope: !7447, file: !3, line: 844, baseType: !7879, size: 512, offset: 8960)
!7879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7880, size: 512, elements: !2433)
!7880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msix_entry", file: !7053, line: 1453, size: 64, elements: !7881)
!7881 = !{!7882, !7883}
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !7880, file: !7053, line: 1454, baseType: !987, size: 32)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !7880, file: !7053, line: 1455, baseType: !581, size: 16, offset: 32)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "pause_flags", scope: !7447, file: !3, line: 847, baseType: !987, size: 32, offset: 9472)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7447, file: !3, line: 850, baseType: !7886, size: 12320, offset: 9504)
!7886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 12320, elements: !7887)
!7887 = !{!7888}
!7888 = !DISubrange(count: 385)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "name_rx", scope: !7447, file: !3, line: 853, baseType: !7890, size: 152, offset: 21824)
!7890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 152, elements: !7891)
!7891 = !{!7892}
!7892 = !DISubrange(count: 19)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "name_tx", scope: !7447, file: !3, line: 854, baseType: !7890, size: 152, offset: 21976)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "name_other", scope: !7447, file: !3, line: 855, baseType: !7895, size: 176, offset: 22128)
!7895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 176, elements: !7896)
!7896 = !{!7897}
!7897 = !DISubrange(count: 22)
!7898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7899, size: 64)
!7899 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!7900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!7901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7902, size: 64)
!7902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_ethhdr", file: !7903, line: 48, size: 144, elements: !7904)
!7903 = !DIFile(filename: "./include/linux/if_vlan.h", directory: "/home/lizy2001/genbc/linux")
!7904 = !{!7905, !7906, !7907, !7908, !7909}
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !7902, file: !7903, line: 49, baseType: !5803, size: 48)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !7902, file: !7903, line: 50, baseType: !5803, size: 48, offset: 48)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_proto", scope: !7902, file: !7903, line: 51, baseType: !535, size: 16, offset: 96)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_TCI", scope: !7902, file: !7903, line: 52, baseType: !535, size: 16, offset: 112)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_encapsulated_proto", scope: !7902, file: !7903, line: 53, baseType: !535, size: 16, offset: 128)
!7910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5799, size: 64)
!7911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7912, size: 64)
!7912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7913)
!7913 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!7914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7915, size: 64)
!7915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !417, line: 512, size: 2560, elements: !7916)
!7916 = !{!7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7928, !7929, !7930, !7931, !7932}
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !7915, file: !417, line: 513, baseType: !481, size: 8)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !7915, file: !417, line: 514, baseType: !481, size: 8, offset: 8)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !7915, file: !417, line: 515, baseType: !481, size: 8, offset: 16)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !7915, file: !417, line: 516, baseType: !481, size: 8, offset: 24)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !7915, file: !417, line: 517, baseType: !476, size: 16, offset: 32)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !7915, file: !417, line: 519, baseType: !476, size: 16, offset: 48)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !7915, file: !417, line: 520, baseType: !415, size: 64, offset: 64)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !7915, file: !417, line: 521, baseType: !7925, size: 64, offset: 128)
!7925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !417, line: 418, size: 64, elements: !7926)
!7926 = !{!7927}
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !7925, file: !417, line: 419, baseType: !453, size: 64)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !7915, file: !417, line: 522, baseType: !7, size: 32, offset: 192)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !7915, file: !417, line: 523, baseType: !987, size: 32, offset: 224)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !7915, file: !417, line: 528, baseType: !383, size: 32, offset: 256)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !7915, file: !417, line: 532, baseType: !591, size: 64, offset: 320)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !7915, file: !417, line: 535, baseType: !7933, size: 2176, offset: 384)
!7933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7934, size: 2176, elements: !7734)
!7934 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !417, line: 321, baseType: !1876)
!7935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7936, size: 64)
!7936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !31, line: 209, size: 640, elements: !7937)
!7937 = !{!7938, !7939, !7940, !7941, !7942, !7943, !7944, !7945}
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7936, file: !31, line: 210, baseType: !284, size: 128)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7936, file: !31, line: 211, baseType: !1031, size: 256, offset: 128)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7936, file: !31, line: 212, baseType: !482, size: 8, offset: 384)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !7936, file: !31, line: 217, baseType: !771, size: 8, offset: 392)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !7936, file: !31, line: 218, baseType: !32, size: 32, offset: 416)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !7936, file: !31, line: 219, baseType: !32, size: 32, offset: 448)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !7936, file: !31, line: 220, baseType: !32, size: 32, offset: 480)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7936, file: !31, line: 221, baseType: !299, size: 128, align: 64, offset: 512)
!7946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7824, size: 64)
!7947 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !525, line: 29, baseType: !475)
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7947, size: 64)
!7949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!7950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7951, size: 64)
!7951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2468)
!7952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7913, size: 64)
!7953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7954, size: 64)
!7954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!7955 = !{!7956, !8005, !8010, !8015, !8017, !8022, !8027, !8029, !8032, !8037, !8039, !8044, !8049, !8051, !8054, !8059, !8061, !8066, !8071, !8073, !8075, !8080, !8082, !8087, !8092, !8094, !8096, !8098, !8100, !8105, !8110, !8113, !8118, !8121, !0, !8123, !8125, !8127, !8129, !8134, !8136, !8139, !8141, !8146, !8148, !8151, !8153, !8155, !8157, !8162, !8164, !8166, !8168, !8171, !8174, !8180, !8184, !8186, !8189, !8191, !8193, !8195, !8203, !8210, !8213, !8224}
!7956 = !DIGlobalVariableExpression(var: !7957, expr: !DIExpression())
!7957 = distinct !DIGlobalVariable(name: "__param_max_interrupt_work", scope: !2, file: !3, line: 6478, type: !7958, isLocal: true, isDefinition: true, align: 64)
!7958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7959)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !7960, line: 69, size: 320, elements: !7961)
!7960 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!7961 = !{!7962, !7963, !7964, !7980, !7981, !7983, !7984}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7959, file: !7960, line: 70, baseType: !292, size: 64)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !7959, file: !7960, line: 71, baseType: !980, size: 64, offset: 64)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7959, file: !7960, line: 72, baseType: !7965, size: 64, offset: 128)
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7966, size: 64)
!7966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7967)
!7967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !7960, line: 47, size: 256, elements: !7968)
!7968 = !{!7969, !7970, !7975, !7979}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7967, file: !7960, line: 49, baseType: !7, size: 32)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !7967, file: !7960, line: 51, baseType: !7971, size: 64, offset: 64)
!7971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7972, size: 64)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!32, !292, !7974}
!7974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7958, size: 64)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !7967, file: !7960, line: 53, baseType: !7976, size: 64, offset: 128)
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7977, size: 64)
!7977 = !DISubroutineType(types: !7978)
!7978 = !{!32, !1038, !7974}
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7967, file: !7960, line: 55, baseType: !1415, size: 64, offset: 192)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !7959, file: !7960, line: 73, baseType: !7954, size: 16, offset: 192)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !7959, file: !7960, line: 74, baseType: !7982, size: 8, offset: 208)
!7982 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !332, line: 16, baseType: !5995)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7959, file: !7960, line: 75, baseType: !794, size: 8, offset: 216)
!7984 = !DIDerivedType(tag: DW_TAG_member, scope: !7959, file: !7960, line: 76, baseType: !7985, size: 64, offset: 256)
!7985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7959, file: !7960, line: 76, size: 64, elements: !7986)
!7986 = !{!7987, !7988, !7995}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7985, file: !7960, line: 77, baseType: !591, size: 64)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !7985, file: !7960, line: 78, baseType: !7989, size: 64)
!7989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7990, size: 64)
!7990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7991)
!7991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !7960, line: 86, size: 128, elements: !7992)
!7992 = !{!7993, !7994}
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !7991, file: !7960, line: 87, baseType: !7, size: 32)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !7991, file: !7960, line: 88, baseType: !1038, size: 64, offset: 64)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !7985, file: !7960, line: 79, baseType: !7996, size: 64)
!7996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7997, size: 64)
!7997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7998)
!7998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !7960, line: 92, size: 256, elements: !7999)
!7999 = !{!8000, !8001, !8002, !8003, !8004}
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !7998, file: !7960, line: 94, baseType: !7, size: 32)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !7998, file: !7960, line: 95, baseType: !7, size: 32, offset: 32)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !7998, file: !7960, line: 96, baseType: !4608, size: 64, offset: 64)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7998, file: !7960, line: 97, baseType: !7965, size: 64, offset: 128)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !7998, file: !7960, line: 98, baseType: !591, size: 64, offset: 192)
!8005 = !DIGlobalVariableExpression(var: !8006, expr: !DIExpression())
!8006 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_interrupt_worktype333", scope: !2, file: !3, line: 6478, type: !8007, isLocal: true, isDefinition: true, align: 8)
!8007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 336, elements: !8008)
!8008 = !{!8009}
!8009 = !DISubrange(count: 42)
!8010 = !DIGlobalVariableExpression(var: !8011, expr: !DIExpression())
!8011 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_interrupt_work334", scope: !2, file: !3, line: 6479, type: !8012, isLocal: true, isDefinition: true, align: 8)
!8012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 648, elements: !8013)
!8013 = !{!8014}
!8014 = !DISubrange(count: 81)
!8015 = !DIGlobalVariableExpression(var: !8016, expr: !DIExpression())
!8016 = distinct !DIGlobalVariable(name: "__param_optimization_mode", scope: !2, file: !3, line: 6480, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8017 = !DIGlobalVariableExpression(var: !8018, expr: !DIExpression())
!8018 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_optimization_modetype335", scope: !2, file: !3, line: 6480, type: !8019, isLocal: true, isDefinition: true, align: 8)
!8019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 328, elements: !8020)
!8020 = !{!8021}
!8021 = !DISubrange(count: 41)
!8022 = !DIGlobalVariableExpression(var: !8023, expr: !DIExpression())
!8023 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_optimization_mode336", scope: !2, file: !3, line: 6481, type: !8024, isLocal: true, isDefinition: true, align: 8)
!8024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 2032, elements: !8025)
!8025 = !{!8026}
!8026 = !DISubrange(count: 254)
!8027 = !DIGlobalVariableExpression(var: !8028, expr: !DIExpression())
!8028 = distinct !DIGlobalVariable(name: "__param_poll_interval", scope: !2, file: !3, line: 6482, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8029 = !DIGlobalVariableExpression(var: !8030, expr: !DIExpression())
!8030 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_poll_intervaltype337", scope: !2, file: !3, line: 6482, type: !8031, isLocal: true, isDefinition: true, align: 8)
!8031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 296, elements: !3068)
!8032 = !DIGlobalVariableExpression(var: !8033, expr: !DIExpression())
!8033 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_poll_interval338", scope: !2, file: !3, line: 6483, type: !8034, isLocal: true, isDefinition: true, align: 8)
!8034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 1280, elements: !8035)
!8035 = !{!8036}
!8036 = !DISubrange(count: 160)
!8037 = !DIGlobalVariableExpression(var: !8038, expr: !DIExpression())
!8038 = distinct !DIGlobalVariable(name: "__param_msi", scope: !2, file: !3, line: 6484, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8039 = !DIGlobalVariableExpression(var: !8040, expr: !DIExpression())
!8040 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_msitype339", scope: !2, file: !3, line: 6484, type: !8041, isLocal: true, isDefinition: true, align: 8)
!8041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 216, elements: !8042)
!8042 = !{!8043}
!8043 = !DISubrange(count: 27)
!8044 = !DIGlobalVariableExpression(var: !8045, expr: !DIExpression())
!8045 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_msi340", scope: !2, file: !3, line: 6485, type: !8046, isLocal: true, isDefinition: true, align: 8)
!8046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 736, elements: !8047)
!8047 = !{!8048}
!8048 = !DISubrange(count: 92)
!8049 = !DIGlobalVariableExpression(var: !8050, expr: !DIExpression())
!8050 = distinct !DIGlobalVariable(name: "__param_msix", scope: !2, file: !3, line: 6486, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8051 = !DIGlobalVariableExpression(var: !8052, expr: !DIExpression())
!8052 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_msixtype341", scope: !2, file: !3, line: 6486, type: !8053, isLocal: true, isDefinition: true, align: 8)
!8053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 224, elements: !3096)
!8054 = !DIGlobalVariableExpression(var: !8055, expr: !DIExpression())
!8055 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_msix342", scope: !2, file: !3, line: 6487, type: !8056, isLocal: true, isDefinition: true, align: 8)
!8056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 752, elements: !8057)
!8057 = !{!8058}
!8058 = !DISubrange(count: 94)
!8059 = !DIGlobalVariableExpression(var: !8060, expr: !DIExpression())
!8060 = distinct !DIGlobalVariable(name: "__param_dma_64bit", scope: !2, file: !3, line: 6488, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8061 = !DIGlobalVariableExpression(var: !8062, expr: !DIExpression())
!8062 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dma_64bittype343", scope: !2, file: !3, line: 6488, type: !8063, isLocal: true, isDefinition: true, align: 8)
!8063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 264, elements: !8064)
!8064 = !{!8065}
!8065 = !DISubrange(count: 33)
!8066 = !DIGlobalVariableExpression(var: !8067, expr: !DIExpression())
!8067 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dma_64bit344", scope: !2, file: !3, line: 6489, type: !8068, isLocal: true, isDefinition: true, align: 8)
!8068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 728, elements: !8069)
!8069 = !{!8070}
!8070 = !DISubrange(count: 91)
!8071 = !DIGlobalVariableExpression(var: !8072, expr: !DIExpression())
!8072 = distinct !DIGlobalVariable(name: "__param_phy_cross", scope: !2, file: !3, line: 6490, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8073 = !DIGlobalVariableExpression(var: !8074, expr: !DIExpression())
!8074 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_phy_crosstype345", scope: !2, file: !3, line: 6490, type: !8063, isLocal: true, isDefinition: true, align: 8)
!8075 = !DIGlobalVariableExpression(var: !8076, expr: !DIExpression())
!8076 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_phy_cross346", scope: !2, file: !3, line: 6491, type: !8077, isLocal: true, isDefinition: true, align: 8)
!8077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 1016, elements: !8078)
!8078 = !{!8079}
!8079 = !DISubrange(count: 127)
!8080 = !DIGlobalVariableExpression(var: !8081, expr: !DIExpression())
!8081 = distinct !DIGlobalVariable(name: "__param_phy_power_down", scope: !2, file: !3, line: 6492, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8082 = !DIGlobalVariableExpression(var: !8083, expr: !DIExpression())
!8083 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_phy_power_downtype347", scope: !2, file: !3, line: 6492, type: !8084, isLocal: true, isDefinition: true, align: 8)
!8084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 304, elements: !8085)
!8085 = !{!8086}
!8086 = !DISubrange(count: 38)
!8087 = !DIGlobalVariableExpression(var: !8088, expr: !DIExpression())
!8088 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_phy_power_down348", scope: !2, file: !3, line: 6493, type: !8089, isLocal: true, isDefinition: true, align: 8)
!8089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 952, elements: !8090)
!8090 = !{!8091}
!8091 = !DISubrange(count: 119)
!8092 = !DIGlobalVariableExpression(var: !8093, expr: !DIExpression())
!8093 = distinct !DIGlobalVariable(name: "__param_debug_tx_timeout", scope: !2, file: !3, line: 6494, type: !7958, isLocal: true, isDefinition: true, align: 64)
!8094 = !DIGlobalVariableExpression(var: !8095, expr: !DIExpression())
!8095 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug_tx_timeouttype349", scope: !2, file: !3, line: 6494, type: !8019, isLocal: true, isDefinition: true, align: 8)
!8096 = !DIGlobalVariableExpression(var: !8097, expr: !DIExpression())
!8097 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug_tx_timeout350", scope: !2, file: !3, line: 6495, type: !8068, isLocal: true, isDefinition: true, align: 8)
!8098 = !DIGlobalVariableExpression(var: !8099, expr: !DIExpression())
!8099 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_forcedeth_pci_driver_init351", scope: !2, file: !3, line: 6498, type: !591, isLocal: true, isDefinition: true)
!8100 = !DIGlobalVariableExpression(var: !8101, expr: !DIExpression())
!8101 = distinct !DIGlobalVariable(name: "__exitcall_forcedeth_pci_driver_exit", scope: !2, file: !3, line: 6498, type: !8102, isLocal: true, isDefinition: true)
!8102 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !8103, line: 117, baseType: !8104)
!8103 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!8104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!8105 = !DIGlobalVariableExpression(var: !8106, expr: !DIExpression())
!8106 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author352", scope: !2, file: !3, line: 6499, type: !8107, isLocal: true, isDefinition: true, align: 8)
!8107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 472, elements: !8108)
!8108 = !{!8109}
!8109 = !DISubrange(count: 59)
!8110 = !DIGlobalVariableExpression(var: !8111, expr: !DIExpression())
!8111 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description353", scope: !2, file: !3, line: 6500, type: !8112, isLocal: true, isDefinition: true, align: 8)
!8112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 512, elements: !3812)
!8113 = !DIGlobalVariableExpression(var: !8114, expr: !DIExpression())
!8114 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file354", scope: !2, file: !3, line: 6501, type: !8115, isLocal: true, isDefinition: true, align: 8)
!8115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 424, elements: !8116)
!8116 = !{!8117}
!8117 = !DISubrange(count: 53)
!8118 = !DIGlobalVariableExpression(var: !8119, expr: !DIExpression())
!8119 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license355", scope: !2, file: !3, line: 6501, type: !8120, isLocal: true, isDefinition: true, align: 8)
!8120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 176, elements: !7896)
!8121 = !DIGlobalVariableExpression(var: !8122, expr: !DIExpression())
!8122 = distinct !DIGlobalVariable(name: "phy_power_down", scope: !2, file: !3, line: 932, type: !32, isLocal: true, isDefinition: true)
!8123 = !DIGlobalVariableExpression(var: !8124, expr: !DIExpression())
!8124 = distinct !DIGlobalVariable(name: "max_interrupt_work", scope: !2, file: !3, line: 862, type: !32, isLocal: true, isDefinition: true)
!8125 = !DIGlobalVariableExpression(var: !8126, expr: !DIExpression())
!8126 = distinct !DIGlobalVariable(name: "__param_str_optimization_mode", scope: !2, file: !3, line: 6480, type: !8053, isLocal: true, isDefinition: true)
!8127 = !DIGlobalVariableExpression(var: !8128, expr: !DIExpression())
!8128 = distinct !DIGlobalVariable(name: "optimization_mode", scope: !2, file: !3, line: 875, type: !32, isLocal: true, isDefinition: true)
!8129 = !DIGlobalVariableExpression(var: !8130, expr: !DIExpression())
!8130 = distinct !DIGlobalVariable(name: "__param_str_poll_interval", scope: !2, file: !3, line: 6482, type: !8131, isLocal: true, isDefinition: true)
!8131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 192, elements: !8132)
!8132 = !{!8133}
!8133 = !DISubrange(count: 24)
!8134 = !DIGlobalVariableExpression(var: !8135, expr: !DIExpression())
!8135 = distinct !DIGlobalVariable(name: "poll_interval", scope: !2, file: !3, line: 884, type: !32, isLocal: true, isDefinition: true)
!8136 = !DIGlobalVariableExpression(var: !8137, expr: !DIExpression())
!8137 = distinct !DIGlobalVariable(name: "__param_str_msi", scope: !2, file: !3, line: 6484, type: !8138, isLocal: true, isDefinition: true)
!8138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 112, elements: !618)
!8139 = !DIGlobalVariableExpression(var: !8140, expr: !DIExpression())
!8140 = distinct !DIGlobalVariable(name: "msi", scope: !2, file: !3, line: 893, type: !32, isLocal: true, isDefinition: true)
!8141 = !DIGlobalVariableExpression(var: !8142, expr: !DIExpression())
!8142 = distinct !DIGlobalVariable(name: "__param_str_msix", scope: !2, file: !3, line: 6486, type: !8143, isLocal: true, isDefinition: true)
!8143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 120, elements: !8144)
!8144 = !{!8145}
!8145 = !DISubrange(count: 15)
!8146 = !DIGlobalVariableExpression(var: !8147, expr: !DIExpression())
!8147 = distinct !DIGlobalVariable(name: "msix", scope: !2, file: !3, line: 902, type: !32, isLocal: true, isDefinition: true)
!8148 = !DIGlobalVariableExpression(var: !8149, expr: !DIExpression())
!8149 = distinct !DIGlobalVariable(name: "__param_str_dma_64bit", scope: !2, file: !3, line: 6488, type: !8150, isLocal: true, isDefinition: true)
!8150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 160, elements: !900)
!8151 = !DIGlobalVariableExpression(var: !8152, expr: !DIExpression())
!8152 = distinct !DIGlobalVariable(name: "dma_64bit", scope: !2, file: !3, line: 911, type: !32, isLocal: true, isDefinition: true)
!8153 = !DIGlobalVariableExpression(var: !8154, expr: !DIExpression())
!8154 = distinct !DIGlobalVariable(name: "__param_str_phy_cross", scope: !2, file: !3, line: 6490, type: !8150, isLocal: true, isDefinition: true)
!8155 = !DIGlobalVariableExpression(var: !8156, expr: !DIExpression())
!8156 = distinct !DIGlobalVariable(name: "phy_cross", scope: !2, file: !3, line: 926, type: !32, isLocal: true, isDefinition: true)
!8157 = !DIGlobalVariableExpression(var: !8158, expr: !DIExpression())
!8158 = distinct !DIGlobalVariable(name: "__param_str_phy_power_down", scope: !2, file: !3, line: 6492, type: !8159, isLocal: true, isDefinition: true)
!8159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 200, elements: !8160)
!8160 = !{!8161}
!8161 = !DISubrange(count: 25)
!8162 = !DIGlobalVariableExpression(var: !8163, expr: !DIExpression())
!8163 = distinct !DIGlobalVariable(name: "__param_str_debug_tx_timeout", scope: !2, file: !3, line: 6494, type: !8041, isLocal: true, isDefinition: true)
!8164 = !DIGlobalVariableExpression(var: !8165, expr: !DIExpression())
!8165 = distinct !DIGlobalVariable(name: "debug_tx_timeout", scope: !2, file: !3, line: 916, type: !771, isLocal: true, isDefinition: true)
!8166 = !DIGlobalVariableExpression(var: !8167, expr: !DIExpression())
!8167 = distinct !DIGlobalVariable(name: "forcedeth_pci_driver", scope: !2, file: !3, line: 6469, type: !7636, isLocal: true, isDefinition: true)
!8168 = !DIGlobalVariableExpression(var: !8169, expr: !DIExpression())
!8169 = distinct !DIGlobalVariable(name: "pci_tbl", scope: !2, file: !3, line: 6305, type: !8170, isLocal: true, isDefinition: true)
!8170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7642, size: 10496, elements: !8020)
!8171 = !DIGlobalVariableExpression(var: !8172, expr: !DIExpression())
!8172 = distinct !DIGlobalVariable(name: "printed_version", scope: !8173, file: !3, line: 5718, type: !32, isLocal: true, isDefinition: true)
!8173 = distinct !DISubprogram(name: "nv_probe", scope: !3, file: !3, line: 5708, type: !7654, scopeLine: 5709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8174 = !DIGlobalVariableExpression(var: !8175, expr: !DIExpression())
!8175 = distinct !DIGlobalVariable(name: "__warned", scope: !8176, file: !8177, line: 275, type: !771, isLocal: true, isDefinition: true)
!8176 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !8177, file: !8177, line: 271, type: !8178, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8177 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!8178 = !DISubroutineType(types: !8179)
!8179 = !{!2036, !6545, !591, !1039, !7238, !312}
!8180 = !DIGlobalVariableExpression(var: !8181, expr: !DIExpression())
!8181 = distinct !DIGlobalVariable(name: "main_seedset", scope: !2, file: !3, line: 2127, type: !8182, isLocal: true, isDefinition: true)
!8182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5859, size: 3840, elements: !8183)
!8183 = !{!2434, !8145}
!8184 = !DIGlobalVariableExpression(var: !8185, expr: !DIExpression())
!8185 = distinct !DIGlobalVariable(name: "gear_seedset", scope: !2, file: !3, line: 2137, type: !8182, isLocal: true, isDefinition: true)
!8186 = !DIGlobalVariableExpression(var: !8187, expr: !DIExpression())
!8187 = distinct !DIGlobalVariable(name: "__warned", scope: !8188, file: !3, line: 1672, type: !771, isLocal: true, isDefinition: true)
!8188 = distinct !DISubprogram(name: "nv_update_stats", scope: !3, file: !3, line: 1664, type: !406, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8189 = !DIGlobalVariableExpression(var: !8190, expr: !DIExpression())
!8190 = distinct !DIGlobalVariable(name: "nv_netdev_ops", scope: !2, file: !3, line: 5674, type: !397, isLocal: true, isDefinition: true)
!8191 = !DIGlobalVariableExpression(var: !8192, expr: !DIExpression())
!8192 = distinct !DIGlobalVariable(name: "nv_netdev_ops_optimized", scope: !2, file: !3, line: 5691, type: !397, isLocal: true, isDefinition: true)
!8193 = !DIGlobalVariableExpression(var: !8194, expr: !DIExpression())
!8194 = distinct !DIGlobalVariable(name: "ops", scope: !2, file: !3, line: 5354, type: !5521, isLocal: true, isDefinition: true)
!8195 = !DIGlobalVariableExpression(var: !8196, expr: !DIExpression())
!8196 = distinct !DIGlobalVariable(name: "nv_registers_test", scope: !2, file: !3, line: 697, type: !8197, isLocal: true, isDefinition: true)
!8197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8198, size: 448, elements: !6004)
!8198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8199)
!8199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "register_test", file: !3, line: 692, size: 64, elements: !8200)
!8200 = !{!8201, !8202}
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !8199, file: !3, line: 693, baseType: !493, size: 32)
!8202 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8199, file: !3, line: 694, baseType: !493, size: 32, offset: 32)
!8203 = !DIGlobalVariableExpression(var: !8204, expr: !DIExpression())
!8204 = distinct !DIGlobalVariable(name: "nv_estats_str", scope: !2, file: !3, line: 597, type: !8205, isLocal: true, isDefinition: true)
!8205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8206, size: 8448, elements: !8064)
!8206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8207)
!8207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nv_ethtool_str", file: !3, line: 593, size: 256, elements: !8208)
!8208 = !{!8209}
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8207, file: !3, line: 594, baseType: !4625, size: 256)
!8210 = !DIGlobalVariableExpression(var: !8211, expr: !DIExpression())
!8211 = distinct !DIGlobalVariable(name: "nv_etests_str", scope: !2, file: !3, line: 685, type: !8212, isLocal: true, isDefinition: true)
!8212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8206, size: 1024, elements: !2272)
!8213 = !DIGlobalVariableExpression(var: !8214, expr: !DIExpression())
!8214 = distinct !DIGlobalVariable(name: "ri", scope: !8215, file: !3, line: 1208, type: !8218, isLocal: true, isDefinition: true)
!8215 = distinct !DISubprogram(name: "init_realtek_8211b", scope: !3, file: !3, line: 1203, type: !8216, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{!32, !290, !7446}
!8218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8219, size: 448, elements: !6004)
!8219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8220)
!8220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8215, file: !3, line: 1205, size: 64, elements: !8221)
!8221 = !{!8222, !8223}
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !8220, file: !3, line: 1206, baseType: !32, size: 32)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8220, file: !3, line: 1207, baseType: !32, size: 32, offset: 32)
!8224 = !DIGlobalVariableExpression(var: !8225, expr: !DIExpression())
!8225 = distinct !DIGlobalVariable(name: "nv_pm_ops", scope: !2, file: !3, line: 6267, type: !6572, isLocal: true, isDefinition: true)
!8226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 232, elements: !8227)
!8227 = !{!8228}
!8228 = !DISubrange(count: 29)
!8229 = !{!"rsp"}
!8230 = !{i32 7, !"Dwarf Version", i32 4}
!8231 = !{i32 2, !"Debug Info Version", i32 3}
!8232 = !{i32 1, !"wchar_size", i32 2}
!8233 = !{i32 1, !"Code Model", i32 2}
!8234 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!8235 = distinct !DISubprogram(name: "forcedeth_pci_driver_init", scope: !3, file: !3, line: 6498, type: !8236, scopeLine: 6498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!32}
!8238 = !DILocation(line: 6498, column: 1, scope: !8235)
!8239 = distinct !DISubprogram(name: "forcedeth_pci_driver_exit", scope: !3, file: !3, line: 6498, type: !3809, scopeLine: 6498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8240 = !DILocation(line: 6498, column: 1, scope: !8239)
!8241 = !DILocalVariable(name: "lock", arg: 1, scope: !8242, file: !8243, line: 402, type: !2181)
!8242 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !8243, file: !8243, line: 402, type: !8244, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8243 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8244 = !DISubroutineType(types: !8245)
!8245 = !{null, !2181}
!8246 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !8247)
!8247 = distinct !DILocation(line: 6059, column: 3, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 6048, column: 28)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 6048, column: 2)
!8250 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6048, column: 2)
!8251 = !DILocalVariable(name: "lock", arg: 1, scope: !8252, file: !8243, line: 377, type: !2181)
!8252 = distinct !DISubprogram(name: "spin_lock_irq", scope: !8243, file: !8243, line: 377, type: !8244, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8253 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !8254)
!8254 = distinct !DILocation(line: 6057, column: 3, scope: !8248)
!8255 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !8256)
!8256 = distinct !DILocation(line: 6054, column: 3, scope: !8248)
!8257 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !8258)
!8258 = distinct !DILocation(line: 6052, column: 3, scope: !8248)
!8259 = !DILocalVariable(name: "lock", arg: 1, scope: !8260, file: !8243, line: 327, type: !2181)
!8260 = distinct !DISubprogram(name: "spinlock_check", scope: !8243, file: !8243, line: 327, type: !8261, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!8263, !2181}
!8263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!8264 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !8265)
!8265 = distinct !DILocation(line: 5733, column: 2, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5733, column: 2)
!8267 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !8268)
!8268 = distinct !DILocation(line: 5732, column: 2, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5732, column: 2)
!8270 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !8173, file: !3, line: 5708, type: !7531)
!8271 = !DILocation(line: 5708, column: 37, scope: !8173)
!8272 = !DILocalVariable(name: "id", arg: 2, scope: !8173, file: !3, line: 5708, type: !7641)
!8273 = !DILocation(line: 5708, column: 74, scope: !8173)
!8274 = !DILocalVariable(name: "dev", scope: !8173, file: !3, line: 5710, type: !290)
!8275 = !DILocation(line: 5710, column: 21, scope: !8173)
!8276 = !DILocalVariable(name: "np", scope: !8173, file: !3, line: 5711, type: !7446)
!8277 = !DILocation(line: 5711, column: 18, scope: !8173)
!8278 = !DILocalVariable(name: "addr", scope: !8173, file: !3, line: 5712, type: !312)
!8279 = !DILocation(line: 5712, column: 16, scope: !8173)
!8280 = !DILocalVariable(name: "base", scope: !8173, file: !3, line: 5713, type: !793)
!8281 = !DILocation(line: 5713, column: 14, scope: !8173)
!8282 = !DILocalVariable(name: "err", scope: !8173, file: !3, line: 5714, type: !32)
!8283 = !DILocation(line: 5714, column: 6, scope: !8173)
!8284 = !DILocalVariable(name: "i", scope: !8173, file: !3, line: 5714, type: !32)
!8285 = !DILocation(line: 5714, column: 11, scope: !8173)
!8286 = !DILocalVariable(name: "powerstate", scope: !8173, file: !3, line: 5715, type: !987)
!8287 = !DILocation(line: 5715, column: 6, scope: !8173)
!8288 = !DILocalVariable(name: "txreg", scope: !8173, file: !3, line: 5715, type: !987)
!8289 = !DILocation(line: 5715, column: 18, scope: !8173)
!8290 = !DILocalVariable(name: "phystate_orig", scope: !8173, file: !3, line: 5716, type: !987)
!8291 = !DILocation(line: 5716, column: 6, scope: !8173)
!8292 = !DILocalVariable(name: "phystate", scope: !8173, file: !3, line: 5716, type: !987)
!8293 = !DILocation(line: 5716, column: 25, scope: !8173)
!8294 = !DILocalVariable(name: "phyinitialized", scope: !8173, file: !3, line: 5717, type: !32)
!8295 = !DILocation(line: 5717, column: 6, scope: !8173)
!8296 = !DILocation(line: 5720, column: 22, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5720, column: 6)
!8298 = !DILocation(line: 5720, column: 6, scope: !8173)
!8299 = !DILocation(line: 5721, column: 3, scope: !8297)
!8300 = !DILocation(line: 5724, column: 8, scope: !8173)
!8301 = !DILocation(line: 5724, column: 6, scope: !8173)
!8302 = !DILocation(line: 5725, column: 6, scope: !8173)
!8303 = !DILocation(line: 5726, column: 7, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5726, column: 6)
!8305 = !DILocation(line: 5726, column: 6, scope: !8173)
!8306 = !DILocation(line: 5727, column: 3, scope: !8304)
!8307 = !DILocation(line: 5729, column: 19, scope: !8173)
!8308 = !DILocation(line: 5729, column: 7, scope: !8173)
!8309 = !DILocation(line: 5729, column: 5, scope: !8173)
!8310 = !DILocation(line: 5730, column: 12, scope: !8173)
!8311 = !DILocation(line: 5730, column: 2, scope: !8173)
!8312 = !DILocation(line: 5730, column: 6, scope: !8173)
!8313 = !DILocation(line: 5730, column: 10, scope: !8173)
!8314 = !DILocation(line: 5731, column: 16, scope: !8173)
!8315 = !DILocation(line: 5731, column: 2, scope: !8173)
!8316 = !DILocation(line: 5731, column: 6, scope: !8173)
!8317 = !DILocation(line: 5731, column: 14, scope: !8173)
!8318 = !DILocation(line: 5732, column: 2, scope: !8173)
!8319 = !DILocation(line: 5732, column: 2, scope: !8269)
!8320 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !8268)
!8321 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !8268)
!8322 = !DILocation(line: 5733, column: 2, scope: !8173)
!8323 = !DILocation(line: 5733, column: 2, scope: !8266)
!8324 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !8265)
!8325 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !8265)
!8326 = !DILocation(line: 5734, column: 2, scope: !8173)
!8327 = !DILocation(line: 5735, column: 18, scope: !8173)
!8328 = !DILocation(line: 5735, column: 22, scope: !8173)
!8329 = !DILocation(line: 5735, column: 2, scope: !8173)
!8330 = !DILocation(line: 5736, column: 18, scope: !8173)
!8331 = !DILocation(line: 5736, column: 22, scope: !8173)
!8332 = !DILocation(line: 5736, column: 2, scope: !8173)
!8333 = !DILocation(line: 5737, column: 19, scope: !8173)
!8334 = !DILocation(line: 5737, column: 2, scope: !8173)
!8335 = !DILocation(line: 5737, column: 6, scope: !8173)
!8336 = !DILocation(line: 5737, column: 17, scope: !8173)
!8337 = !DILocation(line: 5738, column: 7, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5738, column: 6)
!8339 = !DILocation(line: 5738, column: 11, scope: !8338)
!8340 = !DILocation(line: 5738, column: 6, scope: !8173)
!8341 = !DILocation(line: 5739, column: 3, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 5738, column: 23)
!8343 = !DILocation(line: 5740, column: 7, scope: !8342)
!8344 = !DILocation(line: 5741, column: 3, scope: !8342)
!8345 = !DILocation(line: 5744, column: 2, scope: !8173)
!8346 = !DILocation(line: 5745, column: 2, scope: !8173)
!8347 = !DILocation(line: 5746, column: 2, scope: !8173)
!8348 = !DILocation(line: 5748, column: 26, scope: !8173)
!8349 = !DILocation(line: 5748, column: 8, scope: !8173)
!8350 = !DILocation(line: 5748, column: 6, scope: !8173)
!8351 = !DILocation(line: 5749, column: 6, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5749, column: 6)
!8353 = !DILocation(line: 5749, column: 6, scope: !8173)
!8354 = !DILocation(line: 5750, column: 3, scope: !8352)
!8355 = !DILocation(line: 5752, column: 17, scope: !8173)
!8356 = !DILocation(line: 5752, column: 2, scope: !8173)
!8357 = !DILocation(line: 5754, column: 28, scope: !8173)
!8358 = !DILocation(line: 5754, column: 8, scope: !8173)
!8359 = !DILocation(line: 5754, column: 6, scope: !8173)
!8360 = !DILocation(line: 5755, column: 6, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5755, column: 6)
!8362 = !DILocation(line: 5755, column: 10, scope: !8361)
!8363 = !DILocation(line: 5755, column: 6, scope: !8173)
!8364 = !DILocation(line: 5756, column: 3, scope: !8361)
!8365 = !DILocation(line: 5758, column: 6, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5758, column: 6)
!8367 = !DILocation(line: 5758, column: 10, scope: !8366)
!8368 = !DILocation(line: 5758, column: 22, scope: !8366)
!8369 = !DILocation(line: 5758, column: 6, scope: !8173)
!8370 = !DILocation(line: 5759, column: 3, scope: !8366)
!8371 = !DILocation(line: 5759, column: 7, scope: !8366)
!8372 = !DILocation(line: 5759, column: 21, scope: !8366)
!8373 = !DILocation(line: 5760, column: 11, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 5760, column: 11)
!8375 = !DILocation(line: 5760, column: 15, scope: !8374)
!8376 = !DILocation(line: 5760, column: 27, scope: !8374)
!8377 = !DILocation(line: 5760, column: 11, scope: !8366)
!8378 = !DILocation(line: 5761, column: 3, scope: !8374)
!8379 = !DILocation(line: 5761, column: 7, scope: !8374)
!8380 = !DILocation(line: 5761, column: 21, scope: !8374)
!8381 = !DILocation(line: 5763, column: 3, scope: !8374)
!8382 = !DILocation(line: 5763, column: 7, scope: !8374)
!8383 = !DILocation(line: 5763, column: 21, scope: !8374)
!8384 = !DILocation(line: 5765, column: 6, scope: !8173)
!8385 = !DILocation(line: 5766, column: 7, scope: !8173)
!8386 = !DILocation(line: 5767, column: 9, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5767, column: 2)
!8388 = !DILocation(line: 5767, column: 7, scope: !8387)
!8389 = !DILocation(line: 5767, column: 14, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 5767, column: 2)
!8391 = !DILocation(line: 5767, column: 16, scope: !8390)
!8392 = !DILocation(line: 5767, column: 2, scope: !8387)
!8393 = !DILocation(line: 5768, column: 7, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 5768, column: 7)
!8395 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 5767, column: 46)
!8396 = !DILocation(line: 5768, column: 38, scope: !8394)
!8397 = !DILocation(line: 5768, column: 55, scope: !8394)
!8398 = !DILocation(line: 5769, column: 5, scope: !8394)
!8399 = !DILocation(line: 5769, column: 37, scope: !8394)
!8400 = !DILocation(line: 5769, column: 41, scope: !8394)
!8401 = !DILocation(line: 5769, column: 34, scope: !8394)
!8402 = !DILocation(line: 5768, column: 7, scope: !8395)
!8403 = !DILocation(line: 5770, column: 11, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 5769, column: 56)
!8405 = !DILocation(line: 5770, column: 9, scope: !8404)
!8406 = !DILocation(line: 5771, column: 4, scope: !8404)
!8407 = !DILocation(line: 5773, column: 2, scope: !8395)
!8408 = !DILocation(line: 5767, column: 42, scope: !8390)
!8409 = !DILocation(line: 5767, column: 2, scope: !8390)
!8410 = distinct !{!8410, !8392, !8411}
!8411 = !DILocation(line: 5773, column: 2, scope: !8387)
!8412 = !DILocation(line: 5774, column: 6, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5774, column: 6)
!8414 = !DILocation(line: 5774, column: 8, scope: !8413)
!8415 = !DILocation(line: 5774, column: 6, scope: !8173)
!8416 = !DILocation(line: 5775, column: 3, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 5774, column: 34)
!8418 = !DILocation(line: 5776, column: 3, scope: !8417)
!8419 = !DILocation(line: 5780, column: 20, scope: !8173)
!8420 = !DILocation(line: 5780, column: 24, scope: !8173)
!8421 = !DILocation(line: 5780, column: 2, scope: !8173)
!8422 = !DILocation(line: 5780, column: 6, scope: !8173)
!8423 = !DILocation(line: 5780, column: 18, scope: !8173)
!8424 = !DILocation(line: 5782, column: 18, scope: !8173)
!8425 = !DILocation(line: 5782, column: 22, scope: !8173)
!8426 = !DILocation(line: 5782, column: 2, scope: !8173)
!8427 = !DILocation(line: 5782, column: 6, scope: !8173)
!8428 = !DILocation(line: 5782, column: 16, scope: !8173)
!8429 = !DILocation(line: 5785, column: 6, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5785, column: 6)
!8431 = !DILocation(line: 5785, column: 10, scope: !8430)
!8432 = !DILocation(line: 5785, column: 22, scope: !8430)
!8433 = !DILocation(line: 5785, column: 6, scope: !8173)
!8434 = !DILocation(line: 5787, column: 3, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 5785, column: 42)
!8436 = !DILocation(line: 5787, column: 7, scope: !8435)
!8437 = !DILocation(line: 5787, column: 16, scope: !8435)
!8438 = !DILocation(line: 5788, column: 3, scope: !8435)
!8439 = !DILocation(line: 5788, column: 7, scope: !8435)
!8440 = !DILocation(line: 5788, column: 20, scope: !8435)
!8441 = !DILocation(line: 5789, column: 7, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 5789, column: 7)
!8443 = !DILocation(line: 5789, column: 7, scope: !8435)
!8444 = !DILocation(line: 5790, column: 25, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 5790, column: 8)
!8446 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 5789, column: 18)
!8447 = !DILocation(line: 5790, column: 8, scope: !8445)
!8448 = !DILocation(line: 5790, column: 8, scope: !8446)
!8449 = !DILocation(line: 5791, column: 5, scope: !8445)
!8450 = !DILocation(line: 5794, column: 5, scope: !8445)
!8451 = !DILocation(line: 5794, column: 10, scope: !8445)
!8452 = !DILocation(line: 5794, column: 19, scope: !8445)
!8453 = !DILocation(line: 5795, column: 36, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 5795, column: 8)
!8455 = !DILocation(line: 5795, column: 8, scope: !8454)
!8456 = !DILocation(line: 5795, column: 8, scope: !8446)
!8457 = !DILocation(line: 5796, column: 5, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 5795, column: 64)
!8459 = !DILocation(line: 5798, column: 4, scope: !8458)
!8460 = !DILocation(line: 5799, column: 3, scope: !8446)
!8461 = !DILocation(line: 5800, column: 2, scope: !8435)
!8462 = !DILocation(line: 5800, column: 13, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 5800, column: 13)
!8464 = !DILocation(line: 5800, column: 17, scope: !8463)
!8465 = !DILocation(line: 5800, column: 29, scope: !8463)
!8466 = !DILocation(line: 5800, column: 13, scope: !8430)
!8467 = !DILocation(line: 5802, column: 3, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 5800, column: 50)
!8469 = !DILocation(line: 5802, column: 7, scope: !8468)
!8470 = !DILocation(line: 5802, column: 16, scope: !8468)
!8471 = !DILocation(line: 5803, column: 3, scope: !8468)
!8472 = !DILocation(line: 5803, column: 7, scope: !8468)
!8473 = !DILocation(line: 5803, column: 20, scope: !8468)
!8474 = !DILocation(line: 5804, column: 2, scope: !8468)
!8475 = !DILocation(line: 5806, column: 3, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 5804, column: 9)
!8477 = !DILocation(line: 5806, column: 7, scope: !8476)
!8478 = !DILocation(line: 5806, column: 16, scope: !8476)
!8479 = !DILocation(line: 5807, column: 3, scope: !8476)
!8480 = !DILocation(line: 5807, column: 7, scope: !8476)
!8481 = !DILocation(line: 5807, column: 20, scope: !8476)
!8482 = !DILocation(line: 5810, column: 2, scope: !8173)
!8483 = !DILocation(line: 5810, column: 6, scope: !8173)
!8484 = !DILocation(line: 5810, column: 16, scope: !8173)
!8485 = !DILocation(line: 5811, column: 6, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5811, column: 6)
!8487 = !DILocation(line: 5811, column: 10, scope: !8486)
!8488 = !DILocation(line: 5811, column: 22, scope: !8486)
!8489 = !DILocation(line: 5811, column: 6, scope: !8173)
!8490 = !DILocation(line: 5812, column: 3, scope: !8486)
!8491 = !DILocation(line: 5812, column: 7, scope: !8486)
!8492 = !DILocation(line: 5812, column: 17, scope: !8486)
!8493 = !DILocation(line: 5814, column: 6, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5814, column: 6)
!8495 = !DILocation(line: 5814, column: 10, scope: !8494)
!8496 = !DILocation(line: 5814, column: 22, scope: !8494)
!8497 = !DILocation(line: 5814, column: 6, scope: !8173)
!8498 = !DILocation(line: 5815, column: 3, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 5814, column: 42)
!8500 = !DILocation(line: 5815, column: 7, scope: !8499)
!8501 = !DILocation(line: 5815, column: 20, scope: !8499)
!8502 = !DILocation(line: 5816, column: 3, scope: !8499)
!8503 = !DILocation(line: 5816, column: 8, scope: !8499)
!8504 = !DILocation(line: 5816, column: 20, scope: !8499)
!8505 = !DILocation(line: 5818, column: 2, scope: !8499)
!8506 = !DILocation(line: 5820, column: 2, scope: !8173)
!8507 = !DILocation(line: 5820, column: 6, scope: !8173)
!8508 = !DILocation(line: 5820, column: 19, scope: !8173)
!8509 = !DILocation(line: 5821, column: 6, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5821, column: 6)
!8511 = !DILocation(line: 5821, column: 10, scope: !8510)
!8512 = !DILocation(line: 5821, column: 22, scope: !8510)
!8513 = !DILocation(line: 5821, column: 6, scope: !8173)
!8514 = !DILocation(line: 5822, column: 3, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 5821, column: 38)
!8516 = !DILocation(line: 5822, column: 7, scope: !8515)
!8517 = !DILocation(line: 5822, column: 20, scope: !8515)
!8518 = !DILocation(line: 5823, column: 3, scope: !8515)
!8519 = !DILocation(line: 5823, column: 8, scope: !8515)
!8520 = !DILocation(line: 5823, column: 20, scope: !8515)
!8521 = !DILocation(line: 5825, column: 2, scope: !8515)
!8522 = !DILocation(line: 5827, column: 19, scope: !8173)
!8523 = !DILocation(line: 5827, column: 24, scope: !8173)
!8524 = !DILocation(line: 5827, column: 2, scope: !8173)
!8525 = !DILocation(line: 5827, column: 7, scope: !8173)
!8526 = !DILocation(line: 5827, column: 16, scope: !8173)
!8527 = !DILocation(line: 5830, column: 2, scope: !8173)
!8528 = !DILocation(line: 5830, column: 7, scope: !8173)
!8529 = !DILocation(line: 5830, column: 19, scope: !8173)
!8530 = !DILocation(line: 5833, column: 2, scope: !8173)
!8531 = !DILocation(line: 5833, column: 7, scope: !8173)
!8532 = !DILocation(line: 5833, column: 15, scope: !8173)
!8533 = !DILocation(line: 5834, column: 17, scope: !8173)
!8534 = !DILocation(line: 5834, column: 21, scope: !8173)
!8535 = !DILocation(line: 5834, column: 2, scope: !8173)
!8536 = !DILocation(line: 5834, column: 7, scope: !8173)
!8537 = !DILocation(line: 5834, column: 15, scope: !8173)
!8538 = !DILocation(line: 5836, column: 2, scope: !8173)
!8539 = !DILocation(line: 5836, column: 6, scope: !8173)
!8540 = !DILocation(line: 5836, column: 18, scope: !8173)
!8541 = !DILocation(line: 5837, column: 7, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5837, column: 6)
!8543 = !DILocation(line: 5837, column: 11, scope: !8542)
!8544 = !DILocation(line: 5837, column: 23, scope: !8542)
!8545 = !DILocation(line: 5837, column: 51, scope: !8542)
!8546 = !DILocation(line: 5838, column: 7, scope: !8542)
!8547 = !DILocation(line: 5838, column: 11, scope: !8542)
!8548 = !DILocation(line: 5838, column: 23, scope: !8542)
!8549 = !DILocation(line: 5838, column: 51, scope: !8542)
!8550 = !DILocation(line: 5839, column: 7, scope: !8542)
!8551 = !DILocation(line: 5839, column: 11, scope: !8542)
!8552 = !DILocation(line: 5839, column: 23, scope: !8542)
!8553 = !DILocation(line: 5837, column: 6, scope: !8173)
!8554 = !DILocation(line: 5840, column: 3, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 5839, column: 52)
!8556 = !DILocation(line: 5840, column: 7, scope: !8555)
!8557 = !DILocation(line: 5840, column: 19, scope: !8555)
!8558 = !DILocation(line: 5841, column: 2, scope: !8555)
!8559 = !DILocation(line: 5843, column: 6, scope: !8173)
!8560 = !DILocation(line: 5844, column: 21, scope: !8173)
!8561 = !DILocation(line: 5844, column: 27, scope: !8173)
!8562 = !DILocation(line: 5844, column: 31, scope: !8173)
!8563 = !DILocation(line: 5844, column: 13, scope: !8173)
!8564 = !DILocation(line: 5844, column: 2, scope: !8173)
!8565 = !DILocation(line: 5844, column: 6, scope: !8173)
!8566 = !DILocation(line: 5844, column: 11, scope: !8173)
!8567 = !DILocation(line: 5845, column: 7, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5845, column: 6)
!8569 = !DILocation(line: 5845, column: 11, scope: !8568)
!8570 = !DILocation(line: 5845, column: 6, scope: !8173)
!8571 = !DILocation(line: 5846, column: 3, scope: !8568)
!8572 = !DILocation(line: 5848, column: 2, scope: !8173)
!8573 = !DILocation(line: 5848, column: 6, scope: !8173)
!8574 = !DILocation(line: 5848, column: 19, scope: !8173)
!8575 = !DILocation(line: 5849, column: 2, scope: !8173)
!8576 = !DILocation(line: 5849, column: 6, scope: !8173)
!8577 = !DILocation(line: 5849, column: 19, scope: !8173)
!8578 = !DILocation(line: 5851, column: 20, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5851, column: 6)
!8580 = !DILocation(line: 5851, column: 7, scope: !8579)
!8581 = !DILocation(line: 5851, column: 6, scope: !8173)
!8582 = !DILocation(line: 5852, column: 42, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 5851, column: 25)
!8584 = !DILocation(line: 5852, column: 51, scope: !8583)
!8585 = !DILocation(line: 5854, column: 14, scope: !8583)
!8586 = !DILocation(line: 5854, column: 18, scope: !8583)
!8587 = !DILocation(line: 5855, column: 13, scope: !8583)
!8588 = !DILocation(line: 5855, column: 17, scope: !8583)
!8589 = !DILocation(line: 5854, column: 31, scope: !8583)
!8590 = !DILocation(line: 5854, column: 13, scope: !8583)
!8591 = !DILocation(line: 5853, column: 38, scope: !8583)
!8592 = !DILocation(line: 5856, column: 14, scope: !8583)
!8593 = !DILocation(line: 5856, column: 18, scope: !8583)
!8594 = !DILocation(line: 5852, column: 22, scope: !8583)
!8595 = !DILocation(line: 5852, column: 3, scope: !8583)
!8596 = !DILocation(line: 5852, column: 7, scope: !8583)
!8597 = !DILocation(line: 5852, column: 15, scope: !8583)
!8598 = !DILocation(line: 5852, column: 20, scope: !8583)
!8599 = !DILocation(line: 5858, column: 8, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 5858, column: 7)
!8601 = !DILocation(line: 5858, column: 12, scope: !8600)
!8602 = !DILocation(line: 5858, column: 20, scope: !8600)
!8603 = !DILocation(line: 5858, column: 7, scope: !8583)
!8604 = !DILocation(line: 5859, column: 4, scope: !8600)
!8605 = !DILocation(line: 5860, column: 23, scope: !8583)
!8606 = !DILocation(line: 5860, column: 27, scope: !8583)
!8607 = !DILocation(line: 5860, column: 35, scope: !8583)
!8608 = !DILocation(line: 5860, column: 40, scope: !8583)
!8609 = !DILocation(line: 5860, column: 44, scope: !8583)
!8610 = !DILocation(line: 5860, column: 3, scope: !8583)
!8611 = !DILocation(line: 5860, column: 7, scope: !8583)
!8612 = !DILocation(line: 5860, column: 15, scope: !8583)
!8613 = !DILocation(line: 5860, column: 20, scope: !8583)
!8614 = !DILocation(line: 5861, column: 2, scope: !8583)
!8615 = !DILocation(line: 5862, column: 40, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 5861, column: 9)
!8617 = !DILocation(line: 5862, column: 49, scope: !8616)
!8618 = !DILocation(line: 5864, column: 12, scope: !8616)
!8619 = !DILocation(line: 5864, column: 16, scope: !8616)
!8620 = !DILocation(line: 5865, column: 11, scope: !8616)
!8621 = !DILocation(line: 5865, column: 15, scope: !8616)
!8622 = !DILocation(line: 5864, column: 29, scope: !8616)
!8623 = !DILocation(line: 5864, column: 11, scope: !8616)
!8624 = !DILocation(line: 5863, column: 39, scope: !8616)
!8625 = !DILocation(line: 5866, column: 12, scope: !8616)
!8626 = !DILocation(line: 5866, column: 16, scope: !8616)
!8627 = !DILocation(line: 5862, column: 20, scope: !8616)
!8628 = !DILocation(line: 5862, column: 3, scope: !8616)
!8629 = !DILocation(line: 5862, column: 7, scope: !8616)
!8630 = !DILocation(line: 5862, column: 15, scope: !8616)
!8631 = !DILocation(line: 5862, column: 18, scope: !8616)
!8632 = !DILocation(line: 5867, column: 8, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 5867, column: 7)
!8634 = !DILocation(line: 5867, column: 12, scope: !8633)
!8635 = !DILocation(line: 5867, column: 20, scope: !8633)
!8636 = !DILocation(line: 5867, column: 7, scope: !8616)
!8637 = !DILocation(line: 5868, column: 4, scope: !8633)
!8638 = !DILocation(line: 5869, column: 21, scope: !8616)
!8639 = !DILocation(line: 5869, column: 25, scope: !8616)
!8640 = !DILocation(line: 5869, column: 33, scope: !8616)
!8641 = !DILocation(line: 5869, column: 36, scope: !8616)
!8642 = !DILocation(line: 5869, column: 40, scope: !8616)
!8643 = !DILocation(line: 5869, column: 3, scope: !8616)
!8644 = !DILocation(line: 5869, column: 7, scope: !8616)
!8645 = !DILocation(line: 5869, column: 15, scope: !8616)
!8646 = !DILocation(line: 5869, column: 18, scope: !8616)
!8647 = !DILocation(line: 5871, column: 23, scope: !8173)
!8648 = !DILocation(line: 5871, column: 27, scope: !8173)
!8649 = !DILocation(line: 5871, column: 15, scope: !8173)
!8650 = !DILocation(line: 5871, column: 2, scope: !8173)
!8651 = !DILocation(line: 5871, column: 6, scope: !8173)
!8652 = !DILocation(line: 5871, column: 13, scope: !8173)
!8653 = !DILocation(line: 5872, column: 23, scope: !8173)
!8654 = !DILocation(line: 5872, column: 27, scope: !8173)
!8655 = !DILocation(line: 5872, column: 15, scope: !8173)
!8656 = !DILocation(line: 5872, column: 2, scope: !8173)
!8657 = !DILocation(line: 5872, column: 6, scope: !8173)
!8658 = !DILocation(line: 5872, column: 13, scope: !8173)
!8659 = !DILocation(line: 5873, column: 7, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5873, column: 6)
!8661 = !DILocation(line: 5873, column: 11, scope: !8660)
!8662 = !DILocation(line: 5873, column: 18, scope: !8660)
!8663 = !DILocation(line: 5873, column: 22, scope: !8660)
!8664 = !DILocation(line: 5873, column: 26, scope: !8660)
!8665 = !DILocation(line: 5873, column: 6, scope: !8173)
!8666 = !DILocation(line: 5874, column: 3, scope: !8660)
!8667 = !DILocation(line: 5876, column: 20, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5876, column: 6)
!8669 = !DILocation(line: 5876, column: 7, scope: !8668)
!8670 = !DILocation(line: 5876, column: 6, scope: !8173)
!8671 = !DILocation(line: 5877, column: 3, scope: !8668)
!8672 = !DILocation(line: 5877, column: 8, scope: !8668)
!8673 = !DILocation(line: 5877, column: 19, scope: !8668)
!8674 = !DILocation(line: 5879, column: 3, scope: !8668)
!8675 = !DILocation(line: 5879, column: 8, scope: !8668)
!8676 = !DILocation(line: 5879, column: 19, scope: !8668)
!8677 = !DILocation(line: 5881, column: 17, scope: !8173)
!8678 = !DILocation(line: 5881, column: 23, scope: !8173)
!8679 = !DILocation(line: 5881, column: 27, scope: !8173)
!8680 = !DILocation(line: 5881, column: 2, scope: !8173)
!8681 = !DILocation(line: 5882, column: 2, scope: !8173)
!8682 = !DILocation(line: 5882, column: 7, scope: !8173)
!8683 = !DILocation(line: 5882, column: 19, scope: !8173)
!8684 = !DILocation(line: 5883, column: 2, scope: !8173)
!8685 = !DILocation(line: 5883, column: 7, scope: !8173)
!8686 = !DILocation(line: 5883, column: 22, scope: !8173)
!8687 = !DILocation(line: 5885, column: 18, scope: !8173)
!8688 = !DILocation(line: 5885, column: 27, scope: !8173)
!8689 = !DILocation(line: 5885, column: 2, scope: !8173)
!8690 = !DILocation(line: 5888, column: 20, scope: !8173)
!8691 = !DILocation(line: 5888, column: 9, scope: !8173)
!8692 = !DILocation(line: 5888, column: 7, scope: !8173)
!8693 = !DILocation(line: 5889, column: 26, scope: !8173)
!8694 = !DILocation(line: 5889, column: 31, scope: !8173)
!8695 = !DILocation(line: 5889, column: 20, scope: !8173)
!8696 = !DILocation(line: 5889, column: 2, scope: !8173)
!8697 = !DILocation(line: 5889, column: 6, scope: !8173)
!8698 = !DILocation(line: 5889, column: 18, scope: !8173)
!8699 = !DILocation(line: 5890, column: 26, scope: !8173)
!8700 = !DILocation(line: 5890, column: 31, scope: !8173)
!8701 = !DILocation(line: 5890, column: 20, scope: !8173)
!8702 = !DILocation(line: 5890, column: 2, scope: !8173)
!8703 = !DILocation(line: 5890, column: 6, scope: !8173)
!8704 = !DILocation(line: 5890, column: 18, scope: !8173)
!8705 = !DILocation(line: 5893, column: 16, scope: !8173)
!8706 = !DILocation(line: 5893, column: 21, scope: !8173)
!8707 = !DILocation(line: 5893, column: 10, scope: !8173)
!8708 = !DILocation(line: 5893, column: 8, scope: !8173)
!8709 = !DILocation(line: 5894, column: 6, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5894, column: 6)
!8711 = !DILocation(line: 5894, column: 10, scope: !8710)
!8712 = !DILocation(line: 5894, column: 22, scope: !8710)
!8713 = !DILocation(line: 5894, column: 6, scope: !8173)
!8714 = !DILocation(line: 5896, column: 23, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 5894, column: 49)
!8716 = !DILocation(line: 5896, column: 27, scope: !8715)
!8717 = !DILocation(line: 5896, column: 39, scope: !8715)
!8718 = !DILocation(line: 5896, column: 46, scope: !8715)
!8719 = !DILocation(line: 5896, column: 22, scope: !8715)
!8720 = !DILocation(line: 5896, column: 3, scope: !8715)
!8721 = !DILocation(line: 5896, column: 8, scope: !8715)
!8722 = !DILocation(line: 5896, column: 20, scope: !8715)
!8723 = !DILocation(line: 5897, column: 23, scope: !8715)
!8724 = !DILocation(line: 5897, column: 27, scope: !8715)
!8725 = !DILocation(line: 5897, column: 39, scope: !8715)
!8726 = !DILocation(line: 5897, column: 46, scope: !8715)
!8727 = !DILocation(line: 5897, column: 22, scope: !8715)
!8728 = !DILocation(line: 5897, column: 3, scope: !8715)
!8729 = !DILocation(line: 5897, column: 8, scope: !8715)
!8730 = !DILocation(line: 5897, column: 20, scope: !8715)
!8731 = !DILocation(line: 5898, column: 23, scope: !8715)
!8732 = !DILocation(line: 5898, column: 27, scope: !8715)
!8733 = !DILocation(line: 5898, column: 39, scope: !8715)
!8734 = !DILocation(line: 5898, column: 46, scope: !8715)
!8735 = !DILocation(line: 5898, column: 22, scope: !8715)
!8736 = !DILocation(line: 5898, column: 3, scope: !8715)
!8737 = !DILocation(line: 5898, column: 8, scope: !8715)
!8738 = !DILocation(line: 5898, column: 20, scope: !8715)
!8739 = !DILocation(line: 5899, column: 23, scope: !8715)
!8740 = !DILocation(line: 5899, column: 27, scope: !8715)
!8741 = !DILocation(line: 5899, column: 39, scope: !8715)
!8742 = !DILocation(line: 5899, column: 46, scope: !8715)
!8743 = !DILocation(line: 5899, column: 22, scope: !8715)
!8744 = !DILocation(line: 5899, column: 3, scope: !8715)
!8745 = !DILocation(line: 5899, column: 8, scope: !8715)
!8746 = !DILocation(line: 5899, column: 20, scope: !8715)
!8747 = !DILocation(line: 5900, column: 23, scope: !8715)
!8748 = !DILocation(line: 5900, column: 27, scope: !8715)
!8749 = !DILocation(line: 5900, column: 39, scope: !8715)
!8750 = !DILocation(line: 5900, column: 46, scope: !8715)
!8751 = !DILocation(line: 5900, column: 22, scope: !8715)
!8752 = !DILocation(line: 5900, column: 3, scope: !8715)
!8753 = !DILocation(line: 5900, column: 8, scope: !8715)
!8754 = !DILocation(line: 5900, column: 20, scope: !8715)
!8755 = !DILocation(line: 5901, column: 23, scope: !8715)
!8756 = !DILocation(line: 5901, column: 27, scope: !8715)
!8757 = !DILocation(line: 5901, column: 39, scope: !8715)
!8758 = !DILocation(line: 5901, column: 46, scope: !8715)
!8759 = !DILocation(line: 5901, column: 22, scope: !8715)
!8760 = !DILocation(line: 5901, column: 3, scope: !8715)
!8761 = !DILocation(line: 5901, column: 8, scope: !8715)
!8762 = !DILocation(line: 5901, column: 20, scope: !8715)
!8763 = !DILocation(line: 5902, column: 2, scope: !8715)
!8764 = !DILocation(line: 5902, column: 13, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 5902, column: 13)
!8766 = !DILocation(line: 5902, column: 19, scope: !8765)
!8767 = !DILocation(line: 5902, column: 13, scope: !8710)
!8768 = !DILocation(line: 5904, column: 23, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 5902, column: 54)
!8770 = !DILocation(line: 5904, column: 27, scope: !8769)
!8771 = !DILocation(line: 5904, column: 39, scope: !8769)
!8772 = !DILocation(line: 5904, column: 46, scope: !8769)
!8773 = !DILocation(line: 5904, column: 22, scope: !8769)
!8774 = !DILocation(line: 5904, column: 3, scope: !8769)
!8775 = !DILocation(line: 5904, column: 8, scope: !8769)
!8776 = !DILocation(line: 5904, column: 20, scope: !8769)
!8777 = !DILocation(line: 5905, column: 23, scope: !8769)
!8778 = !DILocation(line: 5905, column: 27, scope: !8769)
!8779 = !DILocation(line: 5905, column: 39, scope: !8769)
!8780 = !DILocation(line: 5905, column: 46, scope: !8769)
!8781 = !DILocation(line: 5905, column: 22, scope: !8769)
!8782 = !DILocation(line: 5905, column: 3, scope: !8769)
!8783 = !DILocation(line: 5905, column: 8, scope: !8769)
!8784 = !DILocation(line: 5905, column: 20, scope: !8769)
!8785 = !DILocation(line: 5906, column: 23, scope: !8769)
!8786 = !DILocation(line: 5906, column: 27, scope: !8769)
!8787 = !DILocation(line: 5906, column: 39, scope: !8769)
!8788 = !DILocation(line: 5906, column: 46, scope: !8769)
!8789 = !DILocation(line: 5906, column: 22, scope: !8769)
!8790 = !DILocation(line: 5906, column: 3, scope: !8769)
!8791 = !DILocation(line: 5906, column: 8, scope: !8769)
!8792 = !DILocation(line: 5906, column: 20, scope: !8769)
!8793 = !DILocation(line: 5907, column: 23, scope: !8769)
!8794 = !DILocation(line: 5907, column: 27, scope: !8769)
!8795 = !DILocation(line: 5907, column: 39, scope: !8769)
!8796 = !DILocation(line: 5907, column: 46, scope: !8769)
!8797 = !DILocation(line: 5907, column: 22, scope: !8769)
!8798 = !DILocation(line: 5907, column: 3, scope: !8769)
!8799 = !DILocation(line: 5907, column: 8, scope: !8769)
!8800 = !DILocation(line: 5907, column: 20, scope: !8769)
!8801 = !DILocation(line: 5908, column: 23, scope: !8769)
!8802 = !DILocation(line: 5908, column: 27, scope: !8769)
!8803 = !DILocation(line: 5908, column: 39, scope: !8769)
!8804 = !DILocation(line: 5908, column: 46, scope: !8769)
!8805 = !DILocation(line: 5908, column: 22, scope: !8769)
!8806 = !DILocation(line: 5908, column: 3, scope: !8769)
!8807 = !DILocation(line: 5908, column: 8, scope: !8769)
!8808 = !DILocation(line: 5908, column: 20, scope: !8769)
!8809 = !DILocation(line: 5909, column: 23, scope: !8769)
!8810 = !DILocation(line: 5909, column: 27, scope: !8769)
!8811 = !DILocation(line: 5909, column: 39, scope: !8769)
!8812 = !DILocation(line: 5909, column: 46, scope: !8769)
!8813 = !DILocation(line: 5909, column: 22, scope: !8769)
!8814 = !DILocation(line: 5909, column: 3, scope: !8769)
!8815 = !DILocation(line: 5909, column: 8, scope: !8769)
!8816 = !DILocation(line: 5909, column: 20, scope: !8769)
!8817 = !DILocation(line: 5915, column: 22, scope: !8769)
!8818 = !DILocation(line: 5915, column: 27, scope: !8769)
!8819 = !DILocation(line: 5915, column: 39, scope: !8769)
!8820 = !DILocation(line: 5915, column: 48, scope: !8769)
!8821 = !DILocation(line: 5915, column: 53, scope: !8769)
!8822 = !DILocation(line: 5915, column: 65, scope: !8769)
!8823 = !DILocation(line: 5915, column: 45, scope: !8769)
!8824 = !DILocation(line: 5916, column: 5, scope: !8769)
!8825 = !DILocation(line: 5916, column: 10, scope: !8769)
!8826 = !DILocation(line: 5916, column: 22, scope: !8769)
!8827 = !DILocation(line: 5915, column: 71, scope: !8769)
!8828 = !DILocation(line: 5916, column: 32, scope: !8769)
!8829 = !DILocation(line: 5916, column: 37, scope: !8769)
!8830 = !DILocation(line: 5916, column: 49, scope: !8769)
!8831 = !DILocation(line: 5916, column: 29, scope: !8769)
!8832 = !DILocation(line: 5915, column: 3, scope: !8769)
!8833 = !DILocation(line: 5915, column: 7, scope: !8769)
!8834 = !DILocation(line: 5915, column: 19, scope: !8769)
!8835 = !DILocation(line: 5917, column: 22, scope: !8769)
!8836 = !DILocation(line: 5917, column: 27, scope: !8769)
!8837 = !DILocation(line: 5917, column: 39, scope: !8769)
!8838 = !DILocation(line: 5917, column: 48, scope: !8769)
!8839 = !DILocation(line: 5917, column: 53, scope: !8769)
!8840 = !DILocation(line: 5917, column: 65, scope: !8769)
!8841 = !DILocation(line: 5917, column: 45, scope: !8769)
!8842 = !DILocation(line: 5917, column: 3, scope: !8769)
!8843 = !DILocation(line: 5917, column: 7, scope: !8769)
!8844 = !DILocation(line: 5917, column: 19, scope: !8769)
!8845 = !DILocation(line: 5918, column: 2, scope: !8769)
!8846 = !DILocation(line: 5920, column: 23, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 5918, column: 9)
!8848 = !DILocation(line: 5920, column: 27, scope: !8847)
!8849 = !DILocation(line: 5920, column: 39, scope: !8847)
!8850 = !DILocation(line: 5920, column: 46, scope: !8847)
!8851 = !DILocation(line: 5920, column: 22, scope: !8847)
!8852 = !DILocation(line: 5920, column: 3, scope: !8847)
!8853 = !DILocation(line: 5920, column: 8, scope: !8847)
!8854 = !DILocation(line: 5920, column: 20, scope: !8847)
!8855 = !DILocation(line: 5921, column: 23, scope: !8847)
!8856 = !DILocation(line: 5921, column: 27, scope: !8847)
!8857 = !DILocation(line: 5921, column: 39, scope: !8847)
!8858 = !DILocation(line: 5921, column: 46, scope: !8847)
!8859 = !DILocation(line: 5921, column: 22, scope: !8847)
!8860 = !DILocation(line: 5921, column: 3, scope: !8847)
!8861 = !DILocation(line: 5921, column: 8, scope: !8847)
!8862 = !DILocation(line: 5921, column: 20, scope: !8847)
!8863 = !DILocation(line: 5922, column: 23, scope: !8847)
!8864 = !DILocation(line: 5922, column: 27, scope: !8847)
!8865 = !DILocation(line: 5922, column: 39, scope: !8847)
!8866 = !DILocation(line: 5922, column: 46, scope: !8847)
!8867 = !DILocation(line: 5922, column: 22, scope: !8847)
!8868 = !DILocation(line: 5922, column: 3, scope: !8847)
!8869 = !DILocation(line: 5922, column: 8, scope: !8847)
!8870 = !DILocation(line: 5922, column: 20, scope: !8847)
!8871 = !DILocation(line: 5923, column: 23, scope: !8847)
!8872 = !DILocation(line: 5923, column: 27, scope: !8847)
!8873 = !DILocation(line: 5923, column: 39, scope: !8847)
!8874 = !DILocation(line: 5923, column: 46, scope: !8847)
!8875 = !DILocation(line: 5923, column: 22, scope: !8847)
!8876 = !DILocation(line: 5923, column: 3, scope: !8847)
!8877 = !DILocation(line: 5923, column: 8, scope: !8847)
!8878 = !DILocation(line: 5923, column: 20, scope: !8847)
!8879 = !DILocation(line: 5924, column: 23, scope: !8847)
!8880 = !DILocation(line: 5924, column: 27, scope: !8847)
!8881 = !DILocation(line: 5924, column: 39, scope: !8847)
!8882 = !DILocation(line: 5924, column: 46, scope: !8847)
!8883 = !DILocation(line: 5924, column: 22, scope: !8847)
!8884 = !DILocation(line: 5924, column: 3, scope: !8847)
!8885 = !DILocation(line: 5924, column: 8, scope: !8847)
!8886 = !DILocation(line: 5924, column: 20, scope: !8847)
!8887 = !DILocation(line: 5925, column: 23, scope: !8847)
!8888 = !DILocation(line: 5925, column: 27, scope: !8847)
!8889 = !DILocation(line: 5925, column: 39, scope: !8847)
!8890 = !DILocation(line: 5925, column: 46, scope: !8847)
!8891 = !DILocation(line: 5925, column: 22, scope: !8847)
!8892 = !DILocation(line: 5925, column: 3, scope: !8847)
!8893 = !DILocation(line: 5925, column: 8, scope: !8847)
!8894 = !DILocation(line: 5925, column: 20, scope: !8847)
!8895 = !DILocation(line: 5926, column: 10, scope: !8847)
!8896 = !DILocation(line: 5926, column: 15, scope: !8847)
!8897 = !DILocation(line: 5926, column: 49, scope: !8847)
!8898 = !DILocation(line: 5926, column: 54, scope: !8847)
!8899 = !DILocation(line: 5926, column: 3, scope: !8847)
!8900 = !DILocation(line: 5932, column: 27, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5932, column: 6)
!8902 = !DILocation(line: 5932, column: 32, scope: !8901)
!8903 = !DILocation(line: 5932, column: 7, scope: !8901)
!8904 = !DILocation(line: 5932, column: 6, scope: !8173)
!8905 = !DILocation(line: 5937, column: 3, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 5932, column: 43)
!8907 = !DILocation(line: 5940, column: 22, scope: !8906)
!8908 = !DILocation(line: 5940, column: 3, scope: !8906)
!8909 = !DILocation(line: 5941, column: 3, scope: !8906)
!8910 = !DILocation(line: 5943, column: 2, scope: !8906)
!8911 = !DILocation(line: 5946, column: 20, scope: !8173)
!8912 = !DILocation(line: 5946, column: 2, scope: !8173)
!8913 = !DILocation(line: 5949, column: 12, scope: !8173)
!8914 = !DILocation(line: 5949, column: 17, scope: !8173)
!8915 = !DILocation(line: 5949, column: 2, scope: !8173)
!8916 = !DILocation(line: 5950, column: 2, scope: !8173)
!8917 = !DILocation(line: 5950, column: 6, scope: !8173)
!8918 = !DILocation(line: 5950, column: 17, scope: !8173)
!8919 = !DILocation(line: 5951, column: 28, scope: !8173)
!8920 = !DILocation(line: 5951, column: 37, scope: !8173)
!8921 = !DILocation(line: 5951, column: 2, scope: !8173)
!8922 = !DILocation(line: 5953, column: 6, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5953, column: 6)
!8924 = !DILocation(line: 5953, column: 10, scope: !8923)
!8925 = !DILocation(line: 5953, column: 22, scope: !8923)
!8926 = !DILocation(line: 5953, column: 6, scope: !8173)
!8927 = !DILocation(line: 5956, column: 22, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 5953, column: 45)
!8929 = !DILocation(line: 5956, column: 27, scope: !8928)
!8930 = !DILocation(line: 5956, column: 16, scope: !8928)
!8931 = !DILocation(line: 5956, column: 14, scope: !8928)
!8932 = !DILocation(line: 5957, column: 14, scope: !8928)
!8933 = !DILocation(line: 5958, column: 8, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 5958, column: 7)
!8935 = !DILocation(line: 5958, column: 12, scope: !8934)
!8936 = !DILocation(line: 5958, column: 24, scope: !8934)
!8937 = !DILocation(line: 5958, column: 50, scope: !8934)
!8938 = !DILocation(line: 5959, column: 7, scope: !8934)
!8939 = !DILocation(line: 5959, column: 16, scope: !8934)
!8940 = !DILocation(line: 5959, column: 25, scope: !8934)
!8941 = !DILocation(line: 5958, column: 7, scope: !8928)
!8942 = !DILocation(line: 5960, column: 15, scope: !8934)
!8943 = !DILocation(line: 5960, column: 4, scope: !8934)
!8944 = !DILocation(line: 5961, column: 10, scope: !8928)
!8945 = !DILocation(line: 5961, column: 22, scope: !8928)
!8946 = !DILocation(line: 5961, column: 27, scope: !8928)
!8947 = !DILocation(line: 5961, column: 3, scope: !8928)
!8948 = !DILocation(line: 5962, column: 2, scope: !8928)
!8949 = !DILocation(line: 5964, column: 6, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5964, column: 6)
!8951 = !DILocation(line: 5964, column: 10, scope: !8950)
!8952 = !DILocation(line: 5964, column: 19, scope: !8950)
!8953 = !DILocation(line: 5964, column: 6, scope: !8173)
!8954 = !DILocation(line: 5965, column: 3, scope: !8950)
!8955 = !DILocation(line: 5965, column: 7, scope: !8950)
!8956 = !DILocation(line: 5965, column: 16, scope: !8950)
!8957 = !DILocation(line: 5967, column: 3, scope: !8950)
!8958 = !DILocation(line: 5967, column: 7, scope: !8950)
!8959 = !DILocation(line: 5967, column: 16, scope: !8950)
!8960 = !DILocation(line: 5969, column: 2, scope: !8173)
!8961 = !DILocation(line: 5969, column: 6, scope: !8173)
!8962 = !DILocation(line: 5969, column: 16, scope: !8173)
!8963 = !DILocation(line: 5970, column: 7, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5970, column: 6)
!8965 = !DILocation(line: 5970, column: 11, scope: !8964)
!8966 = !DILocation(line: 5970, column: 23, scope: !8964)
!8967 = !DILocation(line: 5970, column: 38, scope: !8964)
!8968 = !DILocation(line: 5970, column: 41, scope: !8964)
!8969 = !DILocation(line: 5970, column: 6, scope: !8173)
!8970 = !DILocation(line: 5971, column: 3, scope: !8964)
!8971 = !DILocation(line: 5971, column: 7, scope: !8964)
!8972 = !DILocation(line: 5971, column: 17, scope: !8964)
!8973 = !DILocation(line: 5973, column: 7, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5973, column: 6)
!8975 = !DILocation(line: 5973, column: 11, scope: !8974)
!8976 = !DILocation(line: 5973, column: 23, scope: !8974)
!8977 = !DILocation(line: 5973, column: 40, scope: !8974)
!8978 = !DILocation(line: 5973, column: 43, scope: !8974)
!8979 = !DILocation(line: 5973, column: 6, scope: !8173)
!8980 = !DILocation(line: 5980, column: 2, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 5973, column: 49)
!8982 = !DILocation(line: 5982, column: 6, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5982, column: 6)
!8984 = !DILocation(line: 5982, column: 24, scope: !8983)
!8985 = !DILocation(line: 5982, column: 6, scope: !8173)
!8986 = !DILocation(line: 5983, column: 3, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 5982, column: 53)
!8988 = !DILocation(line: 5983, column: 7, scope: !8987)
!8989 = !DILocation(line: 5983, column: 15, scope: !8987)
!8990 = !DILocation(line: 5984, column: 7, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 5984, column: 7)
!8992 = !DILocation(line: 5984, column: 11, scope: !8991)
!8993 = !DILocation(line: 5984, column: 21, scope: !8991)
!8994 = !DILocation(line: 5984, column: 7, scope: !8987)
!8995 = !DILocation(line: 5985, column: 4, scope: !8991)
!8996 = !DILocation(line: 5985, column: 8, scope: !8991)
!8997 = !DILocation(line: 5985, column: 18, scope: !8991)
!8998 = !DILocation(line: 5986, column: 2, scope: !8987)
!8999 = !DILocation(line: 5986, column: 13, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 5986, column: 13)
!9001 = !DILocation(line: 5986, column: 31, scope: !9000)
!9002 = !DILocation(line: 5986, column: 63, scope: !9000)
!9003 = !DILocation(line: 5987, column: 8, scope: !9000)
!9004 = !DILocation(line: 5987, column: 12, scope: !9000)
!9005 = !DILocation(line: 5987, column: 24, scope: !9000)
!9006 = !DILocation(line: 5986, column: 13, scope: !8983)
!9007 = !DILocation(line: 5989, column: 3, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 5987, column: 46)
!9009 = !DILocation(line: 5989, column: 7, scope: !9008)
!9010 = !DILocation(line: 5989, column: 15, scope: !9008)
!9011 = !DILocation(line: 5991, column: 3, scope: !9008)
!9012 = !DILocation(line: 5991, column: 7, scope: !9008)
!9013 = !DILocation(line: 5991, column: 17, scope: !9008)
!9014 = !DILocation(line: 5992, column: 2, scope: !9008)
!9015 = !DILocation(line: 5993, column: 21, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 5992, column: 9)
!9017 = !DILocation(line: 5994, column: 3, scope: !9016)
!9018 = !DILocation(line: 5994, column: 7, scope: !9016)
!9019 = !DILocation(line: 5994, column: 15, scope: !9016)
!9020 = !DILocation(line: 5995, column: 7, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 5995, column: 7)
!9022 = !DILocation(line: 5995, column: 11, scope: !9021)
!9023 = !DILocation(line: 5995, column: 21, scope: !9021)
!9024 = !DILocation(line: 5995, column: 7, scope: !9016)
!9025 = !DILocation(line: 5996, column: 4, scope: !9021)
!9026 = !DILocation(line: 5996, column: 8, scope: !9021)
!9027 = !DILocation(line: 5996, column: 18, scope: !9021)
!9028 = !DILocation(line: 5999, column: 6, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 5999, column: 6)
!9030 = !DILocation(line: 5999, column: 10, scope: !9029)
!9031 = !DILocation(line: 5999, column: 22, scope: !9029)
!9032 = !DILocation(line: 5999, column: 6, scope: !8173)
!9033 = !DILocation(line: 6000, column: 3, scope: !9029)
!9034 = !DILocation(line: 6000, column: 7, scope: !9029)
!9035 = !DILocation(line: 6000, column: 15, scope: !9029)
!9036 = !DILocation(line: 6001, column: 6, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6001, column: 6)
!9038 = !DILocation(line: 6001, column: 10, scope: !9037)
!9039 = !DILocation(line: 6001, column: 22, scope: !9037)
!9040 = !DILocation(line: 6001, column: 6, scope: !8173)
!9041 = !DILocation(line: 6002, column: 3, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 6001, column: 44)
!9043 = !DILocation(line: 6002, column: 7, scope: !9042)
!9044 = !DILocation(line: 6002, column: 22, scope: !9042)
!9045 = !DILocation(line: 6003, column: 22, scope: !9042)
!9046 = !DILocation(line: 6003, column: 30, scope: !9042)
!9047 = !DILocation(line: 6003, column: 3, scope: !9042)
!9048 = !DILocation(line: 6003, column: 7, scope: !9042)
!9049 = !DILocation(line: 6003, column: 20, scope: !9042)
!9050 = !DILocation(line: 6004, column: 2, scope: !9042)
!9051 = !DILocation(line: 6005, column: 3, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 6004, column: 9)
!9053 = !DILocation(line: 6005, column: 7, scope: !9052)
!9054 = !DILocation(line: 6005, column: 22, scope: !9052)
!9055 = !DILocation(line: 6009, column: 6, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6009, column: 6)
!9057 = !DILocation(line: 6009, column: 10, scope: !9056)
!9058 = !DILocation(line: 6009, column: 22, scope: !9056)
!9059 = !DILocation(line: 6009, column: 6, scope: !8173)
!9060 = !DILocation(line: 6010, column: 3, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 6009, column: 43)
!9062 = !DILocation(line: 6010, column: 7, scope: !9061)
!9063 = !DILocation(line: 6010, column: 16, scope: !9061)
!9064 = !DILocation(line: 6011, column: 9, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 6011, column: 7)
!9066 = !DILocation(line: 6011, column: 13, scope: !9065)
!9067 = !DILocation(line: 6011, column: 25, scope: !9065)
!9068 = !DILocation(line: 6011, column: 47, scope: !9065)
!9069 = !DILocation(line: 6011, column: 70, scope: !9065)
!9070 = !DILocation(line: 6012, column: 7, scope: !9065)
!9071 = !DILocation(line: 6012, column: 16, scope: !9065)
!9072 = !DILocation(line: 6012, column: 25, scope: !9065)
!9073 = !DILocation(line: 6011, column: 7, scope: !9061)
!9074 = !DILocation(line: 6013, column: 4, scope: !9065)
!9075 = !DILocation(line: 6013, column: 8, scope: !9065)
!9076 = !DILocation(line: 6013, column: 17, scope: !9065)
!9077 = !DILocation(line: 6014, column: 2, scope: !9061)
!9078 = !DILocation(line: 6017, column: 12, scope: !8173)
!9079 = !DILocation(line: 6017, column: 17, scope: !8173)
!9080 = !DILocation(line: 6017, column: 2, scope: !8173)
!9081 = !DILocation(line: 6018, column: 19, scope: !8173)
!9082 = !DILocation(line: 6018, column: 24, scope: !8173)
!9083 = !DILocation(line: 6018, column: 13, scope: !8173)
!9084 = !DILocation(line: 6018, column: 11, scope: !8173)
!9085 = !DILocation(line: 6019, column: 6, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6019, column: 6)
!9087 = !DILocation(line: 6019, column: 15, scope: !9086)
!9088 = !DILocation(line: 6019, column: 6, scope: !8173)
!9089 = !DILocation(line: 6020, column: 17, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 6019, column: 41)
!9091 = !DILocation(line: 6021, column: 12, scope: !9090)
!9092 = !DILocation(line: 6022, column: 10, scope: !9090)
!9093 = !DILocation(line: 6022, column: 20, scope: !9090)
!9094 = !DILocation(line: 6022, column: 25, scope: !9090)
!9095 = !DILocation(line: 6022, column: 3, scope: !9090)
!9096 = !DILocation(line: 6023, column: 2, scope: !9090)
!9097 = !DILocation(line: 6024, column: 33, scope: !8173)
!9098 = !DILocation(line: 6024, column: 38, scope: !8173)
!9099 = !DILocation(line: 6024, column: 2, scope: !8173)
!9100 = !DILocation(line: 6026, column: 6, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6026, column: 6)
!9102 = !DILocation(line: 6026, column: 10, scope: !9101)
!9103 = !DILocation(line: 6026, column: 22, scope: !9101)
!9104 = !DILocation(line: 6026, column: 6, scope: !8173)
!9105 = !DILocation(line: 6028, column: 14, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 6028, column: 7)
!9107 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 6026, column: 43)
!9108 = !DILocation(line: 6028, column: 19, scope: !9106)
!9109 = !DILocation(line: 6028, column: 8, scope: !9106)
!9110 = !DILocation(line: 6028, column: 46, scope: !9106)
!9111 = !DILocation(line: 6028, column: 71, scope: !9106)
!9112 = !DILocation(line: 6029, column: 14, scope: !9106)
!9113 = !DILocation(line: 6029, column: 19, scope: !9106)
!9114 = !DILocation(line: 6029, column: 8, scope: !9106)
!9115 = !DILocation(line: 6029, column: 46, scope: !9106)
!9116 = !DILocation(line: 6029, column: 77, scope: !9106)
!9117 = !DILocation(line: 6030, column: 28, scope: !9106)
!9118 = !DILocation(line: 6030, column: 7, scope: !9106)
!9119 = !DILocation(line: 6030, column: 33, scope: !9106)
!9120 = !DILocation(line: 6031, column: 27, scope: !9106)
!9121 = !DILocation(line: 6031, column: 7, scope: !9106)
!9122 = !DILocation(line: 6028, column: 7, scope: !9107)
!9123 = !DILocation(line: 6032, column: 4, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 6031, column: 33)
!9125 = !DILocation(line: 6032, column: 8, scope: !9124)
!9126 = !DILocation(line: 6032, column: 19, scope: !9124)
!9127 = !DILocation(line: 6033, column: 8, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 6033, column: 8)
!9129 = !DILocation(line: 6033, column: 12, scope: !9128)
!9130 = !DILocation(line: 6033, column: 25, scope: !9128)
!9131 = !DILocation(line: 6033, column: 8, scope: !9124)
!9132 = !DILocation(line: 6034, column: 28, scope: !9128)
!9133 = !DILocation(line: 6034, column: 33, scope: !9128)
!9134 = !DILocation(line: 6034, column: 22, scope: !9128)
!9135 = !DILocation(line: 6034, column: 57, scope: !9128)
!9136 = !DILocation(line: 6034, column: 5, scope: !9128)
!9137 = !DILocation(line: 6034, column: 9, scope: !9128)
!9138 = !DILocation(line: 6034, column: 20, scope: !9128)
!9139 = !DILocation(line: 6036, column: 8, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 6036, column: 8)
!9141 = !DILocation(line: 6036, column: 12, scope: !9140)
!9142 = !DILocation(line: 6036, column: 23, scope: !9140)
!9143 = !DILocation(line: 6037, column: 16, scope: !9140)
!9144 = !DILocation(line: 6037, column: 21, scope: !9140)
!9145 = !DILocation(line: 6037, column: 10, scope: !9140)
!9146 = !DILocation(line: 6037, column: 48, scope: !9140)
!9147 = !DILocation(line: 6037, column: 75, scope: !9140)
!9148 = !DILocation(line: 6036, column: 8, scope: !9124)
!9149 = !DILocation(line: 6040, column: 20, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 6038, column: 39)
!9151 = !DILocation(line: 6041, column: 4, scope: !9150)
!9152 = !DILocation(line: 6044, column: 3, scope: !9124)
!9153 = !DILocation(line: 6045, column: 2, scope: !9107)
!9154 = !DILocation(line: 6048, column: 9, scope: !8250)
!9155 = !DILocation(line: 6048, column: 7, scope: !8250)
!9156 = !DILocation(line: 6048, column: 14, scope: !8249)
!9157 = !DILocation(line: 6048, column: 16, scope: !8249)
!9158 = !DILocation(line: 6048, column: 2, scope: !8250)
!9159 = !DILocalVariable(name: "id1", scope: !8248, file: !3, line: 6049, type: !32)
!9160 = !DILocation(line: 6049, column: 7, scope: !8248)
!9161 = !DILocalVariable(name: "id2", scope: !8248, file: !3, line: 6049, type: !32)
!9162 = !DILocation(line: 6049, column: 12, scope: !8248)
!9163 = !DILocalVariable(name: "phyaddr", scope: !8248, file: !3, line: 6050, type: !32)
!9164 = !DILocation(line: 6050, column: 7, scope: !8248)
!9165 = !DILocation(line: 6050, column: 17, scope: !8248)
!9166 = !DILocation(line: 6050, column: 19, scope: !8248)
!9167 = !DILocation(line: 6052, column: 18, scope: !8248)
!9168 = !DILocation(line: 6052, column: 22, scope: !8248)
!9169 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !8258)
!9170 = distinct !DILexicalBlock(scope: !9171, file: !8243, line: 379, column: 2)
!9171 = distinct !DILexicalBlock(scope: !8252, file: !8243, line: 379, column: 2)
!9172 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !8258)
!9173 = distinct !DILexicalBlock(scope: !9171, file: !8243, line: 379, column: 2)
!9174 = !{i32 -2145284409}
!9175 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !8258)
!9176 = distinct !DILexicalBlock(scope: !9173, file: !8243, line: 379, column: 2)
!9177 = !DILocation(line: 6053, column: 16, scope: !8248)
!9178 = !DILocation(line: 6053, column: 21, scope: !8248)
!9179 = !DILocation(line: 6053, column: 9, scope: !8248)
!9180 = !DILocation(line: 6053, column: 7, scope: !8248)
!9181 = !DILocation(line: 6054, column: 20, scope: !8248)
!9182 = !DILocation(line: 6054, column: 24, scope: !8248)
!9183 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !8256)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !8243, line: 404, column: 2)
!9185 = distinct !DILexicalBlock(scope: !8242, file: !8243, line: 404, column: 2)
!9186 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !8256)
!9187 = distinct !DILexicalBlock(scope: !9185, file: !8243, line: 404, column: 2)
!9188 = !{i32 -2145282661}
!9189 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !8256)
!9190 = distinct !DILexicalBlock(scope: !9187, file: !8243, line: 404, column: 2)
!9191 = !DILocation(line: 6055, column: 7, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 6055, column: 7)
!9193 = !DILocation(line: 6055, column: 11, scope: !9192)
!9194 = !DILocation(line: 6055, column: 15, scope: !9192)
!9195 = !DILocation(line: 6055, column: 18, scope: !9192)
!9196 = !DILocation(line: 6055, column: 22, scope: !9192)
!9197 = !DILocation(line: 6055, column: 7, scope: !8248)
!9198 = !DILocation(line: 6056, column: 4, scope: !9192)
!9199 = !DILocation(line: 6057, column: 18, scope: !8248)
!9200 = !DILocation(line: 6057, column: 22, scope: !8248)
!9201 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !8254)
!9202 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !8254)
!9203 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !8254)
!9204 = !DILocation(line: 6058, column: 16, scope: !8248)
!9205 = !DILocation(line: 6058, column: 21, scope: !8248)
!9206 = !DILocation(line: 6058, column: 9, scope: !8248)
!9207 = !DILocation(line: 6058, column: 7, scope: !8248)
!9208 = !DILocation(line: 6059, column: 20, scope: !8248)
!9209 = !DILocation(line: 6059, column: 24, scope: !8248)
!9210 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !8247)
!9211 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !8247)
!9212 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !8247)
!9213 = !DILocation(line: 6060, column: 7, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 6060, column: 7)
!9215 = !DILocation(line: 6060, column: 11, scope: !9214)
!9216 = !DILocation(line: 6060, column: 15, scope: !9214)
!9217 = !DILocation(line: 6060, column: 18, scope: !9214)
!9218 = !DILocation(line: 6060, column: 22, scope: !9214)
!9219 = !DILocation(line: 6060, column: 7, scope: !8248)
!9220 = !DILocation(line: 6061, column: 4, scope: !9214)
!9221 = !DILocation(line: 6063, column: 19, scope: !8248)
!9222 = !DILocation(line: 6063, column: 23, scope: !8248)
!9223 = !DILocation(line: 6063, column: 3, scope: !8248)
!9224 = !DILocation(line: 6063, column: 7, scope: !8248)
!9225 = !DILocation(line: 6063, column: 17, scope: !8248)
!9226 = !DILocation(line: 6064, column: 10, scope: !8248)
!9227 = !DILocation(line: 6064, column: 14, scope: !8248)
!9228 = !DILocation(line: 6064, column: 33, scope: !8248)
!9229 = !DILocation(line: 6064, column: 7, scope: !8248)
!9230 = !DILocation(line: 6065, column: 10, scope: !8248)
!9231 = !DILocation(line: 6065, column: 14, scope: !8248)
!9232 = !DILocation(line: 6065, column: 33, scope: !8248)
!9233 = !DILocation(line: 6065, column: 7, scope: !8248)
!9234 = !DILocation(line: 6066, column: 17, scope: !8248)
!9235 = !DILocation(line: 6066, column: 3, scope: !8248)
!9236 = !DILocation(line: 6066, column: 7, scope: !8248)
!9237 = !DILocation(line: 6066, column: 15, scope: !8248)
!9238 = !DILocation(line: 6067, column: 17, scope: !8248)
!9239 = !DILocation(line: 6067, column: 23, scope: !8248)
!9240 = !DILocation(line: 6067, column: 21, scope: !8248)
!9241 = !DILocation(line: 6067, column: 3, scope: !8248)
!9242 = !DILocation(line: 6067, column: 7, scope: !8248)
!9243 = !DILocation(line: 6067, column: 15, scope: !8248)
!9244 = !DILocation(line: 6070, column: 7, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 6070, column: 7)
!9246 = !DILocation(line: 6070, column: 11, scope: !9245)
!9247 = !DILocation(line: 6070, column: 19, scope: !9245)
!9248 = !DILocation(line: 6070, column: 7, scope: !8248)
!9249 = !DILocation(line: 6071, column: 4, scope: !9245)
!9250 = !DILocation(line: 6071, column: 8, scope: !9245)
!9251 = !DILocation(line: 6071, column: 16, scope: !9245)
!9252 = !DILocation(line: 6073, column: 7, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 6073, column: 7)
!9254 = !DILocation(line: 6073, column: 11, scope: !9253)
!9255 = !DILocation(line: 6073, column: 19, scope: !9253)
!9256 = !DILocation(line: 6073, column: 38, scope: !9253)
!9257 = !DILocation(line: 6073, column: 41, scope: !9253)
!9258 = !DILocation(line: 6073, column: 45, scope: !9253)
!9259 = !DILocation(line: 6073, column: 55, scope: !9253)
!9260 = !DILocation(line: 6073, column: 7, scope: !8248)
!9261 = !DILocation(line: 6074, column: 25, scope: !9253)
!9262 = !DILocation(line: 6074, column: 30, scope: !9253)
!9263 = !DILocation(line: 6074, column: 18, scope: !9253)
!9264 = !DILocation(line: 6074, column: 60, scope: !9253)
!9265 = !DILocation(line: 6074, column: 4, scope: !9253)
!9266 = !DILocation(line: 6074, column: 8, scope: !9253)
!9267 = !DILocation(line: 6074, column: 16, scope: !9253)
!9268 = !DILocation(line: 6076, column: 3, scope: !8248)
!9269 = !DILocation(line: 6048, column: 24, scope: !8249)
!9270 = !DILocation(line: 6048, column: 2, scope: !8249)
!9271 = distinct !{!9271, !9158, !9272}
!9272 = !DILocation(line: 6077, column: 2, scope: !8250)
!9273 = !DILocation(line: 6078, column: 6, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6078, column: 6)
!9275 = !DILocation(line: 6078, column: 8, scope: !9274)
!9276 = !DILocation(line: 6078, column: 6, scope: !8173)
!9277 = !DILocation(line: 6079, column: 3, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9274, file: !3, line: 6078, column: 15)
!9279 = !DILocation(line: 6080, column: 3, scope: !9278)
!9280 = !DILocation(line: 6083, column: 7, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6083, column: 6)
!9282 = !DILocation(line: 6083, column: 6, scope: !8173)
!9283 = !DILocation(line: 6085, column: 12, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 6083, column: 23)
!9285 = !DILocation(line: 6085, column: 3, scope: !9284)
!9286 = !DILocation(line: 6086, column: 2, scope: !9284)
!9287 = !DILocalVariable(name: "mii_status", scope: !9288, file: !3, line: 6088, type: !987)
!9288 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 6086, column: 9)
!9289 = !DILocation(line: 6088, column: 7, scope: !9288)
!9290 = !DILocation(line: 6088, column: 27, scope: !9288)
!9291 = !DILocation(line: 6088, column: 32, scope: !9288)
!9292 = !DILocation(line: 6088, column: 36, scope: !9288)
!9293 = !DILocation(line: 6088, column: 20, scope: !9288)
!9294 = !DILocation(line: 6089, column: 7, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 6089, column: 7)
!9296 = !DILocation(line: 6089, column: 18, scope: !9295)
!9297 = !DILocation(line: 6089, column: 7, scope: !9288)
!9298 = !DILocation(line: 6090, column: 4, scope: !9295)
!9299 = !DILocation(line: 6090, column: 8, scope: !9295)
!9300 = !DILocation(line: 6090, column: 16, scope: !9295)
!9301 = !DILocation(line: 6094, column: 2, scope: !8173)
!9302 = !DILocation(line: 6094, column: 6, scope: !8173)
!9303 = !DILocation(line: 6094, column: 16, scope: !8173)
!9304 = !DILocation(line: 6095, column: 2, scope: !8173)
!9305 = !DILocation(line: 6095, column: 6, scope: !8173)
!9306 = !DILocation(line: 6095, column: 13, scope: !8173)
!9307 = !DILocation(line: 6096, column: 2, scope: !8173)
!9308 = !DILocation(line: 6096, column: 6, scope: !8173)
!9309 = !DILocation(line: 6096, column: 14, scope: !8173)
!9310 = !DILocation(line: 6098, column: 24, scope: !8173)
!9311 = !DILocation(line: 6098, column: 8, scope: !8173)
!9312 = !DILocation(line: 6098, column: 6, scope: !8173)
!9313 = !DILocation(line: 6099, column: 6, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6099, column: 6)
!9315 = !DILocation(line: 6099, column: 6, scope: !8173)
!9316 = !DILocation(line: 6100, column: 3, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9314, file: !3, line: 6099, column: 11)
!9318 = !DILocation(line: 6101, column: 3, scope: !9317)
!9319 = !DILocation(line: 6104, column: 20, scope: !8173)
!9320 = !DILocation(line: 6104, column: 2, scope: !8173)
!9321 = !DILocation(line: 6110, column: 18, scope: !8173)
!9322 = !DILocation(line: 6110, column: 2, scope: !8173)
!9323 = !DILocation(line: 6111, column: 14, scope: !8173)
!9324 = !DILocation(line: 6111, column: 2, scope: !8173)
!9325 = !DILocation(line: 6112, column: 13, scope: !8173)
!9326 = !DILocation(line: 6112, column: 2, scope: !8173)
!9327 = !DILocation(line: 6114, column: 6, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6114, column: 6)
!9329 = !DILocation(line: 6114, column: 10, scope: !9328)
!9330 = !DILocation(line: 6114, column: 22, scope: !9328)
!9331 = !DILocation(line: 6114, column: 6, scope: !8173)
!9332 = !DILocation(line: 6115, column: 16, scope: !9328)
!9333 = !DILocation(line: 6115, column: 21, scope: !9328)
!9334 = !DILocation(line: 6115, column: 26, scope: !9328)
!9335 = !DILocation(line: 6115, column: 3, scope: !9328)
!9336 = !DILocation(line: 6117, column: 2, scope: !8173)
!9337 = !DILocation(line: 6120, column: 2, scope: !8173)
!9338 = !DILocation(line: 6138, column: 2, scope: !8173)
!9339 = !DILabel(scope: !8173, name: "out_error", file: !3, line: 6140)
!9340 = !DILocation(line: 6140, column: 1, scope: !8173)
!9341 = !DILocation(line: 6141, column: 6, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 6141, column: 6)
!9343 = !DILocation(line: 6141, column: 6, scope: !8173)
!9344 = !DILocation(line: 6142, column: 10, scope: !9342)
!9345 = !DILocation(line: 6142, column: 18, scope: !9342)
!9346 = !DILocation(line: 6142, column: 43, scope: !9342)
!9347 = !DILocation(line: 6142, column: 48, scope: !9342)
!9348 = !DILocation(line: 6142, column: 3, scope: !9342)
!9349 = !DILabel(scope: !8173, name: "out_freering", file: !3, line: 6143)
!9350 = !DILocation(line: 6143, column: 1, scope: !8173)
!9351 = !DILocation(line: 6144, column: 13, scope: !8173)
!9352 = !DILocation(line: 6144, column: 2, scope: !8173)
!9353 = !DILabel(scope: !8173, name: "out_unmap", file: !3, line: 6145)
!9354 = !DILocation(line: 6145, column: 1, scope: !8173)
!9355 = !DILocation(line: 6146, column: 21, scope: !8173)
!9356 = !DILocation(line: 6146, column: 10, scope: !8173)
!9357 = !DILocation(line: 6146, column: 2, scope: !8173)
!9358 = !DILabel(scope: !8173, name: "out_relreg", file: !3, line: 6147)
!9359 = !DILocation(line: 6147, column: 1, scope: !8173)
!9360 = !DILocation(line: 6148, column: 22, scope: !8173)
!9361 = !DILocation(line: 6148, column: 2, scope: !8173)
!9362 = !DILabel(scope: !8173, name: "out_disable", file: !3, line: 6149)
!9363 = !DILocation(line: 6149, column: 1, scope: !8173)
!9364 = !DILocation(line: 6150, column: 21, scope: !8173)
!9365 = !DILocation(line: 6150, column: 2, scope: !8173)
!9366 = !DILabel(scope: !8173, name: "out_free", file: !3, line: 6151)
!9367 = !DILocation(line: 6151, column: 1, scope: !8173)
!9368 = !DILocation(line: 6152, column: 14, scope: !8173)
!9369 = !DILocation(line: 6152, column: 18, scope: !8173)
!9370 = !DILocation(line: 6152, column: 2, scope: !8173)
!9371 = !DILabel(scope: !8173, name: "out_alloc_percpu", file: !3, line: 6153)
!9372 = !DILocation(line: 6153, column: 1, scope: !8173)
!9373 = !DILocation(line: 6154, column: 14, scope: !8173)
!9374 = !DILocation(line: 6154, column: 2, scope: !8173)
!9375 = !DILabel(scope: !8173, name: "out", file: !3, line: 6155)
!9376 = !DILocation(line: 6155, column: 1, scope: !8173)
!9377 = !DILocation(line: 6156, column: 9, scope: !8173)
!9378 = !DILocation(line: 6156, column: 2, scope: !8173)
!9379 = !DILocation(line: 6157, column: 1, scope: !8173)
!9380 = distinct !DISubprogram(name: "nv_remove", scope: !3, file: !3, line: 6196, type: !7658, scopeLine: 6197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9381 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !9380, file: !3, line: 6196, type: !7531)
!9382 = !DILocation(line: 6196, column: 39, scope: !9380)
!9383 = !DILocalVariable(name: "dev", scope: !9380, file: !3, line: 6198, type: !290)
!9384 = !DILocation(line: 6198, column: 21, scope: !9380)
!9385 = !DILocation(line: 6198, column: 43, scope: !9380)
!9386 = !DILocation(line: 6198, column: 27, scope: !9380)
!9387 = !DILocalVariable(name: "np", scope: !9380, file: !3, line: 6199, type: !7446)
!9388 = !DILocation(line: 6199, column: 18, scope: !9380)
!9389 = !DILocation(line: 6199, column: 35, scope: !9380)
!9390 = !DILocation(line: 6199, column: 23, scope: !9380)
!9391 = !DILocation(line: 6201, column: 14, scope: !9380)
!9392 = !DILocation(line: 6201, column: 18, scope: !9380)
!9393 = !DILocation(line: 6201, column: 2, scope: !9380)
!9394 = !DILocation(line: 6203, column: 20, scope: !9380)
!9395 = !DILocation(line: 6203, column: 2, scope: !9380)
!9396 = !DILocation(line: 6205, column: 22, scope: !9380)
!9397 = !DILocation(line: 6205, column: 2, scope: !9380)
!9398 = !DILocation(line: 6208, column: 17, scope: !9380)
!9399 = !DILocation(line: 6208, column: 2, scope: !9380)
!9400 = !DILocation(line: 6210, column: 23, scope: !9380)
!9401 = !DILocation(line: 6210, column: 2, scope: !9380)
!9402 = !DILocation(line: 6213, column: 13, scope: !9380)
!9403 = !DILocation(line: 6213, column: 2, scope: !9380)
!9404 = !DILocation(line: 6214, column: 21, scope: !9380)
!9405 = !DILocation(line: 6214, column: 10, scope: !9380)
!9406 = !DILocation(line: 6214, column: 2, scope: !9380)
!9407 = !DILocation(line: 6215, column: 22, scope: !9380)
!9408 = !DILocation(line: 6215, column: 2, scope: !9380)
!9409 = !DILocation(line: 6216, column: 21, scope: !9380)
!9410 = !DILocation(line: 6216, column: 2, scope: !9380)
!9411 = !DILocation(line: 6217, column: 14, scope: !9380)
!9412 = !DILocation(line: 6217, column: 2, scope: !9380)
!9413 = !DILocation(line: 6218, column: 1, scope: !9380)
!9414 = distinct !DISubprogram(name: "nv_shutdown", scope: !3, file: !3, line: 6275, type: !7658, scopeLine: 6276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9415 = !DILocalVariable(name: "pdev", arg: 1, scope: !9414, file: !3, line: 6275, type: !7531)
!9416 = !DILocation(line: 6275, column: 41, scope: !9414)
!9417 = !DILocalVariable(name: "dev", scope: !9414, file: !3, line: 6277, type: !290)
!9418 = !DILocation(line: 6277, column: 21, scope: !9414)
!9419 = !DILocation(line: 6277, column: 43, scope: !9414)
!9420 = !DILocation(line: 6277, column: 27, scope: !9414)
!9421 = !DILocalVariable(name: "np", scope: !9414, file: !3, line: 6278, type: !7446)
!9422 = !DILocation(line: 6278, column: 18, scope: !9414)
!9423 = !DILocation(line: 6278, column: 35, scope: !9414)
!9424 = !DILocation(line: 6278, column: 23, scope: !9414)
!9425 = !DILocation(line: 6280, column: 20, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 6280, column: 6)
!9427 = !DILocation(line: 6280, column: 6, scope: !9426)
!9428 = !DILocation(line: 6280, column: 6, scope: !9414)
!9429 = !DILocation(line: 6281, column: 12, scope: !9426)
!9430 = !DILocation(line: 6281, column: 3, scope: !9426)
!9431 = !DILocation(line: 6288, column: 6, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 6288, column: 6)
!9433 = !DILocation(line: 6288, column: 19, scope: !9432)
!9434 = !DILocation(line: 6288, column: 6, scope: !9414)
!9435 = !DILocation(line: 6289, column: 23, scope: !9432)
!9436 = !DILocation(line: 6289, column: 3, scope: !9432)
!9437 = !DILocation(line: 6291, column: 21, scope: !9414)
!9438 = !DILocation(line: 6291, column: 2, scope: !9414)
!9439 = !DILocation(line: 6296, column: 6, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 6296, column: 6)
!9441 = !DILocation(line: 6296, column: 19, scope: !9440)
!9442 = !DILocation(line: 6296, column: 6, scope: !9414)
!9443 = !DILocation(line: 6297, column: 20, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 6296, column: 40)
!9445 = !DILocation(line: 6297, column: 26, scope: !9444)
!9446 = !DILocation(line: 6297, column: 30, scope: !9444)
!9447 = !DILocation(line: 6297, column: 3, scope: !9444)
!9448 = !DILocation(line: 6298, column: 23, scope: !9444)
!9449 = !DILocation(line: 6298, column: 3, scope: !9444)
!9450 = !DILocation(line: 6299, column: 2, scope: !9444)
!9451 = !DILocation(line: 6300, column: 1, scope: !9414)
!9452 = distinct !DISubprogram(name: "netdev_priv", scope: !31, file: !31, line: 2322, type: !9453, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!591, !773}
!9455 = !DILocalVariable(name: "dev", arg: 1, scope: !9452, file: !31, line: 2322, type: !773)
!9456 = !DILocation(line: 2322, column: 58, scope: !9452)
!9457 = !DILocation(line: 2324, column: 17, scope: !9452)
!9458 = !DILocation(line: 2324, column: 9, scope: !9452)
!9459 = !DILocation(line: 2324, column: 21, scope: !9452)
!9460 = !DILocation(line: 2324, column: 2, scope: !9452)
!9461 = distinct !DISubprogram(name: "u64_stats_init", scope: !3072, file: !3072, line: 118, type: !9462, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9462 = !DISubroutineType(types: !9463)
!9463 = !{null, !9464}
!9464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!9465 = !DILocalVariable(name: "syncp", arg: 1, scope: !9461, file: !3072, line: 118, type: !9464)
!9466 = !DILocation(line: 118, column: 58, scope: !9461)
!9467 = !DILocation(line: 123, column: 1, scope: !9461)
!9468 = distinct !DISubprogram(name: "nv_do_rx_refill", scope: !3, file: !3, line: 1911, type: !3242, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9469 = !DILocalVariable(name: "t", arg: 1, scope: !9468, file: !3, line: 1911, type: !3244)
!9470 = !DILocation(line: 1911, column: 48, scope: !9468)
!9471 = !DILocalVariable(name: "np", scope: !9468, file: !3, line: 1913, type: !7446)
!9472 = !DILocation(line: 1913, column: 18, scope: !9468)
!9473 = !DILocalVariable(name: "__mptr", scope: !9474, file: !3, line: 1913, type: !591)
!9474 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 1913, column: 23)
!9475 = !DILocation(line: 1913, column: 23, scope: !9474)
!9476 = !DILocation(line: 1913, column: 23, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 1913, column: 23)
!9478 = !DILocation(line: 1916, column: 17, scope: !9468)
!9479 = !DILocation(line: 1916, column: 21, scope: !9468)
!9480 = !DILocation(line: 1916, column: 2, scope: !9468)
!9481 = !DILocation(line: 1917, column: 1, scope: !9468)
!9482 = distinct !DISubprogram(name: "nv_do_nic_poll", scope: !3, file: !3, line: 4160, type: !3242, scopeLine: 4161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9483 = !DILocalVariable(name: "lock", arg: 1, scope: !9484, file: !8243, line: 392, type: !2181)
!9484 = distinct !DISubprogram(name: "spin_unlock", scope: !8243, file: !8243, line: 392, type: !8244, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9485 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !9486)
!9486 = distinct !DILocation(line: 4235, column: 4, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 4202, column: 27)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 4202, column: 7)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 4199, column: 25)
!9490 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 4199, column: 6)
!9491 = !DILocalVariable(name: "lock", arg: 1, scope: !9492, file: !8243, line: 352, type: !2181)
!9492 = distinct !DISubprogram(name: "spin_lock", scope: !8243, file: !8243, line: 352, type: !8244, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9493 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !9494)
!9494 = distinct !DILocation(line: 4205, column: 4, scope: !9487)
!9495 = !DILocalVariable(name: "t", arg: 1, scope: !9482, file: !3, line: 4160, type: !3244)
!9496 = !DILocation(line: 4160, column: 47, scope: !9482)
!9497 = !DILocalVariable(name: "np", scope: !9482, file: !3, line: 4162, type: !7446)
!9498 = !DILocation(line: 4162, column: 18, scope: !9482)
!9499 = !DILocalVariable(name: "__mptr", scope: !9500, file: !3, line: 4162, type: !591)
!9500 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 4162, column: 23)
!9501 = !DILocation(line: 4162, column: 23, scope: !9500)
!9502 = !DILocation(line: 4162, column: 23, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 4162, column: 23)
!9504 = !DILocalVariable(name: "dev", scope: !9482, file: !3, line: 4163, type: !290)
!9505 = !DILocation(line: 4163, column: 21, scope: !9482)
!9506 = !DILocation(line: 4163, column: 27, scope: !9482)
!9507 = !DILocation(line: 4163, column: 31, scope: !9482)
!9508 = !DILocalVariable(name: "base", scope: !9482, file: !3, line: 4164, type: !793)
!9509 = !DILocation(line: 4164, column: 14, scope: !9482)
!9510 = !DILocation(line: 4164, column: 32, scope: !9482)
!9511 = !DILocation(line: 4164, column: 21, scope: !9482)
!9512 = !DILocalVariable(name: "mask", scope: !9482, file: !3, line: 4165, type: !987)
!9513 = !DILocation(line: 4165, column: 6, scope: !9482)
!9514 = !DILocalVariable(name: "flags", scope: !9482, file: !3, line: 4166, type: !312)
!9515 = !DILocation(line: 4166, column: 16, scope: !9482)
!9516 = !DILocalVariable(name: "irq", scope: !9482, file: !3, line: 4167, type: !7)
!9517 = !DILocation(line: 4167, column: 15, scope: !9482)
!9518 = !DILocation(line: 4175, column: 24, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 4175, column: 6)
!9520 = !DILocation(line: 4175, column: 7, scope: !9519)
!9521 = !DILocation(line: 4175, column: 6, scope: !9482)
!9522 = !DILocation(line: 4176, column: 7, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 4176, column: 7)
!9524 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 4175, column: 30)
!9525 = !DILocation(line: 4176, column: 11, scope: !9523)
!9526 = !DILocation(line: 4176, column: 21, scope: !9523)
!9527 = !DILocation(line: 4176, column: 7, scope: !9524)
!9528 = !DILocation(line: 4177, column: 10, scope: !9523)
!9529 = !DILocation(line: 4177, column: 14, scope: !9523)
!9530 = !DILocation(line: 4177, column: 47, scope: !9523)
!9531 = !DILocation(line: 4177, column: 8, scope: !9523)
!9532 = !DILocation(line: 4177, column: 4, scope: !9523)
!9533 = !DILocation(line: 4179, column: 10, scope: !9523)
!9534 = !DILocation(line: 4179, column: 14, scope: !9523)
!9535 = !DILocation(line: 4179, column: 23, scope: !9523)
!9536 = !DILocation(line: 4179, column: 8, scope: !9523)
!9537 = !DILocation(line: 4180, column: 10, scope: !9524)
!9538 = !DILocation(line: 4180, column: 14, scope: !9524)
!9539 = !DILocation(line: 4180, column: 8, scope: !9524)
!9540 = !DILocation(line: 4181, column: 2, scope: !9524)
!9541 = !DILocation(line: 4182, column: 7, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 4182, column: 7)
!9543 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 4181, column: 9)
!9544 = !DILocation(line: 4182, column: 11, scope: !9542)
!9545 = !DILocation(line: 4182, column: 24, scope: !9542)
!9546 = !DILocation(line: 4182, column: 7, scope: !9543)
!9547 = !DILocation(line: 4183, column: 10, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 4182, column: 44)
!9549 = !DILocation(line: 4183, column: 14, scope: !9548)
!9550 = !DILocation(line: 4183, column: 46, scope: !9548)
!9551 = !DILocation(line: 4183, column: 8, scope: !9548)
!9552 = !DILocation(line: 4184, column: 9, scope: !9548)
!9553 = !DILocation(line: 4185, column: 3, scope: !9548)
!9554 = !DILocation(line: 4186, column: 7, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 4186, column: 7)
!9556 = !DILocation(line: 4186, column: 11, scope: !9555)
!9557 = !DILocation(line: 4186, column: 24, scope: !9555)
!9558 = !DILocation(line: 4186, column: 7, scope: !9543)
!9559 = !DILocation(line: 4187, column: 10, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 4186, column: 44)
!9561 = !DILocation(line: 4187, column: 14, scope: !9560)
!9562 = !DILocation(line: 4187, column: 46, scope: !9560)
!9563 = !DILocation(line: 4187, column: 8, scope: !9560)
!9564 = !DILocation(line: 4188, column: 9, scope: !9560)
!9565 = !DILocation(line: 4189, column: 3, scope: !9560)
!9566 = !DILocation(line: 4190, column: 7, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 4190, column: 7)
!9568 = !DILocation(line: 4190, column: 11, scope: !9567)
!9569 = !DILocation(line: 4190, column: 24, scope: !9567)
!9570 = !DILocation(line: 4190, column: 7, scope: !9543)
!9571 = !DILocation(line: 4191, column: 10, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 4190, column: 43)
!9573 = !DILocation(line: 4191, column: 14, scope: !9572)
!9574 = !DILocation(line: 4191, column: 49, scope: !9572)
!9575 = !DILocation(line: 4191, column: 8, scope: !9572)
!9576 = !DILocation(line: 4192, column: 9, scope: !9572)
!9577 = !DILocation(line: 4193, column: 3, scope: !9572)
!9578 = !DILocation(line: 4196, column: 37, scope: !9482)
!9579 = !DILocation(line: 4196, column: 2, scope: !9482)
!9580 = !DILocation(line: 4197, column: 18, scope: !9482)
!9581 = !DILocation(line: 4197, column: 2, scope: !9482)
!9582 = !DILocation(line: 4199, column: 6, scope: !9490)
!9583 = !DILocation(line: 4199, column: 10, scope: !9490)
!9584 = !DILocation(line: 4199, column: 6, scope: !9482)
!9585 = !DILocation(line: 4200, column: 3, scope: !9489)
!9586 = !DILocation(line: 4200, column: 7, scope: !9489)
!9587 = !DILocation(line: 4200, column: 21, scope: !9489)
!9588 = !DILocation(line: 4201, column: 15, scope: !9489)
!9589 = !DILocation(line: 4201, column: 3, scope: !9489)
!9590 = !DILocation(line: 4202, column: 21, scope: !9488)
!9591 = !DILocation(line: 4202, column: 7, scope: !9488)
!9592 = !DILocation(line: 4202, column: 7, scope: !9489)
!9593 = !DILocation(line: 4203, column: 21, scope: !9487)
!9594 = !DILocation(line: 4203, column: 4, scope: !9487)
!9595 = !DILocation(line: 4204, column: 20, scope: !9487)
!9596 = !DILocation(line: 4204, column: 4, scope: !9487)
!9597 = !DILocation(line: 4205, column: 15, scope: !9487)
!9598 = !DILocation(line: 4205, column: 19, scope: !9487)
!9599 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !9494)
!9600 = distinct !DILexicalBlock(scope: !9492, file: !8243, line: 354, column: 2)
!9601 = !{i32 -2145286304}
!9602 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !9494)
!9603 = distinct !DILexicalBlock(scope: !9600, file: !8243, line: 354, column: 2)
!9604 = !DILocation(line: 4207, column: 17, scope: !9487)
!9605 = !DILocation(line: 4207, column: 4, scope: !9487)
!9606 = !DILocation(line: 4208, column: 8, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 4208, column: 8)
!9608 = !DILocation(line: 4208, column: 12, scope: !9607)
!9609 = !DILocation(line: 4208, column: 24, scope: !9607)
!9610 = !DILocation(line: 4208, column: 8, scope: !9487)
!9611 = !DILocation(line: 4209, column: 18, scope: !9607)
!9612 = !DILocation(line: 4209, column: 5, scope: !9607)
!9613 = !DILocation(line: 4210, column: 18, scope: !9487)
!9614 = !DILocation(line: 4210, column: 4, scope: !9487)
!9615 = !DILocation(line: 4212, column: 18, scope: !9487)
!9616 = !DILocation(line: 4212, column: 4, scope: !9487)
!9617 = !DILocation(line: 4214, column: 16, scope: !9487)
!9618 = !DILocation(line: 4214, column: 4, scope: !9487)
!9619 = !DILocation(line: 4215, column: 21, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 4215, column: 8)
!9621 = !DILocation(line: 4215, column: 8, scope: !9620)
!9622 = !DILocation(line: 4215, column: 8, scope: !9487)
!9623 = !DILocation(line: 4216, column: 10, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4216, column: 9)
!9625 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 4215, column: 27)
!9626 = !DILocation(line: 4216, column: 14, scope: !9624)
!9627 = !DILocation(line: 4216, column: 9, scope: !9625)
!9628 = !DILocation(line: 4217, column: 17, scope: !9624)
!9629 = !DILocation(line: 4217, column: 21, scope: !9624)
!9630 = !DILocation(line: 4217, column: 31, scope: !9624)
!9631 = !DILocation(line: 4217, column: 39, scope: !9624)
!9632 = !DILocation(line: 4217, column: 6, scope: !9624)
!9633 = !DILocation(line: 4218, column: 4, scope: !9625)
!9634 = !DILocation(line: 4220, column: 11, scope: !9487)
!9635 = !DILocation(line: 4220, column: 15, scope: !9487)
!9636 = !DILocation(line: 4220, column: 26, scope: !9487)
!9637 = !DILocation(line: 4220, column: 31, scope: !9487)
!9638 = !DILocation(line: 4220, column: 4, scope: !9487)
!9639 = !DILocation(line: 4221, column: 19, scope: !9487)
!9640 = !DILocation(line: 4221, column: 4, scope: !9487)
!9641 = !DILocation(line: 4222, column: 13, scope: !9487)
!9642 = !DILocation(line: 4222, column: 17, scope: !9487)
!9643 = !DILocation(line: 4222, column: 29, scope: !9487)
!9644 = !DILocation(line: 4222, column: 33, scope: !9487)
!9645 = !DILocation(line: 4222, column: 62, scope: !9487)
!9646 = !DILocation(line: 4222, column: 66, scope: !9487)
!9647 = !DILocation(line: 4222, column: 78, scope: !9487)
!9648 = !DILocation(line: 4222, column: 82, scope: !9487)
!9649 = !DILocation(line: 4222, column: 58, scope: !9487)
!9650 = !DILocation(line: 4223, column: 5, scope: !9487)
!9651 = !DILocation(line: 4223, column: 10, scope: !9487)
!9652 = !DILocation(line: 4222, column: 4, scope: !9487)
!9653 = !DILocation(line: 4224, column: 13, scope: !9487)
!9654 = !DILocation(line: 4224, column: 4, scope: !9487)
!9655 = !DILocation(line: 4225, column: 30, scope: !9487)
!9656 = !DILocation(line: 4225, column: 34, scope: !9487)
!9657 = !DILocation(line: 4225, column: 29, scope: !9487)
!9658 = !DILocation(line: 4225, column: 59, scope: !9487)
!9659 = !DILocation(line: 4225, column: 48, scope: !9487)
!9660 = !DILocation(line: 4225, column: 64, scope: !9487)
!9661 = !DILocation(line: 4225, column: 4, scope: !9487)
!9662 = !DILocation(line: 4226, column: 13, scope: !9487)
!9663 = !DILocation(line: 4226, column: 4, scope: !9487)
!9664 = !DILocation(line: 4228, column: 10, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 4228, column: 8)
!9666 = !DILocation(line: 4228, column: 14, scope: !9665)
!9667 = !DILocation(line: 4228, column: 24, scope: !9665)
!9668 = !DILocation(line: 4228, column: 8, scope: !9487)
!9669 = !DILocation(line: 4229, column: 32, scope: !9665)
!9670 = !DILocation(line: 4229, column: 37, scope: !9665)
!9671 = !DILocation(line: 4229, column: 5, scope: !9665)
!9672 = !DILocation(line: 4231, column: 32, scope: !9665)
!9673 = !DILocation(line: 4231, column: 37, scope: !9665)
!9674 = !DILocation(line: 4231, column: 5, scope: !9665)
!9675 = !DILocation(line: 4234, column: 18, scope: !9487)
!9676 = !DILocation(line: 4234, column: 4, scope: !9487)
!9677 = !DILocation(line: 4235, column: 17, scope: !9487)
!9678 = !DILocation(line: 4235, column: 21, scope: !9487)
!9679 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !9486)
!9680 = distinct !DILexicalBlock(scope: !9484, file: !8243, line: 394, column: 2)
!9681 = !{i32 -2145283943}
!9682 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !9486)
!9683 = distinct !DILexicalBlock(scope: !9680, file: !8243, line: 394, column: 2)
!9684 = !DILocation(line: 4236, column: 22, scope: !9487)
!9685 = !DILocation(line: 4236, column: 4, scope: !9487)
!9686 = !DILocation(line: 4237, column: 23, scope: !9487)
!9687 = !DILocation(line: 4237, column: 4, scope: !9487)
!9688 = !DILocation(line: 4238, column: 3, scope: !9487)
!9689 = !DILocation(line: 4239, column: 2, scope: !9489)
!9690 = !DILocation(line: 4241, column: 9, scope: !9482)
!9691 = !DILocation(line: 4241, column: 15, scope: !9482)
!9692 = !DILocation(line: 4241, column: 20, scope: !9482)
!9693 = !DILocation(line: 4241, column: 2, scope: !9482)
!9694 = !DILocation(line: 4242, column: 11, scope: !9482)
!9695 = !DILocation(line: 4242, column: 2, scope: !9482)
!9696 = !DILocation(line: 4244, column: 24, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 4244, column: 6)
!9698 = !DILocation(line: 4244, column: 7, scope: !9697)
!9699 = !DILocation(line: 4244, column: 6, scope: !9482)
!9700 = !DILocation(line: 4245, column: 3, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 4244, column: 30)
!9702 = !DILocation(line: 4245, column: 7, scope: !9701)
!9703 = !DILocation(line: 4245, column: 20, scope: !9701)
!9704 = !DILocation(line: 4246, column: 20, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 4246, column: 7)
!9706 = !DILocation(line: 4246, column: 7, scope: !9705)
!9707 = !DILocation(line: 4246, column: 7, scope: !9701)
!9708 = !DILocation(line: 4247, column: 28, scope: !9705)
!9709 = !DILocation(line: 4247, column: 4, scope: !9705)
!9710 = !DILocation(line: 4249, column: 18, scope: !9705)
!9711 = !DILocation(line: 4249, column: 4, scope: !9705)
!9712 = !DILocation(line: 4250, column: 2, scope: !9701)
!9713 = !DILocation(line: 4251, column: 7, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 4251, column: 7)
!9715 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 4250, column: 9)
!9716 = !DILocation(line: 4251, column: 11, scope: !9714)
!9717 = !DILocation(line: 4251, column: 24, scope: !9714)
!9718 = !DILocation(line: 4251, column: 7, scope: !9715)
!9719 = !DILocation(line: 4252, column: 4, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 4251, column: 44)
!9721 = !DILocation(line: 4252, column: 8, scope: !9720)
!9722 = !DILocation(line: 4252, column: 21, scope: !9720)
!9723 = !DILocation(line: 4253, column: 21, scope: !9720)
!9724 = !DILocation(line: 4253, column: 4, scope: !9720)
!9725 = !DILocation(line: 4254, column: 3, scope: !9720)
!9726 = !DILocation(line: 4255, column: 7, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 4255, column: 7)
!9728 = !DILocation(line: 4255, column: 11, scope: !9727)
!9729 = !DILocation(line: 4255, column: 24, scope: !9727)
!9730 = !DILocation(line: 4255, column: 7, scope: !9715)
!9731 = !DILocation(line: 4256, column: 4, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 4255, column: 44)
!9733 = !DILocation(line: 4256, column: 8, scope: !9732)
!9734 = !DILocation(line: 4256, column: 21, scope: !9732)
!9735 = !DILocation(line: 4257, column: 21, scope: !9732)
!9736 = !DILocation(line: 4257, column: 4, scope: !9732)
!9737 = !DILocation(line: 4258, column: 3, scope: !9732)
!9738 = !DILocation(line: 4259, column: 7, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 4259, column: 7)
!9740 = !DILocation(line: 4259, column: 11, scope: !9739)
!9741 = !DILocation(line: 4259, column: 24, scope: !9739)
!9742 = !DILocation(line: 4259, column: 7, scope: !9715)
!9743 = !DILocation(line: 4260, column: 4, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 4259, column: 43)
!9745 = !DILocation(line: 4260, column: 8, scope: !9744)
!9746 = !DILocation(line: 4260, column: 21, scope: !9744)
!9747 = !DILocation(line: 4261, column: 24, scope: !9744)
!9748 = !DILocation(line: 4261, column: 4, scope: !9744)
!9749 = !DILocation(line: 4262, column: 3, scope: !9744)
!9750 = !DILocation(line: 4265, column: 32, scope: !9482)
!9751 = !DILocation(line: 4265, column: 2, scope: !9482)
!9752 = !DILocation(line: 4266, column: 1, scope: !9482)
!9753 = distinct !DISubprogram(name: "nv_do_stats_poll", scope: !3, file: !3, line: 4277, type: !3242, scopeLine: 4280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9754 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !9755)
!9755 = distinct !DILocation(line: 4288, column: 3, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 4286, column: 39)
!9757 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 4286, column: 6)
!9758 = !DILocalVariable(name: "lock", arg: 1, scope: !9759, file: !8243, line: 362, type: !2181)
!9759 = distinct !DISubprogram(name: "spin_trylock", scope: !8243, file: !8243, line: 362, type: !9760, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9760 = !DISubroutineType(types: !9761)
!9761 = !{!32, !2181}
!9762 = !DILocation(line: 362, column: 53, scope: !9759, inlinedAt: !9763)
!9763 = distinct !DILocation(line: 4286, column: 6, scope: !9757)
!9764 = !DILocalVariable(name: "t", arg: 1, scope: !9753, file: !3, line: 4277, type: !3244)
!9765 = !DILocation(line: 4277, column: 49, scope: !9753)
!9766 = !DILocalVariable(name: "np", scope: !9753, file: !3, line: 4281, type: !7446)
!9767 = !DILocation(line: 4281, column: 18, scope: !9753)
!9768 = !DILocalVariable(name: "__mptr", scope: !9769, file: !3, line: 4281, type: !591)
!9769 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 4281, column: 23)
!9770 = !DILocation(line: 4281, column: 23, scope: !9769)
!9771 = !DILocation(line: 4281, column: 23, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 4281, column: 23)
!9773 = !DILocalVariable(name: "dev", scope: !9753, file: !3, line: 4282, type: !290)
!9774 = !DILocation(line: 4282, column: 21, scope: !9753)
!9775 = !DILocation(line: 4282, column: 27, scope: !9753)
!9776 = !DILocation(line: 4282, column: 31, scope: !9753)
!9777 = !DILocation(line: 4286, column: 20, scope: !9757)
!9778 = !DILocation(line: 4286, column: 24, scope: !9757)
!9779 = !DILocation(line: 364, column: 9, scope: !9780, inlinedAt: !9763)
!9780 = distinct !DILexicalBlock(scope: !9781, file: !8243, line: 364, column: 9)
!9781 = distinct !DILexicalBlock(scope: !9759, file: !8243, line: 364, column: 9)
!9782 = !{i32 -2145285003}
!9783 = !DILocation(line: 364, column: 9, scope: !9784, inlinedAt: !9763)
!9784 = distinct !DILexicalBlock(scope: !9780, file: !8243, line: 364, column: 9)
!9785 = !DILocation(line: 364, column: 9, scope: !9781, inlinedAt: !9763)
!9786 = !DILocation(line: 4286, column: 6, scope: !9757)
!9787 = !DILocation(line: 4286, column: 6, scope: !9753)
!9788 = !DILocation(line: 4287, column: 19, scope: !9756)
!9789 = !DILocation(line: 4287, column: 3, scope: !9756)
!9790 = !DILocation(line: 4288, column: 16, scope: !9756)
!9791 = !DILocation(line: 4288, column: 20, scope: !9756)
!9792 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !9755)
!9793 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !9755)
!9794 = !DILocation(line: 4289, column: 2, scope: !9756)
!9795 = !DILocation(line: 4291, column: 7, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 4291, column: 6)
!9797 = !DILocation(line: 4291, column: 11, scope: !9796)
!9798 = !DILocation(line: 4291, column: 6, scope: !9753)
!9799 = !DILocation(line: 4292, column: 14, scope: !9796)
!9800 = !DILocation(line: 4292, column: 18, scope: !9796)
!9801 = !DILocation(line: 4293, column: 18, scope: !9796)
!9802 = !DILocation(line: 4293, column: 26, scope: !9796)
!9803 = !DILocation(line: 4293, column: 4, scope: !9796)
!9804 = !DILocation(line: 4292, column: 3, scope: !9796)
!9805 = !DILocation(line: 4294, column: 1, scope: !9753)
!9806 = distinct !DISubprogram(name: "pci_set_dma_mask", scope: !9807, file: !9807, line: 113, type: !9808, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9807 = !DIFile(filename: "./include/linux/pci-dma-compat.h", directory: "/home/lizy2001/genbc/linux")
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!32, !7531, !331}
!9810 = !DILocalVariable(name: "dev", arg: 1, scope: !9806, file: !9807, line: 113, type: !7531)
!9811 = !DILocation(line: 113, column: 52, scope: !9806)
!9812 = !DILocalVariable(name: "mask", arg: 2, scope: !9806, file: !9807, line: 113, type: !331)
!9813 = !DILocation(line: 113, column: 61, scope: !9806)
!9814 = !DILocation(line: 115, column: 23, scope: !9806)
!9815 = !DILocation(line: 115, column: 28, scope: !9806)
!9816 = !DILocation(line: 115, column: 33, scope: !9806)
!9817 = !DILocation(line: 115, column: 9, scope: !9806)
!9818 = !DILocation(line: 115, column: 2, scope: !9806)
!9819 = distinct !DISubprogram(name: "pci_set_consistent_dma_mask", scope: !9807, file: !9807, line: 118, type: !9808, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9820 = !DILocalVariable(name: "dev", arg: 1, scope: !9819, file: !9807, line: 118, type: !7531)
!9821 = !DILocation(line: 118, column: 63, scope: !9819)
!9822 = !DILocalVariable(name: "mask", arg: 2, scope: !9819, file: !9807, line: 118, type: !331)
!9823 = !DILocation(line: 118, column: 72, scope: !9819)
!9824 = !DILocation(line: 120, column: 32, scope: !9819)
!9825 = !DILocation(line: 120, column: 37, scope: !9819)
!9826 = !DILocation(line: 120, column: 42, scope: !9819)
!9827 = !DILocation(line: 120, column: 9, scope: !9819)
!9828 = !DILocation(line: 120, column: 2, scope: !9819)
!9829 = distinct !DISubprogram(name: "nv_optimized", scope: !3, file: !3, line: 961, type: !9830, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{!771, !7446}
!9832 = !DILocalVariable(name: "np", arg: 1, scope: !9829, file: !3, line: 961, type: !7446)
!9833 = !DILocation(line: 961, column: 42, scope: !9829)
!9834 = !DILocation(line: 963, column: 6, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 963, column: 6)
!9836 = !DILocation(line: 963, column: 10, scope: !9835)
!9837 = !DILocation(line: 963, column: 19, scope: !9835)
!9838 = !DILocation(line: 963, column: 33, scope: !9835)
!9839 = !DILocation(line: 963, column: 36, scope: !9835)
!9840 = !DILocation(line: 963, column: 40, scope: !9835)
!9841 = !DILocation(line: 963, column: 49, scope: !9835)
!9842 = !DILocation(line: 963, column: 6, scope: !9829)
!9843 = !DILocation(line: 964, column: 3, scope: !9835)
!9844 = !DILocation(line: 965, column: 2, scope: !9829)
!9845 = !DILocation(line: 966, column: 1, scope: !9829)
!9846 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !8177, file: !8177, line: 392, type: !9847, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!591, !6545, !1039, !9849, !1742}
!9849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!9850 = !DILocalVariable(name: "dev", arg: 1, scope: !9846, file: !8177, line: 392, type: !6545)
!9851 = !DILocation(line: 392, column: 55, scope: !9846)
!9852 = !DILocalVariable(name: "size", arg: 2, scope: !9846, file: !8177, line: 392, type: !1039)
!9853 = !DILocation(line: 392, column: 67, scope: !9846)
!9854 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !9846, file: !8177, line: 393, type: !9849)
!9855 = !DILocation(line: 393, column: 15, scope: !9846)
!9856 = !DILocalVariable(name: "gfp", arg: 4, scope: !9846, file: !8177, line: 393, type: !1742)
!9857 = !DILocation(line: 393, column: 33, scope: !9846)
!9858 = !DILocation(line: 396, column: 25, scope: !9846)
!9859 = !DILocation(line: 396, column: 30, scope: !9846)
!9860 = !DILocation(line: 396, column: 36, scope: !9846)
!9861 = !DILocation(line: 396, column: 48, scope: !9846)
!9862 = !DILocation(line: 397, column: 5, scope: !9846)
!9863 = !DILocation(line: 397, column: 9, scope: !9846)
!9864 = !DILocation(line: 397, column: 4, scope: !9846)
!9865 = !DILocation(line: 396, column: 9, scope: !9846)
!9866 = !DILocation(line: 396, column: 2, scope: !9846)
!9867 = distinct !DISubprogram(name: "kcalloc", scope: !7256, file: !7256, line: 601, type: !9868, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9868 = !DISubroutineType(types: !9869)
!9869 = !{!591, !1039, !1039, !1742}
!9870 = !DILocalVariable(name: "n", arg: 1, scope: !9867, file: !7256, line: 601, type: !1039)
!9871 = !DILocation(line: 601, column: 36, scope: !9867)
!9872 = !DILocalVariable(name: "size", arg: 2, scope: !9867, file: !7256, line: 601, type: !1039)
!9873 = !DILocation(line: 601, column: 46, scope: !9867)
!9874 = !DILocalVariable(name: "flags", arg: 3, scope: !9867, file: !7256, line: 601, type: !1742)
!9875 = !DILocation(line: 601, column: 58, scope: !9867)
!9876 = !DILocation(line: 603, column: 23, scope: !9867)
!9877 = !DILocation(line: 603, column: 26, scope: !9867)
!9878 = !DILocation(line: 603, column: 32, scope: !9867)
!9879 = !DILocation(line: 603, column: 38, scope: !9867)
!9880 = !DILocation(line: 603, column: 9, scope: !9867)
!9881 = !DILocation(line: 603, column: 2, scope: !9867)
!9882 = distinct !DISubprogram(name: "nv_napi_poll", scope: !3, file: !3, line: 3782, type: !7461, scopeLine: 3783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9883 = !DILocalVariable(name: "lock", arg: 1, scope: !9884, file: !8243, line: 407, type: !2181)
!9884 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !8243, file: !8243, line: 407, type: !9885, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9885 = !DISubroutineType(types: !9886)
!9886 = !{null, !2181, !312}
!9887 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !9888)
!9888 = distinct !DILocation(line: 3838, column: 3, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 3831, column: 54)
!9890 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3831, column: 6)
!9891 = !DILocalVariable(name: "flags", arg: 2, scope: !9884, file: !8243, line: 407, type: !312)
!9892 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !9888)
!9893 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !9894)
!9894 = distinct !DILocation(line: 3832, column: 3, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 3832, column: 3)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 3832, column: 3)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 3832, column: 3)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 3832, column: 3)
!9899 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 3832, column: 3)
!9900 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !9901)
!9901 = distinct !DILocation(line: 3828, column: 3, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 3825, column: 77)
!9903 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3825, column: 6)
!9904 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !9901)
!9905 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !9906)
!9906 = distinct !DILocation(line: 3826, column: 3, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !3, line: 3826, column: 3)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 3826, column: 3)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 3826, column: 3)
!9910 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 3826, column: 3)
!9911 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 3826, column: 3)
!9912 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !9913)
!9913 = distinct !DILocation(line: 3823, column: 3, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 3820, column: 45)
!9915 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3820, column: 6)
!9916 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !9913)
!9917 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !9918)
!9918 = distinct !DILocation(line: 3821, column: 3, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 3821, column: 3)
!9920 = distinct !DILexicalBlock(scope: !9921, file: !3, line: 3821, column: 3)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 3821, column: 3)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !3, line: 3821, column: 3)
!9923 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 3821, column: 3)
!9924 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !9925)
!9925 = distinct !DILocation(line: 3815, column: 3, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !3, line: 3811, column: 15)
!9927 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3811, column: 6)
!9928 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !9925)
!9929 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !9930)
!9930 = distinct !DILocation(line: 3812, column: 3, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 3812, column: 3)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 3812, column: 3)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 3812, column: 3)
!9934 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 3812, column: 3)
!9935 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 3812, column: 3)
!9936 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !9937)
!9937 = distinct !DILocation(line: 3802, column: 4, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !3, line: 3799, column: 10)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 3792, column: 7)
!9940 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3791, column: 5)
!9941 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !9937)
!9942 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !9943)
!9943 = distinct !DILocation(line: 3800, column: 4, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 3800, column: 4)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 3800, column: 4)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 3800, column: 4)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 3800, column: 4)
!9948 = distinct !DILexicalBlock(scope: !9938, file: !3, line: 3800, column: 4)
!9949 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !9950)
!9950 = distinct !DILocation(line: 3795, column: 4, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9939, file: !3, line: 3792, column: 26)
!9952 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !9950)
!9953 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !9954)
!9954 = distinct !DILocation(line: 3793, column: 4, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 3793, column: 4)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 3793, column: 4)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 3793, column: 4)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 3793, column: 4)
!9959 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 3793, column: 4)
!9960 = !DILocalVariable(name: "napi", arg: 1, scope: !9882, file: !3, line: 3782, type: !7463)
!9961 = !DILocation(line: 3782, column: 45, scope: !9882)
!9962 = !DILocalVariable(name: "budget", arg: 2, scope: !9882, file: !3, line: 3782, type: !32)
!9963 = !DILocation(line: 3782, column: 55, scope: !9882)
!9964 = !DILocalVariable(name: "np", scope: !9882, file: !3, line: 3784, type: !7446)
!9965 = !DILocation(line: 3784, column: 18, scope: !9882)
!9966 = !DILocalVariable(name: "__mptr", scope: !9967, file: !3, line: 3784, type: !591)
!9967 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3784, column: 23)
!9968 = !DILocation(line: 3784, column: 23, scope: !9967)
!9969 = !DILocation(line: 3784, column: 23, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 3784, column: 23)
!9971 = !DILocalVariable(name: "dev", scope: !9882, file: !3, line: 3785, type: !290)
!9972 = !DILocation(line: 3785, column: 21, scope: !9882)
!9973 = !DILocation(line: 3785, column: 27, scope: !9882)
!9974 = !DILocation(line: 3785, column: 31, scope: !9882)
!9975 = !DILocalVariable(name: "base", scope: !9882, file: !3, line: 3786, type: !793)
!9976 = !DILocation(line: 3786, column: 14, scope: !9882)
!9977 = !DILocation(line: 3786, column: 32, scope: !9882)
!9978 = !DILocation(line: 3786, column: 21, scope: !9882)
!9979 = !DILocalVariable(name: "flags", scope: !9882, file: !3, line: 3787, type: !312)
!9980 = !DILocation(line: 3787, column: 16, scope: !9882)
!9981 = !DILocalVariable(name: "retcode", scope: !9882, file: !3, line: 3788, type: !32)
!9982 = !DILocation(line: 3788, column: 6, scope: !9882)
!9983 = !DILocalVariable(name: "rx_count", scope: !9882, file: !3, line: 3789, type: !32)
!9984 = !DILocation(line: 3789, column: 6, scope: !9882)
!9985 = !DILocalVariable(name: "tx_work", scope: !9882, file: !3, line: 3789, type: !32)
!9986 = !DILocation(line: 3789, column: 16, scope: !9882)
!9987 = !DILocalVariable(name: "rx_work", scope: !9882, file: !3, line: 3789, type: !32)
!9988 = !DILocation(line: 3789, column: 29, scope: !9882)
!9989 = !DILocation(line: 3791, column: 2, scope: !9882)
!9990 = !DILocation(line: 3792, column: 21, scope: !9939)
!9991 = !DILocation(line: 3792, column: 8, scope: !9939)
!9992 = !DILocation(line: 3792, column: 7, scope: !9940)
!9993 = !DILocation(line: 3793, column: 4, scope: !9951)
!9994 = !DILocation(line: 3793, column: 4, scope: !9959)
!9995 = !DILocalVariable(name: "__dummy", scope: !9996, file: !3, line: 3793, type: !312)
!9996 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 3793, column: 4)
!9997 = !DILocation(line: 3793, column: 4, scope: !9996)
!9998 = !DILocalVariable(name: "__dummy2", scope: !9996, file: !3, line: 3793, type: !312)
!9999 = !DILocation(line: 3793, column: 4, scope: !9958)
!10000 = !DILocation(line: 3793, column: 4, scope: !9957)
!10001 = !DILocation(line: 3793, column: 4, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 3793, column: 4)
!10003 = !DILocalVariable(name: "__dummy", scope: !10004, file: !3, line: 3793, type: !312)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 3793, column: 4)
!10005 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 3793, column: 4)
!10006 = !DILocation(line: 3793, column: 4, scope: !10004)
!10007 = !DILocalVariable(name: "__dummy2", scope: !10004, file: !3, line: 3793, type: !312)
!10008 = !DILocation(line: 3793, column: 4, scope: !10005)
!10009 = !DILocation(line: 3793, column: 4, scope: !9956)
!10010 = !{i32 -2139320894}
!10011 = !DILocation(line: 3793, column: 4, scope: !9955)
!10012 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !9954)
!10013 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !9954)
!10014 = !DILocation(line: 3794, column: 26, scope: !9951)
!10015 = !DILocation(line: 3794, column: 31, scope: !9951)
!10016 = !DILocation(line: 3794, column: 35, scope: !9951)
!10017 = !DILocation(line: 3794, column: 15, scope: !9951)
!10018 = !DILocation(line: 3794, column: 12, scope: !9951)
!10019 = !DILocation(line: 3795, column: 28, scope: !9951)
!10020 = !DILocation(line: 3795, column: 32, scope: !9951)
!10021 = !DILocation(line: 3795, column: 38, scope: !9951)
!10022 = !DILocalVariable(name: "__dummy", scope: !10023, file: !8243, line: 409, type: !312)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !8243, line: 409, column: 2)
!10024 = distinct !DILexicalBlock(scope: !9884, file: !8243, line: 409, column: 2)
!10025 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !9950)
!10026 = !DILocalVariable(name: "__dummy2", scope: !10023, file: !8243, line: 409, type: !312)
!10027 = !DILocalVariable(name: "__dummy", scope: !10028, file: !8243, line: 409, type: !312)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !8243, line: 409, column: 2)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !8243, line: 409, column: 2)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !8243, line: 409, column: 2)
!10031 = distinct !DILexicalBlock(scope: !10024, file: !8243, line: 409, column: 2)
!10032 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !9950)
!10033 = !DILocalVariable(name: "__dummy2", scope: !10028, file: !8243, line: 409, type: !312)
!10034 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !9950)
!10035 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !9950)
!10036 = distinct !DILexicalBlock(scope: !10031, file: !8243, line: 409, column: 2)
!10037 = !{i32 -2145281617}
!10038 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !9950)
!10039 = distinct !DILexicalBlock(scope: !10036, file: !8243, line: 409, column: 2)
!10040 = !DILocation(line: 3797, column: 29, scope: !9951)
!10041 = !DILocation(line: 3797, column: 34, scope: !9951)
!10042 = !DILocation(line: 3797, column: 43, scope: !9951)
!10043 = !DILocation(line: 3797, column: 41, scope: !9951)
!10044 = !DILocation(line: 3797, column: 15, scope: !9951)
!10045 = !DILocation(line: 3797, column: 13, scope: !9951)
!10046 = !DILocation(line: 3798, column: 26, scope: !9951)
!10047 = !DILocation(line: 3798, column: 14, scope: !9951)
!10048 = !DILocation(line: 3798, column: 12, scope: !9951)
!10049 = !DILocation(line: 3799, column: 3, scope: !9951)
!10050 = !DILocation(line: 3800, column: 4, scope: !9938)
!10051 = !DILocation(line: 3800, column: 4, scope: !9948)
!10052 = !DILocalVariable(name: "__dummy", scope: !10053, file: !3, line: 3800, type: !312)
!10053 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 3800, column: 4)
!10054 = !DILocation(line: 3800, column: 4, scope: !10053)
!10055 = !DILocalVariable(name: "__dummy2", scope: !10053, file: !3, line: 3800, type: !312)
!10056 = !DILocation(line: 3800, column: 4, scope: !9947)
!10057 = !DILocation(line: 3800, column: 4, scope: !9946)
!10058 = !DILocation(line: 3800, column: 4, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 3800, column: 4)
!10060 = !DILocalVariable(name: "__dummy", scope: !10061, file: !3, line: 3800, type: !312)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 3800, column: 4)
!10062 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 3800, column: 4)
!10063 = !DILocation(line: 3800, column: 4, scope: !10061)
!10064 = !DILocalVariable(name: "__dummy2", scope: !10061, file: !3, line: 3800, type: !312)
!10065 = !DILocation(line: 3800, column: 4, scope: !10062)
!10066 = !DILocation(line: 3800, column: 4, scope: !9945)
!10067 = !{i32 -2139319889}
!10068 = !DILocation(line: 3800, column: 4, scope: !9944)
!10069 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !9943)
!10070 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !9943)
!10071 = !DILocation(line: 3801, column: 36, scope: !9938)
!10072 = !DILocation(line: 3801, column: 41, scope: !9938)
!10073 = !DILocation(line: 3801, column: 45, scope: !9938)
!10074 = !DILocation(line: 3801, column: 15, scope: !9938)
!10075 = !DILocation(line: 3801, column: 12, scope: !9938)
!10076 = !DILocation(line: 3802, column: 28, scope: !9938)
!10077 = !DILocation(line: 3802, column: 32, scope: !9938)
!10078 = !DILocation(line: 3802, column: 38, scope: !9938)
!10079 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !9937)
!10080 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !9937)
!10081 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !9937)
!10082 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !9937)
!10083 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !9937)
!10084 = !DILocation(line: 3804, column: 39, scope: !9938)
!10085 = !DILocation(line: 3805, column: 8, scope: !9938)
!10086 = !DILocation(line: 3805, column: 17, scope: !9938)
!10087 = !DILocation(line: 3805, column: 15, scope: !9938)
!10088 = !DILocation(line: 3804, column: 15, scope: !9938)
!10089 = !DILocation(line: 3804, column: 13, scope: !9938)
!10090 = !DILocation(line: 3806, column: 36, scope: !9938)
!10091 = !DILocation(line: 3806, column: 14, scope: !9938)
!10092 = !DILocation(line: 3806, column: 12, scope: !9938)
!10093 = !DILocation(line: 3808, column: 2, scope: !9940)
!10094 = !DILocation(line: 3808, column: 11, scope: !9882)
!10095 = !DILocation(line: 3808, column: 19, scope: !9882)
!10096 = !DILocation(line: 3808, column: 24, scope: !9882)
!10097 = !DILocation(line: 3809, column: 4, scope: !9882)
!10098 = !DILocation(line: 3809, column: 13, scope: !9882)
!10099 = !DILocation(line: 3809, column: 17, scope: !9882)
!10100 = !DILocation(line: 3809, column: 32, scope: !9882)
!10101 = !DILocation(line: 3809, column: 29, scope: !9882)
!10102 = !DILocation(line: 3809, column: 44, scope: !9882)
!10103 = !DILocation(line: 3809, column: 42, scope: !9882)
!10104 = !DILocation(line: 0, scope: !9882)
!10105 = distinct !{!10105, !9989, !10106}
!10106 = !DILocation(line: 3809, column: 50, scope: !9882)
!10107 = !DILocation(line: 3811, column: 6, scope: !9927)
!10108 = !DILocation(line: 3811, column: 6, scope: !9882)
!10109 = !DILocation(line: 3812, column: 3, scope: !9926)
!10110 = !DILocation(line: 3812, column: 3, scope: !9935)
!10111 = !DILocalVariable(name: "__dummy", scope: !10112, file: !3, line: 3812, type: !312)
!10112 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 3812, column: 3)
!10113 = !DILocation(line: 3812, column: 3, scope: !10112)
!10114 = !DILocalVariable(name: "__dummy2", scope: !10112, file: !3, line: 3812, type: !312)
!10115 = !DILocation(line: 3812, column: 3, scope: !9934)
!10116 = !DILocation(line: 3812, column: 3, scope: !9933)
!10117 = !DILocation(line: 3812, column: 3, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 3812, column: 3)
!10119 = !DILocalVariable(name: "__dummy", scope: !10120, file: !3, line: 3812, type: !312)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3812, column: 3)
!10121 = distinct !DILexicalBlock(scope: !10118, file: !3, line: 3812, column: 3)
!10122 = !DILocation(line: 3812, column: 3, scope: !10120)
!10123 = !DILocalVariable(name: "__dummy2", scope: !10120, file: !3, line: 3812, type: !312)
!10124 = !DILocation(line: 3812, column: 3, scope: !10121)
!10125 = !DILocation(line: 3812, column: 3, scope: !9932)
!10126 = !{i32 -2139318884}
!10127 = !DILocation(line: 3812, column: 3, scope: !9931)
!10128 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !9930)
!10129 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !9930)
!10130 = !DILocation(line: 3813, column: 8, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 3813, column: 7)
!10132 = !DILocation(line: 3813, column: 12, scope: !10131)
!10133 = !DILocation(line: 3813, column: 7, scope: !9926)
!10134 = !DILocation(line: 3814, column: 15, scope: !10131)
!10135 = !DILocation(line: 3814, column: 19, scope: !10131)
!10136 = !DILocation(line: 3814, column: 29, scope: !10131)
!10137 = !DILocation(line: 3814, column: 37, scope: !10131)
!10138 = !DILocation(line: 3814, column: 4, scope: !10131)
!10139 = !DILocation(line: 3815, column: 27, scope: !9926)
!10140 = !DILocation(line: 3815, column: 31, scope: !9926)
!10141 = !DILocation(line: 3815, column: 37, scope: !9926)
!10142 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !9925)
!10143 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !9925)
!10144 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !9925)
!10145 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !9925)
!10146 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !9925)
!10147 = !DILocation(line: 3816, column: 2, scope: !9926)
!10148 = !DILocation(line: 3818, column: 27, scope: !9882)
!10149 = !DILocation(line: 3818, column: 32, scope: !9882)
!10150 = !DILocation(line: 3818, column: 42, scope: !9882)
!10151 = !DILocation(line: 3818, column: 40, scope: !9882)
!10152 = !DILocation(line: 3818, column: 2, scope: !9882)
!10153 = !DILocation(line: 3820, column: 6, scope: !9915)
!10154 = !DILocation(line: 3820, column: 6, scope: !9882)
!10155 = !DILocation(line: 3821, column: 3, scope: !9914)
!10156 = !DILocation(line: 3821, column: 3, scope: !9923)
!10157 = !DILocalVariable(name: "__dummy", scope: !10158, file: !3, line: 3821, type: !312)
!10158 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 3821, column: 3)
!10159 = !DILocation(line: 3821, column: 3, scope: !10158)
!10160 = !DILocalVariable(name: "__dummy2", scope: !10158, file: !3, line: 3821, type: !312)
!10161 = !DILocation(line: 3821, column: 3, scope: !9922)
!10162 = !DILocation(line: 3821, column: 3, scope: !9921)
!10163 = !DILocation(line: 3821, column: 3, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !9921, file: !3, line: 3821, column: 3)
!10165 = !DILocalVariable(name: "__dummy", scope: !10166, file: !3, line: 3821, type: !312)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 3821, column: 3)
!10167 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 3821, column: 3)
!10168 = !DILocation(line: 3821, column: 3, scope: !10166)
!10169 = !DILocalVariable(name: "__dummy2", scope: !10166, file: !3, line: 3821, type: !312)
!10170 = !DILocation(line: 3821, column: 3, scope: !10167)
!10171 = !DILocation(line: 3821, column: 3, scope: !9920)
!10172 = !{i32 -2139317801}
!10173 = !DILocation(line: 3821, column: 3, scope: !9919)
!10174 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !9918)
!10175 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !9918)
!10176 = !DILocation(line: 3822, column: 15, scope: !9914)
!10177 = !DILocation(line: 3822, column: 3, scope: !9914)
!10178 = !DILocation(line: 3823, column: 27, scope: !9914)
!10179 = !DILocation(line: 3823, column: 31, scope: !9914)
!10180 = !DILocation(line: 3823, column: 37, scope: !9914)
!10181 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !9913)
!10182 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !9913)
!10183 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !9913)
!10184 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !9913)
!10185 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !9913)
!10186 = !DILocation(line: 3824, column: 2, scope: !9914)
!10187 = !DILocation(line: 3825, column: 6, scope: !9903)
!10188 = !DILocation(line: 0, scope: !9903)
!10189 = !DILocation(line: 3825, column: 6, scope: !9882)
!10190 = !DILocation(line: 3826, column: 3, scope: !9902)
!10191 = !DILocation(line: 3826, column: 3, scope: !9911)
!10192 = !DILocalVariable(name: "__dummy", scope: !10193, file: !3, line: 3826, type: !312)
!10193 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 3826, column: 3)
!10194 = !DILocation(line: 3826, column: 3, scope: !10193)
!10195 = !DILocalVariable(name: "__dummy2", scope: !10193, file: !3, line: 3826, type: !312)
!10196 = !DILocation(line: 3826, column: 3, scope: !9910)
!10197 = !DILocation(line: 3826, column: 3, scope: !9909)
!10198 = !DILocation(line: 3826, column: 3, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 3826, column: 3)
!10200 = !DILocalVariable(name: "__dummy", scope: !10201, file: !3, line: 3826, type: !312)
!10201 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 3826, column: 3)
!10202 = distinct !DILexicalBlock(scope: !10199, file: !3, line: 3826, column: 3)
!10203 = !DILocation(line: 3826, column: 3, scope: !10201)
!10204 = !DILocalVariable(name: "__dummy2", scope: !10201, file: !3, line: 3826, type: !312)
!10205 = !DILocation(line: 3826, column: 3, scope: !10202)
!10206 = !DILocation(line: 3826, column: 3, scope: !9908)
!10207 = !{i32 -2139316095}
!10208 = !DILocation(line: 3826, column: 3, scope: !9907)
!10209 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !9906)
!10210 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !9906)
!10211 = !DILocation(line: 3827, column: 17, scope: !9902)
!10212 = !DILocation(line: 3827, column: 3, scope: !9902)
!10213 = !DILocation(line: 3828, column: 27, scope: !9902)
!10214 = !DILocation(line: 3828, column: 31, scope: !9902)
!10215 = !DILocation(line: 3828, column: 37, scope: !9902)
!10216 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !9901)
!10217 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !9901)
!10218 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !9901)
!10219 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !9901)
!10220 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !9901)
!10221 = !DILocation(line: 3829, column: 22, scope: !9902)
!10222 = !DILocation(line: 3829, column: 30, scope: !9902)
!10223 = !DILocation(line: 3829, column: 3, scope: !9902)
!10224 = !DILocation(line: 3829, column: 7, scope: !9902)
!10225 = !DILocation(line: 3829, column: 20, scope: !9902)
!10226 = !DILocation(line: 3830, column: 2, scope: !9902)
!10227 = !DILocation(line: 3831, column: 6, scope: !9890)
!10228 = !DILocation(line: 3831, column: 6, scope: !9882)
!10229 = !DILocation(line: 3832, column: 3, scope: !9889)
!10230 = !DILocation(line: 3832, column: 3, scope: !9899)
!10231 = !DILocalVariable(name: "__dummy", scope: !10232, file: !3, line: 3832, type: !312)
!10232 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 3832, column: 3)
!10233 = !DILocation(line: 3832, column: 3, scope: !10232)
!10234 = !DILocalVariable(name: "__dummy2", scope: !10232, file: !3, line: 3832, type: !312)
!10235 = !DILocation(line: 3832, column: 3, scope: !9898)
!10236 = !DILocation(line: 3832, column: 3, scope: !9897)
!10237 = !DILocation(line: 3832, column: 3, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 3832, column: 3)
!10239 = !DILocalVariable(name: "__dummy", scope: !10240, file: !3, line: 3832, type: !312)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 3832, column: 3)
!10241 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 3832, column: 3)
!10242 = !DILocation(line: 3832, column: 3, scope: !10240)
!10243 = !DILocalVariable(name: "__dummy2", scope: !10240, file: !3, line: 3832, type: !312)
!10244 = !DILocation(line: 3832, column: 3, scope: !10241)
!10245 = !DILocation(line: 3832, column: 3, scope: !9896)
!10246 = !{i32 -2139315015}
!10247 = !DILocation(line: 3832, column: 3, scope: !9895)
!10248 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !9894)
!10249 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !9894)
!10250 = !DILocation(line: 3833, column: 8, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 3833, column: 7)
!10252 = !DILocation(line: 3833, column: 12, scope: !10251)
!10253 = !DILocation(line: 3833, column: 7, scope: !9889)
!10254 = !DILocation(line: 3834, column: 23, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 3833, column: 25)
!10256 = !DILocation(line: 3834, column: 27, scope: !10255)
!10257 = !DILocation(line: 3834, column: 4, scope: !10255)
!10258 = !DILocation(line: 3834, column: 8, scope: !10255)
!10259 = !DILocation(line: 3834, column: 21, scope: !10255)
!10260 = !DILocation(line: 3835, column: 4, scope: !10255)
!10261 = !DILocation(line: 3835, column: 8, scope: !10255)
!10262 = !DILocation(line: 3835, column: 22, scope: !10255)
!10263 = !DILocation(line: 3836, column: 15, scope: !10255)
!10264 = !DILocation(line: 3836, column: 19, scope: !10255)
!10265 = !DILocation(line: 3836, column: 29, scope: !10255)
!10266 = !DILocation(line: 3836, column: 37, scope: !10255)
!10267 = !DILocation(line: 3836, column: 4, scope: !10255)
!10268 = !DILocation(line: 3837, column: 3, scope: !10255)
!10269 = !DILocation(line: 3838, column: 27, scope: !9889)
!10270 = !DILocation(line: 3838, column: 31, scope: !9889)
!10271 = !DILocation(line: 3838, column: 37, scope: !9889)
!10272 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !9888)
!10273 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !9888)
!10274 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !9888)
!10275 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !9888)
!10276 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !9888)
!10277 = !DILocation(line: 3839, column: 17, scope: !9889)
!10278 = !DILocation(line: 3839, column: 3, scope: !9889)
!10279 = !DILocation(line: 3840, column: 10, scope: !9889)
!10280 = !DILocation(line: 3840, column: 3, scope: !9889)
!10281 = !DILocation(line: 3843, column: 6, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3843, column: 6)
!10283 = !DILocation(line: 3843, column: 16, scope: !10282)
!10284 = !DILocation(line: 3843, column: 14, scope: !10282)
!10285 = !DILocation(line: 3843, column: 6, scope: !9882)
!10286 = !DILocation(line: 3846, column: 22, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 3843, column: 24)
!10288 = !DILocation(line: 3846, column: 28, scope: !10287)
!10289 = !DILocation(line: 3846, column: 3, scope: !10287)
!10290 = !DILocation(line: 3848, column: 10, scope: !10287)
!10291 = !DILocation(line: 3848, column: 14, scope: !10287)
!10292 = !DILocation(line: 3848, column: 23, scope: !10287)
!10293 = !DILocation(line: 3848, column: 28, scope: !10287)
!10294 = !DILocation(line: 3848, column: 3, scope: !10287)
!10295 = !DILocation(line: 3849, column: 2, scope: !10287)
!10296 = !DILocation(line: 3850, column: 9, scope: !9882)
!10297 = !DILocation(line: 3850, column: 2, scope: !9882)
!10298 = !DILocation(line: 3851, column: 1, scope: !9882)
!10299 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !7053, file: !7053, line: 1870, type: !10300, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{null, !7531, !591}
!10302 = !DILocalVariable(name: "pdev", arg: 1, scope: !10299, file: !7053, line: 1870, type: !7531)
!10303 = !DILocation(line: 1870, column: 52, scope: !10299)
!10304 = !DILocalVariable(name: "data", arg: 2, scope: !10299, file: !7053, line: 1870, type: !591)
!10305 = !DILocation(line: 1870, column: 64, scope: !10299)
!10306 = !DILocation(line: 1872, column: 19, scope: !10299)
!10307 = !DILocation(line: 1872, column: 25, scope: !10299)
!10308 = !DILocation(line: 1872, column: 30, scope: !10299)
!10309 = !DILocation(line: 1872, column: 2, scope: !10299)
!10310 = !DILocation(line: 1873, column: 1, scope: !10299)
!10311 = distinct !DISubprogram(name: "get_hwbase", scope: !3, file: !3, line: 939, type: !10312, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10312 = !DISubroutineType(types: !10313)
!10313 = !{!793, !290}
!10314 = !DILocalVariable(name: "dev", arg: 1, scope: !10311, file: !3, line: 939, type: !290)
!10315 = !DILocation(line: 939, column: 57, scope: !10311)
!10316 = !DILocation(line: 941, column: 40, scope: !10311)
!10317 = !DILocation(line: 941, column: 28, scope: !10311)
!10318 = !DILocation(line: 941, column: 10, scope: !10311)
!10319 = !DILocation(line: 941, column: 47, scope: !10311)
!10320 = !DILocation(line: 941, column: 2, scope: !10311)
!10321 = distinct !DISubprogram(name: "readl", scope: !10322, file: !10322, line: 59, type: !10323, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10322 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!10323 = !DISubroutineType(types: !10324)
!10324 = !{!7, !10325}
!10325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10326, size: 64)
!10326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10327)
!10327 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10328 = !DILocalVariable(name: "addr", arg: 1, scope: !10321, file: !10322, line: 59, type: !10325)
!10329 = !DILocation(line: 59, column: 1, scope: !10321)
!10330 = !DILocalVariable(name: "ret", scope: !10321, file: !10322, line: 59, type: !7)
!10331 = !{i32 -2143240372}
!10332 = distinct !DISubprogram(name: "writel", scope: !10322, file: !10322, line: 67, type: !10333, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10333 = !DISubroutineType(types: !10334)
!10334 = !{null, !7, !10335}
!10335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10327, size: 64)
!10336 = !DILocalVariable(name: "val", arg: 1, scope: !10332, file: !10322, line: 67, type: !7)
!10337 = !DILocation(line: 67, column: 1, scope: !10332)
!10338 = !DILocalVariable(name: "addr", arg: 2, scope: !10332, file: !10322, line: 67, type: !10335)
!10339 = !{i32 -2143237979}
!10340 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !10341, file: !10341, line: 191, type: !10342, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10341 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!10342 = !DISubroutineType(types: !10343)
!10343 = !{!771, !5860}
!10344 = !DILocalVariable(name: "addr", arg: 1, scope: !10340, file: !10341, line: 191, type: !5860)
!10345 = !DILocation(line: 191, column: 50, scope: !10340)
!10346 = !DILocation(line: 195, column: 34, scope: !10340)
!10347 = !DILocation(line: 195, column: 10, scope: !10340)
!10348 = !DILocation(line: 195, column: 40, scope: !10340)
!10349 = !DILocation(line: 195, column: 63, scope: !10340)
!10350 = !DILocation(line: 195, column: 44, scope: !10340)
!10351 = !DILocation(line: 195, column: 43, scope: !10340)
!10352 = !DILocation(line: 0, scope: !10340)
!10353 = !DILocation(line: 195, column: 2, scope: !10340)
!10354 = distinct !DISubprogram(name: "eth_hw_addr_random", scope: !10341, file: !10341, line: 263, type: !406, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10355 = !DILocalVariable(name: "dev", arg: 1, scope: !10354, file: !10341, line: 263, type: !290)
!10356 = !DILocation(line: 263, column: 58, scope: !10354)
!10357 = !DILocation(line: 265, column: 2, scope: !10354)
!10358 = !DILocation(line: 265, column: 7, scope: !10354)
!10359 = !DILocation(line: 265, column: 24, scope: !10354)
!10360 = !DILocation(line: 266, column: 18, scope: !10354)
!10361 = !DILocation(line: 266, column: 23, scope: !10354)
!10362 = !DILocation(line: 266, column: 2, scope: !10354)
!10363 = !DILocation(line: 267, column: 1, scope: !10354)
!10364 = distinct !DISubprogram(name: "nv_copy_mac_to_hw", scope: !3, file: !3, line: 3157, type: !406, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10365 = !DILocalVariable(name: "dev", arg: 1, scope: !10364, file: !3, line: 3157, type: !290)
!10366 = !DILocation(line: 3157, column: 50, scope: !10364)
!10367 = !DILocalVariable(name: "base", scope: !10364, file: !3, line: 3159, type: !793)
!10368 = !DILocation(line: 3159, column: 14, scope: !10364)
!10369 = !DILocation(line: 3159, column: 32, scope: !10364)
!10370 = !DILocation(line: 3159, column: 21, scope: !10364)
!10371 = !DILocalVariable(name: "mac", scope: !10364, file: !3, line: 3160, type: !7803)
!10372 = !DILocation(line: 3160, column: 6, scope: !10364)
!10373 = !DILocation(line: 3162, column: 12, scope: !10364)
!10374 = !DILocation(line: 3162, column: 17, scope: !10364)
!10375 = !DILocation(line: 3162, column: 29, scope: !10364)
!10376 = !DILocation(line: 3162, column: 38, scope: !10364)
!10377 = !DILocation(line: 3162, column: 43, scope: !10364)
!10378 = !DILocation(line: 3162, column: 55, scope: !10364)
!10379 = !DILocation(line: 3162, column: 35, scope: !10364)
!10380 = !DILocation(line: 3163, column: 5, scope: !10364)
!10381 = !DILocation(line: 3163, column: 10, scope: !10364)
!10382 = !DILocation(line: 3163, column: 22, scope: !10364)
!10383 = !DILocation(line: 3162, column: 61, scope: !10364)
!10384 = !DILocation(line: 3163, column: 32, scope: !10364)
!10385 = !DILocation(line: 3163, column: 37, scope: !10364)
!10386 = !DILocation(line: 3163, column: 49, scope: !10364)
!10387 = !DILocation(line: 3163, column: 29, scope: !10364)
!10388 = !DILocation(line: 3162, column: 2, scope: !10364)
!10389 = !DILocation(line: 3162, column: 9, scope: !10364)
!10390 = !DILocation(line: 3164, column: 12, scope: !10364)
!10391 = !DILocation(line: 3164, column: 17, scope: !10364)
!10392 = !DILocation(line: 3164, column: 29, scope: !10364)
!10393 = !DILocation(line: 3164, column: 38, scope: !10364)
!10394 = !DILocation(line: 3164, column: 43, scope: !10364)
!10395 = !DILocation(line: 3164, column: 55, scope: !10364)
!10396 = !DILocation(line: 3164, column: 35, scope: !10364)
!10397 = !DILocation(line: 3164, column: 2, scope: !10364)
!10398 = !DILocation(line: 3164, column: 9, scope: !10364)
!10399 = !DILocation(line: 3166, column: 9, scope: !10364)
!10400 = !DILocation(line: 3166, column: 17, scope: !10364)
!10401 = !DILocation(line: 3166, column: 22, scope: !10364)
!10402 = !DILocation(line: 3166, column: 2, scope: !10364)
!10403 = !DILocation(line: 3167, column: 9, scope: !10364)
!10404 = !DILocation(line: 3167, column: 17, scope: !10364)
!10405 = !DILocation(line: 3167, column: 22, scope: !10364)
!10406 = !DILocation(line: 3167, column: 2, scope: !10364)
!10407 = !DILocation(line: 3168, column: 1, scope: !10364)
!10408 = distinct !DISubprogram(name: "nv_mgmt_acquire_sema", scope: !3, file: !3, line: 5376, type: !402, scopeLine: 5377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10409 = !DILocalVariable(name: "dev", arg: 1, scope: !10408, file: !3, line: 5376, type: !290)
!10410 = !DILocation(line: 5376, column: 52, scope: !10408)
!10411 = !DILocalVariable(name: "np", scope: !10408, file: !3, line: 5378, type: !7446)
!10412 = !DILocation(line: 5378, column: 18, scope: !10408)
!10413 = !DILocation(line: 5378, column: 35, scope: !10408)
!10414 = !DILocation(line: 5378, column: 23, scope: !10408)
!10415 = !DILocalVariable(name: "base", scope: !10408, file: !3, line: 5379, type: !793)
!10416 = !DILocation(line: 5379, column: 14, scope: !10408)
!10417 = !DILocation(line: 5379, column: 32, scope: !10408)
!10418 = !DILocation(line: 5379, column: 21, scope: !10408)
!10419 = !DILocalVariable(name: "i", scope: !10408, file: !3, line: 5380, type: !32)
!10420 = !DILocation(line: 5380, column: 6, scope: !10408)
!10421 = !DILocalVariable(name: "tx_ctrl", scope: !10408, file: !3, line: 5381, type: !987)
!10422 = !DILocation(line: 5381, column: 6, scope: !10408)
!10423 = !DILocalVariable(name: "mgmt_sema", scope: !10408, file: !3, line: 5381, type: !987)
!10424 = !DILocation(line: 5381, column: 15, scope: !10408)
!10425 = !DILocation(line: 5383, column: 9, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 5383, column: 2)
!10427 = !DILocation(line: 5383, column: 7, scope: !10426)
!10428 = !DILocation(line: 5383, column: 14, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 5383, column: 2)
!10430 = !DILocation(line: 5383, column: 16, scope: !10429)
!10431 = !DILocation(line: 5383, column: 2, scope: !10426)
!10432 = !DILocation(line: 5384, column: 21, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 5383, column: 27)
!10434 = !DILocation(line: 5384, column: 26, scope: !10433)
!10435 = !DILocation(line: 5384, column: 15, scope: !10433)
!10436 = !DILocation(line: 5384, column: 53, scope: !10433)
!10437 = !DILocation(line: 5384, column: 13, scope: !10433)
!10438 = !DILocation(line: 5385, column: 7, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 5385, column: 7)
!10440 = !DILocation(line: 5385, column: 17, scope: !10439)
!10441 = !DILocation(line: 5385, column: 7, scope: !10433)
!10442 = !DILocation(line: 5386, column: 4, scope: !10439)
!10443 = !DILocation(line: 5387, column: 3, scope: !10433)
!10444 = !DILocation(line: 5388, column: 2, scope: !10433)
!10445 = !DILocation(line: 5383, column: 23, scope: !10429)
!10446 = !DILocation(line: 5383, column: 2, scope: !10429)
!10447 = distinct !{!10447, !10431, !10448}
!10448 = !DILocation(line: 5388, column: 2, scope: !10426)
!10449 = !DILocation(line: 5390, column: 6, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 5390, column: 6)
!10451 = !DILocation(line: 5390, column: 16, scope: !10450)
!10452 = !DILocation(line: 5390, column: 6, scope: !10408)
!10453 = !DILocation(line: 5391, column: 3, scope: !10450)
!10454 = !DILocation(line: 5393, column: 9, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 5393, column: 2)
!10456 = !DILocation(line: 5393, column: 7, scope: !10455)
!10457 = !DILocation(line: 5393, column: 14, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 5393, column: 2)
!10459 = !DILocation(line: 5393, column: 16, scope: !10458)
!10460 = !DILocation(line: 5393, column: 2, scope: !10455)
!10461 = !DILocation(line: 5394, column: 19, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 5393, column: 26)
!10463 = !DILocation(line: 5394, column: 24, scope: !10462)
!10464 = !DILocation(line: 5394, column: 13, scope: !10462)
!10465 = !DILocation(line: 5394, column: 11, scope: !10462)
!10466 = !DILocation(line: 5395, column: 11, scope: !10462)
!10467 = !DILocation(line: 5396, column: 10, scope: !10462)
!10468 = !DILocation(line: 5396, column: 19, scope: !10462)
!10469 = !DILocation(line: 5396, column: 24, scope: !10462)
!10470 = !DILocation(line: 5396, column: 3, scope: !10462)
!10471 = !DILocation(line: 5399, column: 19, scope: !10462)
!10472 = !DILocation(line: 5399, column: 24, scope: !10462)
!10473 = !DILocation(line: 5399, column: 13, scope: !10462)
!10474 = !DILocation(line: 5399, column: 11, scope: !10462)
!10475 = !DILocation(line: 5400, column: 9, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 5400, column: 7)
!10477 = !DILocation(line: 5400, column: 17, scope: !10476)
!10478 = !DILocation(line: 5400, column: 49, scope: !10476)
!10479 = !DILocation(line: 5400, column: 81, scope: !10476)
!10480 = !DILocation(line: 5401, column: 9, scope: !10476)
!10481 = !DILocation(line: 5401, column: 17, scope: !10476)
!10482 = !DILocation(line: 5401, column: 49, scope: !10476)
!10483 = !DILocation(line: 5400, column: 7, scope: !10462)
!10484 = !DILocation(line: 5402, column: 4, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 5401, column: 83)
!10486 = !DILocation(line: 5402, column: 8, scope: !10485)
!10487 = !DILocation(line: 5402, column: 18, scope: !10485)
!10488 = !DILocation(line: 5403, column: 4, scope: !10485)
!10489 = !DILocation(line: 5405, column: 4, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 5405, column: 4)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 5405, column: 4)
!10492 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 5405, column: 4)
!10493 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 5405, column: 4)
!10494 = !DILocation(line: 5406, column: 2, scope: !10462)
!10495 = !DILocation(line: 5393, column: 22, scope: !10458)
!10496 = !DILocation(line: 5393, column: 2, scope: !10458)
!10497 = distinct !{!10497, !10460, !10498}
!10498 = !DILocation(line: 5406, column: 2, scope: !10455)
!10499 = !DILocation(line: 5408, column: 2, scope: !10408)
!10500 = !DILocation(line: 5409, column: 1, scope: !10408)
!10501 = distinct !DISubprogram(name: "nv_mgmt_get_version", scope: !3, file: !3, line: 5427, type: !402, scopeLine: 5428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10502 = !DILocalVariable(name: "dev", arg: 1, scope: !10501, file: !3, line: 5427, type: !290)
!10503 = !DILocation(line: 5427, column: 51, scope: !10501)
!10504 = !DILocalVariable(name: "np", scope: !10501, file: !3, line: 5429, type: !7446)
!10505 = !DILocation(line: 5429, column: 18, scope: !10501)
!10506 = !DILocation(line: 5429, column: 35, scope: !10501)
!10507 = !DILocation(line: 5429, column: 23, scope: !10501)
!10508 = !DILocalVariable(name: "base", scope: !10501, file: !3, line: 5430, type: !793)
!10509 = !DILocation(line: 5430, column: 14, scope: !10501)
!10510 = !DILocation(line: 5430, column: 32, scope: !10501)
!10511 = !DILocation(line: 5430, column: 21, scope: !10501)
!10512 = !DILocalVariable(name: "data_ready", scope: !10501, file: !3, line: 5431, type: !987)
!10513 = !DILocation(line: 5431, column: 6, scope: !10501)
!10514 = !DILocation(line: 5431, column: 25, scope: !10501)
!10515 = !DILocation(line: 5431, column: 30, scope: !10501)
!10516 = !DILocation(line: 5431, column: 19, scope: !10501)
!10517 = !DILocalVariable(name: "data_ready2", scope: !10501, file: !3, line: 5432, type: !987)
!10518 = !DILocation(line: 5432, column: 6, scope: !10501)
!10519 = !DILocalVariable(name: "start", scope: !10501, file: !3, line: 5433, type: !312)
!10520 = !DILocation(line: 5433, column: 16, scope: !10501)
!10521 = !DILocalVariable(name: "ready", scope: !10501, file: !3, line: 5434, type: !32)
!10522 = !DILocation(line: 5434, column: 6, scope: !10501)
!10523 = !DILocation(line: 5436, column: 35, scope: !10501)
!10524 = !DILocation(line: 5436, column: 40, scope: !10501)
!10525 = !DILocation(line: 5436, column: 2, scope: !10501)
!10526 = !DILocation(line: 5437, column: 9, scope: !10501)
!10527 = !DILocation(line: 5437, column: 20, scope: !10501)
!10528 = !DILocation(line: 5437, column: 48, scope: !10501)
!10529 = !DILocation(line: 5437, column: 53, scope: !10501)
!10530 = !DILocation(line: 5437, column: 2, scope: !10501)
!10531 = !DILocation(line: 5438, column: 10, scope: !10501)
!10532 = !DILocation(line: 5438, column: 8, scope: !10501)
!10533 = !DILocation(line: 5439, column: 2, scope: !10501)
!10534 = !DILocation(line: 5439, column: 9, scope: !10501)
!10535 = !DILocation(line: 5440, column: 23, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 5439, column: 45)
!10537 = !DILocation(line: 5440, column: 28, scope: !10536)
!10538 = !DILocation(line: 5440, column: 17, scope: !10536)
!10539 = !DILocation(line: 5440, column: 15, scope: !10536)
!10540 = !DILocation(line: 5441, column: 8, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 5441, column: 7)
!10542 = !DILocation(line: 5441, column: 19, scope: !10541)
!10543 = !DILocation(line: 5441, column: 51, scope: !10541)
!10544 = !DILocation(line: 5441, column: 63, scope: !10541)
!10545 = !DILocation(line: 5441, column: 47, scope: !10541)
!10546 = !DILocation(line: 5441, column: 7, scope: !10536)
!10547 = !DILocation(line: 5442, column: 10, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 5441, column: 92)
!10549 = !DILocation(line: 5443, column: 4, scope: !10548)
!10550 = !DILocation(line: 5445, column: 3, scope: !10536)
!10551 = distinct !{!10551, !10533, !10552}
!10552 = !DILocation(line: 5446, column: 2, scope: !10501)
!10553 = !DILocation(line: 5448, column: 7, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 5448, column: 6)
!10555 = !DILocation(line: 5448, column: 13, scope: !10554)
!10556 = !DILocation(line: 5448, column: 17, scope: !10554)
!10557 = !DILocation(line: 5448, column: 29, scope: !10554)
!10558 = !DILocation(line: 5448, column: 6, scope: !10501)
!10559 = !DILocation(line: 5449, column: 3, scope: !10554)
!10560 = !DILocation(line: 5451, column: 27, scope: !10501)
!10561 = !DILocation(line: 5451, column: 32, scope: !10501)
!10562 = !DILocation(line: 5451, column: 21, scope: !10501)
!10563 = !DILocation(line: 5451, column: 56, scope: !10501)
!10564 = !DILocation(line: 5451, column: 2, scope: !10501)
!10565 = !DILocation(line: 5451, column: 6, scope: !10501)
!10566 = !DILocation(line: 5451, column: 19, scope: !10501)
!10567 = !DILocation(line: 5453, column: 2, scope: !10501)
!10568 = !DILocation(line: 5454, column: 1, scope: !10501)
!10569 = distinct !DISubprogram(name: "mii_rw", scope: !3, file: !3, line: 1143, type: !801, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10570 = !DILocalVariable(name: "dev", arg: 1, scope: !10569, file: !3, line: 1143, type: !290)
!10571 = !DILocation(line: 1143, column: 38, scope: !10569)
!10572 = !DILocalVariable(name: "addr", arg: 2, scope: !10569, file: !3, line: 1143, type: !32)
!10573 = !DILocation(line: 1143, column: 47, scope: !10569)
!10574 = !DILocalVariable(name: "miireg", arg: 3, scope: !10569, file: !3, line: 1143, type: !32)
!10575 = !DILocation(line: 1143, column: 57, scope: !10569)
!10576 = !DILocalVariable(name: "value", arg: 4, scope: !10569, file: !3, line: 1143, type: !32)
!10577 = !DILocation(line: 1143, column: 69, scope: !10569)
!10578 = !DILocalVariable(name: "base", scope: !10569, file: !3, line: 1145, type: !793)
!10579 = !DILocation(line: 1145, column: 14, scope: !10569)
!10580 = !DILocation(line: 1145, column: 32, scope: !10569)
!10581 = !DILocation(line: 1145, column: 21, scope: !10569)
!10582 = !DILocalVariable(name: "reg", scope: !10569, file: !3, line: 1146, type: !987)
!10583 = !DILocation(line: 1146, column: 6, scope: !10569)
!10584 = !DILocalVariable(name: "retval", scope: !10569, file: !3, line: 1147, type: !32)
!10585 = !DILocation(line: 1147, column: 6, scope: !10569)
!10586 = !DILocation(line: 1149, column: 32, scope: !10569)
!10587 = !DILocation(line: 1149, column: 37, scope: !10569)
!10588 = !DILocation(line: 1149, column: 2, scope: !10569)
!10589 = !DILocation(line: 1151, column: 14, scope: !10569)
!10590 = !DILocation(line: 1151, column: 19, scope: !10569)
!10591 = !DILocation(line: 1151, column: 8, scope: !10569)
!10592 = !DILocation(line: 1151, column: 6, scope: !10569)
!10593 = !DILocation(line: 1152, column: 6, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 1152, column: 6)
!10595 = !DILocation(line: 1152, column: 10, scope: !10594)
!10596 = !DILocation(line: 1152, column: 6, scope: !10569)
!10597 = !DILocation(line: 1153, column: 30, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 1152, column: 32)
!10599 = !DILocation(line: 1153, column: 35, scope: !10598)
!10600 = !DILocation(line: 1153, column: 3, scope: !10598)
!10601 = !DILocation(line: 1154, column: 3, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 1154, column: 3)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 1154, column: 3)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !3, line: 1154, column: 3)
!10605 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 1154, column: 3)
!10606 = !DILocation(line: 1155, column: 2, scope: !10598)
!10607 = !DILocation(line: 1157, column: 9, scope: !10569)
!10608 = !DILocation(line: 1157, column: 14, scope: !10569)
!10609 = !DILocation(line: 1157, column: 43, scope: !10569)
!10610 = !DILocation(line: 1157, column: 41, scope: !10569)
!10611 = !DILocation(line: 1157, column: 6, scope: !10569)
!10612 = !DILocation(line: 1158, column: 6, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 1158, column: 6)
!10614 = !DILocation(line: 1158, column: 12, scope: !10613)
!10615 = !DILocation(line: 1158, column: 6, scope: !10569)
!10616 = !DILocation(line: 1159, column: 10, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 1158, column: 25)
!10618 = !DILocation(line: 1159, column: 17, scope: !10617)
!10619 = !DILocation(line: 1159, column: 22, scope: !10617)
!10620 = !DILocation(line: 1159, column: 3, scope: !10617)
!10621 = !DILocation(line: 1160, column: 7, scope: !10617)
!10622 = !DILocation(line: 1161, column: 2, scope: !10617)
!10623 = !DILocation(line: 1162, column: 9, scope: !10569)
!10624 = !DILocation(line: 1162, column: 14, scope: !10569)
!10625 = !DILocation(line: 1162, column: 19, scope: !10569)
!10626 = !DILocation(line: 1162, column: 2, scope: !10569)
!10627 = !DILocation(line: 1164, column: 16, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 1164, column: 6)
!10629 = !DILocation(line: 1164, column: 6, scope: !10628)
!10630 = !DILocation(line: 1164, column: 6, scope: !10569)
!10631 = !DILocation(line: 1166, column: 10, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 1165, column: 42)
!10633 = !DILocation(line: 1167, column: 2, scope: !10632)
!10634 = !DILocation(line: 1167, column: 13, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 1167, column: 13)
!10636 = !DILocation(line: 1167, column: 19, scope: !10635)
!10637 = !DILocation(line: 1167, column: 13, scope: !10628)
!10638 = !DILocation(line: 1169, column: 10, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 1167, column: 32)
!10640 = !DILocation(line: 1170, column: 2, scope: !10639)
!10641 = !DILocation(line: 1170, column: 19, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 1170, column: 13)
!10643 = !DILocation(line: 1170, column: 24, scope: !10642)
!10644 = !DILocation(line: 1170, column: 13, scope: !10642)
!10645 = !DILocation(line: 1170, column: 42, scope: !10642)
!10646 = !DILocation(line: 1170, column: 13, scope: !10635)
!10647 = !DILocation(line: 1171, column: 10, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1170, column: 65)
!10649 = !DILocation(line: 1172, column: 2, scope: !10648)
!10650 = !DILocation(line: 1173, column: 18, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1172, column: 9)
!10652 = !DILocation(line: 1173, column: 23, scope: !10651)
!10653 = !DILocation(line: 1173, column: 12, scope: !10651)
!10654 = !DILocation(line: 1173, column: 10, scope: !10651)
!10655 = !DILocation(line: 1176, column: 9, scope: !10569)
!10656 = !DILocation(line: 1176, column: 2, scope: !10569)
!10657 = distinct !DISubprogram(name: "phy_init", scope: !3, file: !3, line: 1387, type: !402, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10658 = !DILocalVariable(name: "dev", arg: 1, scope: !10657, file: !3, line: 1387, type: !290)
!10659 = !DILocation(line: 1387, column: 40, scope: !10657)
!10660 = !DILocalVariable(name: "np", scope: !10657, file: !3, line: 1389, type: !7446)
!10661 = !DILocation(line: 1389, column: 18, scope: !10657)
!10662 = !DILocation(line: 1389, column: 34, scope: !10657)
!10663 = !DILocation(line: 1389, column: 23, scope: !10657)
!10664 = !DILocalVariable(name: "base", scope: !10657, file: !3, line: 1390, type: !793)
!10665 = !DILocation(line: 1390, column: 14, scope: !10657)
!10666 = !DILocation(line: 1390, column: 32, scope: !10657)
!10667 = !DILocation(line: 1390, column: 21, scope: !10657)
!10668 = !DILocalVariable(name: "phyinterface", scope: !10657, file: !3, line: 1391, type: !987)
!10669 = !DILocation(line: 1391, column: 6, scope: !10657)
!10670 = !DILocalVariable(name: "mii_status", scope: !10657, file: !3, line: 1392, type: !987)
!10671 = !DILocation(line: 1392, column: 6, scope: !10657)
!10672 = !DILocalVariable(name: "mii_control", scope: !10657, file: !3, line: 1392, type: !987)
!10673 = !DILocation(line: 1392, column: 18, scope: !10657)
!10674 = !DILocalVariable(name: "mii_control_1000", scope: !10657, file: !3, line: 1392, type: !987)
!10675 = !DILocation(line: 1392, column: 31, scope: !10657)
!10676 = !DILocalVariable(name: "reg", scope: !10657, file: !3, line: 1392, type: !987)
!10677 = !DILocation(line: 1392, column: 49, scope: !10657)
!10678 = !DILocation(line: 1395, column: 6, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1395, column: 6)
!10680 = !DILocation(line: 1395, column: 10, scope: !10679)
!10681 = !DILocation(line: 1395, column: 20, scope: !10679)
!10682 = !DILocation(line: 1395, column: 6, scope: !10657)
!10683 = !DILocation(line: 1396, column: 16, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 1395, column: 48)
!10685 = !DILocation(line: 1396, column: 21, scope: !10684)
!10686 = !DILocation(line: 1396, column: 25, scope: !10684)
!10687 = !DILocation(line: 1396, column: 9, scope: !10684)
!10688 = !DILocation(line: 1396, column: 7, scope: !10684)
!10689 = !DILocation(line: 1397, column: 7, scope: !10684)
!10690 = !DILocation(line: 1398, column: 14, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 1398, column: 7)
!10692 = !DILocation(line: 1398, column: 19, scope: !10691)
!10693 = !DILocation(line: 1398, column: 23, scope: !10691)
!10694 = !DILocation(line: 1398, column: 45, scope: !10691)
!10695 = !DILocation(line: 1398, column: 7, scope: !10691)
!10696 = !DILocation(line: 1398, column: 7, scope: !10684)
!10697 = !DILocation(line: 1399, column: 16, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 1398, column: 51)
!10699 = !DILocation(line: 1400, column: 18, scope: !10698)
!10700 = !DILocation(line: 1400, column: 22, scope: !10698)
!10701 = !DILocation(line: 1400, column: 9, scope: !10698)
!10702 = !DILocation(line: 1399, column: 4, scope: !10698)
!10703 = !DILocation(line: 1401, column: 4, scope: !10698)
!10704 = !DILocation(line: 1403, column: 2, scope: !10684)
!10705 = !DILocation(line: 1404, column: 6, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1404, column: 6)
!10707 = !DILocation(line: 1404, column: 10, scope: !10706)
!10708 = !DILocation(line: 1404, column: 18, scope: !10706)
!10709 = !DILocation(line: 1404, column: 6, scope: !10657)
!10710 = !DILocation(line: 1405, column: 7, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 1405, column: 7)
!10712 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 1404, column: 38)
!10713 = !DILocation(line: 1405, column: 11, scope: !10711)
!10714 = !DILocation(line: 1405, column: 21, scope: !10711)
!10715 = !DILocation(line: 1405, column: 47, scope: !10711)
!10716 = !DILocation(line: 1406, column: 7, scope: !10711)
!10717 = !DILocation(line: 1406, column: 11, scope: !10711)
!10718 = !DILocation(line: 1406, column: 19, scope: !10711)
!10719 = !DILocation(line: 1405, column: 7, scope: !10712)
!10720 = !DILocation(line: 1407, column: 27, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 1407, column: 8)
!10722 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 1406, column: 45)
!10723 = !DILocation(line: 1407, column: 32, scope: !10721)
!10724 = !DILocation(line: 1407, column: 8, scope: !10721)
!10725 = !DILocation(line: 1407, column: 8, scope: !10722)
!10726 = !DILocation(line: 1408, column: 17, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1407, column: 37)
!10728 = !DILocation(line: 1409, column: 19, scope: !10727)
!10729 = !DILocation(line: 1409, column: 23, scope: !10727)
!10730 = !DILocation(line: 1409, column: 10, scope: !10727)
!10731 = !DILocation(line: 1408, column: 5, scope: !10727)
!10732 = !DILocation(line: 1410, column: 5, scope: !10727)
!10733 = !DILocation(line: 1412, column: 3, scope: !10722)
!10734 = !DILocation(line: 1412, column: 14, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 1412, column: 14)
!10736 = !DILocation(line: 1412, column: 18, scope: !10735)
!10737 = !DILocation(line: 1412, column: 28, scope: !10735)
!10738 = !DILocation(line: 1412, column: 54, scope: !10735)
!10739 = !DILocation(line: 1413, column: 7, scope: !10735)
!10740 = !DILocation(line: 1413, column: 11, scope: !10735)
!10741 = !DILocation(line: 1413, column: 19, scope: !10735)
!10742 = !DILocation(line: 1412, column: 14, scope: !10711)
!10743 = !DILocation(line: 1414, column: 27, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 1414, column: 8)
!10745 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 1413, column: 45)
!10746 = !DILocation(line: 1414, column: 32, scope: !10744)
!10747 = !DILocation(line: 1414, column: 8, scope: !10744)
!10748 = !DILocation(line: 1414, column: 8, scope: !10745)
!10749 = !DILocation(line: 1415, column: 17, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 1414, column: 37)
!10751 = !DILocation(line: 1416, column: 19, scope: !10750)
!10752 = !DILocation(line: 1416, column: 23, scope: !10750)
!10753 = !DILocation(line: 1416, column: 10, scope: !10750)
!10754 = !DILocation(line: 1415, column: 5, scope: !10750)
!10755 = !DILocation(line: 1417, column: 5, scope: !10750)
!10756 = !DILocation(line: 1419, column: 3, scope: !10745)
!10757 = !DILocation(line: 1419, column: 14, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 1419, column: 14)
!10759 = !DILocation(line: 1419, column: 18, scope: !10758)
!10760 = !DILocation(line: 1419, column: 28, scope: !10758)
!10761 = !DILocation(line: 1419, column: 14, scope: !10735)
!10762 = !DILocation(line: 1420, column: 26, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 1420, column: 8)
!10764 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1419, column: 55)
!10765 = !DILocation(line: 1420, column: 31, scope: !10763)
!10766 = !DILocation(line: 1420, column: 8, scope: !10763)
!10767 = !DILocation(line: 1420, column: 8, scope: !10764)
!10768 = !DILocation(line: 1421, column: 17, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 1420, column: 36)
!10770 = !DILocation(line: 1422, column: 19, scope: !10769)
!10771 = !DILocation(line: 1422, column: 23, scope: !10769)
!10772 = !DILocation(line: 1422, column: 10, scope: !10769)
!10773 = !DILocation(line: 1421, column: 5, scope: !10769)
!10774 = !DILocation(line: 1423, column: 5, scope: !10769)
!10775 = !DILocation(line: 1425, column: 3, scope: !10764)
!10776 = !DILocation(line: 1426, column: 2, scope: !10712)
!10777 = !DILocation(line: 1429, column: 15, scope: !10657)
!10778 = !DILocation(line: 1429, column: 20, scope: !10657)
!10779 = !DILocation(line: 1429, column: 24, scope: !10657)
!10780 = !DILocation(line: 1429, column: 8, scope: !10657)
!10781 = !DILocation(line: 1429, column: 6, scope: !10657)
!10782 = !DILocation(line: 1430, column: 6, scope: !10657)
!10783 = !DILocation(line: 1433, column: 13, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1433, column: 6)
!10785 = !DILocation(line: 1433, column: 18, scope: !10784)
!10786 = !DILocation(line: 1433, column: 22, scope: !10784)
!10787 = !DILocation(line: 1433, column: 46, scope: !10784)
!10788 = !DILocation(line: 1433, column: 6, scope: !10784)
!10789 = !DILocation(line: 1433, column: 6, scope: !10657)
!10790 = !DILocation(line: 1434, column: 15, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 1433, column: 52)
!10792 = !DILocation(line: 1435, column: 17, scope: !10791)
!10793 = !DILocation(line: 1435, column: 21, scope: !10791)
!10794 = !DILocation(line: 1435, column: 8, scope: !10791)
!10795 = !DILocation(line: 1434, column: 3, scope: !10791)
!10796 = !DILocation(line: 1436, column: 3, scope: !10791)
!10797 = !DILocation(line: 1440, column: 23, scope: !10657)
!10798 = !DILocation(line: 1440, column: 28, scope: !10657)
!10799 = !DILocation(line: 1440, column: 17, scope: !10657)
!10800 = !DILocation(line: 1440, column: 15, scope: !10657)
!10801 = !DILocation(line: 1443, column: 22, scope: !10657)
!10802 = !DILocation(line: 1443, column: 27, scope: !10657)
!10803 = !DILocation(line: 1443, column: 31, scope: !10657)
!10804 = !DILocation(line: 1443, column: 15, scope: !10657)
!10805 = !DILocation(line: 1443, column: 13, scope: !10657)
!10806 = !DILocation(line: 1444, column: 6, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1444, column: 6)
!10808 = !DILocation(line: 1444, column: 17, scope: !10807)
!10809 = !DILocation(line: 1444, column: 6, scope: !10657)
!10810 = !DILocation(line: 1445, column: 3, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 1444, column: 32)
!10812 = !DILocation(line: 1445, column: 7, scope: !10811)
!10813 = !DILocation(line: 1445, column: 15, scope: !10811)
!10814 = !DILocation(line: 1446, column: 29, scope: !10811)
!10815 = !DILocation(line: 1446, column: 34, scope: !10811)
!10816 = !DILocation(line: 1446, column: 38, scope: !10811)
!10817 = !DILocation(line: 1446, column: 22, scope: !10811)
!10818 = !DILocation(line: 1446, column: 20, scope: !10811)
!10819 = !DILocation(line: 1448, column: 20, scope: !10811)
!10820 = !DILocation(line: 1449, column: 7, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 1449, column: 7)
!10822 = !DILocation(line: 1449, column: 20, scope: !10821)
!10823 = !DILocation(line: 1449, column: 7, scope: !10811)
!10824 = !DILocation(line: 1450, column: 21, scope: !10821)
!10825 = !DILocation(line: 1450, column: 4, scope: !10821)
!10826 = !DILocation(line: 1452, column: 21, scope: !10821)
!10827 = !DILocation(line: 1454, column: 14, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 1454, column: 7)
!10829 = !DILocation(line: 1454, column: 19, scope: !10828)
!10830 = !DILocation(line: 1454, column: 23, scope: !10828)
!10831 = !DILocation(line: 1454, column: 46, scope: !10828)
!10832 = !DILocation(line: 1454, column: 7, scope: !10828)
!10833 = !DILocation(line: 1454, column: 7, scope: !10811)
!10834 = !DILocation(line: 1455, column: 16, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 1454, column: 65)
!10836 = !DILocation(line: 1456, column: 18, scope: !10835)
!10837 = !DILocation(line: 1456, column: 22, scope: !10835)
!10838 = !DILocation(line: 1456, column: 9, scope: !10835)
!10839 = !DILocation(line: 1455, column: 4, scope: !10835)
!10840 = !DILocation(line: 1457, column: 4, scope: !10835)
!10841 = !DILocation(line: 1459, column: 2, scope: !10811)
!10842 = !DILocation(line: 1460, column: 3, scope: !10807)
!10843 = !DILocation(line: 1460, column: 7, scope: !10807)
!10844 = !DILocation(line: 1460, column: 15, scope: !10807)
!10845 = !DILocation(line: 1462, column: 23, scope: !10657)
!10846 = !DILocation(line: 1462, column: 28, scope: !10657)
!10847 = !DILocation(line: 1462, column: 32, scope: !10657)
!10848 = !DILocation(line: 1462, column: 16, scope: !10657)
!10849 = !DILocation(line: 1462, column: 14, scope: !10657)
!10850 = !DILocation(line: 1463, column: 14, scope: !10657)
!10851 = !DILocation(line: 1465, column: 6, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1465, column: 6)
!10853 = !DILocation(line: 1465, column: 10, scope: !10852)
!10854 = !DILocation(line: 1465, column: 18, scope: !10852)
!10855 = !DILocation(line: 1465, column: 37, scope: !10852)
!10856 = !DILocation(line: 1466, column: 6, scope: !10852)
!10857 = !DILocation(line: 1466, column: 10, scope: !10852)
!10858 = !DILocation(line: 1466, column: 20, scope: !10852)
!10859 = !DILocation(line: 1466, column: 46, scope: !10852)
!10860 = !DILocation(line: 1467, column: 6, scope: !10852)
!10861 = !DILocation(line: 1467, column: 10, scope: !10852)
!10862 = !DILocation(line: 1467, column: 18, scope: !10852)
!10863 = !DILocation(line: 1465, column: 6, scope: !10657)
!10864 = !DILocation(line: 1469, column: 15, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1467, column: 44)
!10866 = !DILocation(line: 1470, column: 14, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 1470, column: 7)
!10868 = !DILocation(line: 1470, column: 19, scope: !10867)
!10869 = !DILocation(line: 1470, column: 23, scope: !10867)
!10870 = !DILocation(line: 1470, column: 42, scope: !10867)
!10871 = !DILocation(line: 1470, column: 7, scope: !10867)
!10872 = !DILocation(line: 1470, column: 7, scope: !10865)
!10873 = !DILocation(line: 1471, column: 16, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 1470, column: 56)
!10875 = !DILocation(line: 1472, column: 18, scope: !10874)
!10876 = !DILocation(line: 1472, column: 22, scope: !10874)
!10877 = !DILocation(line: 1472, column: 9, scope: !10874)
!10878 = !DILocation(line: 1471, column: 4, scope: !10874)
!10879 = !DILocation(line: 1473, column: 4, scope: !10874)
!10880 = !DILocation(line: 1475, column: 2, scope: !10865)
!10881 = !DILocation(line: 1479, column: 17, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10883, file: !3, line: 1479, column: 7)
!10883 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1475, column: 9)
!10884 = !DILocation(line: 1479, column: 22, scope: !10882)
!10885 = !DILocation(line: 1479, column: 7, scope: !10882)
!10886 = !DILocation(line: 1479, column: 7, scope: !10883)
!10887 = !DILocation(line: 1480, column: 16, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1479, column: 36)
!10889 = !DILocation(line: 1481, column: 18, scope: !10888)
!10890 = !DILocation(line: 1481, column: 22, scope: !10888)
!10891 = !DILocation(line: 1481, column: 9, scope: !10888)
!10892 = !DILocation(line: 1480, column: 4, scope: !10888)
!10893 = !DILocation(line: 1482, column: 4, scope: !10888)
!10894 = !DILocation(line: 1487, column: 6, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1487, column: 6)
!10896 = !DILocation(line: 1487, column: 10, scope: !10895)
!10897 = !DILocation(line: 1487, column: 18, scope: !10895)
!10898 = !DILocation(line: 1487, column: 6, scope: !10657)
!10899 = !DILocation(line: 1488, column: 19, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 1488, column: 7)
!10901 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 1487, column: 37)
!10902 = !DILocation(line: 1488, column: 24, scope: !10900)
!10903 = !DILocation(line: 1488, column: 28, scope: !10900)
!10904 = !DILocation(line: 1488, column: 7, scope: !10900)
!10905 = !DILocation(line: 1488, column: 7, scope: !10901)
!10906 = !DILocation(line: 1489, column: 16, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 1488, column: 43)
!10908 = !DILocation(line: 1490, column: 18, scope: !10907)
!10909 = !DILocation(line: 1490, column: 22, scope: !10907)
!10910 = !DILocation(line: 1490, column: 9, scope: !10907)
!10911 = !DILocation(line: 1489, column: 4, scope: !10907)
!10912 = !DILocation(line: 1491, column: 4, scope: !10907)
!10913 = !DILocation(line: 1493, column: 2, scope: !10901)
!10914 = !DILocation(line: 1493, column: 13, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 1493, column: 13)
!10916 = !DILocation(line: 1493, column: 17, scope: !10915)
!10917 = !DILocation(line: 1493, column: 25, scope: !10915)
!10918 = !DILocation(line: 1493, column: 13, scope: !10895)
!10919 = !DILocation(line: 1494, column: 20, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 1494, column: 7)
!10921 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 1493, column: 45)
!10922 = !DILocation(line: 1494, column: 25, scope: !10920)
!10923 = !DILocation(line: 1494, column: 7, scope: !10920)
!10924 = !DILocation(line: 1494, column: 7, scope: !10921)
!10925 = !DILocation(line: 1495, column: 16, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 1494, column: 30)
!10927 = !DILocation(line: 1496, column: 18, scope: !10926)
!10928 = !DILocation(line: 1496, column: 22, scope: !10926)
!10929 = !DILocation(line: 1496, column: 9, scope: !10926)
!10930 = !DILocation(line: 1495, column: 4, scope: !10926)
!10931 = !DILocation(line: 1497, column: 4, scope: !10926)
!10932 = !DILocation(line: 1499, column: 2, scope: !10921)
!10933 = !DILocation(line: 1499, column: 13, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 1499, column: 13)
!10935 = !DILocation(line: 1499, column: 17, scope: !10934)
!10936 = !DILocation(line: 1499, column: 25, scope: !10934)
!10937 = !DILocation(line: 1499, column: 13, scope: !10915)
!10938 = !DILocation(line: 1500, column: 7, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 1500, column: 7)
!10940 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1499, column: 45)
!10941 = !DILocation(line: 1500, column: 11, scope: !10939)
!10942 = !DILocation(line: 1500, column: 21, scope: !10939)
!10943 = !DILocation(line: 1500, column: 47, scope: !10939)
!10944 = !DILocation(line: 1501, column: 7, scope: !10939)
!10945 = !DILocation(line: 1501, column: 11, scope: !10939)
!10946 = !DILocation(line: 1501, column: 19, scope: !10939)
!10947 = !DILocation(line: 1500, column: 7, scope: !10940)
!10948 = !DILocation(line: 1503, column: 27, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 1503, column: 8)
!10950 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 1501, column: 45)
!10951 = !DILocation(line: 1503, column: 32, scope: !10949)
!10952 = !DILocation(line: 1503, column: 8, scope: !10949)
!10953 = !DILocation(line: 1503, column: 8, scope: !10950)
!10954 = !DILocation(line: 1504, column: 17, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 1503, column: 37)
!10956 = !DILocation(line: 1505, column: 19, scope: !10955)
!10957 = !DILocation(line: 1505, column: 23, scope: !10955)
!10958 = !DILocation(line: 1505, column: 10, scope: !10955)
!10959 = !DILocation(line: 1504, column: 5, scope: !10955)
!10960 = !DILocation(line: 1506, column: 5, scope: !10955)
!10961 = !DILocation(line: 1508, column: 3, scope: !10950)
!10962 = !DILocation(line: 1508, column: 14, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 1508, column: 14)
!10964 = !DILocation(line: 1508, column: 18, scope: !10963)
!10965 = !DILocation(line: 1508, column: 28, scope: !10963)
!10966 = !DILocation(line: 1508, column: 14, scope: !10939)
!10967 = !DILocation(line: 1509, column: 26, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 1509, column: 8)
!10969 = distinct !DILexicalBlock(scope: !10963, file: !3, line: 1508, column: 55)
!10970 = !DILocation(line: 1509, column: 31, scope: !10968)
!10971 = !DILocation(line: 1509, column: 8, scope: !10968)
!10972 = !DILocation(line: 1509, column: 35, scope: !10968)
!10973 = !DILocation(line: 1510, column: 32, scope: !10968)
!10974 = !DILocation(line: 1510, column: 37, scope: !10968)
!10975 = !DILocation(line: 1510, column: 8, scope: !10968)
!10976 = !DILocation(line: 1509, column: 8, scope: !10969)
!10977 = !DILocation(line: 1511, column: 17, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 1510, column: 42)
!10979 = !DILocation(line: 1512, column: 19, scope: !10978)
!10980 = !DILocation(line: 1512, column: 23, scope: !10978)
!10981 = !DILocation(line: 1512, column: 10, scope: !10978)
!10982 = !DILocation(line: 1511, column: 5, scope: !10978)
!10983 = !DILocation(line: 1513, column: 5, scope: !10978)
!10984 = !DILocation(line: 1515, column: 3, scope: !10969)
!10985 = !DILocation(line: 1516, column: 2, scope: !10940)
!10986 = !DILocation(line: 1519, column: 9, scope: !10657)
!10987 = !DILocation(line: 1519, column: 14, scope: !10657)
!10988 = !DILocation(line: 1519, column: 18, scope: !10657)
!10989 = !DILocation(line: 1519, column: 42, scope: !10657)
!10990 = !DILocation(line: 1519, column: 2, scope: !10657)
!10991 = !DILocation(line: 1522, column: 23, scope: !10657)
!10992 = !DILocation(line: 1522, column: 28, scope: !10657)
!10993 = !DILocation(line: 1522, column: 32, scope: !10657)
!10994 = !DILocation(line: 1522, column: 16, scope: !10657)
!10995 = !DILocation(line: 1522, column: 14, scope: !10657)
!10996 = !DILocation(line: 1523, column: 14, scope: !10657)
!10997 = !DILocation(line: 1524, column: 6, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1524, column: 6)
!10999 = !DILocation(line: 1524, column: 6, scope: !10657)
!11000 = !DILocation(line: 1525, column: 15, scope: !10998)
!11001 = !DILocation(line: 1525, column: 3, scope: !10998)
!11002 = !DILocation(line: 1526, column: 13, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 1526, column: 6)
!11004 = !DILocation(line: 1526, column: 18, scope: !11003)
!11005 = !DILocation(line: 1526, column: 22, scope: !11003)
!11006 = !DILocation(line: 1526, column: 41, scope: !11003)
!11007 = !DILocation(line: 1526, column: 6, scope: !11003)
!11008 = !DILocation(line: 1526, column: 6, scope: !10657)
!11009 = !DILocation(line: 1527, column: 3, scope: !11003)
!11010 = !DILocation(line: 1529, column: 2, scope: !10657)
!11011 = !DILocation(line: 1530, column: 1, scope: !10657)
!11012 = distinct !DISubprogram(name: "nv_update_pause", scope: !3, file: !3, line: 3271, type: !5579, scopeLine: 3272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11013 = !DILocalVariable(name: "dev", arg: 1, scope: !11012, file: !3, line: 3271, type: !290)
!11014 = !DILocation(line: 3271, column: 48, scope: !11012)
!11015 = !DILocalVariable(name: "pause_flags", arg: 2, scope: !11012, file: !3, line: 3271, type: !987)
!11016 = !DILocation(line: 3271, column: 57, scope: !11012)
!11017 = !DILocalVariable(name: "np", scope: !11012, file: !3, line: 3273, type: !7446)
!11018 = !DILocation(line: 3273, column: 18, scope: !11012)
!11019 = !DILocation(line: 3273, column: 35, scope: !11012)
!11020 = !DILocation(line: 3273, column: 23, scope: !11012)
!11021 = !DILocalVariable(name: "base", scope: !11012, file: !3, line: 3274, type: !793)
!11022 = !DILocation(line: 3274, column: 14, scope: !11012)
!11023 = !DILocation(line: 3274, column: 32, scope: !11012)
!11024 = !DILocation(line: 3274, column: 21, scope: !11012)
!11025 = !DILocation(line: 3276, column: 2, scope: !11012)
!11026 = !DILocation(line: 3276, column: 6, scope: !11012)
!11027 = !DILocation(line: 3276, column: 18, scope: !11012)
!11028 = !DILocation(line: 3278, column: 6, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 3278, column: 6)
!11030 = !DILocation(line: 3278, column: 10, scope: !11029)
!11031 = !DILocation(line: 3278, column: 22, scope: !11029)
!11032 = !DILocation(line: 3278, column: 6, scope: !11012)
!11033 = !DILocalVariable(name: "pff", scope: !11034, file: !3, line: 3279, type: !987)
!11034 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 3278, column: 50)
!11035 = !DILocation(line: 3279, column: 7, scope: !11034)
!11036 = !DILocation(line: 3279, column: 19, scope: !11034)
!11037 = !DILocation(line: 3279, column: 24, scope: !11034)
!11038 = !DILocation(line: 3279, column: 13, scope: !11034)
!11039 = !DILocation(line: 3279, column: 50, scope: !11034)
!11040 = !DILocation(line: 3280, column: 7, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 3280, column: 7)
!11042 = !DILocation(line: 3280, column: 19, scope: !11041)
!11043 = !DILocation(line: 3280, column: 7, scope: !11034)
!11044 = !DILocation(line: 3281, column: 11, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 3280, column: 46)
!11046 = !DILocation(line: 3281, column: 14, scope: !11045)
!11047 = !DILocation(line: 3281, column: 35, scope: !11045)
!11048 = !DILocation(line: 3281, column: 40, scope: !11045)
!11049 = !DILocation(line: 3281, column: 4, scope: !11045)
!11050 = !DILocation(line: 3282, column: 4, scope: !11045)
!11051 = !DILocation(line: 3282, column: 8, scope: !11045)
!11052 = !DILocation(line: 3282, column: 20, scope: !11045)
!11053 = !DILocation(line: 3283, column: 3, scope: !11045)
!11054 = !DILocation(line: 3284, column: 11, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 3283, column: 10)
!11056 = !DILocation(line: 3284, column: 16, scope: !11055)
!11057 = !DILocation(line: 3284, column: 21, scope: !11055)
!11058 = !DILocation(line: 3284, column: 4, scope: !11055)
!11059 = !DILocation(line: 3286, column: 2, scope: !11034)
!11060 = !DILocation(line: 3287, column: 6, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 3287, column: 6)
!11062 = !DILocation(line: 3287, column: 10, scope: !11061)
!11063 = !DILocation(line: 3287, column: 22, scope: !11061)
!11064 = !DILocation(line: 3287, column: 6, scope: !11012)
!11065 = !DILocalVariable(name: "regmisc", scope: !11066, file: !3, line: 3288, type: !987)
!11066 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 3287, column: 50)
!11067 = !DILocation(line: 3288, column: 7, scope: !11066)
!11068 = !DILocation(line: 3288, column: 23, scope: !11066)
!11069 = !DILocation(line: 3288, column: 28, scope: !11066)
!11070 = !DILocation(line: 3288, column: 17, scope: !11066)
!11071 = !DILocation(line: 3288, column: 42, scope: !11066)
!11072 = !DILocation(line: 3289, column: 7, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 3289, column: 7)
!11074 = !DILocation(line: 3289, column: 19, scope: !11073)
!11075 = !DILocation(line: 3289, column: 7, scope: !11066)
!11076 = !DILocalVariable(name: "pause_enable", scope: !11077, file: !3, line: 3290, type: !987)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 3289, column: 46)
!11078 = !DILocation(line: 3290, column: 8, scope: !11077)
!11079 = !DILocation(line: 3291, column: 8, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 3291, column: 8)
!11081 = !DILocation(line: 3291, column: 12, scope: !11080)
!11082 = !DILocation(line: 3291, column: 24, scope: !11080)
!11083 = !DILocation(line: 3291, column: 8, scope: !11077)
!11084 = !DILocation(line: 3292, column: 18, scope: !11080)
!11085 = !DILocation(line: 3292, column: 5, scope: !11080)
!11086 = !DILocation(line: 3293, column: 8, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 3293, column: 8)
!11088 = !DILocation(line: 3293, column: 12, scope: !11087)
!11089 = !DILocation(line: 3293, column: 24, scope: !11087)
!11090 = !DILocation(line: 3293, column: 8, scope: !11077)
!11091 = !DILocation(line: 3294, column: 18, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 3293, column: 52)
!11093 = !DILocation(line: 3296, column: 18, scope: !11092)
!11094 = !DILocation(line: 3296, column: 23, scope: !11092)
!11095 = !DILocation(line: 3296, column: 12, scope: !11092)
!11096 = !DILocation(line: 3296, column: 48, scope: !11092)
!11097 = !DILocation(line: 3296, column: 82, scope: !11092)
!11098 = !DILocation(line: 3296, column: 87, scope: !11092)
!11099 = !DILocation(line: 3296, column: 5, scope: !11092)
!11100 = !DILocation(line: 3297, column: 4, scope: !11092)
!11101 = !DILocation(line: 3298, column: 11, scope: !11077)
!11102 = !DILocation(line: 3298, column: 26, scope: !11077)
!11103 = !DILocation(line: 3298, column: 31, scope: !11077)
!11104 = !DILocation(line: 3298, column: 4, scope: !11077)
!11105 = !DILocation(line: 3299, column: 11, scope: !11077)
!11106 = !DILocation(line: 3299, column: 18, scope: !11077)
!11107 = !DILocation(line: 3299, column: 41, scope: !11077)
!11108 = !DILocation(line: 3299, column: 46, scope: !11077)
!11109 = !DILocation(line: 3299, column: 4, scope: !11077)
!11110 = !DILocation(line: 3300, column: 4, scope: !11077)
!11111 = !DILocation(line: 3300, column: 8, scope: !11077)
!11112 = !DILocation(line: 3300, column: 20, scope: !11077)
!11113 = !DILocation(line: 3301, column: 3, scope: !11077)
!11114 = !DILocation(line: 3302, column: 41, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 3301, column: 10)
!11116 = !DILocation(line: 3302, column: 46, scope: !11115)
!11117 = !DILocation(line: 3302, column: 4, scope: !11115)
!11118 = !DILocation(line: 3303, column: 11, scope: !11115)
!11119 = !DILocation(line: 3303, column: 20, scope: !11115)
!11120 = !DILocation(line: 3303, column: 25, scope: !11115)
!11121 = !DILocation(line: 3303, column: 4, scope: !11115)
!11122 = !DILocation(line: 3305, column: 2, scope: !11066)
!11123 = !DILocation(line: 3306, column: 1, scope: !11012)
!11124 = distinct !DISubprogram(name: "nv_start_tx", scope: !3, file: !3, line: 1574, type: !406, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11125 = !DILocalVariable(name: "dev", arg: 1, scope: !11124, file: !3, line: 1574, type: !290)
!11126 = !DILocation(line: 1574, column: 44, scope: !11124)
!11127 = !DILocalVariable(name: "np", scope: !11124, file: !3, line: 1576, type: !7446)
!11128 = !DILocation(line: 1576, column: 18, scope: !11124)
!11129 = !DILocation(line: 1576, column: 35, scope: !11124)
!11130 = !DILocation(line: 1576, column: 23, scope: !11124)
!11131 = !DILocalVariable(name: "base", scope: !11124, file: !3, line: 1577, type: !793)
!11132 = !DILocation(line: 1577, column: 14, scope: !11124)
!11133 = !DILocation(line: 1577, column: 32, scope: !11124)
!11134 = !DILocation(line: 1577, column: 21, scope: !11124)
!11135 = !DILocalVariable(name: "tx_ctrl", scope: !11124, file: !3, line: 1578, type: !987)
!11136 = !DILocation(line: 1578, column: 6, scope: !11124)
!11137 = !DILocation(line: 1578, column: 22, scope: !11124)
!11138 = !DILocation(line: 1578, column: 27, scope: !11124)
!11139 = !DILocation(line: 1578, column: 16, scope: !11124)
!11140 = !DILocation(line: 1580, column: 10, scope: !11124)
!11141 = !DILocation(line: 1581, column: 6, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 1581, column: 6)
!11143 = !DILocation(line: 1581, column: 10, scope: !11142)
!11144 = !DILocation(line: 1581, column: 6, scope: !11124)
!11145 = !DILocation(line: 1582, column: 11, scope: !11142)
!11146 = !DILocation(line: 1582, column: 3, scope: !11142)
!11147 = !DILocation(line: 1583, column: 9, scope: !11124)
!11148 = !DILocation(line: 1583, column: 18, scope: !11124)
!11149 = !DILocation(line: 1583, column: 23, scope: !11124)
!11150 = !DILocation(line: 1583, column: 2, scope: !11124)
!11151 = !DILocation(line: 1584, column: 11, scope: !11124)
!11152 = !DILocation(line: 1584, column: 2, scope: !11124)
!11153 = !DILocation(line: 1585, column: 1, scope: !11124)
!11154 = distinct !DISubprogram(name: "nv_stop_tx", scope: !3, file: !3, line: 1587, type: !406, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11155 = !DILocalVariable(name: "dev", arg: 1, scope: !11154, file: !3, line: 1587, type: !290)
!11156 = !DILocation(line: 1587, column: 43, scope: !11154)
!11157 = !DILocalVariable(name: "np", scope: !11154, file: !3, line: 1589, type: !7446)
!11158 = !DILocation(line: 1589, column: 18, scope: !11154)
!11159 = !DILocation(line: 1589, column: 35, scope: !11154)
!11160 = !DILocation(line: 1589, column: 23, scope: !11154)
!11161 = !DILocalVariable(name: "base", scope: !11154, file: !3, line: 1590, type: !793)
!11162 = !DILocation(line: 1590, column: 14, scope: !11154)
!11163 = !DILocation(line: 1590, column: 32, scope: !11154)
!11164 = !DILocation(line: 1590, column: 21, scope: !11154)
!11165 = !DILocalVariable(name: "tx_ctrl", scope: !11154, file: !3, line: 1591, type: !987)
!11166 = !DILocation(line: 1591, column: 6, scope: !11154)
!11167 = !DILocation(line: 1591, column: 22, scope: !11154)
!11168 = !DILocation(line: 1591, column: 27, scope: !11154)
!11169 = !DILocation(line: 1591, column: 16, scope: !11154)
!11170 = !DILocation(line: 1593, column: 7, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 1593, column: 6)
!11172 = !DILocation(line: 1593, column: 11, scope: !11171)
!11173 = !DILocation(line: 1593, column: 6, scope: !11154)
!11174 = !DILocation(line: 1594, column: 11, scope: !11171)
!11175 = !DILocation(line: 1594, column: 3, scope: !11171)
!11176 = !DILocation(line: 1596, column: 11, scope: !11171)
!11177 = !DILocation(line: 1597, column: 9, scope: !11154)
!11178 = !DILocation(line: 1597, column: 18, scope: !11154)
!11179 = !DILocation(line: 1597, column: 23, scope: !11154)
!11180 = !DILocation(line: 1597, column: 2, scope: !11154)
!11181 = !DILocation(line: 1598, column: 16, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 1598, column: 6)
!11183 = !DILocation(line: 1598, column: 6, scope: !11182)
!11184 = !DILocation(line: 1598, column: 6, scope: !11154)
!11185 = !DILocation(line: 1600, column: 15, scope: !11182)
!11186 = !DILocation(line: 1600, column: 3, scope: !11182)
!11187 = !DILocation(line: 1603, column: 2, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11189, file: !3, line: 1603, column: 2)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 1603, column: 2)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 1603, column: 2)
!11191 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 1603, column: 2)
!11192 = !DILocation(line: 1604, column: 7, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 1604, column: 6)
!11194 = !DILocation(line: 1604, column: 11, scope: !11193)
!11195 = !DILocation(line: 1604, column: 6, scope: !11154)
!11196 = !DILocation(line: 1605, column: 16, scope: !11193)
!11197 = !DILocation(line: 1605, column: 21, scope: !11193)
!11198 = !DILocation(line: 1605, column: 10, scope: !11193)
!11199 = !DILocation(line: 1605, column: 42, scope: !11193)
!11200 = !DILocation(line: 1606, column: 10, scope: !11193)
!11201 = !DILocation(line: 1606, column: 15, scope: !11193)
!11202 = !DILocation(line: 1605, column: 3, scope: !11193)
!11203 = !DILocation(line: 1607, column: 1, scope: !11154)
!11204 = distinct !DISubprogram(name: "nv_vlan_mode", scope: !3, file: !3, line: 4938, type: !11205, scopeLine: 4939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11205 = !DISubroutineType(types: !11206)
!11206 = !{null, !290, !329}
!11207 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !11208)
!11208 = distinct !DILocation(line: 4956, column: 2, scope: !11204)
!11209 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !11210)
!11210 = distinct !DILocation(line: 4942, column: 2, scope: !11204)
!11211 = !DILocalVariable(name: "dev", arg: 1, scope: !11204, file: !3, line: 4938, type: !290)
!11212 = !DILocation(line: 4938, column: 45, scope: !11204)
!11213 = !DILocalVariable(name: "features", arg: 2, scope: !11204, file: !3, line: 4938, type: !329)
!11214 = !DILocation(line: 4938, column: 68, scope: !11204)
!11215 = !DILocalVariable(name: "np", scope: !11204, file: !3, line: 4940, type: !7446)
!11216 = !DILocation(line: 4940, column: 18, scope: !11204)
!11217 = !DILocation(line: 4940, column: 34, scope: !11204)
!11218 = !DILocation(line: 4940, column: 23, scope: !11204)
!11219 = !DILocation(line: 4942, column: 17, scope: !11204)
!11220 = !DILocation(line: 4942, column: 21, scope: !11204)
!11221 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !11210)
!11222 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !11210)
!11223 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !11210)
!11224 = !DILocation(line: 4944, column: 6, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 4944, column: 6)
!11226 = !DILocation(line: 4944, column: 15, scope: !11225)
!11227 = !DILocation(line: 4944, column: 6, scope: !11204)
!11228 = !DILocation(line: 4945, column: 3, scope: !11225)
!11229 = !DILocation(line: 4945, column: 7, scope: !11225)
!11230 = !DILocation(line: 4945, column: 20, scope: !11225)
!11231 = !DILocation(line: 4947, column: 3, scope: !11225)
!11232 = !DILocation(line: 4947, column: 7, scope: !11225)
!11233 = !DILocation(line: 4947, column: 20, scope: !11225)
!11234 = !DILocation(line: 4949, column: 6, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 4949, column: 6)
!11236 = !DILocation(line: 4949, column: 15, scope: !11235)
!11237 = !DILocation(line: 4949, column: 6, scope: !11204)
!11238 = !DILocation(line: 4950, column: 3, scope: !11235)
!11239 = !DILocation(line: 4950, column: 7, scope: !11235)
!11240 = !DILocation(line: 4950, column: 20, scope: !11235)
!11241 = !DILocation(line: 4952, column: 3, scope: !11235)
!11242 = !DILocation(line: 4952, column: 7, scope: !11235)
!11243 = !DILocation(line: 4952, column: 20, scope: !11235)
!11244 = !DILocation(line: 4954, column: 9, scope: !11204)
!11245 = !DILocation(line: 4954, column: 13, scope: !11204)
!11246 = !DILocation(line: 4954, column: 38, scope: !11204)
!11247 = !DILocation(line: 4954, column: 27, scope: !11204)
!11248 = !DILocation(line: 4954, column: 43, scope: !11204)
!11249 = !DILocation(line: 4954, column: 2, scope: !11204)
!11250 = !DILocation(line: 4956, column: 19, scope: !11204)
!11251 = !DILocation(line: 4956, column: 23, scope: !11204)
!11252 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !11208)
!11253 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !11208)
!11254 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !11208)
!11255 = !DILocation(line: 4957, column: 1, scope: !11204)
!11256 = distinct !DISubprogram(name: "free_rings", scope: !3, file: !3, line: 1018, type: !406, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11257 = !DILocalVariable(name: "dev", arg: 1, scope: !11256, file: !3, line: 1018, type: !290)
!11258 = !DILocation(line: 1018, column: 43, scope: !11256)
!11259 = !DILocalVariable(name: "np", scope: !11256, file: !3, line: 1020, type: !7446)
!11260 = !DILocation(line: 1020, column: 18, scope: !11256)
!11261 = !DILocation(line: 1020, column: 34, scope: !11256)
!11262 = !DILocation(line: 1020, column: 23, scope: !11256)
!11263 = !DILocation(line: 1022, column: 20, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 1022, column: 6)
!11265 = !DILocation(line: 1022, column: 7, scope: !11264)
!11266 = !DILocation(line: 1022, column: 6, scope: !11256)
!11267 = !DILocation(line: 1023, column: 7, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 1023, column: 7)
!11269 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 1022, column: 25)
!11270 = !DILocation(line: 1023, column: 11, scope: !11268)
!11271 = !DILocation(line: 1023, column: 19, scope: !11268)
!11272 = !DILocation(line: 1023, column: 7, scope: !11269)
!11273 = !DILocation(line: 1024, column: 23, scope: !11268)
!11274 = !DILocation(line: 1024, column: 27, scope: !11268)
!11275 = !DILocation(line: 1024, column: 36, scope: !11268)
!11276 = !DILocation(line: 1026, column: 9, scope: !11268)
!11277 = !DILocation(line: 1026, column: 13, scope: !11268)
!11278 = !DILocation(line: 1027, column: 8, scope: !11268)
!11279 = !DILocation(line: 1027, column: 12, scope: !11268)
!11280 = !DILocation(line: 1026, column: 26, scope: !11268)
!11281 = !DILocation(line: 1026, column: 8, scope: !11268)
!11282 = !DILocation(line: 1025, column: 33, scope: !11268)
!11283 = !DILocation(line: 1028, column: 8, scope: !11268)
!11284 = !DILocation(line: 1028, column: 12, scope: !11268)
!11285 = !DILocation(line: 1028, column: 20, scope: !11268)
!11286 = !DILocation(line: 1028, column: 26, scope: !11268)
!11287 = !DILocation(line: 1028, column: 30, scope: !11268)
!11288 = !DILocation(line: 1024, column: 4, scope: !11268)
!11289 = !DILocation(line: 1029, column: 2, scope: !11269)
!11290 = !DILocation(line: 1030, column: 7, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1030, column: 7)
!11292 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 1029, column: 9)
!11293 = !DILocation(line: 1030, column: 11, scope: !11291)
!11294 = !DILocation(line: 1030, column: 19, scope: !11291)
!11295 = !DILocation(line: 1030, column: 7, scope: !11292)
!11296 = !DILocation(line: 1031, column: 23, scope: !11291)
!11297 = !DILocation(line: 1031, column: 27, scope: !11291)
!11298 = !DILocation(line: 1031, column: 36, scope: !11291)
!11299 = !DILocation(line: 1033, column: 9, scope: !11291)
!11300 = !DILocation(line: 1033, column: 13, scope: !11291)
!11301 = !DILocation(line: 1034, column: 8, scope: !11291)
!11302 = !DILocation(line: 1034, column: 12, scope: !11291)
!11303 = !DILocation(line: 1033, column: 26, scope: !11291)
!11304 = !DILocation(line: 1033, column: 8, scope: !11291)
!11305 = !DILocation(line: 1032, column: 36, scope: !11291)
!11306 = !DILocation(line: 1035, column: 8, scope: !11291)
!11307 = !DILocation(line: 1035, column: 12, scope: !11291)
!11308 = !DILocation(line: 1035, column: 20, scope: !11291)
!11309 = !DILocation(line: 1035, column: 24, scope: !11291)
!11310 = !DILocation(line: 1035, column: 28, scope: !11291)
!11311 = !DILocation(line: 1031, column: 4, scope: !11291)
!11312 = !DILocation(line: 1037, column: 8, scope: !11256)
!11313 = !DILocation(line: 1037, column: 12, scope: !11256)
!11314 = !DILocation(line: 1037, column: 2, scope: !11256)
!11315 = !DILocation(line: 1038, column: 8, scope: !11256)
!11316 = !DILocation(line: 1038, column: 12, scope: !11256)
!11317 = !DILocation(line: 1038, column: 2, scope: !11256)
!11318 = !DILocation(line: 1039, column: 1, scope: !11256)
!11319 = distinct !DISubprogram(name: "napi_schedule", scope: !31, file: !31, line: 449, type: !11320, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11320 = !DISubroutineType(types: !11321)
!11321 = !{null, !7463}
!11322 = !DILocalVariable(name: "n", arg: 1, scope: !11319, file: !31, line: 449, type: !7463)
!11323 = !DILocation(line: 449, column: 54, scope: !11319)
!11324 = !DILocation(line: 451, column: 25, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11319, file: !31, line: 451, column: 6)
!11326 = !DILocation(line: 451, column: 6, scope: !11325)
!11327 = !DILocation(line: 451, column: 6, scope: !11319)
!11328 = !DILocation(line: 452, column: 19, scope: !11325)
!11329 = !DILocation(line: 452, column: 3, scope: !11325)
!11330 = !DILocation(line: 453, column: 1, scope: !11319)
!11331 = distinct !DISubprogram(name: "using_multi_irqs", scope: !3, file: !3, line: 1041, type: !402, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11332 = !DILocalVariable(name: "dev", arg: 1, scope: !11331, file: !3, line: 1041, type: !290)
!11333 = !DILocation(line: 1041, column: 48, scope: !11331)
!11334 = !DILocalVariable(name: "np", scope: !11331, file: !3, line: 1043, type: !7446)
!11335 = !DILocation(line: 1043, column: 18, scope: !11331)
!11336 = !DILocation(line: 1043, column: 34, scope: !11331)
!11337 = !DILocation(line: 1043, column: 23, scope: !11331)
!11338 = !DILocation(line: 1045, column: 8, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 1045, column: 6)
!11340 = !DILocation(line: 1045, column: 12, scope: !11339)
!11341 = !DILocation(line: 1045, column: 22, scope: !11339)
!11342 = !DILocation(line: 1045, column: 42, scope: !11339)
!11343 = !DILocation(line: 1046, column: 8, scope: !11339)
!11344 = !DILocation(line: 1046, column: 12, scope: !11339)
!11345 = !DILocation(line: 1046, column: 22, scope: !11339)
!11346 = !DILocation(line: 1046, column: 42, scope: !11339)
!11347 = !DILocation(line: 1047, column: 9, scope: !11339)
!11348 = !DILocation(line: 1047, column: 13, scope: !11339)
!11349 = !DILocation(line: 1047, column: 23, scope: !11339)
!11350 = !DILocation(line: 1047, column: 48, scope: !11339)
!11351 = !DILocation(line: 1045, column: 6, scope: !11331)
!11352 = !DILocation(line: 1048, column: 3, scope: !11339)
!11353 = !DILocation(line: 1050, column: 3, scope: !11339)
!11354 = !DILocation(line: 1051, column: 1, scope: !11331)
!11355 = distinct !DISubprogram(name: "disable_irq_nosync_lockdep_irqsave", scope: !3012, file: !3012, line: 430, type: !11356, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !7, !3439}
!11358 = !DILocalVariable(name: "irq", arg: 1, scope: !11355, file: !3012, line: 430, type: !7)
!11359 = !DILocation(line: 430, column: 68, scope: !11355)
!11360 = !DILocalVariable(name: "flags", arg: 2, scope: !11355, file: !3012, line: 430, type: !3439)
!11361 = !DILocation(line: 430, column: 88, scope: !11355)
!11362 = !DILocation(line: 432, column: 21, scope: !11355)
!11363 = !DILocation(line: 432, column: 2, scope: !11355)
!11364 = !DILocation(line: 436, column: 1, scope: !11355)
!11365 = distinct !DISubprogram(name: "netif_running", scope: !31, file: !31, line: 3556, type: !11366, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{!771, !773}
!11368 = !DILocalVariable(name: "dev", arg: 1, scope: !11365, file: !31, line: 3556, type: !773)
!11369 = !DILocation(line: 3556, column: 59, scope: !11365)
!11370 = !DILocation(line: 3558, column: 39, scope: !11365)
!11371 = !DILocation(line: 3558, column: 44, scope: !11365)
!11372 = !DILocation(line: 3558, column: 9, scope: !11365)
!11373 = !DILocation(line: 3558, column: 2, scope: !11365)
!11374 = distinct !DISubprogram(name: "netif_tx_lock_bh", scope: !31, file: !31, line: 4259, type: !406, scopeLine: 4260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11375 = !DILocalVariable(name: "dev", arg: 1, scope: !11374, file: !31, line: 4259, type: !290)
!11376 = !DILocation(line: 4259, column: 56, scope: !11374)
!11377 = !DILocation(line: 4261, column: 2, scope: !11374)
!11378 = !DILocation(line: 4262, column: 16, scope: !11374)
!11379 = !DILocation(line: 4262, column: 2, scope: !11374)
!11380 = !DILocation(line: 4263, column: 1, scope: !11374)
!11381 = distinct !DISubprogram(name: "netif_addr_lock", scope: !31, file: !31, line: 4326, type: !406, scopeLine: 4327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11382 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !11383)
!11383 = distinct !DILocation(line: 4333, column: 2, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !31, line: 4333, column: 2)
!11385 = distinct !DILexicalBlock(scope: !11386, file: !31, line: 4333, column: 2)
!11386 = distinct !DILexicalBlock(scope: !11381, file: !31, line: 4333, column: 2)
!11387 = !DILocalVariable(name: "dev", arg: 1, scope: !11381, file: !31, line: 4326, type: !290)
!11388 = !DILocation(line: 4326, column: 55, scope: !11381)
!11389 = !DILocalVariable(name: "nest_level", scope: !11381, file: !31, line: 4328, type: !482)
!11390 = !DILocation(line: 4328, column: 16, scope: !11381)
!11391 = !DILocation(line: 4333, column: 2, scope: !11381)
!11392 = !DILocation(line: 4333, column: 2, scope: !11386)
!11393 = !DILocation(line: 4333, column: 2, scope: !11385)
!11394 = !{i32 -2139749113}
!11395 = !DILocation(line: 4333, column: 2, scope: !11384)
!11396 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !11383)
!11397 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !11383)
!11398 = !DILocation(line: 4334, column: 1, scope: !11381)
!11399 = distinct !DISubprogram(name: "nv_stop_rxtx", scope: !3, file: !3, line: 1615, type: !406, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11400 = !DILocalVariable(name: "dev", arg: 1, scope: !11399, file: !3, line: 1615, type: !290)
!11401 = !DILocation(line: 1615, column: 45, scope: !11399)
!11402 = !DILocation(line: 1617, column: 13, scope: !11399)
!11403 = !DILocation(line: 1617, column: 2, scope: !11399)
!11404 = !DILocation(line: 1618, column: 13, scope: !11399)
!11405 = !DILocation(line: 1618, column: 2, scope: !11399)
!11406 = !DILocation(line: 1619, column: 1, scope: !11399)
!11407 = distinct !DISubprogram(name: "nv_mac_reset", scope: !3, file: !3, line: 1633, type: !406, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11408 = !DILocalVariable(name: "dev", arg: 1, scope: !11407, file: !3, line: 1633, type: !290)
!11409 = !DILocation(line: 1633, column: 45, scope: !11407)
!11410 = !DILocalVariable(name: "np", scope: !11407, file: !3, line: 1635, type: !7446)
!11411 = !DILocation(line: 1635, column: 18, scope: !11407)
!11412 = !DILocation(line: 1635, column: 35, scope: !11407)
!11413 = !DILocation(line: 1635, column: 23, scope: !11407)
!11414 = !DILocalVariable(name: "base", scope: !11407, file: !3, line: 1636, type: !793)
!11415 = !DILocation(line: 1636, column: 14, scope: !11407)
!11416 = !DILocation(line: 1636, column: 32, scope: !11407)
!11417 = !DILocation(line: 1636, column: 21, scope: !11407)
!11418 = !DILocalVariable(name: "temp1", scope: !11407, file: !3, line: 1637, type: !987)
!11419 = !DILocation(line: 1637, column: 6, scope: !11407)
!11420 = !DILocalVariable(name: "temp2", scope: !11407, file: !3, line: 1637, type: !987)
!11421 = !DILocation(line: 1637, column: 13, scope: !11407)
!11422 = !DILocalVariable(name: "temp3", scope: !11407, file: !3, line: 1637, type: !987)
!11423 = !DILocation(line: 1637, column: 20, scope: !11407)
!11424 = !DILocation(line: 1639, column: 52, scope: !11407)
!11425 = !DILocation(line: 1639, column: 56, scope: !11407)
!11426 = !DILocation(line: 1639, column: 50, scope: !11407)
!11427 = !DILocation(line: 1639, column: 70, scope: !11407)
!11428 = !DILocation(line: 1639, column: 75, scope: !11407)
!11429 = !DILocation(line: 1639, column: 2, scope: !11407)
!11430 = !DILocation(line: 1640, column: 11, scope: !11407)
!11431 = !DILocation(line: 1640, column: 2, scope: !11407)
!11432 = !DILocation(line: 1643, column: 16, scope: !11407)
!11433 = !DILocation(line: 1643, column: 21, scope: !11407)
!11434 = !DILocation(line: 1643, column: 10, scope: !11407)
!11435 = !DILocation(line: 1643, column: 8, scope: !11407)
!11436 = !DILocation(line: 1644, column: 16, scope: !11407)
!11437 = !DILocation(line: 1644, column: 21, scope: !11407)
!11438 = !DILocation(line: 1644, column: 10, scope: !11407)
!11439 = !DILocation(line: 1644, column: 8, scope: !11407)
!11440 = !DILocation(line: 1645, column: 16, scope: !11407)
!11441 = !DILocation(line: 1645, column: 21, scope: !11407)
!11442 = !DILocation(line: 1645, column: 10, scope: !11407)
!11443 = !DILocation(line: 1645, column: 8, scope: !11407)
!11444 = !DILocation(line: 1647, column: 33, scope: !11407)
!11445 = !DILocation(line: 1647, column: 38, scope: !11407)
!11446 = !DILocation(line: 1647, column: 2, scope: !11407)
!11447 = !DILocation(line: 1648, column: 11, scope: !11407)
!11448 = !DILocation(line: 1648, column: 2, scope: !11407)
!11449 = !DILocation(line: 1649, column: 2, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 1649, column: 2)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 1649, column: 2)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 1649, column: 2)
!11453 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 1649, column: 2)
!11454 = !DILocation(line: 1650, column: 12, scope: !11407)
!11455 = !DILocation(line: 1650, column: 17, scope: !11407)
!11456 = !DILocation(line: 1650, column: 2, scope: !11407)
!11457 = !DILocation(line: 1651, column: 11, scope: !11407)
!11458 = !DILocation(line: 1651, column: 2, scope: !11407)
!11459 = !DILocation(line: 1652, column: 2, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 1652, column: 2)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 1652, column: 2)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 1652, column: 2)
!11463 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 1652, column: 2)
!11464 = !DILocation(line: 1655, column: 9, scope: !11407)
!11465 = !DILocation(line: 1655, column: 16, scope: !11407)
!11466 = !DILocation(line: 1655, column: 21, scope: !11407)
!11467 = !DILocation(line: 1655, column: 2, scope: !11407)
!11468 = !DILocation(line: 1656, column: 9, scope: !11407)
!11469 = !DILocation(line: 1656, column: 16, scope: !11407)
!11470 = !DILocation(line: 1656, column: 21, scope: !11407)
!11471 = !DILocation(line: 1656, column: 2, scope: !11407)
!11472 = !DILocation(line: 1657, column: 9, scope: !11407)
!11473 = !DILocation(line: 1657, column: 16, scope: !11407)
!11474 = !DILocation(line: 1657, column: 21, scope: !11407)
!11475 = !DILocation(line: 1657, column: 2, scope: !11407)
!11476 = !DILocation(line: 1659, column: 30, scope: !11407)
!11477 = !DILocation(line: 1659, column: 34, scope: !11407)
!11478 = !DILocation(line: 1659, column: 28, scope: !11407)
!11479 = !DILocation(line: 1659, column: 48, scope: !11407)
!11480 = !DILocation(line: 1659, column: 53, scope: !11407)
!11481 = !DILocation(line: 1659, column: 2, scope: !11407)
!11482 = !DILocation(line: 1660, column: 11, scope: !11407)
!11483 = !DILocation(line: 1660, column: 2, scope: !11407)
!11484 = !DILocation(line: 1661, column: 1, scope: !11407)
!11485 = distinct !DISubprogram(name: "nv_txrx_reset", scope: !3, file: !3, line: 1621, type: !406, scopeLine: 1622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11486 = !DILocalVariable(name: "dev", arg: 1, scope: !11485, file: !3, line: 1621, type: !290)
!11487 = !DILocation(line: 1621, column: 46, scope: !11485)
!11488 = !DILocalVariable(name: "np", scope: !11485, file: !3, line: 1623, type: !7446)
!11489 = !DILocation(line: 1623, column: 18, scope: !11485)
!11490 = !DILocation(line: 1623, column: 35, scope: !11485)
!11491 = !DILocation(line: 1623, column: 23, scope: !11485)
!11492 = !DILocalVariable(name: "base", scope: !11485, file: !3, line: 1624, type: !793)
!11493 = !DILocation(line: 1624, column: 14, scope: !11485)
!11494 = !DILocation(line: 1624, column: 32, scope: !11485)
!11495 = !DILocation(line: 1624, column: 21, scope: !11485)
!11496 = !DILocation(line: 1626, column: 52, scope: !11485)
!11497 = !DILocation(line: 1626, column: 56, scope: !11485)
!11498 = !DILocation(line: 1626, column: 50, scope: !11485)
!11499 = !DILocation(line: 1626, column: 70, scope: !11485)
!11500 = !DILocation(line: 1626, column: 75, scope: !11485)
!11501 = !DILocation(line: 1626, column: 2, scope: !11485)
!11502 = !DILocation(line: 1627, column: 11, scope: !11485)
!11503 = !DILocation(line: 1627, column: 2, scope: !11485)
!11504 = !DILocation(line: 1628, column: 2, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !3, line: 1628, column: 2)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 1628, column: 2)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1628, column: 2)
!11508 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 1628, column: 2)
!11509 = !DILocation(line: 1629, column: 30, scope: !11485)
!11510 = !DILocation(line: 1629, column: 34, scope: !11485)
!11511 = !DILocation(line: 1629, column: 28, scope: !11485)
!11512 = !DILocation(line: 1629, column: 48, scope: !11485)
!11513 = !DILocation(line: 1629, column: 53, scope: !11485)
!11514 = !DILocation(line: 1629, column: 2, scope: !11485)
!11515 = !DILocation(line: 1630, column: 11, scope: !11485)
!11516 = !DILocation(line: 1630, column: 2, scope: !11485)
!11517 = !DILocation(line: 1631, column: 1, scope: !11485)
!11518 = distinct !DISubprogram(name: "nv_drain_rxtx", scope: !3, file: !3, line: 2087, type: !406, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11519 = !DILocalVariable(name: "dev", arg: 1, scope: !11518, file: !3, line: 2087, type: !290)
!11520 = !DILocation(line: 2087, column: 46, scope: !11518)
!11521 = !DILocation(line: 2089, column: 14, scope: !11518)
!11522 = !DILocation(line: 2089, column: 2, scope: !11518)
!11523 = !DILocation(line: 2090, column: 14, scope: !11518)
!11524 = !DILocation(line: 2090, column: 2, scope: !11518)
!11525 = !DILocation(line: 2091, column: 1, scope: !11518)
!11526 = distinct !DISubprogram(name: "set_bufsize", scope: !3, file: !3, line: 3086, type: !406, scopeLine: 3087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11527 = !DILocalVariable(name: "dev", arg: 1, scope: !11526, file: !3, line: 3086, type: !290)
!11528 = !DILocation(line: 3086, column: 44, scope: !11526)
!11529 = !DILocalVariable(name: "np", scope: !11526, file: !3, line: 3088, type: !7446)
!11530 = !DILocation(line: 3088, column: 18, scope: !11526)
!11531 = !DILocation(line: 3088, column: 35, scope: !11526)
!11532 = !DILocation(line: 3088, column: 23, scope: !11526)
!11533 = !DILocation(line: 3090, column: 6, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 3090, column: 6)
!11535 = !DILocation(line: 3090, column: 11, scope: !11534)
!11536 = !DILocation(line: 3090, column: 15, scope: !11534)
!11537 = !DILocation(line: 3090, column: 6, scope: !11526)
!11538 = !DILocation(line: 3091, column: 3, scope: !11534)
!11539 = !DILocation(line: 3091, column: 7, scope: !11534)
!11540 = !DILocation(line: 3091, column: 17, scope: !11534)
!11541 = !DILocation(line: 3093, column: 19, scope: !11534)
!11542 = !DILocation(line: 3093, column: 24, scope: !11534)
!11543 = !DILocation(line: 3093, column: 28, scope: !11534)
!11544 = !DILocation(line: 3093, column: 3, scope: !11534)
!11545 = !DILocation(line: 3093, column: 7, scope: !11534)
!11546 = !DILocation(line: 3093, column: 17, scope: !11534)
!11547 = !DILocation(line: 3094, column: 1, scope: !11526)
!11548 = distinct !DISubprogram(name: "nv_init_ring", scope: !3, file: !3, line: 1990, type: !402, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11549 = !DILocalVariable(name: "dev", arg: 1, scope: !11548, file: !3, line: 1990, type: !290)
!11550 = !DILocation(line: 1990, column: 44, scope: !11548)
!11551 = !DILocalVariable(name: "np", scope: !11548, file: !3, line: 1992, type: !7446)
!11552 = !DILocation(line: 1992, column: 18, scope: !11548)
!11553 = !DILocation(line: 1992, column: 35, scope: !11548)
!11554 = !DILocation(line: 1992, column: 23, scope: !11548)
!11555 = !DILocation(line: 1994, column: 13, scope: !11548)
!11556 = !DILocation(line: 1994, column: 2, scope: !11548)
!11557 = !DILocation(line: 1995, column: 13, scope: !11548)
!11558 = !DILocation(line: 1995, column: 2, scope: !11548)
!11559 = !DILocation(line: 1997, column: 20, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 1997, column: 6)
!11561 = !DILocation(line: 1997, column: 7, scope: !11560)
!11562 = !DILocation(line: 1997, column: 6, scope: !11548)
!11563 = !DILocation(line: 1998, column: 22, scope: !11560)
!11564 = !DILocation(line: 1998, column: 10, scope: !11560)
!11565 = !DILocation(line: 1998, column: 3, scope: !11560)
!11566 = !DILocation(line: 2000, column: 32, scope: !11560)
!11567 = !DILocation(line: 2000, column: 10, scope: !11560)
!11568 = !DILocation(line: 2000, column: 3, scope: !11560)
!11569 = !DILocation(line: 2001, column: 1, scope: !11548)
!11570 = distinct !DISubprogram(name: "setup_hw_rings", scope: !3, file: !3, line: 996, type: !584, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11571 = !DILocalVariable(name: "dev", arg: 1, scope: !11570, file: !3, line: 996, type: !290)
!11572 = !DILocation(line: 996, column: 47, scope: !11570)
!11573 = !DILocalVariable(name: "rxtx_flags", arg: 2, scope: !11570, file: !3, line: 996, type: !32)
!11574 = !DILocation(line: 996, column: 56, scope: !11570)
!11575 = !DILocalVariable(name: "np", scope: !11570, file: !3, line: 998, type: !7446)
!11576 = !DILocation(line: 998, column: 18, scope: !11570)
!11577 = !DILocation(line: 998, column: 34, scope: !11570)
!11578 = !DILocation(line: 998, column: 23, scope: !11570)
!11579 = !DILocalVariable(name: "base", scope: !11570, file: !3, line: 999, type: !793)
!11580 = !DILocation(line: 999, column: 14, scope: !11570)
!11581 = !DILocation(line: 999, column: 32, scope: !11570)
!11582 = !DILocation(line: 999, column: 21, scope: !11570)
!11583 = !DILocation(line: 1001, column: 20, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11570, file: !3, line: 1001, column: 6)
!11585 = !DILocation(line: 1001, column: 7, scope: !11584)
!11586 = !DILocation(line: 1001, column: 6, scope: !11570)
!11587 = !DILocation(line: 1002, column: 7, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 1002, column: 7)
!11589 = distinct !DILexicalBlock(scope: !11584, file: !3, line: 1001, column: 25)
!11590 = !DILocation(line: 1002, column: 18, scope: !11588)
!11591 = !DILocation(line: 1002, column: 7, scope: !11589)
!11592 = !DILocation(line: 1003, column: 19, scope: !11588)
!11593 = !DILocation(line: 1003, column: 23, scope: !11588)
!11594 = !DILocation(line: 1003, column: 11, scope: !11588)
!11595 = !DILocation(line: 1003, column: 35, scope: !11588)
!11596 = !DILocation(line: 1003, column: 40, scope: !11588)
!11597 = !DILocation(line: 1003, column: 4, scope: !11588)
!11598 = !DILocation(line: 1004, column: 7, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 1004, column: 7)
!11600 = !DILocation(line: 1004, column: 18, scope: !11599)
!11601 = !DILocation(line: 1004, column: 7, scope: !11589)
!11602 = !DILocation(line: 1005, column: 19, scope: !11599)
!11603 = !DILocation(line: 1005, column: 23, scope: !11599)
!11604 = !DILocation(line: 1005, column: 35, scope: !11599)
!11605 = !DILocation(line: 1005, column: 39, scope: !11599)
!11606 = !DILocation(line: 1005, column: 51, scope: !11599)
!11607 = !DILocation(line: 1005, column: 33, scope: !11599)
!11608 = !DILocation(line: 1005, column: 11, scope: !11599)
!11609 = !DILocation(line: 1005, column: 79, scope: !11599)
!11610 = !DILocation(line: 1005, column: 84, scope: !11599)
!11611 = !DILocation(line: 1005, column: 4, scope: !11599)
!11612 = !DILocation(line: 1006, column: 2, scope: !11589)
!11613 = !DILocation(line: 1007, column: 7, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1007, column: 7)
!11615 = distinct !DILexicalBlock(scope: !11584, file: !3, line: 1006, column: 9)
!11616 = !DILocation(line: 1007, column: 18, scope: !11614)
!11617 = !DILocation(line: 1007, column: 7, scope: !11615)
!11618 = !DILocation(line: 1008, column: 19, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11614, file: !3, line: 1007, column: 38)
!11620 = !DILocation(line: 1008, column: 23, scope: !11619)
!11621 = !DILocation(line: 1008, column: 11, scope: !11619)
!11622 = !DILocation(line: 1008, column: 35, scope: !11619)
!11623 = !DILocation(line: 1008, column: 40, scope: !11619)
!11624 = !DILocation(line: 1008, column: 4, scope: !11619)
!11625 = !DILocation(line: 1009, column: 20, scope: !11619)
!11626 = !DILocation(line: 1009, column: 24, scope: !11619)
!11627 = !DILocation(line: 1009, column: 11, scope: !11619)
!11628 = !DILocation(line: 1009, column: 36, scope: !11619)
!11629 = !DILocation(line: 1009, column: 41, scope: !11619)
!11630 = !DILocation(line: 1009, column: 4, scope: !11619)
!11631 = !DILocation(line: 1010, column: 3, scope: !11619)
!11632 = !DILocation(line: 1011, column: 7, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1011, column: 7)
!11634 = !DILocation(line: 1011, column: 18, scope: !11633)
!11635 = !DILocation(line: 1011, column: 7, scope: !11615)
!11636 = !DILocation(line: 1012, column: 19, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 1011, column: 38)
!11638 = !DILocation(line: 1012, column: 23, scope: !11637)
!11639 = !DILocation(line: 1012, column: 35, scope: !11637)
!11640 = !DILocation(line: 1012, column: 39, scope: !11637)
!11641 = !DILocation(line: 1012, column: 51, scope: !11637)
!11642 = !DILocation(line: 1012, column: 33, scope: !11637)
!11643 = !DILocation(line: 1012, column: 11, scope: !11637)
!11644 = !DILocation(line: 1012, column: 82, scope: !11637)
!11645 = !DILocation(line: 1012, column: 87, scope: !11637)
!11646 = !DILocation(line: 1012, column: 4, scope: !11637)
!11647 = !DILocation(line: 1013, column: 20, scope: !11637)
!11648 = !DILocation(line: 1013, column: 24, scope: !11637)
!11649 = !DILocation(line: 1013, column: 36, scope: !11637)
!11650 = !DILocation(line: 1013, column: 40, scope: !11637)
!11651 = !DILocation(line: 1013, column: 52, scope: !11637)
!11652 = !DILocation(line: 1013, column: 34, scope: !11637)
!11653 = !DILocation(line: 1013, column: 11, scope: !11637)
!11654 = !DILocation(line: 1013, column: 83, scope: !11637)
!11655 = !DILocation(line: 1013, column: 88, scope: !11637)
!11656 = !DILocation(line: 1013, column: 4, scope: !11637)
!11657 = !DILocation(line: 1014, column: 3, scope: !11637)
!11658 = !DILocation(line: 1016, column: 1, scope: !11570)
!11659 = distinct !DISubprogram(name: "pci_push", scope: !3, file: !3, line: 944, type: !11660, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11660 = !DISubroutineType(types: !11661)
!11661 = !{null, !793}
!11662 = !DILocalVariable(name: "base", arg: 1, scope: !11659, file: !3, line: 944, type: !793)
!11663 = !DILocation(line: 944, column: 41, scope: !11659)
!11664 = !DILocation(line: 947, column: 8, scope: !11659)
!11665 = !DILocation(line: 947, column: 2, scope: !11659)
!11666 = !DILocation(line: 948, column: 1, scope: !11659)
!11667 = distinct !DISubprogram(name: "nv_start_rxtx", scope: !3, file: !3, line: 1609, type: !406, scopeLine: 1610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11668 = !DILocalVariable(name: "dev", arg: 1, scope: !11667, file: !3, line: 1609, type: !290)
!11669 = !DILocation(line: 1609, column: 46, scope: !11667)
!11670 = !DILocation(line: 1611, column: 14, scope: !11667)
!11671 = !DILocation(line: 1611, column: 2, scope: !11667)
!11672 = !DILocation(line: 1612, column: 14, scope: !11667)
!11673 = !DILocation(line: 1612, column: 2, scope: !11667)
!11674 = !DILocation(line: 1613, column: 1, scope: !11667)
!11675 = distinct !DISubprogram(name: "netif_addr_unlock", scope: !31, file: !31, line: 4347, type: !406, scopeLine: 4348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11676 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !11677)
!11677 = distinct !DILocation(line: 4349, column: 2, scope: !11675)
!11678 = !DILocalVariable(name: "dev", arg: 1, scope: !11675, file: !31, line: 4347, type: !290)
!11679 = !DILocation(line: 4347, column: 57, scope: !11675)
!11680 = !DILocation(line: 4349, column: 15, scope: !11675)
!11681 = !DILocation(line: 4349, column: 20, scope: !11675)
!11682 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !11677)
!11683 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !11677)
!11684 = !DILocation(line: 4350, column: 1, scope: !11675)
!11685 = distinct !DISubprogram(name: "netif_tx_unlock_bh", scope: !31, file: !31, line: 4282, type: !406, scopeLine: 4283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11686 = !DILocalVariable(name: "dev", arg: 1, scope: !11685, file: !31, line: 4282, type: !290)
!11687 = !DILocation(line: 4282, column: 58, scope: !11685)
!11688 = !DILocation(line: 4284, column: 18, scope: !11685)
!11689 = !DILocation(line: 4284, column: 2, scope: !11685)
!11690 = !DILocation(line: 4285, column: 2, scope: !11685)
!11691 = !DILocation(line: 4286, column: 1, scope: !11685)
!11692 = distinct !DISubprogram(name: "nv_nic_irq_optimized", scope: !3, file: !3, line: 3712, type: !11693, scopeLine: 3713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!11695, !32, !591}
!11695 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7250, line: 17, baseType: !7249)
!11696 = !DILocalVariable(name: "foo", arg: 1, scope: !11692, file: !3, line: 3712, type: !32)
!11697 = !DILocation(line: 3712, column: 45, scope: !11692)
!11698 = !DILocalVariable(name: "data", arg: 2, scope: !11692, file: !3, line: 3712, type: !591)
!11699 = !DILocation(line: 3712, column: 56, scope: !11692)
!11700 = !DILocalVariable(name: "dev", scope: !11692, file: !3, line: 3714, type: !290)
!11701 = !DILocation(line: 3714, column: 21, scope: !11692)
!11702 = !DILocation(line: 3714, column: 49, scope: !11692)
!11703 = !DILocation(line: 3714, column: 27, scope: !11692)
!11704 = !DILocalVariable(name: "np", scope: !11692, file: !3, line: 3715, type: !7446)
!11705 = !DILocation(line: 3715, column: 18, scope: !11692)
!11706 = !DILocation(line: 3715, column: 35, scope: !11692)
!11707 = !DILocation(line: 3715, column: 23, scope: !11692)
!11708 = !DILocalVariable(name: "base", scope: !11692, file: !3, line: 3716, type: !793)
!11709 = !DILocation(line: 3716, column: 14, scope: !11692)
!11710 = !DILocation(line: 3716, column: 32, scope: !11692)
!11711 = !DILocation(line: 3716, column: 21, scope: !11692)
!11712 = !DILocation(line: 3718, column: 8, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 3718, column: 6)
!11714 = !DILocation(line: 3718, column: 12, scope: !11713)
!11715 = !DILocation(line: 3718, column: 22, scope: !11713)
!11716 = !DILocation(line: 3718, column: 6, scope: !11692)
!11717 = !DILocation(line: 3719, column: 22, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11713, file: !3, line: 3718, column: 43)
!11719 = !DILocation(line: 3719, column: 27, scope: !11718)
!11720 = !DILocation(line: 3719, column: 16, scope: !11718)
!11721 = !DILocation(line: 3719, column: 3, scope: !11718)
!11722 = !DILocation(line: 3719, column: 7, scope: !11718)
!11723 = !DILocation(line: 3719, column: 14, scope: !11718)
!11724 = !DILocation(line: 3720, column: 10, scope: !11718)
!11725 = !DILocation(line: 3720, column: 14, scope: !11718)
!11726 = !DILocation(line: 3720, column: 22, scope: !11718)
!11727 = !DILocation(line: 3720, column: 27, scope: !11718)
!11728 = !DILocation(line: 3720, column: 3, scope: !11718)
!11729 = !DILocation(line: 3721, column: 2, scope: !11718)
!11730 = !DILocation(line: 3722, column: 22, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11713, file: !3, line: 3721, column: 9)
!11732 = !DILocation(line: 3722, column: 27, scope: !11731)
!11733 = !DILocation(line: 3722, column: 16, scope: !11731)
!11734 = !DILocation(line: 3722, column: 3, scope: !11731)
!11735 = !DILocation(line: 3722, column: 7, scope: !11731)
!11736 = !DILocation(line: 3722, column: 14, scope: !11731)
!11737 = !DILocation(line: 3723, column: 10, scope: !11731)
!11738 = !DILocation(line: 3723, column: 14, scope: !11731)
!11739 = !DILocation(line: 3723, column: 22, scope: !11731)
!11740 = !DILocation(line: 3723, column: 27, scope: !11731)
!11741 = !DILocation(line: 3723, column: 3, scope: !11731)
!11742 = !DILocation(line: 3725, column: 8, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 3725, column: 6)
!11744 = !DILocation(line: 3725, column: 12, scope: !11743)
!11745 = !DILocation(line: 3725, column: 21, scope: !11743)
!11746 = !DILocation(line: 3725, column: 25, scope: !11743)
!11747 = !DILocation(line: 3725, column: 19, scope: !11743)
!11748 = !DILocation(line: 3725, column: 6, scope: !11692)
!11749 = !DILocation(line: 3726, column: 3, scope: !11743)
!11750 = !DILocation(line: 3728, column: 20, scope: !11692)
!11751 = !DILocation(line: 3728, column: 2, scope: !11692)
!11752 = !DILocation(line: 3730, column: 26, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 3730, column: 6)
!11754 = !DILocation(line: 3730, column: 30, scope: !11753)
!11755 = !DILocation(line: 3730, column: 6, scope: !11753)
!11756 = !DILocation(line: 3730, column: 6, scope: !11692)
!11757 = !DILocation(line: 3734, column: 13, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 3730, column: 37)
!11759 = !DILocation(line: 3734, column: 18, scope: !11758)
!11760 = !DILocation(line: 3734, column: 3, scope: !11758)
!11761 = !DILocation(line: 3735, column: 20, scope: !11758)
!11762 = !DILocation(line: 3735, column: 24, scope: !11758)
!11763 = !DILocation(line: 3735, column: 3, scope: !11758)
!11764 = !DILocation(line: 3736, column: 2, scope: !11758)
!11765 = !DILocation(line: 3738, column: 2, scope: !11692)
!11766 = !DILocation(line: 3739, column: 1, scope: !11692)
!11767 = distinct !DISubprogram(name: "nv_nic_irq", scope: !3, file: !3, line: 3679, type: !11693, scopeLine: 3680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11768 = !DILocalVariable(name: "foo", arg: 1, scope: !11767, file: !3, line: 3679, type: !32)
!11769 = !DILocation(line: 3679, column: 35, scope: !11767)
!11770 = !DILocalVariable(name: "data", arg: 2, scope: !11767, file: !3, line: 3679, type: !591)
!11771 = !DILocation(line: 3679, column: 46, scope: !11767)
!11772 = !DILocalVariable(name: "dev", scope: !11767, file: !3, line: 3681, type: !290)
!11773 = !DILocation(line: 3681, column: 21, scope: !11767)
!11774 = !DILocation(line: 3681, column: 49, scope: !11767)
!11775 = !DILocation(line: 3681, column: 27, scope: !11767)
!11776 = !DILocalVariable(name: "np", scope: !11767, file: !3, line: 3682, type: !7446)
!11777 = !DILocation(line: 3682, column: 18, scope: !11767)
!11778 = !DILocation(line: 3682, column: 35, scope: !11767)
!11779 = !DILocation(line: 3682, column: 23, scope: !11767)
!11780 = !DILocalVariable(name: "base", scope: !11767, file: !3, line: 3683, type: !793)
!11781 = !DILocation(line: 3683, column: 14, scope: !11767)
!11782 = !DILocation(line: 3683, column: 32, scope: !11767)
!11783 = !DILocation(line: 3683, column: 21, scope: !11767)
!11784 = !DILocation(line: 3685, column: 8, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 3685, column: 6)
!11786 = !DILocation(line: 3685, column: 12, scope: !11785)
!11787 = !DILocation(line: 3685, column: 22, scope: !11785)
!11788 = !DILocation(line: 3685, column: 6, scope: !11767)
!11789 = !DILocation(line: 3686, column: 22, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 3685, column: 43)
!11791 = !DILocation(line: 3686, column: 27, scope: !11790)
!11792 = !DILocation(line: 3686, column: 16, scope: !11790)
!11793 = !DILocation(line: 3686, column: 3, scope: !11790)
!11794 = !DILocation(line: 3686, column: 7, scope: !11790)
!11795 = !DILocation(line: 3686, column: 14, scope: !11790)
!11796 = !DILocation(line: 3687, column: 10, scope: !11790)
!11797 = !DILocation(line: 3687, column: 14, scope: !11790)
!11798 = !DILocation(line: 3687, column: 22, scope: !11790)
!11799 = !DILocation(line: 3687, column: 27, scope: !11790)
!11800 = !DILocation(line: 3687, column: 3, scope: !11790)
!11801 = !DILocation(line: 3688, column: 2, scope: !11790)
!11802 = !DILocation(line: 3689, column: 22, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 3688, column: 9)
!11804 = !DILocation(line: 3689, column: 27, scope: !11803)
!11805 = !DILocation(line: 3689, column: 16, scope: !11803)
!11806 = !DILocation(line: 3689, column: 3, scope: !11803)
!11807 = !DILocation(line: 3689, column: 7, scope: !11803)
!11808 = !DILocation(line: 3689, column: 14, scope: !11803)
!11809 = !DILocation(line: 3690, column: 10, scope: !11803)
!11810 = !DILocation(line: 3690, column: 14, scope: !11803)
!11811 = !DILocation(line: 3690, column: 22, scope: !11803)
!11812 = !DILocation(line: 3690, column: 27, scope: !11803)
!11813 = !DILocation(line: 3690, column: 3, scope: !11803)
!11814 = !DILocation(line: 3692, column: 8, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 3692, column: 6)
!11816 = !DILocation(line: 3692, column: 12, scope: !11815)
!11817 = !DILocation(line: 3692, column: 21, scope: !11815)
!11818 = !DILocation(line: 3692, column: 25, scope: !11815)
!11819 = !DILocation(line: 3692, column: 19, scope: !11815)
!11820 = !DILocation(line: 3692, column: 6, scope: !11767)
!11821 = !DILocation(line: 3693, column: 3, scope: !11815)
!11822 = !DILocation(line: 3695, column: 20, scope: !11767)
!11823 = !DILocation(line: 3695, column: 2, scope: !11767)
!11824 = !DILocation(line: 3697, column: 26, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 3697, column: 6)
!11826 = !DILocation(line: 3697, column: 30, scope: !11825)
!11827 = !DILocation(line: 3697, column: 6, scope: !11825)
!11828 = !DILocation(line: 3697, column: 6, scope: !11767)
!11829 = !DILocation(line: 3701, column: 13, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 3697, column: 37)
!11831 = !DILocation(line: 3701, column: 18, scope: !11830)
!11832 = !DILocation(line: 3701, column: 3, scope: !11830)
!11833 = !DILocation(line: 3702, column: 20, scope: !11830)
!11834 = !DILocation(line: 3702, column: 24, scope: !11830)
!11835 = !DILocation(line: 3702, column: 3, scope: !11830)
!11836 = !DILocation(line: 3703, column: 2, scope: !11830)
!11837 = !DILocation(line: 3705, column: 2, scope: !11767)
!11838 = !DILocation(line: 3706, column: 1, scope: !11767)
!11839 = distinct !DISubprogram(name: "nv_nic_irq_rx", scope: !3, file: !3, line: 3853, type: !11693, scopeLine: 3854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11840 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !11841)
!11841 = distinct !DILocation(line: 3879, column: 4, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11843, file: !3, line: 3879, column: 4)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !3, line: 3879, column: 4)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 3879, column: 4)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 3879, column: 4)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 3879, column: 4)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 3878, column: 41)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 3878, column: 7)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !3, line: 3862, column: 20)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !3, line: 3862, column: 2)
!11851 = distinct !DILexicalBlock(scope: !11839, file: !3, line: 3862, column: 2)
!11852 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !11853)
!11853 = distinct !DILocation(line: 3874, column: 5, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 3870, column: 46)
!11855 = distinct !DILexicalBlock(scope: !11856, file: !3, line: 3870, column: 8)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 3869, column: 55)
!11857 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 3869, column: 7)
!11858 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !11853)
!11859 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !11860)
!11860 = distinct !DILocation(line: 3888, column: 4, scope: !11847)
!11861 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !11860)
!11862 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !11863)
!11863 = distinct !DILocation(line: 3871, column: 5, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 3871, column: 5)
!11865 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 3871, column: 5)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !3, line: 3871, column: 5)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 3871, column: 5)
!11868 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 3871, column: 5)
!11869 = !DILocalVariable(name: "foo", arg: 1, scope: !11839, file: !3, line: 3853, type: !32)
!11870 = !DILocation(line: 3853, column: 38, scope: !11839)
!11871 = !DILocalVariable(name: "data", arg: 2, scope: !11839, file: !3, line: 3853, type: !591)
!11872 = !DILocation(line: 3853, column: 49, scope: !11839)
!11873 = !DILocalVariable(name: "dev", scope: !11839, file: !3, line: 3855, type: !290)
!11874 = !DILocation(line: 3855, column: 21, scope: !11839)
!11875 = !DILocation(line: 3855, column: 49, scope: !11839)
!11876 = !DILocation(line: 3855, column: 27, scope: !11839)
!11877 = !DILocalVariable(name: "np", scope: !11839, file: !3, line: 3856, type: !7446)
!11878 = !DILocation(line: 3856, column: 18, scope: !11839)
!11879 = !DILocation(line: 3856, column: 35, scope: !11839)
!11880 = !DILocation(line: 3856, column: 23, scope: !11839)
!11881 = !DILocalVariable(name: "base", scope: !11839, file: !3, line: 3857, type: !793)
!11882 = !DILocation(line: 3857, column: 14, scope: !11839)
!11883 = !DILocation(line: 3857, column: 32, scope: !11839)
!11884 = !DILocation(line: 3857, column: 21, scope: !11839)
!11885 = !DILocalVariable(name: "events", scope: !11839, file: !3, line: 3858, type: !987)
!11886 = !DILocation(line: 3858, column: 6, scope: !11839)
!11887 = !DILocalVariable(name: "i", scope: !11839, file: !3, line: 3859, type: !32)
!11888 = !DILocation(line: 3859, column: 6, scope: !11839)
!11889 = !DILocalVariable(name: "flags", scope: !11839, file: !3, line: 3860, type: !312)
!11890 = !DILocation(line: 3860, column: 16, scope: !11839)
!11891 = !DILocation(line: 3862, column: 9, scope: !11851)
!11892 = !DILocation(line: 3862, column: 7, scope: !11851)
!11893 = !DILocation(line: 3863, column: 18, scope: !11849)
!11894 = !DILocation(line: 3863, column: 23, scope: !11849)
!11895 = !DILocation(line: 3863, column: 12, scope: !11849)
!11896 = !DILocation(line: 3863, column: 45, scope: !11849)
!11897 = !DILocation(line: 3863, column: 10, scope: !11849)
!11898 = !DILocation(line: 3864, column: 10, scope: !11849)
!11899 = !DILocation(line: 3864, column: 18, scope: !11849)
!11900 = !DILocation(line: 3864, column: 23, scope: !11849)
!11901 = !DILocation(line: 3864, column: 3, scope: !11849)
!11902 = !DILocation(line: 3866, column: 9, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 3866, column: 7)
!11904 = !DILocation(line: 3866, column: 18, scope: !11903)
!11905 = !DILocation(line: 3866, column: 22, scope: !11903)
!11906 = !DILocation(line: 3866, column: 16, scope: !11903)
!11907 = !DILocation(line: 3866, column: 7, scope: !11849)
!11908 = !DILocation(line: 3867, column: 4, scope: !11903)
!11909 = !DILocation(line: 3869, column: 31, scope: !11857)
!11910 = !DILocation(line: 3869, column: 7, scope: !11857)
!11911 = !DILocation(line: 3869, column: 7, scope: !11849)
!11912 = !DILocation(line: 3870, column: 8, scope: !11855)
!11913 = !DILocation(line: 3870, column: 8, scope: !11856)
!11914 = !DILocation(line: 3871, column: 5, scope: !11854)
!11915 = !DILocation(line: 3871, column: 5, scope: !11868)
!11916 = !DILocalVariable(name: "__dummy", scope: !11917, file: !3, line: 3871, type: !312)
!11917 = distinct !DILexicalBlock(scope: !11867, file: !3, line: 3871, column: 5)
!11918 = !DILocation(line: 3871, column: 5, scope: !11917)
!11919 = !DILocalVariable(name: "__dummy2", scope: !11917, file: !3, line: 3871, type: !312)
!11920 = !DILocation(line: 3871, column: 5, scope: !11867)
!11921 = !DILocation(line: 3871, column: 5, scope: !11866)
!11922 = !DILocation(line: 3871, column: 5, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 3871, column: 5)
!11924 = !DILocalVariable(name: "__dummy", scope: !11925, file: !3, line: 3871, type: !312)
!11925 = distinct !DILexicalBlock(scope: !11926, file: !3, line: 3871, column: 5)
!11926 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 3871, column: 5)
!11927 = !DILocation(line: 3871, column: 5, scope: !11925)
!11928 = !DILocalVariable(name: "__dummy2", scope: !11925, file: !3, line: 3871, type: !312)
!11929 = !DILocation(line: 3871, column: 5, scope: !11926)
!11930 = !DILocation(line: 3871, column: 5, scope: !11865)
!11931 = !{i32 -2139313665}
!11932 = !DILocation(line: 3871, column: 5, scope: !11864)
!11933 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !11863)
!11934 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !11863)
!11935 = !DILocation(line: 3872, column: 10, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 3872, column: 9)
!11937 = !DILocation(line: 3872, column: 14, scope: !11936)
!11938 = !DILocation(line: 3872, column: 9, scope: !11854)
!11939 = !DILocation(line: 3873, column: 17, scope: !11936)
!11940 = !DILocation(line: 3873, column: 21, scope: !11936)
!11941 = !DILocation(line: 3873, column: 31, scope: !11936)
!11942 = !DILocation(line: 3873, column: 39, scope: !11936)
!11943 = !DILocation(line: 3873, column: 6, scope: !11936)
!11944 = !DILocation(line: 3874, column: 29, scope: !11854)
!11945 = !DILocation(line: 3874, column: 33, scope: !11854)
!11946 = !DILocation(line: 3874, column: 39, scope: !11854)
!11947 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !11853)
!11948 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !11853)
!11949 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !11853)
!11950 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !11853)
!11951 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !11853)
!11952 = !DILocation(line: 3875, column: 4, scope: !11854)
!11953 = !DILocation(line: 3876, column: 3, scope: !11856)
!11954 = !DILocation(line: 3878, column: 7, scope: !11848)
!11955 = !DILocation(line: 3878, column: 7, scope: !11849)
!11956 = !DILocation(line: 3879, column: 4, scope: !11847)
!11957 = !DILocation(line: 3879, column: 4, scope: !11846)
!11958 = !DILocalVariable(name: "__dummy", scope: !11959, file: !3, line: 3879, type: !312)
!11959 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 3879, column: 4)
!11960 = !DILocation(line: 3879, column: 4, scope: !11959)
!11961 = !DILocalVariable(name: "__dummy2", scope: !11959, file: !3, line: 3879, type: !312)
!11962 = !DILocation(line: 3879, column: 4, scope: !11845)
!11963 = !DILocation(line: 3879, column: 4, scope: !11844)
!11964 = !DILocation(line: 3879, column: 4, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11844, file: !3, line: 3879, column: 4)
!11966 = !DILocalVariable(name: "__dummy", scope: !11967, file: !3, line: 3879, type: !312)
!11967 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 3879, column: 4)
!11968 = distinct !DILexicalBlock(scope: !11965, file: !3, line: 3879, column: 4)
!11969 = !DILocation(line: 3879, column: 4, scope: !11967)
!11970 = !DILocalVariable(name: "__dummy2", scope: !11967, file: !3, line: 3879, type: !312)
!11971 = !DILocation(line: 3879, column: 4, scope: !11968)
!11972 = !DILocation(line: 3879, column: 4, scope: !11843)
!11973 = !{i32 -2139312586}
!11974 = !DILocation(line: 3879, column: 4, scope: !11842)
!11975 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !11841)
!11976 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !11841)
!11977 = !DILocation(line: 3881, column: 29, scope: !11847)
!11978 = !DILocation(line: 3881, column: 34, scope: !11847)
!11979 = !DILocation(line: 3881, column: 4, scope: !11847)
!11980 = !DILocation(line: 3882, column: 13, scope: !11847)
!11981 = !DILocation(line: 3882, column: 4, scope: !11847)
!11982 = !DILocation(line: 3884, column: 9, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 3884, column: 8)
!11984 = !DILocation(line: 3884, column: 13, scope: !11983)
!11985 = !DILocation(line: 3884, column: 8, scope: !11847)
!11986 = !DILocation(line: 3885, column: 5, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 3884, column: 26)
!11988 = !DILocation(line: 3885, column: 9, scope: !11987)
!11989 = !DILocation(line: 3885, column: 22, scope: !11987)
!11990 = !DILocation(line: 3886, column: 16, scope: !11987)
!11991 = !DILocation(line: 3886, column: 20, scope: !11987)
!11992 = !DILocation(line: 3886, column: 30, scope: !11987)
!11993 = !DILocation(line: 3886, column: 38, scope: !11987)
!11994 = !DILocation(line: 3886, column: 5, scope: !11987)
!11995 = !DILocation(line: 3887, column: 4, scope: !11987)
!11996 = !DILocation(line: 3888, column: 28, scope: !11847)
!11997 = !DILocation(line: 3888, column: 32, scope: !11847)
!11998 = !DILocation(line: 3888, column: 38, scope: !11847)
!11999 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !11860)
!12000 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !11860)
!12001 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !11860)
!12002 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !11860)
!12003 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !11860)
!12004 = !DILocation(line: 3891, column: 4, scope: !11847)
!12005 = !DILocation(line: 3893, column: 2, scope: !11849)
!12006 = !DILocation(line: 3862, column: 16, scope: !11850)
!12007 = !DILocation(line: 3862, column: 2, scope: !11850)
!12008 = distinct !{!12008, !12009, !12010}
!12009 = !DILocation(line: 3862, column: 2, scope: !11851)
!12010 = !DILocation(line: 3893, column: 2, scope: !11851)
!12011 = !DILocation(line: 3895, column: 9, scope: !11839)
!12012 = !DILocation(line: 3895, column: 2, scope: !11839)
!12013 = distinct !DISubprogram(name: "nv_nic_irq_tx", scope: !3, file: !3, line: 3741, type: !11693, scopeLine: 3742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12014 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !12015)
!12015 = distinct !DILocation(line: 3762, column: 4, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !3, line: 3762, column: 4)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 3762, column: 4)
!12018 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 3762, column: 4)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 3762, column: 4)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 3762, column: 4)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !3, line: 3761, column: 41)
!12022 = distinct !DILexicalBlock(scope: !12023, file: !3, line: 3761, column: 7)
!12023 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 3750, column: 20)
!12024 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3750, column: 2)
!12025 = distinct !DILexicalBlock(scope: !12013, file: !3, line: 3750, column: 2)
!12026 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !12027)
!12027 = distinct !DILocation(line: 3759, column: 3, scope: !12023)
!12028 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !12027)
!12029 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !12030)
!12030 = distinct !DILocation(line: 3771, column: 4, scope: !12021)
!12031 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !12030)
!12032 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !12033)
!12033 = distinct !DILocation(line: 3757, column: 3, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 3757, column: 3)
!12035 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 3757, column: 3)
!12036 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 3757, column: 3)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 3757, column: 3)
!12038 = distinct !DILexicalBlock(scope: !12023, file: !3, line: 3757, column: 3)
!12039 = !DILocalVariable(name: "foo", arg: 1, scope: !12013, file: !3, line: 3741, type: !32)
!12040 = !DILocation(line: 3741, column: 38, scope: !12013)
!12041 = !DILocalVariable(name: "data", arg: 2, scope: !12013, file: !3, line: 3741, type: !591)
!12042 = !DILocation(line: 3741, column: 49, scope: !12013)
!12043 = !DILocalVariable(name: "dev", scope: !12013, file: !3, line: 3743, type: !290)
!12044 = !DILocation(line: 3743, column: 21, scope: !12013)
!12045 = !DILocation(line: 3743, column: 49, scope: !12013)
!12046 = !DILocation(line: 3743, column: 27, scope: !12013)
!12047 = !DILocalVariable(name: "np", scope: !12013, file: !3, line: 3744, type: !7446)
!12048 = !DILocation(line: 3744, column: 18, scope: !12013)
!12049 = !DILocation(line: 3744, column: 35, scope: !12013)
!12050 = !DILocation(line: 3744, column: 23, scope: !12013)
!12051 = !DILocalVariable(name: "base", scope: !12013, file: !3, line: 3745, type: !793)
!12052 = !DILocation(line: 3745, column: 14, scope: !12013)
!12053 = !DILocation(line: 3745, column: 32, scope: !12013)
!12054 = !DILocation(line: 3745, column: 21, scope: !12013)
!12055 = !DILocalVariable(name: "events", scope: !12013, file: !3, line: 3746, type: !987)
!12056 = !DILocation(line: 3746, column: 6, scope: !12013)
!12057 = !DILocalVariable(name: "i", scope: !12013, file: !3, line: 3747, type: !32)
!12058 = !DILocation(line: 3747, column: 6, scope: !12013)
!12059 = !DILocalVariable(name: "flags", scope: !12013, file: !3, line: 3748, type: !312)
!12060 = !DILocation(line: 3748, column: 16, scope: !12013)
!12061 = !DILocation(line: 3750, column: 9, scope: !12025)
!12062 = !DILocation(line: 3750, column: 7, scope: !12025)
!12063 = !DILocation(line: 3751, column: 18, scope: !12023)
!12064 = !DILocation(line: 3751, column: 23, scope: !12023)
!12065 = !DILocation(line: 3751, column: 12, scope: !12023)
!12066 = !DILocation(line: 3751, column: 45, scope: !12023)
!12067 = !DILocation(line: 3751, column: 10, scope: !12023)
!12068 = !DILocation(line: 3752, column: 10, scope: !12023)
!12069 = !DILocation(line: 3752, column: 18, scope: !12023)
!12070 = !DILocation(line: 3752, column: 23, scope: !12023)
!12071 = !DILocation(line: 3752, column: 3, scope: !12023)
!12072 = !DILocation(line: 3754, column: 9, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12023, file: !3, line: 3754, column: 7)
!12074 = !DILocation(line: 3754, column: 18, scope: !12073)
!12075 = !DILocation(line: 3754, column: 22, scope: !12073)
!12076 = !DILocation(line: 3754, column: 16, scope: !12073)
!12077 = !DILocation(line: 3754, column: 7, scope: !12023)
!12078 = !DILocation(line: 3755, column: 4, scope: !12073)
!12079 = !DILocation(line: 3757, column: 3, scope: !12023)
!12080 = !DILocation(line: 3757, column: 3, scope: !12038)
!12081 = !DILocalVariable(name: "__dummy", scope: !12082, file: !3, line: 3757, type: !312)
!12082 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 3757, column: 3)
!12083 = !DILocation(line: 3757, column: 3, scope: !12082)
!12084 = !DILocalVariable(name: "__dummy2", scope: !12082, file: !3, line: 3757, type: !312)
!12085 = !DILocation(line: 3757, column: 3, scope: !12037)
!12086 = !DILocation(line: 3757, column: 3, scope: !12036)
!12087 = !DILocation(line: 3757, column: 3, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 3757, column: 3)
!12089 = !DILocalVariable(name: "__dummy", scope: !12090, file: !3, line: 3757, type: !312)
!12090 = distinct !DILexicalBlock(scope: !12091, file: !3, line: 3757, column: 3)
!12091 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 3757, column: 3)
!12092 = !DILocation(line: 3757, column: 3, scope: !12090)
!12093 = !DILocalVariable(name: "__dummy2", scope: !12090, file: !3, line: 3757, type: !312)
!12094 = !DILocation(line: 3757, column: 3, scope: !12091)
!12095 = !DILocation(line: 3757, column: 3, scope: !12035)
!12096 = !{i32 -2139324752}
!12097 = !DILocation(line: 3757, column: 3, scope: !12034)
!12098 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !12033)
!12099 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !12033)
!12100 = !DILocation(line: 3758, column: 24, scope: !12023)
!12101 = !DILocation(line: 3758, column: 3, scope: !12023)
!12102 = !DILocation(line: 3759, column: 27, scope: !12023)
!12103 = !DILocation(line: 3759, column: 31, scope: !12023)
!12104 = !DILocation(line: 3759, column: 37, scope: !12023)
!12105 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !12027)
!12106 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !12027)
!12107 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !12027)
!12108 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !12027)
!12109 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !12027)
!12110 = !DILocation(line: 3761, column: 7, scope: !12022)
!12111 = !DILocation(line: 3761, column: 7, scope: !12023)
!12112 = !DILocation(line: 3762, column: 4, scope: !12021)
!12113 = !DILocation(line: 3762, column: 4, scope: !12020)
!12114 = !DILocalVariable(name: "__dummy", scope: !12115, file: !3, line: 3762, type: !312)
!12115 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 3762, column: 4)
!12116 = !DILocation(line: 3762, column: 4, scope: !12115)
!12117 = !DILocalVariable(name: "__dummy2", scope: !12115, file: !3, line: 3762, type: !312)
!12118 = !DILocation(line: 3762, column: 4, scope: !12019)
!12119 = !DILocation(line: 3762, column: 4, scope: !12018)
!12120 = !DILocation(line: 3762, column: 4, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 3762, column: 4)
!12122 = !DILocalVariable(name: "__dummy", scope: !12123, file: !3, line: 3762, type: !312)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 3762, column: 4)
!12124 = distinct !DILexicalBlock(scope: !12121, file: !3, line: 3762, column: 4)
!12125 = !DILocation(line: 3762, column: 4, scope: !12123)
!12126 = !DILocalVariable(name: "__dummy2", scope: !12123, file: !3, line: 3762, type: !312)
!12127 = !DILocation(line: 3762, column: 4, scope: !12124)
!12128 = !DILocation(line: 3762, column: 4, scope: !12017)
!12129 = !{i32 -2139323694}
!12130 = !DILocation(line: 3762, column: 4, scope: !12016)
!12131 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !12015)
!12132 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !12015)
!12133 = !DILocation(line: 3764, column: 29, scope: !12021)
!12134 = !DILocation(line: 3764, column: 34, scope: !12021)
!12135 = !DILocation(line: 3764, column: 4, scope: !12021)
!12136 = !DILocation(line: 3765, column: 13, scope: !12021)
!12137 = !DILocation(line: 3765, column: 4, scope: !12021)
!12138 = !DILocation(line: 3767, column: 9, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 3767, column: 8)
!12140 = !DILocation(line: 3767, column: 13, scope: !12139)
!12141 = !DILocation(line: 3767, column: 8, scope: !12021)
!12142 = !DILocation(line: 3768, column: 5, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 3767, column: 26)
!12144 = !DILocation(line: 3768, column: 9, scope: !12143)
!12145 = !DILocation(line: 3768, column: 22, scope: !12143)
!12146 = !DILocation(line: 3769, column: 16, scope: !12143)
!12147 = !DILocation(line: 3769, column: 20, scope: !12143)
!12148 = !DILocation(line: 3769, column: 30, scope: !12143)
!12149 = !DILocation(line: 3769, column: 38, scope: !12143)
!12150 = !DILocation(line: 3769, column: 5, scope: !12143)
!12151 = !DILocation(line: 3770, column: 4, scope: !12143)
!12152 = !DILocation(line: 3771, column: 28, scope: !12021)
!12153 = !DILocation(line: 3771, column: 32, scope: !12021)
!12154 = !DILocation(line: 3771, column: 38, scope: !12021)
!12155 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !12030)
!12156 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !12030)
!12157 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !12030)
!12158 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !12030)
!12159 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !12030)
!12160 = !DILocation(line: 3774, column: 4, scope: !12021)
!12161 = !DILocation(line: 3777, column: 2, scope: !12023)
!12162 = !DILocation(line: 3750, column: 16, scope: !12024)
!12163 = !DILocation(line: 3750, column: 2, scope: !12024)
!12164 = distinct !{!12164, !12165, !12166}
!12165 = !DILocation(line: 3750, column: 2, scope: !12025)
!12166 = !DILocation(line: 3777, column: 2, scope: !12025)
!12167 = !DILocation(line: 3779, column: 9, scope: !12013)
!12168 = !DILocation(line: 3779, column: 2, scope: !12013)
!12169 = distinct !DISubprogram(name: "nv_nic_irq_other", scope: !3, file: !3, line: 3898, type: !11693, scopeLine: 3899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12170 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !12171)
!12171 = distinct !DILocation(line: 3945, column: 4, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 3945, column: 4)
!12173 = distinct !DILexicalBlock(scope: !12174, file: !3, line: 3945, column: 4)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !3, line: 3945, column: 4)
!12175 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 3945, column: 4)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 3945, column: 4)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 3944, column: 41)
!12178 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3944, column: 7)
!12179 = distinct !DILexicalBlock(scope: !12180, file: !3, line: 3907, column: 20)
!12180 = distinct !DILexicalBlock(scope: !12181, file: !3, line: 3907, column: 2)
!12181 = distinct !DILexicalBlock(scope: !12169, file: !3, line: 3907, column: 2)
!12182 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !12183)
!12183 = distinct !DILocation(line: 3941, column: 4, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12185, file: !3, line: 3930, column: 41)
!12185 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3930, column: 7)
!12186 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !12183)
!12187 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !12188)
!12188 = distinct !DILocation(line: 3931, column: 4, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !3, line: 3931, column: 4)
!12190 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 3931, column: 4)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3931, column: 4)
!12192 = distinct !DILexicalBlock(scope: !12193, file: !3, line: 3931, column: 4)
!12193 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 3931, column: 4)
!12194 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !12195)
!12195 = distinct !DILocation(line: 3927, column: 4, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12197, file: !3, line: 3924, column: 68)
!12197 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3924, column: 7)
!12198 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !12195)
!12199 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !12200)
!12200 = distinct !DILocation(line: 3925, column: 4, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 3925, column: 4)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 3925, column: 4)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !3, line: 3925, column: 4)
!12204 = distinct !DILexicalBlock(scope: !12205, file: !3, line: 3925, column: 4)
!12205 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 3925, column: 4)
!12206 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !12207)
!12207 = distinct !DILocation(line: 3922, column: 4, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12209, file: !3, line: 3919, column: 32)
!12209 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3919, column: 7)
!12210 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !12207)
!12211 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !12212)
!12212 = distinct !DILocation(line: 3920, column: 4, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !3, line: 3920, column: 4)
!12214 = distinct !DILexicalBlock(scope: !12215, file: !3, line: 3920, column: 4)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 3920, column: 4)
!12216 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 3920, column: 4)
!12217 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 3920, column: 4)
!12218 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !12219)
!12219 = distinct !DILocation(line: 3917, column: 3, scope: !12179)
!12220 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !12219)
!12221 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !12222)
!12222 = distinct !DILocation(line: 3954, column: 4, scope: !12177)
!12223 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !12222)
!12224 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !12225)
!12225 = distinct !DILocation(line: 3915, column: 3, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12227, file: !3, line: 3915, column: 3)
!12227 = distinct !DILexicalBlock(scope: !12228, file: !3, line: 3915, column: 3)
!12228 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 3915, column: 3)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 3915, column: 3)
!12230 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3915, column: 3)
!12231 = !DILocalVariable(name: "foo", arg: 1, scope: !12169, file: !3, line: 3898, type: !32)
!12232 = !DILocation(line: 3898, column: 41, scope: !12169)
!12233 = !DILocalVariable(name: "data", arg: 2, scope: !12169, file: !3, line: 3898, type: !591)
!12234 = !DILocation(line: 3898, column: 52, scope: !12169)
!12235 = !DILocalVariable(name: "dev", scope: !12169, file: !3, line: 3900, type: !290)
!12236 = !DILocation(line: 3900, column: 21, scope: !12169)
!12237 = !DILocation(line: 3900, column: 49, scope: !12169)
!12238 = !DILocation(line: 3900, column: 27, scope: !12169)
!12239 = !DILocalVariable(name: "np", scope: !12169, file: !3, line: 3901, type: !7446)
!12240 = !DILocation(line: 3901, column: 18, scope: !12169)
!12241 = !DILocation(line: 3901, column: 35, scope: !12169)
!12242 = !DILocation(line: 3901, column: 23, scope: !12169)
!12243 = !DILocalVariable(name: "base", scope: !12169, file: !3, line: 3902, type: !793)
!12244 = !DILocation(line: 3902, column: 14, scope: !12169)
!12245 = !DILocation(line: 3902, column: 32, scope: !12169)
!12246 = !DILocation(line: 3902, column: 21, scope: !12169)
!12247 = !DILocalVariable(name: "events", scope: !12169, file: !3, line: 3903, type: !987)
!12248 = !DILocation(line: 3903, column: 6, scope: !12169)
!12249 = !DILocalVariable(name: "i", scope: !12169, file: !3, line: 3904, type: !32)
!12250 = !DILocation(line: 3904, column: 6, scope: !12169)
!12251 = !DILocalVariable(name: "flags", scope: !12169, file: !3, line: 3905, type: !312)
!12252 = !DILocation(line: 3905, column: 16, scope: !12169)
!12253 = !DILocation(line: 3907, column: 9, scope: !12181)
!12254 = !DILocation(line: 3907, column: 7, scope: !12181)
!12255 = !DILocation(line: 3908, column: 18, scope: !12179)
!12256 = !DILocation(line: 3908, column: 23, scope: !12179)
!12257 = !DILocation(line: 3908, column: 12, scope: !12179)
!12258 = !DILocation(line: 3908, column: 45, scope: !12179)
!12259 = !DILocation(line: 3908, column: 10, scope: !12179)
!12260 = !DILocation(line: 3909, column: 10, scope: !12179)
!12261 = !DILocation(line: 3909, column: 18, scope: !12179)
!12262 = !DILocation(line: 3909, column: 23, scope: !12179)
!12263 = !DILocation(line: 3909, column: 3, scope: !12179)
!12264 = !DILocation(line: 3911, column: 9, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3911, column: 7)
!12266 = !DILocation(line: 3911, column: 18, scope: !12265)
!12267 = !DILocation(line: 3911, column: 22, scope: !12265)
!12268 = !DILocation(line: 3911, column: 16, scope: !12265)
!12269 = !DILocation(line: 3911, column: 7, scope: !12179)
!12270 = !DILocation(line: 3912, column: 4, scope: !12265)
!12271 = !DILocation(line: 3915, column: 3, scope: !12179)
!12272 = !DILocation(line: 3915, column: 3, scope: !12230)
!12273 = !DILocalVariable(name: "__dummy", scope: !12274, file: !3, line: 3915, type: !312)
!12274 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 3915, column: 3)
!12275 = !DILocation(line: 3915, column: 3, scope: !12274)
!12276 = !DILocalVariable(name: "__dummy2", scope: !12274, file: !3, line: 3915, type: !312)
!12277 = !DILocation(line: 3915, column: 3, scope: !12229)
!12278 = !DILocation(line: 3915, column: 3, scope: !12228)
!12279 = !DILocation(line: 3915, column: 3, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12228, file: !3, line: 3915, column: 3)
!12281 = !DILocalVariable(name: "__dummy", scope: !12282, file: !3, line: 3915, type: !312)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !3, line: 3915, column: 3)
!12283 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 3915, column: 3)
!12284 = !DILocation(line: 3915, column: 3, scope: !12282)
!12285 = !DILocalVariable(name: "__dummy2", scope: !12282, file: !3, line: 3915, type: !312)
!12286 = !DILocation(line: 3915, column: 3, scope: !12283)
!12287 = !DILocation(line: 3915, column: 3, scope: !12227)
!12288 = !{i32 -2139310928}
!12289 = !DILocation(line: 3915, column: 3, scope: !12226)
!12290 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !12225)
!12291 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !12225)
!12292 = !DILocation(line: 3916, column: 24, scope: !12179)
!12293 = !DILocation(line: 3916, column: 3, scope: !12179)
!12294 = !DILocation(line: 3917, column: 27, scope: !12179)
!12295 = !DILocation(line: 3917, column: 31, scope: !12179)
!12296 = !DILocation(line: 3917, column: 37, scope: !12179)
!12297 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !12219)
!12298 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !12219)
!12299 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !12219)
!12300 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !12219)
!12301 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !12219)
!12302 = !DILocation(line: 3919, column: 7, scope: !12209)
!12303 = !DILocation(line: 3919, column: 14, scope: !12209)
!12304 = !DILocation(line: 3919, column: 7, scope: !12179)
!12305 = !DILocation(line: 3920, column: 4, scope: !12208)
!12306 = !DILocation(line: 3920, column: 4, scope: !12217)
!12307 = !DILocalVariable(name: "__dummy", scope: !12308, file: !3, line: 3920, type: !312)
!12308 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 3920, column: 4)
!12309 = !DILocation(line: 3920, column: 4, scope: !12308)
!12310 = !DILocalVariable(name: "__dummy2", scope: !12308, file: !3, line: 3920, type: !312)
!12311 = !DILocation(line: 3920, column: 4, scope: !12216)
!12312 = !DILocation(line: 3920, column: 4, scope: !12215)
!12313 = !DILocation(line: 3920, column: 4, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12215, file: !3, line: 3920, column: 4)
!12315 = !DILocalVariable(name: "__dummy", scope: !12316, file: !3, line: 3920, type: !312)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !3, line: 3920, column: 4)
!12317 = distinct !DILexicalBlock(scope: !12314, file: !3, line: 3920, column: 4)
!12318 = !DILocation(line: 3920, column: 4, scope: !12316)
!12319 = !DILocalVariable(name: "__dummy2", scope: !12316, file: !3, line: 3920, type: !312)
!12320 = !DILocation(line: 3920, column: 4, scope: !12317)
!12321 = !DILocation(line: 3920, column: 4, scope: !12214)
!12322 = !{i32 -2139309913}
!12323 = !DILocation(line: 3920, column: 4, scope: !12213)
!12324 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !12212)
!12325 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !12212)
!12326 = !DILocation(line: 3921, column: 16, scope: !12208)
!12327 = !DILocation(line: 3921, column: 4, scope: !12208)
!12328 = !DILocation(line: 3922, column: 28, scope: !12208)
!12329 = !DILocation(line: 3922, column: 32, scope: !12208)
!12330 = !DILocation(line: 3922, column: 38, scope: !12208)
!12331 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !12207)
!12332 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !12207)
!12333 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !12207)
!12334 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !12207)
!12335 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !12207)
!12336 = !DILocation(line: 3923, column: 3, scope: !12208)
!12337 = !DILocation(line: 3924, column: 7, scope: !12197)
!12338 = !DILocation(line: 3924, column: 11, scope: !12197)
!12339 = !DILocation(line: 3924, column: 26, scope: !12197)
!12340 = !DILocation(line: 3924, column: 29, scope: !12197)
!12341 = !DILocation(line: 3924, column: 7, scope: !12179)
!12342 = !DILocation(line: 3925, column: 4, scope: !12196)
!12343 = !DILocation(line: 3925, column: 4, scope: !12205)
!12344 = !DILocalVariable(name: "__dummy", scope: !12345, file: !3, line: 3925, type: !312)
!12345 = distinct !DILexicalBlock(scope: !12204, file: !3, line: 3925, column: 4)
!12346 = !DILocation(line: 3925, column: 4, scope: !12345)
!12347 = !DILocalVariable(name: "__dummy2", scope: !12345, file: !3, line: 3925, type: !312)
!12348 = !DILocation(line: 3925, column: 4, scope: !12204)
!12349 = !DILocation(line: 3925, column: 4, scope: !12203)
!12350 = !DILocation(line: 3925, column: 4, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 3925, column: 4)
!12352 = !DILocalVariable(name: "__dummy", scope: !12353, file: !3, line: 3925, type: !312)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 3925, column: 4)
!12354 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 3925, column: 4)
!12355 = !DILocation(line: 3925, column: 4, scope: !12353)
!12356 = !DILocalVariable(name: "__dummy2", scope: !12353, file: !3, line: 3925, type: !312)
!12357 = !DILocation(line: 3925, column: 4, scope: !12354)
!12358 = !DILocation(line: 3925, column: 4, scope: !12202)
!12359 = !{i32 -2139308535}
!12360 = !DILocation(line: 3925, column: 4, scope: !12201)
!12361 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !12200)
!12362 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !12200)
!12363 = !DILocation(line: 3926, column: 18, scope: !12196)
!12364 = !DILocation(line: 3926, column: 4, scope: !12196)
!12365 = !DILocation(line: 3927, column: 28, scope: !12196)
!12366 = !DILocation(line: 3927, column: 32, scope: !12196)
!12367 = !DILocation(line: 3927, column: 38, scope: !12196)
!12368 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !12195)
!12369 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !12195)
!12370 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !12195)
!12371 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !12195)
!12372 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !12195)
!12373 = !DILocation(line: 3928, column: 23, scope: !12196)
!12374 = !DILocation(line: 3928, column: 31, scope: !12196)
!12375 = !DILocation(line: 3928, column: 4, scope: !12196)
!12376 = !DILocation(line: 3928, column: 8, scope: !12196)
!12377 = !DILocation(line: 3928, column: 21, scope: !12196)
!12378 = !DILocation(line: 3929, column: 3, scope: !12196)
!12379 = !DILocation(line: 3930, column: 7, scope: !12185)
!12380 = !DILocation(line: 3930, column: 14, scope: !12185)
!12381 = !DILocation(line: 3930, column: 7, scope: !12179)
!12382 = !DILocation(line: 3931, column: 4, scope: !12184)
!12383 = !DILocation(line: 3931, column: 4, scope: !12193)
!12384 = !DILocalVariable(name: "__dummy", scope: !12385, file: !3, line: 3931, type: !312)
!12385 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3931, column: 4)
!12386 = !DILocation(line: 3931, column: 4, scope: !12385)
!12387 = !DILocalVariable(name: "__dummy2", scope: !12385, file: !3, line: 3931, type: !312)
!12388 = !DILocation(line: 3931, column: 4, scope: !12192)
!12389 = !DILocation(line: 3931, column: 4, scope: !12191)
!12390 = !DILocation(line: 3931, column: 4, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 3931, column: 4)
!12392 = !DILocalVariable(name: "__dummy", scope: !12393, file: !3, line: 3931, type: !312)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !3, line: 3931, column: 4)
!12394 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 3931, column: 4)
!12395 = !DILocation(line: 3931, column: 4, scope: !12393)
!12396 = !DILocalVariable(name: "__dummy2", scope: !12393, file: !3, line: 3931, type: !312)
!12397 = !DILocation(line: 3931, column: 4, scope: !12394)
!12398 = !DILocation(line: 3931, column: 4, scope: !12190)
!12399 = !{i32 -2139307502}
!12400 = !DILocation(line: 3931, column: 4, scope: !12189)
!12401 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !12188)
!12402 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !12188)
!12403 = !DILocation(line: 3933, column: 28, scope: !12184)
!12404 = !DILocation(line: 3933, column: 33, scope: !12184)
!12405 = !DILocation(line: 3933, column: 4, scope: !12184)
!12406 = !DILocation(line: 3934, column: 13, scope: !12184)
!12407 = !DILocation(line: 3934, column: 4, scope: !12184)
!12408 = !DILocation(line: 3936, column: 9, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 3936, column: 8)
!12410 = !DILocation(line: 3936, column: 13, scope: !12409)
!12411 = !DILocation(line: 3936, column: 8, scope: !12184)
!12412 = !DILocation(line: 3937, column: 5, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12409, file: !3, line: 3936, column: 26)
!12414 = !DILocation(line: 3937, column: 9, scope: !12413)
!12415 = !DILocation(line: 3937, column: 22, scope: !12413)
!12416 = !DILocation(line: 3938, column: 5, scope: !12413)
!12417 = !DILocation(line: 3938, column: 9, scope: !12413)
!12418 = !DILocation(line: 3938, column: 23, scope: !12413)
!12419 = !DILocation(line: 3939, column: 16, scope: !12413)
!12420 = !DILocation(line: 3939, column: 20, scope: !12413)
!12421 = !DILocation(line: 3939, column: 30, scope: !12413)
!12422 = !DILocation(line: 3939, column: 38, scope: !12413)
!12423 = !DILocation(line: 3939, column: 5, scope: !12413)
!12424 = !DILocation(line: 3940, column: 4, scope: !12413)
!12425 = !DILocation(line: 3941, column: 28, scope: !12184)
!12426 = !DILocation(line: 3941, column: 32, scope: !12184)
!12427 = !DILocation(line: 3941, column: 38, scope: !12184)
!12428 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !12183)
!12429 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !12183)
!12430 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !12183)
!12431 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !12183)
!12432 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !12183)
!12433 = !DILocation(line: 3942, column: 4, scope: !12184)
!12434 = !DILocation(line: 3944, column: 7, scope: !12178)
!12435 = !DILocation(line: 3944, column: 7, scope: !12179)
!12436 = !DILocation(line: 3945, column: 4, scope: !12177)
!12437 = !DILocation(line: 3945, column: 4, scope: !12176)
!12438 = !DILocalVariable(name: "__dummy", scope: !12439, file: !3, line: 3945, type: !312)
!12439 = distinct !DILexicalBlock(scope: !12175, file: !3, line: 3945, column: 4)
!12440 = !DILocation(line: 3945, column: 4, scope: !12439)
!12441 = !DILocalVariable(name: "__dummy2", scope: !12439, file: !3, line: 3945, type: !312)
!12442 = !DILocation(line: 3945, column: 4, scope: !12175)
!12443 = !DILocation(line: 3945, column: 4, scope: !12174)
!12444 = !DILocation(line: 3945, column: 4, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12174, file: !3, line: 3945, column: 4)
!12446 = !DILocalVariable(name: "__dummy", scope: !12447, file: !3, line: 3945, type: !312)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 3945, column: 4)
!12448 = distinct !DILexicalBlock(scope: !12445, file: !3, line: 3945, column: 4)
!12449 = !DILocation(line: 3945, column: 4, scope: !12447)
!12450 = !DILocalVariable(name: "__dummy2", scope: !12447, file: !3, line: 3945, type: !312)
!12451 = !DILocation(line: 3945, column: 4, scope: !12448)
!12452 = !DILocation(line: 3945, column: 4, scope: !12173)
!12453 = !{i32 -2139306259}
!12454 = !DILocation(line: 3945, column: 4, scope: !12172)
!12455 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !12171)
!12456 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !12171)
!12457 = !DILocation(line: 3947, column: 28, scope: !12177)
!12458 = !DILocation(line: 3947, column: 33, scope: !12177)
!12459 = !DILocation(line: 3947, column: 4, scope: !12177)
!12460 = !DILocation(line: 3948, column: 13, scope: !12177)
!12461 = !DILocation(line: 3948, column: 4, scope: !12177)
!12462 = !DILocation(line: 3950, column: 9, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 3950, column: 8)
!12464 = !DILocation(line: 3950, column: 13, scope: !12463)
!12465 = !DILocation(line: 3950, column: 8, scope: !12177)
!12466 = !DILocation(line: 3951, column: 5, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12463, file: !3, line: 3950, column: 26)
!12468 = !DILocation(line: 3951, column: 9, scope: !12467)
!12469 = !DILocation(line: 3951, column: 22, scope: !12467)
!12470 = !DILocation(line: 3952, column: 16, scope: !12467)
!12471 = !DILocation(line: 3952, column: 20, scope: !12467)
!12472 = !DILocation(line: 3952, column: 30, scope: !12467)
!12473 = !DILocation(line: 3952, column: 38, scope: !12467)
!12474 = !DILocation(line: 3952, column: 5, scope: !12467)
!12475 = !DILocation(line: 3953, column: 4, scope: !12467)
!12476 = !DILocation(line: 3954, column: 28, scope: !12177)
!12477 = !DILocation(line: 3954, column: 32, scope: !12177)
!12478 = !DILocation(line: 3954, column: 38, scope: !12177)
!12479 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !12222)
!12480 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !12222)
!12481 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !12222)
!12482 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !12222)
!12483 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !12222)
!12484 = !DILocation(line: 3957, column: 4, scope: !12177)
!12485 = !DILocation(line: 3960, column: 2, scope: !12179)
!12486 = !DILocation(line: 3907, column: 16, scope: !12180)
!12487 = !DILocation(line: 3907, column: 2, scope: !12180)
!12488 = distinct !{!12488, !12489, !12490}
!12489 = !DILocation(line: 3907, column: 2, scope: !12181)
!12490 = !DILocation(line: 3960, column: 2, scope: !12181)
!12491 = !DILocation(line: 3962, column: 9, scope: !12169)
!12492 = !DILocation(line: 3962, column: 2, scope: !12169)
!12493 = distinct !DISubprogram(name: "enable_irq_lockdep_irqrestore", scope: !3012, file: !3012, line: 454, type: !11356, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12494 = !DILocalVariable(name: "irq", arg: 1, scope: !12493, file: !3012, line: 454, type: !7)
!12495 = !DILocation(line: 454, column: 63, scope: !12493)
!12496 = !DILocalVariable(name: "flags", arg: 2, scope: !12493, file: !3012, line: 454, type: !3439)
!12497 = !DILocation(line: 454, column: 83, scope: !12493)
!12498 = !DILocation(line: 459, column: 13, scope: !12493)
!12499 = !DILocation(line: 459, column: 2, scope: !12493)
!12500 = !DILocation(line: 460, column: 1, scope: !12493)
!12501 = distinct !DISubprogram(name: "get_nvpriv", scope: !3, file: !3, line: 934, type: !12502, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12502 = !DISubroutineType(types: !12503)
!12503 = !{!7446, !290}
!12504 = !DILocalVariable(name: "dev", arg: 1, scope: !12501, file: !3, line: 934, type: !290)
!12505 = !DILocation(line: 934, column: 61, scope: !12501)
!12506 = !DILocation(line: 936, column: 21, scope: !12501)
!12507 = !DILocation(line: 936, column: 9, scope: !12501)
!12508 = !DILocation(line: 936, column: 2, scope: !12501)
!12509 = distinct !DISubprogram(name: "test_bit", scope: !12510, file: !12510, line: 132, type: !12511, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12510 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12511 = !DISubroutineType(types: !12512)
!12512 = !{!771, !998, !12513}
!12513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12514, size: 64)
!12514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12515)
!12515 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!12516 = !DILocalVariable(name: "nr", arg: 1, scope: !12517, file: !12518, line: 210, type: !998)
!12517 = distinct !DISubprogram(name: "variable_test_bit", scope: !12518, file: !12518, line: 210, type: !12511, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12518 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!12519 = !DILocation(line: 210, column: 52, scope: !12517, inlinedAt: !12520)
!12520 = distinct !DILocation(line: 135, column: 9, scope: !12509)
!12521 = !DILocalVariable(name: "addr", arg: 2, scope: !12517, file: !12518, line: 210, type: !12513)
!12522 = !DILocation(line: 210, column: 86, scope: !12517, inlinedAt: !12520)
!12523 = !DILocalVariable(name: "oldbit", scope: !12517, file: !12518, line: 212, type: !771)
!12524 = !DILocation(line: 212, column: 7, scope: !12517, inlinedAt: !12520)
!12525 = !DILocalVariable(name: "nr", arg: 1, scope: !12526, file: !12518, line: 204, type: !998)
!12526 = distinct !DISubprogram(name: "constant_test_bit", scope: !12518, file: !12518, line: 204, type: !12511, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12527 = !DILocation(line: 204, column: 52, scope: !12526, inlinedAt: !12528)
!12528 = distinct !DILocation(line: 135, column: 9, scope: !12509)
!12529 = !DILocalVariable(name: "addr", arg: 2, scope: !12526, file: !12518, line: 204, type: !12513)
!12530 = !DILocation(line: 204, column: 86, scope: !12526, inlinedAt: !12528)
!12531 = !DILocalVariable(name: "v", arg: 1, scope: !12532, file: !12533, line: 69, type: !10325)
!12532 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !12533, file: !12533, line: 69, type: !12534, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12533 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12534 = !DISubroutineType(types: !12535)
!12535 = !{null, !10325, !1039}
!12536 = !DILocation(line: 69, column: 73, scope: !12532, inlinedAt: !12537)
!12537 = distinct !DILocation(line: 134, column: 2, scope: !12509)
!12538 = !DILocalVariable(name: "size", arg: 2, scope: !12532, file: !12533, line: 69, type: !1039)
!12539 = !DILocation(line: 69, column: 83, scope: !12532, inlinedAt: !12537)
!12540 = !DILocalVariable(name: "nr", arg: 1, scope: !12509, file: !12510, line: 132, type: !998)
!12541 = !DILocation(line: 132, column: 34, scope: !12509)
!12542 = !DILocalVariable(name: "addr", arg: 2, scope: !12509, file: !12510, line: 132, type: !12513)
!12543 = !DILocation(line: 132, column: 68, scope: !12509)
!12544 = !DILocation(line: 134, column: 25, scope: !12509)
!12545 = !DILocation(line: 134, column: 32, scope: !12509)
!12546 = !DILocation(line: 134, column: 30, scope: !12509)
!12547 = !DILocation(line: 71, column: 19, scope: !12532, inlinedAt: !12537)
!12548 = !DILocation(line: 71, column: 22, scope: !12532, inlinedAt: !12537)
!12549 = !DILocation(line: 71, column: 2, scope: !12532, inlinedAt: !12537)
!12550 = !DILocation(line: 72, column: 2, scope: !12532, inlinedAt: !12537)
!12551 = !DILocation(line: 135, column: 9, scope: !12509)
!12552 = !DILocation(line: 206, column: 19, scope: !12526, inlinedAt: !12528)
!12553 = !DILocation(line: 206, column: 22, scope: !12526, inlinedAt: !12528)
!12554 = !DILocation(line: 206, column: 15, scope: !12526, inlinedAt: !12528)
!12555 = !DILocation(line: 207, column: 4, scope: !12526, inlinedAt: !12528)
!12556 = !DILocation(line: 207, column: 9, scope: !12526, inlinedAt: !12528)
!12557 = !DILocation(line: 207, column: 12, scope: !12526, inlinedAt: !12528)
!12558 = !DILocation(line: 206, column: 44, scope: !12526, inlinedAt: !12528)
!12559 = !DILocation(line: 207, column: 37, scope: !12526, inlinedAt: !12528)
!12560 = !DILocation(line: 217, column: 33, scope: !12517, inlinedAt: !12520)
!12561 = !DILocation(line: 217, column: 46, scope: !12517, inlinedAt: !12520)
!12562 = !DILocation(line: 214, column: 2, scope: !12517, inlinedAt: !12520)
!12563 = !{i32 -2146950200, i32 -2146950140}
!12564 = !DILocation(line: 219, column: 9, scope: !12517, inlinedAt: !12520)
!12565 = !DILocation(line: 135, column: 2, scope: !12509)
!12566 = distinct !DISubprogram(name: "kasan_check_read", scope: !12567, file: !12567, line: 34, type: !12568, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12567 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12568 = !DISubroutineType(types: !12569)
!12569 = !{!771, !10325, !7}
!12570 = !DILocalVariable(name: "p", arg: 1, scope: !12566, file: !12567, line: 34, type: !10325)
!12571 = !DILocation(line: 34, column: 58, scope: !12566)
!12572 = !DILocalVariable(name: "size", arg: 2, scope: !12566, file: !12567, line: 34, type: !7)
!12573 = !DILocation(line: 34, column: 74, scope: !12566)
!12574 = !DILocation(line: 36, column: 2, scope: !12566)
!12575 = distinct !DISubprogram(name: "kcsan_check_access", scope: !12576, file: !12576, line: 178, type: !12577, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12576 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12577 = !DISubroutineType(types: !12578)
!12578 = !{null, !10325, !1039, !32}
!12579 = !DILocalVariable(name: "ptr", arg: 1, scope: !12575, file: !12576, line: 178, type: !10325)
!12580 = !DILocation(line: 178, column: 60, scope: !12575)
!12581 = !DILocalVariable(name: "size", arg: 2, scope: !12575, file: !12576, line: 178, type: !1039)
!12582 = !DILocation(line: 178, column: 72, scope: !12575)
!12583 = !DILocalVariable(name: "type", arg: 3, scope: !12575, file: !12576, line: 179, type: !32)
!12584 = !DILocation(line: 179, column: 15, scope: !12575)
!12585 = !DILocation(line: 179, column: 23, scope: !12575)
!12586 = distinct !DISubprogram(name: "local_bh_disable", scope: !12587, file: !12587, line: 17, type: !3809, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12587 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!12588 = !DILocalVariable(name: "val", arg: 1, scope: !12589, file: !12590, line: 77, type: !32)
!12589 = distinct !DISubprogram(name: "__preempt_count_add", scope: !12590, file: !12590, line: 77, type: !3802, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12590 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!12591 = !DILocation(line: 77, column: 53, scope: !12589, inlinedAt: !12592)
!12592 = distinct !DILocation(line: 12, column: 2, scope: !12593, inlinedAt: !12596)
!12593 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !12587, file: !12587, line: 10, type: !12594, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12594 = !DISubroutineType(types: !12595)
!12595 = !{null, !312, !7}
!12596 = distinct !DILocation(line: 19, column: 2, scope: !12586)
!12597 = !DILocalVariable(name: "pao_ID__", scope: !12598, file: !12590, line: 79, type: !12599)
!12598 = distinct !DILexicalBlock(scope: !12589, file: !12590, line: 79, column: 2)
!12599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!12600 = !DILocation(line: 79, column: 2, scope: !12598, inlinedAt: !12592)
!12601 = !DILocalVariable(name: "pto_val__", scope: !12602, file: !12590, line: 79, type: !987)
!12602 = distinct !DILexicalBlock(scope: !12603, file: !12590, line: 79, column: 2)
!12603 = distinct !DILexicalBlock(scope: !12604, file: !12590, line: 79, column: 2)
!12604 = distinct !DILexicalBlock(scope: !12598, file: !12590, line: 79, column: 2)
!12605 = !DILocation(line: 79, column: 2, scope: !12602, inlinedAt: !12592)
!12606 = !DILocalVariable(name: "ip", arg: 1, scope: !12593, file: !12587, line: 10, type: !312)
!12607 = !DILocation(line: 10, column: 65, scope: !12593, inlinedAt: !12596)
!12608 = !DILocalVariable(name: "cnt", arg: 2, scope: !12593, file: !12587, line: 10, type: !7)
!12609 = !DILocation(line: 10, column: 82, scope: !12593, inlinedAt: !12596)
!12610 = !DILocation(line: 19, column: 24, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12586, file: !12587, line: 19, column: 24)
!12612 = !DILabel(scope: !12611, name: "__here", file: !12587, line: 19)
!12613 = !DILocation(line: 12, column: 2, scope: !12593, inlinedAt: !12596)
!12614 = !{i32 -2145356114}
!12615 = !DILocation(line: 13, column: 2, scope: !12593, inlinedAt: !12596)
!12616 = !{i32 -2145346512}
!12617 = !DILocation(line: 20, column: 1, scope: !12586)
!12618 = distinct !DISubprogram(name: "netif_tx_lock", scope: !31, file: !31, line: 4237, type: !406, scopeLine: 4238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12619 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !12620)
!12620 = distinct !DILocation(line: 4242, column: 2, scope: !12618)
!12621 = !DILocalVariable(name: "dev", arg: 1, scope: !12618, file: !31, line: 4237, type: !290)
!12622 = !DILocation(line: 4237, column: 53, scope: !12618)
!12623 = !DILocalVariable(name: "i", scope: !12618, file: !31, line: 4239, type: !7)
!12624 = !DILocation(line: 4239, column: 15, scope: !12618)
!12625 = !DILocalVariable(name: "cpu", scope: !12618, file: !31, line: 4240, type: !32)
!12626 = !DILocation(line: 4240, column: 6, scope: !12618)
!12627 = !DILocation(line: 4242, column: 13, scope: !12618)
!12628 = !DILocation(line: 4242, column: 18, scope: !12618)
!12629 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !12620)
!12630 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !12620)
!12631 = !DILocation(line: 4243, column: 6, scope: !12618)
!12632 = !DILocation(line: 4244, column: 9, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12618, file: !31, line: 4244, column: 2)
!12634 = !DILocation(line: 4244, column: 7, scope: !12633)
!12635 = !DILocation(line: 4244, column: 14, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12633, file: !31, line: 4244, column: 2)
!12637 = !DILocation(line: 4244, column: 18, scope: !12636)
!12638 = !DILocation(line: 4244, column: 23, scope: !12636)
!12639 = !DILocation(line: 4244, column: 16, scope: !12636)
!12640 = !DILocation(line: 4244, column: 2, scope: !12633)
!12641 = !DILocalVariable(name: "txq", scope: !12642, file: !31, line: 4245, type: !6438)
!12642 = distinct !DILexicalBlock(scope: !12636, file: !31, line: 4244, column: 43)
!12643 = !DILocation(line: 4245, column: 24, scope: !12642)
!12644 = !DILocation(line: 4245, column: 50, scope: !12642)
!12645 = !DILocation(line: 4245, column: 55, scope: !12642)
!12646 = !DILocation(line: 4245, column: 30, scope: !12642)
!12647 = !DILocation(line: 4253, column: 19, scope: !12642)
!12648 = !DILocation(line: 4253, column: 24, scope: !12642)
!12649 = !DILocation(line: 4253, column: 3, scope: !12642)
!12650 = !DILocation(line: 4254, column: 34, scope: !12642)
!12651 = !DILocation(line: 4254, column: 39, scope: !12642)
!12652 = !DILocation(line: 4254, column: 3, scope: !12642)
!12653 = !DILocation(line: 4255, column: 21, scope: !12642)
!12654 = !DILocation(line: 4255, column: 3, scope: !12642)
!12655 = !DILocation(line: 4256, column: 2, scope: !12642)
!12656 = !DILocation(line: 4244, column: 39, scope: !12636)
!12657 = !DILocation(line: 4244, column: 2, scope: !12636)
!12658 = distinct !{!12658, !12640, !12659}
!12659 = !DILocation(line: 4256, column: 2, scope: !12633)
!12660 = !DILocation(line: 4257, column: 1, scope: !12618)
!12661 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !31, file: !31, line: 2234, type: !12662, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12662 = !DISubroutineType(types: !12663)
!12663 = !{!6438, !773, !7}
!12664 = !DILocalVariable(name: "dev", arg: 1, scope: !12661, file: !31, line: 2234, type: !773)
!12665 = !DILocation(line: 2234, column: 67, scope: !12661)
!12666 = !DILocalVariable(name: "index", arg: 2, scope: !12661, file: !31, line: 2235, type: !7)
!12667 = !DILocation(line: 2235, column: 20, scope: !12661)
!12668 = !DILocation(line: 2237, column: 10, scope: !12661)
!12669 = !DILocation(line: 2237, column: 15, scope: !12661)
!12670 = !DILocation(line: 2237, column: 19, scope: !12661)
!12671 = !DILocation(line: 2237, column: 2, scope: !12661)
!12672 = distinct !DISubprogram(name: "__netif_tx_lock", scope: !31, file: !31, line: 4173, type: !12673, scopeLine: 4174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12673 = !DISubroutineType(types: !12674)
!12674 = !{null, !6438, !32}
!12675 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !12676)
!12676 = distinct !DILocation(line: 4175, column: 2, scope: !12672)
!12677 = !DILocalVariable(name: "txq", arg: 1, scope: !12672, file: !31, line: 4173, type: !6438)
!12678 = !DILocation(line: 4173, column: 57, scope: !12672)
!12679 = !DILocalVariable(name: "cpu", arg: 2, scope: !12672, file: !31, line: 4173, type: !32)
!12680 = !DILocation(line: 4173, column: 66, scope: !12672)
!12681 = !DILocation(line: 4175, column: 13, scope: !12672)
!12682 = !DILocation(line: 4175, column: 18, scope: !12672)
!12683 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !12676)
!12684 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !12676)
!12685 = !DILocation(line: 4176, column: 25, scope: !12672)
!12686 = !DILocation(line: 4176, column: 2, scope: !12672)
!12687 = !DILocation(line: 4176, column: 7, scope: !12672)
!12688 = !DILocation(line: 4176, column: 23, scope: !12672)
!12689 = !DILocation(line: 4177, column: 1, scope: !12672)
!12690 = distinct !DISubprogram(name: "set_bit", scope: !12691, file: !12691, line: 26, type: !12692, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12691 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12692 = !DISubroutineType(types: !12693)
!12693 = !{null, !998, !12694}
!12694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12515, size: 64)
!12695 = !DILocalVariable(name: "nr", arg: 1, scope: !12696, file: !12518, line: 52, type: !998)
!12696 = distinct !DISubprogram(name: "arch_set_bit", scope: !12518, file: !12518, line: 52, type: !12692, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12697 = !DILocation(line: 52, column: 19, scope: !12696, inlinedAt: !12698)
!12698 = distinct !DILocation(line: 29, column: 2, scope: !12690)
!12699 = !DILocalVariable(name: "addr", arg: 2, scope: !12696, file: !12518, line: 52, type: !12694)
!12700 = !DILocation(line: 52, column: 47, scope: !12696, inlinedAt: !12698)
!12701 = !DILocalVariable(name: "v", arg: 1, scope: !12702, file: !12533, line: 84, type: !10325)
!12702 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12533, file: !12533, line: 84, type: !12534, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12703 = !DILocation(line: 84, column: 74, scope: !12702, inlinedAt: !12704)
!12704 = distinct !DILocation(line: 28, column: 2, scope: !12690)
!12705 = !DILocalVariable(name: "size", arg: 2, scope: !12702, file: !12533, line: 84, type: !1039)
!12706 = !DILocation(line: 84, column: 84, scope: !12702, inlinedAt: !12704)
!12707 = !DILocalVariable(name: "nr", arg: 1, scope: !12690, file: !12691, line: 26, type: !998)
!12708 = !DILocation(line: 26, column: 33, scope: !12690)
!12709 = !DILocalVariable(name: "addr", arg: 2, scope: !12690, file: !12691, line: 26, type: !12694)
!12710 = !DILocation(line: 26, column: 61, scope: !12690)
!12711 = !DILocation(line: 28, column: 26, scope: !12690)
!12712 = !DILocation(line: 28, column: 33, scope: !12690)
!12713 = !DILocation(line: 28, column: 31, scope: !12690)
!12714 = !DILocation(line: 86, column: 20, scope: !12702, inlinedAt: !12704)
!12715 = !DILocation(line: 86, column: 23, scope: !12702, inlinedAt: !12704)
!12716 = !DILocation(line: 86, column: 2, scope: !12702, inlinedAt: !12704)
!12717 = !DILocation(line: 87, column: 2, scope: !12702, inlinedAt: !12704)
!12718 = !DILocation(line: 29, column: 15, scope: !12690)
!12719 = !DILocation(line: 29, column: 19, scope: !12690)
!12720 = !DILocation(line: 54, column: 27, scope: !12721, inlinedAt: !12698)
!12721 = distinct !DILexicalBlock(scope: !12696, file: !12518, line: 54, column: 6)
!12722 = !DILocation(line: 54, column: 6, scope: !12721, inlinedAt: !12698)
!12723 = !DILocation(line: 54, column: 6, scope: !12696, inlinedAt: !12698)
!12724 = !DILocation(line: 56, column: 6, scope: !12725, inlinedAt: !12698)
!12725 = distinct !DILexicalBlock(scope: !12721, file: !12518, line: 54, column: 32)
!12726 = !DILocation(line: 57, column: 12, scope: !12725, inlinedAt: !12698)
!12727 = !DILocation(line: 55, column: 3, scope: !12725, inlinedAt: !12698)
!12728 = !{i32 -2146959448}
!12729 = !DILocation(line: 59, column: 2, scope: !12725, inlinedAt: !12698)
!12730 = !DILocation(line: 61, column: 8, scope: !12731, inlinedAt: !12698)
!12731 = distinct !DILexicalBlock(scope: !12721, file: !12518, line: 59, column: 9)
!12732 = !DILocation(line: 61, column: 32, scope: !12731, inlinedAt: !12698)
!12733 = !DILocation(line: 60, column: 3, scope: !12731, inlinedAt: !12698)
!12734 = !{i32 -2146959316}
!12735 = !DILocation(line: 30, column: 1, scope: !12690)
!12736 = distinct !DISubprogram(name: "__netif_tx_unlock", scope: !31, file: !31, line: 4204, type: !12737, scopeLine: 4205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12737 = !DISubroutineType(types: !12738)
!12738 = !{null, !6438}
!12739 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !12740)
!12740 = distinct !DILocation(line: 4207, column: 2, scope: !12736)
!12741 = !DILocalVariable(name: "txq", arg: 1, scope: !12736, file: !31, line: 4204, type: !6438)
!12742 = !DILocation(line: 4204, column: 59, scope: !12736)
!12743 = !DILocation(line: 4206, column: 2, scope: !12736)
!12744 = !DILocation(line: 4206, column: 7, scope: !12736)
!12745 = !DILocation(line: 4206, column: 23, scope: !12736)
!12746 = !DILocation(line: 4207, column: 15, scope: !12736)
!12747 = !DILocation(line: 4207, column: 20, scope: !12736)
!12748 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !12740)
!12749 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !12740)
!12750 = !DILocation(line: 4208, column: 1, scope: !12736)
!12751 = distinct !DISubprogram(name: "kasan_check_write", scope: !12567, file: !12567, line: 38, type: !12568, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12752 = !DILocalVariable(name: "p", arg: 1, scope: !12751, file: !12567, line: 38, type: !10325)
!12753 = !DILocation(line: 38, column: 59, scope: !12751)
!12754 = !DILocalVariable(name: "size", arg: 2, scope: !12751, file: !12567, line: 38, type: !7)
!12755 = !DILocation(line: 38, column: 75, scope: !12751)
!12756 = !DILocation(line: 40, column: 2, scope: !12751)
!12757 = distinct !DISubprogram(name: "nv_stop_rx", scope: !3, file: !3, line: 1553, type: !406, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12758 = !DILocalVariable(name: "dev", arg: 1, scope: !12757, file: !3, line: 1553, type: !290)
!12759 = !DILocation(line: 1553, column: 43, scope: !12757)
!12760 = !DILocalVariable(name: "np", scope: !12757, file: !3, line: 1555, type: !7446)
!12761 = !DILocation(line: 1555, column: 18, scope: !12757)
!12762 = !DILocation(line: 1555, column: 35, scope: !12757)
!12763 = !DILocation(line: 1555, column: 23, scope: !12757)
!12764 = !DILocalVariable(name: "base", scope: !12757, file: !3, line: 1556, type: !793)
!12765 = !DILocation(line: 1556, column: 14, scope: !12757)
!12766 = !DILocation(line: 1556, column: 32, scope: !12757)
!12767 = !DILocation(line: 1556, column: 21, scope: !12757)
!12768 = !DILocalVariable(name: "rx_ctrl", scope: !12757, file: !3, line: 1557, type: !987)
!12769 = !DILocation(line: 1557, column: 6, scope: !12757)
!12770 = !DILocation(line: 1557, column: 22, scope: !12757)
!12771 = !DILocation(line: 1557, column: 27, scope: !12757)
!12772 = !DILocation(line: 1557, column: 16, scope: !12757)
!12773 = !DILocation(line: 1559, column: 7, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 1559, column: 6)
!12775 = !DILocation(line: 1559, column: 11, scope: !12774)
!12776 = !DILocation(line: 1559, column: 6, scope: !12757)
!12777 = !DILocation(line: 1560, column: 11, scope: !12774)
!12778 = !DILocation(line: 1560, column: 3, scope: !12774)
!12779 = !DILocation(line: 1562, column: 11, scope: !12774)
!12780 = !DILocation(line: 1563, column: 9, scope: !12757)
!12781 = !DILocation(line: 1563, column: 18, scope: !12757)
!12782 = !DILocation(line: 1563, column: 23, scope: !12757)
!12783 = !DILocation(line: 1563, column: 2, scope: !12757)
!12784 = !DILocation(line: 1564, column: 16, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 1564, column: 6)
!12786 = !DILocation(line: 1564, column: 6, scope: !12785)
!12787 = !DILocation(line: 1564, column: 6, scope: !12757)
!12788 = !DILocation(line: 1566, column: 15, scope: !12785)
!12789 = !DILocation(line: 1566, column: 3, scope: !12785)
!12790 = !DILocation(line: 1569, column: 2, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12792, file: !3, line: 1569, column: 2)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 1569, column: 2)
!12793 = distinct !DILexicalBlock(scope: !12794, file: !3, line: 1569, column: 2)
!12794 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 1569, column: 2)
!12795 = !DILocation(line: 1570, column: 7, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 1570, column: 6)
!12797 = !DILocation(line: 1570, column: 11, scope: !12796)
!12798 = !DILocation(line: 1570, column: 6, scope: !12757)
!12799 = !DILocation(line: 1571, column: 13, scope: !12796)
!12800 = !DILocation(line: 1571, column: 18, scope: !12796)
!12801 = !DILocation(line: 1571, column: 3, scope: !12796)
!12802 = !DILocation(line: 1572, column: 1, scope: !12757)
!12803 = distinct !DISubprogram(name: "reg_delay", scope: !3, file: !3, line: 968, type: !12804, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{!32, !290, !32, !987, !987, !32, !32}
!12806 = !DILocalVariable(name: "dev", arg: 1, scope: !12803, file: !3, line: 968, type: !290)
!12807 = !DILocation(line: 968, column: 41, scope: !12803)
!12808 = !DILocalVariable(name: "offset", arg: 2, scope: !12803, file: !3, line: 968, type: !32)
!12809 = !DILocation(line: 968, column: 50, scope: !12803)
!12810 = !DILocalVariable(name: "mask", arg: 3, scope: !12803, file: !3, line: 968, type: !987)
!12811 = !DILocation(line: 968, column: 62, scope: !12803)
!12812 = !DILocalVariable(name: "target", arg: 4, scope: !12803, file: !3, line: 968, type: !987)
!12813 = !DILocation(line: 968, column: 72, scope: !12803)
!12814 = !DILocalVariable(name: "delay", arg: 5, scope: !12803, file: !3, line: 969, type: !32)
!12815 = !DILocation(line: 969, column: 12, scope: !12803)
!12816 = !DILocalVariable(name: "delaymax", arg: 6, scope: !12803, file: !3, line: 969, type: !32)
!12817 = !DILocation(line: 969, column: 23, scope: !12803)
!12818 = !DILocalVariable(name: "base", scope: !12803, file: !3, line: 971, type: !793)
!12819 = !DILocation(line: 971, column: 14, scope: !12803)
!12820 = !DILocation(line: 971, column: 32, scope: !12803)
!12821 = !DILocation(line: 971, column: 21, scope: !12803)
!12822 = !DILocation(line: 973, column: 11, scope: !12803)
!12823 = !DILocation(line: 973, column: 2, scope: !12803)
!12824 = !DILocation(line: 974, column: 2, scope: !12803)
!12825 = !DILocation(line: 975, column: 3, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 975, column: 3)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 975, column: 3)
!12828 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 974, column: 5)
!12829 = !DILocation(line: 975, column: 3, scope: !12827)
!12830 = !DILocation(line: 975, column: 3, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12832, file: !3, line: 975, column: 3)
!12832 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 975, column: 3)
!12833 = !DILocation(line: 975, column: 3, scope: !12832)
!12834 = !DILocation(line: 975, column: 3, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 975, column: 3)
!12836 = !DILocation(line: 976, column: 15, scope: !12828)
!12837 = !DILocation(line: 976, column: 12, scope: !12828)
!12838 = !DILocation(line: 977, column: 7, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 977, column: 7)
!12840 = !DILocation(line: 977, column: 16, scope: !12839)
!12841 = !DILocation(line: 977, column: 7, scope: !12828)
!12842 = !DILocation(line: 978, column: 4, scope: !12839)
!12843 = !DILocation(line: 979, column: 2, scope: !12828)
!12844 = !DILocation(line: 979, column: 18, scope: !12803)
!12845 = !DILocation(line: 979, column: 25, scope: !12803)
!12846 = !DILocation(line: 979, column: 23, scope: !12803)
!12847 = !DILocation(line: 979, column: 12, scope: !12803)
!12848 = !DILocation(line: 979, column: 35, scope: !12803)
!12849 = !DILocation(line: 979, column: 33, scope: !12803)
!12850 = !DILocation(line: 979, column: 44, scope: !12803)
!12851 = !DILocation(line: 979, column: 41, scope: !12803)
!12852 = distinct !{!12852, !12824, !12853}
!12853 = !DILocation(line: 979, column: 50, scope: !12803)
!12854 = !DILocation(line: 980, column: 2, scope: !12803)
!12855 = !DILocation(line: 981, column: 1, scope: !12803)
!12856 = distinct !DISubprogram(name: "nv_drain_tx", scope: !3, file: !3, line: 2029, type: !406, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12857 = !DILocalVariable(name: "dev", arg: 1, scope: !12856, file: !3, line: 2029, type: !290)
!12858 = !DILocation(line: 2029, column: 44, scope: !12856)
!12859 = !DILocalVariable(name: "np", scope: !12856, file: !3, line: 2031, type: !7446)
!12860 = !DILocation(line: 2031, column: 18, scope: !12856)
!12861 = !DILocation(line: 2031, column: 35, scope: !12856)
!12862 = !DILocation(line: 2031, column: 23, scope: !12856)
!12863 = !DILocalVariable(name: "i", scope: !12856, file: !3, line: 2032, type: !7)
!12864 = !DILocation(line: 2032, column: 15, scope: !12856)
!12865 = !DILocation(line: 2034, column: 9, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 2034, column: 2)
!12867 = !DILocation(line: 2034, column: 7, scope: !12866)
!12868 = !DILocation(line: 2034, column: 14, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12866, file: !3, line: 2034, column: 2)
!12870 = !DILocation(line: 2034, column: 18, scope: !12869)
!12871 = !DILocation(line: 2034, column: 22, scope: !12869)
!12872 = !DILocation(line: 2034, column: 16, scope: !12869)
!12873 = !DILocation(line: 2034, column: 2, scope: !12866)
!12874 = !DILocation(line: 2035, column: 21, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 2035, column: 7)
!12876 = distinct !DILexicalBlock(scope: !12869, file: !3, line: 2034, column: 41)
!12877 = !DILocation(line: 2035, column: 8, scope: !12875)
!12878 = !DILocation(line: 2035, column: 7, scope: !12876)
!12879 = !DILocation(line: 2036, column: 4, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12875, file: !3, line: 2035, column: 26)
!12881 = !DILocation(line: 2036, column: 8, scope: !12880)
!12882 = !DILocation(line: 2036, column: 16, scope: !12880)
!12883 = !DILocation(line: 2036, column: 21, scope: !12880)
!12884 = !DILocation(line: 2036, column: 24, scope: !12880)
!12885 = !DILocation(line: 2036, column: 32, scope: !12880)
!12886 = !DILocation(line: 2037, column: 4, scope: !12880)
!12887 = !DILocation(line: 2037, column: 8, scope: !12880)
!12888 = !DILocation(line: 2037, column: 16, scope: !12880)
!12889 = !DILocation(line: 2037, column: 21, scope: !12880)
!12890 = !DILocation(line: 2037, column: 24, scope: !12880)
!12891 = !DILocation(line: 2037, column: 28, scope: !12880)
!12892 = !DILocation(line: 2038, column: 3, scope: !12880)
!12893 = !DILocation(line: 2039, column: 4, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12875, file: !3, line: 2038, column: 10)
!12895 = !DILocation(line: 2039, column: 8, scope: !12894)
!12896 = !DILocation(line: 2039, column: 16, scope: !12894)
!12897 = !DILocation(line: 2039, column: 19, scope: !12894)
!12898 = !DILocation(line: 2039, column: 22, scope: !12894)
!12899 = !DILocation(line: 2039, column: 30, scope: !12894)
!12900 = !DILocation(line: 2040, column: 4, scope: !12894)
!12901 = !DILocation(line: 2040, column: 8, scope: !12894)
!12902 = !DILocation(line: 2040, column: 16, scope: !12894)
!12903 = !DILocation(line: 2040, column: 19, scope: !12894)
!12904 = !DILocation(line: 2040, column: 22, scope: !12894)
!12905 = !DILocation(line: 2040, column: 29, scope: !12894)
!12906 = !DILocation(line: 2041, column: 4, scope: !12894)
!12907 = !DILocation(line: 2041, column: 8, scope: !12894)
!12908 = !DILocation(line: 2041, column: 16, scope: !12894)
!12909 = !DILocation(line: 2041, column: 19, scope: !12894)
!12910 = !DILocation(line: 2041, column: 22, scope: !12894)
!12911 = !DILocation(line: 2041, column: 30, scope: !12894)
!12912 = !DILocation(line: 2042, column: 4, scope: !12894)
!12913 = !DILocation(line: 2042, column: 8, scope: !12894)
!12914 = !DILocation(line: 2042, column: 16, scope: !12894)
!12915 = !DILocation(line: 2042, column: 19, scope: !12894)
!12916 = !DILocation(line: 2042, column: 22, scope: !12894)
!12917 = !DILocation(line: 2042, column: 29, scope: !12894)
!12918 = !DILocation(line: 2044, column: 24, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 2044, column: 7)
!12920 = !DILocation(line: 2044, column: 29, scope: !12919)
!12921 = !DILocation(line: 2044, column: 33, scope: !12919)
!12922 = !DILocation(line: 2044, column: 40, scope: !12919)
!12923 = !DILocation(line: 2044, column: 7, scope: !12919)
!12924 = !DILocation(line: 2044, column: 7, scope: !12876)
!12925 = !DILocation(line: 2045, column: 28, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12919, file: !3, line: 2044, column: 45)
!12927 = !DILocation(line: 2045, column: 32, scope: !12926)
!12928 = !DILocation(line: 2045, column: 4, scope: !12926)
!12929 = !DILocation(line: 2046, column: 4, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 2046, column: 4)
!12931 = !DILocation(line: 2046, column: 4, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12930, file: !3, line: 2046, column: 4)
!12933 = !DILocalVariable(name: "__vpp_verify", scope: !12934, file: !3, line: 2046, type: !3258)
!12934 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 2046, column: 4)
!12935 = !DILocation(line: 2046, column: 4, scope: !12934)
!12936 = !DILocalVariable(name: "pao_ID__", scope: !12937, file: !3, line: 2046, type: !12599)
!12937 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 2046, column: 4)
!12938 = !DILocation(line: 2046, column: 4, scope: !12937)
!12939 = !DILocation(line: 2046, column: 4, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12941, file: !3, line: 2046, column: 4)
!12941 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 2046, column: 4)
!12942 = !{i32 -2139486816}
!12943 = !DILocation(line: 2047, column: 26, scope: !12926)
!12944 = !DILocation(line: 2047, column: 30, scope: !12926)
!12945 = !DILocation(line: 2047, column: 4, scope: !12926)
!12946 = !DILocation(line: 2048, column: 3, scope: !12926)
!12947 = !DILocation(line: 2049, column: 3, scope: !12876)
!12948 = !DILocation(line: 2049, column: 7, scope: !12876)
!12949 = !DILocation(line: 2049, column: 14, scope: !12876)
!12950 = !DILocation(line: 2049, column: 17, scope: !12876)
!12951 = !DILocation(line: 2049, column: 21, scope: !12876)
!12952 = !DILocation(line: 2050, column: 3, scope: !12876)
!12953 = !DILocation(line: 2050, column: 7, scope: !12876)
!12954 = !DILocation(line: 2050, column: 14, scope: !12876)
!12955 = !DILocation(line: 2050, column: 17, scope: !12876)
!12956 = !DILocation(line: 2050, column: 25, scope: !12876)
!12957 = !DILocation(line: 2051, column: 3, scope: !12876)
!12958 = !DILocation(line: 2051, column: 7, scope: !12876)
!12959 = !DILocation(line: 2051, column: 14, scope: !12876)
!12960 = !DILocation(line: 2051, column: 17, scope: !12876)
!12961 = !DILocation(line: 2051, column: 28, scope: !12876)
!12962 = !DILocation(line: 2052, column: 3, scope: !12876)
!12963 = !DILocation(line: 2052, column: 7, scope: !12876)
!12964 = !DILocation(line: 2052, column: 14, scope: !12876)
!12965 = !DILocation(line: 2052, column: 17, scope: !12876)
!12966 = !DILocation(line: 2052, column: 31, scope: !12876)
!12967 = !DILocation(line: 2053, column: 3, scope: !12876)
!12968 = !DILocation(line: 2053, column: 7, scope: !12876)
!12969 = !DILocation(line: 2053, column: 14, scope: !12876)
!12970 = !DILocation(line: 2053, column: 17, scope: !12876)
!12971 = !DILocation(line: 2053, column: 29, scope: !12876)
!12972 = !DILocation(line: 2054, column: 2, scope: !12876)
!12973 = !DILocation(line: 2034, column: 37, scope: !12869)
!12974 = !DILocation(line: 2034, column: 2, scope: !12869)
!12975 = distinct !{!12975, !12873, !12976}
!12976 = !DILocation(line: 2054, column: 2, scope: !12866)
!12977 = !DILocation(line: 2055, column: 2, scope: !12856)
!12978 = !DILocation(line: 2055, column: 6, scope: !12856)
!12979 = !DILocation(line: 2055, column: 26, scope: !12856)
!12980 = !DILocation(line: 2056, column: 2, scope: !12856)
!12981 = !DILocation(line: 2056, column: 6, scope: !12856)
!12982 = !DILocation(line: 2056, column: 22, scope: !12856)
!12983 = !DILocation(line: 2057, column: 2, scope: !12856)
!12984 = !DILocation(line: 2057, column: 6, scope: !12856)
!12985 = !DILocation(line: 2057, column: 18, scope: !12856)
!12986 = !DILocation(line: 2058, column: 1, scope: !12856)
!12987 = distinct !DISubprogram(name: "nv_drain_rx", scope: !3, file: !3, line: 2060, type: !406, scopeLine: 2061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12988 = !DILocalVariable(name: "dev", arg: 1, scope: !12987, file: !3, line: 2060, type: !290)
!12989 = !DILocation(line: 2060, column: 44, scope: !12987)
!12990 = !DILocalVariable(name: "np", scope: !12987, file: !3, line: 2062, type: !7446)
!12991 = !DILocation(line: 2062, column: 18, scope: !12987)
!12992 = !DILocation(line: 2062, column: 35, scope: !12987)
!12993 = !DILocation(line: 2062, column: 23, scope: !12987)
!12994 = !DILocalVariable(name: "i", scope: !12987, file: !3, line: 2063, type: !32)
!12995 = !DILocation(line: 2063, column: 6, scope: !12987)
!12996 = !DILocation(line: 2065, column: 9, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 2065, column: 2)
!12998 = !DILocation(line: 2065, column: 7, scope: !12997)
!12999 = !DILocation(line: 2065, column: 14, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 2065, column: 2)
!13001 = !DILocation(line: 2065, column: 18, scope: !13000)
!13002 = !DILocation(line: 2065, column: 22, scope: !13000)
!13003 = !DILocation(line: 2065, column: 16, scope: !13000)
!13004 = !DILocation(line: 2065, column: 2, scope: !12997)
!13005 = !DILocation(line: 2066, column: 21, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !3, line: 2066, column: 7)
!13007 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 2065, column: 41)
!13008 = !DILocation(line: 2066, column: 8, scope: !13006)
!13009 = !DILocation(line: 2066, column: 7, scope: !13007)
!13010 = !DILocation(line: 2067, column: 4, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 2066, column: 26)
!13012 = !DILocation(line: 2067, column: 8, scope: !13011)
!13013 = !DILocation(line: 2067, column: 16, scope: !13011)
!13014 = !DILocation(line: 2067, column: 21, scope: !13011)
!13015 = !DILocation(line: 2067, column: 24, scope: !13011)
!13016 = !DILocation(line: 2067, column: 32, scope: !13011)
!13017 = !DILocation(line: 2068, column: 4, scope: !13011)
!13018 = !DILocation(line: 2068, column: 8, scope: !13011)
!13019 = !DILocation(line: 2068, column: 16, scope: !13011)
!13020 = !DILocation(line: 2068, column: 21, scope: !13011)
!13021 = !DILocation(line: 2068, column: 24, scope: !13011)
!13022 = !DILocation(line: 2068, column: 28, scope: !13011)
!13023 = !DILocation(line: 2069, column: 3, scope: !13011)
!13024 = !DILocation(line: 2070, column: 4, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 2069, column: 10)
!13026 = !DILocation(line: 2070, column: 8, scope: !13025)
!13027 = !DILocation(line: 2070, column: 16, scope: !13025)
!13028 = !DILocation(line: 2070, column: 19, scope: !13025)
!13029 = !DILocation(line: 2070, column: 22, scope: !13025)
!13030 = !DILocation(line: 2070, column: 30, scope: !13025)
!13031 = !DILocation(line: 2071, column: 4, scope: !13025)
!13032 = !DILocation(line: 2071, column: 8, scope: !13025)
!13033 = !DILocation(line: 2071, column: 16, scope: !13025)
!13034 = !DILocation(line: 2071, column: 19, scope: !13025)
!13035 = !DILocation(line: 2071, column: 22, scope: !13025)
!13036 = !DILocation(line: 2071, column: 29, scope: !13025)
!13037 = !DILocation(line: 2072, column: 4, scope: !13025)
!13038 = !DILocation(line: 2072, column: 8, scope: !13025)
!13039 = !DILocation(line: 2072, column: 16, scope: !13025)
!13040 = !DILocation(line: 2072, column: 19, scope: !13025)
!13041 = !DILocation(line: 2072, column: 22, scope: !13025)
!13042 = !DILocation(line: 2072, column: 30, scope: !13025)
!13043 = !DILocation(line: 2073, column: 4, scope: !13025)
!13044 = !DILocation(line: 2073, column: 8, scope: !13025)
!13045 = !DILocation(line: 2073, column: 16, scope: !13025)
!13046 = !DILocation(line: 2073, column: 19, scope: !13025)
!13047 = !DILocation(line: 2073, column: 22, scope: !13025)
!13048 = !DILocation(line: 2073, column: 29, scope: !13025)
!13049 = !DILocation(line: 2075, column: 3, scope: !13007)
!13050 = !{i32 -2139485806}
!13051 = !DILocation(line: 2076, column: 7, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13007, file: !3, line: 2076, column: 7)
!13053 = !DILocation(line: 2076, column: 11, scope: !13052)
!13054 = !DILocation(line: 2076, column: 18, scope: !13052)
!13055 = !DILocation(line: 2076, column: 21, scope: !13052)
!13056 = !DILocation(line: 2076, column: 7, scope: !13007)
!13057 = !DILocation(line: 2077, column: 4, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13052, file: !3, line: 2076, column: 26)
!13059 = !DILocation(line: 2081, column: 4, scope: !13058)
!13060 = !DILocation(line: 2082, column: 4, scope: !13058)
!13061 = !DILocation(line: 2082, column: 8, scope: !13058)
!13062 = !DILocation(line: 2082, column: 15, scope: !13058)
!13063 = !DILocation(line: 2082, column: 18, scope: !13058)
!13064 = !DILocation(line: 2082, column: 22, scope: !13058)
!13065 = !DILocation(line: 2083, column: 3, scope: !13058)
!13066 = !DILocation(line: 2084, column: 2, scope: !13007)
!13067 = !DILocation(line: 2065, column: 37, scope: !13000)
!13068 = !DILocation(line: 2065, column: 2, scope: !13000)
!13069 = distinct !{!13069, !13004, !13070}
!13070 = !DILocation(line: 2084, column: 2, scope: !12997)
!13071 = !DILocation(line: 2085, column: 1, scope: !12987)
!13072 = distinct !DISubprogram(name: "nv_release_txskb", scope: !3, file: !3, line: 2018, type: !13073, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13073 = !DISubroutineType(types: !13074)
!13074 = !{!32, !7446, !7837}
!13075 = !DILocalVariable(name: "np", arg: 1, scope: !13072, file: !3, line: 2018, type: !7446)
!13076 = !DILocation(line: 2018, column: 45, scope: !13072)
!13077 = !DILocalVariable(name: "tx_skb", arg: 2, scope: !13072, file: !3, line: 2018, type: !7837)
!13078 = !DILocation(line: 2018, column: 68, scope: !13072)
!13079 = !DILocation(line: 2020, column: 17, scope: !13072)
!13080 = !DILocation(line: 2020, column: 21, scope: !13072)
!13081 = !DILocation(line: 2020, column: 2, scope: !13072)
!13082 = !DILocation(line: 2021, column: 6, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13072, file: !3, line: 2021, column: 6)
!13084 = !DILocation(line: 2021, column: 14, scope: !13083)
!13085 = !DILocation(line: 2021, column: 6, scope: !13072)
!13086 = !DILocation(line: 2022, column: 21, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13083, file: !3, line: 2021, column: 19)
!13088 = !DILocation(line: 2022, column: 29, scope: !13087)
!13089 = !DILocation(line: 2022, column: 3, scope: !13087)
!13090 = !DILocation(line: 2023, column: 3, scope: !13087)
!13091 = !DILocation(line: 2023, column: 11, scope: !13087)
!13092 = !DILocation(line: 2023, column: 15, scope: !13087)
!13093 = !DILocation(line: 2024, column: 3, scope: !13087)
!13094 = !DILocation(line: 2026, column: 2, scope: !13072)
!13095 = !DILocation(line: 2027, column: 1, scope: !13072)
!13096 = distinct !DISubprogram(name: "u64_stats_update_begin", scope: !3072, file: !3072, line: 125, type: !9462, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13097 = !DILocalVariable(name: "syncp", arg: 1, scope: !13096, file: !3072, line: 125, type: !9464)
!13098 = !DILocation(line: 125, column: 66, scope: !13096)
!13099 = !DILocation(line: 130, column: 1, scope: !13096)
!13100 = distinct !DISubprogram(name: "__this_cpu_preempt_check", scope: !13101, file: !13101, line: 313, type: !13102, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13101 = !DIFile(filename: "./include/linux/percpu-defs.h", directory: "/home/lizy2001/genbc/linux")
!13102 = !DISubroutineType(types: !13103)
!13103 = !{null, !292}
!13104 = !DILocalVariable(name: "op", arg: 1, scope: !13100, file: !13101, line: 313, type: !292)
!13105 = !DILocation(line: 313, column: 57, scope: !13100)
!13106 = !DILocation(line: 313, column: 63, scope: !13100)
!13107 = distinct !DISubprogram(name: "u64_stats_update_end", scope: !3072, file: !3072, line: 132, type: !9462, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13108 = !DILocalVariable(name: "syncp", arg: 1, scope: !13107, file: !3072, line: 132, type: !9464)
!13109 = !DILocation(line: 132, column: 64, scope: !13107)
!13110 = !DILocation(line: 137, column: 1, scope: !13107)
!13111 = distinct !DISubprogram(name: "nv_unmap_txskb", scope: !3, file: !3, line: 2003, type: !13112, scopeLine: 2004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13112 = !DISubroutineType(types: !13113)
!13113 = !{null, !7446, !7837}
!13114 = !DILocalVariable(name: "np", arg: 1, scope: !13111, file: !3, line: 2003, type: !7446)
!13115 = !DILocation(line: 2003, column: 44, scope: !13111)
!13116 = !DILocalVariable(name: "tx_skb", arg: 2, scope: !13111, file: !3, line: 2003, type: !7837)
!13117 = !DILocation(line: 2003, column: 67, scope: !13111)
!13118 = !DILocation(line: 2005, column: 6, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13111, file: !3, line: 2005, column: 6)
!13120 = !DILocation(line: 2005, column: 14, scope: !13119)
!13121 = !DILocation(line: 2005, column: 6, scope: !13111)
!13122 = !DILocation(line: 2006, column: 7, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13124, file: !3, line: 2006, column: 7)
!13124 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 2005, column: 19)
!13125 = !DILocation(line: 2006, column: 15, scope: !13123)
!13126 = !DILocation(line: 2006, column: 7, scope: !13124)
!13127 = !DILocation(line: 2007, column: 4, scope: !13123)
!13128 = !DILocation(line: 2011, column: 4, scope: !13123)
!13129 = !DILocation(line: 2014, column: 3, scope: !13124)
!13130 = !DILocation(line: 2014, column: 11, scope: !13124)
!13131 = !DILocation(line: 2014, column: 15, scope: !13124)
!13132 = !DILocation(line: 2015, column: 2, scope: !13124)
!13133 = !DILocation(line: 2016, column: 1, scope: !13111)
!13134 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !31, file: !31, line: 3817, type: !469, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13135 = !DILocalVariable(name: "skb", arg: 1, scope: !13134, file: !31, line: 3817, type: !415)
!13136 = !DILocation(line: 3817, column: 54, scope: !13134)
!13137 = !DILocation(line: 3819, column: 22, scope: !13134)
!13138 = !DILocation(line: 3819, column: 2, scope: !13134)
!13139 = !DILocation(line: 3820, column: 1, scope: !13134)
!13140 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !8177, file: !8177, line: 283, type: !13141, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13141 = !DISubroutineType(types: !13142)
!13142 = !{null, !6545, !2036, !1039, !7238, !312}
!13143 = !DILocalVariable(name: "dev", arg: 1, scope: !13140, file: !8177, line: 283, type: !6545)
!13144 = !DILocation(line: 283, column: 58, scope: !13140)
!13145 = !DILocalVariable(name: "addr", arg: 2, scope: !13140, file: !8177, line: 283, type: !2036)
!13146 = !DILocation(line: 283, column: 74, scope: !13140)
!13147 = !DILocalVariable(name: "size", arg: 3, scope: !13140, file: !8177, line: 284, type: !1039)
!13148 = !DILocation(line: 284, column: 10, scope: !13140)
!13149 = !DILocalVariable(name: "dir", arg: 4, scope: !13140, file: !8177, line: 284, type: !7238)
!13150 = !DILocation(line: 284, column: 40, scope: !13140)
!13151 = !DILocalVariable(name: "attrs", arg: 5, scope: !13140, file: !8177, line: 284, type: !312)
!13152 = !DILocation(line: 284, column: 59, scope: !13140)
!13153 = !DILocation(line: 286, column: 30, scope: !13140)
!13154 = !DILocation(line: 286, column: 35, scope: !13140)
!13155 = !DILocation(line: 286, column: 41, scope: !13140)
!13156 = !DILocation(line: 286, column: 47, scope: !13140)
!13157 = !DILocation(line: 286, column: 52, scope: !13140)
!13158 = !DILocation(line: 286, column: 9, scope: !13140)
!13159 = !DILocation(line: 286, column: 2, scope: !13140)
!13160 = distinct !DISubprogram(name: "skb_end_pointer", scope: !417, file: !417, line: 1404, type: !13161, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13161 = !DISubroutineType(types: !13162)
!13162 = !{!564, !6052}
!13163 = !DILocalVariable(name: "skb", arg: 1, scope: !13160, file: !417, line: 1404, type: !6052)
!13164 = !DILocation(line: 1404, column: 68, scope: !13160)
!13165 = !DILocation(line: 1406, column: 9, scope: !13160)
!13166 = !DILocation(line: 1406, column: 14, scope: !13160)
!13167 = !DILocation(line: 1406, column: 21, scope: !13160)
!13168 = !DILocation(line: 1406, column: 26, scope: !13160)
!13169 = !DILocation(line: 1406, column: 19, scope: !13160)
!13170 = !DILocation(line: 1406, column: 2, scope: !13160)
!13171 = distinct !DISubprogram(name: "consume_skb", scope: !417, file: !417, line: 1063, type: !469, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13172 = !DILocalVariable(name: "skb", arg: 1, scope: !13171, file: !417, line: 1063, type: !415)
!13173 = !DILocation(line: 1063, column: 48, scope: !13171)
!13174 = !DILocation(line: 1065, column: 19, scope: !13171)
!13175 = !DILocation(line: 1065, column: 9, scope: !13171)
!13176 = !DILocation(line: 1065, column: 2, scope: !13171)
!13177 = distinct !DISubprogram(name: "nv_init_tx", scope: !3, file: !3, line: 1950, type: !406, scopeLine: 1951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13178 = !DILocalVariable(name: "dev", arg: 1, scope: !13177, file: !3, line: 1950, type: !290)
!13179 = !DILocation(line: 1950, column: 43, scope: !13177)
!13180 = !DILocalVariable(name: "np", scope: !13177, file: !3, line: 1952, type: !7446)
!13181 = !DILocation(line: 1952, column: 18, scope: !13177)
!13182 = !DILocation(line: 1952, column: 35, scope: !13177)
!13183 = !DILocation(line: 1952, column: 23, scope: !13177)
!13184 = !DILocalVariable(name: "i", scope: !13177, file: !3, line: 1953, type: !32)
!13185 = !DILocation(line: 1953, column: 6, scope: !13177)
!13186 = !DILocation(line: 1955, column: 2, scope: !13177)
!13187 = !DILocation(line: 1955, column: 6, scope: !13177)
!13188 = !DILocation(line: 1955, column: 15, scope: !13177)
!13189 = !DILocation(line: 1955, column: 19, scope: !13177)
!13190 = !DILocation(line: 1956, column: 2, scope: !13177)
!13191 = !DILocation(line: 1956, column: 6, scope: !13177)
!13192 = !DILocation(line: 1956, column: 15, scope: !13177)
!13193 = !DILocation(line: 1956, column: 19, scope: !13177)
!13194 = !DILocation(line: 1958, column: 20, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13177, file: !3, line: 1958, column: 6)
!13196 = !DILocation(line: 1958, column: 7, scope: !13195)
!13197 = !DILocation(line: 1958, column: 6, scope: !13177)
!13198 = !DILocation(line: 1959, column: 23, scope: !13195)
!13199 = !DILocation(line: 1959, column: 27, scope: !13195)
!13200 = !DILocation(line: 1959, column: 35, scope: !13195)
!13201 = !DILocation(line: 1959, column: 40, scope: !13195)
!13202 = !DILocation(line: 1959, column: 44, scope: !13195)
!13203 = !DILocation(line: 1959, column: 56, scope: !13195)
!13204 = !DILocation(line: 1959, column: 3, scope: !13195)
!13205 = !DILocation(line: 1959, column: 7, scope: !13195)
!13206 = !DILocation(line: 1959, column: 15, scope: !13195)
!13207 = !DILocation(line: 1959, column: 20, scope: !13195)
!13208 = !DILocation(line: 1961, column: 21, scope: !13195)
!13209 = !DILocation(line: 1961, column: 25, scope: !13195)
!13210 = !DILocation(line: 1961, column: 33, scope: !13195)
!13211 = !DILocation(line: 1961, column: 36, scope: !13195)
!13212 = !DILocation(line: 1961, column: 40, scope: !13195)
!13213 = !DILocation(line: 1961, column: 52, scope: !13195)
!13214 = !DILocation(line: 1961, column: 3, scope: !13195)
!13215 = !DILocation(line: 1961, column: 7, scope: !13195)
!13216 = !DILocation(line: 1961, column: 15, scope: !13195)
!13217 = !DILocation(line: 1961, column: 18, scope: !13195)
!13218 = !DILocation(line: 1962, column: 19, scope: !13177)
!13219 = !DILocation(line: 1962, column: 23, scope: !13177)
!13220 = !DILocation(line: 1962, column: 2, scope: !13177)
!13221 = !DILocation(line: 1962, column: 6, scope: !13177)
!13222 = !DILocation(line: 1962, column: 17, scope: !13177)
!13223 = !DILocation(line: 1963, column: 19, scope: !13177)
!13224 = !DILocation(line: 1963, column: 23, scope: !13177)
!13225 = !DILocation(line: 1963, column: 2, scope: !13177)
!13226 = !DILocation(line: 1963, column: 6, scope: !13177)
!13227 = !DILocation(line: 1963, column: 17, scope: !13177)
!13228 = !DILocation(line: 1964, column: 21, scope: !13177)
!13229 = !DILocation(line: 1964, column: 25, scope: !13177)
!13230 = !DILocation(line: 1964, column: 32, scope: !13177)
!13231 = !DILocation(line: 1964, column: 36, scope: !13177)
!13232 = !DILocation(line: 1964, column: 48, scope: !13177)
!13233 = !DILocation(line: 1964, column: 2, scope: !13177)
!13234 = !DILocation(line: 1964, column: 6, scope: !13177)
!13235 = !DILocation(line: 1964, column: 18, scope: !13177)
!13236 = !DILocation(line: 1965, column: 21, scope: !13177)
!13237 = !DILocation(line: 1965, column: 25, scope: !13177)
!13238 = !DILocation(line: 1965, column: 2, scope: !13177)
!13239 = !DILocation(line: 1966, column: 2, scope: !13177)
!13240 = !DILocation(line: 1966, column: 6, scope: !13177)
!13241 = !DILocation(line: 1966, column: 26, scope: !13177)
!13242 = !DILocation(line: 1967, column: 2, scope: !13177)
!13243 = !DILocation(line: 1967, column: 6, scope: !13177)
!13244 = !DILocation(line: 1967, column: 22, scope: !13177)
!13245 = !DILocation(line: 1968, column: 2, scope: !13177)
!13246 = !DILocation(line: 1968, column: 6, scope: !13177)
!13247 = !DILocation(line: 1968, column: 18, scope: !13177)
!13248 = !DILocation(line: 1969, column: 2, scope: !13177)
!13249 = !DILocation(line: 1969, column: 6, scope: !13177)
!13250 = !DILocation(line: 1969, column: 14, scope: !13177)
!13251 = !DILocation(line: 1971, column: 9, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13177, file: !3, line: 1971, column: 2)
!13253 = !DILocation(line: 1971, column: 7, scope: !13252)
!13254 = !DILocation(line: 1971, column: 14, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13252, file: !3, line: 1971, column: 2)
!13256 = !DILocation(line: 1971, column: 18, scope: !13255)
!13257 = !DILocation(line: 1971, column: 22, scope: !13255)
!13258 = !DILocation(line: 1971, column: 16, scope: !13255)
!13259 = !DILocation(line: 1971, column: 2, scope: !13252)
!13260 = !DILocation(line: 1972, column: 21, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !3, line: 1972, column: 7)
!13262 = distinct !DILexicalBlock(scope: !13255, file: !3, line: 1971, column: 41)
!13263 = !DILocation(line: 1972, column: 8, scope: !13261)
!13264 = !DILocation(line: 1972, column: 7, scope: !13262)
!13265 = !DILocation(line: 1973, column: 4, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 1972, column: 26)
!13267 = !DILocation(line: 1973, column: 8, scope: !13266)
!13268 = !DILocation(line: 1973, column: 16, scope: !13266)
!13269 = !DILocation(line: 1973, column: 21, scope: !13266)
!13270 = !DILocation(line: 1973, column: 24, scope: !13266)
!13271 = !DILocation(line: 1973, column: 32, scope: !13266)
!13272 = !DILocation(line: 1974, column: 4, scope: !13266)
!13273 = !DILocation(line: 1974, column: 8, scope: !13266)
!13274 = !DILocation(line: 1974, column: 16, scope: !13266)
!13275 = !DILocation(line: 1974, column: 21, scope: !13266)
!13276 = !DILocation(line: 1974, column: 24, scope: !13266)
!13277 = !DILocation(line: 1974, column: 28, scope: !13266)
!13278 = !DILocation(line: 1975, column: 3, scope: !13266)
!13279 = !DILocation(line: 1976, column: 4, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 1975, column: 10)
!13281 = !DILocation(line: 1976, column: 8, scope: !13280)
!13282 = !DILocation(line: 1976, column: 16, scope: !13280)
!13283 = !DILocation(line: 1976, column: 19, scope: !13280)
!13284 = !DILocation(line: 1976, column: 22, scope: !13280)
!13285 = !DILocation(line: 1976, column: 30, scope: !13280)
!13286 = !DILocation(line: 1977, column: 4, scope: !13280)
!13287 = !DILocation(line: 1977, column: 8, scope: !13280)
!13288 = !DILocation(line: 1977, column: 16, scope: !13280)
!13289 = !DILocation(line: 1977, column: 19, scope: !13280)
!13290 = !DILocation(line: 1977, column: 22, scope: !13280)
!13291 = !DILocation(line: 1977, column: 29, scope: !13280)
!13292 = !DILocation(line: 1978, column: 4, scope: !13280)
!13293 = !DILocation(line: 1978, column: 8, scope: !13280)
!13294 = !DILocation(line: 1978, column: 16, scope: !13280)
!13295 = !DILocation(line: 1978, column: 19, scope: !13280)
!13296 = !DILocation(line: 1978, column: 22, scope: !13280)
!13297 = !DILocation(line: 1978, column: 30, scope: !13280)
!13298 = !DILocation(line: 1979, column: 4, scope: !13280)
!13299 = !DILocation(line: 1979, column: 8, scope: !13280)
!13300 = !DILocation(line: 1979, column: 16, scope: !13280)
!13301 = !DILocation(line: 1979, column: 19, scope: !13280)
!13302 = !DILocation(line: 1979, column: 22, scope: !13280)
!13303 = !DILocation(line: 1979, column: 29, scope: !13280)
!13304 = !DILocation(line: 1981, column: 3, scope: !13262)
!13305 = !DILocation(line: 1981, column: 7, scope: !13262)
!13306 = !DILocation(line: 1981, column: 14, scope: !13262)
!13307 = !DILocation(line: 1981, column: 17, scope: !13262)
!13308 = !DILocation(line: 1981, column: 21, scope: !13262)
!13309 = !DILocation(line: 1982, column: 3, scope: !13262)
!13310 = !DILocation(line: 1982, column: 7, scope: !13262)
!13311 = !DILocation(line: 1982, column: 14, scope: !13262)
!13312 = !DILocation(line: 1982, column: 17, scope: !13262)
!13313 = !DILocation(line: 1982, column: 21, scope: !13262)
!13314 = !DILocation(line: 1983, column: 3, scope: !13262)
!13315 = !DILocation(line: 1983, column: 7, scope: !13262)
!13316 = !DILocation(line: 1983, column: 14, scope: !13262)
!13317 = !DILocation(line: 1983, column: 17, scope: !13262)
!13318 = !DILocation(line: 1983, column: 25, scope: !13262)
!13319 = !DILocation(line: 1984, column: 3, scope: !13262)
!13320 = !DILocation(line: 1984, column: 7, scope: !13262)
!13321 = !DILocation(line: 1984, column: 14, scope: !13262)
!13322 = !DILocation(line: 1984, column: 17, scope: !13262)
!13323 = !DILocation(line: 1984, column: 28, scope: !13262)
!13324 = !DILocation(line: 1985, column: 3, scope: !13262)
!13325 = !DILocation(line: 1985, column: 7, scope: !13262)
!13326 = !DILocation(line: 1985, column: 14, scope: !13262)
!13327 = !DILocation(line: 1985, column: 17, scope: !13262)
!13328 = !DILocation(line: 1985, column: 31, scope: !13262)
!13329 = !DILocation(line: 1986, column: 3, scope: !13262)
!13330 = !DILocation(line: 1986, column: 7, scope: !13262)
!13331 = !DILocation(line: 1986, column: 14, scope: !13262)
!13332 = !DILocation(line: 1986, column: 17, scope: !13262)
!13333 = !DILocation(line: 1986, column: 29, scope: !13262)
!13334 = !DILocation(line: 1987, column: 2, scope: !13262)
!13335 = !DILocation(line: 1971, column: 37, scope: !13255)
!13336 = !DILocation(line: 1971, column: 2, scope: !13255)
!13337 = distinct !{!13337, !13259, !13338}
!13338 = !DILocation(line: 1987, column: 2, scope: !13252)
!13339 = !DILocation(line: 1988, column: 1, scope: !13177)
!13340 = distinct !DISubprogram(name: "nv_init_rx", scope: !3, file: !3, line: 1919, type: !406, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13341 = !DILocalVariable(name: "dev", arg: 1, scope: !13340, file: !3, line: 1919, type: !290)
!13342 = !DILocation(line: 1919, column: 43, scope: !13340)
!13343 = !DILocalVariable(name: "np", scope: !13340, file: !3, line: 1921, type: !7446)
!13344 = !DILocation(line: 1921, column: 18, scope: !13340)
!13345 = !DILocation(line: 1921, column: 35, scope: !13340)
!13346 = !DILocation(line: 1921, column: 23, scope: !13340)
!13347 = !DILocalVariable(name: "i", scope: !13340, file: !3, line: 1922, type: !32)
!13348 = !DILocation(line: 1922, column: 6, scope: !13340)
!13349 = !DILocation(line: 1924, column: 2, scope: !13340)
!13350 = !DILocation(line: 1924, column: 6, scope: !13340)
!13351 = !DILocation(line: 1924, column: 15, scope: !13340)
!13352 = !DILocation(line: 1924, column: 19, scope: !13340)
!13353 = !DILocation(line: 1925, column: 2, scope: !13340)
!13354 = !DILocation(line: 1925, column: 6, scope: !13340)
!13355 = !DILocation(line: 1925, column: 15, scope: !13340)
!13356 = !DILocation(line: 1925, column: 19, scope: !13340)
!13357 = !DILocation(line: 1927, column: 20, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 1927, column: 6)
!13359 = !DILocation(line: 1927, column: 7, scope: !13358)
!13360 = !DILocation(line: 1927, column: 6, scope: !13340)
!13361 = !DILocation(line: 1928, column: 23, scope: !13358)
!13362 = !DILocation(line: 1928, column: 27, scope: !13358)
!13363 = !DILocation(line: 1928, column: 35, scope: !13358)
!13364 = !DILocation(line: 1928, column: 40, scope: !13358)
!13365 = !DILocation(line: 1928, column: 44, scope: !13358)
!13366 = !DILocation(line: 1928, column: 56, scope: !13358)
!13367 = !DILocation(line: 1928, column: 3, scope: !13358)
!13368 = !DILocation(line: 1928, column: 7, scope: !13358)
!13369 = !DILocation(line: 1928, column: 15, scope: !13358)
!13370 = !DILocation(line: 1928, column: 20, scope: !13358)
!13371 = !DILocation(line: 1930, column: 21, scope: !13358)
!13372 = !DILocation(line: 1930, column: 25, scope: !13358)
!13373 = !DILocation(line: 1930, column: 33, scope: !13358)
!13374 = !DILocation(line: 1930, column: 36, scope: !13358)
!13375 = !DILocation(line: 1930, column: 40, scope: !13358)
!13376 = !DILocation(line: 1930, column: 52, scope: !13358)
!13377 = !DILocation(line: 1930, column: 3, scope: !13358)
!13378 = !DILocation(line: 1930, column: 7, scope: !13358)
!13379 = !DILocation(line: 1930, column: 15, scope: !13358)
!13380 = !DILocation(line: 1930, column: 18, scope: !13358)
!13381 = !DILocation(line: 1931, column: 19, scope: !13340)
!13382 = !DILocation(line: 1931, column: 23, scope: !13340)
!13383 = !DILocation(line: 1931, column: 2, scope: !13340)
!13384 = !DILocation(line: 1931, column: 6, scope: !13340)
!13385 = !DILocation(line: 1931, column: 17, scope: !13340)
!13386 = !DILocation(line: 1932, column: 19, scope: !13340)
!13387 = !DILocation(line: 1932, column: 23, scope: !13340)
!13388 = !DILocation(line: 1932, column: 2, scope: !13340)
!13389 = !DILocation(line: 1932, column: 6, scope: !13340)
!13390 = !DILocation(line: 1932, column: 17, scope: !13340)
!13391 = !DILocation(line: 1933, column: 21, scope: !13340)
!13392 = !DILocation(line: 1933, column: 25, scope: !13340)
!13393 = !DILocation(line: 1933, column: 32, scope: !13340)
!13394 = !DILocation(line: 1933, column: 36, scope: !13340)
!13395 = !DILocation(line: 1933, column: 48, scope: !13340)
!13396 = !DILocation(line: 1933, column: 2, scope: !13340)
!13397 = !DILocation(line: 1933, column: 6, scope: !13340)
!13398 = !DILocation(line: 1933, column: 18, scope: !13340)
!13399 = !DILocation(line: 1935, column: 9, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 1935, column: 2)
!13401 = !DILocation(line: 1935, column: 7, scope: !13400)
!13402 = !DILocation(line: 1935, column: 14, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 1935, column: 2)
!13404 = !DILocation(line: 1935, column: 18, scope: !13403)
!13405 = !DILocation(line: 1935, column: 22, scope: !13403)
!13406 = !DILocation(line: 1935, column: 16, scope: !13403)
!13407 = !DILocation(line: 1935, column: 2, scope: !13400)
!13408 = !DILocation(line: 1936, column: 21, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !3, line: 1936, column: 7)
!13410 = distinct !DILexicalBlock(scope: !13403, file: !3, line: 1935, column: 41)
!13411 = !DILocation(line: 1936, column: 8, scope: !13409)
!13412 = !DILocation(line: 1936, column: 7, scope: !13410)
!13413 = !DILocation(line: 1937, column: 4, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13409, file: !3, line: 1936, column: 26)
!13415 = !DILocation(line: 1937, column: 8, scope: !13414)
!13416 = !DILocation(line: 1937, column: 16, scope: !13414)
!13417 = !DILocation(line: 1937, column: 21, scope: !13414)
!13418 = !DILocation(line: 1937, column: 24, scope: !13414)
!13419 = !DILocation(line: 1937, column: 32, scope: !13414)
!13420 = !DILocation(line: 1938, column: 4, scope: !13414)
!13421 = !DILocation(line: 1938, column: 8, scope: !13414)
!13422 = !DILocation(line: 1938, column: 16, scope: !13414)
!13423 = !DILocation(line: 1938, column: 21, scope: !13414)
!13424 = !DILocation(line: 1938, column: 24, scope: !13414)
!13425 = !DILocation(line: 1938, column: 28, scope: !13414)
!13426 = !DILocation(line: 1939, column: 3, scope: !13414)
!13427 = !DILocation(line: 1940, column: 4, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13409, file: !3, line: 1939, column: 10)
!13429 = !DILocation(line: 1940, column: 8, scope: !13428)
!13430 = !DILocation(line: 1940, column: 16, scope: !13428)
!13431 = !DILocation(line: 1940, column: 19, scope: !13428)
!13432 = !DILocation(line: 1940, column: 22, scope: !13428)
!13433 = !DILocation(line: 1940, column: 30, scope: !13428)
!13434 = !DILocation(line: 1941, column: 4, scope: !13428)
!13435 = !DILocation(line: 1941, column: 8, scope: !13428)
!13436 = !DILocation(line: 1941, column: 16, scope: !13428)
!13437 = !DILocation(line: 1941, column: 19, scope: !13428)
!13438 = !DILocation(line: 1941, column: 22, scope: !13428)
!13439 = !DILocation(line: 1941, column: 29, scope: !13428)
!13440 = !DILocation(line: 1942, column: 4, scope: !13428)
!13441 = !DILocation(line: 1942, column: 8, scope: !13428)
!13442 = !DILocation(line: 1942, column: 16, scope: !13428)
!13443 = !DILocation(line: 1942, column: 19, scope: !13428)
!13444 = !DILocation(line: 1942, column: 22, scope: !13428)
!13445 = !DILocation(line: 1942, column: 30, scope: !13428)
!13446 = !DILocation(line: 1943, column: 4, scope: !13428)
!13447 = !DILocation(line: 1943, column: 8, scope: !13428)
!13448 = !DILocation(line: 1943, column: 16, scope: !13428)
!13449 = !DILocation(line: 1943, column: 19, scope: !13428)
!13450 = !DILocation(line: 1943, column: 22, scope: !13428)
!13451 = !DILocation(line: 1943, column: 29, scope: !13428)
!13452 = !DILocation(line: 1945, column: 3, scope: !13410)
!13453 = !DILocation(line: 1945, column: 7, scope: !13410)
!13454 = !DILocation(line: 1945, column: 14, scope: !13410)
!13455 = !DILocation(line: 1945, column: 17, scope: !13410)
!13456 = !DILocation(line: 1945, column: 21, scope: !13410)
!13457 = !DILocation(line: 1946, column: 3, scope: !13410)
!13458 = !DILocation(line: 1946, column: 7, scope: !13410)
!13459 = !DILocation(line: 1946, column: 14, scope: !13410)
!13460 = !DILocation(line: 1946, column: 17, scope: !13410)
!13461 = !DILocation(line: 1946, column: 21, scope: !13410)
!13462 = !DILocation(line: 1947, column: 2, scope: !13410)
!13463 = !DILocation(line: 1935, column: 37, scope: !13403)
!13464 = !DILocation(line: 1935, column: 2, scope: !13403)
!13465 = distinct !{!13465, !13407, !13466}
!13466 = !DILocation(line: 1947, column: 2, scope: !13400)
!13467 = !DILocation(line: 1948, column: 1, scope: !13340)
!13468 = distinct !DISubprogram(name: "nv_alloc_rx", scope: !3, file: !3, line: 1827, type: !402, scopeLine: 1828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13469 = !DILocalVariable(name: "dev", arg: 1, scope: !13468, file: !3, line: 1827, type: !290)
!13470 = !DILocation(line: 1827, column: 43, scope: !13468)
!13471 = !DILocalVariable(name: "np", scope: !13468, file: !3, line: 1829, type: !7446)
!13472 = !DILocation(line: 1829, column: 18, scope: !13468)
!13473 = !DILocation(line: 1829, column: 35, scope: !13468)
!13474 = !DILocation(line: 1829, column: 23, scope: !13468)
!13475 = !DILocalVariable(name: "less_rx", scope: !13468, file: !3, line: 1830, type: !7820)
!13476 = !DILocation(line: 1830, column: 20, scope: !13468)
!13477 = !DILocation(line: 1832, column: 12, scope: !13468)
!13478 = !DILocation(line: 1832, column: 16, scope: !13468)
!13479 = !DILocation(line: 1832, column: 23, scope: !13468)
!13480 = !DILocation(line: 1832, column: 10, scope: !13468)
!13481 = !DILocation(line: 1833, column: 13, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1833, column: 6)
!13483 = !DILocation(line: 1833, column: 19, scope: !13482)
!13484 = !DILocation(line: 1833, column: 23, scope: !13482)
!13485 = !DILocation(line: 1833, column: 31, scope: !13482)
!13486 = !DILocation(line: 1833, column: 16, scope: !13482)
!13487 = !DILocation(line: 1833, column: 6, scope: !13468)
!13488 = !DILocation(line: 1834, column: 13, scope: !13482)
!13489 = !DILocation(line: 1834, column: 17, scope: !13482)
!13490 = !DILocation(line: 1834, column: 25, scope: !13482)
!13491 = !DILocation(line: 1834, column: 11, scope: !13482)
!13492 = !DILocation(line: 1834, column: 3, scope: !13482)
!13493 = !DILocation(line: 1836, column: 2, scope: !13468)
!13494 = !DILocation(line: 1836, column: 9, scope: !13468)
!13495 = !DILocation(line: 1836, column: 13, scope: !13468)
!13496 = !DILocation(line: 1836, column: 20, scope: !13468)
!13497 = !DILocation(line: 1836, column: 28, scope: !13468)
!13498 = !DILocation(line: 1836, column: 25, scope: !13468)
!13499 = !DILocalVariable(name: "skb", scope: !13500, file: !3, line: 1837, type: !415)
!13500 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1836, column: 37)
!13501 = !DILocation(line: 1837, column: 19, scope: !13500)
!13502 = !DILocation(line: 1837, column: 42, scope: !13500)
!13503 = !DILocation(line: 1837, column: 47, scope: !13500)
!13504 = !DILocation(line: 1837, column: 51, scope: !13500)
!13505 = !DILocation(line: 1837, column: 61, scope: !13500)
!13506 = !DILocation(line: 1837, column: 25, scope: !13500)
!13507 = !DILocation(line: 1838, column: 7, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13500, file: !3, line: 1838, column: 7)
!13509 = !DILocation(line: 1838, column: 7, scope: !13500)
!13510 = !DILocation(line: 1839, column: 26, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13508, file: !3, line: 1838, column: 20)
!13512 = !DILocation(line: 1839, column: 4, scope: !13511)
!13513 = !DILocation(line: 1839, column: 8, scope: !13511)
!13514 = !DILocation(line: 1839, column: 20, scope: !13511)
!13515 = !DILocation(line: 1839, column: 24, scope: !13511)
!13516 = !DILocation(line: 1840, column: 26, scope: !13511)
!13517 = !DILocation(line: 1840, column: 4, scope: !13511)
!13518 = !DILocation(line: 1840, column: 8, scope: !13511)
!13519 = !DILocation(line: 1840, column: 20, scope: !13511)
!13520 = !DILocation(line: 1840, column: 24, scope: !13511)
!13521 = !DILocation(line: 1844, column: 8, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13511, file: !3, line: 1844, column: 8)
!13523 = !DILocation(line: 1844, column: 8, scope: !13511)
!13524 = !DILocation(line: 1846, column: 15, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1845, column: 37)
!13526 = !DILocation(line: 1846, column: 5, scope: !13525)
!13527 = !DILocation(line: 1847, column: 5, scope: !13525)
!13528 = !DILocation(line: 1849, column: 43, scope: !13511)
!13529 = !DILocation(line: 1849, column: 30, scope: !13511)
!13530 = !DILocation(line: 1849, column: 4, scope: !13511)
!13531 = !DILocation(line: 1849, column: 8, scope: !13511)
!13532 = !DILocation(line: 1849, column: 20, scope: !13511)
!13533 = !DILocation(line: 1849, column: 28, scope: !13511)
!13534 = !DILocation(line: 1850, column: 27, scope: !13511)
!13535 = !DILocation(line: 1850, column: 4, scope: !13511)
!13536 = !DILocation(line: 1850, column: 8, scope: !13511)
!13537 = !DILocation(line: 1850, column: 15, scope: !13511)
!13538 = !DILocation(line: 1850, column: 21, scope: !13511)
!13539 = !DILocation(line: 1850, column: 25, scope: !13511)
!13540 = !DILocation(line: 1851, column: 4, scope: !13511)
!13541 = !{i32 -2139514287}
!13542 = !DILocation(line: 1852, column: 31, scope: !13511)
!13543 = !DILocation(line: 1852, column: 4, scope: !13511)
!13544 = !DILocation(line: 1852, column: 8, scope: !13511)
!13545 = !DILocation(line: 1852, column: 15, scope: !13511)
!13546 = !DILocation(line: 1852, column: 21, scope: !13511)
!13547 = !DILocation(line: 1852, column: 29, scope: !13511)
!13548 = !DILocation(line: 1853, column: 8, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13511, file: !3, line: 1853, column: 8)
!13550 = !DILocation(line: 1853, column: 8, scope: !13511)
!13551 = !DILocation(line: 1854, column: 23, scope: !13549)
!13552 = !DILocation(line: 1854, column: 27, scope: !13549)
!13553 = !DILocation(line: 1854, column: 35, scope: !13549)
!13554 = !DILocation(line: 1854, column: 5, scope: !13549)
!13555 = !DILocation(line: 1854, column: 9, scope: !13549)
!13556 = !DILocation(line: 1854, column: 16, scope: !13549)
!13557 = !DILocation(line: 1854, column: 21, scope: !13549)
!13558 = !DILocation(line: 1855, column: 8, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13511, file: !3, line: 1855, column: 8)
!13560 = !DILocation(line: 1855, column: 8, scope: !13511)
!13561 = !DILocation(line: 1856, column: 22, scope: !13559)
!13562 = !DILocation(line: 1856, column: 26, scope: !13559)
!13563 = !DILocation(line: 1856, column: 5, scope: !13559)
!13564 = !DILocation(line: 1856, column: 9, scope: !13559)
!13565 = !DILocation(line: 1856, column: 20, scope: !13559)
!13566 = !DILocation(line: 1857, column: 3, scope: !13511)
!13567 = !DILocation(line: 1857, column: 10, scope: !13508)
!13568 = !DILabel(scope: !13569, name: "packet_dropped", file: !3, line: 1858)
!13569 = distinct !DILexicalBlock(scope: !13508, file: !3, line: 1857, column: 10)
!13570 = !DILocation(line: 1858, column: 1, scope: !13569)
!13571 = !DILocation(line: 1859, column: 28, scope: !13569)
!13572 = !DILocation(line: 1859, column: 32, scope: !13569)
!13573 = !DILocation(line: 1859, column: 4, scope: !13569)
!13574 = !DILocation(line: 1860, column: 4, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13569, file: !3, line: 1860, column: 4)
!13576 = !DILocation(line: 1860, column: 4, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 1860, column: 4)
!13578 = !DILocalVariable(name: "__vpp_verify", scope: !13579, file: !3, line: 1860, type: !3258)
!13579 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1860, column: 4)
!13580 = !DILocation(line: 1860, column: 4, scope: !13579)
!13581 = !DILocalVariable(name: "pao_ID__", scope: !13582, file: !3, line: 1860, type: !12599)
!13582 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1860, column: 4)
!13583 = !DILocation(line: 1860, column: 4, scope: !13582)
!13584 = !DILocation(line: 1860, column: 4, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 1860, column: 4)
!13586 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 1860, column: 4)
!13587 = !{i32 -2139506404}
!13588 = !DILocation(line: 1861, column: 26, scope: !13569)
!13589 = !DILocation(line: 1861, column: 30, scope: !13569)
!13590 = !DILocation(line: 1861, column: 4, scope: !13569)
!13591 = !DILocation(line: 1862, column: 4, scope: !13569)
!13592 = distinct !{!13592, !13493, !13593}
!13593 = !DILocation(line: 1864, column: 2, scope: !13468)
!13594 = !DILocation(line: 1865, column: 2, scope: !13468)
!13595 = !DILocation(line: 1866, column: 1, scope: !13468)
!13596 = distinct !DISubprogram(name: "nv_alloc_rx_optimized", scope: !3, file: !3, line: 1868, type: !402, scopeLine: 1869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13597 = !DILocalVariable(name: "dev", arg: 1, scope: !13596, file: !3, line: 1868, type: !290)
!13598 = !DILocation(line: 1868, column: 53, scope: !13596)
!13599 = !DILocalVariable(name: "np", scope: !13596, file: !3, line: 1870, type: !7446)
!13600 = !DILocation(line: 1870, column: 18, scope: !13596)
!13601 = !DILocation(line: 1870, column: 35, scope: !13596)
!13602 = !DILocation(line: 1870, column: 23, scope: !13596)
!13603 = !DILocalVariable(name: "less_rx", scope: !13596, file: !3, line: 1871, type: !7827)
!13604 = !DILocation(line: 1871, column: 23, scope: !13596)
!13605 = !DILocation(line: 1873, column: 12, scope: !13596)
!13606 = !DILocation(line: 1873, column: 16, scope: !13596)
!13607 = !DILocation(line: 1873, column: 23, scope: !13596)
!13608 = !DILocation(line: 1873, column: 10, scope: !13596)
!13609 = !DILocation(line: 1874, column: 13, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 1874, column: 6)
!13611 = !DILocation(line: 1874, column: 19, scope: !13610)
!13612 = !DILocation(line: 1874, column: 23, scope: !13610)
!13613 = !DILocation(line: 1874, column: 31, scope: !13610)
!13614 = !DILocation(line: 1874, column: 16, scope: !13610)
!13615 = !DILocation(line: 1874, column: 6, scope: !13596)
!13616 = !DILocation(line: 1875, column: 13, scope: !13610)
!13617 = !DILocation(line: 1875, column: 17, scope: !13610)
!13618 = !DILocation(line: 1875, column: 25, scope: !13610)
!13619 = !DILocation(line: 1875, column: 11, scope: !13610)
!13620 = !DILocation(line: 1875, column: 3, scope: !13610)
!13621 = !DILocation(line: 1877, column: 2, scope: !13596)
!13622 = !DILocation(line: 1877, column: 9, scope: !13596)
!13623 = !DILocation(line: 1877, column: 13, scope: !13596)
!13624 = !DILocation(line: 1877, column: 20, scope: !13596)
!13625 = !DILocation(line: 1877, column: 26, scope: !13596)
!13626 = !DILocation(line: 1877, column: 23, scope: !13596)
!13627 = !DILocalVariable(name: "skb", scope: !13628, file: !3, line: 1878, type: !415)
!13628 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 1877, column: 35)
!13629 = !DILocation(line: 1878, column: 19, scope: !13628)
!13630 = !DILocation(line: 1878, column: 42, scope: !13628)
!13631 = !DILocation(line: 1878, column: 47, scope: !13628)
!13632 = !DILocation(line: 1878, column: 51, scope: !13628)
!13633 = !DILocation(line: 1878, column: 61, scope: !13628)
!13634 = !DILocation(line: 1878, column: 25, scope: !13628)
!13635 = !DILocation(line: 1879, column: 7, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13628, file: !3, line: 1879, column: 7)
!13637 = !DILocation(line: 1879, column: 7, scope: !13628)
!13638 = !DILocation(line: 1880, column: 26, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 1879, column: 20)
!13640 = !DILocation(line: 1880, column: 4, scope: !13639)
!13641 = !DILocation(line: 1880, column: 8, scope: !13639)
!13642 = !DILocation(line: 1880, column: 20, scope: !13639)
!13643 = !DILocation(line: 1880, column: 24, scope: !13639)
!13644 = !DILocation(line: 1881, column: 26, scope: !13639)
!13645 = !DILocation(line: 1881, column: 4, scope: !13639)
!13646 = !DILocation(line: 1881, column: 8, scope: !13639)
!13647 = !DILocation(line: 1881, column: 20, scope: !13639)
!13648 = !DILocation(line: 1881, column: 24, scope: !13639)
!13649 = !DILocation(line: 1885, column: 8, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 1885, column: 8)
!13651 = !DILocation(line: 1885, column: 8, scope: !13639)
!13652 = !DILocation(line: 1887, column: 15, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13650, file: !3, line: 1886, column: 37)
!13654 = !DILocation(line: 1887, column: 5, scope: !13653)
!13655 = !DILocation(line: 1888, column: 5, scope: !13653)
!13656 = !DILocation(line: 1890, column: 43, scope: !13639)
!13657 = !DILocation(line: 1890, column: 30, scope: !13639)
!13658 = !DILocation(line: 1890, column: 4, scope: !13639)
!13659 = !DILocation(line: 1890, column: 8, scope: !13639)
!13660 = !DILocation(line: 1890, column: 20, scope: !13639)
!13661 = !DILocation(line: 1890, column: 28, scope: !13639)
!13662 = !DILocation(line: 1891, column: 29, scope: !13639)
!13663 = !DILocation(line: 1891, column: 4, scope: !13639)
!13664 = !DILocation(line: 1891, column: 8, scope: !13639)
!13665 = !DILocation(line: 1891, column: 15, scope: !13639)
!13666 = !DILocation(line: 1891, column: 19, scope: !13639)
!13667 = !DILocation(line: 1891, column: 27, scope: !13639)
!13668 = !DILocation(line: 1892, column: 28, scope: !13639)
!13669 = !DILocation(line: 1892, column: 4, scope: !13639)
!13670 = !DILocation(line: 1892, column: 8, scope: !13639)
!13671 = !DILocation(line: 1892, column: 15, scope: !13639)
!13672 = !DILocation(line: 1892, column: 19, scope: !13639)
!13673 = !DILocation(line: 1892, column: 26, scope: !13639)
!13674 = !DILocation(line: 1893, column: 4, scope: !13639)
!13675 = !{i32 -2139505065}
!13676 = !DILocation(line: 1894, column: 29, scope: !13639)
!13677 = !DILocation(line: 1894, column: 4, scope: !13639)
!13678 = !DILocation(line: 1894, column: 8, scope: !13639)
!13679 = !DILocation(line: 1894, column: 15, scope: !13639)
!13680 = !DILocation(line: 1894, column: 19, scope: !13639)
!13681 = !DILocation(line: 1894, column: 27, scope: !13639)
!13682 = !DILocation(line: 1895, column: 8, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 1895, column: 8)
!13684 = !DILocation(line: 1895, column: 8, scope: !13639)
!13685 = !DILocation(line: 1896, column: 21, scope: !13683)
!13686 = !DILocation(line: 1896, column: 25, scope: !13683)
!13687 = !DILocation(line: 1896, column: 33, scope: !13683)
!13688 = !DILocation(line: 1896, column: 5, scope: !13683)
!13689 = !DILocation(line: 1896, column: 9, scope: !13683)
!13690 = !DILocation(line: 1896, column: 16, scope: !13683)
!13691 = !DILocation(line: 1896, column: 19, scope: !13683)
!13692 = !DILocation(line: 1897, column: 8, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 1897, column: 8)
!13694 = !DILocation(line: 1897, column: 8, scope: !13639)
!13695 = !DILocation(line: 1898, column: 22, scope: !13693)
!13696 = !DILocation(line: 1898, column: 26, scope: !13693)
!13697 = !DILocation(line: 1898, column: 5, scope: !13693)
!13698 = !DILocation(line: 1898, column: 9, scope: !13693)
!13699 = !DILocation(line: 1898, column: 20, scope: !13693)
!13700 = !DILocation(line: 1899, column: 3, scope: !13639)
!13701 = !DILocation(line: 1899, column: 10, scope: !13636)
!13702 = !DILabel(scope: !13703, name: "packet_dropped", file: !3, line: 1900)
!13703 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 1899, column: 10)
!13704 = !DILocation(line: 1900, column: 1, scope: !13703)
!13705 = !DILocation(line: 1901, column: 28, scope: !13703)
!13706 = !DILocation(line: 1901, column: 32, scope: !13703)
!13707 = !DILocation(line: 1901, column: 4, scope: !13703)
!13708 = !DILocation(line: 1902, column: 4, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13703, file: !3, line: 1902, column: 4)
!13710 = !DILocation(line: 1902, column: 4, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13709, file: !3, line: 1902, column: 4)
!13712 = !DILocalVariable(name: "__vpp_verify", scope: !13713, file: !3, line: 1902, type: !3258)
!13713 = distinct !DILexicalBlock(scope: !13711, file: !3, line: 1902, column: 4)
!13714 = !DILocation(line: 1902, column: 4, scope: !13713)
!13715 = !DILocalVariable(name: "pao_ID__", scope: !13716, file: !3, line: 1902, type: !12599)
!13716 = distinct !DILexicalBlock(scope: !13711, file: !3, line: 1902, column: 4)
!13717 = !DILocation(line: 1902, column: 4, scope: !13716)
!13718 = !DILocation(line: 1902, column: 4, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 1902, column: 4)
!13720 = distinct !DILexicalBlock(scope: !13716, file: !3, line: 1902, column: 4)
!13721 = !{i32 -2139497186}
!13722 = !DILocation(line: 1903, column: 26, scope: !13703)
!13723 = !DILocation(line: 1903, column: 30, scope: !13703)
!13724 = !DILocation(line: 1903, column: 4, scope: !13703)
!13725 = !DILocation(line: 1904, column: 4, scope: !13703)
!13726 = distinct !{!13726, !13621, !13727}
!13727 = !DILocation(line: 1906, column: 2, scope: !13596)
!13728 = !DILocation(line: 1907, column: 2, scope: !13596)
!13729 = !DILocation(line: 1908, column: 1, scope: !13596)
!13730 = distinct !DISubprogram(name: "netdev_reset_queue", scope: !31, file: !31, line: 3525, type: !406, scopeLine: 3526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13731 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13730, file: !31, line: 3525, type: !290)
!13732 = !DILocation(line: 3525, column: 58, scope: !13730)
!13733 = !DILocation(line: 3527, column: 44, scope: !13730)
!13734 = !DILocation(line: 3527, column: 24, scope: !13730)
!13735 = !DILocation(line: 3527, column: 2, scope: !13730)
!13736 = !DILocation(line: 3528, column: 1, scope: !13730)
!13737 = distinct !DISubprogram(name: "netdev_tx_reset_queue", scope: !31, file: !31, line: 3510, type: !12737, scopeLine: 3511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13738 = !DILocalVariable(name: "q", arg: 1, scope: !13737, file: !31, line: 3510, type: !6438)
!13739 = !DILocation(line: 3510, column: 63, scope: !13737)
!13740 = !DILocation(line: 3513, column: 39, scope: !13737)
!13741 = !DILocation(line: 3513, column: 42, scope: !13737)
!13742 = !DILocation(line: 3513, column: 2, scope: !13737)
!13743 = !DILocation(line: 3514, column: 13, scope: !13737)
!13744 = !DILocation(line: 3514, column: 16, scope: !13737)
!13745 = !DILocation(line: 3514, column: 2, scope: !13737)
!13746 = !DILocation(line: 3516, column: 1, scope: !13737)
!13747 = distinct !DISubprogram(name: "clear_bit", scope: !12691, file: !12691, line: 39, type: !12692, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13748 = !DILocalVariable(name: "nr", arg: 1, scope: !13749, file: !12518, line: 72, type: !998)
!13749 = distinct !DISubprogram(name: "arch_clear_bit", scope: !12518, file: !12518, line: 72, type: !12692, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13750 = !DILocation(line: 72, column: 21, scope: !13749, inlinedAt: !13751)
!13751 = distinct !DILocation(line: 42, column: 2, scope: !13747)
!13752 = !DILocalVariable(name: "addr", arg: 2, scope: !13749, file: !12518, line: 72, type: !12694)
!13753 = !DILocation(line: 72, column: 49, scope: !13749, inlinedAt: !13751)
!13754 = !DILocation(line: 84, column: 74, scope: !12702, inlinedAt: !13755)
!13755 = distinct !DILocation(line: 41, column: 2, scope: !13747)
!13756 = !DILocation(line: 84, column: 84, scope: !12702, inlinedAt: !13755)
!13757 = !DILocalVariable(name: "nr", arg: 1, scope: !13747, file: !12691, line: 39, type: !998)
!13758 = !DILocation(line: 39, column: 35, scope: !13747)
!13759 = !DILocalVariable(name: "addr", arg: 2, scope: !13747, file: !12691, line: 39, type: !12694)
!13760 = !DILocation(line: 39, column: 63, scope: !13747)
!13761 = !DILocation(line: 41, column: 26, scope: !13747)
!13762 = !DILocation(line: 41, column: 33, scope: !13747)
!13763 = !DILocation(line: 41, column: 31, scope: !13747)
!13764 = !DILocation(line: 86, column: 20, scope: !12702, inlinedAt: !13755)
!13765 = !DILocation(line: 86, column: 23, scope: !12702, inlinedAt: !13755)
!13766 = !DILocation(line: 86, column: 2, scope: !12702, inlinedAt: !13755)
!13767 = !DILocation(line: 87, column: 2, scope: !12702, inlinedAt: !13755)
!13768 = !DILocation(line: 42, column: 17, scope: !13747)
!13769 = !DILocation(line: 42, column: 21, scope: !13747)
!13770 = !DILocation(line: 74, column: 27, scope: !13771, inlinedAt: !13751)
!13771 = distinct !DILexicalBlock(scope: !13749, file: !12518, line: 74, column: 6)
!13772 = !DILocation(line: 74, column: 6, scope: !13771, inlinedAt: !13751)
!13773 = !DILocation(line: 74, column: 6, scope: !13749, inlinedAt: !13751)
!13774 = !DILocation(line: 76, column: 6, scope: !13775, inlinedAt: !13751)
!13775 = distinct !DILexicalBlock(scope: !13771, file: !12518, line: 74, column: 32)
!13776 = !DILocation(line: 77, column: 13, scope: !13775, inlinedAt: !13751)
!13777 = !DILocation(line: 77, column: 12, scope: !13775, inlinedAt: !13751)
!13778 = !DILocation(line: 75, column: 3, scope: !13775, inlinedAt: !13751)
!13779 = !{i32 -2146958494}
!13780 = !DILocation(line: 78, column: 2, scope: !13775, inlinedAt: !13751)
!13781 = !DILocation(line: 80, column: 8, scope: !13782, inlinedAt: !13751)
!13782 = distinct !DILexicalBlock(scope: !13771, file: !12518, line: 78, column: 9)
!13783 = !DILocation(line: 80, column: 32, scope: !13782, inlinedAt: !13751)
!13784 = !DILocation(line: 79, column: 3, scope: !13782, inlinedAt: !13751)
!13785 = !{i32 -2146958362}
!13786 = !DILocation(line: 43, column: 1, scope: !13747)
!13787 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !417, file: !417, line: 2823, type: !13788, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13788 = !DISubroutineType(types: !13789)
!13789 = !{!415, !290, !7}
!13790 = !DILocalVariable(name: "dev", arg: 1, scope: !13787, file: !417, line: 2823, type: !290)
!13791 = !DILocation(line: 2823, column: 67, scope: !13787)
!13792 = !DILocalVariable(name: "length", arg: 2, scope: !13787, file: !417, line: 2824, type: !7)
!13793 = !DILocation(line: 2824, column: 26, scope: !13787)
!13794 = !DILocation(line: 2826, column: 28, scope: !13787)
!13795 = !DILocation(line: 2826, column: 33, scope: !13787)
!13796 = !DILocation(line: 2826, column: 9, scope: !13787)
!13797 = !DILocation(line: 2826, column: 2, scope: !13787)
!13798 = !DILocalVariable(name: "dev", arg: 1, scope: !8176, file: !8177, line: 271, type: !6545)
!13799 = !DILocation(line: 271, column: 62, scope: !8176)
!13800 = !DILocalVariable(name: "ptr", arg: 2, scope: !8176, file: !8177, line: 271, type: !591)
!13801 = !DILocation(line: 271, column: 73, scope: !8176)
!13802 = !DILocalVariable(name: "size", arg: 3, scope: !8176, file: !8177, line: 272, type: !1039)
!13803 = !DILocation(line: 272, column: 10, scope: !8176)
!13804 = !DILocalVariable(name: "dir", arg: 4, scope: !8176, file: !8177, line: 272, type: !7238)
!13805 = !DILocation(line: 272, column: 40, scope: !8176)
!13806 = !DILocalVariable(name: "attrs", arg: 5, scope: !8176, file: !8177, line: 272, type: !312)
!13807 = !DILocation(line: 272, column: 59, scope: !8176)
!13808 = !DILocalVariable(name: "__ret_warn_once", scope: !13809, file: !8177, line: 275, type: !32)
!13809 = distinct !DILexicalBlock(scope: !13810, file: !8177, line: 275, column: 6)
!13810 = distinct !DILexicalBlock(scope: !8176, file: !8177, line: 275, column: 6)
!13811 = !DILocation(line: 275, column: 6, scope: !13809)
!13812 = !DILocation(line: 275, column: 6, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13809, file: !8177, line: 275, column: 6)
!13814 = !DILocation(line: 0, scope: !13813)
!13815 = !DILocation(line: 275, column: 6, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13813, file: !8177, line: 275, column: 6)
!13817 = !DILocalVariable(name: "__ret_warn_on", scope: !13818, file: !8177, line: 275, type: !32)
!13818 = distinct !DILexicalBlock(scope: !13816, file: !8177, line: 275, column: 6)
!13819 = !DILocation(line: 275, column: 6, scope: !13818)
!13820 = !DILocation(line: 275, column: 6, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13818, file: !8177, line: 275, column: 6)
!13822 = !DILocation(line: 275, column: 6, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13821, file: !8177, line: 275, column: 6)
!13824 = !DILocation(line: 275, column: 6, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13823, file: !8177, line: 275, column: 6)
!13826 = !DILocation(line: 275, column: 6, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13823, file: !8177, line: 275, column: 6)
!13828 = !DILocation(line: 275, column: 6, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13827, file: !8177, line: 275, column: 6)
!13830 = !DILocation(line: 275, column: 6, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13827, file: !8177, line: 275, column: 6)
!13832 = !{i32 -2141572043, i32 -2141572014, i32 -2141571968, i32 -2141571910, i32 -2141571856, i32 -2141571802, i32 -2141571747, i32 -2141571716}
!13833 = !DILocation(line: 275, column: 6, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13827, file: !8177, line: 275, column: 6)
!13835 = !{i32 -2141571296, i32 -2141571289, i32 -2141571237, i32 -2141571206, i32 -2141571176}
!13836 = !DILocation(line: 275, column: 6, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13827, file: !8177, line: 275, column: 6)
!13838 = !DILocation(line: 275, column: 6, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13823, file: !8177, line: 275, column: 6)
!13840 = !DILocation(line: 275, column: 6, scope: !13810)
!13841 = !DILocation(line: 275, column: 6, scope: !8176)
!13842 = !DILocation(line: 277, column: 3, scope: !13810)
!13843 = !DILocation(line: 278, column: 23, scope: !8176)
!13844 = !DILocation(line: 278, column: 28, scope: !8176)
!13845 = !DILocation(line: 278, column: 33, scope: !8176)
!13846 = !DILocation(line: 278, column: 2, scope: !8176)
!13847 = !DILocation(line: 279, column: 28, scope: !8176)
!13848 = !DILocation(line: 279, column: 33, scope: !8176)
!13849 = !DILocation(line: 279, column: 52, scope: !8176)
!13850 = !DILocation(line: 280, column: 4, scope: !8176)
!13851 = !DILocation(line: 280, column: 10, scope: !8176)
!13852 = !DILocation(line: 280, column: 15, scope: !8176)
!13853 = !DILocation(line: 279, column: 9, scope: !8176)
!13854 = !DILocation(line: 279, column: 2, scope: !8176)
!13855 = !DILocation(line: 281, column: 1, scope: !8176)
!13856 = distinct !DISubprogram(name: "skb_tailroom", scope: !417, file: !417, line: 2350, type: !13857, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!32, !6052}
!13859 = !DILocalVariable(name: "skb", arg: 1, scope: !13856, file: !417, line: 2350, type: !6052)
!13860 = !DILocation(line: 2350, column: 54, scope: !13856)
!13861 = !DILocation(line: 2352, column: 26, scope: !13856)
!13862 = !DILocation(line: 2352, column: 9, scope: !13856)
!13863 = !DILocation(line: 2352, column: 37, scope: !13856)
!13864 = !DILocation(line: 2352, column: 42, scope: !13856)
!13865 = !DILocation(line: 2352, column: 48, scope: !13856)
!13866 = !DILocation(line: 2352, column: 53, scope: !13856)
!13867 = !DILocation(line: 2352, column: 46, scope: !13856)
!13868 = !DILocation(line: 2352, column: 2, scope: !13856)
!13869 = distinct !DISubprogram(name: "dma_mapping_error", scope: !8177, file: !8177, line: 94, type: !13870, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13870 = !DISubroutineType(types: !13871)
!13871 = !{!32, !6545, !2036}
!13872 = !DILocalVariable(name: "dev", arg: 1, scope: !13869, file: !8177, line: 94, type: !6545)
!13873 = !DILocation(line: 94, column: 52, scope: !13869)
!13874 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !13869, file: !8177, line: 94, type: !2036)
!13875 = !DILocation(line: 94, column: 68, scope: !13869)
!13876 = !DILocation(line: 96, column: 26, scope: !13869)
!13877 = !DILocation(line: 96, column: 31, scope: !13869)
!13878 = !DILocation(line: 96, column: 2, scope: !13869)
!13879 = !DILocation(line: 98, column: 6, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13869, file: !8177, line: 98, column: 6)
!13881 = !DILocation(line: 98, column: 15, scope: !13880)
!13882 = !DILocation(line: 98, column: 6, scope: !13869)
!13883 = !DILocation(line: 99, column: 3, scope: !13880)
!13884 = !DILocation(line: 100, column: 2, scope: !13869)
!13885 = !DILocation(line: 101, column: 1, scope: !13869)
!13886 = distinct !DISubprogram(name: "dev_name", scope: !6541, file: !6541, line: 609, type: !13887, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{!292, !6891}
!13889 = !DILocalVariable(name: "dev", arg: 1, scope: !13886, file: !6541, line: 609, type: !6891)
!13890 = !DILocation(line: 609, column: 57, scope: !13886)
!13891 = !DILocation(line: 612, column: 6, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13886, file: !6541, line: 612, column: 6)
!13893 = !DILocation(line: 612, column: 11, scope: !13892)
!13894 = !DILocation(line: 612, column: 6, scope: !13886)
!13895 = !DILocation(line: 613, column: 10, scope: !13892)
!13896 = !DILocation(line: 613, column: 15, scope: !13892)
!13897 = !DILocation(line: 613, column: 3, scope: !13892)
!13898 = !DILocation(line: 615, column: 23, scope: !13886)
!13899 = !DILocation(line: 615, column: 28, scope: !13886)
!13900 = !DILocation(line: 615, column: 9, scope: !13886)
!13901 = !DILocation(line: 615, column: 2, scope: !13886)
!13902 = !DILocation(line: 616, column: 1, scope: !13886)
!13903 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !8177, file: !8177, line: 87, type: !13904, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13904 = !DISubroutineType(types: !13905)
!13905 = !{null, !6545, !3258, !312}
!13906 = !DILocalVariable(name: "dev", arg: 1, scope: !13903, file: !8177, line: 87, type: !6545)
!13907 = !DILocation(line: 87, column: 56, scope: !13903)
!13908 = !DILocalVariable(name: "addr", arg: 2, scope: !13903, file: !8177, line: 87, type: !3258)
!13909 = !DILocation(line: 87, column: 73, scope: !13903)
!13910 = !DILocalVariable(name: "len", arg: 3, scope: !13903, file: !8177, line: 88, type: !312)
!13911 = !DILocation(line: 88, column: 17, scope: !13903)
!13912 = !DILocation(line: 90, column: 1, scope: !13903)
!13913 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !13914, file: !13914, line: 18, type: !13915, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13914 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!13915 = !DISubroutineType(types: !13916)
!13916 = !{!312, !312}
!13917 = !DILocalVariable(name: "x", arg: 1, scope: !13913, file: !13914, line: 18, type: !312)
!13918 = !DILocation(line: 18, column: 63, scope: !13913)
!13919 = !DILocalVariable(name: "y", scope: !13913, file: !13914, line: 20, type: !312)
!13920 = !DILocation(line: 20, column: 16, scope: !13913)
!13921 = !DILocation(line: 20, column: 20, scope: !13913)
!13922 = !DILocation(line: 20, column: 22, scope: !13913)
!13923 = !DILocation(line: 23, column: 6, scope: !13913)
!13924 = !DILocation(line: 23, column: 12, scope: !13913)
!13925 = !DILocation(line: 23, column: 16, scope: !13913)
!13926 = !DILocation(line: 23, column: 14, scope: !13913)
!13927 = !DILocation(line: 23, column: 11, scope: !13913)
!13928 = !DILocation(line: 23, column: 21, scope: !13913)
!13929 = !DILocation(line: 23, column: 55, scope: !13913)
!13930 = !DILocation(line: 23, column: 53, scope: !13913)
!13931 = !DILocation(line: 23, column: 8, scope: !13913)
!13932 = !DILocation(line: 23, column: 4, scope: !13913)
!13933 = !DILocation(line: 25, column: 9, scope: !13913)
!13934 = !DILocation(line: 25, column: 2, scope: !13913)
!13935 = distinct !DISubprogram(name: "kobject_name", scope: !6115, file: !6115, line: 88, type: !13936, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!292, !13938}
!13938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13939, size: 64)
!13939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6120)
!13940 = !DILocalVariable(name: "kobj", arg: 1, scope: !13935, file: !6115, line: 88, type: !13938)
!13941 = !DILocation(line: 88, column: 62, scope: !13935)
!13942 = !DILocation(line: 90, column: 9, scope: !13935)
!13943 = !DILocation(line: 90, column: 15, scope: !13935)
!13944 = !DILocation(line: 90, column: 2, scope: !13935)
!13945 = distinct !DISubprogram(name: "skb_is_nonlinear", scope: !417, file: !417, line: 2105, type: !13946, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!771, !6052}
!13948 = !DILocalVariable(name: "skb", arg: 1, scope: !13945, file: !417, line: 2105, type: !6052)
!13949 = !DILocation(line: 2105, column: 59, scope: !13945)
!13950 = !DILocation(line: 2107, column: 9, scope: !13945)
!13951 = !DILocation(line: 2107, column: 14, scope: !13945)
!13952 = !DILocation(line: 2107, column: 2, scope: !13945)
!13953 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !8177, file: !8177, line: 83, type: !13954, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13954 = !DISubroutineType(types: !13955)
!13955 = !{null, !6545, !2036}
!13956 = !DILocalVariable(name: "dev", arg: 1, scope: !13953, file: !8177, line: 83, type: !6545)
!13957 = !DILocation(line: 83, column: 59, scope: !13953)
!13958 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !13953, file: !8177, line: 84, type: !2036)
!13959 = !DILocation(line: 84, column: 14, scope: !13953)
!13960 = !DILocation(line: 86, column: 1, scope: !13953)
!13961 = distinct !DISubprogram(name: "dma_high", scope: !3, file: !3, line: 991, type: !13962, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13962 = !DISubroutineType(types: !13963)
!13963 = !{!987, !2036}
!13964 = !DILocalVariable(name: "addr", arg: 1, scope: !13961, file: !3, line: 991, type: !2036)
!13965 = !DILocation(line: 991, column: 39, scope: !13961)
!13966 = !DILocation(line: 993, column: 9, scope: !13961)
!13967 = !DILocation(line: 993, column: 13, scope: !13961)
!13968 = !DILocation(line: 993, column: 17, scope: !13961)
!13969 = !DILocation(line: 993, column: 2, scope: !13961)
!13970 = distinct !DISubprogram(name: "dma_low", scope: !3, file: !3, line: 986, type: !13962, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13971 = !DILocalVariable(name: "addr", arg: 1, scope: !13970, file: !3, line: 986, type: !2036)
!13972 = !DILocation(line: 986, column: 38, scope: !13970)
!13973 = !DILocation(line: 988, column: 9, scope: !13970)
!13974 = !DILocation(line: 988, column: 2, scope: !13970)
!13975 = distinct !DISubprogram(name: "nv_start_rx", scope: !3, file: !3, line: 1532, type: !406, scopeLine: 1533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13976 = !DILocalVariable(name: "dev", arg: 1, scope: !13975, file: !3, line: 1532, type: !290)
!13977 = !DILocation(line: 1532, column: 44, scope: !13975)
!13978 = !DILocalVariable(name: "np", scope: !13975, file: !3, line: 1534, type: !7446)
!13979 = !DILocation(line: 1534, column: 18, scope: !13975)
!13980 = !DILocation(line: 1534, column: 35, scope: !13975)
!13981 = !DILocation(line: 1534, column: 23, scope: !13975)
!13982 = !DILocalVariable(name: "base", scope: !13975, file: !3, line: 1535, type: !793)
!13983 = !DILocation(line: 1535, column: 14, scope: !13975)
!13984 = !DILocation(line: 1535, column: 32, scope: !13975)
!13985 = !DILocation(line: 1535, column: 21, scope: !13975)
!13986 = !DILocalVariable(name: "rx_ctrl", scope: !13975, file: !3, line: 1536, type: !987)
!13987 = !DILocation(line: 1536, column: 6, scope: !13975)
!13988 = !DILocation(line: 1536, column: 22, scope: !13975)
!13989 = !DILocation(line: 1536, column: 27, scope: !13975)
!13990 = !DILocation(line: 1536, column: 16, scope: !13975)
!13991 = !DILocation(line: 1539, column: 13, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13975, file: !3, line: 1539, column: 6)
!13993 = !DILocation(line: 1539, column: 18, scope: !13992)
!13994 = !DILocation(line: 1539, column: 7, scope: !13992)
!13995 = !DILocation(line: 1539, column: 42, scope: !13992)
!13996 = !DILocation(line: 1539, column: 64, scope: !13992)
!13997 = !DILocation(line: 1539, column: 68, scope: !13992)
!13998 = !DILocation(line: 1539, column: 72, scope: !13992)
!13999 = !DILocation(line: 1539, column: 6, scope: !13975)
!14000 = !DILocation(line: 1540, column: 11, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 1539, column: 84)
!14002 = !DILocation(line: 1541, column: 10, scope: !14001)
!14003 = !DILocation(line: 1541, column: 19, scope: !14001)
!14004 = !DILocation(line: 1541, column: 24, scope: !14001)
!14005 = !DILocation(line: 1541, column: 3, scope: !14001)
!14006 = !DILocation(line: 1542, column: 12, scope: !14001)
!14007 = !DILocation(line: 1542, column: 3, scope: !14001)
!14008 = !DILocation(line: 1543, column: 2, scope: !14001)
!14009 = !DILocation(line: 1544, column: 9, scope: !13975)
!14010 = !DILocation(line: 1544, column: 13, scope: !13975)
!14011 = !DILocation(line: 1544, column: 24, scope: !13975)
!14012 = !DILocation(line: 1544, column: 29, scope: !13975)
!14013 = !DILocation(line: 1544, column: 2, scope: !13975)
!14014 = !DILocation(line: 1545, column: 11, scope: !13975)
!14015 = !DILocation(line: 1545, column: 2, scope: !13975)
!14016 = !DILocation(line: 1546, column: 10, scope: !13975)
!14017 = !DILocation(line: 1547, column: 6, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !13975, file: !3, line: 1547, column: 6)
!14019 = !DILocation(line: 1547, column: 10, scope: !14018)
!14020 = !DILocation(line: 1547, column: 6, scope: !13975)
!14021 = !DILocation(line: 1548, column: 11, scope: !14018)
!14022 = !DILocation(line: 1548, column: 3, scope: !14018)
!14023 = !DILocation(line: 1549, column: 9, scope: !13975)
!14024 = !DILocation(line: 1549, column: 18, scope: !13975)
!14025 = !DILocation(line: 1549, column: 23, scope: !13975)
!14026 = !DILocation(line: 1549, column: 2, scope: !13975)
!14027 = !DILocation(line: 1550, column: 11, scope: !13975)
!14028 = !DILocation(line: 1550, column: 2, scope: !13975)
!14029 = !DILocation(line: 1551, column: 1, scope: !13975)
!14030 = distinct !DISubprogram(name: "netif_tx_unlock", scope: !31, file: !31, line: 4265, type: !406, scopeLine: 4266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14031 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !14032)
!14032 = distinct !DILocation(line: 4279, column: 2, scope: !14030)
!14033 = !DILocalVariable(name: "dev", arg: 1, scope: !14030, file: !31, line: 4265, type: !290)
!14034 = !DILocation(line: 4265, column: 55, scope: !14030)
!14035 = !DILocalVariable(name: "i", scope: !14030, file: !31, line: 4267, type: !7)
!14036 = !DILocation(line: 4267, column: 15, scope: !14030)
!14037 = !DILocation(line: 4269, column: 9, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14030, file: !31, line: 4269, column: 2)
!14039 = !DILocation(line: 4269, column: 7, scope: !14038)
!14040 = !DILocation(line: 4269, column: 14, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14038, file: !31, line: 4269, column: 2)
!14042 = !DILocation(line: 4269, column: 18, scope: !14041)
!14043 = !DILocation(line: 4269, column: 23, scope: !14041)
!14044 = !DILocation(line: 4269, column: 16, scope: !14041)
!14045 = !DILocation(line: 4269, column: 2, scope: !14038)
!14046 = !DILocalVariable(name: "txq", scope: !14047, file: !31, line: 4270, type: !6438)
!14047 = distinct !DILexicalBlock(scope: !14041, file: !31, line: 4269, column: 43)
!14048 = !DILocation(line: 4270, column: 24, scope: !14047)
!14049 = !DILocation(line: 4270, column: 50, scope: !14047)
!14050 = !DILocation(line: 4270, column: 55, scope: !14047)
!14051 = !DILocation(line: 4270, column: 30, scope: !14047)
!14052 = !DILocation(line: 4276, column: 36, scope: !14047)
!14053 = !DILocation(line: 4276, column: 41, scope: !14047)
!14054 = !DILocation(line: 4276, column: 3, scope: !14047)
!14055 = !DILocation(line: 4277, column: 24, scope: !14047)
!14056 = !DILocation(line: 4277, column: 3, scope: !14047)
!14057 = !DILocation(line: 4278, column: 2, scope: !14047)
!14058 = !DILocation(line: 4269, column: 39, scope: !14041)
!14059 = !DILocation(line: 4269, column: 2, scope: !14041)
!14060 = distinct !{!14060, !14045, !14061}
!14061 = !DILocation(line: 4278, column: 2, scope: !14038)
!14062 = !DILocation(line: 4279, column: 15, scope: !14030)
!14063 = !DILocation(line: 4279, column: 20, scope: !14030)
!14064 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !14032)
!14065 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !14032)
!14066 = !DILocation(line: 4280, column: 1, scope: !14030)
!14067 = distinct !DISubprogram(name: "local_bh_enable", scope: !12587, file: !12587, line: 30, type: !3809, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14068 = !DILocation(line: 32, column: 23, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14067, file: !12587, line: 32, column: 23)
!14070 = !DILabel(scope: !14069, name: "__here", file: !12587, line: 32)
!14071 = !DILocation(line: 32, column: 2, scope: !14067)
!14072 = !DILocation(line: 33, column: 1, scope: !14067)
!14073 = distinct !DISubprogram(name: "nv_msi_workaround", scope: !3, file: !3, line: 3637, type: !14074, scopeLine: 3638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14074 = !DISubroutineType(types: !14075)
!14075 = !{null, !7446}
!14076 = !DILocalVariable(name: "np", arg: 1, scope: !14073, file: !3, line: 3637, type: !7446)
!14077 = !DILocation(line: 3637, column: 47, scope: !14073)
!14078 = !DILocation(line: 3643, column: 6, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14073, file: !3, line: 3643, column: 6)
!14080 = !DILocation(line: 3643, column: 10, scope: !14079)
!14081 = !DILocation(line: 3643, column: 20, scope: !14079)
!14082 = !DILocation(line: 3643, column: 6, scope: !14073)
!14083 = !DILocalVariable(name: "base", scope: !14084, file: !3, line: 3644, type: !793)
!14084 = distinct !DILexicalBlock(scope: !14079, file: !3, line: 3643, column: 38)
!14085 = !DILocation(line: 3644, column: 15, scope: !14084)
!14086 = !DILocation(line: 3644, column: 22, scope: !14084)
!14087 = !DILocation(line: 3644, column: 26, scope: !14084)
!14088 = !DILocation(line: 3646, column: 13, scope: !14084)
!14089 = !DILocation(line: 3646, column: 18, scope: !14084)
!14090 = !DILocation(line: 3646, column: 3, scope: !14084)
!14091 = !DILocation(line: 3647, column: 38, scope: !14084)
!14092 = !DILocation(line: 3647, column: 43, scope: !14084)
!14093 = !DILocation(line: 3647, column: 3, scope: !14084)
!14094 = !DILocation(line: 3648, column: 2, scope: !14084)
!14095 = !DILocation(line: 3649, column: 1, scope: !14073)
!14096 = distinct !DISubprogram(name: "nv_rx_process_optimized", scope: !3, file: !3, line: 2997, type: !723, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14097 = !DILocalVariable(name: "dev", arg: 1, scope: !14096, file: !3, line: 2997, type: !290)
!14098 = !DILocation(line: 2997, column: 55, scope: !14096)
!14099 = !DILocalVariable(name: "limit", arg: 2, scope: !14096, file: !3, line: 2997, type: !32)
!14100 = !DILocation(line: 2997, column: 64, scope: !14096)
!14101 = !DILocalVariable(name: "np", scope: !14096, file: !3, line: 2999, type: !7446)
!14102 = !DILocation(line: 2999, column: 18, scope: !14096)
!14103 = !DILocation(line: 2999, column: 35, scope: !14096)
!14104 = !DILocation(line: 2999, column: 23, scope: !14096)
!14105 = !DILocalVariable(name: "flags", scope: !14096, file: !3, line: 3000, type: !987)
!14106 = !DILocation(line: 3000, column: 6, scope: !14096)
!14107 = !DILocalVariable(name: "vlanflags", scope: !14096, file: !3, line: 3001, type: !987)
!14108 = !DILocation(line: 3001, column: 6, scope: !14096)
!14109 = !DILocalVariable(name: "rx_work", scope: !14096, file: !3, line: 3002, type: !32)
!14110 = !DILocation(line: 3002, column: 6, scope: !14096)
!14111 = !DILocalVariable(name: "skb", scope: !14096, file: !3, line: 3003, type: !415)
!14112 = !DILocation(line: 3003, column: 18, scope: !14096)
!14113 = !DILocalVariable(name: "len", scope: !14096, file: !3, line: 3004, type: !32)
!14114 = !DILocation(line: 3004, column: 6, scope: !14096)
!14115 = !DILocation(line: 3006, column: 2, scope: !14096)
!14116 = !DILocation(line: 3006, column: 10, scope: !14096)
!14117 = !DILocation(line: 3006, column: 14, scope: !14096)
!14118 = !DILocation(line: 3006, column: 21, scope: !14096)
!14119 = !DILocation(line: 3006, column: 27, scope: !14096)
!14120 = !DILocation(line: 3006, column: 31, scope: !14096)
!14121 = !DILocation(line: 3006, column: 38, scope: !14096)
!14122 = !DILocation(line: 3006, column: 24, scope: !14096)
!14123 = !DILocation(line: 3006, column: 42, scope: !14096)
!14124 = !DILocation(line: 3007, column: 19, scope: !14096)
!14125 = !DILocation(line: 3007, column: 17, scope: !14096)
!14126 = !DILocation(line: 3007, column: 56, scope: !14096)
!14127 = !DILocation(line: 3007, column: 72, scope: !14096)
!14128 = !DILocation(line: 3008, column: 9, scope: !14096)
!14129 = !DILocation(line: 3008, column: 19, scope: !14096)
!14130 = !DILocation(line: 3008, column: 17, scope: !14096)
!14131 = !DILocation(line: 0, scope: !14096)
!14132 = !DILocation(line: 3015, column: 3, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14096, file: !3, line: 3008, column: 27)
!14134 = !DILocation(line: 3018, column: 9, scope: !14133)
!14135 = !DILocation(line: 3018, column: 13, scope: !14133)
!14136 = !DILocation(line: 3018, column: 25, scope: !14133)
!14137 = !DILocation(line: 3018, column: 7, scope: !14133)
!14138 = !DILocation(line: 3019, column: 3, scope: !14133)
!14139 = !DILocation(line: 3019, column: 7, scope: !14133)
!14140 = !DILocation(line: 3019, column: 19, scope: !14133)
!14141 = !DILocation(line: 3019, column: 23, scope: !14133)
!14142 = !DILocation(line: 3022, column: 7, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 3022, column: 7)
!14144 = !DILocation(line: 3022, column: 7, scope: !14133)
!14145 = !DILocation(line: 3023, column: 10, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14143, file: !3, line: 3022, column: 47)
!14147 = !DILocation(line: 3023, column: 16, scope: !14146)
!14148 = !DILocation(line: 3023, column: 8, scope: !14146)
!14149 = !DILocation(line: 3024, column: 8, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3024, column: 8)
!14151 = !DILocation(line: 3024, column: 8, scope: !14146)
!14152 = !DILocation(line: 3025, column: 10, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 3025, column: 9)
!14154 = distinct !DILexicalBlock(scope: !14150, file: !3, line: 3024, column: 40)
!14155 = !DILocation(line: 3025, column: 16, scope: !14153)
!14156 = !DILocation(line: 3025, column: 37, scope: !14153)
!14157 = !DILocation(line: 3025, column: 9, scope: !14154)
!14158 = !DILocation(line: 3026, column: 22, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14153, file: !3, line: 3025, column: 55)
!14160 = !DILocation(line: 3026, column: 27, scope: !14159)
!14161 = !DILocation(line: 3026, column: 32, scope: !14159)
!14162 = !DILocation(line: 3026, column: 38, scope: !14159)
!14163 = !DILocation(line: 3026, column: 12, scope: !14159)
!14164 = !DILocation(line: 3026, column: 10, scope: !14159)
!14165 = !DILocation(line: 3027, column: 10, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14159, file: !3, line: 3027, column: 10)
!14167 = !DILocation(line: 3027, column: 14, scope: !14166)
!14168 = !DILocation(line: 3027, column: 10, scope: !14159)
!14169 = !DILocation(line: 3028, column: 7, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 3027, column: 19)
!14171 = !DILocation(line: 3029, column: 7, scope: !14170)
!14172 = !DILocation(line: 3031, column: 5, scope: !14159)
!14173 = !DILocation(line: 3033, column: 15, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14153, file: !3, line: 3033, column: 14)
!14175 = !DILocation(line: 3033, column: 21, scope: !14174)
!14176 = !DILocation(line: 3033, column: 42, scope: !14174)
!14177 = !DILocation(line: 3033, column: 14, scope: !14153)
!14178 = !DILocation(line: 3034, column: 10, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 3034, column: 10)
!14180 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 3033, column: 64)
!14181 = !DILocation(line: 3034, column: 16, scope: !14179)
!14182 = !DILocation(line: 3034, column: 10, scope: !14180)
!14183 = !DILocation(line: 3035, column: 10, scope: !14179)
!14184 = !DILocation(line: 3035, column: 7, scope: !14179)
!14185 = !DILocation(line: 3036, column: 5, scope: !14180)
!14186 = !DILocation(line: 3039, column: 6, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 3038, column: 10)
!14188 = !DILocation(line: 3040, column: 6, scope: !14187)
!14189 = !DILocation(line: 3042, column: 4, scope: !14154)
!14190 = !DILocation(line: 3044, column: 10, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3044, column: 8)
!14192 = !DILocation(line: 3044, column: 16, scope: !14191)
!14193 = !DILocation(line: 3044, column: 39, scope: !14191)
!14194 = !DILocation(line: 3044, column: 66, scope: !14191)
!14195 = !DILocation(line: 3045, column: 10, scope: !14191)
!14196 = !DILocation(line: 3045, column: 16, scope: !14191)
!14197 = !DILocation(line: 3045, column: 39, scope: !14191)
!14198 = !DILocation(line: 3044, column: 8, scope: !14146)
!14199 = !DILocation(line: 3046, column: 5, scope: !14191)
!14200 = !DILocation(line: 3046, column: 10, scope: !14191)
!14201 = !DILocation(line: 3046, column: 20, scope: !14191)
!14202 = !DILocation(line: 3049, column: 12, scope: !14146)
!14203 = !DILocation(line: 3049, column: 17, scope: !14146)
!14204 = !DILocation(line: 3049, column: 4, scope: !14146)
!14205 = !DILocation(line: 3050, column: 35, scope: !14146)
!14206 = !DILocation(line: 3050, column: 40, scope: !14146)
!14207 = !DILocation(line: 3050, column: 20, scope: !14146)
!14208 = !DILocation(line: 3050, column: 4, scope: !14146)
!14209 = !DILocation(line: 3050, column: 9, scope: !14146)
!14210 = !DILocation(line: 3050, column: 18, scope: !14146)
!14211 = !DILocation(line: 3051, column: 4, scope: !14146)
!14212 = !DILocation(line: 3053, column: 16, scope: !14146)
!14213 = !DILocation(line: 3053, column: 14, scope: !14146)
!14214 = !DILocation(line: 3060, column: 8, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3060, column: 8)
!14216 = !DILocation(line: 3060, column: 13, scope: !14215)
!14217 = !DILocation(line: 3060, column: 22, scope: !14215)
!14218 = !DILocation(line: 3060, column: 48, scope: !14215)
!14219 = !DILocation(line: 3061, column: 8, scope: !14215)
!14220 = !DILocation(line: 3061, column: 18, scope: !14215)
!14221 = !DILocation(line: 3060, column: 8, scope: !14146)
!14222 = !DILocalVariable(name: "vid", scope: !14223, file: !3, line: 3062, type: !581)
!14223 = distinct !DILexicalBlock(scope: !14215, file: !3, line: 3061, column: 45)
!14224 = !DILocation(line: 3062, column: 9, scope: !14223)
!14225 = !DILocation(line: 3062, column: 15, scope: !14223)
!14226 = !DILocation(line: 3062, column: 25, scope: !14223)
!14227 = !DILocation(line: 3064, column: 28, scope: !14223)
!14228 = !DILocation(line: 3064, column: 53, scope: !14223)
!14229 = !DILocation(line: 3064, column: 5, scope: !14223)
!14230 = !DILocation(line: 3065, column: 4, scope: !14223)
!14231 = !DILocation(line: 3066, column: 22, scope: !14146)
!14232 = !DILocation(line: 3066, column: 26, scope: !14146)
!14233 = !DILocation(line: 3066, column: 32, scope: !14146)
!14234 = !DILocation(line: 3066, column: 4, scope: !14146)
!14235 = !DILocation(line: 3067, column: 28, scope: !14146)
!14236 = !DILocation(line: 3067, column: 32, scope: !14146)
!14237 = !DILocation(line: 3067, column: 4, scope: !14146)
!14238 = !DILocation(line: 3068, column: 4, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3068, column: 4)
!14240 = !DILocation(line: 3068, column: 4, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14239, file: !3, line: 3068, column: 4)
!14242 = !DILocalVariable(name: "__vpp_verify", scope: !14243, file: !3, line: 3068, type: !3258)
!14243 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 3068, column: 4)
!14244 = !DILocation(line: 3068, column: 4, scope: !14243)
!14245 = !DILocalVariable(name: "pao_ID__", scope: !14246, file: !3, line: 3068, type: !12599)
!14246 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 3068, column: 4)
!14247 = !DILocation(line: 3068, column: 4, scope: !14246)
!14248 = !DILocation(line: 3068, column: 4, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 3068, column: 4)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !3, line: 3068, column: 4)
!14251 = !{i32 -2139341897}
!14252 = !DILocation(line: 3069, column: 4, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3069, column: 4)
!14254 = !DILocation(line: 3069, column: 4, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 3069, column: 4)
!14256 = !DILocalVariable(name: "__vpp_verify", scope: !14257, file: !3, line: 3069, type: !3258)
!14257 = distinct !DILexicalBlock(scope: !14255, file: !3, line: 3069, column: 4)
!14258 = !DILocation(line: 3069, column: 4, scope: !14257)
!14259 = !DILocalVariable(name: "pao_ID__", scope: !14260, file: !3, line: 3069, type: !12599)
!14260 = distinct !DILexicalBlock(scope: !14255, file: !3, line: 3069, column: 4)
!14261 = !DILocation(line: 3069, column: 4, scope: !14260)
!14262 = !DILocation(line: 3069, column: 4, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14264, file: !3, line: 3069, column: 4)
!14264 = distinct !DILexicalBlock(scope: !14260, file: !3, line: 3069, column: 4)
!14265 = !DILocalVariable(name: "pto_val__", scope: !14266, file: !3, line: 3069, type: !331)
!14266 = distinct !DILexicalBlock(scope: !14263, file: !3, line: 3069, column: 4)
!14267 = !DILocation(line: 3069, column: 4, scope: !14266)
!14268 = !{i32 -2139332301}
!14269 = !DILocation(line: 3070, column: 26, scope: !14146)
!14270 = !DILocation(line: 3070, column: 30, scope: !14146)
!14271 = !DILocation(line: 3070, column: 4, scope: !14146)
!14272 = !DILocation(line: 3071, column: 3, scope: !14146)
!14273 = !DILocation(line: 3072, column: 4, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14143, file: !3, line: 3071, column: 10)
!14275 = !DILabel(scope: !14133, name: "next_pkt", file: !3, line: 3074)
!14276 = !DILocation(line: 3074, column: 1, scope: !14133)
!14277 = !DILocation(line: 3075, column: 7, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 3075, column: 7)
!14279 = !DILocation(line: 3075, column: 7, scope: !14133)
!14280 = !DILocation(line: 3076, column: 20, scope: !14278)
!14281 = !DILocation(line: 3076, column: 24, scope: !14278)
!14282 = !DILocation(line: 3076, column: 32, scope: !14278)
!14283 = !DILocation(line: 3076, column: 4, scope: !14278)
!14284 = !DILocation(line: 3076, column: 8, scope: !14278)
!14285 = !DILocation(line: 3076, column: 15, scope: !14278)
!14286 = !DILocation(line: 3076, column: 18, scope: !14278)
!14287 = !DILocation(line: 3077, column: 7, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 3077, column: 7)
!14289 = !DILocation(line: 3077, column: 7, scope: !14133)
!14290 = !DILocation(line: 3078, column: 21, scope: !14288)
!14291 = !DILocation(line: 3078, column: 25, scope: !14288)
!14292 = !DILocation(line: 3078, column: 4, scope: !14288)
!14293 = !DILocation(line: 3078, column: 8, scope: !14288)
!14294 = !DILocation(line: 3078, column: 19, scope: !14288)
!14295 = !DILocation(line: 3080, column: 10, scope: !14133)
!14296 = distinct !{!14296, !14115, !14297}
!14297 = !DILocation(line: 3081, column: 2, scope: !14096)
!14298 = !DILocation(line: 3083, column: 9, scope: !14096)
!14299 = !DILocation(line: 3083, column: 2, scope: !14096)
!14300 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !14301, file: !14301, line: 666, type: !14302, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14301 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!14302 = !DISubroutineType(types: !14303)
!14303 = !{!312}
!14304 = !DILocalVariable(name: "f", scope: !14300, file: !14301, line: 668, type: !312)
!14305 = !DILocation(line: 668, column: 16, scope: !14300)
!14306 = !DILocation(line: 670, column: 6, scope: !14300)
!14307 = !DILocation(line: 670, column: 4, scope: !14300)
!14308 = !DILocation(line: 671, column: 2, scope: !14300)
!14309 = !DILocation(line: 672, column: 9, scope: !14300)
!14310 = !DILocation(line: 672, column: 2, scope: !14300)
!14311 = distinct !DISubprogram(name: "nv_getlen", scope: !3, file: !3, line: 2848, type: !14312, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14312 = !DISubroutineType(types: !14313)
!14313 = !{!32, !290, !591, !32}
!14314 = !DILocalVariable(name: "dev", arg: 1, scope: !14311, file: !3, line: 2848, type: !290)
!14315 = !DILocation(line: 2848, column: 41, scope: !14311)
!14316 = !DILocalVariable(name: "packet", arg: 2, scope: !14311, file: !3, line: 2848, type: !591)
!14317 = !DILocation(line: 2848, column: 52, scope: !14311)
!14318 = !DILocalVariable(name: "datalen", arg: 3, scope: !14311, file: !3, line: 2848, type: !32)
!14319 = !DILocation(line: 2848, column: 64, scope: !14311)
!14320 = !DILocalVariable(name: "hdrlen", scope: !14311, file: !3, line: 2850, type: !32)
!14321 = !DILocation(line: 2850, column: 6, scope: !14311)
!14322 = !DILocalVariable(name: "protolen", scope: !14311, file: !3, line: 2851, type: !32)
!14323 = !DILocation(line: 2851, column: 6, scope: !14311)
!14324 = !DILocation(line: 2854, column: 29, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 2854, column: 6)
!14326 = !DILocation(line: 2854, column: 7, scope: !14325)
!14327 = !DILocation(line: 2854, column: 38, scope: !14325)
!14328 = !DILocation(line: 2854, column: 6, scope: !14325)
!14329 = !DILocation(line: 2854, column: 51, scope: !14325)
!14330 = !DILocation(line: 2854, column: 6, scope: !14311)
!14331 = !DILocation(line: 2855, column: 14, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 2854, column: 74)
!14333 = !DILocation(line: 2855, column: 12, scope: !14332)
!14334 = !DILocation(line: 2856, column: 10, scope: !14332)
!14335 = !DILocation(line: 2857, column: 2, scope: !14332)
!14336 = !DILocation(line: 2858, column: 14, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 2857, column: 9)
!14338 = !DILocation(line: 2858, column: 12, scope: !14337)
!14339 = !DILocation(line: 2859, column: 10, scope: !14337)
!14340 = !DILocation(line: 2861, column: 6, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 2861, column: 6)
!14342 = !DILocation(line: 2861, column: 15, scope: !14341)
!14343 = !DILocation(line: 2861, column: 6, scope: !14311)
!14344 = !DILocation(line: 2862, column: 10, scope: !14341)
!14345 = !DILocation(line: 2862, column: 3, scope: !14341)
!14346 = !DILocation(line: 2864, column: 14, scope: !14311)
!14347 = !DILocation(line: 2864, column: 11, scope: !14311)
!14348 = !DILocation(line: 2866, column: 6, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 2866, column: 6)
!14350 = !DILocation(line: 2866, column: 14, scope: !14349)
!14351 = !DILocation(line: 2866, column: 6, scope: !14311)
!14352 = !DILocation(line: 2867, column: 7, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 2867, column: 7)
!14354 = distinct !DILexicalBlock(scope: !14349, file: !3, line: 2866, column: 26)
!14355 = !DILocation(line: 2867, column: 18, scope: !14353)
!14356 = !DILocation(line: 2867, column: 15, scope: !14353)
!14357 = !DILocation(line: 2867, column: 7, scope: !14354)
!14358 = !DILocation(line: 2871, column: 11, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 2867, column: 28)
!14360 = !DILocation(line: 2871, column: 4, scope: !14359)
!14361 = !DILocation(line: 2876, column: 4, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 2872, column: 10)
!14363 = !DILocation(line: 2880, column: 7, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14365, file: !3, line: 2880, column: 7)
!14365 = distinct !DILexicalBlock(scope: !14349, file: !3, line: 2878, column: 9)
!14366 = !DILocation(line: 2880, column: 16, scope: !14364)
!14367 = !DILocation(line: 2880, column: 7, scope: !14365)
!14368 = !DILocation(line: 2881, column: 4, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14364, file: !3, line: 2880, column: 28)
!14370 = !DILocation(line: 2883, column: 10, scope: !14365)
!14371 = !DILocation(line: 2883, column: 3, scope: !14365)
!14372 = !DILocation(line: 2885, column: 1, scope: !14311)
!14373 = distinct !DISubprogram(name: "__vlan_hwaccel_put_tag", scope: !7903, file: !7903, line: 512, type: !14374, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14374 = !DISubroutineType(types: !14375)
!14375 = !{null, !415, !535, !581}
!14376 = !DILocalVariable(name: "skb", arg: 1, scope: !14373, file: !7903, line: 512, type: !415)
!14377 = !DILocation(line: 512, column: 59, scope: !14373)
!14378 = !DILocalVariable(name: "vlan_proto", arg: 2, scope: !14373, file: !7903, line: 513, type: !535)
!14379 = !DILocation(line: 513, column: 15, scope: !14373)
!14380 = !DILocalVariable(name: "vlan_tci", arg: 3, scope: !14373, file: !7903, line: 513, type: !581)
!14381 = !DILocation(line: 513, column: 31, scope: !14373)
!14382 = !DILocation(line: 515, column: 20, scope: !14373)
!14383 = !DILocation(line: 515, column: 2, scope: !14373)
!14384 = !DILocation(line: 515, column: 7, scope: !14373)
!14385 = !DILocation(line: 515, column: 18, scope: !14373)
!14386 = !DILocation(line: 516, column: 18, scope: !14373)
!14387 = !DILocation(line: 516, column: 2, scope: !14373)
!14388 = !DILocation(line: 516, column: 7, scope: !14373)
!14389 = !DILocation(line: 516, column: 16, scope: !14373)
!14390 = !DILocation(line: 517, column: 2, scope: !14373)
!14391 = !DILocation(line: 517, column: 7, scope: !14373)
!14392 = !DILocation(line: 517, column: 20, scope: !14373)
!14393 = !DILocation(line: 518, column: 1, scope: !14373)
!14394 = distinct !DISubprogram(name: "__fswab16", scope: !14395, file: !14395, line: 48, type: !14396, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14395 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!14396 = !DISubroutineType(types: !14397)
!14397 = !{!475, !475}
!14398 = !DILocalVariable(name: "val", arg: 1, scope: !14394, file: !14395, line: 48, type: !475)
!14399 = !DILocation(line: 48, column: 57, scope: !14394)
!14400 = !DILocation(line: 53, column: 9, scope: !14394)
!14401 = !DILocation(line: 53, column: 2, scope: !14394)
!14402 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !14301, file: !14301, line: 646, type: !14302, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14403 = !DILocalVariable(name: "__ret", scope: !14404, file: !14301, line: 648, type: !312)
!14404 = distinct !DILexicalBlock(scope: !14402, file: !14301, line: 648, column: 9)
!14405 = !DILocation(line: 648, column: 9, scope: !14404)
!14406 = !DILocalVariable(name: "__edi", scope: !14404, file: !14301, line: 648, type: !312)
!14407 = !DILocalVariable(name: "__esi", scope: !14404, file: !14301, line: 648, type: !312)
!14408 = !DILocalVariable(name: "__edx", scope: !14404, file: !14301, line: 648, type: !312)
!14409 = !DILocalVariable(name: "__ecx", scope: !14404, file: !14301, line: 648, type: !312)
!14410 = !DILocalVariable(name: "__eax", scope: !14404, file: !14301, line: 648, type: !312)
!14411 = !DILocation(line: 648, column: 9, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14413, file: !14301, line: 648, column: 9)
!14413 = distinct !DILexicalBlock(scope: !14404, file: !14301, line: 648, column: 9)
!14414 = !{i32 -2145595186, i32 -2145592871, i32 -2145592637, i32 -2145592586, i32 -2145592558, i32 -2145592533, i32 -2145592849, i32 -2145592836, i32 -2145592398, i32 -2145592279, i32 -2145592744, i32 -2145592717, i32 -2145592689, i32 -2145592659}
!14415 = !DILocalVariable(name: "__mask", scope: !14416, file: !14301, line: 648, type: !312)
!14416 = distinct !DILexicalBlock(scope: !14412, file: !14301, line: 648, column: 9)
!14417 = !DILocation(line: 648, column: 9, scope: !14416)
!14418 = !DILocation(line: 648, column: 9, scope: !14413)
!14419 = !DILocation(line: 648, column: 2, scope: !14402)
!14420 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !14301, file: !14301, line: 656, type: !3809, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14421 = !DILocalVariable(name: "__edi", scope: !14422, file: !14301, line: 658, type: !312)
!14422 = distinct !DILexicalBlock(scope: !14420, file: !14301, line: 658, column: 2)
!14423 = !DILocation(line: 658, column: 2, scope: !14422)
!14424 = !DILocalVariable(name: "__esi", scope: !14422, file: !14301, line: 658, type: !312)
!14425 = !DILocalVariable(name: "__edx", scope: !14422, file: !14301, line: 658, type: !312)
!14426 = !DILocalVariable(name: "__ecx", scope: !14422, file: !14301, line: 658, type: !312)
!14427 = !DILocalVariable(name: "__eax", scope: !14422, file: !14301, line: 658, type: !312)
!14428 = !{i32 -2145588092, i32 -2145587360, i32 -2145587126, i32 -2145587075, i32 -2145587047, i32 -2145587022, i32 -2145587338, i32 -2145587325, i32 -2145586887, i32 -2145586768, i32 -2145587233, i32 -2145587206, i32 -2145587178, i32 -2145587148}
!14429 = !DILocation(line: 659, column: 1, scope: !14420)
!14430 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !14301, file: !14301, line: 651, type: !14431, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14431 = !DISubroutineType(types: !14432)
!14432 = !{null, !312}
!14433 = !DILocalVariable(name: "f", arg: 1, scope: !14430, file: !14301, line: 651, type: !312)
!14434 = !DILocation(line: 651, column: 65, scope: !14430)
!14435 = !DILocalVariable(name: "__edi", scope: !14436, file: !14301, line: 653, type: !312)
!14436 = distinct !DILexicalBlock(scope: !14430, file: !14301, line: 653, column: 2)
!14437 = !DILocation(line: 653, column: 2, scope: !14436)
!14438 = !DILocalVariable(name: "__esi", scope: !14436, file: !14301, line: 653, type: !312)
!14439 = !DILocalVariable(name: "__edx", scope: !14436, file: !14301, line: 653, type: !312)
!14440 = !DILocalVariable(name: "__ecx", scope: !14436, file: !14301, line: 653, type: !312)
!14441 = !DILocalVariable(name: "__eax", scope: !14436, file: !14301, line: 653, type: !312)
!14442 = !{i32 -2145590719, i32 -2145589969, i32 -2145589735, i32 -2145589684, i32 -2145589656, i32 -2145589631, i32 -2145589947, i32 -2145589934, i32 -2145589496, i32 -2145589377, i32 -2145589842, i32 -2145589815, i32 -2145589787, i32 -2145589757}
!14443 = !DILocation(line: 654, column: 1, scope: !14430)
!14444 = distinct !DISubprogram(name: "nv_tx_done_optimized", scope: !3, file: !3, line: 2681, type: !723, scopeLine: 2682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14445 = !DILocalVariable(name: "dev", arg: 1, scope: !14444, file: !3, line: 2681, type: !290)
!14446 = !DILocation(line: 2681, column: 52, scope: !14444)
!14447 = !DILocalVariable(name: "limit", arg: 2, scope: !14444, file: !3, line: 2681, type: !32)
!14448 = !DILocation(line: 2681, column: 61, scope: !14444)
!14449 = !DILocalVariable(name: "np", scope: !14444, file: !3, line: 2683, type: !7446)
!14450 = !DILocation(line: 2683, column: 18, scope: !14444)
!14451 = !DILocation(line: 2683, column: 35, scope: !14444)
!14452 = !DILocation(line: 2683, column: 23, scope: !14444)
!14453 = !DILocalVariable(name: "flags", scope: !14444, file: !3, line: 2684, type: !987)
!14454 = !DILocation(line: 2684, column: 6, scope: !14444)
!14455 = !DILocalVariable(name: "tx_work", scope: !14444, file: !3, line: 2685, type: !32)
!14456 = !DILocation(line: 2685, column: 6, scope: !14444)
!14457 = !DILocalVariable(name: "orig_get_tx", scope: !14444, file: !3, line: 2686, type: !7827)
!14458 = !DILocation(line: 2686, column: 23, scope: !14444)
!14459 = !DILocation(line: 2686, column: 37, scope: !14444)
!14460 = !DILocation(line: 2686, column: 41, scope: !14444)
!14461 = !DILocation(line: 2686, column: 48, scope: !14444)
!14462 = !DILocalVariable(name: "bytes_cleaned", scope: !14444, file: !3, line: 2687, type: !312)
!14463 = !DILocation(line: 2687, column: 16, scope: !14444)
!14464 = !DILocation(line: 2689, column: 2, scope: !14444)
!14465 = !DILocation(line: 2689, column: 10, scope: !14444)
!14466 = !DILocation(line: 2689, column: 14, scope: !14444)
!14467 = !DILocation(line: 2689, column: 21, scope: !14444)
!14468 = !DILocation(line: 2689, column: 27, scope: !14444)
!14469 = !DILocation(line: 2689, column: 31, scope: !14444)
!14470 = !DILocation(line: 2689, column: 38, scope: !14444)
!14471 = !DILocation(line: 2689, column: 24, scope: !14444)
!14472 = !DILocation(line: 2689, column: 42, scope: !14444)
!14473 = !DILocation(line: 2690, column: 20, scope: !14444)
!14474 = !DILocation(line: 2690, column: 18, scope: !14444)
!14475 = !DILocation(line: 2690, column: 57, scope: !14444)
!14476 = !DILocation(line: 2690, column: 73, scope: !14444)
!14477 = !DILocation(line: 2691, column: 10, scope: !14444)
!14478 = !DILocation(line: 2691, column: 20, scope: !14444)
!14479 = !DILocation(line: 2691, column: 18, scope: !14444)
!14480 = !DILocation(line: 0, scope: !14444)
!14481 = !DILocation(line: 2693, column: 18, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14444, file: !3, line: 2691, column: 28)
!14483 = !DILocation(line: 2693, column: 22, scope: !14482)
!14484 = !DILocation(line: 2693, column: 26, scope: !14482)
!14485 = !DILocation(line: 2693, column: 3, scope: !14482)
!14486 = !DILocation(line: 2695, column: 7, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 2695, column: 7)
!14488 = !DILocation(line: 2695, column: 13, scope: !14487)
!14489 = !DILocation(line: 2695, column: 7, scope: !14482)
!14490 = !DILocation(line: 2696, column: 8, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14492, file: !3, line: 2696, column: 8)
!14492 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 2695, column: 34)
!14493 = !DILocation(line: 2696, column: 8, scope: !14492)
!14494 = !DILocation(line: 2697, column: 10, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14496, file: !3, line: 2697, column: 9)
!14496 = distinct !DILexicalBlock(scope: !14491, file: !3, line: 2696, column: 40)
!14497 = !DILocation(line: 2697, column: 16, scope: !14495)
!14498 = !DILocation(line: 2698, column: 9, scope: !14495)
!14499 = !DILocation(line: 2698, column: 14, scope: !14495)
!14500 = !DILocation(line: 2698, column: 20, scope: !14495)
!14501 = !DILocation(line: 2697, column: 9, scope: !14496)
!14502 = !DILocation(line: 2699, column: 10, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !3, line: 2699, column: 10)
!14504 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 2698, column: 47)
!14505 = !DILocation(line: 2699, column: 14, scope: !14503)
!14506 = !DILocation(line: 2699, column: 26, scope: !14503)
!14507 = !DILocation(line: 2699, column: 10, scope: !14504)
!14508 = !DILocation(line: 2700, column: 30, scope: !14503)
!14509 = !DILocation(line: 2700, column: 7, scope: !14503)
!14510 = !DILocation(line: 2702, column: 31, scope: !14503)
!14511 = !DILocation(line: 2702, column: 7, scope: !14503)
!14512 = !DILocation(line: 2703, column: 5, scope: !14504)
!14513 = !DILocation(line: 2704, column: 4, scope: !14496)
!14514 = !DILocalVariable(name: "len", scope: !14515, file: !3, line: 2705, type: !7)
!14515 = distinct !DILexicalBlock(scope: !14491, file: !3, line: 2704, column: 11)
!14516 = !DILocation(line: 2705, column: 18, scope: !14515)
!14517 = !DILocation(line: 2707, column: 29, scope: !14515)
!14518 = !DILocation(line: 2707, column: 33, scope: !14515)
!14519 = !DILocation(line: 2707, column: 5, scope: !14515)
!14520 = !DILocation(line: 2708, column: 5, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14515, file: !3, line: 2708, column: 5)
!14522 = !DILocation(line: 2708, column: 5, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14521, file: !3, line: 2708, column: 5)
!14524 = !DILocalVariable(name: "__vpp_verify", scope: !14525, file: !3, line: 2708, type: !3258)
!14525 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 2708, column: 5)
!14526 = !DILocation(line: 2708, column: 5, scope: !14525)
!14527 = !DILocalVariable(name: "pao_ID__", scope: !14528, file: !3, line: 2708, type: !12599)
!14528 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 2708, column: 5)
!14529 = !DILocation(line: 2708, column: 5, scope: !14528)
!14530 = !DILocation(line: 2708, column: 5, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14532, file: !3, line: 2708, column: 5)
!14532 = distinct !DILexicalBlock(scope: !14528, file: !3, line: 2708, column: 5)
!14533 = !{i32 -2139396015}
!14534 = !DILocation(line: 2709, column: 11, scope: !14515)
!14535 = !DILocation(line: 2709, column: 15, scope: !14515)
!14536 = !DILocation(line: 2709, column: 27, scope: !14515)
!14537 = !DILocation(line: 2709, column: 32, scope: !14515)
!14538 = !DILocation(line: 2709, column: 9, scope: !14515)
!14539 = !DILocation(line: 2710, column: 5, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14515, file: !3, line: 2710, column: 5)
!14541 = !DILocation(line: 2710, column: 5, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14540, file: !3, line: 2710, column: 5)
!14543 = !DILocalVariable(name: "__vpp_verify", scope: !14544, file: !3, line: 2710, type: !3258)
!14544 = distinct !DILexicalBlock(scope: !14542, file: !3, line: 2710, column: 5)
!14545 = !DILocation(line: 2710, column: 5, scope: !14544)
!14546 = !DILocalVariable(name: "pao_ID__", scope: !14547, file: !3, line: 2710, type: !12599)
!14547 = distinct !DILexicalBlock(scope: !14542, file: !3, line: 2710, column: 5)
!14548 = !DILocation(line: 2710, column: 5, scope: !14547)
!14549 = !DILocation(line: 2710, column: 5, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 2710, column: 5)
!14551 = distinct !DILexicalBlock(scope: !14547, file: !3, line: 2710, column: 5)
!14552 = !DILocalVariable(name: "pto_val__", scope: !14553, file: !3, line: 2710, type: !331)
!14553 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 2710, column: 5)
!14554 = !DILocation(line: 2710, column: 5, scope: !14553)
!14555 = !{i32 -2139386419}
!14556 = !DILocation(line: 2711, column: 27, scope: !14515)
!14557 = !DILocation(line: 2711, column: 31, scope: !14515)
!14558 = !DILocation(line: 2711, column: 5, scope: !14515)
!14559 = !DILocation(line: 2714, column: 21, scope: !14492)
!14560 = !DILocation(line: 2714, column: 25, scope: !14492)
!14561 = !DILocation(line: 2714, column: 37, scope: !14492)
!14562 = !DILocation(line: 2714, column: 42, scope: !14492)
!14563 = !DILocation(line: 2714, column: 18, scope: !14492)
!14564 = !DILocation(line: 2715, column: 22, scope: !14492)
!14565 = !DILocation(line: 2715, column: 26, scope: !14492)
!14566 = !DILocation(line: 2715, column: 38, scope: !14492)
!14567 = !DILocation(line: 2715, column: 4, scope: !14492)
!14568 = !DILocation(line: 2716, column: 4, scope: !14492)
!14569 = !DILocation(line: 2716, column: 8, scope: !14492)
!14570 = !DILocation(line: 2716, column: 20, scope: !14492)
!14571 = !DILocation(line: 2716, column: 24, scope: !14492)
!14572 = !DILocation(line: 2717, column: 11, scope: !14492)
!14573 = !DILocation(line: 2719, column: 8, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14492, file: !3, line: 2719, column: 8)
!14575 = !DILocation(line: 2719, column: 12, scope: !14574)
!14576 = !DILocation(line: 2719, column: 8, scope: !14492)
!14577 = !DILocation(line: 2720, column: 26, scope: !14574)
!14578 = !DILocation(line: 2720, column: 5, scope: !14574)
!14579 = !DILocation(line: 2721, column: 3, scope: !14492)
!14580 = !DILocation(line: 2723, column: 7, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 2723, column: 7)
!14582 = !DILocation(line: 2723, column: 7, scope: !14482)
!14583 = !DILocation(line: 2724, column: 20, scope: !14581)
!14584 = !DILocation(line: 2724, column: 24, scope: !14581)
!14585 = !DILocation(line: 2724, column: 32, scope: !14581)
!14586 = !DILocation(line: 2724, column: 4, scope: !14581)
!14587 = !DILocation(line: 2724, column: 8, scope: !14581)
!14588 = !DILocation(line: 2724, column: 15, scope: !14581)
!14589 = !DILocation(line: 2724, column: 18, scope: !14581)
!14590 = !DILocation(line: 2725, column: 7, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 2725, column: 7)
!14592 = !DILocation(line: 2725, column: 7, scope: !14482)
!14593 = !DILocation(line: 2726, column: 21, scope: !14591)
!14594 = !DILocation(line: 2726, column: 25, scope: !14591)
!14595 = !DILocation(line: 2726, column: 4, scope: !14591)
!14596 = !DILocation(line: 2726, column: 8, scope: !14591)
!14597 = !DILocation(line: 2726, column: 19, scope: !14591)
!14598 = distinct !{!14598, !14464, !14599}
!14599 = !DILocation(line: 2727, column: 2, scope: !14444)
!14600 = !DILocation(line: 2729, column: 25, scope: !14444)
!14601 = !DILocation(line: 2729, column: 29, scope: !14444)
!14602 = !DILocation(line: 2729, column: 34, scope: !14444)
!14603 = !DILocation(line: 2729, column: 43, scope: !14444)
!14604 = !DILocation(line: 2729, column: 2, scope: !14444)
!14605 = !DILocation(line: 2731, column: 6, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14444, file: !3, line: 2731, column: 6)
!14607 = !DILocation(line: 0, scope: !14606)
!14608 = !DILocation(line: 2731, column: 6, scope: !14444)
!14609 = !DILocation(line: 2732, column: 3, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14606, file: !3, line: 2731, column: 70)
!14611 = !DILocation(line: 2732, column: 7, scope: !14610)
!14612 = !DILocation(line: 2732, column: 15, scope: !14610)
!14613 = !DILocation(line: 2733, column: 20, scope: !14610)
!14614 = !DILocation(line: 2733, column: 3, scope: !14610)
!14615 = !DILocation(line: 2734, column: 2, scope: !14610)
!14616 = !DILocation(line: 2735, column: 9, scope: !14444)
!14617 = !DILocation(line: 2735, column: 2, scope: !14444)
!14618 = distinct !DISubprogram(name: "nv_gear_backoff_reseed", scope: !3, file: !3, line: 2147, type: !406, scopeLine: 2148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14619 = !DILocalVariable(name: "dev", arg: 1, scope: !14618, file: !3, line: 2147, type: !290)
!14620 = !DILocation(line: 2147, column: 55, scope: !14618)
!14621 = !DILocalVariable(name: "base", scope: !14618, file: !3, line: 2149, type: !793)
!14622 = !DILocation(line: 2149, column: 14, scope: !14618)
!14623 = !DILocation(line: 2149, column: 32, scope: !14618)
!14624 = !DILocation(line: 2149, column: 21, scope: !14618)
!14625 = !DILocalVariable(name: "miniseed1", scope: !14618, file: !3, line: 2150, type: !987)
!14626 = !DILocation(line: 2150, column: 6, scope: !14618)
!14627 = !DILocalVariable(name: "miniseed2", scope: !14618, file: !3, line: 2150, type: !987)
!14628 = !DILocation(line: 2150, column: 17, scope: !14618)
!14629 = !DILocalVariable(name: "miniseed2_reversed", scope: !14618, file: !3, line: 2150, type: !987)
!14630 = !DILocation(line: 2150, column: 28, scope: !14618)
!14631 = !DILocalVariable(name: "miniseed3", scope: !14618, file: !3, line: 2150, type: !987)
!14632 = !DILocation(line: 2150, column: 48, scope: !14618)
!14633 = !DILocalVariable(name: "miniseed3_reversed", scope: !14618, file: !3, line: 2150, type: !987)
!14634 = !DILocation(line: 2150, column: 59, scope: !14618)
!14635 = !DILocalVariable(name: "temp", scope: !14618, file: !3, line: 2151, type: !987)
!14636 = !DILocation(line: 2151, column: 6, scope: !14618)
!14637 = !DILocalVariable(name: "seedset", scope: !14618, file: !3, line: 2151, type: !987)
!14638 = !DILocation(line: 2151, column: 12, scope: !14618)
!14639 = !DILocalVariable(name: "combinedSeed", scope: !14618, file: !3, line: 2151, type: !987)
!14640 = !DILocation(line: 2151, column: 21, scope: !14618)
!14641 = !DILocalVariable(name: "i", scope: !14618, file: !3, line: 2152, type: !32)
!14642 = !DILocation(line: 2152, column: 6, scope: !14618)
!14643 = !DILocation(line: 2157, column: 19, scope: !14618)
!14644 = !DILocation(line: 2157, column: 2, scope: !14618)
!14645 = !DILocation(line: 2158, column: 12, scope: !14618)
!14646 = !DILocation(line: 2159, column: 6, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 2159, column: 6)
!14648 = !DILocation(line: 2159, column: 16, scope: !14647)
!14649 = !DILocation(line: 2159, column: 6, scope: !14618)
!14650 = !DILocation(line: 2160, column: 13, scope: !14647)
!14651 = !DILocation(line: 2160, column: 3, scope: !14647)
!14652 = !DILocation(line: 2162, column: 19, scope: !14618)
!14653 = !DILocation(line: 2162, column: 2, scope: !14618)
!14654 = !DILocation(line: 2163, column: 12, scope: !14618)
!14655 = !DILocation(line: 2164, column: 6, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 2164, column: 6)
!14657 = !DILocation(line: 2164, column: 16, scope: !14656)
!14658 = !DILocation(line: 2164, column: 6, scope: !14618)
!14659 = !DILocation(line: 2165, column: 13, scope: !14656)
!14660 = !DILocation(line: 2165, column: 3, scope: !14656)
!14661 = !DILocation(line: 2167, column: 5, scope: !14618)
!14662 = !DILocation(line: 2167, column: 15, scope: !14618)
!14663 = !DILocation(line: 2167, column: 24, scope: !14618)
!14664 = !DILocation(line: 2168, column: 5, scope: !14618)
!14665 = !DILocation(line: 2168, column: 15, scope: !14618)
!14666 = !DILocation(line: 2167, column: 30, scope: !14618)
!14667 = !DILocation(line: 2169, column: 6, scope: !14618)
!14668 = !DILocation(line: 2169, column: 16, scope: !14618)
!14669 = !DILocation(line: 2169, column: 25, scope: !14618)
!14670 = !DILocation(line: 2168, column: 24, scope: !14618)
!14671 = !DILocation(line: 2166, column: 21, scope: !14618)
!14672 = !DILocation(line: 2171, column: 19, scope: !14618)
!14673 = !DILocation(line: 2171, column: 2, scope: !14618)
!14674 = !DILocation(line: 2172, column: 12, scope: !14618)
!14675 = !DILocation(line: 2173, column: 6, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 2173, column: 6)
!14677 = !DILocation(line: 2173, column: 16, scope: !14676)
!14678 = !DILocation(line: 2173, column: 6, scope: !14618)
!14679 = !DILocation(line: 2174, column: 13, scope: !14676)
!14680 = !DILocation(line: 2174, column: 3, scope: !14676)
!14681 = !DILocation(line: 2176, column: 5, scope: !14618)
!14682 = !DILocation(line: 2176, column: 15, scope: !14618)
!14683 = !DILocation(line: 2176, column: 24, scope: !14618)
!14684 = !DILocation(line: 2177, column: 5, scope: !14618)
!14685 = !DILocation(line: 2177, column: 15, scope: !14618)
!14686 = !DILocation(line: 2176, column: 30, scope: !14618)
!14687 = !DILocation(line: 2178, column: 6, scope: !14618)
!14688 = !DILocation(line: 2178, column: 16, scope: !14618)
!14689 = !DILocation(line: 2178, column: 25, scope: !14618)
!14690 = !DILocation(line: 2177, column: 24, scope: !14618)
!14691 = !DILocation(line: 2175, column: 21, scope: !14618)
!14692 = !DILocation(line: 2180, column: 19, scope: !14618)
!14693 = !DILocation(line: 2180, column: 31, scope: !14618)
!14694 = !DILocation(line: 2180, column: 29, scope: !14618)
!14695 = !DILocation(line: 2180, column: 51, scope: !14618)
!14696 = !DILocation(line: 2181, column: 11, scope: !14618)
!14697 = !DILocation(line: 2181, column: 23, scope: !14618)
!14698 = !DILocation(line: 2181, column: 21, scope: !14618)
!14699 = !DILocation(line: 2180, column: 58, scope: !14618)
!14700 = !DILocation(line: 2180, column: 15, scope: !14618)
!14701 = !DILocation(line: 2184, column: 7, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 2184, column: 6)
!14703 = !DILocation(line: 2184, column: 20, scope: !14702)
!14704 = !DILocation(line: 2184, column: 49, scope: !14702)
!14705 = !DILocation(line: 2184, column: 6, scope: !14618)
!14706 = !DILocation(line: 2185, column: 16, scope: !14702)
!14707 = !DILocation(line: 2185, column: 3, scope: !14702)
!14708 = !DILocation(line: 2186, column: 7, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 2186, column: 6)
!14710 = !DILocation(line: 2186, column: 20, scope: !14709)
!14711 = !DILocation(line: 2186, column: 75, scope: !14709)
!14712 = !DILocation(line: 2186, column: 6, scope: !14618)
!14713 = !DILocation(line: 2187, column: 16, scope: !14709)
!14714 = !DILocation(line: 2187, column: 3, scope: !14709)
!14715 = !DILocation(line: 2190, column: 7, scope: !14618)
!14716 = !DILocation(line: 2191, column: 10, scope: !14618)
!14717 = !DILocation(line: 2191, column: 23, scope: !14618)
!14718 = !DILocation(line: 2191, column: 7, scope: !14618)
!14719 = !DILocation(line: 2192, column: 10, scope: !14618)
!14720 = !DILocation(line: 2192, column: 23, scope: !14618)
!14721 = !DILocation(line: 2192, column: 7, scope: !14618)
!14722 = !DILocation(line: 2193, column: 9, scope: !14618)
!14723 = !DILocation(line: 2193, column: 15, scope: !14618)
!14724 = !DILocation(line: 2193, column: 20, scope: !14618)
!14725 = !DILocation(line: 2193, column: 2, scope: !14618)
!14726 = !DILocation(line: 2196, column: 19, scope: !14618)
!14727 = !DILocation(line: 2196, column: 2, scope: !14618)
!14728 = !DILocation(line: 2197, column: 12, scope: !14618)
!14729 = !DILocation(line: 2197, column: 20, scope: !14618)
!14730 = !DILocation(line: 2197, column: 10, scope: !14618)
!14731 = !DILocation(line: 2198, column: 9, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 2198, column: 2)
!14733 = !DILocation(line: 2198, column: 7, scope: !14732)
!14734 = !DILocation(line: 2198, column: 14, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14732, file: !3, line: 2198, column: 2)
!14736 = !DILocation(line: 2198, column: 16, scope: !14735)
!14737 = !DILocation(line: 2198, column: 2, scope: !14732)
!14738 = !DILocation(line: 2199, column: 37, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 2198, column: 47)
!14740 = !DILocation(line: 2199, column: 39, scope: !14739)
!14741 = !DILocation(line: 2199, column: 34, scope: !14739)
!14742 = !DILocation(line: 2199, column: 8, scope: !14739)
!14743 = !DILocation(line: 2200, column: 24, scope: !14739)
!14744 = !DILocation(line: 2200, column: 11, scope: !14739)
!14745 = !DILocation(line: 2200, column: 33, scope: !14739)
!14746 = !DILocation(line: 2200, column: 34, scope: !14739)
!14747 = !DILocation(line: 2200, column: 38, scope: !14739)
!14748 = !DILocation(line: 2200, column: 8, scope: !14739)
!14749 = !DILocation(line: 2201, column: 26, scope: !14739)
!14750 = !DILocation(line: 2201, column: 13, scope: !14739)
!14751 = !DILocation(line: 2201, column: 35, scope: !14739)
!14752 = !DILocation(line: 2201, column: 36, scope: !14739)
!14753 = !DILocation(line: 2201, column: 40, scope: !14739)
!14754 = !DILocation(line: 2201, column: 49, scope: !14739)
!14755 = !DILocation(line: 2201, column: 8, scope: !14739)
!14756 = !DILocation(line: 2202, column: 10, scope: !14739)
!14757 = !DILocation(line: 2202, column: 16, scope: !14739)
!14758 = !DILocation(line: 2202, column: 21, scope: !14739)
!14759 = !DILocation(line: 2202, column: 3, scope: !14739)
!14760 = !DILocation(line: 2203, column: 2, scope: !14739)
!14761 = !DILocation(line: 2198, column: 43, scope: !14735)
!14762 = !DILocation(line: 2198, column: 2, scope: !14735)
!14763 = distinct !{!14763, !14737, !14764}
!14764 = !DILocation(line: 2203, column: 2, scope: !14732)
!14765 = !DILocation(line: 2204, column: 1, scope: !14618)
!14766 = distinct !DISubprogram(name: "nv_legacybackoff_reseed", scope: !3, file: !3, line: 2098, type: !406, scopeLine: 2099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14767 = !DILocalVariable(name: "dev", arg: 1, scope: !14766, file: !3, line: 2098, type: !290)
!14768 = !DILocation(line: 2098, column: 56, scope: !14766)
!14769 = !DILocalVariable(name: "base", scope: !14766, file: !3, line: 2100, type: !793)
!14770 = !DILocation(line: 2100, column: 14, scope: !14766)
!14771 = !DILocation(line: 2100, column: 32, scope: !14766)
!14772 = !DILocation(line: 2100, column: 21, scope: !14766)
!14773 = !DILocalVariable(name: "reg", scope: !14766, file: !3, line: 2101, type: !987)
!14774 = !DILocation(line: 2101, column: 6, scope: !14766)
!14775 = !DILocalVariable(name: "low", scope: !14766, file: !3, line: 2102, type: !987)
!14776 = !DILocation(line: 2102, column: 6, scope: !14766)
!14777 = !DILocalVariable(name: "tx_status", scope: !14766, file: !3, line: 2103, type: !32)
!14778 = !DILocation(line: 2103, column: 6, scope: !14766)
!14779 = !DILocation(line: 2105, column: 14, scope: !14766)
!14780 = !DILocation(line: 2105, column: 19, scope: !14766)
!14781 = !DILocation(line: 2105, column: 8, scope: !14766)
!14782 = !DILocation(line: 2105, column: 36, scope: !14766)
!14783 = !DILocation(line: 2105, column: 6, scope: !14766)
!14784 = !DILocation(line: 2106, column: 19, scope: !14766)
!14785 = !DILocation(line: 2106, column: 2, scope: !14766)
!14786 = !DILocation(line: 2107, column: 9, scope: !14766)
!14787 = !DILocation(line: 2107, column: 13, scope: !14766)
!14788 = !DILocation(line: 2107, column: 6, scope: !14766)
!14789 = !DILocation(line: 2112, column: 20, scope: !14766)
!14790 = !DILocation(line: 2112, column: 25, scope: !14766)
!14791 = !DILocation(line: 2112, column: 14, scope: !14766)
!14792 = !DILocation(line: 2112, column: 52, scope: !14766)
!14793 = !DILocation(line: 2112, column: 12, scope: !14766)
!14794 = !DILocation(line: 2113, column: 6, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14766, file: !3, line: 2113, column: 6)
!14796 = !DILocation(line: 2113, column: 6, scope: !14766)
!14797 = !DILocation(line: 2114, column: 14, scope: !14795)
!14798 = !DILocation(line: 2114, column: 3, scope: !14795)
!14799 = !DILocation(line: 2115, column: 13, scope: !14766)
!14800 = !DILocation(line: 2115, column: 2, scope: !14766)
!14801 = !DILocation(line: 2116, column: 9, scope: !14766)
!14802 = !DILocation(line: 2116, column: 14, scope: !14766)
!14803 = !DILocation(line: 2116, column: 19, scope: !14766)
!14804 = !DILocation(line: 2116, column: 2, scope: !14766)
!14805 = !DILocation(line: 2117, column: 6, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14766, file: !3, line: 2117, column: 6)
!14807 = !DILocation(line: 2117, column: 6, scope: !14766)
!14808 = !DILocation(line: 2118, column: 15, scope: !14806)
!14809 = !DILocation(line: 2118, column: 3, scope: !14806)
!14810 = !DILocation(line: 2119, column: 14, scope: !14766)
!14811 = !DILocation(line: 2119, column: 2, scope: !14766)
!14812 = !DILocation(line: 2120, column: 1, scope: !14766)
!14813 = distinct !DISubprogram(name: "nv_tx_flip_ownership", scope: !3, file: !3, line: 2588, type: !406, scopeLine: 2589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14814 = !DILocalVariable(name: "dev", arg: 1, scope: !14813, file: !3, line: 2588, type: !290)
!14815 = !DILocation(line: 2588, column: 60, scope: !14813)
!14816 = !DILocalVariable(name: "np", scope: !14813, file: !3, line: 2590, type: !7446)
!14817 = !DILocation(line: 2590, column: 18, scope: !14813)
!14818 = !DILocation(line: 2590, column: 35, scope: !14813)
!14819 = !DILocation(line: 2590, column: 23, scope: !14813)
!14820 = !DILocation(line: 2592, column: 2, scope: !14813)
!14821 = !DILocation(line: 2592, column: 6, scope: !14813)
!14822 = !DILocation(line: 2592, column: 25, scope: !14813)
!14823 = !DILocation(line: 2593, column: 6, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 2593, column: 6)
!14825 = !DILocation(line: 2593, column: 10, scope: !14824)
!14826 = !DILocation(line: 2593, column: 6, scope: !14813)
!14827 = !DILocation(line: 2594, column: 3, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14824, file: !3, line: 2593, column: 27)
!14829 = !DILocation(line: 2594, column: 7, scope: !14828)
!14830 = !DILocation(line: 2594, column: 24, scope: !14828)
!14831 = !DILocation(line: 2594, column: 39, scope: !14828)
!14832 = !DILocation(line: 2594, column: 47, scope: !14828)
!14833 = !DILocation(line: 2596, column: 3, scope: !14828)
!14834 = !DILocation(line: 2596, column: 7, scope: !14828)
!14835 = !DILocation(line: 2596, column: 26, scope: !14828)
!14836 = !DILocation(line: 2598, column: 25, scope: !14828)
!14837 = !DILocation(line: 2598, column: 29, scope: !14828)
!14838 = !DILocation(line: 2598, column: 46, scope: !14828)
!14839 = !DILocation(line: 2598, column: 3, scope: !14828)
!14840 = !DILocation(line: 2598, column: 7, scope: !14828)
!14841 = !DILocation(line: 2598, column: 23, scope: !14828)
!14842 = !DILocation(line: 2599, column: 7, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14828, file: !3, line: 2599, column: 7)
!14844 = !DILocation(line: 2599, column: 11, scope: !14843)
!14845 = !DILocation(line: 2599, column: 30, scope: !14843)
!14846 = !DILocation(line: 2599, column: 34, scope: !14843)
!14847 = !DILocation(line: 2599, column: 27, scope: !14843)
!14848 = !DILocation(line: 2599, column: 7, scope: !14828)
!14849 = !DILocation(line: 2600, column: 4, scope: !14843)
!14850 = !DILocation(line: 2600, column: 8, scope: !14843)
!14851 = !DILocation(line: 2600, column: 24, scope: !14843)
!14852 = !DILocation(line: 2602, column: 29, scope: !14828)
!14853 = !DILocation(line: 2602, column: 33, scope: !14828)
!14854 = !DILocation(line: 2602, column: 28, scope: !14828)
!14855 = !DILocation(line: 2602, column: 58, scope: !14828)
!14856 = !DILocation(line: 2602, column: 47, scope: !14828)
!14857 = !DILocation(line: 2602, column: 63, scope: !14828)
!14858 = !DILocation(line: 2602, column: 3, scope: !14828)
!14859 = !DILocation(line: 2603, column: 2, scope: !14828)
!14860 = !DILocation(line: 2604, column: 1, scope: !14813)
!14861 = distinct !DISubprogram(name: "netdev_completed_queue", scope: !31, file: !31, line: 3504, type: !14862, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14862 = !DISubroutineType(types: !14863)
!14863 = !{null, !290, !7, !7}
!14864 = !DILocalVariable(name: "dev", arg: 1, scope: !14861, file: !31, line: 3504, type: !290)
!14865 = !DILocation(line: 3504, column: 62, scope: !14861)
!14866 = !DILocalVariable(name: "pkts", arg: 2, scope: !14861, file: !31, line: 3505, type: !7)
!14867 = !DILocation(line: 3505, column: 21, scope: !14861)
!14868 = !DILocalVariable(name: "bytes", arg: 3, scope: !14861, file: !31, line: 3505, type: !7)
!14869 = !DILocation(line: 3505, column: 40, scope: !14861)
!14870 = !DILocation(line: 3507, column: 48, scope: !14861)
!14871 = !DILocation(line: 3507, column: 28, scope: !14861)
!14872 = !DILocation(line: 3507, column: 57, scope: !14861)
!14873 = !DILocation(line: 3507, column: 63, scope: !14861)
!14874 = !DILocation(line: 3507, column: 2, scope: !14861)
!14875 = !DILocation(line: 3508, column: 1, scope: !14861)
!14876 = distinct !DISubprogram(name: "netif_wake_queue", scope: !31, file: !31, line: 3309, type: !406, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14877 = !DILocalVariable(name: "dev", arg: 1, scope: !14876, file: !31, line: 3309, type: !290)
!14878 = !DILocation(line: 3309, column: 56, scope: !14876)
!14879 = !DILocation(line: 3311, column: 42, scope: !14876)
!14880 = !DILocation(line: 3311, column: 22, scope: !14876)
!14881 = !DILocation(line: 3311, column: 2, scope: !14876)
!14882 = !DILocation(line: 3312, column: 1, scope: !14876)
!14883 = distinct !DISubprogram(name: "netdev_tx_completed_queue", scope: !31, file: !31, line: 3470, type: !14884, scopeLine: 3472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14884 = !DISubroutineType(types: !14885)
!14885 = !{null, !6438, !7, !7}
!14886 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !14883, file: !31, line: 3470, type: !6438)
!14887 = !DILocation(line: 3470, column: 67, scope: !14883)
!14888 = !DILocalVariable(name: "pkts", arg: 2, scope: !14883, file: !31, line: 3471, type: !7)
!14889 = !DILocation(line: 3471, column: 24, scope: !14883)
!14890 = !DILocalVariable(name: "bytes", arg: 3, scope: !14883, file: !31, line: 3471, type: !7)
!14891 = !DILocation(line: 3471, column: 43, scope: !14883)
!14892 = !DILocation(line: 3474, column: 6, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14883, file: !31, line: 3474, column: 6)
!14894 = !DILocation(line: 3474, column: 6, scope: !14883)
!14895 = !DILocation(line: 3475, column: 3, scope: !14893)
!14896 = !DILocation(line: 3477, column: 17, scope: !14883)
!14897 = !DILocation(line: 3477, column: 28, scope: !14883)
!14898 = !DILocation(line: 3477, column: 33, scope: !14883)
!14899 = !DILocation(line: 3477, column: 2, scope: !14883)
!14900 = !DILocation(line: 3484, column: 2, scope: !14883)
!14901 = !{i32 -2139777847}
!14902 = !DILocation(line: 3486, column: 6, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14883, file: !31, line: 3486, column: 6)
!14904 = !DILocation(line: 3486, column: 6, scope: !14883)
!14905 = !DILocation(line: 3487, column: 3, scope: !14903)
!14906 = !DILocation(line: 3489, column: 52, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14883, file: !31, line: 3489, column: 6)
!14908 = !DILocation(line: 3489, column: 63, scope: !14907)
!14909 = !DILocation(line: 3489, column: 6, scope: !14907)
!14910 = !DILocation(line: 3489, column: 6, scope: !14883)
!14911 = !DILocation(line: 3490, column: 24, scope: !14907)
!14912 = !DILocation(line: 3490, column: 3, scope: !14907)
!14913 = !DILocation(line: 3492, column: 1, scope: !14883)
!14914 = distinct !DISubprogram(name: "dql_avail", scope: !6456, file: !6456, line: 92, type: !14915, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{!32, !14917}
!14917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14918, size: 64)
!14918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6455)
!14919 = !DILocalVariable(name: "dql", arg: 1, scope: !14914, file: !6456, line: 92, type: !14917)
!14920 = !DILocation(line: 92, column: 47, scope: !14914)
!14921 = !DILocation(line: 94, column: 9, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14914, file: !6456, line: 94, column: 9)
!14923 = !DILocation(line: 94, column: 9, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14922, file: !6456, line: 94, column: 9)
!14925 = !DILocation(line: 94, column: 37, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14914, file: !6456, line: 94, column: 37)
!14927 = !DILocation(line: 94, column: 37, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14926, file: !6456, line: 94, column: 37)
!14929 = !DILocation(line: 94, column: 35, scope: !14914)
!14930 = !DILocation(line: 94, column: 2, scope: !14914)
!14931 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !12691, file: !12691, line: 81, type: !14932, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14932 = !DISubroutineType(types: !14933)
!14933 = !{!771, !998, !12694}
!14934 = !DILocalVariable(name: "nr", arg: 1, scope: !14935, file: !12518, line: 160, type: !998)
!14935 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !12518, file: !12518, line: 160, type: !14932, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14936 = !DILocation(line: 160, column: 30, scope: !14935, inlinedAt: !14937)
!14937 = distinct !DILocation(line: 84, column: 9, scope: !14931)
!14938 = !DILocalVariable(name: "addr", arg: 2, scope: !14935, file: !12518, line: 160, type: !12694)
!14939 = !DILocation(line: 160, column: 58, scope: !14935, inlinedAt: !14937)
!14940 = !DILocalVariable(name: "c", scope: !14941, file: !12518, line: 162, type: !771)
!14941 = distinct !DILexicalBlock(scope: !14935, file: !12518, line: 162, column: 9)
!14942 = !DILocation(line: 162, column: 9, scope: !14941, inlinedAt: !14937)
!14943 = !DILocalVariable(name: "v", arg: 1, scope: !14944, file: !12533, line: 99, type: !10325)
!14944 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !12533, file: !12533, line: 99, type: !12534, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14945 = !DILocation(line: 99, column: 79, scope: !14944, inlinedAt: !14946)
!14946 = distinct !DILocation(line: 83, column: 2, scope: !14931)
!14947 = !DILocalVariable(name: "size", arg: 2, scope: !14944, file: !12533, line: 99, type: !1039)
!14948 = !DILocation(line: 99, column: 89, scope: !14944, inlinedAt: !14946)
!14949 = !DILocalVariable(name: "nr", arg: 1, scope: !14931, file: !12691, line: 81, type: !998)
!14950 = !DILocation(line: 81, column: 44, scope: !14931)
!14951 = !DILocalVariable(name: "addr", arg: 2, scope: !14931, file: !12691, line: 81, type: !12694)
!14952 = !DILocation(line: 81, column: 72, scope: !14931)
!14953 = !DILocation(line: 83, column: 31, scope: !14931)
!14954 = !DILocation(line: 83, column: 38, scope: !14931)
!14955 = !DILocation(line: 83, column: 36, scope: !14931)
!14956 = !DILocation(line: 101, column: 20, scope: !14944, inlinedAt: !14946)
!14957 = !DILocation(line: 101, column: 23, scope: !14944, inlinedAt: !14946)
!14958 = !DILocation(line: 101, column: 2, scope: !14944, inlinedAt: !14946)
!14959 = !DILocation(line: 102, column: 2, scope: !14944, inlinedAt: !14946)
!14960 = !DILocation(line: 84, column: 33, scope: !14931)
!14961 = !DILocation(line: 84, column: 37, scope: !14931)
!14962 = !{i32 -2146953050, i32 -2146952954}
!14963 = !DILocation(line: 84, column: 2, scope: !14931)
!14964 = distinct !DISubprogram(name: "nv_link_irq", scope: !3, file: !3, line: 3625, type: !406, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14965 = !DILocalVariable(name: "dev", arg: 1, scope: !14964, file: !3, line: 3625, type: !290)
!14966 = !DILocation(line: 3625, column: 44, scope: !14964)
!14967 = !DILocalVariable(name: "base", scope: !14964, file: !3, line: 3627, type: !793)
!14968 = !DILocation(line: 3627, column: 14, scope: !14964)
!14969 = !DILocation(line: 3627, column: 32, scope: !14964)
!14970 = !DILocation(line: 3627, column: 21, scope: !14964)
!14971 = !DILocalVariable(name: "miistat", scope: !14964, file: !3, line: 3628, type: !987)
!14972 = !DILocation(line: 3628, column: 6, scope: !14964)
!14973 = !DILocation(line: 3630, column: 18, scope: !14964)
!14974 = !DILocation(line: 3630, column: 23, scope: !14964)
!14975 = !DILocation(line: 3630, column: 12, scope: !14964)
!14976 = !DILocation(line: 3630, column: 10, scope: !14964)
!14977 = !DILocation(line: 3631, column: 35, scope: !14964)
!14978 = !DILocation(line: 3631, column: 40, scope: !14964)
!14979 = !DILocation(line: 3631, column: 2, scope: !14964)
!14980 = !DILocation(line: 3633, column: 6, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14964, file: !3, line: 3633, column: 6)
!14982 = !DILocation(line: 3633, column: 14, scope: !14981)
!14983 = !DILocation(line: 3633, column: 6, scope: !14964)
!14984 = !DILocation(line: 3634, column: 17, scope: !14981)
!14985 = !DILocation(line: 3634, column: 3, scope: !14981)
!14986 = !DILocation(line: 3635, column: 1, scope: !14964)
!14987 = distinct !DISubprogram(name: "nv_linkchange", scope: !3, file: !3, line: 3606, type: !406, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14988 = !DILocalVariable(name: "dev", arg: 1, scope: !14987, file: !3, line: 3606, type: !290)
!14989 = !DILocation(line: 3606, column: 46, scope: !14987)
!14990 = !DILocation(line: 3608, column: 26, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14987, file: !3, line: 3608, column: 6)
!14992 = !DILocation(line: 3608, column: 6, scope: !14991)
!14993 = !DILocation(line: 3608, column: 6, scope: !14987)
!14994 = !DILocation(line: 3609, column: 25, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !3, line: 3609, column: 7)
!14996 = distinct !DILexicalBlock(scope: !14991, file: !3, line: 3608, column: 32)
!14997 = !DILocation(line: 3609, column: 8, scope: !14995)
!14998 = !DILocation(line: 3609, column: 7, scope: !14996)
!14999 = !DILocation(line: 3610, column: 21, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14995, file: !3, line: 3609, column: 31)
!15001 = !DILocation(line: 3610, column: 4, scope: !15000)
!15002 = !DILocation(line: 3611, column: 16, scope: !15000)
!15003 = !DILocation(line: 3611, column: 4, scope: !15000)
!15004 = !DILocation(line: 3612, column: 17, scope: !15000)
!15005 = !DILocation(line: 3612, column: 4, scope: !15000)
!15006 = !DILocation(line: 3613, column: 16, scope: !15000)
!15007 = !DILocation(line: 3613, column: 4, scope: !15000)
!15008 = !DILocation(line: 3614, column: 3, scope: !15000)
!15009 = !DILocation(line: 3615, column: 2, scope: !14996)
!15010 = !DILocation(line: 3616, column: 24, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15012, file: !3, line: 3616, column: 7)
!15012 = distinct !DILexicalBlock(scope: !14991, file: !3, line: 3615, column: 9)
!15013 = !DILocation(line: 3616, column: 7, scope: !15011)
!15014 = !DILocation(line: 3616, column: 7, scope: !15012)
!15015 = !DILocation(line: 3617, column: 22, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15011, file: !3, line: 3616, column: 30)
!15017 = !DILocation(line: 3617, column: 4, scope: !15016)
!15018 = !DILocation(line: 3618, column: 16, scope: !15016)
!15019 = !DILocation(line: 3618, column: 4, scope: !15016)
!15020 = !DILocation(line: 3619, column: 17, scope: !15016)
!15021 = !DILocation(line: 3619, column: 4, scope: !15016)
!15022 = !DILocation(line: 3620, column: 15, scope: !15016)
!15023 = !DILocation(line: 3620, column: 4, scope: !15016)
!15024 = !DILocation(line: 3621, column: 3, scope: !15016)
!15025 = !DILocation(line: 3623, column: 1, scope: !14987)
!15026 = distinct !DISubprogram(name: "nv_update_linkspeed", scope: !3, file: !3, line: 3384, type: !402, scopeLine: 3385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15027 = !DILocalVariable(name: "dev", arg: 1, scope: !15026, file: !3, line: 3384, type: !290)
!15028 = !DILocation(line: 3384, column: 51, scope: !15026)
!15029 = !DILocalVariable(name: "np", scope: !15026, file: !3, line: 3386, type: !7446)
!15030 = !DILocation(line: 3386, column: 18, scope: !15026)
!15031 = !DILocation(line: 3386, column: 35, scope: !15026)
!15032 = !DILocation(line: 3386, column: 23, scope: !15026)
!15033 = !DILocalVariable(name: "base", scope: !15026, file: !3, line: 3387, type: !793)
!15034 = !DILocation(line: 3387, column: 14, scope: !15026)
!15035 = !DILocation(line: 3387, column: 32, scope: !15026)
!15036 = !DILocation(line: 3387, column: 21, scope: !15026)
!15037 = !DILocalVariable(name: "adv", scope: !15026, file: !3, line: 3388, type: !32)
!15038 = !DILocation(line: 3388, column: 6, scope: !15026)
!15039 = !DILocalVariable(name: "lpa", scope: !15026, file: !3, line: 3389, type: !32)
!15040 = !DILocation(line: 3389, column: 6, scope: !15026)
!15041 = !DILocalVariable(name: "adv_lpa", scope: !15026, file: !3, line: 3390, type: !32)
!15042 = !DILocation(line: 3390, column: 6, scope: !15026)
!15043 = !DILocalVariable(name: "adv_pause", scope: !15026, file: !3, line: 3390, type: !32)
!15044 = !DILocation(line: 3390, column: 15, scope: !15026)
!15045 = !DILocalVariable(name: "lpa_pause", scope: !15026, file: !3, line: 3390, type: !32)
!15046 = !DILocation(line: 3390, column: 26, scope: !15026)
!15047 = !DILocalVariable(name: "newls", scope: !15026, file: !3, line: 3391, type: !32)
!15048 = !DILocation(line: 3391, column: 6, scope: !15026)
!15049 = !DILocation(line: 3391, column: 14, scope: !15026)
!15050 = !DILocation(line: 3391, column: 18, scope: !15026)
!15051 = !DILocalVariable(name: "newdup", scope: !15026, file: !3, line: 3392, type: !32)
!15052 = !DILocation(line: 3392, column: 6, scope: !15026)
!15053 = !DILocation(line: 3392, column: 15, scope: !15026)
!15054 = !DILocation(line: 3392, column: 19, scope: !15026)
!15055 = !DILocalVariable(name: "mii_status", scope: !15026, file: !3, line: 3393, type: !32)
!15056 = !DILocation(line: 3393, column: 6, scope: !15026)
!15057 = !DILocalVariable(name: "bmcr", scope: !15026, file: !3, line: 3394, type: !987)
!15058 = !DILocation(line: 3394, column: 6, scope: !15026)
!15059 = !DILocalVariable(name: "retval", scope: !15026, file: !3, line: 3395, type: !32)
!15060 = !DILocation(line: 3395, column: 6, scope: !15026)
!15061 = !DILocalVariable(name: "control_1000", scope: !15026, file: !3, line: 3396, type: !987)
!15062 = !DILocation(line: 3396, column: 6, scope: !15026)
!15063 = !DILocalVariable(name: "status_1000", scope: !15026, file: !3, line: 3396, type: !987)
!15064 = !DILocation(line: 3396, column: 20, scope: !15026)
!15065 = !DILocalVariable(name: "phyreg", scope: !15026, file: !3, line: 3396, type: !987)
!15066 = !DILocation(line: 3396, column: 33, scope: !15026)
!15067 = !DILocalVariable(name: "pause_flags", scope: !15026, file: !3, line: 3396, type: !987)
!15068 = !DILocation(line: 3396, column: 41, scope: !15026)
!15069 = !DILocalVariable(name: "txreg", scope: !15026, file: !3, line: 3396, type: !987)
!15070 = !DILocation(line: 3396, column: 54, scope: !15026)
!15071 = !DILocalVariable(name: "txrxFlags", scope: !15026, file: !3, line: 3397, type: !987)
!15072 = !DILocation(line: 3397, column: 6, scope: !15026)
!15073 = !DILocalVariable(name: "phy_exp", scope: !15026, file: !3, line: 3398, type: !987)
!15074 = !DILocation(line: 3398, column: 6, scope: !15026)
!15075 = !DILocation(line: 3403, column: 16, scope: !15026)
!15076 = !DILocation(line: 3403, column: 21, scope: !15026)
!15077 = !DILocation(line: 3403, column: 25, scope: !15026)
!15078 = !DILocation(line: 3403, column: 9, scope: !15026)
!15079 = !DILocation(line: 3403, column: 7, scope: !15026)
!15080 = !DILocation(line: 3404, column: 6, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3404, column: 6)
!15082 = !DILocation(line: 3404, column: 11, scope: !15081)
!15083 = !DILocation(line: 3404, column: 6, scope: !15026)
!15084 = !DILocation(line: 3405, column: 21, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15086, file: !3, line: 3405, column: 7)
!15086 = distinct !DILexicalBlock(scope: !15081, file: !3, line: 3404, column: 28)
!15087 = !DILocation(line: 3405, column: 7, scope: !15085)
!15088 = !DILocation(line: 3405, column: 7, scope: !15086)
!15089 = !DILocation(line: 3406, column: 23, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15085, file: !3, line: 3405, column: 27)
!15091 = !DILocation(line: 3406, column: 4, scope: !15090)
!15092 = !DILocation(line: 3407, column: 26, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 3407, column: 8)
!15094 = !DILocation(line: 3407, column: 9, scope: !15093)
!15095 = !DILocation(line: 3407, column: 8, scope: !15090)
!15096 = !DILocation(line: 3408, column: 22, scope: !15093)
!15097 = !DILocation(line: 3408, column: 5, scope: !15093)
!15098 = !DILocation(line: 3409, column: 3, scope: !15090)
!15099 = !DILocation(line: 3410, column: 3, scope: !15086)
!15100 = !DILocation(line: 3416, column: 9, scope: !15026)
!15101 = !DILocation(line: 3416, column: 14, scope: !15026)
!15102 = !DILocation(line: 3416, column: 18, scope: !15026)
!15103 = !DILocation(line: 3416, column: 2, scope: !15026)
!15104 = !DILocation(line: 3417, column: 22, scope: !15026)
!15105 = !DILocation(line: 3417, column: 27, scope: !15026)
!15106 = !DILocation(line: 3417, column: 31, scope: !15026)
!15107 = !DILocation(line: 3417, column: 15, scope: !15026)
!15108 = !DILocation(line: 3417, column: 13, scope: !15026)
!15109 = !DILocation(line: 3419, column: 8, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3419, column: 6)
!15111 = !DILocation(line: 3419, column: 19, scope: !15110)
!15112 = !DILocation(line: 3419, column: 6, scope: !15026)
!15113 = !DILocation(line: 3420, column: 9, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15110, file: !3, line: 3419, column: 36)
!15115 = !DILocation(line: 3421, column: 10, scope: !15114)
!15116 = !DILocation(line: 3422, column: 10, scope: !15114)
!15117 = !DILocation(line: 3423, column: 3, scope: !15114)
!15118 = !DILocation(line: 3426, column: 6, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3426, column: 6)
!15120 = !DILocation(line: 3426, column: 10, scope: !15119)
!15121 = !DILocation(line: 3426, column: 18, scope: !15119)
!15122 = !DILocation(line: 3426, column: 6, scope: !15026)
!15123 = !DILocation(line: 3427, column: 7, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15125, file: !3, line: 3427, column: 7)
!15125 = distinct !DILexicalBlock(scope: !15119, file: !3, line: 3426, column: 24)
!15126 = !DILocation(line: 3427, column: 11, scope: !15124)
!15127 = !DILocation(line: 3427, column: 22, scope: !15124)
!15128 = !DILocation(line: 3427, column: 7, scope: !15125)
!15129 = !DILocation(line: 3428, column: 10, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 3427, column: 37)
!15131 = !DILocation(line: 3429, column: 11, scope: !15130)
!15132 = !DILocation(line: 3430, column: 3, scope: !15130)
!15133 = !DILocation(line: 3430, column: 14, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 3430, column: 14)
!15135 = !DILocation(line: 3430, column: 18, scope: !15134)
!15136 = !DILocation(line: 3430, column: 29, scope: !15134)
!15137 = !DILocation(line: 3430, column: 14, scope: !15124)
!15138 = !DILocation(line: 3431, column: 10, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 3430, column: 44)
!15140 = !DILocation(line: 3432, column: 11, scope: !15139)
!15141 = !DILocation(line: 3433, column: 3, scope: !15139)
!15142 = !DILocation(line: 3433, column: 14, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 3433, column: 14)
!15144 = !DILocation(line: 3433, column: 18, scope: !15143)
!15145 = !DILocation(line: 3433, column: 29, scope: !15143)
!15146 = !DILocation(line: 3433, column: 14, scope: !15134)
!15147 = !DILocation(line: 3434, column: 10, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15143, file: !3, line: 3433, column: 43)
!15149 = !DILocation(line: 3435, column: 11, scope: !15148)
!15150 = !DILocation(line: 3436, column: 3, scope: !15148)
!15151 = !DILocation(line: 3437, column: 10, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15143, file: !3, line: 3436, column: 10)
!15153 = !DILocation(line: 3438, column: 11, scope: !15152)
!15154 = !DILocation(line: 3440, column: 10, scope: !15125)
!15155 = !DILocation(line: 3441, column: 3, scope: !15125)
!15156 = !DILocation(line: 3444, column: 8, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3444, column: 6)
!15158 = !DILocation(line: 3444, column: 19, scope: !15157)
!15159 = !DILocation(line: 3444, column: 6, scope: !15026)
!15160 = !DILocation(line: 3446, column: 9, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15157, file: !3, line: 3444, column: 41)
!15162 = !DILocation(line: 3447, column: 10, scope: !15161)
!15163 = !DILocation(line: 3448, column: 10, scope: !15161)
!15164 = !DILocation(line: 3449, column: 3, scope: !15161)
!15165 = !DILocation(line: 3452, column: 15, scope: !15026)
!15166 = !DILocation(line: 3452, column: 20, scope: !15026)
!15167 = !DILocation(line: 3452, column: 24, scope: !15026)
!15168 = !DILocation(line: 3452, column: 8, scope: !15026)
!15169 = !DILocation(line: 3452, column: 6, scope: !15026)
!15170 = !DILocation(line: 3453, column: 15, scope: !15026)
!15171 = !DILocation(line: 3453, column: 20, scope: !15026)
!15172 = !DILocation(line: 3453, column: 24, scope: !15026)
!15173 = !DILocation(line: 3453, column: 8, scope: !15026)
!15174 = !DILocation(line: 3453, column: 6, scope: !15026)
!15175 = !DILocation(line: 3455, column: 9, scope: !15026)
!15176 = !DILocation(line: 3456, column: 6, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3456, column: 6)
!15178 = !DILocation(line: 3456, column: 10, scope: !15177)
!15179 = !DILocation(line: 3456, column: 18, scope: !15177)
!15180 = !DILocation(line: 3456, column: 6, scope: !15026)
!15181 = !DILocation(line: 3457, column: 25, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15177, file: !3, line: 3456, column: 34)
!15183 = !DILocation(line: 3457, column: 30, scope: !15182)
!15184 = !DILocation(line: 3457, column: 34, scope: !15182)
!15185 = !DILocation(line: 3457, column: 18, scope: !15182)
!15186 = !DILocation(line: 3457, column: 16, scope: !15182)
!15187 = !DILocation(line: 3458, column: 24, scope: !15182)
!15188 = !DILocation(line: 3458, column: 29, scope: !15182)
!15189 = !DILocation(line: 3458, column: 33, scope: !15182)
!15190 = !DILocation(line: 3458, column: 17, scope: !15182)
!15191 = !DILocation(line: 3458, column: 15, scope: !15182)
!15192 = !DILocation(line: 3460, column: 8, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15182, file: !3, line: 3460, column: 7)
!15194 = !DILocation(line: 3460, column: 21, scope: !15193)
!15195 = !DILocation(line: 3460, column: 43, scope: !15193)
!15196 = !DILocation(line: 3461, column: 5, scope: !15193)
!15197 = !DILocation(line: 3461, column: 17, scope: !15193)
!15198 = !DILocation(line: 3460, column: 7, scope: !15182)
!15199 = !DILocation(line: 3462, column: 10, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15193, file: !3, line: 3461, column: 34)
!15201 = !DILocation(line: 3463, column: 11, scope: !15200)
!15202 = !DILocation(line: 3464, column: 4, scope: !15200)
!15203 = !DILocation(line: 3466, column: 2, scope: !15182)
!15204 = !DILocation(line: 3469, column: 12, scope: !15026)
!15205 = !DILocation(line: 3469, column: 18, scope: !15026)
!15206 = !DILocation(line: 3469, column: 16, scope: !15026)
!15207 = !DILocation(line: 3469, column: 10, scope: !15026)
!15208 = !DILocation(line: 3470, column: 6, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3470, column: 6)
!15210 = !DILocation(line: 3470, column: 14, scope: !15209)
!15211 = !DILocation(line: 3470, column: 6, scope: !15026)
!15212 = !DILocation(line: 3471, column: 9, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15209, file: !3, line: 3470, column: 29)
!15214 = !DILocation(line: 3472, column: 10, scope: !15213)
!15215 = !DILocation(line: 3473, column: 2, scope: !15213)
!15216 = !DILocation(line: 3473, column: 13, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15209, file: !3, line: 3473, column: 13)
!15218 = !DILocation(line: 3473, column: 21, scope: !15217)
!15219 = !DILocation(line: 3473, column: 13, scope: !15209)
!15220 = !DILocation(line: 3474, column: 9, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 3473, column: 36)
!15222 = !DILocation(line: 3475, column: 10, scope: !15221)
!15223 = !DILocation(line: 3476, column: 2, scope: !15221)
!15224 = !DILocation(line: 3476, column: 13, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 3476, column: 13)
!15226 = !DILocation(line: 3476, column: 21, scope: !15225)
!15227 = !DILocation(line: 3476, column: 13, scope: !15217)
!15228 = !DILocation(line: 3477, column: 9, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15225, file: !3, line: 3476, column: 35)
!15230 = !DILocation(line: 3478, column: 10, scope: !15229)
!15231 = !DILocation(line: 3479, column: 2, scope: !15229)
!15232 = !DILocation(line: 3479, column: 13, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15225, file: !3, line: 3479, column: 13)
!15234 = !DILocation(line: 3479, column: 21, scope: !15233)
!15235 = !DILocation(line: 3479, column: 13, scope: !15225)
!15236 = !DILocation(line: 3480, column: 9, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 3479, column: 35)
!15238 = !DILocation(line: 3481, column: 10, scope: !15237)
!15239 = !DILocation(line: 3482, column: 2, scope: !15237)
!15240 = !DILocation(line: 3483, column: 9, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 3482, column: 9)
!15242 = !DILocation(line: 3484, column: 10, scope: !15241)
!15243 = !DILocation(line: 3470, column: 16, scope: !15209)
!15244 = !DILabel(scope: !15026, name: "set_speed", file: !3, line: 3487)
!15245 = !DILocation(line: 3487, column: 1, scope: !15026)
!15246 = !DILocation(line: 3488, column: 6, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3488, column: 6)
!15248 = !DILocation(line: 3488, column: 10, scope: !15247)
!15249 = !DILocation(line: 3488, column: 20, scope: !15247)
!15250 = !DILocation(line: 3488, column: 17, scope: !15247)
!15251 = !DILocation(line: 3488, column: 27, scope: !15247)
!15252 = !DILocation(line: 3488, column: 30, scope: !15247)
!15253 = !DILocation(line: 3488, column: 34, scope: !15247)
!15254 = !DILocation(line: 3488, column: 47, scope: !15247)
!15255 = !DILocation(line: 3488, column: 44, scope: !15247)
!15256 = !DILocation(line: 3488, column: 6, scope: !15026)
!15257 = !DILocation(line: 3489, column: 10, scope: !15247)
!15258 = !DILocation(line: 3489, column: 3, scope: !15247)
!15259 = !DILocation(line: 3491, column: 15, scope: !15026)
!15260 = !DILocation(line: 3491, column: 2, scope: !15026)
!15261 = !DILocation(line: 3491, column: 6, scope: !15026)
!15262 = !DILocation(line: 3491, column: 13, scope: !15026)
!15263 = !DILocation(line: 3492, column: 18, scope: !15026)
!15264 = !DILocation(line: 3492, column: 2, scope: !15026)
!15265 = !DILocation(line: 3492, column: 6, scope: !15026)
!15266 = !DILocation(line: 3492, column: 16, scope: !15026)
!15267 = !DILocation(line: 3495, column: 12, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3495, column: 6)
!15269 = !DILocation(line: 3495, column: 17, scope: !15268)
!15270 = !DILocation(line: 3495, column: 6, scope: !15268)
!15271 = !DILocation(line: 3495, column: 44, scope: !15268)
!15272 = !DILocation(line: 3495, column: 6, scope: !15026)
!15273 = !DILocation(line: 3496, column: 13, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15268, file: !3, line: 3495, column: 67)
!15275 = !DILocation(line: 3497, column: 14, scope: !15274)
!15276 = !DILocation(line: 3497, column: 3, scope: !15274)
!15277 = !DILocation(line: 3498, column: 2, scope: !15274)
!15278 = !DILocation(line: 3499, column: 12, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3499, column: 6)
!15280 = !DILocation(line: 3499, column: 17, scope: !15279)
!15281 = !DILocation(line: 3499, column: 6, scope: !15279)
!15282 = !DILocation(line: 3499, column: 41, scope: !15279)
!15283 = !DILocation(line: 3499, column: 6, scope: !15026)
!15284 = !DILocation(line: 3500, column: 13, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15279, file: !3, line: 3499, column: 63)
!15286 = !DILocation(line: 3501, column: 14, scope: !15285)
!15287 = !DILocation(line: 3501, column: 3, scope: !15285)
!15288 = !DILocation(line: 3502, column: 2, scope: !15285)
!15289 = !DILocation(line: 3504, column: 6, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3504, column: 6)
!15291 = !DILocation(line: 3504, column: 10, scope: !15290)
!15292 = !DILocation(line: 3504, column: 18, scope: !15290)
!15293 = !DILocation(line: 3504, column: 6, scope: !15026)
!15294 = !DILocation(line: 3505, column: 18, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15290, file: !3, line: 3504, column: 34)
!15296 = !DILocation(line: 3505, column: 23, scope: !15295)
!15297 = !DILocation(line: 3505, column: 12, scope: !15295)
!15298 = !DILocation(line: 3505, column: 10, scope: !15295)
!15299 = !DILocation(line: 3506, column: 10, scope: !15295)
!15300 = !DILocation(line: 3507, column: 9, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 3507, column: 7)
!15302 = !DILocation(line: 3507, column: 13, scope: !15301)
!15303 = !DILocation(line: 3507, column: 23, scope: !15301)
!15304 = !DILocation(line: 3507, column: 32, scope: !15301)
!15305 = !DILocation(line: 3507, column: 55, scope: !15301)
!15306 = !DILocation(line: 3508, column: 9, scope: !15301)
!15307 = !DILocation(line: 3508, column: 13, scope: !15301)
!15308 = !DILocation(line: 3508, column: 23, scope: !15301)
!15309 = !DILocation(line: 3508, column: 32, scope: !15301)
!15310 = !DILocation(line: 3507, column: 7, scope: !15295)
!15311 = !DILocation(line: 3509, column: 11, scope: !15301)
!15312 = !DILocation(line: 3509, column: 4, scope: !15301)
!15313 = !DILocation(line: 3510, column: 13, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15301, file: !3, line: 3510, column: 12)
!15315 = !DILocation(line: 3510, column: 17, scope: !15314)
!15316 = !DILocation(line: 3510, column: 27, scope: !15314)
!15317 = !DILocation(line: 3510, column: 36, scope: !15314)
!15318 = !DILocation(line: 3510, column: 12, scope: !15301)
!15319 = !DILocation(line: 3511, column: 11, scope: !15314)
!15320 = !DILocation(line: 3511, column: 4, scope: !15314)
!15321 = !DILocation(line: 3512, column: 10, scope: !15295)
!15322 = !DILocation(line: 3512, column: 18, scope: !15295)
!15323 = !DILocation(line: 3512, column: 23, scope: !15295)
!15324 = !DILocation(line: 3512, column: 3, scope: !15295)
!15325 = !DILocation(line: 3513, column: 2, scope: !15295)
!15326 = !DILocation(line: 3515, column: 17, scope: !15026)
!15327 = !DILocation(line: 3515, column: 22, scope: !15026)
!15328 = !DILocation(line: 3515, column: 11, scope: !15026)
!15329 = !DILocation(line: 3515, column: 9, scope: !15026)
!15330 = !DILocation(line: 3516, column: 9, scope: !15026)
!15331 = !DILocation(line: 3517, column: 6, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3517, column: 6)
!15333 = !DILocation(line: 3517, column: 10, scope: !15332)
!15334 = !DILocation(line: 3517, column: 17, scope: !15332)
!15335 = !DILocation(line: 3517, column: 6, scope: !15026)
!15336 = !DILocation(line: 3518, column: 10, scope: !15332)
!15337 = !DILocation(line: 3518, column: 3, scope: !15332)
!15338 = !DILocation(line: 3519, column: 7, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3519, column: 6)
!15340 = !DILocation(line: 3519, column: 11, scope: !15339)
!15341 = !DILocation(line: 3519, column: 21, scope: !15339)
!15342 = !DILocation(line: 3519, column: 45, scope: !15339)
!15343 = !DILocation(line: 3519, column: 6, scope: !15026)
!15344 = !DILocation(line: 3520, column: 10, scope: !15339)
!15345 = !DILocation(line: 3520, column: 3, scope: !15339)
!15346 = !DILocation(line: 3521, column: 12, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15339, file: !3, line: 3521, column: 11)
!15348 = !DILocation(line: 3521, column: 16, scope: !15347)
!15349 = !DILocation(line: 3521, column: 26, scope: !15347)
!15350 = !DILocation(line: 3521, column: 50, scope: !15347)
!15351 = !DILocation(line: 3521, column: 11, scope: !15339)
!15352 = !DILocation(line: 3522, column: 10, scope: !15347)
!15353 = !DILocation(line: 3522, column: 3, scope: !15347)
!15354 = !DILocation(line: 3523, column: 9, scope: !15026)
!15355 = !DILocation(line: 3523, column: 17, scope: !15026)
!15356 = !DILocation(line: 3523, column: 22, scope: !15026)
!15357 = !DILocation(line: 3523, column: 2, scope: !15026)
!15358 = !DILocation(line: 3525, column: 19, scope: !15026)
!15359 = !DILocation(line: 3525, column: 24, scope: !15026)
!15360 = !DILocation(line: 3525, column: 28, scope: !15026)
!15361 = !DILocation(line: 3525, column: 12, scope: !15026)
!15362 = !DILocation(line: 3525, column: 62, scope: !15026)
!15363 = !DILocation(line: 3525, column: 10, scope: !15026)
!15364 = !DILocation(line: 3526, column: 6, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3526, column: 6)
!15366 = !DILocation(line: 3526, column: 13, scope: !15365)
!15367 = !DILocation(line: 3526, column: 6, scope: !15026)
!15368 = !DILocation(line: 3527, column: 8, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15370, file: !3, line: 3527, column: 7)
!15370 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 3526, column: 26)
!15371 = !DILocation(line: 3527, column: 12, scope: !15369)
!15372 = !DILocation(line: 3527, column: 22, scope: !15369)
!15373 = !DILocation(line: 3527, column: 46, scope: !15369)
!15374 = !DILocation(line: 3527, column: 7, scope: !15370)
!15375 = !DILocation(line: 3528, column: 10, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15369, file: !3, line: 3527, column: 71)
!15377 = !DILocation(line: 3529, column: 3, scope: !15376)
!15378 = !DILocation(line: 3530, column: 9, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15380, file: !3, line: 3530, column: 8)
!15380 = distinct !DILexicalBlock(scope: !15369, file: !3, line: 3529, column: 10)
!15381 = !DILocation(line: 3530, column: 17, scope: !15379)
!15382 = !DILocation(line: 3530, column: 21, scope: !15379)
!15383 = !DILocation(line: 3530, column: 25, scope: !15379)
!15384 = !DILocation(line: 3530, column: 32, scope: !15379)
!15385 = !DILocation(line: 3530, column: 36, scope: !15379)
!15386 = !DILocation(line: 3530, column: 40, scope: !15379)
!15387 = !DILocation(line: 3530, column: 52, scope: !15379)
!15388 = !DILocation(line: 3530, column: 8, scope: !15380)
!15389 = !DILocation(line: 3531, column: 10, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15391, file: !3, line: 3531, column: 9)
!15391 = distinct !DILexicalBlock(scope: !15379, file: !3, line: 3530, column: 78)
!15392 = !DILocation(line: 3531, column: 14, scope: !15390)
!15393 = !DILocation(line: 3531, column: 24, scope: !15390)
!15394 = !DILocation(line: 3531, column: 48, scope: !15390)
!15395 = !DILocation(line: 3531, column: 9, scope: !15391)
!15396 = !DILocation(line: 3532, column: 12, scope: !15390)
!15397 = !DILocation(line: 3532, column: 6, scope: !15390)
!15398 = !DILocation(line: 3534, column: 12, scope: !15390)
!15399 = !DILocation(line: 3535, column: 4, scope: !15391)
!15400 = !DILocation(line: 3536, column: 11, scope: !15401)
!15401 = distinct !DILexicalBlock(scope: !15379, file: !3, line: 3535, column: 11)
!15402 = !DILocation(line: 3539, column: 2, scope: !15370)
!15403 = !DILocation(line: 3540, column: 8, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15405, file: !3, line: 3540, column: 7)
!15405 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 3539, column: 9)
!15406 = !DILocation(line: 3540, column: 16, scope: !15404)
!15407 = !DILocation(line: 3540, column: 20, scope: !15404)
!15408 = !DILocation(line: 3540, column: 24, scope: !15404)
!15409 = !DILocation(line: 3540, column: 31, scope: !15404)
!15410 = !DILocation(line: 3540, column: 35, scope: !15404)
!15411 = !DILocation(line: 3540, column: 39, scope: !15404)
!15412 = !DILocation(line: 3540, column: 51, scope: !15404)
!15413 = !DILocation(line: 3540, column: 7, scope: !15405)
!15414 = !DILocation(line: 3541, column: 10, scope: !15404)
!15415 = !DILocation(line: 3541, column: 4, scope: !15404)
!15416 = !DILocation(line: 3543, column: 10, scope: !15404)
!15417 = !DILocation(line: 3545, column: 9, scope: !15026)
!15418 = !DILocation(line: 3545, column: 16, scope: !15026)
!15419 = !DILocation(line: 3545, column: 21, scope: !15026)
!15420 = !DILocation(line: 3545, column: 2, scope: !15026)
!15421 = !DILocation(line: 3547, column: 6, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3547, column: 6)
!15423 = !DILocation(line: 3547, column: 10, scope: !15422)
!15424 = !DILocation(line: 3547, column: 19, scope: !15422)
!15425 = !DILocation(line: 3547, column: 6, scope: !15026)
!15426 = !DILocation(line: 3548, column: 9, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15422, file: !3, line: 3547, column: 34)
!15428 = !DILocation(line: 3549, column: 2, scope: !15427)
!15429 = !DILocation(line: 3550, column: 8, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15431, file: !3, line: 3550, column: 7)
!15431 = distinct !DILexicalBlock(scope: !15422, file: !3, line: 3549, column: 9)
!15432 = !DILocation(line: 3550, column: 12, scope: !15430)
!15433 = !DILocation(line: 3550, column: 22, scope: !15430)
!15434 = !DILocation(line: 3550, column: 46, scope: !15430)
!15435 = !DILocation(line: 3550, column: 7, scope: !15431)
!15436 = !DILocation(line: 3551, column: 10, scope: !15430)
!15437 = !DILocation(line: 3551, column: 4, scope: !15430)
!15438 = !DILocation(line: 3553, column: 10, scope: !15430)
!15439 = !DILocation(line: 3555, column: 9, scope: !15026)
!15440 = !DILocation(line: 3555, column: 16, scope: !15026)
!15441 = !DILocation(line: 3555, column: 21, scope: !15026)
!15442 = !DILocation(line: 3555, column: 2, scope: !15026)
!15443 = !DILocation(line: 3557, column: 30, scope: !15026)
!15444 = !DILocation(line: 3557, column: 34, scope: !15026)
!15445 = !DILocation(line: 3557, column: 27, scope: !15026)
!15446 = !DILocation(line: 3558, column: 3, scope: !15026)
!15447 = !DILocation(line: 3558, column: 8, scope: !15026)
!15448 = !DILocation(line: 3557, column: 2, scope: !15026)
!15449 = !DILocation(line: 3559, column: 11, scope: !15026)
!15450 = !DILocation(line: 3559, column: 2, scope: !15026)
!15451 = !DILocation(line: 3560, column: 9, scope: !15026)
!15452 = !DILocation(line: 3560, column: 13, scope: !15026)
!15453 = !DILocation(line: 3560, column: 24, scope: !15026)
!15454 = !DILocation(line: 3560, column: 29, scope: !15026)
!15455 = !DILocation(line: 3560, column: 2, scope: !15026)
!15456 = !DILocation(line: 3561, column: 11, scope: !15026)
!15457 = !DILocation(line: 3561, column: 2, scope: !15026)
!15458 = !DILocation(line: 3563, column: 14, scope: !15026)
!15459 = !DILocation(line: 3565, column: 20, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3565, column: 6)
!15461 = !DILocation(line: 3565, column: 6, scope: !15460)
!15462 = !DILocation(line: 3565, column: 25, scope: !15460)
!15463 = !DILocation(line: 3565, column: 29, scope: !15460)
!15464 = !DILocation(line: 3565, column: 33, scope: !15460)
!15465 = !DILocation(line: 3565, column: 40, scope: !15460)
!15466 = !DILocation(line: 3565, column: 6, scope: !15026)
!15467 = !DILocation(line: 3566, column: 7, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15469, file: !3, line: 3566, column: 7)
!15469 = distinct !DILexicalBlock(scope: !15460, file: !3, line: 3565, column: 47)
!15470 = !DILocation(line: 3566, column: 11, scope: !15468)
!15471 = !DILocation(line: 3566, column: 19, scope: !15468)
!15472 = !DILocation(line: 3566, column: 22, scope: !15468)
!15473 = !DILocation(line: 3566, column: 26, scope: !15468)
!15474 = !DILocation(line: 3566, column: 38, scope: !15468)
!15475 = !DILocation(line: 3566, column: 7, scope: !15469)
!15476 = !DILocation(line: 3567, column: 16, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15468, file: !3, line: 3566, column: 63)
!15478 = !DILocation(line: 3567, column: 20, scope: !15477)
!15479 = !DILocation(line: 3567, column: 14, scope: !15477)
!15480 = !DILocation(line: 3568, column: 16, scope: !15477)
!15481 = !DILocation(line: 3568, column: 20, scope: !15477)
!15482 = !DILocation(line: 3568, column: 14, scope: !15477)
!15483 = !DILocation(line: 3570, column: 12, scope: !15477)
!15484 = !DILocation(line: 3570, column: 4, scope: !15477)
!15485 = !DILocation(line: 3572, column: 9, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !3, line: 3572, column: 9)
!15487 = distinct !DILexicalBlock(scope: !15477, file: !3, line: 3570, column: 23)
!15488 = !DILocation(line: 3572, column: 19, scope: !15486)
!15489 = !DILocation(line: 3572, column: 9, scope: !15487)
!15490 = !DILocation(line: 3573, column: 18, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15486, file: !3, line: 3572, column: 36)
!15492 = !DILocation(line: 3574, column: 10, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15491, file: !3, line: 3574, column: 10)
!15494 = !DILocation(line: 3574, column: 14, scope: !15493)
!15495 = !DILocation(line: 3574, column: 26, scope: !15493)
!15496 = !DILocation(line: 3574, column: 10, scope: !15491)
!15497 = !DILocation(line: 3575, column: 19, scope: !15493)
!15498 = !DILocation(line: 3575, column: 7, scope: !15493)
!15499 = !DILocation(line: 3576, column: 5, scope: !15491)
!15500 = !DILocation(line: 3577, column: 5, scope: !15487)
!15501 = !DILocation(line: 3579, column: 9, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15487, file: !3, line: 3579, column: 9)
!15503 = !DILocation(line: 3579, column: 19, scope: !15502)
!15504 = !DILocation(line: 3579, column: 9, scope: !15487)
!15505 = !DILocation(line: 3580, column: 18, scope: !15502)
!15506 = !DILocation(line: 3580, column: 6, scope: !15502)
!15507 = !DILocation(line: 3581, column: 5, scope: !15487)
!15508 = !DILocation(line: 3583, column: 9, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15487, file: !3, line: 3583, column: 9)
!15510 = !DILocation(line: 3583, column: 19, scope: !15509)
!15511 = !DILocation(line: 3583, column: 9, scope: !15487)
!15512 = !DILocation(line: 3584, column: 18, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15509, file: !3, line: 3583, column: 36)
!15514 = !DILocation(line: 3585, column: 10, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15513, file: !3, line: 3585, column: 10)
!15516 = !DILocation(line: 3585, column: 14, scope: !15515)
!15517 = !DILocation(line: 3585, column: 26, scope: !15515)
!15518 = !DILocation(line: 3585, column: 10, scope: !15513)
!15519 = !DILocation(line: 3586, column: 19, scope: !15515)
!15520 = !DILocation(line: 3586, column: 7, scope: !15515)
!15521 = !DILocation(line: 3587, column: 5, scope: !15513)
!15522 = !DILocation(line: 3588, column: 9, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15487, file: !3, line: 3588, column: 9)
!15524 = !DILocation(line: 3588, column: 19, scope: !15523)
!15525 = !DILocation(line: 3588, column: 9, scope: !15487)
!15526 = !DILocation(line: 3589, column: 18, scope: !15523)
!15527 = !DILocation(line: 3589, column: 6, scope: !15523)
!15528 = !DILocation(line: 3590, column: 5, scope: !15487)
!15529 = !DILocation(line: 3592, column: 3, scope: !15477)
!15530 = !DILocation(line: 3593, column: 18, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15468, file: !3, line: 3592, column: 10)
!15532 = !DILocation(line: 3593, column: 22, scope: !15531)
!15533 = !DILocation(line: 3593, column: 16, scope: !15531)
!15534 = !DILocation(line: 3595, column: 2, scope: !15469)
!15535 = !DILocation(line: 3596, column: 18, scope: !15026)
!15536 = !DILocation(line: 3596, column: 23, scope: !15026)
!15537 = !DILocation(line: 3596, column: 2, scope: !15026)
!15538 = !DILocation(line: 3598, column: 6, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3598, column: 6)
!15540 = !DILocation(line: 3598, column: 16, scope: !15539)
!15541 = !DILocation(line: 3598, column: 6, scope: !15026)
!15542 = !DILocation(line: 3599, column: 15, scope: !15539)
!15543 = !DILocation(line: 3599, column: 3, scope: !15539)
!15544 = !DILocation(line: 3600, column: 6, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3600, column: 6)
!15546 = !DILocation(line: 3600, column: 16, scope: !15545)
!15547 = !DILocation(line: 3600, column: 6, scope: !15026)
!15548 = !DILocation(line: 3601, column: 15, scope: !15545)
!15549 = !DILocation(line: 3601, column: 3, scope: !15545)
!15550 = !DILocation(line: 3603, column: 9, scope: !15026)
!15551 = !DILocation(line: 3603, column: 2, scope: !15026)
!15552 = !DILocation(line: 3604, column: 1, scope: !15026)
!15553 = distinct !DISubprogram(name: "netif_carrier_ok", scope: !31, file: !31, line: 3976, type: !11366, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15554 = !DILocalVariable(name: "dev", arg: 1, scope: !15553, file: !31, line: 3976, type: !773)
!15555 = !DILocation(line: 3976, column: 62, scope: !15553)
!15556 = !DILocation(line: 3978, column: 44, scope: !15553)
!15557 = !DILocation(line: 3978, column: 49, scope: !15553)
!15558 = !DILocation(line: 3978, column: 10, scope: !15553)
!15559 = !DILocation(line: 3978, column: 9, scope: !15553)
!15560 = !DILocation(line: 3978, column: 2, scope: !15553)
!15561 = distinct !DISubprogram(name: "nv_txrx_gate", scope: !3, file: !3, line: 1053, type: !15562, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15562 = !DISubroutineType(types: !15563)
!15563 = !{null, !290, !771}
!15564 = !DILocalVariable(name: "dev", arg: 1, scope: !15561, file: !3, line: 1053, type: !290)
!15565 = !DILocation(line: 1053, column: 45, scope: !15561)
!15566 = !DILocalVariable(name: "gate", arg: 2, scope: !15561, file: !3, line: 1053, type: !771)
!15567 = !DILocation(line: 1053, column: 55, scope: !15561)
!15568 = !DILocalVariable(name: "np", scope: !15561, file: !3, line: 1055, type: !7446)
!15569 = !DILocation(line: 1055, column: 18, scope: !15561)
!15570 = !DILocation(line: 1055, column: 34, scope: !15561)
!15571 = !DILocation(line: 1055, column: 23, scope: !15561)
!15572 = !DILocalVariable(name: "base", scope: !15561, file: !3, line: 1056, type: !793)
!15573 = !DILocation(line: 1056, column: 14, scope: !15561)
!15574 = !DILocation(line: 1056, column: 32, scope: !15561)
!15575 = !DILocation(line: 1056, column: 21, scope: !15561)
!15576 = !DILocalVariable(name: "powerstate", scope: !15561, file: !3, line: 1057, type: !987)
!15577 = !DILocation(line: 1057, column: 6, scope: !15561)
!15578 = !DILocation(line: 1059, column: 7, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15561, file: !3, line: 1059, column: 6)
!15580 = !DILocation(line: 1059, column: 11, scope: !15579)
!15581 = !DILocation(line: 1059, column: 22, scope: !15579)
!15582 = !DILocation(line: 1060, column: 7, scope: !15579)
!15583 = !DILocation(line: 1060, column: 11, scope: !15579)
!15584 = !DILocation(line: 1060, column: 23, scope: !15579)
!15585 = !DILocation(line: 1059, column: 6, scope: !15561)
!15586 = !DILocation(line: 1061, column: 22, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15579, file: !3, line: 1060, column: 47)
!15588 = !DILocation(line: 1061, column: 27, scope: !15587)
!15589 = !DILocation(line: 1061, column: 16, scope: !15587)
!15590 = !DILocation(line: 1061, column: 14, scope: !15587)
!15591 = !DILocation(line: 1062, column: 7, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 1062, column: 7)
!15593 = !DILocation(line: 1062, column: 7, scope: !15587)
!15594 = !DILocation(line: 1063, column: 15, scope: !15592)
!15595 = !DILocation(line: 1063, column: 4, scope: !15592)
!15596 = !DILocation(line: 1065, column: 15, scope: !15592)
!15597 = !DILocation(line: 1066, column: 10, scope: !15587)
!15598 = !DILocation(line: 1066, column: 22, scope: !15587)
!15599 = !DILocation(line: 1066, column: 27, scope: !15587)
!15600 = !DILocation(line: 1066, column: 3, scope: !15587)
!15601 = !DILocation(line: 1067, column: 2, scope: !15587)
!15602 = !DILocation(line: 1068, column: 1, scope: !15561)
!15603 = distinct !DISubprogram(name: "nv_force_linkspeed", scope: !3, file: !3, line: 3308, type: !15604, scopeLine: 3309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15604 = !DISubroutineType(types: !15605)
!15605 = !{null, !290, !32, !32}
!15606 = !DILocalVariable(name: "dev", arg: 1, scope: !15603, file: !3, line: 3308, type: !290)
!15607 = !DILocation(line: 3308, column: 51, scope: !15603)
!15608 = !DILocalVariable(name: "speed", arg: 2, scope: !15603, file: !3, line: 3308, type: !32)
!15609 = !DILocation(line: 3308, column: 60, scope: !15603)
!15610 = !DILocalVariable(name: "duplex", arg: 3, scope: !15603, file: !3, line: 3308, type: !32)
!15611 = !DILocation(line: 3308, column: 71, scope: !15603)
!15612 = !DILocalVariable(name: "np", scope: !15603, file: !3, line: 3310, type: !7446)
!15613 = !DILocation(line: 3310, column: 18, scope: !15603)
!15614 = !DILocation(line: 3310, column: 35, scope: !15603)
!15615 = !DILocation(line: 3310, column: 23, scope: !15603)
!15616 = !DILocalVariable(name: "base", scope: !15603, file: !3, line: 3311, type: !793)
!15617 = !DILocation(line: 3311, column: 14, scope: !15603)
!15618 = !DILocation(line: 3311, column: 32, scope: !15603)
!15619 = !DILocation(line: 3311, column: 21, scope: !15603)
!15620 = !DILocalVariable(name: "phyreg", scope: !15603, file: !3, line: 3312, type: !987)
!15621 = !DILocation(line: 3312, column: 6, scope: !15603)
!15622 = !DILocalVariable(name: "txreg", scope: !15603, file: !3, line: 3312, type: !987)
!15623 = !DILocation(line: 3312, column: 14, scope: !15603)
!15624 = !DILocalVariable(name: "mii_status", scope: !15603, file: !3, line: 3313, type: !32)
!15625 = !DILocation(line: 3313, column: 6, scope: !15603)
!15626 = !DILocation(line: 3315, column: 40, scope: !15603)
!15627 = !DILocation(line: 3315, column: 39, scope: !15603)
!15628 = !DILocation(line: 3315, column: 2, scope: !15603)
!15629 = !DILocation(line: 3315, column: 6, scope: !15603)
!15630 = !DILocation(line: 3315, column: 16, scope: !15603)
!15631 = !DILocation(line: 3316, column: 15, scope: !15603)
!15632 = !DILocation(line: 3316, column: 2, scope: !15603)
!15633 = !DILocation(line: 3316, column: 6, scope: !15603)
!15634 = !DILocation(line: 3316, column: 13, scope: !15603)
!15635 = !DILocation(line: 3319, column: 22, scope: !15603)
!15636 = !DILocation(line: 3319, column: 27, scope: !15603)
!15637 = !DILocation(line: 3319, column: 31, scope: !15603)
!15638 = !DILocation(line: 3319, column: 15, scope: !15603)
!15639 = !DILocation(line: 3319, column: 13, scope: !15603)
!15640 = !DILocation(line: 3320, column: 6, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15603, file: !3, line: 3320, column: 6)
!15642 = !DILocation(line: 3320, column: 17, scope: !15641)
!15643 = !DILocation(line: 3320, column: 6, scope: !15603)
!15644 = !DILocation(line: 3321, column: 3, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15641, file: !3, line: 3320, column: 32)
!15646 = !DILocation(line: 3321, column: 7, scope: !15645)
!15647 = !DILocation(line: 3321, column: 15, scope: !15645)
!15648 = !DILocation(line: 3322, column: 18, scope: !15645)
!15649 = !DILocation(line: 3322, column: 23, scope: !15645)
!15650 = !DILocation(line: 3322, column: 12, scope: !15645)
!15651 = !DILocation(line: 3322, column: 10, scope: !15645)
!15652 = !DILocation(line: 3323, column: 10, scope: !15645)
!15653 = !DILocation(line: 3324, column: 8, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15645, file: !3, line: 3324, column: 7)
!15655 = !DILocation(line: 3324, column: 12, scope: !15654)
!15656 = !DILocation(line: 3324, column: 22, scope: !15654)
!15657 = !DILocation(line: 3324, column: 31, scope: !15654)
!15658 = !DILocation(line: 3324, column: 7, scope: !15645)
!15659 = !DILocation(line: 3325, column: 11, scope: !15654)
!15660 = !DILocation(line: 3325, column: 4, scope: !15654)
!15661 = !DILocation(line: 3326, column: 13, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15654, file: !3, line: 3326, column: 12)
!15663 = !DILocation(line: 3326, column: 17, scope: !15662)
!15664 = !DILocation(line: 3326, column: 27, scope: !15662)
!15665 = !DILocation(line: 3326, column: 36, scope: !15662)
!15666 = !DILocation(line: 3326, column: 12, scope: !15654)
!15667 = !DILocation(line: 3327, column: 11, scope: !15662)
!15668 = !DILocation(line: 3327, column: 4, scope: !15662)
!15669 = !DILocation(line: 3328, column: 13, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15662, file: !3, line: 3328, column: 12)
!15671 = !DILocation(line: 3328, column: 17, scope: !15670)
!15672 = !DILocation(line: 3328, column: 27, scope: !15670)
!15673 = !DILocation(line: 3328, column: 36, scope: !15670)
!15674 = !DILocation(line: 3328, column: 12, scope: !15662)
!15675 = !DILocation(line: 3329, column: 11, scope: !15670)
!15676 = !DILocation(line: 3329, column: 4, scope: !15670)
!15677 = !DILocation(line: 3330, column: 10, scope: !15645)
!15678 = !DILocation(line: 3330, column: 18, scope: !15645)
!15679 = !DILocation(line: 3330, column: 23, scope: !15645)
!15680 = !DILocation(line: 3330, column: 3, scope: !15645)
!15681 = !DILocation(line: 3331, column: 2, scope: !15645)
!15682 = !DILocation(line: 3333, column: 17, scope: !15603)
!15683 = !DILocation(line: 3333, column: 22, scope: !15603)
!15684 = !DILocation(line: 3333, column: 11, scope: !15603)
!15685 = !DILocation(line: 3333, column: 9, scope: !15603)
!15686 = !DILocation(line: 3334, column: 9, scope: !15603)
!15687 = !DILocation(line: 3335, column: 6, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15603, file: !3, line: 3335, column: 6)
!15689 = !DILocation(line: 3335, column: 10, scope: !15688)
!15690 = !DILocation(line: 3335, column: 17, scope: !15688)
!15691 = !DILocation(line: 3335, column: 6, scope: !15603)
!15692 = !DILocation(line: 3336, column: 10, scope: !15688)
!15693 = !DILocation(line: 3336, column: 3, scope: !15688)
!15694 = !DILocation(line: 3337, column: 7, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15603, file: !3, line: 3337, column: 6)
!15696 = !DILocation(line: 3337, column: 11, scope: !15695)
!15697 = !DILocation(line: 3337, column: 21, scope: !15695)
!15698 = !DILocation(line: 3337, column: 45, scope: !15695)
!15699 = !DILocation(line: 3337, column: 6, scope: !15603)
!15700 = !DILocation(line: 3338, column: 10, scope: !15695)
!15701 = !DILocation(line: 3338, column: 3, scope: !15695)
!15702 = !DILocation(line: 3339, column: 12, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3339, column: 11)
!15704 = !DILocation(line: 3339, column: 16, scope: !15703)
!15705 = !DILocation(line: 3339, column: 26, scope: !15703)
!15706 = !DILocation(line: 3339, column: 50, scope: !15703)
!15707 = !DILocation(line: 3339, column: 11, scope: !15695)
!15708 = !DILocation(line: 3341, column: 10, scope: !15703)
!15709 = !DILocation(line: 3341, column: 3, scope: !15703)
!15710 = !DILocation(line: 3342, column: 9, scope: !15603)
!15711 = !DILocation(line: 3342, column: 17, scope: !15603)
!15712 = !DILocation(line: 3342, column: 22, scope: !15603)
!15713 = !DILocation(line: 3342, column: 2, scope: !15603)
!15714 = !DILocation(line: 3344, column: 6, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15603, file: !3, line: 3344, column: 6)
!15716 = !DILocation(line: 3344, column: 13, scope: !15715)
!15717 = !DILocation(line: 3344, column: 6, scope: !15603)
!15718 = !DILocation(line: 3345, column: 8, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 3345, column: 7)
!15720 = distinct !DILexicalBlock(scope: !15715, file: !3, line: 3344, column: 26)
!15721 = !DILocation(line: 3345, column: 12, scope: !15719)
!15722 = !DILocation(line: 3345, column: 22, scope: !15719)
!15723 = !DILocation(line: 3345, column: 46, scope: !15719)
!15724 = !DILocation(line: 3345, column: 7, scope: !15720)
!15725 = !DILocation(line: 3347, column: 10, scope: !15719)
!15726 = !DILocation(line: 3347, column: 4, scope: !15719)
!15727 = !DILocation(line: 3349, column: 10, scope: !15719)
!15728 = !DILocation(line: 3350, column: 2, scope: !15720)
!15729 = !DILocation(line: 3351, column: 9, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15715, file: !3, line: 3350, column: 9)
!15731 = !DILocation(line: 3353, column: 9, scope: !15603)
!15732 = !DILocation(line: 3353, column: 16, scope: !15603)
!15733 = !DILocation(line: 3353, column: 21, scope: !15603)
!15734 = !DILocation(line: 3353, column: 2, scope: !15603)
!15735 = !DILocation(line: 3355, column: 6, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15603, file: !3, line: 3355, column: 6)
!15737 = !DILocation(line: 3355, column: 10, scope: !15736)
!15738 = !DILocation(line: 3355, column: 19, scope: !15736)
!15739 = !DILocation(line: 3355, column: 6, scope: !15603)
!15740 = !DILocation(line: 3356, column: 9, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15736, file: !3, line: 3355, column: 34)
!15742 = !DILocation(line: 3357, column: 2, scope: !15741)
!15743 = !DILocation(line: 3358, column: 8, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 3358, column: 7)
!15745 = distinct !DILexicalBlock(scope: !15736, file: !3, line: 3357, column: 9)
!15746 = !DILocation(line: 3358, column: 12, scope: !15744)
!15747 = !DILocation(line: 3358, column: 22, scope: !15744)
!15748 = !DILocation(line: 3358, column: 46, scope: !15744)
!15749 = !DILocation(line: 3358, column: 7, scope: !15745)
!15750 = !DILocation(line: 3360, column: 10, scope: !15744)
!15751 = !DILocation(line: 3360, column: 4, scope: !15744)
!15752 = !DILocation(line: 3362, column: 10, scope: !15744)
!15753 = !DILocation(line: 3364, column: 9, scope: !15603)
!15754 = !DILocation(line: 3364, column: 16, scope: !15603)
!15755 = !DILocation(line: 3364, column: 21, scope: !15603)
!15756 = !DILocation(line: 3364, column: 2, scope: !15603)
!15757 = !DILocation(line: 3366, column: 30, scope: !15603)
!15758 = !DILocation(line: 3366, column: 34, scope: !15603)
!15759 = !DILocation(line: 3366, column: 27, scope: !15603)
!15760 = !DILocation(line: 3367, column: 4, scope: !15603)
!15761 = !DILocation(line: 3367, column: 9, scope: !15603)
!15762 = !DILocation(line: 3366, column: 2, scope: !15603)
!15763 = !DILocation(line: 3368, column: 11, scope: !15603)
!15764 = !DILocation(line: 3368, column: 2, scope: !15603)
!15765 = !DILocation(line: 3369, column: 9, scope: !15603)
!15766 = !DILocation(line: 3369, column: 13, scope: !15603)
!15767 = !DILocation(line: 3369, column: 24, scope: !15603)
!15768 = !DILocation(line: 3369, column: 29, scope: !15603)
!15769 = !DILocation(line: 3369, column: 2, scope: !15603)
!15770 = !DILocation(line: 3370, column: 11, scope: !15603)
!15771 = !DILocation(line: 3370, column: 2, scope: !15603)
!15772 = !DILocation(line: 3371, column: 1, scope: !15603)
!15773 = !DILocalVariable(name: "pfo_val__", scope: !15774, file: !12590, line: 26, type: !987)
!15774 = distinct !DILexicalBlock(scope: !15775, file: !12590, line: 26, column: 9)
!15775 = distinct !DISubprogram(name: "preempt_count", scope: !12590, file: !12590, line: 24, type: !8236, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15776 = !DILocation(line: 26, column: 9, scope: !15774, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 1672, column: 2, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 1672, column: 2)
!15779 = !DILocalVariable(name: "dev", arg: 1, scope: !8188, file: !3, line: 1664, type: !290)
!15780 = !DILocation(line: 1664, column: 48, scope: !8188)
!15781 = !DILocalVariable(name: "np", scope: !8188, file: !3, line: 1666, type: !7446)
!15782 = !DILocation(line: 1666, column: 18, scope: !8188)
!15783 = !DILocation(line: 1666, column: 35, scope: !8188)
!15784 = !DILocation(line: 1666, column: 23, scope: !8188)
!15785 = !DILocalVariable(name: "base", scope: !8188, file: !3, line: 1667, type: !793)
!15786 = !DILocation(line: 1667, column: 14, scope: !8188)
!15787 = !DILocation(line: 1667, column: 32, scope: !8188)
!15788 = !DILocation(line: 1667, column: 21, scope: !8188)
!15789 = !DILocalVariable(name: "__ret_warn_once", scope: !15778, file: !3, line: 1672, type: !32)
!15790 = !DILocation(line: 1672, column: 2, scope: !15778)
!15791 = !{i32 -2145362274}
!15792 = !DILocation(line: 26, column: 41, scope: !15775, inlinedAt: !15777)
!15793 = !DILocation(line: 1672, column: 2, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 1672, column: 2)
!15795 = !DILocation(line: 0, scope: !15794)
!15796 = !DILocation(line: 1672, column: 2, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15794, file: !3, line: 1672, column: 2)
!15798 = !DILocalVariable(name: "__ret_warn_on", scope: !15799, file: !3, line: 1672, type: !32)
!15799 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 1672, column: 2)
!15800 = !DILocation(line: 1672, column: 2, scope: !15799)
!15801 = !DILocation(line: 1672, column: 2, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15799, file: !3, line: 1672, column: 2)
!15803 = !DILocation(line: 1672, column: 2, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 1672, column: 2)
!15805 = !DILocation(line: 1672, column: 2, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 1672, column: 2)
!15807 = !DILocation(line: 1672, column: 2, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 1672, column: 2)
!15809 = !DILocation(line: 1672, column: 2, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 1672, column: 2)
!15811 = !DILocation(line: 1672, column: 2, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 1672, column: 2)
!15813 = !{i32 -2139516512, i32 -2139516483, i32 -2139516437, i32 -2139516379, i32 -2139516325, i32 -2139516271, i32 -2139516216, i32 -2139516185}
!15814 = !DILocation(line: 1672, column: 2, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 1672, column: 2)
!15816 = !{i32 -2139515752, i32 -2139515745, i32 -2139515693, i32 -2139515662, i32 -2139515632}
!15817 = !DILocation(line: 1672, column: 2, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 1672, column: 2)
!15819 = !DILocation(line: 1672, column: 2, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 1672, column: 2)
!15821 = !DILocation(line: 1673, column: 2, scope: !8188)
!15822 = !DILocation(line: 1673, column: 2, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 1673, column: 2)
!15824 = !DILocation(line: 1676, column: 31, scope: !8188)
!15825 = !DILocation(line: 1676, column: 36, scope: !8188)
!15826 = !DILocation(line: 1676, column: 25, scope: !8188)
!15827 = !DILocation(line: 1676, column: 2, scope: !8188)
!15828 = !DILocation(line: 1676, column: 6, scope: !8188)
!15829 = !DILocation(line: 1676, column: 13, scope: !8188)
!15830 = !DILocation(line: 1676, column: 22, scope: !8188)
!15831 = !DILocation(line: 1677, column: 36, scope: !8188)
!15832 = !DILocation(line: 1677, column: 41, scope: !8188)
!15833 = !DILocation(line: 1677, column: 30, scope: !8188)
!15834 = !DILocation(line: 1677, column: 2, scope: !8188)
!15835 = !DILocation(line: 1677, column: 6, scope: !8188)
!15836 = !DILocation(line: 1677, column: 13, scope: !8188)
!15837 = !DILocation(line: 1677, column: 27, scope: !8188)
!15838 = !DILocation(line: 1678, column: 35, scope: !8188)
!15839 = !DILocation(line: 1678, column: 40, scope: !8188)
!15840 = !DILocation(line: 1678, column: 29, scope: !8188)
!15841 = !DILocation(line: 1678, column: 2, scope: !8188)
!15842 = !DILocation(line: 1678, column: 6, scope: !8188)
!15843 = !DILocation(line: 1678, column: 13, scope: !8188)
!15844 = !DILocation(line: 1678, column: 26, scope: !8188)
!15845 = !DILocation(line: 1679, column: 36, scope: !8188)
!15846 = !DILocation(line: 1679, column: 41, scope: !8188)
!15847 = !DILocation(line: 1679, column: 30, scope: !8188)
!15848 = !DILocation(line: 1679, column: 2, scope: !8188)
!15849 = !DILocation(line: 1679, column: 6, scope: !8188)
!15850 = !DILocation(line: 1679, column: 13, scope: !8188)
!15851 = !DILocation(line: 1679, column: 27, scope: !8188)
!15852 = !DILocation(line: 1680, column: 40, scope: !8188)
!15853 = !DILocation(line: 1680, column: 45, scope: !8188)
!15854 = !DILocation(line: 1680, column: 34, scope: !8188)
!15855 = !DILocation(line: 1680, column: 2, scope: !8188)
!15856 = !DILocation(line: 1680, column: 6, scope: !8188)
!15857 = !DILocation(line: 1680, column: 13, scope: !8188)
!15858 = !DILocation(line: 1680, column: 31, scope: !8188)
!15859 = !DILocation(line: 1681, column: 37, scope: !8188)
!15860 = !DILocation(line: 1681, column: 42, scope: !8188)
!15861 = !DILocation(line: 1681, column: 31, scope: !8188)
!15862 = !DILocation(line: 1681, column: 2, scope: !8188)
!15863 = !DILocation(line: 1681, column: 6, scope: !8188)
!15864 = !DILocation(line: 1681, column: 13, scope: !8188)
!15865 = !DILocation(line: 1681, column: 28, scope: !8188)
!15866 = !DILocation(line: 1682, column: 40, scope: !8188)
!15867 = !DILocation(line: 1682, column: 45, scope: !8188)
!15868 = !DILocation(line: 1682, column: 34, scope: !8188)
!15869 = !DILocation(line: 1682, column: 2, scope: !8188)
!15870 = !DILocation(line: 1682, column: 6, scope: !8188)
!15871 = !DILocation(line: 1682, column: 13, scope: !8188)
!15872 = !DILocation(line: 1682, column: 31, scope: !8188)
!15873 = !DILocation(line: 1683, column: 41, scope: !8188)
!15874 = !DILocation(line: 1683, column: 46, scope: !8188)
!15875 = !DILocation(line: 1683, column: 35, scope: !8188)
!15876 = !DILocation(line: 1683, column: 2, scope: !8188)
!15877 = !DILocation(line: 1683, column: 6, scope: !8188)
!15878 = !DILocation(line: 1683, column: 13, scope: !8188)
!15879 = !DILocation(line: 1683, column: 32, scope: !8188)
!15880 = !DILocation(line: 1684, column: 37, scope: !8188)
!15881 = !DILocation(line: 1684, column: 42, scope: !8188)
!15882 = !DILocation(line: 1684, column: 31, scope: !8188)
!15883 = !DILocation(line: 1684, column: 2, scope: !8188)
!15884 = !DILocation(line: 1684, column: 6, scope: !8188)
!15885 = !DILocation(line: 1684, column: 13, scope: !8188)
!15886 = !DILocation(line: 1684, column: 28, scope: !8188)
!15887 = !DILocation(line: 1685, column: 37, scope: !8188)
!15888 = !DILocation(line: 1685, column: 42, scope: !8188)
!15889 = !DILocation(line: 1685, column: 31, scope: !8188)
!15890 = !DILocation(line: 1685, column: 2, scope: !8188)
!15891 = !DILocation(line: 1685, column: 6, scope: !8188)
!15892 = !DILocation(line: 1685, column: 13, scope: !8188)
!15893 = !DILocation(line: 1685, column: 28, scope: !8188)
!15894 = !DILocation(line: 1686, column: 36, scope: !8188)
!15895 = !DILocation(line: 1686, column: 41, scope: !8188)
!15896 = !DILocation(line: 1686, column: 30, scope: !8188)
!15897 = !DILocation(line: 1686, column: 2, scope: !8188)
!15898 = !DILocation(line: 1686, column: 6, scope: !8188)
!15899 = !DILocation(line: 1686, column: 13, scope: !8188)
!15900 = !DILocation(line: 1686, column: 27, scope: !8188)
!15901 = !DILocation(line: 1687, column: 40, scope: !8188)
!15902 = !DILocation(line: 1687, column: 45, scope: !8188)
!15903 = !DILocation(line: 1687, column: 34, scope: !8188)
!15904 = !DILocation(line: 1687, column: 2, scope: !8188)
!15905 = !DILocation(line: 1687, column: 6, scope: !8188)
!15906 = !DILocation(line: 1687, column: 13, scope: !8188)
!15907 = !DILocation(line: 1687, column: 31, scope: !8188)
!15908 = !DILocation(line: 1688, column: 30, scope: !8188)
!15909 = !DILocation(line: 1688, column: 35, scope: !8188)
!15910 = !DILocation(line: 1688, column: 24, scope: !8188)
!15911 = !DILocation(line: 1688, column: 2, scope: !8188)
!15912 = !DILocation(line: 1688, column: 6, scope: !8188)
!15913 = !DILocation(line: 1688, column: 13, scope: !8188)
!15914 = !DILocation(line: 1688, column: 21, scope: !8188)
!15915 = !DILocation(line: 1689, column: 40, scope: !8188)
!15916 = !DILocation(line: 1689, column: 45, scope: !8188)
!15917 = !DILocation(line: 1689, column: 34, scope: !8188)
!15918 = !DILocation(line: 1689, column: 2, scope: !8188)
!15919 = !DILocation(line: 1689, column: 6, scope: !8188)
!15920 = !DILocation(line: 1689, column: 13, scope: !8188)
!15921 = !DILocation(line: 1689, column: 31, scope: !8188)
!15922 = !DILocation(line: 1690, column: 37, scope: !8188)
!15923 = !DILocation(line: 1690, column: 42, scope: !8188)
!15924 = !DILocation(line: 1690, column: 31, scope: !8188)
!15925 = !DILocation(line: 1690, column: 2, scope: !8188)
!15926 = !DILocation(line: 1690, column: 6, scope: !8188)
!15927 = !DILocation(line: 1690, column: 13, scope: !8188)
!15928 = !DILocation(line: 1690, column: 28, scope: !8188)
!15929 = !DILocation(line: 1691, column: 36, scope: !8188)
!15930 = !DILocation(line: 1691, column: 41, scope: !8188)
!15931 = !DILocation(line: 1691, column: 30, scope: !8188)
!15932 = !DILocation(line: 1691, column: 2, scope: !8188)
!15933 = !DILocation(line: 1691, column: 6, scope: !8188)
!15934 = !DILocation(line: 1691, column: 13, scope: !8188)
!15935 = !DILocation(line: 1691, column: 27, scope: !8188)
!15936 = !DILocation(line: 1692, column: 43, scope: !8188)
!15937 = !DILocation(line: 1692, column: 48, scope: !8188)
!15938 = !DILocation(line: 1692, column: 37, scope: !8188)
!15939 = !DILocation(line: 1692, column: 2, scope: !8188)
!15940 = !DILocation(line: 1692, column: 6, scope: !8188)
!15941 = !DILocation(line: 1692, column: 13, scope: !8188)
!15942 = !DILocation(line: 1692, column: 34, scope: !8188)
!15943 = !DILocation(line: 1693, column: 38, scope: !8188)
!15944 = !DILocation(line: 1693, column: 43, scope: !8188)
!15945 = !DILocation(line: 1693, column: 32, scope: !8188)
!15946 = !DILocation(line: 1693, column: 2, scope: !8188)
!15947 = !DILocation(line: 1693, column: 6, scope: !8188)
!15948 = !DILocation(line: 1693, column: 13, scope: !8188)
!15949 = !DILocation(line: 1693, column: 29, scope: !8188)
!15950 = !DILocation(line: 1694, column: 33, scope: !8188)
!15951 = !DILocation(line: 1694, column: 38, scope: !8188)
!15952 = !DILocation(line: 1694, column: 27, scope: !8188)
!15953 = !DILocation(line: 1694, column: 2, scope: !8188)
!15954 = !DILocation(line: 1694, column: 6, scope: !8188)
!15955 = !DILocation(line: 1694, column: 13, scope: !8188)
!15956 = !DILocation(line: 1694, column: 24, scope: !8188)
!15957 = !DILocation(line: 1695, column: 35, scope: !8188)
!15958 = !DILocation(line: 1695, column: 40, scope: !8188)
!15959 = !DILocation(line: 1695, column: 29, scope: !8188)
!15960 = !DILocation(line: 1695, column: 2, scope: !8188)
!15961 = !DILocation(line: 1695, column: 6, scope: !8188)
!15962 = !DILocation(line: 1695, column: 13, scope: !8188)
!15963 = !DILocation(line: 1695, column: 26, scope: !8188)
!15964 = !DILocation(line: 1696, column: 35, scope: !8188)
!15965 = !DILocation(line: 1696, column: 40, scope: !8188)
!15966 = !DILocation(line: 1696, column: 29, scope: !8188)
!15967 = !DILocation(line: 1696, column: 2, scope: !8188)
!15968 = !DILocation(line: 1696, column: 6, scope: !8188)
!15969 = !DILocation(line: 1696, column: 13, scope: !8188)
!15970 = !DILocation(line: 1696, column: 26, scope: !8188)
!15971 = !DILocation(line: 1698, column: 3, scope: !8188)
!15972 = !DILocation(line: 1698, column: 7, scope: !8188)
!15973 = !DILocation(line: 1698, column: 14, scope: !8188)
!15974 = !DILocation(line: 1699, column: 3, scope: !8188)
!15975 = !DILocation(line: 1699, column: 7, scope: !8188)
!15976 = !DILocation(line: 1699, column: 14, scope: !8188)
!15977 = !DILocation(line: 1698, column: 25, scope: !8188)
!15978 = !DILocation(line: 1700, column: 3, scope: !8188)
!15979 = !DILocation(line: 1700, column: 7, scope: !8188)
!15980 = !DILocation(line: 1700, column: 14, scope: !8188)
!15981 = !DILocation(line: 1699, column: 27, scope: !8188)
!15982 = !DILocation(line: 1697, column: 2, scope: !8188)
!15983 = !DILocation(line: 1697, column: 6, scope: !8188)
!15984 = !DILocation(line: 1697, column: 13, scope: !8188)
!15985 = !DILocation(line: 1697, column: 24, scope: !8188)
!15986 = !DILocation(line: 1702, column: 3, scope: !8188)
!15987 = !DILocation(line: 1702, column: 7, scope: !8188)
!15988 = !DILocation(line: 1702, column: 14, scope: !8188)
!15989 = !DILocation(line: 1703, column: 3, scope: !8188)
!15990 = !DILocation(line: 1703, column: 7, scope: !8188)
!15991 = !DILocation(line: 1703, column: 14, scope: !8188)
!15992 = !DILocation(line: 1702, column: 28, scope: !8188)
!15993 = !DILocation(line: 1704, column: 3, scope: !8188)
!15994 = !DILocation(line: 1704, column: 7, scope: !8188)
!15995 = !DILocation(line: 1704, column: 14, scope: !8188)
!15996 = !DILocation(line: 1703, column: 29, scope: !8188)
!15997 = !DILocation(line: 1705, column: 4, scope: !8188)
!15998 = !DILocation(line: 1705, column: 8, scope: !8188)
!15999 = !DILocation(line: 1705, column: 15, scope: !8188)
!16000 = !DILocation(line: 1705, column: 38, scope: !8188)
!16001 = !DILocation(line: 1705, column: 42, scope: !8188)
!16002 = !DILocation(line: 1705, column: 49, scope: !8188)
!16003 = !DILocation(line: 1705, column: 36, scope: !8188)
!16004 = !DILocation(line: 1704, column: 29, scope: !8188)
!16005 = !DILocation(line: 1706, column: 3, scope: !8188)
!16006 = !DILocation(line: 1706, column: 7, scope: !8188)
!16007 = !DILocation(line: 1706, column: 14, scope: !8188)
!16008 = !DILocation(line: 1705, column: 64, scope: !8188)
!16009 = !DILocation(line: 1707, column: 3, scope: !8188)
!16010 = !DILocation(line: 1707, column: 7, scope: !8188)
!16011 = !DILocation(line: 1707, column: 14, scope: !8188)
!16012 = !DILocation(line: 1706, column: 32, scope: !8188)
!16013 = !DILocation(line: 1708, column: 3, scope: !8188)
!16014 = !DILocation(line: 1708, column: 7, scope: !8188)
!16015 = !DILocation(line: 1708, column: 14, scope: !8188)
!16016 = !DILocation(line: 1707, column: 22, scope: !8188)
!16017 = !DILocation(line: 1701, column: 2, scope: !8188)
!16018 = !DILocation(line: 1701, column: 6, scope: !8188)
!16019 = !DILocation(line: 1701, column: 13, scope: !8188)
!16020 = !DILocation(line: 1701, column: 29, scope: !8188)
!16021 = !DILocation(line: 1710, column: 3, scope: !8188)
!16022 = !DILocation(line: 1710, column: 7, scope: !8188)
!16023 = !DILocation(line: 1710, column: 14, scope: !8188)
!16024 = !DILocation(line: 1711, column: 3, scope: !8188)
!16025 = !DILocation(line: 1711, column: 7, scope: !8188)
!16026 = !DILocation(line: 1711, column: 14, scope: !8188)
!16027 = !DILocation(line: 1710, column: 32, scope: !8188)
!16028 = !DILocation(line: 1712, column: 3, scope: !8188)
!16029 = !DILocation(line: 1712, column: 7, scope: !8188)
!16030 = !DILocation(line: 1712, column: 14, scope: !8188)
!16031 = !DILocation(line: 1711, column: 29, scope: !8188)
!16032 = !DILocation(line: 1713, column: 3, scope: !8188)
!16033 = !DILocation(line: 1713, column: 7, scope: !8188)
!16034 = !DILocation(line: 1713, column: 14, scope: !8188)
!16035 = !DILocation(line: 1712, column: 32, scope: !8188)
!16036 = !DILocation(line: 1714, column: 3, scope: !8188)
!16037 = !DILocation(line: 1714, column: 7, scope: !8188)
!16038 = !DILocation(line: 1714, column: 14, scope: !8188)
!16039 = !DILocation(line: 1713, column: 33, scope: !8188)
!16040 = !DILocation(line: 1709, column: 2, scope: !8188)
!16041 = !DILocation(line: 1709, column: 6, scope: !8188)
!16042 = !DILocation(line: 1709, column: 13, scope: !8188)
!16043 = !DILocation(line: 1709, column: 29, scope: !8188)
!16044 = !DILocation(line: 1716, column: 6, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 1716, column: 6)
!16046 = !DILocation(line: 1716, column: 10, scope: !16045)
!16047 = !DILocation(line: 1716, column: 22, scope: !16045)
!16048 = !DILocation(line: 1716, column: 6, scope: !8188)
!16049 = !DILocation(line: 1717, column: 35, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16045, file: !3, line: 1716, column: 47)
!16051 = !DILocation(line: 1717, column: 40, scope: !16050)
!16052 = !DILocation(line: 1717, column: 29, scope: !16050)
!16053 = !DILocation(line: 1717, column: 3, scope: !16050)
!16054 = !DILocation(line: 1717, column: 7, scope: !16050)
!16055 = !DILocation(line: 1717, column: 14, scope: !16050)
!16056 = !DILocation(line: 1717, column: 26, scope: !16050)
!16057 = !DILocation(line: 1718, column: 34, scope: !16050)
!16058 = !DILocation(line: 1718, column: 39, scope: !16050)
!16059 = !DILocation(line: 1718, column: 28, scope: !16050)
!16060 = !DILocation(line: 1718, column: 3, scope: !16050)
!16061 = !DILocation(line: 1718, column: 7, scope: !16050)
!16062 = !DILocation(line: 1718, column: 14, scope: !16050)
!16063 = !DILocation(line: 1718, column: 25, scope: !16050)
!16064 = !DILocation(line: 1719, column: 32, scope: !16050)
!16065 = !DILocation(line: 1719, column: 37, scope: !16050)
!16066 = !DILocation(line: 1719, column: 26, scope: !16050)
!16067 = !DILocation(line: 1719, column: 3, scope: !16050)
!16068 = !DILocation(line: 1719, column: 7, scope: !16050)
!16069 = !DILocation(line: 1719, column: 14, scope: !16050)
!16070 = !DILocation(line: 1719, column: 23, scope: !16050)
!16071 = !DILocation(line: 1720, column: 32, scope: !16050)
!16072 = !DILocation(line: 1720, column: 37, scope: !16050)
!16073 = !DILocation(line: 1720, column: 26, scope: !16050)
!16074 = !DILocation(line: 1720, column: 3, scope: !16050)
!16075 = !DILocation(line: 1720, column: 7, scope: !16050)
!16076 = !DILocation(line: 1720, column: 14, scope: !16050)
!16077 = !DILocation(line: 1720, column: 23, scope: !16050)
!16078 = !DILocation(line: 1721, column: 32, scope: !16050)
!16079 = !DILocation(line: 1721, column: 37, scope: !16050)
!16080 = !DILocation(line: 1721, column: 26, scope: !16050)
!16081 = !DILocation(line: 1721, column: 3, scope: !16050)
!16082 = !DILocation(line: 1721, column: 7, scope: !16050)
!16083 = !DILocation(line: 1721, column: 14, scope: !16050)
!16084 = !DILocation(line: 1721, column: 23, scope: !16050)
!16085 = !DILocation(line: 1722, column: 37, scope: !16050)
!16086 = !DILocation(line: 1722, column: 42, scope: !16050)
!16087 = !DILocation(line: 1722, column: 31, scope: !16050)
!16088 = !DILocation(line: 1722, column: 3, scope: !16050)
!16089 = !DILocation(line: 1722, column: 7, scope: !16050)
!16090 = !DILocation(line: 1722, column: 14, scope: !16050)
!16091 = !DILocation(line: 1722, column: 28, scope: !16050)
!16092 = !DILocation(line: 1723, column: 33, scope: !16050)
!16093 = !DILocation(line: 1723, column: 37, scope: !16050)
!16094 = !DILocation(line: 1723, column: 44, scope: !16050)
!16095 = !DILocation(line: 1723, column: 3, scope: !16050)
!16096 = !DILocation(line: 1723, column: 7, scope: !16050)
!16097 = !DILocation(line: 1723, column: 14, scope: !16050)
!16098 = !DILocation(line: 1723, column: 30, scope: !16050)
!16099 = !DILocation(line: 1724, column: 2, scope: !16050)
!16100 = !DILocation(line: 1726, column: 6, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 1726, column: 6)
!16102 = !DILocation(line: 1726, column: 10, scope: !16101)
!16103 = !DILocation(line: 1726, column: 22, scope: !16101)
!16104 = !DILocation(line: 1726, column: 6, scope: !8188)
!16105 = !DILocation(line: 1727, column: 34, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16101, file: !3, line: 1726, column: 47)
!16107 = !DILocation(line: 1727, column: 39, scope: !16106)
!16108 = !DILocation(line: 1727, column: 28, scope: !16106)
!16109 = !DILocation(line: 1727, column: 3, scope: !16106)
!16110 = !DILocation(line: 1727, column: 7, scope: !16106)
!16111 = !DILocation(line: 1727, column: 14, scope: !16106)
!16112 = !DILocation(line: 1727, column: 25, scope: !16106)
!16113 = !DILocation(line: 1728, column: 36, scope: !16106)
!16114 = !DILocation(line: 1728, column: 41, scope: !16106)
!16115 = !DILocation(line: 1728, column: 30, scope: !16106)
!16116 = !DILocation(line: 1728, column: 3, scope: !16106)
!16117 = !DILocation(line: 1728, column: 7, scope: !16106)
!16118 = !DILocation(line: 1728, column: 14, scope: !16106)
!16119 = !DILocation(line: 1728, column: 27, scope: !16106)
!16120 = !DILocation(line: 1729, column: 36, scope: !16106)
!16121 = !DILocation(line: 1729, column: 41, scope: !16106)
!16122 = !DILocation(line: 1729, column: 30, scope: !16106)
!16123 = !DILocation(line: 1729, column: 3, scope: !16106)
!16124 = !DILocation(line: 1729, column: 7, scope: !16106)
!16125 = !DILocation(line: 1729, column: 14, scope: !16106)
!16126 = !DILocation(line: 1729, column: 27, scope: !16106)
!16127 = !DILocation(line: 1730, column: 2, scope: !16106)
!16128 = !DILocation(line: 1731, column: 1, scope: !8188)
!16129 = distinct !DISubprogram(name: "kmalloc_array", scope: !7256, file: !7256, line: 584, type: !9868, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16130 = !DILocalVariable(name: "s", arg: 1, scope: !16131, file: !7256, line: 445, type: !2051)
!16131 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7256, file: !7256, line: 445, type: !16132, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!591, !2051, !1742, !1039}
!16134 = !DILocation(line: 445, column: 72, scope: !16131, inlinedAt: !16135)
!16135 = distinct !DILocation(line: 552, column: 10, scope: !16136, inlinedAt: !16141)
!16136 = distinct !DILexicalBlock(scope: !16137, file: !7256, line: 540, column: 34)
!16137 = distinct !DILexicalBlock(scope: !16138, file: !7256, line: 540, column: 6)
!16138 = distinct !DISubprogram(name: "kmalloc", scope: !7256, file: !7256, line: 538, type: !16139, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16139 = !DISubroutineType(types: !16140)
!16140 = !{!591, !1039, !1742}
!16141 = distinct !DILocation(line: 591, column: 10, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16129, file: !7256, line: 590, column: 6)
!16143 = !DILocalVariable(name: "flags", arg: 2, scope: !16131, file: !7256, line: 446, type: !1742)
!16144 = !DILocation(line: 446, column: 9, scope: !16131, inlinedAt: !16135)
!16145 = !DILocalVariable(name: "size", arg: 3, scope: !16131, file: !7256, line: 446, type: !1039)
!16146 = !DILocation(line: 446, column: 23, scope: !16131, inlinedAt: !16135)
!16147 = !DILocalVariable(name: "ret", scope: !16131, file: !7256, line: 448, type: !591)
!16148 = !DILocation(line: 448, column: 8, scope: !16131, inlinedAt: !16135)
!16149 = !DILocalVariable(name: "flags", arg: 1, scope: !16150, file: !7256, line: 318, type: !1742)
!16150 = distinct !DISubprogram(name: "kmalloc_type", scope: !7256, file: !7256, line: 318, type: !16151, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{!7255, !1742}
!16153 = !DILocation(line: 318, column: 67, scope: !16150, inlinedAt: !16154)
!16154 = distinct !DILocation(line: 553, column: 20, scope: !16136, inlinedAt: !16141)
!16155 = !DILocalVariable(name: "size", arg: 1, scope: !16156, file: !7256, line: 346, type: !1039)
!16156 = distinct !DISubprogram(name: "kmalloc_index", scope: !7256, file: !7256, line: 346, type: !16157, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16157 = !DISubroutineType(types: !16158)
!16158 = !{!7, !1039}
!16159 = !DILocation(line: 346, column: 58, scope: !16156, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 547, column: 11, scope: !16136, inlinedAt: !16141)
!16161 = !DILocalVariable(name: "size", arg: 1, scope: !16162, file: !7256, line: 472, type: !1039)
!16162 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7256, file: !7256, line: 472, type: !16163, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16163 = !DISubroutineType(types: !16164)
!16164 = !{!591, !1039, !1742, !7}
!16165 = !DILocation(line: 472, column: 28, scope: !16162, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 481, column: 9, scope: !16167, inlinedAt: !16168)
!16167 = distinct !DISubprogram(name: "kmalloc_large", scope: !7256, file: !7256, line: 478, type: !16139, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16168 = distinct !DILocation(line: 545, column: 11, scope: !16169, inlinedAt: !16141)
!16169 = distinct !DILexicalBlock(scope: !16136, file: !7256, line: 544, column: 7)
!16170 = !DILocalVariable(name: "flags", arg: 2, scope: !16162, file: !7256, line: 472, type: !1742)
!16171 = !DILocation(line: 472, column: 40, scope: !16162, inlinedAt: !16166)
!16172 = !DILocalVariable(name: "order", arg: 3, scope: !16162, file: !7256, line: 472, type: !7)
!16173 = !DILocation(line: 472, column: 60, scope: !16162, inlinedAt: !16166)
!16174 = !DILocalVariable(name: "size", arg: 1, scope: !16167, file: !7256, line: 478, type: !1039)
!16175 = !DILocation(line: 478, column: 51, scope: !16167, inlinedAt: !16168)
!16176 = !DILocalVariable(name: "flags", arg: 2, scope: !16167, file: !7256, line: 478, type: !1742)
!16177 = !DILocation(line: 478, column: 63, scope: !16167, inlinedAt: !16168)
!16178 = !DILocalVariable(name: "order", scope: !16167, file: !7256, line: 480, type: !7)
!16179 = !DILocation(line: 480, column: 15, scope: !16167, inlinedAt: !16168)
!16180 = !DILocalVariable(name: "size", arg: 1, scope: !16138, file: !7256, line: 538, type: !1039)
!16181 = !DILocation(line: 538, column: 45, scope: !16138, inlinedAt: !16141)
!16182 = !DILocalVariable(name: "flags", arg: 2, scope: !16138, file: !7256, line: 538, type: !1742)
!16183 = !DILocation(line: 538, column: 57, scope: !16138, inlinedAt: !16141)
!16184 = !DILocalVariable(name: "index", scope: !16136, file: !7256, line: 542, type: !7)
!16185 = !DILocation(line: 542, column: 16, scope: !16136, inlinedAt: !16141)
!16186 = !DILocalVariable(name: "n", arg: 1, scope: !16129, file: !7256, line: 584, type: !1039)
!16187 = !DILocation(line: 584, column: 42, scope: !16129)
!16188 = !DILocalVariable(name: "size", arg: 2, scope: !16129, file: !7256, line: 584, type: !1039)
!16189 = !DILocation(line: 584, column: 52, scope: !16129)
!16190 = !DILocalVariable(name: "flags", arg: 3, scope: !16129, file: !7256, line: 584, type: !1742)
!16191 = !DILocation(line: 584, column: 64, scope: !16129)
!16192 = !DILocalVariable(name: "bytes", scope: !16129, file: !7256, line: 586, type: !1039)
!16193 = !DILocation(line: 586, column: 9, scope: !16129)
!16194 = !DILocalVariable(name: "__a", scope: !16195, file: !7256, line: 588, type: !1039)
!16195 = distinct !DILexicalBlock(scope: !16196, file: !7256, line: 588, column: 6)
!16196 = distinct !DILexicalBlock(scope: !16129, file: !7256, line: 588, column: 6)
!16197 = !DILocation(line: 588, column: 6, scope: !16195)
!16198 = !DILocalVariable(name: "__b", scope: !16195, file: !7256, line: 588, type: !1039)
!16199 = !DILocalVariable(name: "__d", scope: !16195, file: !7256, line: 588, type: !2875)
!16200 = !DILocation(line: 588, column: 6, scope: !16196)
!16201 = !DILocation(line: 588, column: 6, scope: !16129)
!16202 = !DILocation(line: 589, column: 3, scope: !16196)
!16203 = !DILocation(line: 590, column: 27, scope: !16142)
!16204 = !DILocation(line: 590, column: 6, scope: !16142)
!16205 = !DILocation(line: 590, column: 30, scope: !16142)
!16206 = !DILocation(line: 590, column: 54, scope: !16142)
!16207 = !DILocation(line: 590, column: 33, scope: !16142)
!16208 = !DILocation(line: 590, column: 6, scope: !16129)
!16209 = !DILocation(line: 591, column: 18, scope: !16142)
!16210 = !DILocation(line: 591, column: 25, scope: !16142)
!16211 = !DILocation(line: 540, column: 27, scope: !16137, inlinedAt: !16141)
!16212 = !DILocation(line: 540, column: 6, scope: !16137, inlinedAt: !16141)
!16213 = !DILocation(line: 540, column: 6, scope: !16138, inlinedAt: !16141)
!16214 = !DILocation(line: 544, column: 7, scope: !16169, inlinedAt: !16141)
!16215 = !DILocation(line: 544, column: 12, scope: !16169, inlinedAt: !16141)
!16216 = !DILocation(line: 544, column: 7, scope: !16136, inlinedAt: !16141)
!16217 = !DILocation(line: 545, column: 25, scope: !16169, inlinedAt: !16141)
!16218 = !DILocation(line: 545, column: 31, scope: !16169, inlinedAt: !16141)
!16219 = !DILocation(line: 480, column: 33, scope: !16167, inlinedAt: !16168)
!16220 = !DILocation(line: 480, column: 23, scope: !16167, inlinedAt: !16168)
!16221 = !DILocation(line: 481, column: 29, scope: !16167, inlinedAt: !16168)
!16222 = !DILocation(line: 481, column: 35, scope: !16167, inlinedAt: !16168)
!16223 = !DILocation(line: 481, column: 42, scope: !16167, inlinedAt: !16168)
!16224 = !DILocation(line: 474, column: 23, scope: !16162, inlinedAt: !16166)
!16225 = !DILocation(line: 474, column: 29, scope: !16162, inlinedAt: !16166)
!16226 = !DILocation(line: 474, column: 36, scope: !16162, inlinedAt: !16166)
!16227 = !DILocation(line: 474, column: 9, scope: !16162, inlinedAt: !16166)
!16228 = !DILocation(line: 545, column: 4, scope: !16169, inlinedAt: !16141)
!16229 = !DILocation(line: 547, column: 25, scope: !16136, inlinedAt: !16141)
!16230 = !DILocation(line: 348, column: 7, scope: !16231, inlinedAt: !16160)
!16231 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 348, column: 6)
!16232 = !DILocation(line: 348, column: 6, scope: !16156, inlinedAt: !16160)
!16233 = !DILocation(line: 349, column: 3, scope: !16231, inlinedAt: !16160)
!16234 = !DILocation(line: 351, column: 6, scope: !16235, inlinedAt: !16160)
!16235 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 351, column: 6)
!16236 = !DILocation(line: 351, column: 11, scope: !16235, inlinedAt: !16160)
!16237 = !DILocation(line: 351, column: 6, scope: !16156, inlinedAt: !16160)
!16238 = !DILocation(line: 352, column: 3, scope: !16235, inlinedAt: !16160)
!16239 = !DILocation(line: 354, column: 32, scope: !16240, inlinedAt: !16160)
!16240 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 354, column: 6)
!16241 = !DILocation(line: 354, column: 37, scope: !16240, inlinedAt: !16160)
!16242 = !DILocation(line: 354, column: 42, scope: !16240, inlinedAt: !16160)
!16243 = !DILocation(line: 354, column: 45, scope: !16240, inlinedAt: !16160)
!16244 = !DILocation(line: 354, column: 50, scope: !16240, inlinedAt: !16160)
!16245 = !DILocation(line: 354, column: 6, scope: !16156, inlinedAt: !16160)
!16246 = !DILocation(line: 355, column: 3, scope: !16240, inlinedAt: !16160)
!16247 = !DILocation(line: 356, column: 32, scope: !16248, inlinedAt: !16160)
!16248 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 356, column: 6)
!16249 = !DILocation(line: 356, column: 37, scope: !16248, inlinedAt: !16160)
!16250 = !DILocation(line: 356, column: 43, scope: !16248, inlinedAt: !16160)
!16251 = !DILocation(line: 356, column: 46, scope: !16248, inlinedAt: !16160)
!16252 = !DILocation(line: 356, column: 51, scope: !16248, inlinedAt: !16160)
!16253 = !DILocation(line: 356, column: 6, scope: !16156, inlinedAt: !16160)
!16254 = !DILocation(line: 357, column: 3, scope: !16248, inlinedAt: !16160)
!16255 = !DILocation(line: 358, column: 6, scope: !16256, inlinedAt: !16160)
!16256 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 358, column: 6)
!16257 = !DILocation(line: 358, column: 11, scope: !16256, inlinedAt: !16160)
!16258 = !DILocation(line: 358, column: 6, scope: !16156, inlinedAt: !16160)
!16259 = !DILocation(line: 358, column: 26, scope: !16256, inlinedAt: !16160)
!16260 = !DILocation(line: 359, column: 6, scope: !16261, inlinedAt: !16160)
!16261 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 359, column: 6)
!16262 = !DILocation(line: 359, column: 11, scope: !16261, inlinedAt: !16160)
!16263 = !DILocation(line: 359, column: 6, scope: !16156, inlinedAt: !16160)
!16264 = !DILocation(line: 359, column: 26, scope: !16261, inlinedAt: !16160)
!16265 = !DILocation(line: 360, column: 6, scope: !16266, inlinedAt: !16160)
!16266 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 360, column: 6)
!16267 = !DILocation(line: 360, column: 11, scope: !16266, inlinedAt: !16160)
!16268 = !DILocation(line: 360, column: 6, scope: !16156, inlinedAt: !16160)
!16269 = !DILocation(line: 360, column: 26, scope: !16266, inlinedAt: !16160)
!16270 = !DILocation(line: 361, column: 6, scope: !16271, inlinedAt: !16160)
!16271 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 361, column: 6)
!16272 = !DILocation(line: 361, column: 11, scope: !16271, inlinedAt: !16160)
!16273 = !DILocation(line: 361, column: 6, scope: !16156, inlinedAt: !16160)
!16274 = !DILocation(line: 361, column: 26, scope: !16271, inlinedAt: !16160)
!16275 = !DILocation(line: 362, column: 6, scope: !16276, inlinedAt: !16160)
!16276 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 362, column: 6)
!16277 = !DILocation(line: 362, column: 11, scope: !16276, inlinedAt: !16160)
!16278 = !DILocation(line: 362, column: 6, scope: !16156, inlinedAt: !16160)
!16279 = !DILocation(line: 362, column: 26, scope: !16276, inlinedAt: !16160)
!16280 = !DILocation(line: 363, column: 6, scope: !16281, inlinedAt: !16160)
!16281 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 363, column: 6)
!16282 = !DILocation(line: 363, column: 11, scope: !16281, inlinedAt: !16160)
!16283 = !DILocation(line: 363, column: 6, scope: !16156, inlinedAt: !16160)
!16284 = !DILocation(line: 363, column: 26, scope: !16281, inlinedAt: !16160)
!16285 = !DILocation(line: 364, column: 6, scope: !16286, inlinedAt: !16160)
!16286 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 364, column: 6)
!16287 = !DILocation(line: 364, column: 11, scope: !16286, inlinedAt: !16160)
!16288 = !DILocation(line: 364, column: 6, scope: !16156, inlinedAt: !16160)
!16289 = !DILocation(line: 364, column: 26, scope: !16286, inlinedAt: !16160)
!16290 = !DILocation(line: 365, column: 6, scope: !16291, inlinedAt: !16160)
!16291 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 365, column: 6)
!16292 = !DILocation(line: 365, column: 11, scope: !16291, inlinedAt: !16160)
!16293 = !DILocation(line: 365, column: 6, scope: !16156, inlinedAt: !16160)
!16294 = !DILocation(line: 365, column: 26, scope: !16291, inlinedAt: !16160)
!16295 = !DILocation(line: 366, column: 6, scope: !16296, inlinedAt: !16160)
!16296 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 366, column: 6)
!16297 = !DILocation(line: 366, column: 11, scope: !16296, inlinedAt: !16160)
!16298 = !DILocation(line: 366, column: 6, scope: !16156, inlinedAt: !16160)
!16299 = !DILocation(line: 366, column: 26, scope: !16296, inlinedAt: !16160)
!16300 = !DILocation(line: 367, column: 6, scope: !16301, inlinedAt: !16160)
!16301 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 367, column: 6)
!16302 = !DILocation(line: 367, column: 11, scope: !16301, inlinedAt: !16160)
!16303 = !DILocation(line: 367, column: 6, scope: !16156, inlinedAt: !16160)
!16304 = !DILocation(line: 367, column: 26, scope: !16301, inlinedAt: !16160)
!16305 = !DILocation(line: 368, column: 6, scope: !16306, inlinedAt: !16160)
!16306 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 368, column: 6)
!16307 = !DILocation(line: 368, column: 11, scope: !16306, inlinedAt: !16160)
!16308 = !DILocation(line: 368, column: 6, scope: !16156, inlinedAt: !16160)
!16309 = !DILocation(line: 368, column: 26, scope: !16306, inlinedAt: !16160)
!16310 = !DILocation(line: 369, column: 6, scope: !16311, inlinedAt: !16160)
!16311 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 369, column: 6)
!16312 = !DILocation(line: 369, column: 11, scope: !16311, inlinedAt: !16160)
!16313 = !DILocation(line: 369, column: 6, scope: !16156, inlinedAt: !16160)
!16314 = !DILocation(line: 369, column: 26, scope: !16311, inlinedAt: !16160)
!16315 = !DILocation(line: 370, column: 6, scope: !16316, inlinedAt: !16160)
!16316 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 370, column: 6)
!16317 = !DILocation(line: 370, column: 11, scope: !16316, inlinedAt: !16160)
!16318 = !DILocation(line: 370, column: 6, scope: !16156, inlinedAt: !16160)
!16319 = !DILocation(line: 370, column: 26, scope: !16316, inlinedAt: !16160)
!16320 = !DILocation(line: 371, column: 6, scope: !16321, inlinedAt: !16160)
!16321 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 371, column: 6)
!16322 = !DILocation(line: 371, column: 11, scope: !16321, inlinedAt: !16160)
!16323 = !DILocation(line: 371, column: 6, scope: !16156, inlinedAt: !16160)
!16324 = !DILocation(line: 371, column: 26, scope: !16321, inlinedAt: !16160)
!16325 = !DILocation(line: 372, column: 6, scope: !16326, inlinedAt: !16160)
!16326 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 372, column: 6)
!16327 = !DILocation(line: 372, column: 11, scope: !16326, inlinedAt: !16160)
!16328 = !DILocation(line: 372, column: 6, scope: !16156, inlinedAt: !16160)
!16329 = !DILocation(line: 372, column: 26, scope: !16326, inlinedAt: !16160)
!16330 = !DILocation(line: 373, column: 6, scope: !16331, inlinedAt: !16160)
!16331 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 373, column: 6)
!16332 = !DILocation(line: 373, column: 11, scope: !16331, inlinedAt: !16160)
!16333 = !DILocation(line: 373, column: 6, scope: !16156, inlinedAt: !16160)
!16334 = !DILocation(line: 373, column: 26, scope: !16331, inlinedAt: !16160)
!16335 = !DILocation(line: 374, column: 6, scope: !16336, inlinedAt: !16160)
!16336 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 374, column: 6)
!16337 = !DILocation(line: 374, column: 11, scope: !16336, inlinedAt: !16160)
!16338 = !DILocation(line: 374, column: 6, scope: !16156, inlinedAt: !16160)
!16339 = !DILocation(line: 374, column: 26, scope: !16336, inlinedAt: !16160)
!16340 = !DILocation(line: 375, column: 6, scope: !16341, inlinedAt: !16160)
!16341 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 375, column: 6)
!16342 = !DILocation(line: 375, column: 11, scope: !16341, inlinedAt: !16160)
!16343 = !DILocation(line: 375, column: 6, scope: !16156, inlinedAt: !16160)
!16344 = !DILocation(line: 375, column: 27, scope: !16341, inlinedAt: !16160)
!16345 = !DILocation(line: 376, column: 6, scope: !16346, inlinedAt: !16160)
!16346 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 376, column: 6)
!16347 = !DILocation(line: 376, column: 11, scope: !16346, inlinedAt: !16160)
!16348 = !DILocation(line: 376, column: 6, scope: !16156, inlinedAt: !16160)
!16349 = !DILocation(line: 376, column: 32, scope: !16346, inlinedAt: !16160)
!16350 = !DILocation(line: 377, column: 6, scope: !16351, inlinedAt: !16160)
!16351 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 377, column: 6)
!16352 = !DILocation(line: 377, column: 11, scope: !16351, inlinedAt: !16160)
!16353 = !DILocation(line: 377, column: 6, scope: !16156, inlinedAt: !16160)
!16354 = !DILocation(line: 377, column: 32, scope: !16351, inlinedAt: !16160)
!16355 = !DILocation(line: 378, column: 6, scope: !16356, inlinedAt: !16160)
!16356 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 378, column: 6)
!16357 = !DILocation(line: 378, column: 11, scope: !16356, inlinedAt: !16160)
!16358 = !DILocation(line: 378, column: 6, scope: !16156, inlinedAt: !16160)
!16359 = !DILocation(line: 378, column: 32, scope: !16356, inlinedAt: !16160)
!16360 = !DILocation(line: 379, column: 6, scope: !16361, inlinedAt: !16160)
!16361 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 379, column: 6)
!16362 = !DILocation(line: 379, column: 11, scope: !16361, inlinedAt: !16160)
!16363 = !DILocation(line: 379, column: 6, scope: !16156, inlinedAt: !16160)
!16364 = !DILocation(line: 379, column: 33, scope: !16361, inlinedAt: !16160)
!16365 = !DILocation(line: 380, column: 6, scope: !16366, inlinedAt: !16160)
!16366 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 380, column: 6)
!16367 = !DILocation(line: 380, column: 11, scope: !16366, inlinedAt: !16160)
!16368 = !DILocation(line: 380, column: 6, scope: !16156, inlinedAt: !16160)
!16369 = !DILocation(line: 380, column: 33, scope: !16366, inlinedAt: !16160)
!16370 = !DILocation(line: 381, column: 6, scope: !16371, inlinedAt: !16160)
!16371 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 381, column: 6)
!16372 = !DILocation(line: 381, column: 11, scope: !16371, inlinedAt: !16160)
!16373 = !DILocation(line: 381, column: 6, scope: !16156, inlinedAt: !16160)
!16374 = !DILocation(line: 381, column: 33, scope: !16371, inlinedAt: !16160)
!16375 = !DILocation(line: 382, column: 2, scope: !16376, inlinedAt: !16160)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !7256, line: 382, column: 2)
!16377 = distinct !DILexicalBlock(scope: !16156, file: !7256, line: 382, column: 2)
!16378 = !{i32 -2143084389, i32 -2143084360, i32 -2143084314, i32 -2143084256, i32 -2143084202, i32 -2143084148, i32 -2143084093, i32 -2143084062}
!16379 = !DILocation(line: 382, column: 2, scope: !16380, inlinedAt: !16160)
!16380 = distinct !DILexicalBlock(scope: !16381, file: !7256, line: 382, column: 2)
!16381 = distinct !DILexicalBlock(scope: !16377, file: !7256, line: 382, column: 2)
!16382 = !{i32 -2143083619, i32 -2143083612, i32 -2143083558, i32 -2143083527, i32 -2143083497}
!16383 = !DILocation(line: 382, column: 2, scope: !16381, inlinedAt: !16160)
!16384 = !DILocation(line: 386, column: 1, scope: !16156, inlinedAt: !16160)
!16385 = !DILocation(line: 547, column: 9, scope: !16136, inlinedAt: !16141)
!16386 = !DILocation(line: 549, column: 8, scope: !16387, inlinedAt: !16141)
!16387 = distinct !DILexicalBlock(scope: !16136, file: !7256, line: 549, column: 7)
!16388 = !DILocation(line: 549, column: 7, scope: !16136, inlinedAt: !16141)
!16389 = !DILocation(line: 550, column: 4, scope: !16387, inlinedAt: !16141)
!16390 = !DILocation(line: 553, column: 33, scope: !16136, inlinedAt: !16141)
!16391 = !DILocation(line: 325, column: 6, scope: !16392, inlinedAt: !16154)
!16392 = distinct !DILexicalBlock(scope: !16150, file: !7256, line: 325, column: 6)
!16393 = !DILocation(line: 325, column: 6, scope: !16150, inlinedAt: !16154)
!16394 = !DILocation(line: 326, column: 3, scope: !16392, inlinedAt: !16154)
!16395 = !DILocation(line: 332, column: 9, scope: !16150, inlinedAt: !16154)
!16396 = !DILocation(line: 332, column: 15, scope: !16150, inlinedAt: !16154)
!16397 = !DILocation(line: 332, column: 2, scope: !16150, inlinedAt: !16154)
!16398 = !DILocation(line: 336, column: 1, scope: !16150, inlinedAt: !16154)
!16399 = !DILocation(line: 553, column: 5, scope: !16136, inlinedAt: !16141)
!16400 = !DILocation(line: 553, column: 41, scope: !16136, inlinedAt: !16141)
!16401 = !DILocation(line: 554, column: 5, scope: !16136, inlinedAt: !16141)
!16402 = !DILocation(line: 554, column: 12, scope: !16136, inlinedAt: !16141)
!16403 = !DILocation(line: 448, column: 31, scope: !16131, inlinedAt: !16135)
!16404 = !DILocation(line: 448, column: 34, scope: !16131, inlinedAt: !16135)
!16405 = !DILocation(line: 448, column: 14, scope: !16131, inlinedAt: !16135)
!16406 = !DILocation(line: 450, column: 22, scope: !16131, inlinedAt: !16135)
!16407 = !DILocation(line: 450, column: 25, scope: !16131, inlinedAt: !16135)
!16408 = !DILocation(line: 450, column: 30, scope: !16131, inlinedAt: !16135)
!16409 = !DILocation(line: 450, column: 36, scope: !16131, inlinedAt: !16135)
!16410 = !DILocation(line: 450, column: 8, scope: !16131, inlinedAt: !16135)
!16411 = !DILocation(line: 450, column: 6, scope: !16131, inlinedAt: !16135)
!16412 = !DILocation(line: 451, column: 9, scope: !16131, inlinedAt: !16135)
!16413 = !DILocation(line: 552, column: 3, scope: !16136, inlinedAt: !16141)
!16414 = !DILocation(line: 557, column: 19, scope: !16138, inlinedAt: !16141)
!16415 = !DILocation(line: 557, column: 25, scope: !16138, inlinedAt: !16141)
!16416 = !DILocation(line: 557, column: 9, scope: !16138, inlinedAt: !16141)
!16417 = !DILocation(line: 557, column: 2, scope: !16138, inlinedAt: !16141)
!16418 = !DILocation(line: 558, column: 1, scope: !16138, inlinedAt: !16141)
!16419 = !DILocation(line: 591, column: 3, scope: !16142)
!16420 = !DILocation(line: 592, column: 19, scope: !16129)
!16421 = !DILocation(line: 592, column: 26, scope: !16129)
!16422 = !DILocation(line: 592, column: 9, scope: !16129)
!16423 = !DILocation(line: 592, column: 2, scope: !16129)
!16424 = !DILocation(line: 593, column: 1, scope: !16129)
!16425 = distinct !DISubprogram(name: "__must_check_overflow", scope: !16426, file: !16426, line: 52, type: !16427, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16426 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!16427 = !DISubroutineType(types: !16428)
!16428 = !{!771, !771}
!16429 = !DILocalVariable(name: "overflow", arg: 1, scope: !16425, file: !16426, line: 52, type: !771)
!16430 = !DILocation(line: 52, column: 60, scope: !16425)
!16431 = !DILocation(line: 54, column: 9, scope: !16425)
!16432 = !DILocation(line: 54, column: 2, scope: !16425)
!16433 = distinct !DISubprogram(name: "get_order", scope: !16434, file: !16434, line: 29, type: !16435, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16434 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!16435 = !DISubroutineType(types: !16436)
!16436 = !{!32, !312}
!16437 = !DILocalVariable(name: "x", arg: 1, scope: !16438, file: !12518, line: 366, type: !333)
!16438 = distinct !DISubprogram(name: "fls64", scope: !12518, file: !12518, line: 366, type: !16439, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16439 = !DISubroutineType(types: !16440)
!16440 = !{!32, !333}
!16441 = !DILocation(line: 366, column: 40, scope: !16438, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 46, column: 9, scope: !16433)
!16443 = !DILocalVariable(name: "bitpos", scope: !16438, file: !12518, line: 368, type: !32)
!16444 = !DILocation(line: 368, column: 6, scope: !16438, inlinedAt: !16442)
!16445 = !DILocalVariable(name: "size", arg: 1, scope: !16433, file: !16434, line: 29, type: !312)
!16446 = !DILocation(line: 29, column: 63, scope: !16433)
!16447 = !DILocation(line: 31, column: 27, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16433, file: !16434, line: 31, column: 6)
!16449 = !DILocation(line: 31, column: 6, scope: !16448)
!16450 = !DILocation(line: 31, column: 6, scope: !16433)
!16451 = !DILocation(line: 32, column: 8, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16453, file: !16434, line: 32, column: 7)
!16453 = distinct !DILexicalBlock(scope: !16448, file: !16434, line: 31, column: 34)
!16454 = !DILocation(line: 32, column: 7, scope: !16453)
!16455 = !DILocation(line: 33, column: 4, scope: !16452)
!16456 = !DILocation(line: 35, column: 7, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16453, file: !16434, line: 35, column: 7)
!16458 = !DILocation(line: 35, column: 12, scope: !16457)
!16459 = !DILocation(line: 35, column: 7, scope: !16453)
!16460 = !DILocation(line: 36, column: 4, scope: !16457)
!16461 = !DILocation(line: 38, column: 10, scope: !16453)
!16462 = !DILocation(line: 38, column: 28, scope: !16453)
!16463 = !DILocation(line: 38, column: 41, scope: !16453)
!16464 = !DILocation(line: 38, column: 3, scope: !16453)
!16465 = !DILocation(line: 41, column: 6, scope: !16433)
!16466 = !DILocation(line: 42, column: 7, scope: !16433)
!16467 = !DILocation(line: 46, column: 15, scope: !16433)
!16468 = !DILocation(line: 374, column: 2, scope: !16438, inlinedAt: !16442)
!16469 = !DILocation(line: 376, column: 14, scope: !16438, inlinedAt: !16442)
!16470 = !{i32 492773}
!16471 = !DILocation(line: 377, column: 9, scope: !16438, inlinedAt: !16442)
!16472 = !DILocation(line: 377, column: 16, scope: !16438, inlinedAt: !16442)
!16473 = !DILocation(line: 46, column: 2, scope: !16433)
!16474 = !DILocation(line: 48, column: 1, scope: !16433)
!16475 = distinct !DISubprogram(name: "__ilog2_u64", scope: !16476, file: !16476, line: 30, type: !16477, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16476 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!16477 = !DISubroutineType(types: !16478)
!16478 = !{!32, !331}
!16479 = !DILocation(line: 366, column: 40, scope: !16438, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 32, column: 9, scope: !16475)
!16481 = !DILocation(line: 368, column: 6, scope: !16438, inlinedAt: !16480)
!16482 = !DILocalVariable(name: "n", arg: 1, scope: !16475, file: !16476, line: 30, type: !331)
!16483 = !DILocation(line: 30, column: 21, scope: !16475)
!16484 = !DILocation(line: 32, column: 15, scope: !16475)
!16485 = !DILocation(line: 374, column: 2, scope: !16438, inlinedAt: !16480)
!16486 = !DILocation(line: 376, column: 14, scope: !16438, inlinedAt: !16480)
!16487 = !DILocation(line: 377, column: 9, scope: !16438, inlinedAt: !16480)
!16488 = !DILocation(line: 377, column: 16, scope: !16438, inlinedAt: !16480)
!16489 = !DILocation(line: 32, column: 18, scope: !16475)
!16490 = !DILocation(line: 32, column: 2, scope: !16475)
!16491 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !16492, file: !16492, line: 137, type: !16493, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16492 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!16493 = !DISubroutineType(types: !16494)
!16494 = !{!591, !2051, !3258, !1039, !1742}
!16495 = !DILocalVariable(name: "s", arg: 1, scope: !16491, file: !16492, line: 137, type: !2051)
!16496 = !DILocation(line: 137, column: 54, scope: !16491)
!16497 = !DILocalVariable(name: "object", arg: 2, scope: !16491, file: !16492, line: 137, type: !3258)
!16498 = !DILocation(line: 137, column: 69, scope: !16491)
!16499 = !DILocalVariable(name: "size", arg: 3, scope: !16491, file: !16492, line: 138, type: !1039)
!16500 = !DILocation(line: 138, column: 12, scope: !16491)
!16501 = !DILocalVariable(name: "flags", arg: 4, scope: !16491, file: !16492, line: 138, type: !1742)
!16502 = !DILocation(line: 138, column: 24, scope: !16491)
!16503 = !DILocation(line: 140, column: 17, scope: !16491)
!16504 = !DILocation(line: 140, column: 2, scope: !16491)
!16505 = distinct !DISubprogram(name: "nv_open", scope: !3, file: !3, line: 5456, type: !402, scopeLine: 5457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16506 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 5612, column: 2, scope: !16505)
!16508 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !16509)
!16509 = distinct !DILocation(line: 5578, column: 2, scope: !16505)
!16510 = !DILocalVariable(name: "dev", arg: 1, scope: !16505, file: !3, line: 5456, type: !290)
!16511 = !DILocation(line: 5456, column: 39, scope: !16505)
!16512 = !DILocalVariable(name: "np", scope: !16505, file: !3, line: 5458, type: !7446)
!16513 = !DILocation(line: 5458, column: 18, scope: !16505)
!16514 = !DILocation(line: 5458, column: 35, scope: !16505)
!16515 = !DILocation(line: 5458, column: 23, scope: !16505)
!16516 = !DILocalVariable(name: "base", scope: !16505, file: !3, line: 5459, type: !793)
!16517 = !DILocation(line: 5459, column: 14, scope: !16505)
!16518 = !DILocation(line: 5459, column: 32, scope: !16505)
!16519 = !DILocation(line: 5459, column: 21, scope: !16505)
!16520 = !DILocalVariable(name: "ret", scope: !16505, file: !3, line: 5460, type: !32)
!16521 = !DILocation(line: 5460, column: 6, scope: !16505)
!16522 = !DILocalVariable(name: "oom", scope: !16505, file: !3, line: 5461, type: !32)
!16523 = !DILocation(line: 5461, column: 6, scope: !16505)
!16524 = !DILocalVariable(name: "i", scope: !16505, file: !3, line: 5461, type: !32)
!16525 = !DILocation(line: 5461, column: 11, scope: !16505)
!16526 = !DILocalVariable(name: "low", scope: !16505, file: !3, line: 5462, type: !987)
!16527 = !DILocation(line: 5462, column: 6, scope: !16505)
!16528 = !DILocation(line: 5465, column: 9, scope: !16505)
!16529 = !DILocation(line: 5465, column: 14, scope: !16505)
!16530 = !DILocation(line: 5465, column: 18, scope: !16505)
!16531 = !DILocation(line: 5466, column: 16, scope: !16505)
!16532 = !DILocation(line: 5466, column: 21, scope: !16505)
!16533 = !DILocation(line: 5466, column: 25, scope: !16505)
!16534 = !DILocation(line: 5466, column: 9, scope: !16505)
!16535 = !DILocation(line: 5466, column: 54, scope: !16505)
!16536 = !DILocation(line: 5465, column: 2, scope: !16505)
!16537 = !DILocation(line: 5468, column: 15, scope: !16505)
!16538 = !DILocation(line: 5468, column: 2, scope: !16505)
!16539 = !DILocation(line: 5470, column: 6, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5470, column: 6)
!16541 = !DILocation(line: 5470, column: 10, scope: !16540)
!16542 = !DILocation(line: 5470, column: 22, scope: !16540)
!16543 = !DILocation(line: 5470, column: 6, scope: !16505)
!16544 = !DILocation(line: 5471, column: 16, scope: !16540)
!16545 = !DILocation(line: 5471, column: 3, scope: !16540)
!16546 = !DILocation(line: 5472, column: 33, scope: !16505)
!16547 = !DILocation(line: 5472, column: 38, scope: !16505)
!16548 = !DILocation(line: 5472, column: 2, scope: !16505)
!16549 = !DILocation(line: 5473, column: 12, scope: !16505)
!16550 = !DILocation(line: 5473, column: 17, scope: !16505)
!16551 = !DILocation(line: 5473, column: 2, scope: !16505)
!16552 = !DILocation(line: 5474, column: 32, scope: !16505)
!16553 = !DILocation(line: 5474, column: 37, scope: !16505)
!16554 = !DILocation(line: 5474, column: 2, scope: !16505)
!16555 = !DILocation(line: 5475, column: 32, scope: !16505)
!16556 = !DILocation(line: 5475, column: 37, scope: !16505)
!16557 = !DILocation(line: 5475, column: 2, scope: !16505)
!16558 = !DILocation(line: 5476, column: 12, scope: !16505)
!16559 = !DILocation(line: 5476, column: 17, scope: !16505)
!16560 = !DILocation(line: 5476, column: 2, scope: !16505)
!16561 = !DILocation(line: 5478, column: 12, scope: !16505)
!16562 = !DILocation(line: 5478, column: 17, scope: !16505)
!16563 = !DILocation(line: 5478, column: 2, scope: !16505)
!16564 = !DILocation(line: 5479, column: 12, scope: !16505)
!16565 = !DILocation(line: 5479, column: 17, scope: !16505)
!16566 = !DILocation(line: 5479, column: 2, scope: !16505)
!16567 = !DILocation(line: 5481, column: 12, scope: !16505)
!16568 = !DILocation(line: 5481, column: 17, scope: !16505)
!16569 = !DILocation(line: 5481, column: 2, scope: !16505)
!16570 = !DILocation(line: 5483, column: 6, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5483, column: 6)
!16572 = !DILocation(line: 5483, column: 10, scope: !16571)
!16573 = !DILocation(line: 5483, column: 22, scope: !16571)
!16574 = !DILocation(line: 5483, column: 6, scope: !16505)
!16575 = !DILocation(line: 5484, column: 40, scope: !16571)
!16576 = !DILocation(line: 5484, column: 45, scope: !16571)
!16577 = !DILocation(line: 5484, column: 3, scope: !16571)
!16578 = !DILocation(line: 5487, column: 14, scope: !16505)
!16579 = !DILocation(line: 5487, column: 2, scope: !16505)
!16580 = !DILocation(line: 5488, column: 21, scope: !16505)
!16581 = !DILocation(line: 5488, column: 8, scope: !16505)
!16582 = !DILocation(line: 5488, column: 6, scope: !16505)
!16583 = !DILocation(line: 5490, column: 12, scope: !16505)
!16584 = !DILocation(line: 5490, column: 17, scope: !16505)
!16585 = !DILocation(line: 5490, column: 2, scope: !16505)
!16586 = !DILocation(line: 5491, column: 15, scope: !16505)
!16587 = !DILocation(line: 5491, column: 20, scope: !16505)
!16588 = !DILocation(line: 5491, column: 9, scope: !16505)
!16589 = !DILocation(line: 5491, column: 41, scope: !16505)
!16590 = !DILocation(line: 5491, column: 76, scope: !16505)
!16591 = !DILocation(line: 5491, column: 81, scope: !16505)
!16592 = !DILocation(line: 5491, column: 2, scope: !16505)
!16593 = !DILocation(line: 5492, column: 16, scope: !16505)
!16594 = !DILocation(line: 5492, column: 2, scope: !16505)
!16595 = !DILocation(line: 5493, column: 12, scope: !16505)
!16596 = !DILocation(line: 5493, column: 17, scope: !16505)
!16597 = !DILocation(line: 5493, column: 2, scope: !16505)
!16598 = !DILocation(line: 5495, column: 2, scope: !16505)
!16599 = !DILocation(line: 5495, column: 6, scope: !16505)
!16600 = !DILocation(line: 5495, column: 18, scope: !16505)
!16601 = !DILocation(line: 5498, column: 17, scope: !16505)
!16602 = !DILocation(line: 5498, column: 2, scope: !16505)
!16603 = !DILocation(line: 5499, column: 11, scope: !16505)
!16604 = !DILocation(line: 5499, column: 15, scope: !16505)
!16605 = !DILocation(line: 5499, column: 27, scope: !16505)
!16606 = !DILocation(line: 5499, column: 31, scope: !16505)
!16607 = !DILocation(line: 5499, column: 60, scope: !16505)
!16608 = !DILocation(line: 5499, column: 64, scope: !16505)
!16609 = !DILocation(line: 5499, column: 76, scope: !16505)
!16610 = !DILocation(line: 5499, column: 80, scope: !16505)
!16611 = !DILocation(line: 5499, column: 56, scope: !16505)
!16612 = !DILocation(line: 5500, column: 3, scope: !16505)
!16613 = !DILocation(line: 5500, column: 8, scope: !16505)
!16614 = !DILocation(line: 5499, column: 2, scope: !16505)
!16615 = !DILocation(line: 5502, column: 9, scope: !16505)
!16616 = !DILocation(line: 5502, column: 13, scope: !16505)
!16617 = !DILocation(line: 5502, column: 24, scope: !16505)
!16618 = !DILocation(line: 5502, column: 29, scope: !16505)
!16619 = !DILocation(line: 5502, column: 2, scope: !16505)
!16620 = !DILocation(line: 5503, column: 6, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5503, column: 6)
!16622 = !DILocation(line: 5503, column: 10, scope: !16621)
!16623 = !DILocation(line: 5503, column: 19, scope: !16621)
!16624 = !DILocation(line: 5503, column: 6, scope: !16505)
!16625 = !DILocation(line: 5504, column: 37, scope: !16621)
!16626 = !DILocation(line: 5504, column: 42, scope: !16621)
!16627 = !DILocation(line: 5504, column: 3, scope: !16621)
!16628 = !DILocation(line: 5506, column: 39, scope: !16621)
!16629 = !DILocation(line: 5506, column: 44, scope: !16621)
!16630 = !DILocation(line: 5506, column: 3, scope: !16621)
!16631 = !DILocation(line: 5507, column: 9, scope: !16505)
!16632 = !DILocation(line: 5507, column: 13, scope: !16505)
!16633 = !DILocation(line: 5507, column: 27, scope: !16505)
!16634 = !DILocation(line: 5507, column: 32, scope: !16505)
!16635 = !DILocation(line: 5507, column: 2, scope: !16505)
!16636 = !DILocation(line: 5508, column: 9, scope: !16505)
!16637 = !DILocation(line: 5508, column: 13, scope: !16505)
!16638 = !DILocation(line: 5508, column: 27, scope: !16505)
!16639 = !DILocation(line: 5508, column: 32, scope: !16505)
!16640 = !DILocation(line: 5508, column: 2, scope: !16505)
!16641 = !DILocation(line: 5509, column: 11, scope: !16505)
!16642 = !DILocation(line: 5509, column: 2, scope: !16505)
!16643 = !DILocation(line: 5510, column: 28, scope: !16505)
!16644 = !DILocation(line: 5510, column: 32, scope: !16505)
!16645 = !DILocation(line: 5510, column: 27, scope: !16505)
!16646 = !DILocation(line: 5510, column: 46, scope: !16505)
!16647 = !DILocation(line: 5510, column: 51, scope: !16505)
!16648 = !DILocation(line: 5510, column: 2, scope: !16505)
!16649 = !DILocation(line: 5511, column: 16, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5511, column: 6)
!16651 = !DILocation(line: 5511, column: 6, scope: !16650)
!16652 = !DILocation(line: 5511, column: 6, scope: !16505)
!16653 = !DILocation(line: 5514, column: 15, scope: !16650)
!16654 = !DILocation(line: 5514, column: 3, scope: !16650)
!16655 = !DILocation(line: 5517, column: 12, scope: !16505)
!16656 = !DILocation(line: 5517, column: 17, scope: !16505)
!16657 = !DILocation(line: 5517, column: 2, scope: !16505)
!16658 = !DILocation(line: 5518, column: 29, scope: !16505)
!16659 = !DILocation(line: 5518, column: 34, scope: !16505)
!16660 = !DILocation(line: 5518, column: 2, scope: !16505)
!16661 = !DILocation(line: 5519, column: 33, scope: !16505)
!16662 = !DILocation(line: 5519, column: 38, scope: !16505)
!16663 = !DILocation(line: 5519, column: 2, scope: !16505)
!16664 = !DILocation(line: 5521, column: 45, scope: !16505)
!16665 = !DILocation(line: 5521, column: 50, scope: !16505)
!16666 = !DILocation(line: 5521, column: 2, scope: !16505)
!16667 = !DILocation(line: 5522, column: 15, scope: !16505)
!16668 = !DILocation(line: 5522, column: 20, scope: !16505)
!16669 = !DILocation(line: 5522, column: 9, scope: !16505)
!16670 = !DILocation(line: 5522, column: 47, scope: !16505)
!16671 = !DILocation(line: 5522, column: 52, scope: !16505)
!16672 = !DILocation(line: 5522, column: 2, scope: !16505)
!16673 = !DILocation(line: 5523, column: 27, scope: !16505)
!16674 = !DILocation(line: 5523, column: 32, scope: !16505)
!16675 = !DILocation(line: 5523, column: 2, scope: !16505)
!16676 = !DILocation(line: 5524, column: 9, scope: !16505)
!16677 = !DILocation(line: 5524, column: 13, scope: !16505)
!16678 = !DILocation(line: 5524, column: 24, scope: !16505)
!16679 = !DILocation(line: 5524, column: 29, scope: !16505)
!16680 = !DILocation(line: 5524, column: 2, scope: !16505)
!16681 = !DILocation(line: 5526, column: 15, scope: !16505)
!16682 = !DILocation(line: 5526, column: 20, scope: !16505)
!16683 = !DILocation(line: 5526, column: 9, scope: !16505)
!16684 = !DILocation(line: 5526, column: 44, scope: !16505)
!16685 = !DILocation(line: 5526, column: 49, scope: !16505)
!16686 = !DILocation(line: 5526, column: 2, scope: !16505)
!16687 = !DILocation(line: 5528, column: 19, scope: !16505)
!16688 = !DILocation(line: 5528, column: 2, scope: !16505)
!16689 = !DILocation(line: 5529, column: 6, scope: !16505)
!16690 = !DILocation(line: 5530, column: 6, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5530, column: 6)
!16692 = !DILocation(line: 5530, column: 10, scope: !16691)
!16693 = !DILocation(line: 5530, column: 19, scope: !16691)
!16694 = !DILocation(line: 5530, column: 6, scope: !16505)
!16695 = !DILocation(line: 5531, column: 10, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16691, file: !3, line: 5530, column: 34)
!16697 = !DILocation(line: 5531, column: 13, scope: !16696)
!16698 = !DILocation(line: 5531, column: 38, scope: !16696)
!16699 = !DILocation(line: 5531, column: 43, scope: !16696)
!16700 = !DILocation(line: 5531, column: 3, scope: !16696)
!16701 = !DILocation(line: 5532, column: 2, scope: !16696)
!16702 = !DILocation(line: 5533, column: 9, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16704, file: !3, line: 5533, column: 7)
!16704 = distinct !DILexicalBlock(scope: !16691, file: !3, line: 5532, column: 9)
!16705 = !DILocation(line: 5533, column: 13, scope: !16703)
!16706 = !DILocation(line: 5533, column: 25, scope: !16703)
!16707 = !DILocation(line: 5533, column: 7, scope: !16704)
!16708 = !DILocation(line: 5535, column: 67, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 5533, column: 47)
!16710 = !DILocation(line: 5535, column: 66, scope: !16709)
!16711 = !DILocation(line: 5535, column: 72, scope: !16709)
!16712 = !DILocation(line: 5535, column: 77, scope: !16709)
!16713 = !DILocation(line: 5535, column: 4, scope: !16709)
!16714 = !DILocation(line: 5536, column: 3, scope: !16709)
!16715 = !DILocation(line: 5537, column: 39, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 5536, column: 10)
!16717 = !DILocation(line: 5537, column: 44, scope: !16716)
!16718 = !DILocation(line: 5537, column: 4, scope: !16716)
!16719 = !DILocation(line: 5538, column: 27, scope: !16716)
!16720 = !DILocation(line: 5538, column: 4, scope: !16716)
!16721 = !DILocation(line: 5541, column: 36, scope: !16505)
!16722 = !DILocation(line: 5541, column: 41, scope: !16505)
!16723 = !DILocation(line: 5541, column: 2, scope: !16505)
!16724 = !DILocation(line: 5542, column: 36, scope: !16505)
!16725 = !DILocation(line: 5542, column: 41, scope: !16505)
!16726 = !DILocation(line: 5542, column: 2, scope: !16505)
!16727 = !DILocation(line: 5543, column: 6, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5543, column: 6)
!16729 = !DILocation(line: 5543, column: 20, scope: !16728)
!16730 = !DILocation(line: 5543, column: 6, scope: !16505)
!16731 = !DILocation(line: 5544, column: 7, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16733, file: !3, line: 5544, column: 7)
!16733 = distinct !DILexicalBlock(scope: !16728, file: !3, line: 5543, column: 27)
!16734 = !DILocation(line: 5544, column: 25, scope: !16732)
!16735 = !DILocation(line: 5544, column: 7, scope: !16733)
!16736 = !DILocation(line: 5545, column: 42, scope: !16732)
!16737 = !DILocation(line: 5545, column: 47, scope: !16732)
!16738 = !DILocation(line: 5545, column: 4, scope: !16732)
!16739 = !DILocation(line: 5547, column: 35, scope: !16732)
!16740 = !DILocation(line: 5547, column: 40, scope: !16732)
!16741 = !DILocation(line: 5547, column: 4, scope: !16732)
!16742 = !DILocation(line: 5548, column: 2, scope: !16733)
!16743 = !DILocation(line: 5549, column: 10, scope: !16728)
!16744 = !DILocation(line: 5549, column: 24, scope: !16728)
!16745 = !DILocation(line: 5549, column: 34, scope: !16728)
!16746 = !DILocation(line: 5549, column: 39, scope: !16728)
!16747 = !DILocation(line: 5549, column: 3, scope: !16728)
!16748 = !DILocation(line: 5550, column: 30, scope: !16505)
!16749 = !DILocation(line: 5550, column: 35, scope: !16505)
!16750 = !DILocation(line: 5550, column: 2, scope: !16505)
!16751 = !DILocation(line: 5551, column: 10, scope: !16505)
!16752 = !DILocation(line: 5551, column: 14, scope: !16505)
!16753 = !DILocation(line: 5551, column: 22, scope: !16505)
!16754 = !DILocation(line: 5551, column: 49, scope: !16505)
!16755 = !DILocation(line: 5551, column: 73, scope: !16505)
!16756 = !DILocation(line: 5552, column: 4, scope: !16505)
!16757 = !DILocation(line: 5552, column: 9, scope: !16505)
!16758 = !DILocation(line: 5551, column: 2, scope: !16505)
!16759 = !DILocation(line: 5553, column: 45, scope: !16505)
!16760 = !DILocation(line: 5553, column: 50, scope: !16505)
!16761 = !DILocation(line: 5553, column: 2, scope: !16505)
!16762 = !DILocation(line: 5554, column: 31, scope: !16505)
!16763 = !DILocation(line: 5554, column: 36, scope: !16505)
!16764 = !DILocation(line: 5554, column: 2, scope: !16505)
!16765 = !DILocation(line: 5555, column: 6, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5555, column: 6)
!16767 = !DILocation(line: 5555, column: 10, scope: !16766)
!16768 = !DILocation(line: 5555, column: 6, scope: !16505)
!16769 = !DILocation(line: 5556, column: 37, scope: !16766)
!16770 = !DILocation(line: 5556, column: 42, scope: !16766)
!16771 = !DILocation(line: 5556, column: 3, scope: !16766)
!16772 = !DILocation(line: 5558, column: 12, scope: !16505)
!16773 = !DILocation(line: 5558, column: 17, scope: !16505)
!16774 = !DILocation(line: 5558, column: 6, scope: !16505)
!16775 = !DILocation(line: 5558, column: 4, scope: !16505)
!16776 = !DILocation(line: 5559, column: 7, scope: !16777)
!16777 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5559, column: 6)
!16778 = !DILocation(line: 5559, column: 9, scope: !16777)
!16779 = !DILocation(line: 5559, column: 39, scope: !16777)
!16780 = !DILocation(line: 5559, column: 6, scope: !16505)
!16781 = !DILocation(line: 5560, column: 37, scope: !16777)
!16782 = !DILocation(line: 5560, column: 36, scope: !16777)
!16783 = !DILocation(line: 5560, column: 40, scope: !16777)
!16784 = !DILocation(line: 5560, column: 45, scope: !16777)
!16785 = !DILocation(line: 5560, column: 3, scope: !16777)
!16786 = !DILocation(line: 5562, column: 11, scope: !16505)
!16787 = !DILocation(line: 5562, column: 2, scope: !16505)
!16788 = !DILocation(line: 5563, column: 2, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16790, file: !3, line: 5563, column: 2)
!16790 = distinct !DILexicalBlock(scope: !16791, file: !3, line: 5563, column: 2)
!16791 = distinct !DILexicalBlock(scope: !16792, file: !3, line: 5563, column: 2)
!16792 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5563, column: 2)
!16793 = !DILocation(line: 5564, column: 15, scope: !16505)
!16794 = !DILocation(line: 5564, column: 20, scope: !16505)
!16795 = !DILocation(line: 5564, column: 9, scope: !16505)
!16796 = !DILocation(line: 5564, column: 39, scope: !16505)
!16797 = !DILocation(line: 5564, column: 65, scope: !16505)
!16798 = !DILocation(line: 5564, column: 70, scope: !16505)
!16799 = !DILocation(line: 5564, column: 2, scope: !16505)
!16800 = !DILocation(line: 5566, column: 27, scope: !16505)
!16801 = !DILocation(line: 5566, column: 32, scope: !16505)
!16802 = !DILocation(line: 5566, column: 36, scope: !16505)
!16803 = !DILocation(line: 5566, column: 2, scope: !16505)
!16804 = !DILocation(line: 5567, column: 11, scope: !16505)
!16805 = !DILocation(line: 5567, column: 2, scope: !16505)
!16806 = !DILocation(line: 5568, column: 33, scope: !16505)
!16807 = !DILocation(line: 5568, column: 38, scope: !16505)
!16808 = !DILocation(line: 5568, column: 2, scope: !16505)
!16809 = !DILocation(line: 5569, column: 29, scope: !16505)
!16810 = !DILocation(line: 5569, column: 34, scope: !16505)
!16811 = !DILocation(line: 5569, column: 2, scope: !16505)
!16812 = !DILocation(line: 5570, column: 11, scope: !16505)
!16813 = !DILocation(line: 5570, column: 2, scope: !16505)
!16814 = !DILocation(line: 5572, column: 21, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5572, column: 6)
!16816 = !DILocation(line: 5572, column: 6, scope: !16815)
!16817 = !DILocation(line: 5572, column: 6, scope: !16505)
!16818 = !DILocation(line: 5573, column: 3, scope: !16815)
!16819 = !DILocation(line: 5576, column: 26, scope: !16505)
!16820 = !DILocation(line: 5576, column: 31, scope: !16505)
!16821 = !DILocation(line: 5576, column: 35, scope: !16505)
!16822 = !DILocation(line: 5576, column: 2, scope: !16505)
!16823 = !DILocation(line: 5578, column: 17, scope: !16505)
!16824 = !DILocation(line: 5578, column: 21, scope: !16505)
!16825 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !16509)
!16826 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !16509)
!16827 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !16509)
!16828 = !DILocation(line: 5579, column: 33, scope: !16505)
!16829 = !DILocation(line: 5579, column: 38, scope: !16505)
!16830 = !DILocation(line: 5579, column: 2, scope: !16505)
!16831 = !DILocation(line: 5580, column: 12, scope: !16505)
!16832 = !DILocation(line: 5580, column: 17, scope: !16505)
!16833 = !DILocation(line: 5580, column: 2, scope: !16505)
!16834 = !DILocation(line: 5581, column: 32, scope: !16505)
!16835 = !DILocation(line: 5581, column: 37, scope: !16505)
!16836 = !DILocation(line: 5581, column: 2, scope: !16505)
!16837 = !DILocation(line: 5582, column: 32, scope: !16505)
!16838 = !DILocation(line: 5582, column: 37, scope: !16505)
!16839 = !DILocation(line: 5582, column: 2, scope: !16505)
!16840 = !DILocation(line: 5583, column: 44, scope: !16505)
!16841 = !DILocation(line: 5583, column: 49, scope: !16505)
!16842 = !DILocation(line: 5583, column: 2, scope: !16505)
!16843 = !DILocation(line: 5587, column: 8, scope: !16505)
!16844 = !DILocation(line: 5587, column: 13, scope: !16505)
!16845 = !DILocation(line: 5587, column: 2, scope: !16505)
!16846 = !DILocation(line: 5588, column: 33, scope: !16505)
!16847 = !DILocation(line: 5588, column: 38, scope: !16505)
!16848 = !DILocation(line: 5588, column: 2, scope: !16505)
!16849 = !DILocation(line: 5592, column: 2, scope: !16505)
!16850 = !DILocation(line: 5592, column: 6, scope: !16505)
!16851 = !DILocation(line: 5592, column: 16, scope: !16505)
!16852 = !DILocation(line: 5593, column: 28, scope: !16505)
!16853 = !DILocation(line: 5593, column: 8, scope: !16505)
!16854 = !DILocation(line: 5593, column: 6, scope: !16505)
!16855 = !DILocation(line: 5594, column: 16, scope: !16505)
!16856 = !DILocation(line: 5594, column: 2, scope: !16505)
!16857 = !DILocation(line: 5595, column: 20, scope: !16505)
!16858 = !DILocation(line: 5595, column: 2, scope: !16505)
!16859 = !DILocation(line: 5596, column: 17, scope: !16505)
!16860 = !DILocation(line: 5596, column: 2, scope: !16505)
!16861 = !DILocation(line: 5598, column: 6, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5598, column: 6)
!16863 = !DILocation(line: 5598, column: 6, scope: !16505)
!16864 = !DILocation(line: 5599, column: 20, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16862, file: !3, line: 5598, column: 11)
!16866 = !DILocation(line: 5599, column: 3, scope: !16865)
!16867 = !DILocation(line: 5600, column: 2, scope: !16865)
!16868 = !DILocation(line: 5601, column: 15, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16862, file: !3, line: 5600, column: 9)
!16870 = !DILocation(line: 5601, column: 3, scope: !16869)
!16871 = !DILocation(line: 5602, column: 21, scope: !16869)
!16872 = !DILocation(line: 5602, column: 3, scope: !16869)
!16873 = !DILocation(line: 5604, column: 6, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5604, column: 6)
!16875 = !DILocation(line: 5604, column: 6, scope: !16505)
!16876 = !DILocation(line: 5605, column: 14, scope: !16874)
!16877 = !DILocation(line: 5605, column: 18, scope: !16874)
!16878 = !DILocation(line: 5605, column: 28, scope: !16874)
!16879 = !DILocation(line: 5605, column: 36, scope: !16874)
!16880 = !DILocation(line: 5605, column: 3, scope: !16874)
!16881 = !DILocation(line: 5608, column: 6, scope: !16882)
!16882 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5608, column: 6)
!16883 = !DILocation(line: 5608, column: 10, scope: !16882)
!16884 = !DILocation(line: 5608, column: 22, scope: !16882)
!16885 = !DILocation(line: 5608, column: 6, scope: !16505)
!16886 = !DILocation(line: 5609, column: 14, scope: !16882)
!16887 = !DILocation(line: 5609, column: 18, scope: !16882)
!16888 = !DILocation(line: 5610, column: 18, scope: !16882)
!16889 = !DILocation(line: 5610, column: 26, scope: !16882)
!16890 = !DILocation(line: 5610, column: 4, scope: !16882)
!16891 = !DILocation(line: 5609, column: 3, scope: !16882)
!16892 = !DILocation(line: 5612, column: 19, scope: !16505)
!16893 = !DILocation(line: 5612, column: 23, scope: !16505)
!16894 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !16507)
!16895 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !16507)
!16896 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !16507)
!16897 = !DILocation(line: 5617, column: 6, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 5617, column: 6)
!16899 = !DILocation(line: 5617, column: 11, scope: !16898)
!16900 = !DILocation(line: 5617, column: 20, scope: !16898)
!16901 = !DILocation(line: 5617, column: 6, scope: !16505)
!16902 = !DILocation(line: 5618, column: 19, scope: !16898)
!16903 = !DILocation(line: 5618, column: 24, scope: !16898)
!16904 = !DILocation(line: 5618, column: 29, scope: !16898)
!16905 = !DILocation(line: 5618, column: 3, scope: !16898)
!16906 = !DILocation(line: 5620, column: 2, scope: !16505)
!16907 = !DILabel(scope: !16505, name: "out_drain", file: !3, line: 5621)
!16908 = !DILocation(line: 5621, column: 1, scope: !16505)
!16909 = !DILocation(line: 5622, column: 16, scope: !16505)
!16910 = !DILocation(line: 5622, column: 2, scope: !16505)
!16911 = !DILocation(line: 5623, column: 9, scope: !16505)
!16912 = !DILocation(line: 5623, column: 2, scope: !16505)
!16913 = !DILocation(line: 5624, column: 1, scope: !16505)
!16914 = distinct !DISubprogram(name: "nv_close", scope: !3, file: !3, line: 5626, type: !402, scopeLine: 5627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16915 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !16916)
!16916 = distinct !DILocation(line: 5652, column: 2, scope: !16914)
!16917 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !16918)
!16918 = distinct !DILocation(line: 5642, column: 2, scope: !16914)
!16919 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 5633, column: 2, scope: !16914)
!16921 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !16922)
!16922 = distinct !DILocation(line: 5631, column: 2, scope: !16914)
!16923 = !DILocalVariable(name: "dev", arg: 1, scope: !16914, file: !3, line: 5626, type: !290)
!16924 = !DILocation(line: 5626, column: 40, scope: !16914)
!16925 = !DILocalVariable(name: "np", scope: !16914, file: !3, line: 5628, type: !7446)
!16926 = !DILocation(line: 5628, column: 18, scope: !16914)
!16927 = !DILocation(line: 5628, column: 35, scope: !16914)
!16928 = !DILocation(line: 5628, column: 23, scope: !16914)
!16929 = !DILocalVariable(name: "base", scope: !16914, file: !3, line: 5629, type: !793)
!16930 = !DILocation(line: 5629, column: 14, scope: !16914)
!16931 = !DILocation(line: 5631, column: 17, scope: !16914)
!16932 = !DILocation(line: 5631, column: 21, scope: !16914)
!16933 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !16922)
!16934 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !16922)
!16935 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !16922)
!16936 = !DILocation(line: 5632, column: 2, scope: !16914)
!16937 = !DILocation(line: 5632, column: 6, scope: !16914)
!16938 = !DILocation(line: 5632, column: 18, scope: !16914)
!16939 = !DILocation(line: 5633, column: 19, scope: !16914)
!16940 = !DILocation(line: 5633, column: 23, scope: !16914)
!16941 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !16920)
!16942 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !16920)
!16943 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !16920)
!16944 = !DILocation(line: 5634, column: 18, scope: !16914)
!16945 = !DILocation(line: 5634, column: 2, scope: !16914)
!16946 = !DILocation(line: 5635, column: 18, scope: !16914)
!16947 = !DILocation(line: 5635, column: 22, scope: !16914)
!16948 = !DILocation(line: 5635, column: 31, scope: !16914)
!16949 = !DILocation(line: 5635, column: 2, scope: !16914)
!16950 = !DILocation(line: 5637, column: 2, scope: !16914)
!16951 = !DILocation(line: 5638, column: 2, scope: !16914)
!16952 = !DILocation(line: 5639, column: 2, scope: !16914)
!16953 = !DILocation(line: 5641, column: 19, scope: !16914)
!16954 = !DILocation(line: 5641, column: 2, scope: !16914)
!16955 = !DILocation(line: 5642, column: 17, scope: !16914)
!16956 = !DILocation(line: 5642, column: 21, scope: !16914)
!16957 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !16918)
!16958 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !16918)
!16959 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !16918)
!16960 = !DILocation(line: 5643, column: 18, scope: !16914)
!16961 = !DILocation(line: 5643, column: 2, scope: !16914)
!16962 = !DILocation(line: 5644, column: 15, scope: !16914)
!16963 = !DILocation(line: 5644, column: 2, scope: !16914)
!16964 = !DILocation(line: 5645, column: 16, scope: !16914)
!16965 = !DILocation(line: 5645, column: 2, scope: !16914)
!16966 = !DILocation(line: 5648, column: 20, scope: !16914)
!16967 = !DILocation(line: 5648, column: 9, scope: !16914)
!16968 = !DILocation(line: 5648, column: 7, scope: !16914)
!16969 = !DILocation(line: 5649, column: 27, scope: !16914)
!16970 = !DILocation(line: 5649, column: 32, scope: !16914)
!16971 = !DILocation(line: 5649, column: 36, scope: !16914)
!16972 = !DILocation(line: 5649, column: 2, scope: !16914)
!16973 = !DILocation(line: 5650, column: 11, scope: !16914)
!16974 = !DILocation(line: 5650, column: 2, scope: !16914)
!16975 = !DILocation(line: 5652, column: 19, scope: !16914)
!16976 = !DILocation(line: 5652, column: 23, scope: !16914)
!16977 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !16916)
!16978 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !16916)
!16979 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !16916)
!16980 = !DILocation(line: 5654, column: 14, scope: !16914)
!16981 = !DILocation(line: 5654, column: 2, scope: !16914)
!16982 = !DILocation(line: 5656, column: 16, scope: !16914)
!16983 = !DILocation(line: 5656, column: 2, scope: !16914)
!16984 = !DILocation(line: 5658, column: 6, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16914, file: !3, line: 5658, column: 6)
!16986 = !DILocation(line: 5658, column: 10, scope: !16985)
!16987 = !DILocation(line: 5658, column: 21, scope: !16985)
!16988 = !DILocation(line: 5658, column: 25, scope: !16985)
!16989 = !DILocation(line: 5658, column: 6, scope: !16914)
!16990 = !DILocation(line: 5659, column: 16, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16985, file: !3, line: 5658, column: 41)
!16992 = !DILocation(line: 5659, column: 3, scope: !16991)
!16993 = !DILocation(line: 5660, column: 45, scope: !16991)
!16994 = !DILocation(line: 5660, column: 50, scope: !16991)
!16995 = !DILocation(line: 5660, column: 3, scope: !16991)
!16996 = !DILocation(line: 5661, column: 15, scope: !16991)
!16997 = !DILocation(line: 5661, column: 3, scope: !16991)
!16998 = !DILocation(line: 5662, column: 2, scope: !16991)
!16999 = !DILocation(line: 5664, column: 10, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !16985, file: !3, line: 5662, column: 9)
!17001 = !DILocation(line: 5664, column: 15, scope: !17000)
!17002 = !DILocation(line: 5664, column: 19, scope: !17000)
!17003 = !DILocation(line: 5665, column: 17, scope: !17000)
!17004 = !DILocation(line: 5665, column: 22, scope: !17000)
!17005 = !DILocation(line: 5665, column: 26, scope: !17000)
!17006 = !DILocation(line: 5665, column: 10, scope: !17000)
!17007 = !DILocation(line: 5665, column: 54, scope: !17000)
!17008 = !DILocation(line: 5664, column: 3, scope: !17000)
!17009 = !DILocation(line: 5666, column: 16, scope: !17000)
!17010 = !DILocation(line: 5666, column: 3, scope: !17000)
!17011 = !DILocation(line: 5671, column: 2, scope: !16914)
!17012 = distinct !DISubprogram(name: "nv_start_xmit", scope: !3, file: !3, line: 2210, type: !412, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17013 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !17014)
!17014 = distinct !DILocation(line: 2370, column: 2, scope: !17012)
!17015 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !17014)
!17016 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !17017)
!17017 = distinct !DILocation(line: 2359, column: 2, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !17019, file: !3, line: 2359, column: 2)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 2359, column: 2)
!17020 = distinct !DILexicalBlock(scope: !17021, file: !3, line: 2359, column: 2)
!17021 = distinct !DILexicalBlock(scope: !17022, file: !3, line: 2359, column: 2)
!17022 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2359, column: 2)
!17023 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !17024)
!17024 = distinct !DILocation(line: 2251, column: 2, scope: !17012)
!17025 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !17024)
!17026 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !17027)
!17027 = distinct !DILocation(line: 2243, column: 3, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17029, file: !3, line: 2240, column: 40)
!17029 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2240, column: 6)
!17030 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !17027)
!17031 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !17032)
!17032 = distinct !DILocation(line: 2238, column: 2, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17034, file: !3, line: 2238, column: 2)
!17034 = distinct !DILexicalBlock(scope: !17035, file: !3, line: 2238, column: 2)
!17035 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 2238, column: 2)
!17036 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 2238, column: 2)
!17037 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2238, column: 2)
!17038 = !DILocalVariable(name: "skb", arg: 1, scope: !17012, file: !3, line: 2210, type: !415)
!17039 = !DILocation(line: 2210, column: 50, scope: !17012)
!17040 = !DILocalVariable(name: "dev", arg: 2, scope: !17012, file: !3, line: 2210, type: !290)
!17041 = !DILocation(line: 2210, column: 74, scope: !17012)
!17042 = !DILocalVariable(name: "np", scope: !17012, file: !3, line: 2212, type: !7446)
!17043 = !DILocation(line: 2212, column: 18, scope: !17012)
!17044 = !DILocation(line: 2212, column: 35, scope: !17012)
!17045 = !DILocation(line: 2212, column: 23, scope: !17012)
!17046 = !DILocalVariable(name: "tx_flags", scope: !17012, file: !3, line: 2213, type: !987)
!17047 = !DILocation(line: 2213, column: 6, scope: !17012)
!17048 = !DILocalVariable(name: "tx_flags_extra", scope: !17012, file: !3, line: 2214, type: !987)
!17049 = !DILocation(line: 2214, column: 6, scope: !17012)
!17050 = !DILocation(line: 2214, column: 24, scope: !17012)
!17051 = !DILocation(line: 2214, column: 28, scope: !17012)
!17052 = !DILocation(line: 2214, column: 37, scope: !17012)
!17053 = !DILocalVariable(name: "fragments", scope: !17012, file: !3, line: 2215, type: !7)
!17054 = !DILocation(line: 2215, column: 15, scope: !17012)
!17055 = !DILocation(line: 2215, column: 27, scope: !17012)
!17056 = !DILocation(line: 2215, column: 44, scope: !17012)
!17057 = !DILocalVariable(name: "i", scope: !17012, file: !3, line: 2216, type: !7)
!17058 = !DILocation(line: 2216, column: 15, scope: !17012)
!17059 = !DILocalVariable(name: "offset", scope: !17012, file: !3, line: 2217, type: !987)
!17060 = !DILocation(line: 2217, column: 6, scope: !17012)
!17061 = !DILocalVariable(name: "bcnt", scope: !17012, file: !3, line: 2218, type: !987)
!17062 = !DILocation(line: 2218, column: 6, scope: !17012)
!17063 = !DILocalVariable(name: "size", scope: !17012, file: !3, line: 2219, type: !987)
!17064 = !DILocation(line: 2219, column: 6, scope: !17012)
!17065 = !DILocation(line: 2219, column: 25, scope: !17012)
!17066 = !DILocation(line: 2219, column: 13, scope: !17012)
!17067 = !DILocalVariable(name: "entries", scope: !17012, file: !3, line: 2220, type: !987)
!17068 = !DILocation(line: 2220, column: 6, scope: !17012)
!17069 = !DILocation(line: 2220, column: 17, scope: !17012)
!17070 = !DILocation(line: 2220, column: 22, scope: !17012)
!17071 = !DILocation(line: 2220, column: 51, scope: !17012)
!17072 = !DILocation(line: 2220, column: 56, scope: !17012)
!17073 = !DILocation(line: 2220, column: 50, scope: !17012)
!17074 = !DILocation(line: 2220, column: 47, scope: !17012)
!17075 = !DILocalVariable(name: "empty_slots", scope: !17012, file: !3, line: 2221, type: !987)
!17076 = !DILocation(line: 2221, column: 6, scope: !17012)
!17077 = !DILocalVariable(name: "put_tx", scope: !17012, file: !3, line: 2222, type: !7820)
!17078 = !DILocation(line: 2222, column: 20, scope: !17012)
!17079 = !DILocalVariable(name: "start_tx", scope: !17012, file: !3, line: 2223, type: !7820)
!17080 = !DILocation(line: 2223, column: 20, scope: !17012)
!17081 = !DILocalVariable(name: "prev_tx", scope: !17012, file: !3, line: 2224, type: !7820)
!17082 = !DILocation(line: 2224, column: 20, scope: !17012)
!17083 = !DILocalVariable(name: "prev_tx_ctx", scope: !17012, file: !3, line: 2225, type: !7837)
!17084 = !DILocation(line: 2225, column: 21, scope: !17012)
!17085 = !DILocalVariable(name: "tmp_tx_ctx", scope: !17012, file: !3, line: 2226, type: !7837)
!17086 = !DILocation(line: 2226, column: 21, scope: !17012)
!17087 = !DILocalVariable(name: "start_tx_ctx", scope: !17012, file: !3, line: 2226, type: !7837)
!17088 = !DILocation(line: 2226, column: 41, scope: !17012)
!17089 = !DILocalVariable(name: "flags", scope: !17012, file: !3, line: 2227, type: !312)
!17090 = !DILocation(line: 2227, column: 16, scope: !17012)
!17091 = !DILocalVariable(name: "ret", scope: !17012, file: !3, line: 2228, type: !414)
!17092 = !DILocation(line: 2228, column: 14, scope: !17012)
!17093 = !DILocation(line: 2231, column: 9, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2231, column: 2)
!17095 = !DILocation(line: 2231, column: 7, scope: !17094)
!17096 = !DILocation(line: 2231, column: 14, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 2231, column: 2)
!17098 = !DILocation(line: 2231, column: 18, scope: !17097)
!17099 = !DILocation(line: 2231, column: 16, scope: !17097)
!17100 = !DILocation(line: 2231, column: 2, scope: !17094)
!17101 = !DILocalVariable(name: "frag_size", scope: !17102, file: !3, line: 2232, type: !987)
!17102 = distinct !DILexicalBlock(scope: !17097, file: !3, line: 2231, column: 34)
!17103 = !DILocation(line: 2232, column: 7, scope: !17102)
!17104 = !DILocation(line: 2232, column: 34, scope: !17102)
!17105 = !DILocation(line: 2232, column: 51, scope: !17102)
!17106 = !DILocation(line: 2232, column: 57, scope: !17102)
!17107 = !DILocation(line: 2232, column: 19, scope: !17102)
!17108 = !DILocation(line: 2234, column: 15, scope: !17102)
!17109 = !DILocation(line: 2234, column: 25, scope: !17102)
!17110 = !DILocation(line: 2235, column: 9, scope: !17102)
!17111 = !DILocation(line: 2235, column: 19, scope: !17102)
!17112 = !DILocation(line: 2235, column: 8, scope: !17102)
!17113 = !DILocation(line: 2234, column: 50, scope: !17102)
!17114 = !DILocation(line: 2234, column: 11, scope: !17102)
!17115 = !DILocation(line: 2236, column: 2, scope: !17102)
!17116 = !DILocation(line: 2231, column: 30, scope: !17097)
!17117 = !DILocation(line: 2231, column: 2, scope: !17097)
!17118 = distinct !{!17118, !17100, !17119}
!17119 = !DILocation(line: 2236, column: 2, scope: !17094)
!17120 = !DILocation(line: 2238, column: 2, scope: !17012)
!17121 = !DILocation(line: 2238, column: 2, scope: !17037)
!17122 = !DILocalVariable(name: "__dummy", scope: !17123, file: !3, line: 2238, type: !312)
!17123 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 2238, column: 2)
!17124 = !DILocation(line: 2238, column: 2, scope: !17123)
!17125 = !DILocalVariable(name: "__dummy2", scope: !17123, file: !3, line: 2238, type: !312)
!17126 = !DILocation(line: 2238, column: 2, scope: !17036)
!17127 = !DILocation(line: 2238, column: 2, scope: !17035)
!17128 = !DILocation(line: 2238, column: 2, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17035, file: !3, line: 2238, column: 2)
!17130 = !DILocalVariable(name: "__dummy", scope: !17131, file: !3, line: 2238, type: !312)
!17131 = distinct !DILexicalBlock(scope: !17132, file: !3, line: 2238, column: 2)
!17132 = distinct !DILexicalBlock(scope: !17129, file: !3, line: 2238, column: 2)
!17133 = !DILocation(line: 2238, column: 2, scope: !17131)
!17134 = !DILocalVariable(name: "__dummy2", scope: !17131, file: !3, line: 2238, type: !312)
!17135 = !DILocation(line: 2238, column: 2, scope: !17132)
!17136 = !DILocation(line: 2238, column: 2, scope: !17034)
!17137 = !{i32 -2139484177}
!17138 = !DILocation(line: 2238, column: 2, scope: !17033)
!17139 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !17032)
!17140 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !17032)
!17141 = !DILocation(line: 2239, column: 38, scope: !17012)
!17142 = !DILocation(line: 2239, column: 16, scope: !17012)
!17143 = !DILocation(line: 2239, column: 14, scope: !17012)
!17144 = !DILocation(line: 2240, column: 6, scope: !17029)
!17145 = !DILocation(line: 2240, column: 6, scope: !17012)
!17146 = !DILocation(line: 2241, column: 20, scope: !17028)
!17147 = !DILocation(line: 2241, column: 3, scope: !17028)
!17148 = !DILocation(line: 2242, column: 3, scope: !17028)
!17149 = !DILocation(line: 2242, column: 7, scope: !17028)
!17150 = !DILocation(line: 2242, column: 15, scope: !17028)
!17151 = !DILocation(line: 2243, column: 27, scope: !17028)
!17152 = !DILocation(line: 2243, column: 31, scope: !17028)
!17153 = !DILocation(line: 2243, column: 37, scope: !17028)
!17154 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !17027)
!17155 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !17027)
!17156 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !17027)
!17157 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !17027)
!17158 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !17027)
!17159 = !DILocation(line: 2248, column: 7, scope: !17028)
!17160 = !DILocation(line: 2249, column: 3, scope: !17028)
!17161 = !DILocation(line: 2251, column: 26, scope: !17012)
!17162 = !DILocation(line: 2251, column: 30, scope: !17012)
!17163 = !DILocation(line: 2251, column: 36, scope: !17012)
!17164 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !17024)
!17165 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !17024)
!17166 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !17024)
!17167 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !17024)
!17168 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !17024)
!17169 = !DILocation(line: 2253, column: 22, scope: !17012)
!17170 = !DILocation(line: 2253, column: 26, scope: !17012)
!17171 = !DILocation(line: 2253, column: 33, scope: !17012)
!17172 = !DILocation(line: 2253, column: 20, scope: !17012)
!17173 = !DILocation(line: 2253, column: 11, scope: !17012)
!17174 = !DILocation(line: 2256, column: 2, scope: !17012)
!17175 = !DILocation(line: 2257, column: 11, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2256, column: 5)
!17177 = !DILocation(line: 2257, column: 16, scope: !17176)
!17178 = !DILocation(line: 2257, column: 10, scope: !17176)
!17179 = !DILocation(line: 2257, column: 63, scope: !17176)
!17180 = !DILocation(line: 2257, column: 8, scope: !17176)
!17181 = !DILocation(line: 2258, column: 25, scope: !17176)
!17182 = !DILocation(line: 2258, column: 3, scope: !17176)
!17183 = !DILocation(line: 2258, column: 7, scope: !17176)
!17184 = !DILocation(line: 2258, column: 19, scope: !17176)
!17185 = !DILocation(line: 2258, column: 23, scope: !17176)
!17186 = !DILocation(line: 2261, column: 7, scope: !17187)
!17187 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 2261, column: 7)
!17188 = !DILocation(line: 2261, column: 7, scope: !17176)
!17189 = !DILocation(line: 2264, column: 22, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17187, file: !3, line: 2262, column: 36)
!17191 = !DILocation(line: 2264, column: 4, scope: !17190)
!17192 = !DILocation(line: 2265, column: 28, scope: !17190)
!17193 = !DILocation(line: 2265, column: 32, scope: !17190)
!17194 = !DILocation(line: 2265, column: 4, scope: !17190)
!17195 = !DILocation(line: 2266, column: 4, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17190, file: !3, line: 2266, column: 4)
!17197 = !DILocation(line: 2266, column: 4, scope: !17198)
!17198 = distinct !DILexicalBlock(scope: !17196, file: !3, line: 2266, column: 4)
!17199 = !DILocalVariable(name: "__vpp_verify", scope: !17200, file: !3, line: 2266, type: !3258)
!17200 = distinct !DILexicalBlock(scope: !17198, file: !3, line: 2266, column: 4)
!17201 = !DILocation(line: 2266, column: 4, scope: !17200)
!17202 = !DILocalVariable(name: "pao_ID__", scope: !17203, file: !3, line: 2266, type: !12599)
!17203 = distinct !DILexicalBlock(scope: !17198, file: !3, line: 2266, column: 4)
!17204 = !DILocation(line: 2266, column: 4, scope: !17203)
!17205 = !DILocation(line: 2266, column: 4, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17207, file: !3, line: 2266, column: 4)
!17207 = distinct !DILexicalBlock(scope: !17203, file: !3, line: 2266, column: 4)
!17208 = !{i32 -2139476094}
!17209 = !DILocation(line: 2267, column: 26, scope: !17190)
!17210 = !DILocation(line: 2267, column: 30, scope: !17190)
!17211 = !DILocation(line: 2267, column: 4, scope: !17190)
!17212 = !DILocation(line: 2269, column: 8, scope: !17190)
!17213 = !DILocation(line: 2271, column: 4, scope: !17190)
!17214 = !DILocation(line: 2273, column: 29, scope: !17176)
!17215 = !DILocation(line: 2273, column: 3, scope: !17176)
!17216 = !DILocation(line: 2273, column: 7, scope: !17176)
!17217 = !DILocation(line: 2273, column: 19, scope: !17176)
!17218 = !DILocation(line: 2273, column: 27, scope: !17176)
!17219 = !DILocation(line: 2274, column: 3, scope: !17176)
!17220 = !DILocation(line: 2274, column: 7, scope: !17176)
!17221 = !DILocation(line: 2274, column: 19, scope: !17176)
!17222 = !DILocation(line: 2274, column: 30, scope: !17176)
!17223 = !DILocation(line: 2275, column: 17, scope: !17176)
!17224 = !DILocation(line: 2275, column: 3, scope: !17176)
!17225 = !DILocation(line: 2275, column: 11, scope: !17176)
!17226 = !DILocation(line: 2275, column: 15, scope: !17176)
!17227 = !DILocation(line: 2276, column: 21, scope: !17176)
!17228 = !DILocation(line: 2276, column: 3, scope: !17176)
!17229 = !DILocation(line: 2276, column: 11, scope: !17176)
!17230 = !DILocation(line: 2276, column: 19, scope: !17176)
!17231 = !DILocation(line: 2278, column: 14, scope: !17176)
!17232 = !DILocation(line: 2278, column: 18, scope: !17176)
!17233 = !DILocation(line: 2278, column: 12, scope: !17176)
!17234 = !DILocation(line: 2279, column: 13, scope: !17176)
!17235 = !DILocation(line: 2279, column: 10, scope: !17176)
!17236 = !DILocation(line: 2280, column: 11, scope: !17176)
!17237 = !DILocation(line: 2280, column: 8, scope: !17176)
!17238 = !DILocation(line: 2281, column: 7, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 2281, column: 7)
!17240 = !DILocation(line: 2281, column: 7, scope: !17176)
!17241 = !DILocation(line: 2282, column: 13, scope: !17239)
!17242 = !DILocation(line: 2282, column: 17, scope: !17239)
!17243 = !DILocation(line: 2282, column: 25, scope: !17239)
!17244 = !DILocation(line: 2282, column: 11, scope: !17239)
!17245 = !DILocation(line: 2282, column: 4, scope: !17239)
!17246 = !DILocation(line: 2283, column: 7, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 2283, column: 7)
!17248 = !DILocation(line: 2283, column: 7, scope: !17176)
!17249 = !DILocation(line: 2284, column: 21, scope: !17247)
!17250 = !DILocation(line: 2284, column: 25, scope: !17247)
!17251 = !DILocation(line: 2284, column: 4, scope: !17247)
!17252 = !DILocation(line: 2284, column: 8, scope: !17247)
!17253 = !DILocation(line: 2284, column: 19, scope: !17247)
!17254 = !DILocation(line: 2285, column: 2, scope: !17176)
!17255 = !DILocation(line: 2285, column: 11, scope: !17012)
!17256 = distinct !{!17256, !17174, !17257}
!17257 = !DILocation(line: 2285, column: 15, scope: !17012)
!17258 = !DILocation(line: 2288, column: 9, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2288, column: 2)
!17260 = !DILocation(line: 2288, column: 7, scope: !17259)
!17261 = !DILocation(line: 2288, column: 14, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17259, file: !3, line: 2288, column: 2)
!17263 = !DILocation(line: 2288, column: 18, scope: !17262)
!17264 = !DILocation(line: 2288, column: 16, scope: !17262)
!17265 = !DILocation(line: 2288, column: 2, scope: !17259)
!17266 = !DILocalVariable(name: "frag", scope: !17267, file: !3, line: 2289, type: !17268)
!17267 = distinct !DILexicalBlock(scope: !17262, file: !3, line: 2288, column: 34)
!17268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17269, size: 64)
!17269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7934)
!17270 = !DILocation(line: 2289, column: 21, scope: !17267)
!17271 = !DILocation(line: 2289, column: 29, scope: !17267)
!17272 = !DILocation(line: 2289, column: 46, scope: !17267)
!17273 = !DILocation(line: 2289, column: 52, scope: !17267)
!17274 = !DILocalVariable(name: "frag_size", scope: !17267, file: !3, line: 2290, type: !987)
!17275 = !DILocation(line: 2290, column: 7, scope: !17267)
!17276 = !DILocation(line: 2290, column: 33, scope: !17267)
!17277 = !DILocation(line: 2290, column: 19, scope: !17267)
!17278 = !DILocation(line: 2291, column: 10, scope: !17267)
!17279 = !DILocation(line: 2293, column: 3, scope: !17267)
!17280 = !DILocation(line: 2294, column: 9, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17282, file: !3, line: 2294, column: 8)
!17282 = distinct !DILexicalBlock(scope: !17267, file: !3, line: 2293, column: 6)
!17283 = !DILocation(line: 2294, column: 8, scope: !17282)
!17284 = !DILocation(line: 2295, column: 33, scope: !17281)
!17285 = !DILocation(line: 2295, column: 37, scope: !17281)
!17286 = !DILocation(line: 2295, column: 31, scope: !17281)
!17287 = !DILocation(line: 2295, column: 18, scope: !17281)
!17288 = !DILocation(line: 2295, column: 5, scope: !17281)
!17289 = !DILocation(line: 2297, column: 12, scope: !17282)
!17290 = !DILocation(line: 2297, column: 22, scope: !17282)
!17291 = !DILocation(line: 2297, column: 11, scope: !17282)
!17292 = !DILocation(line: 2297, column: 69, scope: !17282)
!17293 = !DILocation(line: 2297, column: 9, scope: !17282)
!17294 = !DILocation(line: 2299, column: 9, scope: !17282)
!17295 = !DILocation(line: 2299, column: 13, scope: !17282)
!17296 = !DILocation(line: 2299, column: 22, scope: !17282)
!17297 = !DILocation(line: 2300, column: 8, scope: !17282)
!17298 = !DILocation(line: 2300, column: 14, scope: !17282)
!17299 = !DILocation(line: 2301, column: 8, scope: !17282)
!17300 = !DILocation(line: 2298, column: 26, scope: !17282)
!17301 = !DILocation(line: 2298, column: 4, scope: !17282)
!17302 = !DILocation(line: 2298, column: 8, scope: !17282)
!17303 = !DILocation(line: 2298, column: 20, scope: !17282)
!17304 = !DILocation(line: 2298, column: 24, scope: !17282)
!17305 = !DILocation(line: 2303, column: 8, scope: !17306)
!17306 = distinct !DILexicalBlock(scope: !17282, file: !3, line: 2303, column: 8)
!17307 = !DILocation(line: 2303, column: 8, scope: !17282)
!17308 = !DILocation(line: 2307, column: 5, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17306, file: !3, line: 2304, column: 37)
!17310 = !DILocation(line: 2308, column: 21, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17309, file: !3, line: 2307, column: 8)
!17312 = !DILocation(line: 2308, column: 25, scope: !17311)
!17313 = !DILocation(line: 2308, column: 6, scope: !17311)
!17314 = !DILocation(line: 2309, column: 10, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17311, file: !3, line: 2309, column: 10)
!17316 = !DILocation(line: 2309, column: 10, scope: !17311)
!17317 = !DILocation(line: 2310, column: 20, scope: !17315)
!17318 = !DILocation(line: 2310, column: 24, scope: !17315)
!17319 = !DILocation(line: 2310, column: 18, scope: !17315)
!17320 = !DILocation(line: 2310, column: 7, scope: !17315)
!17321 = !DILocation(line: 2311, column: 5, scope: !17311)
!17322 = !DILocation(line: 2311, column: 14, scope: !17309)
!17323 = !DILocation(line: 2311, column: 28, scope: !17309)
!17324 = !DILocation(line: 2311, column: 32, scope: !17309)
!17325 = !DILocation(line: 2311, column: 25, scope: !17309)
!17326 = distinct !{!17326, !17308, !17327}
!17327 = !DILocation(line: 2311, column: 42, scope: !17309)
!17328 = !DILocation(line: 2312, column: 23, scope: !17309)
!17329 = !DILocation(line: 2312, column: 5, scope: !17309)
!17330 = !DILocation(line: 2313, column: 22, scope: !17309)
!17331 = !DILocation(line: 2313, column: 5, scope: !17309)
!17332 = !DILocation(line: 2313, column: 9, scope: !17309)
!17333 = !DILocation(line: 2313, column: 20, scope: !17309)
!17334 = !DILocation(line: 2314, column: 29, scope: !17309)
!17335 = !DILocation(line: 2314, column: 33, scope: !17309)
!17336 = !DILocation(line: 2314, column: 5, scope: !17309)
!17337 = !DILocation(line: 2315, column: 5, scope: !17338)
!17338 = distinct !DILexicalBlock(scope: !17309, file: !3, line: 2315, column: 5)
!17339 = !DILocation(line: 2315, column: 5, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17338, file: !3, line: 2315, column: 5)
!17341 = !DILocalVariable(name: "__vpp_verify", scope: !17342, file: !3, line: 2315, type: !3258)
!17342 = distinct !DILexicalBlock(scope: !17340, file: !3, line: 2315, column: 5)
!17343 = !DILocation(line: 2315, column: 5, scope: !17342)
!17344 = !DILocalVariable(name: "pao_ID__", scope: !17345, file: !3, line: 2315, type: !12599)
!17345 = distinct !DILexicalBlock(scope: !17340, file: !3, line: 2315, column: 5)
!17346 = !DILocation(line: 2315, column: 5, scope: !17345)
!17347 = !DILocation(line: 2315, column: 5, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17349, file: !3, line: 2315, column: 5)
!17349 = distinct !DILexicalBlock(scope: !17345, file: !3, line: 2315, column: 5)
!17350 = !{i32 -2139466973}
!17351 = !DILocation(line: 2316, column: 27, scope: !17309)
!17352 = !DILocation(line: 2316, column: 31, scope: !17309)
!17353 = !DILocation(line: 2316, column: 5, scope: !17309)
!17354 = !DILocation(line: 2318, column: 9, scope: !17309)
!17355 = !DILocation(line: 2320, column: 5, scope: !17309)
!17356 = !DILocation(line: 2323, column: 30, scope: !17282)
!17357 = !DILocation(line: 2323, column: 4, scope: !17282)
!17358 = !DILocation(line: 2323, column: 8, scope: !17282)
!17359 = !DILocation(line: 2323, column: 20, scope: !17282)
!17360 = !DILocation(line: 2323, column: 28, scope: !17282)
!17361 = !DILocation(line: 2324, column: 4, scope: !17282)
!17362 = !DILocation(line: 2324, column: 8, scope: !17282)
!17363 = !DILocation(line: 2324, column: 20, scope: !17282)
!17364 = !DILocation(line: 2324, column: 31, scope: !17282)
!17365 = !DILocation(line: 2325, column: 18, scope: !17282)
!17366 = !DILocation(line: 2325, column: 4, scope: !17282)
!17367 = !DILocation(line: 2325, column: 12, scope: !17282)
!17368 = !DILocation(line: 2325, column: 16, scope: !17282)
!17369 = !DILocation(line: 2326, column: 22, scope: !17282)
!17370 = !DILocation(line: 2326, column: 4, scope: !17282)
!17371 = !DILocation(line: 2326, column: 12, scope: !17282)
!17372 = !DILocation(line: 2326, column: 20, scope: !17282)
!17373 = !DILocation(line: 2328, column: 14, scope: !17282)
!17374 = !DILocation(line: 2328, column: 11, scope: !17282)
!17375 = !DILocation(line: 2329, column: 17, scope: !17282)
!17376 = !DILocation(line: 2329, column: 14, scope: !17282)
!17377 = !DILocation(line: 2330, column: 8, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17282, file: !3, line: 2330, column: 8)
!17379 = !DILocation(line: 2330, column: 8, scope: !17282)
!17380 = !DILocation(line: 2331, column: 14, scope: !17378)
!17381 = !DILocation(line: 2331, column: 18, scope: !17378)
!17382 = !DILocation(line: 2331, column: 26, scope: !17378)
!17383 = !DILocation(line: 2331, column: 12, scope: !17378)
!17384 = !DILocation(line: 2331, column: 5, scope: !17378)
!17385 = !DILocation(line: 2332, column: 8, scope: !17386)
!17386 = distinct !DILexicalBlock(scope: !17282, file: !3, line: 2332, column: 8)
!17387 = !DILocation(line: 2332, column: 8, scope: !17282)
!17388 = !DILocation(line: 2333, column: 22, scope: !17386)
!17389 = !DILocation(line: 2333, column: 26, scope: !17386)
!17390 = !DILocation(line: 2333, column: 5, scope: !17386)
!17391 = !DILocation(line: 2333, column: 9, scope: !17386)
!17392 = !DILocation(line: 2333, column: 20, scope: !17386)
!17393 = !DILocation(line: 2334, column: 3, scope: !17282)
!17394 = !DILocation(line: 2334, column: 12, scope: !17267)
!17395 = distinct !{!17395, !17279, !17396}
!17396 = !DILocation(line: 2334, column: 21, scope: !17267)
!17397 = !DILocation(line: 2335, column: 2, scope: !17267)
!17398 = !DILocation(line: 2288, column: 30, scope: !17262)
!17399 = !DILocation(line: 2288, column: 2, scope: !17262)
!17400 = distinct !{!17400, !17265, !17401}
!17401 = !DILocation(line: 2335, column: 2, scope: !17259)
!17402 = !DILocation(line: 2337, column: 6, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2337, column: 6)
!17404 = !DILocation(line: 2337, column: 6, scope: !17012)
!17405 = !DILocation(line: 2338, column: 13, scope: !17403)
!17406 = !DILocation(line: 2338, column: 17, scope: !17403)
!17407 = !DILocation(line: 2338, column: 25, scope: !17403)
!17408 = !DILocation(line: 2338, column: 11, scope: !17403)
!17409 = !DILocation(line: 2338, column: 3, scope: !17403)
!17410 = !DILocation(line: 2340, column: 13, scope: !17403)
!17411 = !DILocation(line: 2340, column: 20, scope: !17403)
!17412 = !DILocation(line: 2340, column: 11, scope: !17403)
!17413 = !DILocation(line: 2342, column: 6, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2342, column: 6)
!17415 = !DILocation(line: 2342, column: 6, scope: !17012)
!17416 = !DILocation(line: 2343, column: 17, scope: !17414)
!17417 = !DILocation(line: 2343, column: 21, scope: !17414)
!17418 = !DILocation(line: 2343, column: 15, scope: !17414)
!17419 = !DILocation(line: 2343, column: 3, scope: !17414)
!17420 = !DILocation(line: 2345, column: 17, scope: !17414)
!17421 = !DILocation(line: 2345, column: 21, scope: !17414)
!17422 = !DILocation(line: 2345, column: 32, scope: !17414)
!17423 = !DILocation(line: 2345, column: 15, scope: !17414)
!17424 = !DILocation(line: 2348, column: 22, scope: !17012)
!17425 = !DILocation(line: 2348, column: 2, scope: !17012)
!17426 = !DILocation(line: 2348, column: 11, scope: !17012)
!17427 = !DILocation(line: 2348, column: 19, scope: !17012)
!17428 = !DILocation(line: 2351, column: 21, scope: !17012)
!17429 = !DILocation(line: 2351, column: 2, scope: !17012)
!17430 = !DILocation(line: 2351, column: 15, scope: !17012)
!17431 = !DILocation(line: 2351, column: 19, scope: !17012)
!17432 = !DILocation(line: 2353, column: 17, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2353, column: 6)
!17434 = !DILocation(line: 2353, column: 6, scope: !17433)
!17435 = !DILocation(line: 2353, column: 6, scope: !17012)
!17436 = !DILocation(line: 2354, column: 34, scope: !17433)
!17437 = !DILocation(line: 2354, column: 51, scope: !17433)
!17438 = !DILocation(line: 2354, column: 60, scope: !17433)
!17439 = !DILocation(line: 2354, column: 31, scope: !17433)
!17440 = !DILocation(line: 2354, column: 18, scope: !17433)
!17441 = !DILocation(line: 2354, column: 3, scope: !17433)
!17442 = !DILocation(line: 2356, column: 20, scope: !17433)
!17443 = !DILocation(line: 2356, column: 25, scope: !17433)
!17444 = !DILocation(line: 2356, column: 35, scope: !17433)
!17445 = !DILocation(line: 2356, column: 18, scope: !17433)
!17446 = !DILocation(line: 2359, column: 2, scope: !17012)
!17447 = !DILocation(line: 2359, column: 2, scope: !17022)
!17448 = !DILocalVariable(name: "__dummy", scope: !17449, file: !3, line: 2359, type: !312)
!17449 = distinct !DILexicalBlock(scope: !17021, file: !3, line: 2359, column: 2)
!17450 = !DILocation(line: 2359, column: 2, scope: !17449)
!17451 = !DILocalVariable(name: "__dummy2", scope: !17449, file: !3, line: 2359, type: !312)
!17452 = !DILocation(line: 2359, column: 2, scope: !17021)
!17453 = !DILocation(line: 2359, column: 2, scope: !17020)
!17454 = !DILocation(line: 2359, column: 2, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 2359, column: 2)
!17456 = !DILocalVariable(name: "__dummy", scope: !17457, file: !3, line: 2359, type: !312)
!17457 = distinct !DILexicalBlock(scope: !17458, file: !3, line: 2359, column: 2)
!17458 = distinct !DILexicalBlock(scope: !17455, file: !3, line: 2359, column: 2)
!17459 = !DILocation(line: 2359, column: 2, scope: !17457)
!17460 = !DILocalVariable(name: "__dummy2", scope: !17457, file: !3, line: 2359, type: !312)
!17461 = !DILocation(line: 2359, column: 2, scope: !17458)
!17462 = !DILocation(line: 2359, column: 2, scope: !17019)
!17463 = !{i32 -2139464651}
!17464 = !DILocation(line: 2359, column: 2, scope: !17018)
!17465 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !17017)
!17466 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !17017)
!17467 = !DILocation(line: 2362, column: 23, scope: !17012)
!17468 = !DILocation(line: 2362, column: 2, scope: !17012)
!17469 = !DILocation(line: 2362, column: 12, scope: !17012)
!17470 = !DILocation(line: 2362, column: 20, scope: !17012)
!17471 = !DILocation(line: 2364, column: 20, scope: !17012)
!17472 = !DILocation(line: 2364, column: 24, scope: !17012)
!17473 = !DILocation(line: 2364, column: 29, scope: !17012)
!17474 = !DILocation(line: 2364, column: 34, scope: !17012)
!17475 = !DILocation(line: 2364, column: 2, scope: !17012)
!17476 = !DILocation(line: 2366, column: 19, scope: !17012)
!17477 = !DILocation(line: 2366, column: 2, scope: !17012)
!17478 = !DILocation(line: 2368, column: 20, scope: !17012)
!17479 = !DILocation(line: 2368, column: 2, scope: !17012)
!17480 = !DILocation(line: 2368, column: 6, scope: !17012)
!17481 = !DILocation(line: 2368, column: 13, scope: !17012)
!17482 = !DILocation(line: 2368, column: 18, scope: !17012)
!17483 = !DILocation(line: 2370, column: 26, scope: !17012)
!17484 = !DILocation(line: 2370, column: 30, scope: !17012)
!17485 = !DILocation(line: 2370, column: 36, scope: !17012)
!17486 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !17014)
!17487 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !17014)
!17488 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !17014)
!17489 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !17014)
!17490 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !17014)
!17491 = !DILocation(line: 2370, column: 2, scope: !17012)
!17492 = !DILabel(scope: !17012, name: "txkick", file: !3, line: 2372)
!17493 = !DILocation(line: 2372, column: 1, scope: !17012)
!17494 = !DILocation(line: 2373, column: 26, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17012, file: !3, line: 2373, column: 6)
!17496 = !DILocation(line: 2373, column: 6, scope: !17495)
!17497 = !DILocation(line: 2373, column: 31, scope: !17495)
!17498 = !DILocation(line: 2373, column: 35, scope: !17495)
!17499 = !DILocation(line: 2373, column: 6, scope: !17012)
!17500 = !DILocalVariable(name: "txrxctl_kick", scope: !17501, file: !3, line: 2374, type: !987)
!17501 = distinct !DILexicalBlock(scope: !17495, file: !3, line: 2373, column: 55)
!17502 = !DILocation(line: 2374, column: 7, scope: !17501)
!17503 = !DILocation(line: 2374, column: 3, scope: !17501)
!17504 = !DILabel(scope: !17501, name: "dma_error", file: !3, line: 2375)
!17505 = !DILocation(line: 2375, column: 1, scope: !17501)
!17506 = !DILocation(line: 2376, column: 39, scope: !17501)
!17507 = !DILocation(line: 2376, column: 43, scope: !17501)
!17508 = !DILocation(line: 2376, column: 37, scope: !17501)
!17509 = !DILocation(line: 2376, column: 16, scope: !17501)
!17510 = !DILocation(line: 2377, column: 10, scope: !17501)
!17511 = !DILocation(line: 2377, column: 35, scope: !17501)
!17512 = !DILocation(line: 2377, column: 24, scope: !17501)
!17513 = !DILocation(line: 2377, column: 40, scope: !17501)
!17514 = !DILocation(line: 2377, column: 3, scope: !17501)
!17515 = !DILocation(line: 2378, column: 2, scope: !17501)
!17516 = !DILocation(line: 2380, column: 9, scope: !17012)
!17517 = !DILocation(line: 2380, column: 2, scope: !17012)
!17518 = distinct !DISubprogram(name: "nv_set_multicast", scope: !3, file: !3, line: 3211, type: !406, scopeLine: 3212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17519 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 3268, column: 2, scope: !17518)
!17521 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !17522)
!17522 = distinct !DILocation(line: 3260, column: 2, scope: !17518)
!17523 = !DILocalVariable(name: "dev", arg: 1, scope: !17518, file: !3, line: 3211, type: !290)
!17524 = !DILocation(line: 3211, column: 49, scope: !17518)
!17525 = !DILocalVariable(name: "np", scope: !17518, file: !3, line: 3213, type: !7446)
!17526 = !DILocation(line: 3213, column: 18, scope: !17518)
!17527 = !DILocation(line: 3213, column: 35, scope: !17518)
!17528 = !DILocation(line: 3213, column: 23, scope: !17518)
!17529 = !DILocalVariable(name: "base", scope: !17518, file: !3, line: 3214, type: !793)
!17530 = !DILocation(line: 3214, column: 14, scope: !17518)
!17531 = !DILocation(line: 3214, column: 32, scope: !17518)
!17532 = !DILocation(line: 3214, column: 21, scope: !17518)
!17533 = !DILocalVariable(name: "addr", scope: !17518, file: !3, line: 3215, type: !7803)
!17534 = !DILocation(line: 3215, column: 6, scope: !17518)
!17535 = !DILocalVariable(name: "mask", scope: !17518, file: !3, line: 3216, type: !7803)
!17536 = !DILocation(line: 3216, column: 6, scope: !17518)
!17537 = !DILocalVariable(name: "pff", scope: !17518, file: !3, line: 3217, type: !987)
!17538 = !DILocation(line: 3217, column: 6, scope: !17518)
!17539 = !DILocation(line: 3217, column: 18, scope: !17518)
!17540 = !DILocation(line: 3217, column: 23, scope: !17518)
!17541 = !DILocation(line: 3217, column: 12, scope: !17518)
!17542 = !DILocation(line: 3217, column: 49, scope: !17518)
!17543 = !DILocation(line: 3219, column: 2, scope: !17518)
!17544 = !DILocation(line: 3220, column: 2, scope: !17518)
!17545 = !DILocation(line: 3222, column: 6, scope: !17546)
!17546 = distinct !DILexicalBlock(scope: !17518, file: !3, line: 3222, column: 6)
!17547 = !DILocation(line: 3222, column: 11, scope: !17546)
!17548 = !DILocation(line: 3222, column: 17, scope: !17546)
!17549 = !DILocation(line: 3222, column: 6, scope: !17518)
!17550 = !DILocation(line: 3223, column: 7, scope: !17551)
!17551 = distinct !DILexicalBlock(scope: !17546, file: !3, line: 3222, column: 32)
!17552 = !DILocation(line: 3224, column: 2, scope: !17551)
!17553 = !DILocation(line: 3225, column: 7, scope: !17554)
!17554 = distinct !DILexicalBlock(scope: !17546, file: !3, line: 3224, column: 9)
!17555 = !DILocation(line: 3227, column: 7, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17554, file: !3, line: 3227, column: 7)
!17557 = !DILocation(line: 3227, column: 12, scope: !17556)
!17558 = !DILocation(line: 3227, column: 18, scope: !17556)
!17559 = !DILocation(line: 3227, column: 33, scope: !17556)
!17560 = !DILocation(line: 3227, column: 37, scope: !17556)
!17561 = !DILocation(line: 3227, column: 7, scope: !17554)
!17562 = !DILocalVariable(name: "alwaysOff", scope: !17563, file: !3, line: 3228, type: !7803)
!17563 = distinct !DILexicalBlock(scope: !17556, file: !3, line: 3227, column: 59)
!17564 = !DILocation(line: 3228, column: 8, scope: !17563)
!17565 = !DILocalVariable(name: "alwaysOn", scope: !17563, file: !3, line: 3229, type: !7803)
!17566 = !DILocation(line: 3229, column: 8, scope: !17563)
!17567 = !DILocation(line: 3231, column: 47, scope: !17563)
!17568 = !DILocation(line: 3231, column: 60, scope: !17563)
!17569 = !DILocation(line: 3231, column: 32, scope: !17563)
!17570 = !DILocation(line: 3231, column: 45, scope: !17563)
!17571 = !DILocation(line: 3231, column: 18, scope: !17563)
!17572 = !DILocation(line: 3231, column: 30, scope: !17563)
!17573 = !DILocation(line: 3231, column: 4, scope: !17563)
!17574 = !DILocation(line: 3231, column: 16, scope: !17563)
!17575 = !DILocation(line: 3232, column: 8, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17563, file: !3, line: 3232, column: 8)
!17577 = !DILocation(line: 3232, column: 13, scope: !17576)
!17578 = !DILocation(line: 3232, column: 19, scope: !17576)
!17579 = !DILocation(line: 3232, column: 8, scope: !17563)
!17580 = !DILocation(line: 3233, column: 48, scope: !17581)
!17581 = distinct !DILexicalBlock(scope: !17576, file: !3, line: 3232, column: 35)
!17582 = !DILocation(line: 3233, column: 61, scope: !17581)
!17583 = !DILocation(line: 3233, column: 33, scope: !17581)
!17584 = !DILocation(line: 3233, column: 46, scope: !17581)
!17585 = !DILocation(line: 3233, column: 19, scope: !17581)
!17586 = !DILocation(line: 3233, column: 31, scope: !17581)
!17587 = !DILocation(line: 3233, column: 5, scope: !17581)
!17588 = !DILocation(line: 3233, column: 17, scope: !17581)
!17589 = !DILocation(line: 3234, column: 4, scope: !17581)
!17590 = !DILocalVariable(name: "ha", scope: !17591, file: !3, line: 3235, type: !7935)
!17591 = distinct !DILexicalBlock(scope: !17576, file: !3, line: 3234, column: 11)
!17592 = !DILocation(line: 3235, column: 28, scope: !17591)
!17593 = !DILocalVariable(name: "__mptr", scope: !17594, file: !3, line: 3237, type: !591)
!17594 = distinct !DILexicalBlock(scope: !17595, file: !3, line: 3237, column: 5)
!17595 = distinct !DILexicalBlock(scope: !17591, file: !3, line: 3237, column: 5)
!17596 = !DILocation(line: 3237, column: 5, scope: !17594)
!17597 = !DILocation(line: 3237, column: 5, scope: !17598)
!17598 = distinct !DILexicalBlock(scope: !17594, file: !3, line: 3237, column: 5)
!17599 = !DILocation(line: 3237, column: 5, scope: !17595)
!17600 = !DILocation(line: 3237, column: 5, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17595, file: !3, line: 3237, column: 5)
!17602 = !DILocalVariable(name: "hw_addr", scope: !17603, file: !3, line: 3238, type: !564)
!17603 = distinct !DILexicalBlock(scope: !17601, file: !3, line: 3237, column: 38)
!17604 = !DILocation(line: 3238, column: 21, scope: !17603)
!17605 = !DILocation(line: 3238, column: 31, scope: !17603)
!17606 = !DILocation(line: 3238, column: 35, scope: !17603)
!17607 = !DILocalVariable(name: "a", scope: !17603, file: !3, line: 3239, type: !987)
!17608 = !DILocation(line: 3239, column: 10, scope: !17603)
!17609 = !DILocalVariable(name: "b", scope: !17603, file: !3, line: 3239, type: !987)
!17610 = !DILocation(line: 3239, column: 13, scope: !17603)
!17611 = !DILocation(line: 3241, column: 10, scope: !17603)
!17612 = !DILocation(line: 3241, column: 8, scope: !17603)
!17613 = !DILocation(line: 3242, column: 10, scope: !17603)
!17614 = !DILocation(line: 3242, column: 8, scope: !17603)
!17615 = !DILocation(line: 3243, column: 21, scope: !17603)
!17616 = !DILocation(line: 3243, column: 6, scope: !17603)
!17617 = !DILocation(line: 3243, column: 18, scope: !17603)
!17618 = !DILocation(line: 3244, column: 23, scope: !17603)
!17619 = !DILocation(line: 3244, column: 22, scope: !17603)
!17620 = !DILocation(line: 3244, column: 6, scope: !17603)
!17621 = !DILocation(line: 3244, column: 19, scope: !17603)
!17622 = !DILocation(line: 3245, column: 21, scope: !17603)
!17623 = !DILocation(line: 3245, column: 6, scope: !17603)
!17624 = !DILocation(line: 3245, column: 18, scope: !17603)
!17625 = !DILocation(line: 3246, column: 23, scope: !17603)
!17626 = !DILocation(line: 3246, column: 22, scope: !17603)
!17627 = !DILocation(line: 3246, column: 6, scope: !17603)
!17628 = !DILocation(line: 3246, column: 19, scope: !17603)
!17629 = !DILocation(line: 3247, column: 5, scope: !17603)
!17630 = !DILocalVariable(name: "__mptr", scope: !17631, file: !3, line: 3237, type: !591)
!17631 = distinct !DILexicalBlock(scope: !17601, file: !3, line: 3237, column: 5)
!17632 = !DILocation(line: 3237, column: 5, scope: !17631)
!17633 = !DILocation(line: 3237, column: 5, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17631, file: !3, line: 3237, column: 5)
!17635 = distinct !{!17635, !17599, !17636}
!17636 = !DILocation(line: 3247, column: 5, scope: !17595)
!17637 = !DILocation(line: 3249, column: 14, scope: !17563)
!17638 = !DILocation(line: 3249, column: 4, scope: !17563)
!17639 = !DILocation(line: 3249, column: 12, scope: !17563)
!17640 = !DILocation(line: 3250, column: 14, scope: !17563)
!17641 = !DILocation(line: 3250, column: 4, scope: !17563)
!17642 = !DILocation(line: 3250, column: 12, scope: !17563)
!17643 = !DILocation(line: 3251, column: 14, scope: !17563)
!17644 = !DILocation(line: 3251, column: 28, scope: !17563)
!17645 = !DILocation(line: 3251, column: 26, scope: !17563)
!17646 = !DILocation(line: 3251, column: 4, scope: !17563)
!17647 = !DILocation(line: 3251, column: 12, scope: !17563)
!17648 = !DILocation(line: 3252, column: 14, scope: !17563)
!17649 = !DILocation(line: 3252, column: 28, scope: !17563)
!17650 = !DILocation(line: 3252, column: 26, scope: !17563)
!17651 = !DILocation(line: 3252, column: 4, scope: !17563)
!17652 = !DILocation(line: 3252, column: 12, scope: !17563)
!17653 = !DILocation(line: 3253, column: 3, scope: !17563)
!17654 = !DILocation(line: 3254, column: 4, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17556, file: !3, line: 3253, column: 10)
!17656 = !DILocation(line: 3254, column: 12, scope: !17655)
!17657 = !DILocation(line: 3255, column: 4, scope: !17655)
!17658 = !DILocation(line: 3255, column: 12, scope: !17655)
!17659 = !DILocation(line: 3258, column: 2, scope: !17518)
!17660 = !DILocation(line: 3258, column: 10, scope: !17518)
!17661 = !DILocation(line: 3259, column: 6, scope: !17518)
!17662 = !DILocation(line: 3260, column: 17, scope: !17518)
!17663 = !DILocation(line: 3260, column: 21, scope: !17518)
!17664 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !17522)
!17665 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !17522)
!17666 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !17522)
!17667 = !DILocation(line: 3261, column: 13, scope: !17518)
!17668 = !DILocation(line: 3261, column: 2, scope: !17518)
!17669 = !DILocation(line: 3262, column: 9, scope: !17518)
!17670 = !DILocation(line: 3262, column: 18, scope: !17518)
!17671 = !DILocation(line: 3262, column: 23, scope: !17518)
!17672 = !DILocation(line: 3262, column: 2, scope: !17518)
!17673 = !DILocation(line: 3263, column: 9, scope: !17518)
!17674 = !DILocation(line: 3263, column: 18, scope: !17518)
!17675 = !DILocation(line: 3263, column: 23, scope: !17518)
!17676 = !DILocation(line: 3263, column: 2, scope: !17518)
!17677 = !DILocation(line: 3264, column: 9, scope: !17518)
!17678 = !DILocation(line: 3264, column: 18, scope: !17518)
!17679 = !DILocation(line: 3264, column: 23, scope: !17518)
!17680 = !DILocation(line: 3264, column: 2, scope: !17518)
!17681 = !DILocation(line: 3265, column: 9, scope: !17518)
!17682 = !DILocation(line: 3265, column: 18, scope: !17518)
!17683 = !DILocation(line: 3265, column: 23, scope: !17518)
!17684 = !DILocation(line: 3265, column: 2, scope: !17518)
!17685 = !DILocation(line: 3266, column: 9, scope: !17518)
!17686 = !DILocation(line: 3266, column: 14, scope: !17518)
!17687 = !DILocation(line: 3266, column: 19, scope: !17518)
!17688 = !DILocation(line: 3266, column: 2, scope: !17518)
!17689 = !DILocation(line: 3267, column: 14, scope: !17518)
!17690 = !DILocation(line: 3267, column: 2, scope: !17518)
!17691 = !DILocation(line: 3268, column: 19, scope: !17518)
!17692 = !DILocation(line: 3268, column: 23, scope: !17518)
!17693 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !17520)
!17694 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !17520)
!17695 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !17520)
!17696 = !DILocation(line: 3269, column: 1, scope: !17518)
!17697 = distinct !DISubprogram(name: "nv_set_mac_address", scope: !3, file: !3, line: 3174, type: !589, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17698 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !17699)
!17699 = distinct !DILocation(line: 3198, column: 3, scope: !17700)
!17700 = distinct !DILexicalBlock(scope: !17701, file: !3, line: 3185, column: 26)
!17701 = distinct !DILexicalBlock(scope: !17697, file: !3, line: 3185, column: 6)
!17702 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !17703)
!17703 = distinct !DILocation(line: 3188, column: 3, scope: !17700)
!17704 = !DILocalVariable(name: "dev", arg: 1, scope: !17697, file: !3, line: 3174, type: !290)
!17705 = !DILocation(line: 3174, column: 50, scope: !17697)
!17706 = !DILocalVariable(name: "addr", arg: 2, scope: !17697, file: !3, line: 3174, type: !591)
!17707 = !DILocation(line: 3174, column: 61, scope: !17697)
!17708 = !DILocalVariable(name: "np", scope: !17697, file: !3, line: 3176, type: !7446)
!17709 = !DILocation(line: 3176, column: 18, scope: !17697)
!17710 = !DILocation(line: 3176, column: 35, scope: !17697)
!17711 = !DILocation(line: 3176, column: 23, scope: !17697)
!17712 = !DILocalVariable(name: "macaddr", scope: !17697, file: !3, line: 3177, type: !7949)
!17713 = !DILocation(line: 3177, column: 19, scope: !17697)
!17714 = !DILocation(line: 3177, column: 48, scope: !17697)
!17715 = !DILocation(line: 3177, column: 29, scope: !17697)
!17716 = !DILocation(line: 3179, column: 27, scope: !17717)
!17717 = distinct !DILexicalBlock(scope: !17697, file: !3, line: 3179, column: 6)
!17718 = !DILocation(line: 3179, column: 36, scope: !17717)
!17719 = !DILocation(line: 3179, column: 7, scope: !17717)
!17720 = !DILocation(line: 3179, column: 6, scope: !17697)
!17721 = !DILocation(line: 3180, column: 3, scope: !17717)
!17722 = !DILocation(line: 3183, column: 9, scope: !17697)
!17723 = !DILocation(line: 3183, column: 14, scope: !17697)
!17724 = !DILocation(line: 3183, column: 24, scope: !17697)
!17725 = !DILocation(line: 3183, column: 33, scope: !17697)
!17726 = !DILocation(line: 3183, column: 2, scope: !17697)
!17727 = !DILocation(line: 3185, column: 20, scope: !17701)
!17728 = !DILocation(line: 3185, column: 6, scope: !17701)
!17729 = !DILocation(line: 3185, column: 6, scope: !17697)
!17730 = !DILocation(line: 3186, column: 20, scope: !17700)
!17731 = !DILocation(line: 3186, column: 3, scope: !17700)
!17732 = !DILocation(line: 3187, column: 19, scope: !17700)
!17733 = !DILocation(line: 3187, column: 3, scope: !17700)
!17734 = !DILocation(line: 3188, column: 18, scope: !17700)
!17735 = !DILocation(line: 3188, column: 22, scope: !17700)
!17736 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !17703)
!17737 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !17703)
!17738 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !17703)
!17739 = !DILocation(line: 3191, column: 14, scope: !17700)
!17740 = !DILocation(line: 3191, column: 3, scope: !17700)
!17741 = !DILocation(line: 3194, column: 21, scope: !17700)
!17742 = !DILocation(line: 3194, column: 3, scope: !17700)
!17743 = !DILocation(line: 3197, column: 15, scope: !17700)
!17744 = !DILocation(line: 3197, column: 3, scope: !17700)
!17745 = !DILocation(line: 3198, column: 20, scope: !17700)
!17746 = !DILocation(line: 3198, column: 24, scope: !17700)
!17747 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !17699)
!17748 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !17699)
!17749 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !17699)
!17750 = !DILocation(line: 3199, column: 21, scope: !17700)
!17751 = !DILocation(line: 3199, column: 3, scope: !17700)
!17752 = !DILocation(line: 3200, column: 22, scope: !17700)
!17753 = !DILocation(line: 3200, column: 3, scope: !17700)
!17754 = !DILocation(line: 3201, column: 2, scope: !17700)
!17755 = !DILocation(line: 3202, column: 21, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17701, file: !3, line: 3201, column: 9)
!17757 = !DILocation(line: 3202, column: 3, scope: !17756)
!17758 = !DILocation(line: 3204, column: 2, scope: !17697)
!17759 = !DILocation(line: 3205, column: 1, scope: !17697)
!17760 = distinct !DISubprogram(name: "nv_change_mtu", scope: !3, file: !3, line: 3100, type: !723, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17761 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !17762)
!17762 = distinct !DILocation(line: 3148, column: 3, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17764, file: !3, line: 3113, column: 26)
!17764 = distinct !DILexicalBlock(scope: !17760, file: !3, line: 3113, column: 6)
!17765 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !17766)
!17766 = distinct !DILocation(line: 3125, column: 3, scope: !17763)
!17767 = !DILocalVariable(name: "dev", arg: 1, scope: !17760, file: !3, line: 3100, type: !290)
!17768 = !DILocation(line: 3100, column: 45, scope: !17760)
!17769 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !17760, file: !3, line: 3100, type: !32)
!17770 = !DILocation(line: 3100, column: 54, scope: !17760)
!17771 = !DILocalVariable(name: "np", scope: !17760, file: !3, line: 3102, type: !7446)
!17772 = !DILocation(line: 3102, column: 18, scope: !17760)
!17773 = !DILocation(line: 3102, column: 35, scope: !17760)
!17774 = !DILocation(line: 3102, column: 23, scope: !17760)
!17775 = !DILocalVariable(name: "old_mtu", scope: !17760, file: !3, line: 3103, type: !32)
!17776 = !DILocation(line: 3103, column: 6, scope: !17760)
!17777 = !DILocation(line: 3105, column: 12, scope: !17760)
!17778 = !DILocation(line: 3105, column: 17, scope: !17760)
!17779 = !DILocation(line: 3105, column: 10, scope: !17760)
!17780 = !DILocation(line: 3106, column: 13, scope: !17760)
!17781 = !DILocation(line: 3106, column: 2, scope: !17760)
!17782 = !DILocation(line: 3106, column: 7, scope: !17760)
!17783 = !DILocation(line: 3106, column: 11, scope: !17760)
!17784 = !DILocation(line: 3109, column: 6, scope: !17785)
!17785 = distinct !DILexicalBlock(scope: !17760, file: !3, line: 3109, column: 6)
!17786 = !DILocation(line: 3109, column: 14, scope: !17785)
!17787 = !DILocation(line: 3109, column: 30, scope: !17785)
!17788 = !DILocation(line: 3109, column: 33, scope: !17785)
!17789 = !DILocation(line: 3109, column: 41, scope: !17785)
!17790 = !DILocation(line: 3109, column: 6, scope: !17760)
!17791 = !DILocation(line: 3110, column: 3, scope: !17785)
!17792 = !DILocation(line: 3113, column: 20, scope: !17764)
!17793 = !DILocation(line: 3113, column: 6, scope: !17764)
!17794 = !DILocation(line: 3113, column: 6, scope: !17760)
!17795 = !DILocalVariable(name: "base", scope: !17763, file: !3, line: 3114, type: !793)
!17796 = !DILocation(line: 3114, column: 15, scope: !17763)
!17797 = !DILocation(line: 3114, column: 33, scope: !17763)
!17798 = !DILocation(line: 3114, column: 22, scope: !17763)
!17799 = !DILocation(line: 3121, column: 18, scope: !17763)
!17800 = !DILocation(line: 3121, column: 3, scope: !17763)
!17801 = !DILocation(line: 3122, column: 19, scope: !17763)
!17802 = !DILocation(line: 3122, column: 3, scope: !17763)
!17803 = !DILocation(line: 3123, column: 20, scope: !17763)
!17804 = !DILocation(line: 3123, column: 3, scope: !17763)
!17805 = !DILocation(line: 3124, column: 19, scope: !17763)
!17806 = !DILocation(line: 3124, column: 3, scope: !17763)
!17807 = !DILocation(line: 3125, column: 14, scope: !17763)
!17808 = !DILocation(line: 3125, column: 18, scope: !17763)
!17809 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !17766)
!17810 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !17766)
!17811 = !DILocation(line: 3127, column: 16, scope: !17763)
!17812 = !DILocation(line: 3127, column: 3, scope: !17763)
!17813 = !DILocation(line: 3128, column: 17, scope: !17763)
!17814 = !DILocation(line: 3128, column: 3, scope: !17763)
!17815 = !DILocation(line: 3130, column: 17, scope: !17763)
!17816 = !DILocation(line: 3130, column: 3, scope: !17763)
!17817 = !DILocation(line: 3132, column: 15, scope: !17763)
!17818 = !DILocation(line: 3132, column: 3, scope: !17763)
!17819 = !DILocation(line: 3133, column: 20, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17763, file: !3, line: 3133, column: 7)
!17821 = !DILocation(line: 3133, column: 7, scope: !17820)
!17822 = !DILocation(line: 3133, column: 7, scope: !17763)
!17823 = !DILocation(line: 3134, column: 9, scope: !17824)
!17824 = distinct !DILexicalBlock(scope: !17825, file: !3, line: 3134, column: 8)
!17825 = distinct !DILexicalBlock(scope: !17820, file: !3, line: 3133, column: 26)
!17826 = !DILocation(line: 3134, column: 13, scope: !17824)
!17827 = !DILocation(line: 3134, column: 8, scope: !17825)
!17828 = !DILocation(line: 3135, column: 16, scope: !17824)
!17829 = !DILocation(line: 3135, column: 20, scope: !17824)
!17830 = !DILocation(line: 3135, column: 30, scope: !17824)
!17831 = !DILocation(line: 3135, column: 38, scope: !17824)
!17832 = !DILocation(line: 3135, column: 5, scope: !17824)
!17833 = !DILocation(line: 3136, column: 3, scope: !17825)
!17834 = !DILocation(line: 3138, column: 10, scope: !17763)
!17835 = !DILocation(line: 3138, column: 14, scope: !17763)
!17836 = !DILocation(line: 3138, column: 25, scope: !17763)
!17837 = !DILocation(line: 3138, column: 30, scope: !17763)
!17838 = !DILocation(line: 3138, column: 3, scope: !17763)
!17839 = !DILocation(line: 3139, column: 18, scope: !17763)
!17840 = !DILocation(line: 3139, column: 3, scope: !17763)
!17841 = !DILocation(line: 3140, column: 12, scope: !17763)
!17842 = !DILocation(line: 3140, column: 16, scope: !17763)
!17843 = !DILocation(line: 3140, column: 28, scope: !17763)
!17844 = !DILocation(line: 3140, column: 32, scope: !17763)
!17845 = !DILocation(line: 3140, column: 61, scope: !17763)
!17846 = !DILocation(line: 3140, column: 65, scope: !17763)
!17847 = !DILocation(line: 3140, column: 77, scope: !17763)
!17848 = !DILocation(line: 3140, column: 81, scope: !17763)
!17849 = !DILocation(line: 3140, column: 57, scope: !17763)
!17850 = !DILocation(line: 3141, column: 4, scope: !17763)
!17851 = !DILocation(line: 3141, column: 9, scope: !17763)
!17852 = !DILocation(line: 3140, column: 3, scope: !17763)
!17853 = !DILocation(line: 3142, column: 12, scope: !17763)
!17854 = !DILocation(line: 3142, column: 3, scope: !17763)
!17855 = !DILocation(line: 3143, column: 29, scope: !17763)
!17856 = !DILocation(line: 3143, column: 33, scope: !17763)
!17857 = !DILocation(line: 3143, column: 28, scope: !17763)
!17858 = !DILocation(line: 3143, column: 58, scope: !17763)
!17859 = !DILocation(line: 3143, column: 47, scope: !17763)
!17860 = !DILocation(line: 3143, column: 63, scope: !17763)
!17861 = !DILocation(line: 3143, column: 3, scope: !17763)
!17862 = !DILocation(line: 3144, column: 12, scope: !17763)
!17863 = !DILocation(line: 3144, column: 3, scope: !17763)
!17864 = !DILocation(line: 3147, column: 17, scope: !17763)
!17865 = !DILocation(line: 3147, column: 3, scope: !17763)
!17866 = !DILocation(line: 3148, column: 16, scope: !17763)
!17867 = !DILocation(line: 3148, column: 20, scope: !17763)
!17868 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !17762)
!17869 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !17762)
!17870 = !DILocation(line: 3149, column: 21, scope: !17763)
!17871 = !DILocation(line: 3149, column: 3, scope: !17763)
!17872 = !DILocation(line: 3150, column: 22, scope: !17763)
!17873 = !DILocation(line: 3150, column: 3, scope: !17763)
!17874 = !DILocation(line: 3151, column: 18, scope: !17763)
!17875 = !DILocation(line: 3151, column: 3, scope: !17763)
!17876 = !DILocation(line: 3152, column: 17, scope: !17763)
!17877 = !DILocation(line: 3152, column: 3, scope: !17763)
!17878 = !DILocation(line: 3153, column: 2, scope: !17763)
!17879 = !DILocation(line: 3154, column: 2, scope: !17760)
!17880 = !DILocation(line: 3155, column: 1, scope: !17760)
!17881 = distinct !DISubprogram(name: "nv_tx_timeout", scope: !3, file: !3, line: 2742, type: !733, scopeLine: 2743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17882 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !17883)
!17883 = distinct !DILocation(line: 2841, column: 2, scope: !17881)
!17884 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !17885)
!17885 = distinct !DILocation(line: 2810, column: 2, scope: !17881)
!17886 = !DILocalVariable(name: "dev", arg: 1, scope: !17881, file: !3, line: 2742, type: !290)
!17887 = !DILocation(line: 2742, column: 46, scope: !17881)
!17888 = !DILocalVariable(name: "txqueue", arg: 2, scope: !17881, file: !3, line: 2742, type: !7)
!17889 = !DILocation(line: 2742, column: 64, scope: !17881)
!17890 = !DILocalVariable(name: "np", scope: !17881, file: !3, line: 2744, type: !7446)
!17891 = !DILocation(line: 2744, column: 18, scope: !17881)
!17892 = !DILocation(line: 2744, column: 35, scope: !17881)
!17893 = !DILocation(line: 2744, column: 23, scope: !17881)
!17894 = !DILocalVariable(name: "base", scope: !17881, file: !3, line: 2745, type: !793)
!17895 = !DILocation(line: 2745, column: 14, scope: !17881)
!17896 = !DILocation(line: 2745, column: 32, scope: !17881)
!17897 = !DILocation(line: 2745, column: 21, scope: !17881)
!17898 = !DILocalVariable(name: "status", scope: !17881, file: !3, line: 2746, type: !987)
!17899 = !DILocation(line: 2746, column: 6, scope: !17881)
!17900 = !DILocalVariable(name: "put_tx", scope: !17881, file: !3, line: 2747, type: !7817)
!17901 = !DILocation(line: 2747, column: 18, scope: !17881)
!17902 = !DILocalVariable(name: "saved_tx_limit", scope: !17881, file: !3, line: 2748, type: !32)
!17903 = !DILocation(line: 2748, column: 6, scope: !17881)
!17904 = !DILocation(line: 2750, column: 6, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17881, file: !3, line: 2750, column: 6)
!17906 = !DILocation(line: 2750, column: 10, scope: !17905)
!17907 = !DILocation(line: 2750, column: 20, scope: !17905)
!17908 = !DILocation(line: 2750, column: 6, scope: !17881)
!17909 = !DILocation(line: 2751, column: 18, scope: !17905)
!17910 = !DILocation(line: 2751, column: 23, scope: !17905)
!17911 = !DILocation(line: 2751, column: 12, scope: !17905)
!17912 = !DILocation(line: 2751, column: 45, scope: !17905)
!17913 = !DILocation(line: 2751, column: 10, scope: !17905)
!17914 = !DILocation(line: 2751, column: 3, scope: !17905)
!17915 = !DILocation(line: 2753, column: 18, scope: !17905)
!17916 = !DILocation(line: 2753, column: 23, scope: !17905)
!17917 = !DILocation(line: 2753, column: 12, scope: !17905)
!17918 = !DILocation(line: 2753, column: 41, scope: !17905)
!17919 = !DILocation(line: 2753, column: 10, scope: !17905)
!17920 = !DILocation(line: 2755, column: 14, scope: !17881)
!17921 = !DILocation(line: 2755, column: 57, scope: !17881)
!17922 = !DILocation(line: 2755, column: 2, scope: !17881)
!17923 = !DILocation(line: 2757, column: 6, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17881, file: !3, line: 2757, column: 6)
!17925 = !DILocation(line: 2757, column: 6, scope: !17881)
!17926 = !DILocalVariable(name: "i", scope: !17927, file: !3, line: 2758, type: !32)
!17927 = distinct !DILexicalBlock(scope: !17924, file: !3, line: 2757, column: 34)
!17928 = !DILocation(line: 2758, column: 7, scope: !17927)
!17929 = !DILocation(line: 2760, column: 15, scope: !17927)
!17930 = !DILocation(line: 2760, column: 52, scope: !17927)
!17931 = !DILocation(line: 2760, column: 56, scope: !17927)
!17932 = !DILocation(line: 2760, column: 3, scope: !17927)
!17933 = !DILocation(line: 2761, column: 15, scope: !17927)
!17934 = !DILocation(line: 2761, column: 3, scope: !17927)
!17935 = !DILocation(line: 2762, column: 10, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17927, file: !3, line: 2762, column: 3)
!17937 = !DILocation(line: 2762, column: 8, scope: !17936)
!17938 = !DILocation(line: 2762, column: 15, scope: !17939)
!17939 = distinct !DILexicalBlock(scope: !17936, file: !3, line: 2762, column: 3)
!17940 = !DILocation(line: 2762, column: 20, scope: !17939)
!17941 = !DILocation(line: 2762, column: 24, scope: !17939)
!17942 = !DILocation(line: 2762, column: 17, scope: !17939)
!17943 = !DILocation(line: 2762, column: 3, scope: !17936)
!17944 = !DILocation(line: 2763, column: 16, scope: !17945)
!17945 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 2762, column: 48)
!17946 = !DILocation(line: 2766, column: 9, scope: !17945)
!17947 = !DILocation(line: 2767, column: 15, scope: !17945)
!17948 = !DILocation(line: 2767, column: 22, scope: !17945)
!17949 = !DILocation(line: 2767, column: 20, scope: !17945)
!17950 = !DILocation(line: 2767, column: 24, scope: !17945)
!17951 = !DILocation(line: 2767, column: 9, scope: !17945)
!17952 = !DILocation(line: 2767, column: 36, scope: !17945)
!17953 = !DILocation(line: 2767, column: 43, scope: !17945)
!17954 = !DILocation(line: 2767, column: 41, scope: !17945)
!17955 = !DILocation(line: 2767, column: 45, scope: !17945)
!17956 = !DILocation(line: 2767, column: 30, scope: !17945)
!17957 = !DILocation(line: 2768, column: 15, scope: !17945)
!17958 = !DILocation(line: 2768, column: 22, scope: !17945)
!17959 = !DILocation(line: 2768, column: 20, scope: !17945)
!17960 = !DILocation(line: 2768, column: 24, scope: !17945)
!17961 = !DILocation(line: 2768, column: 9, scope: !17945)
!17962 = !DILocation(line: 2768, column: 36, scope: !17945)
!17963 = !DILocation(line: 2768, column: 43, scope: !17945)
!17964 = !DILocation(line: 2768, column: 41, scope: !17945)
!17965 = !DILocation(line: 2768, column: 45, scope: !17945)
!17966 = !DILocation(line: 2768, column: 30, scope: !17945)
!17967 = !DILocation(line: 2769, column: 15, scope: !17945)
!17968 = !DILocation(line: 2769, column: 22, scope: !17945)
!17969 = !DILocation(line: 2769, column: 20, scope: !17945)
!17970 = !DILocation(line: 2769, column: 24, scope: !17945)
!17971 = !DILocation(line: 2769, column: 9, scope: !17945)
!17972 = !DILocation(line: 2769, column: 37, scope: !17945)
!17973 = !DILocation(line: 2769, column: 44, scope: !17945)
!17974 = !DILocation(line: 2769, column: 42, scope: !17945)
!17975 = !DILocation(line: 2769, column: 46, scope: !17945)
!17976 = !DILocation(line: 2769, column: 31, scope: !17945)
!17977 = !DILocation(line: 2770, column: 15, scope: !17945)
!17978 = !DILocation(line: 2770, column: 22, scope: !17945)
!17979 = !DILocation(line: 2770, column: 20, scope: !17945)
!17980 = !DILocation(line: 2770, column: 24, scope: !17945)
!17981 = !DILocation(line: 2770, column: 9, scope: !17945)
!17982 = !DILocation(line: 2770, column: 37, scope: !17945)
!17983 = !DILocation(line: 2770, column: 44, scope: !17945)
!17984 = !DILocation(line: 2770, column: 42, scope: !17945)
!17985 = !DILocation(line: 2770, column: 46, scope: !17945)
!17986 = !DILocation(line: 2770, column: 31, scope: !17945)
!17987 = !DILocation(line: 2763, column: 4, scope: !17945)
!17988 = !DILocation(line: 2771, column: 3, scope: !17945)
!17989 = !DILocation(line: 2762, column: 41, scope: !17939)
!17990 = !DILocation(line: 2762, column: 3, scope: !17939)
!17991 = distinct !{!17991, !17943, !17992}
!17992 = !DILocation(line: 2771, column: 3, scope: !17936)
!17993 = !DILocation(line: 2772, column: 15, scope: !17927)
!17994 = !DILocation(line: 2772, column: 3, scope: !17927)
!17995 = !DILocation(line: 2773, column: 10, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17927, file: !3, line: 2773, column: 3)
!17997 = !DILocation(line: 2773, column: 8, scope: !17996)
!17998 = !DILocation(line: 2773, column: 15, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17996, file: !3, line: 2773, column: 3)
!18000 = !DILocation(line: 2773, column: 19, scope: !17999)
!18001 = !DILocation(line: 2773, column: 23, scope: !17999)
!18002 = !DILocation(line: 2773, column: 17, scope: !17999)
!18003 = !DILocation(line: 2773, column: 3, scope: !17996)
!18004 = !DILocation(line: 2774, column: 22, scope: !18005)
!18005 = distinct !DILexicalBlock(scope: !18006, file: !3, line: 2774, column: 8)
!18006 = distinct !DILexicalBlock(scope: !17999, file: !3, line: 2773, column: 45)
!18007 = !DILocation(line: 2774, column: 9, scope: !18005)
!18008 = !DILocation(line: 2774, column: 8, scope: !18006)
!18009 = !DILocation(line: 2775, column: 17, scope: !18010)
!18010 = distinct !DILexicalBlock(scope: !18005, file: !3, line: 2774, column: 27)
!18011 = !DILocation(line: 2778, column: 10, scope: !18010)
!18012 = !DILocation(line: 2779, column: 10, scope: !18010)
!18013 = !DILocation(line: 2780, column: 10, scope: !18010)
!18014 = !DILocation(line: 2781, column: 10, scope: !18010)
!18015 = !DILocation(line: 2782, column: 10, scope: !18010)
!18016 = !DILocation(line: 2783, column: 10, scope: !18010)
!18017 = !DILocation(line: 2784, column: 10, scope: !18010)
!18018 = !DILocation(line: 2785, column: 10, scope: !18010)
!18019 = !DILocation(line: 2786, column: 10, scope: !18010)
!18020 = !DILocation(line: 2775, column: 5, scope: !18010)
!18021 = !DILocation(line: 2787, column: 4, scope: !18010)
!18022 = !DILocation(line: 2788, column: 17, scope: !18023)
!18023 = distinct !DILexicalBlock(scope: !18005, file: !3, line: 2787, column: 11)
!18024 = !DILocation(line: 2793, column: 10, scope: !18023)
!18025 = !DILocation(line: 2794, column: 10, scope: !18023)
!18026 = !DILocation(line: 2795, column: 10, scope: !18023)
!18027 = !DILocation(line: 2796, column: 10, scope: !18023)
!18028 = !DILocation(line: 2797, column: 10, scope: !18023)
!18029 = !DILocation(line: 2798, column: 10, scope: !18023)
!18030 = !DILocation(line: 2799, column: 10, scope: !18023)
!18031 = !DILocation(line: 2800, column: 10, scope: !18023)
!18032 = !DILocation(line: 2801, column: 10, scope: !18023)
!18033 = !DILocation(line: 2802, column: 10, scope: !18023)
!18034 = !DILocation(line: 2803, column: 10, scope: !18023)
!18035 = !DILocation(line: 2804, column: 10, scope: !18023)
!18036 = !DILocation(line: 2805, column: 10, scope: !18023)
!18037 = !DILocation(line: 2788, column: 5, scope: !18023)
!18038 = !DILocation(line: 2807, column: 3, scope: !18006)
!18039 = !DILocation(line: 2773, column: 39, scope: !17999)
!18040 = !DILocation(line: 2773, column: 3, scope: !17999)
!18041 = distinct !{!18041, !18003, !18042}
!18042 = !DILocation(line: 2807, column: 3, scope: !17996)
!18043 = !DILocation(line: 2808, column: 2, scope: !17927)
!18044 = !DILocation(line: 2810, column: 17, scope: !17881)
!18045 = !DILocation(line: 2810, column: 21, scope: !17881)
!18046 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !17885)
!18047 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !17885)
!18048 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !17885)
!18049 = !DILocation(line: 2813, column: 13, scope: !17881)
!18050 = !DILocation(line: 2813, column: 2, scope: !17881)
!18051 = !DILocation(line: 2816, column: 19, scope: !17881)
!18052 = !DILocation(line: 2816, column: 23, scope: !17881)
!18053 = !DILocation(line: 2816, column: 17, scope: !17881)
!18054 = !DILocation(line: 2817, column: 2, scope: !17881)
!18055 = !DILocation(line: 2817, column: 6, scope: !17881)
!18056 = !DILocation(line: 2817, column: 15, scope: !17881)
!18057 = !DILocation(line: 2818, column: 2, scope: !17881)
!18058 = !DILocation(line: 2818, column: 6, scope: !17881)
!18059 = !DILocation(line: 2818, column: 14, scope: !17881)
!18060 = !DILocation(line: 2819, column: 20, scope: !18061)
!18061 = distinct !DILexicalBlock(scope: !17881, file: !3, line: 2819, column: 6)
!18062 = !DILocation(line: 2819, column: 7, scope: !18061)
!18063 = !DILocation(line: 2819, column: 6, scope: !17881)
!18064 = !DILocation(line: 2820, column: 14, scope: !18061)
!18065 = !DILocation(line: 2820, column: 19, scope: !18061)
!18066 = !DILocation(line: 2820, column: 23, scope: !18061)
!18067 = !DILocation(line: 2820, column: 3, scope: !18061)
!18068 = !DILocation(line: 2822, column: 24, scope: !18061)
!18069 = !DILocation(line: 2822, column: 29, scope: !18061)
!18070 = !DILocation(line: 2822, column: 33, scope: !18061)
!18071 = !DILocation(line: 2822, column: 3, scope: !18061)
!18072 = !DILocation(line: 2825, column: 6, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !17881, file: !3, line: 2825, column: 6)
!18074 = !DILocation(line: 2825, column: 10, scope: !18073)
!18075 = !DILocation(line: 2825, column: 6, scope: !17881)
!18076 = !DILocation(line: 2826, column: 15, scope: !18073)
!18077 = !DILocation(line: 2826, column: 19, scope: !18073)
!18078 = !DILocation(line: 2826, column: 36, scope: !18073)
!18079 = !DILocation(line: 2826, column: 10, scope: !18073)
!18080 = !DILocation(line: 2826, column: 13, scope: !18073)
!18081 = !DILocation(line: 2826, column: 3, scope: !18073)
!18082 = !DILocation(line: 2828, column: 12, scope: !18073)
!18083 = !DILocation(line: 2828, column: 16, scope: !18073)
!18084 = !DILocation(line: 2831, column: 14, scope: !17881)
!18085 = !DILocation(line: 2831, column: 2, scope: !17881)
!18086 = !DILocation(line: 2832, column: 13, scope: !17881)
!18087 = !DILocation(line: 2832, column: 2, scope: !17881)
!18088 = !DILocation(line: 2835, column: 2, scope: !17881)
!18089 = !DILocation(line: 2835, column: 6, scope: !17881)
!18090 = !DILocation(line: 2835, column: 15, scope: !17881)
!18091 = !DILocation(line: 2835, column: 19, scope: !17881)
!18092 = !DILocation(line: 2835, column: 28, scope: !17881)
!18093 = !DILocation(line: 2835, column: 26, scope: !17881)
!18094 = !DILocation(line: 2836, column: 17, scope: !17881)
!18095 = !DILocation(line: 2836, column: 2, scope: !17881)
!18096 = !DILocation(line: 2836, column: 6, scope: !17881)
!18097 = !DILocation(line: 2836, column: 15, scope: !17881)
!18098 = !DILocation(line: 2839, column: 14, scope: !17881)
!18099 = !DILocation(line: 2839, column: 2, scope: !17881)
!18100 = !DILocation(line: 2840, column: 19, scope: !17881)
!18101 = !DILocation(line: 2840, column: 2, scope: !17881)
!18102 = !DILocation(line: 2841, column: 19, scope: !17881)
!18103 = !DILocation(line: 2841, column: 23, scope: !17881)
!18104 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !17883)
!18105 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !17883)
!18106 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !17883)
!18107 = !DILocation(line: 2842, column: 1, scope: !17881)
!18108 = distinct !DISubprogram(name: "nv_get_stats64", scope: !3, file: !3, line: 1773, type: !737, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18109 = !DILocalVariable(name: "dev", arg: 1, scope: !18108, file: !3, line: 1773, type: !290)
!18110 = !DILocation(line: 1773, column: 35, scope: !18108)
!18111 = !DILocalVariable(name: "storage", arg: 2, scope: !18108, file: !3, line: 1773, type: !739)
!18112 = !DILocation(line: 1773, column: 66, scope: !18108)
!18113 = !DILocalVariable(name: "np", scope: !18108, file: !3, line: 1777, type: !7446)
!18114 = !DILocation(line: 1777, column: 18, scope: !18108)
!18115 = !DILocation(line: 1777, column: 35, scope: !18108)
!18116 = !DILocation(line: 1777, column: 23, scope: !18108)
!18117 = !DILocalVariable(name: "cpu", scope: !18108, file: !3, line: 1778, type: !32)
!18118 = !DILocation(line: 1778, column: 6, scope: !18108)
!18119 = !DILocation(line: 1791, column: 2, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !18108, file: !3, line: 1791, column: 2)
!18121 = !DILocation(line: 1791, column: 2, scope: !18122)
!18122 = distinct !DILexicalBlock(scope: !18120, file: !3, line: 1791, column: 2)
!18123 = !DILocation(line: 1792, column: 16, scope: !18122)
!18124 = !DILocation(line: 1792, column: 21, scope: !18122)
!18125 = !DILocation(line: 1792, column: 25, scope: !18122)
!18126 = !DILocation(line: 1792, column: 3, scope: !18122)
!18127 = distinct !{!18127, !18119, !18128}
!18128 = !DILocation(line: 1792, column: 32, scope: !18120)
!18129 = !DILocation(line: 1795, column: 6, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18108, file: !3, line: 1795, column: 6)
!18131 = !DILocation(line: 1795, column: 10, scope: !18130)
!18132 = !DILocation(line: 1795, column: 22, scope: !18130)
!18133 = !DILocation(line: 1795, column: 6, scope: !18108)
!18134 = !DILocation(line: 1796, column: 17, scope: !18135)
!18135 = distinct !DILexicalBlock(scope: !18130, file: !3, line: 1795, column: 49)
!18136 = !DILocation(line: 1796, column: 21, scope: !18135)
!18137 = !DILocation(line: 1796, column: 3, scope: !18135)
!18138 = !DILocation(line: 1798, column: 19, scope: !18135)
!18139 = !DILocation(line: 1798, column: 3, scope: !18135)
!18140 = !DILocation(line: 1801, column: 24, scope: !18135)
!18141 = !DILocation(line: 1801, column: 28, scope: !18135)
!18142 = !DILocation(line: 1801, column: 35, scope: !18135)
!18143 = !DILocation(line: 1801, column: 3, scope: !18135)
!18144 = !DILocation(line: 1801, column: 12, scope: !18135)
!18145 = !DILocation(line: 1801, column: 22, scope: !18135)
!18146 = !DILocation(line: 1802, column: 24, scope: !18135)
!18147 = !DILocation(line: 1802, column: 28, scope: !18135)
!18148 = !DILocation(line: 1802, column: 35, scope: !18135)
!18149 = !DILocation(line: 1802, column: 3, scope: !18135)
!18150 = !DILocation(line: 1802, column: 12, scope: !18135)
!18151 = !DILocation(line: 1802, column: 22, scope: !18135)
!18152 = !DILocation(line: 1805, column: 24, scope: !18135)
!18153 = !DILocation(line: 1805, column: 28, scope: !18135)
!18154 = !DILocation(line: 1805, column: 35, scope: !18135)
!18155 = !DILocation(line: 1805, column: 3, scope: !18135)
!18156 = !DILocation(line: 1805, column: 12, scope: !18135)
!18157 = !DILocation(line: 1805, column: 22, scope: !18135)
!18158 = !DILocation(line: 1808, column: 31, scope: !18135)
!18159 = !DILocation(line: 1808, column: 35, scope: !18135)
!18160 = !DILocation(line: 1808, column: 42, scope: !18135)
!18161 = !DILocation(line: 1808, column: 3, scope: !18135)
!18162 = !DILocation(line: 1808, column: 12, scope: !18135)
!18163 = !DILocation(line: 1808, column: 29, scope: !18135)
!18164 = !DILocation(line: 1809, column: 31, scope: !18135)
!18165 = !DILocation(line: 1809, column: 35, scope: !18135)
!18166 = !DILocation(line: 1809, column: 42, scope: !18135)
!18167 = !DILocation(line: 1809, column: 3, scope: !18135)
!18168 = !DILocation(line: 1809, column: 12, scope: !18135)
!18169 = !DILocation(line: 1809, column: 29, scope: !18135)
!18170 = !DILocation(line: 1810, column: 31, scope: !18135)
!18171 = !DILocation(line: 1810, column: 35, scope: !18135)
!18172 = !DILocation(line: 1810, column: 42, scope: !18135)
!18173 = !DILocation(line: 1810, column: 3, scope: !18135)
!18174 = !DILocation(line: 1810, column: 12, scope: !18135)
!18175 = !DILocation(line: 1810, column: 29, scope: !18135)
!18176 = !DILocation(line: 1811, column: 31, scope: !18135)
!18177 = !DILocation(line: 1811, column: 35, scope: !18135)
!18178 = !DILocation(line: 1811, column: 42, scope: !18135)
!18179 = !DILocation(line: 1811, column: 3, scope: !18135)
!18180 = !DILocation(line: 1811, column: 12, scope: !18135)
!18181 = !DILocation(line: 1811, column: 29, scope: !18135)
!18182 = !DILocation(line: 1812, column: 31, scope: !18135)
!18183 = !DILocation(line: 1812, column: 35, scope: !18135)
!18184 = !DILocation(line: 1812, column: 42, scope: !18135)
!18185 = !DILocation(line: 1812, column: 3, scope: !18135)
!18186 = !DILocation(line: 1812, column: 12, scope: !18135)
!18187 = !DILocation(line: 1812, column: 29, scope: !18135)
!18188 = !DILocation(line: 1815, column: 32, scope: !18135)
!18189 = !DILocation(line: 1815, column: 36, scope: !18135)
!18190 = !DILocation(line: 1815, column: 43, scope: !18135)
!18191 = !DILocation(line: 1815, column: 3, scope: !18135)
!18192 = !DILocation(line: 1815, column: 12, scope: !18135)
!18193 = !DILocation(line: 1815, column: 30, scope: !18135)
!18194 = !DILocation(line: 1816, column: 32, scope: !18135)
!18195 = !DILocation(line: 1816, column: 36, scope: !18135)
!18196 = !DILocation(line: 1816, column: 43, scope: !18135)
!18197 = !DILocation(line: 1816, column: 3, scope: !18135)
!18198 = !DILocation(line: 1816, column: 12, scope: !18135)
!18199 = !DILocation(line: 1816, column: 30, scope: !18135)
!18200 = !DILocation(line: 1818, column: 19, scope: !18135)
!18201 = !DILocation(line: 1818, column: 23, scope: !18135)
!18202 = !DILocation(line: 1818, column: 3, scope: !18135)
!18203 = !DILocation(line: 1819, column: 2, scope: !18135)
!18204 = !DILocation(line: 1820, column: 1, scope: !18108)
!18205 = distinct !DISubprogram(name: "nv_fix_features", scope: !3, file: !3, line: 4928, type: !913, scopeLine: 4930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18206 = !DILocalVariable(name: "dev", arg: 1, scope: !18205, file: !3, line: 4928, type: !290)
!18207 = !DILocation(line: 4928, column: 61, scope: !18205)
!18208 = !DILocalVariable(name: "features", arg: 2, scope: !18205, file: !3, line: 4929, type: !329)
!18209 = !DILocation(line: 4929, column: 20, scope: !18205)
!18210 = !DILocation(line: 4932, column: 6, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18205, file: !3, line: 4932, column: 6)
!18212 = !DILocation(line: 4932, column: 15, scope: !18211)
!18213 = !DILocation(line: 4932, column: 6, scope: !18205)
!18214 = !DILocation(line: 4933, column: 12, scope: !18211)
!18215 = !DILocation(line: 4933, column: 3, scope: !18211)
!18216 = !DILocation(line: 4935, column: 9, scope: !18205)
!18217 = !DILocation(line: 4935, column: 2, scope: !18205)
!18218 = distinct !DISubprogram(name: "nv_set_features", scope: !3, file: !3, line: 4959, type: !917, scopeLine: 4960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18219 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !18220)
!18220 = distinct !DILocation(line: 4983, column: 3, scope: !18221)
!18221 = distinct !DILexicalBlock(scope: !18222, file: !3, line: 4972, column: 32)
!18222 = distinct !DILexicalBlock(scope: !18218, file: !3, line: 4972, column: 6)
!18223 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !18224)
!18224 = distinct !DILocation(line: 4973, column: 3, scope: !18221)
!18225 = !DILocalVariable(name: "dev", arg: 1, scope: !18218, file: !3, line: 4959, type: !290)
!18226 = !DILocation(line: 4959, column: 47, scope: !18218)
!18227 = !DILocalVariable(name: "features", arg: 2, scope: !18218, file: !3, line: 4959, type: !329)
!18228 = !DILocation(line: 4959, column: 70, scope: !18218)
!18229 = !DILocalVariable(name: "np", scope: !18218, file: !3, line: 4961, type: !7446)
!18230 = !DILocation(line: 4961, column: 18, scope: !18218)
!18231 = !DILocation(line: 4961, column: 35, scope: !18218)
!18232 = !DILocation(line: 4961, column: 23, scope: !18218)
!18233 = !DILocalVariable(name: "base", scope: !18218, file: !3, line: 4962, type: !793)
!18234 = !DILocation(line: 4962, column: 14, scope: !18218)
!18235 = !DILocation(line: 4962, column: 32, scope: !18218)
!18236 = !DILocation(line: 4962, column: 21, scope: !18218)
!18237 = !DILocalVariable(name: "changed", scope: !18218, file: !3, line: 4963, type: !329)
!18238 = !DILocation(line: 4963, column: 20, scope: !18218)
!18239 = !DILocation(line: 4963, column: 30, scope: !18218)
!18240 = !DILocation(line: 4963, column: 35, scope: !18218)
!18241 = !DILocation(line: 4963, column: 46, scope: !18218)
!18242 = !DILocation(line: 4963, column: 44, scope: !18218)
!18243 = !DILocalVariable(name: "retval", scope: !18218, file: !3, line: 4964, type: !32)
!18244 = !DILocation(line: 4964, column: 6, scope: !18218)
!18245 = !DILocation(line: 4966, column: 7, scope: !18246)
!18246 = distinct !DILexicalBlock(scope: !18218, file: !3, line: 4966, column: 6)
!18247 = !DILocation(line: 4966, column: 15, scope: !18246)
!18248 = !DILocation(line: 4966, column: 35, scope: !18246)
!18249 = !DILocation(line: 4966, column: 52, scope: !18246)
!18250 = !DILocation(line: 4966, column: 38, scope: !18246)
!18251 = !DILocation(line: 4966, column: 6, scope: !18218)
!18252 = !DILocation(line: 4967, column: 28, scope: !18253)
!18253 = distinct !DILexicalBlock(scope: !18246, file: !3, line: 4966, column: 58)
!18254 = !DILocation(line: 4967, column: 33, scope: !18253)
!18255 = !DILocation(line: 4967, column: 12, scope: !18253)
!18256 = !DILocation(line: 4967, column: 10, scope: !18253)
!18257 = !DILocation(line: 4968, column: 7, scope: !18258)
!18258 = distinct !DILexicalBlock(scope: !18253, file: !3, line: 4968, column: 7)
!18259 = !DILocation(line: 4968, column: 14, scope: !18258)
!18260 = !DILocation(line: 4968, column: 7, scope: !18253)
!18261 = !DILocation(line: 4969, column: 11, scope: !18258)
!18262 = !DILocation(line: 4969, column: 4, scope: !18258)
!18263 = !DILocation(line: 4970, column: 2, scope: !18253)
!18264 = !DILocation(line: 4972, column: 6, scope: !18222)
!18265 = !DILocation(line: 4972, column: 14, scope: !18222)
!18266 = !DILocation(line: 4972, column: 6, scope: !18218)
!18267 = !DILocation(line: 4973, column: 18, scope: !18221)
!18268 = !DILocation(line: 4973, column: 22, scope: !18221)
!18269 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !18224)
!18270 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !18224)
!18271 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !18224)
!18272 = !DILocation(line: 4975, column: 7, scope: !18273)
!18273 = distinct !DILexicalBlock(scope: !18221, file: !3, line: 4975, column: 7)
!18274 = !DILocation(line: 4975, column: 16, scope: !18273)
!18275 = !DILocation(line: 4975, column: 7, scope: !18221)
!18276 = !DILocation(line: 4976, column: 4, scope: !18273)
!18277 = !DILocation(line: 4976, column: 8, scope: !18273)
!18278 = !DILocation(line: 4976, column: 21, scope: !18273)
!18279 = !DILocation(line: 4978, column: 4, scope: !18273)
!18280 = !DILocation(line: 4978, column: 8, scope: !18273)
!18281 = !DILocation(line: 4978, column: 21, scope: !18273)
!18282 = !DILocation(line: 4980, column: 21, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18221, file: !3, line: 4980, column: 7)
!18284 = !DILocation(line: 4980, column: 7, scope: !18283)
!18285 = !DILocation(line: 4980, column: 7, scope: !18221)
!18286 = !DILocation(line: 4981, column: 11, scope: !18283)
!18287 = !DILocation(line: 4981, column: 15, scope: !18283)
!18288 = !DILocation(line: 4981, column: 29, scope: !18283)
!18289 = !DILocation(line: 4981, column: 34, scope: !18283)
!18290 = !DILocation(line: 4981, column: 4, scope: !18283)
!18291 = !DILocation(line: 4983, column: 20, scope: !18221)
!18292 = !DILocation(line: 4983, column: 24, scope: !18221)
!18293 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !18220)
!18294 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !18220)
!18295 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !18220)
!18296 = !DILocation(line: 4984, column: 2, scope: !18221)
!18297 = !DILocation(line: 4986, column: 6, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18218, file: !3, line: 4986, column: 6)
!18299 = !DILocation(line: 4986, column: 14, scope: !18298)
!18300 = !DILocation(line: 4986, column: 6, scope: !18218)
!18301 = !DILocation(line: 4987, column: 16, scope: !18298)
!18302 = !DILocation(line: 4987, column: 21, scope: !18298)
!18303 = !DILocation(line: 4987, column: 3, scope: !18298)
!18304 = !DILocation(line: 4989, column: 2, scope: !18218)
!18305 = !DILocation(line: 4990, column: 1, scope: !18218)
!18306 = distinct !DISubprogram(name: "nv_disable_hw_interrupts", scope: !3, file: !3, line: 1110, type: !5579, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18307 = !DILocalVariable(name: "dev", arg: 1, scope: !18306, file: !3, line: 1110, type: !290)
!18308 = !DILocation(line: 1110, column: 57, scope: !18306)
!18309 = !DILocalVariable(name: "mask", arg: 2, scope: !18306, file: !3, line: 1110, type: !987)
!18310 = !DILocation(line: 1110, column: 66, scope: !18306)
!18311 = !DILocalVariable(name: "np", scope: !18306, file: !3, line: 1112, type: !7446)
!18312 = !DILocation(line: 1112, column: 18, scope: !18306)
!18313 = !DILocation(line: 1112, column: 34, scope: !18306)
!18314 = !DILocation(line: 1112, column: 23, scope: !18306)
!18315 = !DILocalVariable(name: "base", scope: !18306, file: !3, line: 1113, type: !793)
!18316 = !DILocation(line: 1113, column: 14, scope: !18306)
!18317 = !DILocation(line: 1113, column: 32, scope: !18306)
!18318 = !DILocation(line: 1113, column: 21, scope: !18306)
!18319 = !DILocation(line: 1115, column: 6, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18306, file: !3, line: 1115, column: 6)
!18321 = !DILocation(line: 1115, column: 10, scope: !18320)
!18322 = !DILocation(line: 1115, column: 20, scope: !18320)
!18323 = !DILocation(line: 1115, column: 6, scope: !18306)
!18324 = !DILocation(line: 1116, column: 10, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18320, file: !3, line: 1115, column: 40)
!18326 = !DILocation(line: 1116, column: 16, scope: !18325)
!18327 = !DILocation(line: 1116, column: 21, scope: !18325)
!18328 = !DILocation(line: 1116, column: 3, scope: !18325)
!18329 = !DILocation(line: 1117, column: 2, scope: !18325)
!18330 = !DILocation(line: 1118, column: 7, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 1118, column: 7)
!18332 = distinct !DILexicalBlock(scope: !18320, file: !3, line: 1117, column: 9)
!18333 = !DILocation(line: 1118, column: 11, scope: !18331)
!18334 = !DILocation(line: 1118, column: 21, scope: !18331)
!18335 = !DILocation(line: 1118, column: 7, scope: !18332)
!18336 = !DILocation(line: 1119, column: 14, scope: !18331)
!18337 = !DILocation(line: 1119, column: 19, scope: !18331)
!18338 = !DILocation(line: 1119, column: 4, scope: !18331)
!18339 = !DILocation(line: 1120, column: 13, scope: !18332)
!18340 = !DILocation(line: 1120, column: 18, scope: !18332)
!18341 = !DILocation(line: 1120, column: 3, scope: !18332)
!18342 = !DILocation(line: 1122, column: 1, scope: !18306)
!18343 = distinct !DISubprogram(name: "nv_request_irq", scope: !3, file: !3, line: 4016, type: !723, scopeLine: 4017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18344 = !DILocalVariable(name: "dev", arg: 1, scope: !18343, file: !3, line: 4016, type: !290)
!18345 = !DILocation(line: 4016, column: 46, scope: !18343)
!18346 = !DILocalVariable(name: "intr_test", arg: 2, scope: !18343, file: !3, line: 4016, type: !32)
!18347 = !DILocation(line: 4016, column: 55, scope: !18343)
!18348 = !DILocalVariable(name: "np", scope: !18343, file: !3, line: 4018, type: !7446)
!18349 = !DILocation(line: 4018, column: 18, scope: !18343)
!18350 = !DILocation(line: 4018, column: 34, scope: !18343)
!18351 = !DILocation(line: 4018, column: 23, scope: !18343)
!18352 = !DILocalVariable(name: "base", scope: !18343, file: !3, line: 4019, type: !793)
!18353 = !DILocation(line: 4019, column: 14, scope: !18343)
!18354 = !DILocation(line: 4019, column: 32, scope: !18343)
!18355 = !DILocation(line: 4019, column: 21, scope: !18343)
!18356 = !DILocalVariable(name: "ret", scope: !18343, file: !3, line: 4020, type: !32)
!18357 = !DILocation(line: 4020, column: 6, scope: !18343)
!18358 = !DILocalVariable(name: "i", scope: !18343, file: !3, line: 4021, type: !32)
!18359 = !DILocation(line: 4021, column: 6, scope: !18343)
!18360 = !DILocalVariable(name: "handler", scope: !18343, file: !3, line: 4022, type: !18361)
!18361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11693, size: 64)
!18362 = !DILocation(line: 4022, column: 16, scope: !18343)
!18363 = !DILocation(line: 4024, column: 6, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18343, file: !3, line: 4024, column: 6)
!18365 = !DILocation(line: 4024, column: 6, scope: !18343)
!18366 = !DILocation(line: 4025, column: 11, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18364, file: !3, line: 4024, column: 17)
!18368 = !DILocation(line: 4026, column: 2, scope: !18367)
!18369 = !DILocation(line: 4027, column: 20, scope: !18370)
!18370 = distinct !DILexicalBlock(scope: !18371, file: !3, line: 4027, column: 7)
!18371 = distinct !DILexicalBlock(scope: !18364, file: !3, line: 4026, column: 9)
!18372 = !DILocation(line: 4027, column: 7, scope: !18370)
!18373 = !DILocation(line: 4027, column: 7, scope: !18371)
!18374 = !DILocation(line: 4028, column: 12, scope: !18370)
!18375 = !DILocation(line: 4028, column: 4, scope: !18370)
!18376 = !DILocation(line: 4030, column: 12, scope: !18370)
!18377 = !DILocation(line: 4033, column: 6, scope: !18378)
!18378 = distinct !DILexicalBlock(scope: !18343, file: !3, line: 4033, column: 6)
!18379 = !DILocation(line: 4033, column: 10, scope: !18378)
!18380 = !DILocation(line: 4033, column: 20, scope: !18378)
!18381 = !DILocation(line: 4033, column: 6, scope: !18343)
!18382 = !DILocation(line: 4034, column: 10, scope: !18383)
!18383 = distinct !DILexicalBlock(scope: !18384, file: !3, line: 4034, column: 3)
!18384 = distinct !DILexicalBlock(scope: !18378, file: !3, line: 4033, column: 40)
!18385 = !DILocation(line: 4034, column: 8, scope: !18383)
!18386 = !DILocation(line: 4034, column: 15, scope: !18387)
!18387 = distinct !DILexicalBlock(scope: !18383, file: !3, line: 4034, column: 3)
!18388 = !DILocation(line: 4034, column: 20, scope: !18387)
!18389 = !DILocation(line: 4034, column: 24, scope: !18387)
!18390 = !DILocation(line: 4034, column: 34, scope: !18387)
!18391 = !DILocation(line: 4034, column: 17, scope: !18387)
!18392 = !DILocation(line: 4034, column: 3, scope: !18383)
!18393 = !DILocation(line: 4035, column: 31, scope: !18387)
!18394 = !DILocation(line: 4035, column: 4, scope: !18387)
!18395 = !DILocation(line: 4035, column: 8, scope: !18387)
!18396 = !DILocation(line: 4035, column: 20, scope: !18387)
!18397 = !DILocation(line: 4035, column: 23, scope: !18387)
!18398 = !DILocation(line: 4035, column: 29, scope: !18387)
!18399 = !DILocation(line: 4034, column: 61, scope: !18387)
!18400 = !DILocation(line: 4034, column: 3, scope: !18387)
!18401 = distinct !{!18401, !18392, !18402}
!18402 = !DILocation(line: 4035, column: 31, scope: !18383)
!18403 = !DILocation(line: 4036, column: 31, scope: !18384)
!18404 = !DILocation(line: 4036, column: 35, scope: !18384)
!18405 = !DILocation(line: 4037, column: 10, scope: !18384)
!18406 = !DILocation(line: 4037, column: 14, scope: !18384)
!18407 = !DILocation(line: 4038, column: 10, scope: !18384)
!18408 = !DILocation(line: 4038, column: 14, scope: !18384)
!18409 = !DILocation(line: 4038, column: 24, scope: !18384)
!18410 = !DILocation(line: 4039, column: 10, scope: !18384)
!18411 = !DILocation(line: 4039, column: 14, scope: !18384)
!18412 = !DILocation(line: 4039, column: 24, scope: !18384)
!18413 = !DILocation(line: 4036, column: 9, scope: !18384)
!18414 = !DILocation(line: 4036, column: 7, scope: !18384)
!18415 = !DILocation(line: 4040, column: 7, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18384, file: !3, line: 4040, column: 7)
!18417 = !DILocation(line: 4040, column: 11, scope: !18416)
!18418 = !DILocation(line: 4040, column: 7, scope: !18384)
!18419 = !DILocation(line: 4041, column: 4, scope: !18420)
!18420 = distinct !DILexicalBlock(scope: !18416, file: !3, line: 4040, column: 16)
!18421 = !DILocation(line: 4041, column: 8, scope: !18420)
!18422 = !DILocation(line: 4041, column: 18, scope: !18420)
!18423 = !DILocation(line: 4042, column: 8, scope: !18424)
!18424 = distinct !DILexicalBlock(scope: !18420, file: !3, line: 4042, column: 8)
!18425 = !DILocation(line: 4042, column: 26, scope: !18424)
!18426 = !DILocation(line: 4042, column: 61, scope: !18424)
!18427 = !DILocation(line: 4042, column: 65, scope: !18424)
!18428 = !DILocation(line: 4042, column: 8, scope: !18420)
!18429 = !DILocation(line: 4044, column: 13, scope: !18430)
!18430 = distinct !DILexicalBlock(scope: !18424, file: !3, line: 4042, column: 76)
!18431 = !DILocation(line: 4044, column: 17, scope: !18430)
!18432 = !DILocation(line: 4044, column: 35, scope: !18430)
!18433 = !DILocation(line: 4044, column: 40, scope: !18430)
!18434 = !DILocation(line: 4044, column: 5, scope: !18430)
!18435 = !DILocation(line: 4045, column: 23, scope: !18430)
!18436 = !DILocation(line: 4045, column: 27, scope: !18430)
!18437 = !DILocation(line: 4045, column: 59, scope: !18430)
!18438 = !DILocation(line: 4046, column: 37, scope: !18430)
!18439 = !DILocation(line: 4046, column: 41, scope: !18430)
!18440 = !DILocation(line: 4046, column: 50, scope: !18430)
!18441 = !DILocation(line: 4045, column: 11, scope: !18430)
!18442 = !DILocation(line: 4045, column: 9, scope: !18430)
!18443 = !DILocation(line: 4047, column: 9, scope: !18444)
!18444 = distinct !DILexicalBlock(scope: !18430, file: !3, line: 4047, column: 9)
!18445 = !DILocation(line: 4047, column: 9, scope: !18430)
!18446 = !DILocation(line: 4048, column: 18, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18444, file: !3, line: 4047, column: 14)
!18448 = !DILocation(line: 4050, column: 11, scope: !18447)
!18449 = !DILocation(line: 4048, column: 6, scope: !18447)
!18450 = !DILocation(line: 4051, column: 23, scope: !18447)
!18451 = !DILocation(line: 4051, column: 27, scope: !18447)
!18452 = !DILocation(line: 4051, column: 6, scope: !18447)
!18453 = !DILocation(line: 4052, column: 6, scope: !18447)
!18454 = !DILocation(line: 4052, column: 10, scope: !18447)
!18455 = !DILocation(line: 4052, column: 20, scope: !18447)
!18456 = !DILocation(line: 4053, column: 6, scope: !18447)
!18457 = !DILocation(line: 4056, column: 13, scope: !18430)
!18458 = !DILocation(line: 4056, column: 17, scope: !18430)
!18459 = !DILocation(line: 4056, column: 35, scope: !18430)
!18460 = !DILocation(line: 4056, column: 40, scope: !18430)
!18461 = !DILocation(line: 4056, column: 5, scope: !18430)
!18462 = !DILocation(line: 4057, column: 23, scope: !18430)
!18463 = !DILocation(line: 4057, column: 27, scope: !18430)
!18464 = !DILocation(line: 4057, column: 59, scope: !18430)
!18465 = !DILocation(line: 4058, column: 37, scope: !18430)
!18466 = !DILocation(line: 4058, column: 41, scope: !18430)
!18467 = !DILocation(line: 4058, column: 50, scope: !18430)
!18468 = !DILocation(line: 4057, column: 11, scope: !18430)
!18469 = !DILocation(line: 4057, column: 9, scope: !18430)
!18470 = !DILocation(line: 4059, column: 9, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18430, file: !3, line: 4059, column: 9)
!18472 = !DILocation(line: 4059, column: 9, scope: !18430)
!18473 = !DILocation(line: 4060, column: 18, scope: !18474)
!18474 = distinct !DILexicalBlock(scope: !18471, file: !3, line: 4059, column: 14)
!18475 = !DILocation(line: 4062, column: 11, scope: !18474)
!18476 = !DILocation(line: 4060, column: 6, scope: !18474)
!18477 = !DILocation(line: 4063, column: 23, scope: !18474)
!18478 = !DILocation(line: 4063, column: 27, scope: !18474)
!18479 = !DILocation(line: 4063, column: 6, scope: !18474)
!18480 = !DILocation(line: 4064, column: 6, scope: !18474)
!18481 = !DILocation(line: 4064, column: 10, scope: !18474)
!18482 = !DILocation(line: 4064, column: 20, scope: !18474)
!18483 = !DILocation(line: 4065, column: 6, scope: !18474)
!18484 = !DILocation(line: 4068, column: 13, scope: !18430)
!18485 = !DILocation(line: 4068, column: 17, scope: !18430)
!18486 = !DILocation(line: 4068, column: 41, scope: !18430)
!18487 = !DILocation(line: 4068, column: 46, scope: !18430)
!18488 = !DILocation(line: 4068, column: 5, scope: !18430)
!18489 = !DILocation(line: 4069, column: 23, scope: !18430)
!18490 = !DILocation(line: 4069, column: 27, scope: !18430)
!18491 = !DILocation(line: 4069, column: 62, scope: !18430)
!18492 = !DILocation(line: 4070, column: 40, scope: !18430)
!18493 = !DILocation(line: 4070, column: 44, scope: !18430)
!18494 = !DILocation(line: 4070, column: 56, scope: !18430)
!18495 = !DILocation(line: 4069, column: 11, scope: !18430)
!18496 = !DILocation(line: 4069, column: 9, scope: !18430)
!18497 = !DILocation(line: 4071, column: 9, scope: !18498)
!18498 = distinct !DILexicalBlock(scope: !18430, file: !3, line: 4071, column: 9)
!18499 = !DILocation(line: 4071, column: 9, scope: !18430)
!18500 = !DILocation(line: 4072, column: 18, scope: !18501)
!18501 = distinct !DILexicalBlock(scope: !18498, file: !3, line: 4071, column: 14)
!18502 = !DILocation(line: 4074, column: 11, scope: !18501)
!18503 = !DILocation(line: 4072, column: 6, scope: !18501)
!18504 = !DILocation(line: 4075, column: 23, scope: !18501)
!18505 = !DILocation(line: 4075, column: 27, scope: !18501)
!18506 = !DILocation(line: 4075, column: 6, scope: !18501)
!18507 = !DILocation(line: 4076, column: 6, scope: !18501)
!18508 = !DILocation(line: 4076, column: 10, scope: !18501)
!18509 = !DILocation(line: 4076, column: 20, scope: !18501)
!18510 = !DILocation(line: 4077, column: 6, scope: !18501)
!18511 = !DILocation(line: 4080, column: 15, scope: !18430)
!18512 = !DILocation(line: 4080, column: 20, scope: !18430)
!18513 = !DILocation(line: 4080, column: 5, scope: !18430)
!18514 = !DILocation(line: 4081, column: 15, scope: !18430)
!18515 = !DILocation(line: 4081, column: 20, scope: !18430)
!18516 = !DILocation(line: 4081, column: 5, scope: !18430)
!18517 = !DILocation(line: 4082, column: 25, scope: !18430)
!18518 = !DILocation(line: 4082, column: 5, scope: !18430)
!18519 = !DILocation(line: 4083, column: 25, scope: !18430)
!18520 = !DILocation(line: 4083, column: 5, scope: !18430)
!18521 = !DILocation(line: 4084, column: 25, scope: !18430)
!18522 = !DILocation(line: 4084, column: 5, scope: !18430)
!18523 = !DILocation(line: 4085, column: 4, scope: !18430)
!18524 = !DILocation(line: 4087, column: 23, scope: !18525)
!18525 = distinct !DILexicalBlock(scope: !18424, file: !3, line: 4085, column: 11)
!18526 = !DILocation(line: 4087, column: 27, scope: !18525)
!18527 = !DILocation(line: 4087, column: 60, scope: !18525)
!18528 = !DILocation(line: 4088, column: 9, scope: !18525)
!18529 = !DILocation(line: 4088, column: 31, scope: !18525)
!18530 = !DILocation(line: 4088, column: 36, scope: !18525)
!18531 = !DILocation(line: 4088, column: 42, scope: !18525)
!18532 = !DILocation(line: 4087, column: 11, scope: !18525)
!18533 = !DILocation(line: 4087, column: 9, scope: !18525)
!18534 = !DILocation(line: 4089, column: 9, scope: !18535)
!18535 = distinct !DILexicalBlock(scope: !18525, file: !3, line: 4089, column: 9)
!18536 = !DILocation(line: 4089, column: 9, scope: !18525)
!18537 = !DILocation(line: 4090, column: 18, scope: !18538)
!18538 = distinct !DILexicalBlock(scope: !18535, file: !3, line: 4089, column: 14)
!18539 = !DILocation(line: 4092, column: 11, scope: !18538)
!18540 = !DILocation(line: 4090, column: 6, scope: !18538)
!18541 = !DILocation(line: 4093, column: 23, scope: !18538)
!18542 = !DILocation(line: 4093, column: 27, scope: !18538)
!18543 = !DILocation(line: 4093, column: 6, scope: !18538)
!18544 = !DILocation(line: 4094, column: 6, scope: !18538)
!18545 = !DILocation(line: 4094, column: 10, scope: !18538)
!18546 = !DILocation(line: 4094, column: 20, scope: !18538)
!18547 = !DILocation(line: 4095, column: 6, scope: !18538)
!18548 = !DILocation(line: 4099, column: 15, scope: !18525)
!18549 = !DILocation(line: 4099, column: 20, scope: !18525)
!18550 = !DILocation(line: 4099, column: 5, scope: !18525)
!18551 = !DILocation(line: 4100, column: 15, scope: !18525)
!18552 = !DILocation(line: 4100, column: 20, scope: !18525)
!18553 = !DILocation(line: 4100, column: 5, scope: !18525)
!18554 = !DILocation(line: 4102, column: 16, scope: !18420)
!18555 = !DILocation(line: 4102, column: 4, scope: !18420)
!18556 = !DILocation(line: 4103, column: 4, scope: !18420)
!18557 = !DILocation(line: 4105, column: 2, scope: !18384)
!18558 = !DILocation(line: 4106, column: 6, scope: !18559)
!18559 = distinct !DILexicalBlock(scope: !18343, file: !3, line: 4106, column: 6)
!18560 = !DILocation(line: 4106, column: 10, scope: !18559)
!18561 = !DILocation(line: 4106, column: 20, scope: !18559)
!18562 = !DILocation(line: 4106, column: 6, scope: !18343)
!18563 = !DILocation(line: 4107, column: 24, scope: !18564)
!18564 = distinct !DILexicalBlock(scope: !18559, file: !3, line: 4106, column: 38)
!18565 = !DILocation(line: 4107, column: 28, scope: !18564)
!18566 = !DILocation(line: 4107, column: 9, scope: !18564)
!18567 = !DILocation(line: 4107, column: 7, scope: !18564)
!18568 = !DILocation(line: 4108, column: 7, scope: !18569)
!18569 = distinct !DILexicalBlock(scope: !18564, file: !3, line: 4108, column: 7)
!18570 = !DILocation(line: 4108, column: 11, scope: !18569)
!18571 = !DILocation(line: 4108, column: 7, scope: !18564)
!18572 = !DILocation(line: 4109, column: 4, scope: !18573)
!18573 = distinct !DILexicalBlock(scope: !18569, file: !3, line: 4108, column: 17)
!18574 = !DILocation(line: 4109, column: 8, scope: !18573)
!18575 = !DILocation(line: 4109, column: 18, scope: !18573)
!18576 = !DILocation(line: 4110, column: 22, scope: !18573)
!18577 = !DILocation(line: 4110, column: 26, scope: !18573)
!18578 = !DILocation(line: 4110, column: 35, scope: !18573)
!18579 = !DILocation(line: 4110, column: 40, scope: !18573)
!18580 = !DILocation(line: 4110, column: 62, scope: !18573)
!18581 = !DILocation(line: 4110, column: 67, scope: !18573)
!18582 = !DILocation(line: 4110, column: 73, scope: !18573)
!18583 = !DILocation(line: 4110, column: 10, scope: !18573)
!18584 = !DILocation(line: 4110, column: 8, scope: !18573)
!18585 = !DILocation(line: 4111, column: 8, scope: !18586)
!18586 = distinct !DILexicalBlock(scope: !18573, file: !3, line: 4111, column: 8)
!18587 = !DILocation(line: 4111, column: 8, scope: !18573)
!18588 = !DILocation(line: 4112, column: 17, scope: !18589)
!18589 = distinct !DILexicalBlock(scope: !18586, file: !3, line: 4111, column: 13)
!18590 = !DILocation(line: 4113, column: 10, scope: !18589)
!18591 = !DILocation(line: 4112, column: 5, scope: !18589)
!18592 = !DILocation(line: 4114, column: 21, scope: !18589)
!18593 = !DILocation(line: 4114, column: 25, scope: !18589)
!18594 = !DILocation(line: 4114, column: 5, scope: !18589)
!18595 = !DILocation(line: 4115, column: 5, scope: !18589)
!18596 = !DILocation(line: 4115, column: 9, scope: !18589)
!18597 = !DILocation(line: 4115, column: 19, scope: !18589)
!18598 = !DILocation(line: 4116, column: 5, scope: !18589)
!18599 = !DILocation(line: 4120, column: 14, scope: !18573)
!18600 = !DILocation(line: 4120, column: 19, scope: !18573)
!18601 = !DILocation(line: 4120, column: 4, scope: !18573)
!18602 = !DILocation(line: 4121, column: 14, scope: !18573)
!18603 = !DILocation(line: 4121, column: 19, scope: !18573)
!18604 = !DILocation(line: 4121, column: 4, scope: !18573)
!18605 = !DILocation(line: 4123, column: 39, scope: !18573)
!18606 = !DILocation(line: 4123, column: 44, scope: !18573)
!18607 = !DILocation(line: 4123, column: 4, scope: !18573)
!18608 = !DILocation(line: 4124, column: 16, scope: !18573)
!18609 = !DILocation(line: 4124, column: 4, scope: !18573)
!18610 = !DILocation(line: 4125, column: 4, scope: !18573)
!18611 = !DILocation(line: 4127, column: 2, scope: !18564)
!18612 = !DILocation(line: 4129, column: 18, scope: !18613)
!18613 = distinct !DILexicalBlock(scope: !18343, file: !3, line: 4129, column: 6)
!18614 = !DILocation(line: 4129, column: 22, scope: !18613)
!18615 = !DILocation(line: 4129, column: 31, scope: !18613)
!18616 = !DILocation(line: 4129, column: 36, scope: !18613)
!18617 = !DILocation(line: 4129, column: 58, scope: !18613)
!18618 = !DILocation(line: 4129, column: 63, scope: !18613)
!18619 = !DILocation(line: 4129, column: 69, scope: !18613)
!18620 = !DILocation(line: 4129, column: 6, scope: !18613)
!18621 = !DILocation(line: 4129, column: 74, scope: !18613)
!18622 = !DILocation(line: 4129, column: 6, scope: !18343)
!18623 = !DILocation(line: 4130, column: 3, scope: !18613)
!18624 = !DILocation(line: 4132, column: 2, scope: !18343)
!18625 = !DILabel(scope: !18343, name: "out_free_tx", file: !3, line: 4133)
!18626 = !DILocation(line: 4133, column: 1, scope: !18343)
!18627 = !DILocation(line: 4134, column: 11, scope: !18343)
!18628 = !DILocation(line: 4134, column: 15, scope: !18343)
!18629 = !DILocation(line: 4134, column: 47, scope: !18343)
!18630 = !DILocation(line: 4134, column: 55, scope: !18343)
!18631 = !DILocation(line: 4134, column: 2, scope: !18343)
!18632 = !DILabel(scope: !18343, name: "out_free_rx", file: !3, line: 4135)
!18633 = !DILocation(line: 4135, column: 1, scope: !18343)
!18634 = !DILocation(line: 4136, column: 11, scope: !18343)
!18635 = !DILocation(line: 4136, column: 15, scope: !18343)
!18636 = !DILocation(line: 4136, column: 47, scope: !18343)
!18637 = !DILocation(line: 4136, column: 55, scope: !18343)
!18638 = !DILocation(line: 4136, column: 2, scope: !18343)
!18639 = !DILabel(scope: !18343, name: "out_err", file: !3, line: 4137)
!18640 = !DILocation(line: 4137, column: 1, scope: !18343)
!18641 = !DILocation(line: 4138, column: 2, scope: !18343)
!18642 = !DILocation(line: 4139, column: 1, scope: !18343)
!18643 = distinct !DISubprogram(name: "nv_enable_hw_interrupts", scope: !3, file: !3, line: 1103, type: !5579, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18644 = !DILocalVariable(name: "dev", arg: 1, scope: !18643, file: !3, line: 1103, type: !290)
!18645 = !DILocation(line: 1103, column: 56, scope: !18643)
!18646 = !DILocalVariable(name: "mask", arg: 2, scope: !18643, file: !3, line: 1103, type: !987)
!18647 = !DILocation(line: 1103, column: 65, scope: !18643)
!18648 = !DILocalVariable(name: "base", scope: !18643, file: !3, line: 1105, type: !793)
!18649 = !DILocation(line: 1105, column: 14, scope: !18643)
!18650 = !DILocation(line: 1105, column: 32, scope: !18643)
!18651 = !DILocation(line: 1105, column: 21, scope: !18643)
!18652 = !DILocation(line: 1107, column: 9, scope: !18643)
!18653 = !DILocation(line: 1107, column: 15, scope: !18643)
!18654 = !DILocation(line: 1107, column: 20, scope: !18643)
!18655 = !DILocation(line: 1107, column: 2, scope: !18643)
!18656 = !DILocation(line: 1108, column: 1, scope: !18643)
!18657 = distinct !DISubprogram(name: "netif_start_queue", scope: !31, file: !31, line: 3285, type: !406, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18658 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !18659, file: !31, line: 3274, type: !6438)
!18659 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !31, file: !31, line: 3274, type: !12737, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18660 = !DILocation(line: 3274, column: 71, scope: !18659, inlinedAt: !18661)
!18661 = distinct !DILocation(line: 3287, column: 2, scope: !18657)
!18662 = !DILocalVariable(name: "dev", arg: 1, scope: !18657, file: !31, line: 3285, type: !290)
!18663 = !DILocation(line: 3285, column: 57, scope: !18657)
!18664 = !DILocation(line: 3287, column: 43, scope: !18657)
!18665 = !DILocation(line: 3287, column: 23, scope: !18657)
!18666 = !DILocation(line: 3276, column: 37, scope: !18659, inlinedAt: !18661)
!18667 = !DILocation(line: 3276, column: 48, scope: !18659, inlinedAt: !18661)
!18668 = !DILocation(line: 3276, column: 2, scope: !18659, inlinedAt: !18661)
!18669 = !DILocation(line: 3288, column: 1, scope: !18657)
!18670 = distinct !DISubprogram(name: "nv_napi_enable", scope: !3, file: !3, line: 1124, type: !406, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18671 = !DILocalVariable(name: "dev", arg: 1, scope: !18670, file: !3, line: 1124, type: !290)
!18672 = !DILocation(line: 1124, column: 47, scope: !18670)
!18673 = !DILocalVariable(name: "np", scope: !18670, file: !3, line: 1126, type: !7446)
!18674 = !DILocation(line: 1126, column: 18, scope: !18670)
!18675 = !DILocation(line: 1126, column: 34, scope: !18670)
!18676 = !DILocation(line: 1126, column: 23, scope: !18670)
!18677 = !DILocation(line: 1128, column: 15, scope: !18670)
!18678 = !DILocation(line: 1128, column: 19, scope: !18670)
!18679 = !DILocation(line: 1128, column: 2, scope: !18670)
!18680 = !DILocation(line: 1129, column: 1, scope: !18670)
!18681 = distinct !DISubprogram(name: "nv_set_loopback", scope: !3, file: !3, line: 4873, type: !917, scopeLine: 4874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18682 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !18683)
!18683 = distinct !DILocation(line: 4921, column: 2, scope: !18684)
!18684 = distinct !DILexicalBlock(scope: !18685, file: !3, line: 4921, column: 2)
!18685 = distinct !DILexicalBlock(scope: !18686, file: !3, line: 4921, column: 2)
!18686 = distinct !DILexicalBlock(scope: !18687, file: !3, line: 4921, column: 2)
!18687 = distinct !DILexicalBlock(scope: !18688, file: !3, line: 4921, column: 2)
!18688 = distinct !DILexicalBlock(scope: !18681, file: !3, line: 4921, column: 2)
!18689 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !18690)
!18690 = distinct !DILocation(line: 4916, column: 3, scope: !18691)
!18691 = distinct !DILexicalBlock(scope: !18692, file: !3, line: 4908, column: 9)
!18692 = distinct !DILexicalBlock(scope: !18681, file: !3, line: 4882, column: 6)
!18693 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !18690)
!18694 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !18695)
!18695 = distinct !DILocation(line: 4910, column: 4, scope: !18696)
!18696 = distinct !DILexicalBlock(scope: !18697, file: !3, line: 4909, column: 38)
!18697 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 4909, column: 7)
!18698 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !18695)
!18699 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !18700)
!18700 = distinct !DILocation(line: 4904, column: 4, scope: !18701)
!18701 = distinct !DILexicalBlock(scope: !18702, file: !3, line: 4896, column: 10)
!18702 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 4892, column: 7)
!18703 = distinct !DILexicalBlock(scope: !18692, file: !3, line: 4882, column: 35)
!18704 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !18700)
!18705 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !18706)
!18706 = distinct !DILocation(line: 4894, column: 4, scope: !18707)
!18707 = distinct !DILexicalBlock(scope: !18702, file: !3, line: 4892, column: 12)
!18708 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !18706)
!18709 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !18710)
!18710 = distinct !DILocation(line: 4884, column: 4, scope: !18711)
!18711 = distinct !DILexicalBlock(scope: !18712, file: !3, line: 4883, column: 35)
!18712 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 4883, column: 7)
!18713 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !18710)
!18714 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !18715)
!18715 = distinct !DILocation(line: 4923, column: 2, scope: !18681)
!18716 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !18715)
!18717 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !18718)
!18718 = distinct !DILocation(line: 4880, column: 2, scope: !18719)
!18719 = distinct !DILexicalBlock(scope: !18720, file: !3, line: 4880, column: 2)
!18720 = distinct !DILexicalBlock(scope: !18721, file: !3, line: 4880, column: 2)
!18721 = distinct !DILexicalBlock(scope: !18722, file: !3, line: 4880, column: 2)
!18722 = distinct !DILexicalBlock(scope: !18723, file: !3, line: 4880, column: 2)
!18723 = distinct !DILexicalBlock(scope: !18681, file: !3, line: 4880, column: 2)
!18724 = !DILocalVariable(name: "dev", arg: 1, scope: !18681, file: !3, line: 4873, type: !290)
!18725 = !DILocation(line: 4873, column: 47, scope: !18681)
!18726 = !DILocalVariable(name: "features", arg: 2, scope: !18681, file: !3, line: 4873, type: !329)
!18727 = !DILocation(line: 4873, column: 70, scope: !18681)
!18728 = !DILocalVariable(name: "np", scope: !18681, file: !3, line: 4875, type: !7446)
!18729 = !DILocation(line: 4875, column: 18, scope: !18681)
!18730 = !DILocation(line: 4875, column: 35, scope: !18681)
!18731 = !DILocation(line: 4875, column: 23, scope: !18681)
!18732 = !DILocalVariable(name: "flags", scope: !18681, file: !3, line: 4876, type: !312)
!18733 = !DILocation(line: 4876, column: 16, scope: !18681)
!18734 = !DILocalVariable(name: "miicontrol", scope: !18681, file: !3, line: 4877, type: !987)
!18735 = !DILocation(line: 4877, column: 6, scope: !18681)
!18736 = !DILocalVariable(name: "err", scope: !18681, file: !3, line: 4878, type: !32)
!18737 = !DILocation(line: 4878, column: 6, scope: !18681)
!18738 = !DILocalVariable(name: "retval", scope: !18681, file: !3, line: 4878, type: !32)
!18739 = !DILocation(line: 4878, column: 11, scope: !18681)
!18740 = !DILocation(line: 4880, column: 2, scope: !18681)
!18741 = !DILocation(line: 4880, column: 2, scope: !18723)
!18742 = !DILocalVariable(name: "__dummy", scope: !18743, file: !3, line: 4880, type: !312)
!18743 = distinct !DILexicalBlock(scope: !18722, file: !3, line: 4880, column: 2)
!18744 = !DILocation(line: 4880, column: 2, scope: !18743)
!18745 = !DILocalVariable(name: "__dummy2", scope: !18743, file: !3, line: 4880, type: !312)
!18746 = !DILocation(line: 4880, column: 2, scope: !18722)
!18747 = !DILocation(line: 4880, column: 2, scope: !18721)
!18748 = !DILocation(line: 4880, column: 2, scope: !18749)
!18749 = distinct !DILexicalBlock(scope: !18721, file: !3, line: 4880, column: 2)
!18750 = !DILocalVariable(name: "__dummy", scope: !18751, file: !3, line: 4880, type: !312)
!18751 = distinct !DILexicalBlock(scope: !18752, file: !3, line: 4880, column: 2)
!18752 = distinct !DILexicalBlock(scope: !18749, file: !3, line: 4880, column: 2)
!18753 = !DILocation(line: 4880, column: 2, scope: !18751)
!18754 = !DILocalVariable(name: "__dummy2", scope: !18751, file: !3, line: 4880, type: !312)
!18755 = !DILocation(line: 4880, column: 2, scope: !18752)
!18756 = !DILocation(line: 4880, column: 2, scope: !18720)
!18757 = !{i32 -2139293310}
!18758 = !DILocation(line: 4880, column: 2, scope: !18719)
!18759 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !18718)
!18760 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !18718)
!18761 = !DILocation(line: 4881, column: 22, scope: !18681)
!18762 = !DILocation(line: 4881, column: 27, scope: !18681)
!18763 = !DILocation(line: 4881, column: 31, scope: !18681)
!18764 = !DILocation(line: 4881, column: 15, scope: !18681)
!18765 = !DILocation(line: 4881, column: 13, scope: !18681)
!18766 = !DILocation(line: 4882, column: 6, scope: !18692)
!18767 = !DILocation(line: 4882, column: 15, scope: !18692)
!18768 = !DILocation(line: 4882, column: 6, scope: !18681)
!18769 = !DILocation(line: 4883, column: 7, scope: !18712)
!18770 = !DILocation(line: 4883, column: 18, scope: !18712)
!18771 = !DILocation(line: 4883, column: 7, scope: !18703)
!18772 = !DILocation(line: 4884, column: 28, scope: !18711)
!18773 = !DILocation(line: 4884, column: 32, scope: !18711)
!18774 = !DILocation(line: 4884, column: 38, scope: !18711)
!18775 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !18710)
!18776 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !18710)
!18777 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !18710)
!18778 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !18710)
!18779 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !18710)
!18780 = !DILocation(line: 4885, column: 16, scope: !18711)
!18781 = !DILocation(line: 4885, column: 4, scope: !18711)
!18782 = !DILocation(line: 4886, column: 4, scope: !18711)
!18783 = !DILocation(line: 4888, column: 18, scope: !18703)
!18784 = !DILocation(line: 4888, column: 3, scope: !18703)
!18785 = !DILocation(line: 4890, column: 14, scope: !18703)
!18786 = !DILocation(line: 4891, column: 16, scope: !18703)
!18787 = !DILocation(line: 4891, column: 21, scope: !18703)
!18788 = !DILocation(line: 4891, column: 25, scope: !18703)
!18789 = !DILocation(line: 4891, column: 44, scope: !18703)
!18790 = !DILocation(line: 4891, column: 9, scope: !18703)
!18791 = !DILocation(line: 4891, column: 7, scope: !18703)
!18792 = !DILocation(line: 4892, column: 7, scope: !18702)
!18793 = !DILocation(line: 4892, column: 7, scope: !18703)
!18794 = !DILocation(line: 4893, column: 11, scope: !18707)
!18795 = !DILocation(line: 4894, column: 28, scope: !18707)
!18796 = !DILocation(line: 4894, column: 32, scope: !18707)
!18797 = !DILocation(line: 4894, column: 38, scope: !18707)
!18798 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !18706)
!18799 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !18706)
!18800 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !18706)
!18801 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !18706)
!18802 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !18706)
!18803 = !DILocation(line: 4895, column: 13, scope: !18707)
!18804 = !DILocation(line: 4895, column: 4, scope: !18707)
!18805 = !DILocation(line: 4896, column: 3, scope: !18707)
!18806 = !DILocation(line: 4897, column: 22, scope: !18807)
!18807 = distinct !DILexicalBlock(scope: !18701, file: !3, line: 4897, column: 8)
!18808 = !DILocation(line: 4897, column: 8, scope: !18807)
!18809 = !DILocation(line: 4897, column: 8, scope: !18701)
!18810 = !DILocation(line: 4899, column: 24, scope: !18811)
!18811 = distinct !DILexicalBlock(scope: !18807, file: !3, line: 4897, column: 28)
!18812 = !DILocation(line: 4899, column: 5, scope: !18811)
!18813 = !DILocation(line: 4902, column: 22, scope: !18811)
!18814 = !DILocation(line: 4902, column: 5, scope: !18811)
!18815 = !DILocation(line: 4903, column: 4, scope: !18811)
!18816 = !DILocation(line: 4904, column: 28, scope: !18701)
!18817 = !DILocation(line: 4904, column: 32, scope: !18701)
!18818 = !DILocation(line: 4904, column: 38, scope: !18701)
!18819 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !18700)
!18820 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !18700)
!18821 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !18700)
!18822 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !18700)
!18823 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !18700)
!18824 = !DILocation(line: 4905, column: 16, scope: !18701)
!18825 = !DILocation(line: 4905, column: 4, scope: !18701)
!18826 = !DILocation(line: 4908, column: 2, scope: !18703)
!18827 = !DILocation(line: 4909, column: 9, scope: !18697)
!18828 = !DILocation(line: 4909, column: 20, scope: !18697)
!18829 = !DILocation(line: 4909, column: 7, scope: !18691)
!18830 = !DILocation(line: 4910, column: 28, scope: !18696)
!18831 = !DILocation(line: 4910, column: 32, scope: !18696)
!18832 = !DILocation(line: 4910, column: 38, scope: !18696)
!18833 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !18695)
!18834 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !18695)
!18835 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !18695)
!18836 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !18695)
!18837 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !18695)
!18838 = !DILocation(line: 4911, column: 16, scope: !18696)
!18839 = !DILocation(line: 4911, column: 4, scope: !18696)
!18840 = !DILocation(line: 4912, column: 4, scope: !18696)
!18841 = !DILocation(line: 4914, column: 18, scope: !18691)
!18842 = !DILocation(line: 4914, column: 3, scope: !18691)
!18843 = !DILocation(line: 4916, column: 27, scope: !18691)
!18844 = !DILocation(line: 4916, column: 31, scope: !18691)
!18845 = !DILocation(line: 4916, column: 37, scope: !18691)
!18846 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !18690)
!18847 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !18690)
!18848 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !18690)
!18849 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !18690)
!18850 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !18690)
!18851 = !DILocation(line: 4917, column: 15, scope: !18691)
!18852 = !DILocation(line: 4917, column: 3, scope: !18691)
!18853 = !DILocation(line: 4918, column: 12, scope: !18691)
!18854 = !DILocation(line: 4918, column: 3, scope: !18691)
!18855 = !DILocation(line: 4920, column: 2, scope: !18681)
!18856 = !DILocation(line: 4921, column: 2, scope: !18681)
!18857 = !DILocation(line: 4921, column: 2, scope: !18688)
!18858 = !DILocalVariable(name: "__dummy", scope: !18859, file: !3, line: 4921, type: !312)
!18859 = distinct !DILexicalBlock(scope: !18687, file: !3, line: 4921, column: 2)
!18860 = !DILocation(line: 4921, column: 2, scope: !18859)
!18861 = !DILocalVariable(name: "__dummy2", scope: !18859, file: !3, line: 4921, type: !312)
!18862 = !DILocation(line: 4921, column: 2, scope: !18687)
!18863 = !DILocation(line: 4921, column: 2, scope: !18686)
!18864 = !DILocation(line: 4921, column: 2, scope: !18865)
!18865 = distinct !DILexicalBlock(scope: !18686, file: !3, line: 4921, column: 2)
!18866 = !DILocalVariable(name: "__dummy", scope: !18867, file: !3, line: 4921, type: !312)
!18867 = distinct !DILexicalBlock(scope: !18868, file: !3, line: 4921, column: 2)
!18868 = distinct !DILexicalBlock(scope: !18865, file: !3, line: 4921, column: 2)
!18869 = !DILocation(line: 4921, column: 2, scope: !18867)
!18870 = !DILocalVariable(name: "__dummy2", scope: !18867, file: !3, line: 4921, type: !312)
!18871 = !DILocation(line: 4921, column: 2, scope: !18868)
!18872 = !DILocation(line: 4921, column: 2, scope: !18685)
!18873 = !{i32 -2139292109}
!18874 = !DILocation(line: 4921, column: 2, scope: !18684)
!18875 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !18683)
!18876 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !18683)
!18877 = !DILocation(line: 4922, column: 16, scope: !18681)
!18878 = !DILocation(line: 4922, column: 2, scope: !18681)
!18879 = !DILocation(line: 4923, column: 26, scope: !18681)
!18880 = !DILocation(line: 4923, column: 30, scope: !18681)
!18881 = !DILocation(line: 4923, column: 36, scope: !18681)
!18882 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !18715)
!18883 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !18715)
!18884 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !18715)
!18885 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !18715)
!18886 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !18715)
!18887 = !DILocation(line: 4925, column: 9, scope: !18681)
!18888 = !DILocation(line: 4925, column: 2, scope: !18681)
!18889 = !DILocation(line: 4926, column: 1, scope: !18681)
!18890 = distinct !DISubprogram(name: "nv_nic_irq_test", scope: !3, file: !3, line: 3965, type: !11693, scopeLine: 3966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18891 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !18892)
!18892 = distinct !DILocation(line: 3987, column: 2, scope: !18890)
!18893 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !18894)
!18894 = distinct !DILocation(line: 3985, column: 2, scope: !18890)
!18895 = !DILocalVariable(name: "foo", arg: 1, scope: !18890, file: !3, line: 3965, type: !32)
!18896 = !DILocation(line: 3965, column: 40, scope: !18890)
!18897 = !DILocalVariable(name: "data", arg: 2, scope: !18890, file: !3, line: 3965, type: !591)
!18898 = !DILocation(line: 3965, column: 51, scope: !18890)
!18899 = !DILocalVariable(name: "dev", scope: !18890, file: !3, line: 3967, type: !290)
!18900 = !DILocation(line: 3967, column: 21, scope: !18890)
!18901 = !DILocation(line: 3967, column: 49, scope: !18890)
!18902 = !DILocation(line: 3967, column: 27, scope: !18890)
!18903 = !DILocalVariable(name: "np", scope: !18890, file: !3, line: 3968, type: !7446)
!18904 = !DILocation(line: 3968, column: 18, scope: !18890)
!18905 = !DILocation(line: 3968, column: 35, scope: !18890)
!18906 = !DILocation(line: 3968, column: 23, scope: !18890)
!18907 = !DILocalVariable(name: "base", scope: !18890, file: !3, line: 3969, type: !793)
!18908 = !DILocation(line: 3969, column: 14, scope: !18890)
!18909 = !DILocation(line: 3969, column: 32, scope: !18890)
!18910 = !DILocation(line: 3969, column: 21, scope: !18890)
!18911 = !DILocalVariable(name: "events", scope: !18890, file: !3, line: 3970, type: !987)
!18912 = !DILocation(line: 3970, column: 6, scope: !18890)
!18913 = !DILocation(line: 3972, column: 8, scope: !18914)
!18914 = distinct !DILexicalBlock(scope: !18890, file: !3, line: 3972, column: 6)
!18915 = !DILocation(line: 3972, column: 12, scope: !18914)
!18916 = !DILocation(line: 3972, column: 22, scope: !18914)
!18917 = !DILocation(line: 3972, column: 6, scope: !18890)
!18918 = !DILocation(line: 3973, column: 18, scope: !18919)
!18919 = distinct !DILexicalBlock(scope: !18914, file: !3, line: 3972, column: 43)
!18920 = !DILocation(line: 3973, column: 23, scope: !18919)
!18921 = !DILocation(line: 3973, column: 12, scope: !18919)
!18922 = !DILocation(line: 3973, column: 41, scope: !18919)
!18923 = !DILocation(line: 3973, column: 10, scope: !18919)
!18924 = !DILocation(line: 3974, column: 10, scope: !18919)
!18925 = !DILocation(line: 3974, column: 17, scope: !18919)
!18926 = !DILocation(line: 3974, column: 36, scope: !18919)
!18927 = !DILocation(line: 3974, column: 41, scope: !18919)
!18928 = !DILocation(line: 3974, column: 3, scope: !18919)
!18929 = !DILocation(line: 3975, column: 2, scope: !18919)
!18930 = !DILocation(line: 3976, column: 18, scope: !18931)
!18931 = distinct !DILexicalBlock(scope: !18914, file: !3, line: 3975, column: 9)
!18932 = !DILocation(line: 3976, column: 23, scope: !18931)
!18933 = !DILocation(line: 3976, column: 12, scope: !18931)
!18934 = !DILocation(line: 3976, column: 45, scope: !18931)
!18935 = !DILocation(line: 3976, column: 10, scope: !18931)
!18936 = !DILocation(line: 3977, column: 10, scope: !18931)
!18937 = !DILocation(line: 3977, column: 17, scope: !18931)
!18938 = !DILocation(line: 3977, column: 36, scope: !18931)
!18939 = !DILocation(line: 3977, column: 41, scope: !18931)
!18940 = !DILocation(line: 3977, column: 3, scope: !18931)
!18941 = !DILocation(line: 3979, column: 11, scope: !18890)
!18942 = !DILocation(line: 3979, column: 2, scope: !18890)
!18943 = !DILocation(line: 3980, column: 8, scope: !18944)
!18944 = distinct !DILexicalBlock(scope: !18890, file: !3, line: 3980, column: 6)
!18945 = !DILocation(line: 3980, column: 15, scope: !18944)
!18946 = !DILocation(line: 3980, column: 6, scope: !18890)
!18947 = !DILocation(line: 3981, column: 3, scope: !18944)
!18948 = !DILocation(line: 3983, column: 20, scope: !18890)
!18949 = !DILocation(line: 3983, column: 2, scope: !18890)
!18950 = !DILocation(line: 3985, column: 13, scope: !18890)
!18951 = !DILocation(line: 3985, column: 17, scope: !18890)
!18952 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !18894)
!18953 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !18894)
!18954 = !DILocation(line: 3986, column: 2, scope: !18890)
!18955 = !DILocation(line: 3986, column: 6, scope: !18890)
!18956 = !DILocation(line: 3986, column: 16, scope: !18890)
!18957 = !DILocation(line: 3987, column: 15, scope: !18890)
!18958 = !DILocation(line: 3987, column: 19, scope: !18890)
!18959 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !18892)
!18960 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !18892)
!18961 = !DILocation(line: 3989, column: 2, scope: !18890)
!18962 = !DILocation(line: 3990, column: 1, scope: !18890)
!18963 = distinct !DISubprogram(name: "request_irq", scope: !3012, file: !3012, line: 157, type: !18964, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18964 = !DISubroutineType(types: !18965)
!18965 = !{!32, !7, !18966, !312, !292, !591}
!18966 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3012, line: 92, baseType: !18361)
!18967 = !DILocalVariable(name: "irq", arg: 1, scope: !18963, file: !3012, line: 157, type: !7)
!18968 = !DILocation(line: 157, column: 26, scope: !18963)
!18969 = !DILocalVariable(name: "handler", arg: 2, scope: !18963, file: !3012, line: 157, type: !18966)
!18970 = !DILocation(line: 157, column: 45, scope: !18963)
!18971 = !DILocalVariable(name: "flags", arg: 3, scope: !18963, file: !3012, line: 157, type: !312)
!18972 = !DILocation(line: 157, column: 68, scope: !18963)
!18973 = !DILocalVariable(name: "name", arg: 4, scope: !18963, file: !3012, line: 158, type: !292)
!18974 = !DILocation(line: 158, column: 18, scope: !18963)
!18975 = !DILocalVariable(name: "dev", arg: 5, scope: !18963, file: !3012, line: 158, type: !591)
!18976 = !DILocation(line: 158, column: 30, scope: !18963)
!18977 = !DILocation(line: 160, column: 30, scope: !18963)
!18978 = !DILocation(line: 160, column: 35, scope: !18963)
!18979 = !DILocation(line: 160, column: 50, scope: !18963)
!18980 = !DILocation(line: 160, column: 57, scope: !18963)
!18981 = !DILocation(line: 160, column: 63, scope: !18963)
!18982 = !DILocation(line: 160, column: 9, scope: !18963)
!18983 = !DILocation(line: 160, column: 2, scope: !18963)
!18984 = distinct !DISubprogram(name: "set_msix_vector_map", scope: !3, file: !3, line: 3992, type: !18985, scopeLine: 3993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18985 = !DISubroutineType(types: !18986)
!18986 = !{null, !290, !987, !987}
!18987 = !DILocalVariable(name: "dev", arg: 1, scope: !18984, file: !3, line: 3992, type: !290)
!18988 = !DILocation(line: 3992, column: 52, scope: !18984)
!18989 = !DILocalVariable(name: "vector", arg: 2, scope: !18984, file: !3, line: 3992, type: !987)
!18990 = !DILocation(line: 3992, column: 61, scope: !18984)
!18991 = !DILocalVariable(name: "irqmask", arg: 3, scope: !18984, file: !3, line: 3992, type: !987)
!18992 = !DILocation(line: 3992, column: 73, scope: !18984)
!18993 = !DILocalVariable(name: "base", scope: !18984, file: !3, line: 3994, type: !793)
!18994 = !DILocation(line: 3994, column: 14, scope: !18984)
!18995 = !DILocation(line: 3994, column: 32, scope: !18984)
!18996 = !DILocation(line: 3994, column: 21, scope: !18984)
!18997 = !DILocalVariable(name: "i", scope: !18984, file: !3, line: 3995, type: !32)
!18998 = !DILocation(line: 3995, column: 6, scope: !18984)
!18999 = !DILocalVariable(name: "msixmap", scope: !18984, file: !3, line: 3996, type: !987)
!19000 = !DILocation(line: 3996, column: 6, scope: !18984)
!19001 = !DILocation(line: 4002, column: 9, scope: !19002)
!19002 = distinct !DILexicalBlock(scope: !18984, file: !3, line: 4002, column: 2)
!19003 = !DILocation(line: 4002, column: 7, scope: !19002)
!19004 = !DILocation(line: 4002, column: 14, scope: !19005)
!19005 = distinct !DILexicalBlock(scope: !19002, file: !3, line: 4002, column: 2)
!19006 = !DILocation(line: 4002, column: 16, scope: !19005)
!19007 = !DILocation(line: 4002, column: 2, scope: !19002)
!19008 = !DILocation(line: 4003, column: 8, scope: !19009)
!19009 = distinct !DILexicalBlock(scope: !19010, file: !3, line: 4003, column: 7)
!19010 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 4002, column: 26)
!19011 = !DILocation(line: 4003, column: 19, scope: !19009)
!19012 = !DILocation(line: 4003, column: 16, scope: !19009)
!19013 = !DILocation(line: 4003, column: 22, scope: !19009)
!19014 = !DILocation(line: 4003, column: 7, scope: !19010)
!19015 = !DILocation(line: 4004, column: 15, scope: !19009)
!19016 = !DILocation(line: 4004, column: 26, scope: !19009)
!19017 = !DILocation(line: 4004, column: 28, scope: !19009)
!19018 = !DILocation(line: 4004, column: 22, scope: !19009)
!19019 = !DILocation(line: 4004, column: 12, scope: !19009)
!19020 = !DILocation(line: 4004, column: 4, scope: !19009)
!19021 = !DILocation(line: 4005, column: 2, scope: !19010)
!19022 = !DILocation(line: 4002, column: 22, scope: !19005)
!19023 = !DILocation(line: 4002, column: 2, scope: !19005)
!19024 = distinct !{!19024, !19007, !19025}
!19025 = !DILocation(line: 4005, column: 2, scope: !19002)
!19026 = !DILocation(line: 4006, column: 15, scope: !18984)
!19027 = !DILocation(line: 4006, column: 20, scope: !18984)
!19028 = !DILocation(line: 4006, column: 9, scope: !18984)
!19029 = !DILocation(line: 4006, column: 39, scope: !18984)
!19030 = !DILocation(line: 4006, column: 37, scope: !18984)
!19031 = !DILocation(line: 4006, column: 48, scope: !18984)
!19032 = !DILocation(line: 4006, column: 53, scope: !18984)
!19033 = !DILocation(line: 4006, column: 2, scope: !18984)
!19034 = !DILocation(line: 4008, column: 10, scope: !18984)
!19035 = !DILocation(line: 4009, column: 9, scope: !19036)
!19036 = distinct !DILexicalBlock(scope: !18984, file: !3, line: 4009, column: 2)
!19037 = !DILocation(line: 4009, column: 7, scope: !19036)
!19038 = !DILocation(line: 4009, column: 14, scope: !19039)
!19039 = distinct !DILexicalBlock(scope: !19036, file: !3, line: 4009, column: 2)
!19040 = !DILocation(line: 4009, column: 16, scope: !19039)
!19041 = !DILocation(line: 4009, column: 2, scope: !19036)
!19042 = !DILocation(line: 4010, column: 8, scope: !19043)
!19043 = distinct !DILexicalBlock(scope: !19044, file: !3, line: 4010, column: 7)
!19044 = distinct !DILexicalBlock(scope: !19039, file: !3, line: 4009, column: 26)
!19045 = !DILocation(line: 4010, column: 20, scope: !19043)
!19046 = !DILocation(line: 4010, column: 22, scope: !19043)
!19047 = !DILocation(line: 4010, column: 16, scope: !19043)
!19048 = !DILocation(line: 4010, column: 28, scope: !19043)
!19049 = !DILocation(line: 4010, column: 7, scope: !19044)
!19050 = !DILocation(line: 4011, column: 15, scope: !19043)
!19051 = !DILocation(line: 4011, column: 26, scope: !19043)
!19052 = !DILocation(line: 4011, column: 28, scope: !19043)
!19053 = !DILocation(line: 4011, column: 22, scope: !19043)
!19054 = !DILocation(line: 4011, column: 12, scope: !19043)
!19055 = !DILocation(line: 4011, column: 4, scope: !19043)
!19056 = !DILocation(line: 4012, column: 2, scope: !19044)
!19057 = !DILocation(line: 4009, column: 22, scope: !19039)
!19058 = !DILocation(line: 4009, column: 2, scope: !19039)
!19059 = distinct !{!19059, !19041, !19060}
!19060 = !DILocation(line: 4012, column: 2, scope: !19036)
!19061 = !DILocation(line: 4013, column: 15, scope: !18984)
!19062 = !DILocation(line: 4013, column: 20, scope: !18984)
!19063 = !DILocation(line: 4013, column: 9, scope: !18984)
!19064 = !DILocation(line: 4013, column: 39, scope: !18984)
!19065 = !DILocation(line: 4013, column: 37, scope: !18984)
!19066 = !DILocation(line: 4013, column: 48, scope: !18984)
!19067 = !DILocation(line: 4013, column: 53, scope: !18984)
!19068 = !DILocation(line: 4013, column: 2, scope: !18984)
!19069 = !DILocation(line: 4014, column: 1, scope: !18984)
!19070 = distinct !DISubprogram(name: "napi_enable", scope: !31, file: !31, line: 507, type: !11320, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19071 = !DILocalVariable(name: "n", arg: 1, scope: !19070, file: !31, line: 507, type: !7463)
!19072 = !DILocation(line: 507, column: 52, scope: !19070)
!19073 = !DILocation(line: 509, column: 2, scope: !19070)
!19074 = !DILocation(line: 509, column: 2, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19076, file: !31, line: 509, column: 2)
!19076 = distinct !DILexicalBlock(scope: !19070, file: !31, line: 509, column: 2)
!19077 = !DILocation(line: 509, column: 2, scope: !19076)
!19078 = !DILocation(line: 509, column: 2, scope: !19079)
!19079 = distinct !DILexicalBlock(scope: !19075, file: !31, line: 509, column: 2)
!19080 = !DILocation(line: 509, column: 2, scope: !19081)
!19081 = distinct !DILexicalBlock(scope: !19079, file: !31, line: 509, column: 2)
!19082 = !DILocation(line: 509, column: 2, scope: !19083)
!19083 = distinct !DILexicalBlock(scope: !19079, file: !31, line: 509, column: 2)
!19084 = !{i32 -2139865325, i32 -2139865296, i32 -2139865250, i32 -2139865192, i32 -2139865138, i32 -2139865084, i32 -2139865029, i32 -2139864998}
!19085 = !DILocation(line: 509, column: 2, scope: !19086)
!19086 = distinct !DILexicalBlock(scope: !19087, file: !31, line: 509, column: 2)
!19087 = distinct !DILexicalBlock(scope: !19079, file: !31, line: 509, column: 2)
!19088 = !{i32 -2139864550, i32 -2139864543, i32 -2139864489, i32 -2139864458, i32 -2139864428}
!19089 = !DILocation(line: 509, column: 2, scope: !19087)
!19090 = !DILocation(line: 510, column: 2, scope: !19070)
!19091 = !{i32 -2139864359}
!19092 = !DILocation(line: 511, column: 31, scope: !19070)
!19093 = !DILocation(line: 511, column: 34, scope: !19070)
!19094 = !DILocation(line: 511, column: 2, scope: !19070)
!19095 = !DILocation(line: 512, column: 31, scope: !19070)
!19096 = !DILocation(line: 512, column: 34, scope: !19070)
!19097 = !DILocation(line: 512, column: 2, scope: !19070)
!19098 = !DILocation(line: 513, column: 1, scope: !19070)
!19099 = distinct !DISubprogram(name: "nv_disable_irq", scope: !3, file: !3, line: 1086, type: !406, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19100 = !DILocalVariable(name: "dev", arg: 1, scope: !19099, file: !3, line: 1086, type: !290)
!19101 = !DILocation(line: 1086, column: 47, scope: !19099)
!19102 = !DILocalVariable(name: "np", scope: !19099, file: !3, line: 1088, type: !7446)
!19103 = !DILocation(line: 1088, column: 18, scope: !19099)
!19104 = !DILocation(line: 1088, column: 34, scope: !19099)
!19105 = !DILocation(line: 1088, column: 23, scope: !19099)
!19106 = !DILocation(line: 1090, column: 24, scope: !19107)
!19107 = distinct !DILexicalBlock(scope: !19099, file: !3, line: 1090, column: 6)
!19108 = !DILocation(line: 1090, column: 7, scope: !19107)
!19109 = !DILocation(line: 1090, column: 6, scope: !19099)
!19110 = !DILocation(line: 1091, column: 7, scope: !19111)
!19111 = distinct !DILexicalBlock(scope: !19112, file: !3, line: 1091, column: 7)
!19112 = distinct !DILexicalBlock(scope: !19107, file: !3, line: 1090, column: 30)
!19113 = !DILocation(line: 1091, column: 11, scope: !19111)
!19114 = !DILocation(line: 1091, column: 21, scope: !19111)
!19115 = !DILocation(line: 1091, column: 7, scope: !19112)
!19116 = !DILocation(line: 1092, column: 16, scope: !19111)
!19117 = !DILocation(line: 1092, column: 20, scope: !19111)
!19118 = !DILocation(line: 1092, column: 53, scope: !19111)
!19119 = !DILocation(line: 1092, column: 4, scope: !19111)
!19120 = !DILocation(line: 1094, column: 16, scope: !19111)
!19121 = !DILocation(line: 1094, column: 20, scope: !19111)
!19122 = !DILocation(line: 1094, column: 29, scope: !19111)
!19123 = !DILocation(line: 1094, column: 4, scope: !19111)
!19124 = !DILocation(line: 1095, column: 2, scope: !19112)
!19125 = !DILocation(line: 1096, column: 15, scope: !19126)
!19126 = distinct !DILexicalBlock(scope: !19107, file: !3, line: 1095, column: 9)
!19127 = !DILocation(line: 1096, column: 19, scope: !19126)
!19128 = !DILocation(line: 1096, column: 51, scope: !19126)
!19129 = !DILocation(line: 1096, column: 3, scope: !19126)
!19130 = !DILocation(line: 1097, column: 15, scope: !19126)
!19131 = !DILocation(line: 1097, column: 19, scope: !19126)
!19132 = !DILocation(line: 1097, column: 51, scope: !19126)
!19133 = !DILocation(line: 1097, column: 3, scope: !19126)
!19134 = !DILocation(line: 1098, column: 15, scope: !19126)
!19135 = !DILocation(line: 1098, column: 19, scope: !19126)
!19136 = !DILocation(line: 1098, column: 54, scope: !19126)
!19137 = !DILocation(line: 1098, column: 3, scope: !19126)
!19138 = !DILocation(line: 1100, column: 1, scope: !19099)
!19139 = distinct !DISubprogram(name: "nv_enable_irq", scope: !3, file: !3, line: 1070, type: !406, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19140 = !DILocalVariable(name: "dev", arg: 1, scope: !19139, file: !3, line: 1070, type: !290)
!19141 = !DILocation(line: 1070, column: 46, scope: !19139)
!19142 = !DILocalVariable(name: "np", scope: !19139, file: !3, line: 1072, type: !7446)
!19143 = !DILocation(line: 1072, column: 18, scope: !19139)
!19144 = !DILocation(line: 1072, column: 34, scope: !19139)
!19145 = !DILocation(line: 1072, column: 23, scope: !19139)
!19146 = !DILocation(line: 1074, column: 24, scope: !19147)
!19147 = distinct !DILexicalBlock(scope: !19139, file: !3, line: 1074, column: 6)
!19148 = !DILocation(line: 1074, column: 7, scope: !19147)
!19149 = !DILocation(line: 1074, column: 6, scope: !19139)
!19150 = !DILocation(line: 1075, column: 7, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19152, file: !3, line: 1075, column: 7)
!19152 = distinct !DILexicalBlock(scope: !19147, file: !3, line: 1074, column: 30)
!19153 = !DILocation(line: 1075, column: 11, scope: !19151)
!19154 = !DILocation(line: 1075, column: 21, scope: !19151)
!19155 = !DILocation(line: 1075, column: 7, scope: !19152)
!19156 = !DILocation(line: 1076, column: 15, scope: !19151)
!19157 = !DILocation(line: 1076, column: 19, scope: !19151)
!19158 = !DILocation(line: 1076, column: 52, scope: !19151)
!19159 = !DILocation(line: 1076, column: 4, scope: !19151)
!19160 = !DILocation(line: 1078, column: 15, scope: !19151)
!19161 = !DILocation(line: 1078, column: 19, scope: !19151)
!19162 = !DILocation(line: 1078, column: 28, scope: !19151)
!19163 = !DILocation(line: 1078, column: 4, scope: !19151)
!19164 = !DILocation(line: 1079, column: 2, scope: !19152)
!19165 = !DILocation(line: 1080, column: 14, scope: !19166)
!19166 = distinct !DILexicalBlock(scope: !19147, file: !3, line: 1079, column: 9)
!19167 = !DILocation(line: 1080, column: 18, scope: !19166)
!19168 = !DILocation(line: 1080, column: 50, scope: !19166)
!19169 = !DILocation(line: 1080, column: 3, scope: !19166)
!19170 = !DILocation(line: 1081, column: 14, scope: !19166)
!19171 = !DILocation(line: 1081, column: 18, scope: !19166)
!19172 = !DILocation(line: 1081, column: 50, scope: !19166)
!19173 = !DILocation(line: 1081, column: 3, scope: !19166)
!19174 = !DILocation(line: 1082, column: 14, scope: !19166)
!19175 = !DILocation(line: 1082, column: 18, scope: !19166)
!19176 = !DILocation(line: 1082, column: 53, scope: !19166)
!19177 = !DILocation(line: 1082, column: 3, scope: !19166)
!19178 = !DILocation(line: 1084, column: 1, scope: !19139)
!19179 = distinct !DISubprogram(name: "nv_napi_disable", scope: !3, file: !3, line: 1131, type: !406, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19180 = !DILocalVariable(name: "dev", arg: 1, scope: !19179, file: !3, line: 1131, type: !290)
!19181 = !DILocation(line: 1131, column: 48, scope: !19179)
!19182 = !DILocalVariable(name: "np", scope: !19179, file: !3, line: 1133, type: !7446)
!19183 = !DILocation(line: 1133, column: 18, scope: !19179)
!19184 = !DILocation(line: 1133, column: 34, scope: !19179)
!19185 = !DILocation(line: 1133, column: 23, scope: !19179)
!19186 = !DILocation(line: 1135, column: 16, scope: !19179)
!19187 = !DILocation(line: 1135, column: 20, scope: !19179)
!19188 = !DILocation(line: 1135, column: 2, scope: !19179)
!19189 = !DILocation(line: 1136, column: 1, scope: !19179)
!19190 = distinct !DISubprogram(name: "netif_stop_queue", scope: !31, file: !31, line: 3336, type: !406, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19191 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !19192, file: !31, line: 3324, type: !6438)
!19192 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !31, file: !31, line: 3324, type: !12737, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19193 = !DILocation(line: 3324, column: 70, scope: !19192, inlinedAt: !19194)
!19194 = distinct !DILocation(line: 3338, column: 2, scope: !19190)
!19195 = !DILocalVariable(name: "dev", arg: 1, scope: !19190, file: !31, line: 3336, type: !290)
!19196 = !DILocation(line: 3336, column: 56, scope: !19190)
!19197 = !DILocation(line: 3338, column: 42, scope: !19190)
!19198 = !DILocation(line: 3338, column: 22, scope: !19190)
!19199 = !DILocation(line: 3326, column: 35, scope: !19192, inlinedAt: !19194)
!19200 = !DILocation(line: 3326, column: 46, scope: !19192, inlinedAt: !19194)
!19201 = !DILocation(line: 3326, column: 2, scope: !19192, inlinedAt: !19194)
!19202 = !DILocation(line: 3339, column: 1, scope: !19190)
!19203 = distinct !DISubprogram(name: "nv_free_irq", scope: !3, file: !3, line: 4141, type: !406, scopeLine: 4142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19204 = !DILocalVariable(name: "dev", arg: 1, scope: !19203, file: !3, line: 4141, type: !290)
!19205 = !DILocation(line: 4141, column: 44, scope: !19203)
!19206 = !DILocalVariable(name: "np", scope: !19203, file: !3, line: 4143, type: !7446)
!19207 = !DILocation(line: 4143, column: 18, scope: !19203)
!19208 = !DILocation(line: 4143, column: 34, scope: !19203)
!19209 = !DILocation(line: 4143, column: 23, scope: !19203)
!19210 = !DILocalVariable(name: "i", scope: !19203, file: !3, line: 4144, type: !32)
!19211 = !DILocation(line: 4144, column: 6, scope: !19203)
!19212 = !DILocation(line: 4146, column: 6, scope: !19213)
!19213 = distinct !DILexicalBlock(scope: !19203, file: !3, line: 4146, column: 6)
!19214 = !DILocation(line: 4146, column: 10, scope: !19213)
!19215 = !DILocation(line: 4146, column: 20, scope: !19213)
!19216 = !DILocation(line: 4146, column: 6, scope: !19203)
!19217 = !DILocation(line: 4147, column: 10, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19219, file: !3, line: 4147, column: 3)
!19219 = distinct !DILexicalBlock(scope: !19213, file: !3, line: 4146, column: 40)
!19220 = !DILocation(line: 4147, column: 8, scope: !19218)
!19221 = !DILocation(line: 4147, column: 15, scope: !19222)
!19222 = distinct !DILexicalBlock(scope: !19218, file: !3, line: 4147, column: 3)
!19223 = !DILocation(line: 4147, column: 20, scope: !19222)
!19224 = !DILocation(line: 4147, column: 24, scope: !19222)
!19225 = !DILocation(line: 4147, column: 34, scope: !19222)
!19226 = !DILocation(line: 4147, column: 17, scope: !19222)
!19227 = !DILocation(line: 4147, column: 3, scope: !19218)
!19228 = !DILocation(line: 4148, column: 13, scope: !19222)
!19229 = !DILocation(line: 4148, column: 17, scope: !19222)
!19230 = !DILocation(line: 4148, column: 29, scope: !19222)
!19231 = !DILocation(line: 4148, column: 32, scope: !19222)
!19232 = !DILocation(line: 4148, column: 40, scope: !19222)
!19233 = !DILocation(line: 4148, column: 4, scope: !19222)
!19234 = !DILocation(line: 4147, column: 61, scope: !19222)
!19235 = !DILocation(line: 4147, column: 3, scope: !19222)
!19236 = distinct !{!19236, !19227, !19237}
!19237 = !DILocation(line: 4148, column: 43, scope: !19218)
!19238 = !DILocation(line: 4149, column: 20, scope: !19219)
!19239 = !DILocation(line: 4149, column: 24, scope: !19219)
!19240 = !DILocation(line: 4149, column: 3, scope: !19219)
!19241 = !DILocation(line: 4150, column: 3, scope: !19219)
!19242 = !DILocation(line: 4150, column: 7, scope: !19219)
!19243 = !DILocation(line: 4150, column: 17, scope: !19219)
!19244 = !DILocation(line: 4151, column: 2, scope: !19219)
!19245 = !DILocation(line: 4152, column: 12, scope: !19246)
!19246 = distinct !DILexicalBlock(scope: !19213, file: !3, line: 4151, column: 9)
!19247 = !DILocation(line: 4152, column: 16, scope: !19246)
!19248 = !DILocation(line: 4152, column: 25, scope: !19246)
!19249 = !DILocation(line: 4152, column: 30, scope: !19246)
!19250 = !DILocation(line: 4152, column: 3, scope: !19246)
!19251 = !DILocation(line: 4153, column: 7, scope: !19252)
!19252 = distinct !DILexicalBlock(scope: !19246, file: !3, line: 4153, column: 7)
!19253 = !DILocation(line: 4153, column: 11, scope: !19252)
!19254 = !DILocation(line: 4153, column: 21, scope: !19252)
!19255 = !DILocation(line: 4153, column: 7, scope: !19246)
!19256 = !DILocation(line: 4154, column: 20, scope: !19257)
!19257 = distinct !DILexicalBlock(scope: !19252, file: !3, line: 4153, column: 39)
!19258 = !DILocation(line: 4154, column: 24, scope: !19257)
!19259 = !DILocation(line: 4154, column: 4, scope: !19257)
!19260 = !DILocation(line: 4155, column: 4, scope: !19257)
!19261 = !DILocation(line: 4155, column: 8, scope: !19257)
!19262 = !DILocation(line: 4155, column: 18, scope: !19257)
!19263 = !DILocation(line: 4156, column: 3, scope: !19257)
!19264 = !DILocation(line: 4158, column: 1, scope: !19203)
!19265 = distinct !DISubprogram(name: "skb_headlen", scope: !417, file: !417, line: 2110, type: !19266, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19266 = !DISubroutineType(types: !19267)
!19267 = !{!7, !6052}
!19268 = !DILocalVariable(name: "skb", arg: 1, scope: !19265, file: !417, line: 2110, type: !6052)
!19269 = !DILocation(line: 2110, column: 62, scope: !19265)
!19270 = !DILocation(line: 2112, column: 9, scope: !19265)
!19271 = !DILocation(line: 2112, column: 14, scope: !19265)
!19272 = !DILocation(line: 2112, column: 20, scope: !19265)
!19273 = !DILocation(line: 2112, column: 25, scope: !19265)
!19274 = !DILocation(line: 2112, column: 18, scope: !19265)
!19275 = !DILocation(line: 2112, column: 2, scope: !19265)
!19276 = distinct !DISubprogram(name: "skb_frag_size", scope: !417, file: !417, line: 327, type: !19277, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19277 = !DISubroutineType(types: !19278)
!19278 = !{!7, !17268}
!19279 = !DILocalVariable(name: "frag", arg: 1, scope: !19276, file: !417, line: 327, type: !17268)
!19280 = !DILocation(line: 327, column: 60, scope: !19276)
!19281 = !DILocation(line: 329, column: 9, scope: !19276)
!19282 = !DILocation(line: 329, column: 15, scope: !19276)
!19283 = !DILocation(line: 329, column: 2, scope: !19276)
!19284 = distinct !DISubprogram(name: "nv_get_empty_tx_slots", scope: !3, file: !3, line: 2093, type: !19285, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19285 = !DISubroutineType(types: !19286)
!19286 = !{!987, !7446}
!19287 = !DILocalVariable(name: "np", arg: 1, scope: !19284, file: !3, line: 2093, type: !7446)
!19288 = !DILocation(line: 2093, column: 57, scope: !19284)
!19289 = !DILocation(line: 2095, column: 15, scope: !19284)
!19290 = !DILocation(line: 2095, column: 19, scope: !19284)
!19291 = !DILocation(line: 2095, column: 36, scope: !19284)
!19292 = !DILocation(line: 2095, column: 40, scope: !19284)
!19293 = !DILocation(line: 2095, column: 56, scope: !19284)
!19294 = !DILocation(line: 2095, column: 60, scope: !19284)
!19295 = !DILocation(line: 2095, column: 73, scope: !19284)
!19296 = !DILocation(line: 2095, column: 77, scope: !19284)
!19297 = !DILocation(line: 2095, column: 71, scope: !19284)
!19298 = !DILocation(line: 2095, column: 53, scope: !19284)
!19299 = !DILocation(line: 2095, column: 92, scope: !19284)
!19300 = !DILocation(line: 2095, column: 96, scope: !19284)
!19301 = !DILocation(line: 2095, column: 90, scope: !19284)
!19302 = !DILocation(line: 2095, column: 32, scope: !19284)
!19303 = !DILocation(line: 2095, column: 9, scope: !19284)
!19304 = !DILocation(line: 2095, column: 2, scope: !19284)
!19305 = distinct !DISubprogram(name: "skb_frag_dma_map", scope: !417, file: !417, line: 3112, type: !19306, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19306 = !DISubroutineType(types: !19307)
!19307 = !{!2036, !6545, !17268, !1039, !1039, !7238}
!19308 = !DILocalVariable(name: "dev", arg: 1, scope: !19305, file: !417, line: 3112, type: !6545)
!19309 = !DILocation(line: 3112, column: 58, scope: !19305)
!19310 = !DILocalVariable(name: "frag", arg: 2, scope: !19305, file: !417, line: 3113, type: !17268)
!19311 = !DILocation(line: 3113, column: 26, scope: !19305)
!19312 = !DILocalVariable(name: "offset", arg: 3, scope: !19305, file: !417, line: 3114, type: !1039)
!19313 = !DILocation(line: 3114, column: 15, scope: !19305)
!19314 = !DILocalVariable(name: "size", arg: 4, scope: !19305, file: !417, line: 3114, type: !1039)
!19315 = !DILocation(line: 3114, column: 30, scope: !19305)
!19316 = !DILocalVariable(name: "dir", arg: 5, scope: !19305, file: !417, line: 3115, type: !7238)
!19317 = !DILocation(line: 3115, column: 32, scope: !19305)
!19318 = !DILocation(line: 3117, column: 9, scope: !19305)
!19319 = !DILocation(line: 3117, column: 2, scope: !19305)
!19320 = distinct !DISubprogram(name: "skb_is_gso", scope: !417, file: !417, line: 4452, type: !13946, scopeLine: 4453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19321 = !DILocalVariable(name: "skb", arg: 1, scope: !19320, file: !417, line: 4452, type: !6052)
!19322 = !DILocation(line: 4452, column: 53, scope: !19320)
!19323 = !DILocation(line: 4454, column: 9, scope: !19320)
!19324 = !DILocation(line: 4454, column: 26, scope: !19320)
!19325 = !DILocation(line: 4454, column: 2, scope: !19320)
!19326 = distinct !DISubprogram(name: "netdev_sent_queue", scope: !31, file: !31, line: 3457, type: !733, scopeLine: 3458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19327 = !DILocalVariable(name: "dev", arg: 1, scope: !19326, file: !31, line: 3457, type: !290)
!19328 = !DILocation(line: 3457, column: 57, scope: !19326)
!19329 = !DILocalVariable(name: "bytes", arg: 2, scope: !19326, file: !31, line: 3457, type: !7)
!19330 = !DILocation(line: 3457, column: 75, scope: !19326)
!19331 = !DILocation(line: 3459, column: 43, scope: !19326)
!19332 = !DILocation(line: 3459, column: 23, scope: !19326)
!19333 = !DILocation(line: 3459, column: 52, scope: !19326)
!19334 = !DILocation(line: 3459, column: 2, scope: !19326)
!19335 = !DILocation(line: 3460, column: 1, scope: !19326)
!19336 = distinct !DISubprogram(name: "skb_tx_timestamp", scope: !417, file: !417, line: 3876, type: !469, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19337 = !DILocalVariable(name: "skb", arg: 1, scope: !19336, file: !417, line: 3876, type: !415)
!19338 = !DILocation(line: 3876, column: 53, scope: !19336)
!19339 = !DILocation(line: 3878, column: 25, scope: !19336)
!19340 = !DILocation(line: 3878, column: 2, scope: !19336)
!19341 = !DILocation(line: 3879, column: 6, scope: !19342)
!19342 = distinct !DILexicalBlock(scope: !19336, file: !417, line: 3879, column: 6)
!19343 = !DILocation(line: 3879, column: 23, scope: !19342)
!19344 = !DILocation(line: 3879, column: 32, scope: !19342)
!19345 = !DILocation(line: 3879, column: 6, scope: !19336)
!19346 = !DILocation(line: 3880, column: 17, scope: !19342)
!19347 = !DILocation(line: 3880, column: 3, scope: !19342)
!19348 = !DILocation(line: 3881, column: 1, scope: !19336)
!19349 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !31, file: !31, line: 3354, type: !11366, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19350 = !DILocalVariable(name: "dev", arg: 1, scope: !19349, file: !31, line: 3354, type: !773)
!19351 = !DILocation(line: 3354, column: 65, scope: !19349)
!19352 = !DILocation(line: 3356, column: 52, scope: !19349)
!19353 = !DILocation(line: 3356, column: 32, scope: !19349)
!19354 = !DILocation(line: 3356, column: 9, scope: !19349)
!19355 = !DILocation(line: 3356, column: 2, scope: !19349)
!19356 = distinct !DISubprogram(name: "netdev_xmit_more", scope: !31, file: !31, line: 4738, type: !6205, scopeLine: 4739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19357 = !DILocation(line: 4740, column: 9, scope: !19358)
!19358 = distinct !DILexicalBlock(scope: !19356, file: !31, line: 4740, column: 9)
!19359 = !DILocalVariable(name: "pscr_ret__", scope: !19360, file: !31, line: 4740, type: !794)
!19360 = distinct !DILexicalBlock(scope: !19358, file: !31, line: 4740, column: 9)
!19361 = !DILocation(line: 4740, column: 9, scope: !19360)
!19362 = !DILocalVariable(name: "__vpp_verify", scope: !19363, file: !31, line: 4740, type: !3258)
!19363 = distinct !DILexicalBlock(scope: !19360, file: !31, line: 4740, column: 9)
!19364 = !DILocation(line: 4740, column: 9, scope: !19363)
!19365 = !DILocalVariable(name: "pfo_val__", scope: !19366, file: !31, line: 4740, type: !794)
!19366 = distinct !DILexicalBlock(scope: !19360, file: !31, line: 4740, column: 9)
!19367 = !DILocation(line: 4740, column: 9, scope: !19366)
!19368 = !{i32 -2139738778}
!19369 = !DILocation(line: 4740, column: 9, scope: !19356)
!19370 = !DILocation(line: 4740, column: 2, scope: !19356)
!19371 = distinct !DISubprogram(name: "skb_frag_page", scope: !417, file: !417, line: 2983, type: !19372, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19372 = !DISubroutineType(types: !19373)
!19373 = !{!1719, !17268}
!19374 = !DILocalVariable(name: "frag", arg: 1, scope: !19371, file: !417, line: 2983, type: !17268)
!19375 = !DILocation(line: 2983, column: 60, scope: !19371)
!19376 = !DILocation(line: 2985, column: 9, scope: !19371)
!19377 = !DILocation(line: 2985, column: 15, scope: !19371)
!19378 = !DILocation(line: 2985, column: 2, scope: !19371)
!19379 = distinct !DISubprogram(name: "skb_frag_off", scope: !417, file: !417, line: 2941, type: !19277, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19380 = !DILocalVariable(name: "frag", arg: 1, scope: !19379, file: !417, line: 2941, type: !17268)
!19381 = !DILocation(line: 2941, column: 59, scope: !19379)
!19382 = !DILocation(line: 2943, column: 9, scope: !19379)
!19383 = !DILocation(line: 2943, column: 15, scope: !19379)
!19384 = !DILocation(line: 2943, column: 2, scope: !19379)
!19385 = distinct !DISubprogram(name: "netdev_tx_sent_queue", scope: !31, file: !31, line: 3404, type: !19386, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19386 = !DISubroutineType(types: !19387)
!19387 = !{null, !6438, !7}
!19388 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !19385, file: !31, line: 3404, type: !6438)
!19389 = !DILocation(line: 3404, column: 62, scope: !19385)
!19390 = !DILocalVariable(name: "bytes", arg: 2, scope: !19385, file: !31, line: 3405, type: !7)
!19391 = !DILocation(line: 3405, column: 19, scope: !19385)
!19392 = !DILocation(line: 3408, column: 14, scope: !19385)
!19393 = !DILocation(line: 3408, column: 25, scope: !19385)
!19394 = !DILocation(line: 3408, column: 30, scope: !19385)
!19395 = !DILocation(line: 3408, column: 2, scope: !19385)
!19396 = !DILocation(line: 3410, column: 6, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19385, file: !31, line: 3410, column: 6)
!19398 = !DILocation(line: 3410, column: 6, scope: !19385)
!19399 = !DILocation(line: 3411, column: 3, scope: !19397)
!19400 = !DILocation(line: 3413, column: 37, scope: !19385)
!19401 = !DILocation(line: 3413, column: 48, scope: !19385)
!19402 = !DILocation(line: 3413, column: 2, scope: !19385)
!19403 = !DILocation(line: 3420, column: 2, scope: !19385)
!19404 = !{i32 -2139778648}
!19405 = !DILocation(line: 3423, column: 6, scope: !19406)
!19406 = distinct !DILexicalBlock(scope: !19385, file: !31, line: 3423, column: 6)
!19407 = !DILocation(line: 3423, column: 6, scope: !19385)
!19408 = !DILocation(line: 3424, column: 40, scope: !19406)
!19409 = !DILocation(line: 3424, column: 51, scope: !19406)
!19410 = !DILocation(line: 3424, column: 3, scope: !19406)
!19411 = !DILocation(line: 3426, column: 1, scope: !19385)
!19412 = distinct !DISubprogram(name: "dql_queued", scope: !6456, file: !6456, line: 75, type: !19413, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19413 = !DISubroutineType(types: !19414)
!19414 = !{null, !19415, !7}
!19415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 64)
!19416 = !DILocalVariable(name: "dql", arg: 1, scope: !19412, file: !6456, line: 75, type: !19415)
!19417 = !DILocation(line: 75, column: 43, scope: !19412)
!19418 = !DILocalVariable(name: "count", arg: 2, scope: !19412, file: !6456, line: 75, type: !7)
!19419 = !DILocation(line: 75, column: 61, scope: !19412)
!19420 = !DILocation(line: 77, column: 2, scope: !19412)
!19421 = !DILocation(line: 77, column: 2, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19423, file: !6456, line: 77, column: 2)
!19423 = distinct !DILexicalBlock(scope: !19412, file: !6456, line: 77, column: 2)
!19424 = !DILocation(line: 77, column: 2, scope: !19423)
!19425 = !DILocation(line: 77, column: 2, scope: !19426)
!19426 = distinct !DILexicalBlock(scope: !19422, file: !6456, line: 77, column: 2)
!19427 = !DILocation(line: 77, column: 2, scope: !19428)
!19428 = distinct !DILexicalBlock(scope: !19426, file: !6456, line: 77, column: 2)
!19429 = !DILocation(line: 77, column: 2, scope: !19430)
!19430 = distinct !DILexicalBlock(scope: !19426, file: !6456, line: 77, column: 2)
!19431 = !{i32 -2141387587, i32 -2141387558, i32 -2141387512, i32 -2141387454, i32 -2141387400, i32 -2141387346, i32 -2141387291, i32 -2141387260}
!19432 = !DILocation(line: 77, column: 2, scope: !19433)
!19433 = distinct !DILexicalBlock(scope: !19434, file: !6456, line: 77, column: 2)
!19434 = distinct !DILexicalBlock(scope: !19426, file: !6456, line: 77, column: 2)
!19435 = !{i32 -2141386802, i32 -2141386795, i32 -2141386741, i32 -2141386710, i32 -2141386680}
!19436 = !DILocation(line: 77, column: 2, scope: !19434)
!19437 = !DILocation(line: 79, column: 22, scope: !19412)
!19438 = !DILocation(line: 79, column: 2, scope: !19412)
!19439 = !DILocation(line: 79, column: 7, scope: !19412)
!19440 = !DILocation(line: 79, column: 20, scope: !19412)
!19441 = !DILocation(line: 86, column: 2, scope: !19412)
!19442 = !{i32 -2141386621}
!19443 = !DILocation(line: 88, column: 21, scope: !19412)
!19444 = !DILocation(line: 88, column: 2, scope: !19412)
!19445 = !DILocation(line: 88, column: 7, scope: !19412)
!19446 = !DILocation(line: 88, column: 18, scope: !19412)
!19447 = !DILocation(line: 89, column: 1, scope: !19412)
!19448 = distinct !DISubprogram(name: "skb_clone_tx_timestamp", scope: !417, file: !417, line: 3820, type: !469, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19449 = !DILocalVariable(name: "skb", arg: 1, scope: !19448, file: !417, line: 3820, type: !415)
!19450 = !DILocation(line: 3820, column: 59, scope: !19448)
!19451 = !DILocation(line: 3822, column: 1, scope: !19448)
!19452 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !31, file: !31, line: 3343, type: !19453, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19453 = !DISubroutineType(types: !19454)
!19454 = !{!771, !19455}
!19455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19456, size: 64)
!19456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6439)
!19457 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !19452, file: !31, line: 3343, type: !19455)
!19458 = !DILocation(line: 3343, column: 70, scope: !19452)
!19459 = !DILocation(line: 3345, column: 43, scope: !19452)
!19460 = !DILocation(line: 3345, column: 54, scope: !19452)
!19461 = !DILocation(line: 3345, column: 9, scope: !19452)
!19462 = !DILocation(line: 3345, column: 2, scope: !19452)
!19463 = distinct !DISubprogram(name: "nv_tx_done", scope: !3, file: !3, line: 2611, type: !723, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19464 = !DILocalVariable(name: "dev", arg: 1, scope: !19463, file: !3, line: 2611, type: !290)
!19465 = !DILocation(line: 2611, column: 42, scope: !19463)
!19466 = !DILocalVariable(name: "limit", arg: 2, scope: !19463, file: !3, line: 2611, type: !32)
!19467 = !DILocation(line: 2611, column: 51, scope: !19463)
!19468 = !DILocalVariable(name: "np", scope: !19463, file: !3, line: 2613, type: !7446)
!19469 = !DILocation(line: 2613, column: 18, scope: !19463)
!19470 = !DILocation(line: 2613, column: 35, scope: !19463)
!19471 = !DILocation(line: 2613, column: 23, scope: !19463)
!19472 = !DILocalVariable(name: "flags", scope: !19463, file: !3, line: 2614, type: !987)
!19473 = !DILocation(line: 2614, column: 6, scope: !19463)
!19474 = !DILocalVariable(name: "tx_work", scope: !19463, file: !3, line: 2615, type: !32)
!19475 = !DILocation(line: 2615, column: 6, scope: !19463)
!19476 = !DILocalVariable(name: "orig_get_tx", scope: !19463, file: !3, line: 2616, type: !7820)
!19477 = !DILocation(line: 2616, column: 20, scope: !19463)
!19478 = !DILocation(line: 2616, column: 34, scope: !19463)
!19479 = !DILocation(line: 2616, column: 38, scope: !19463)
!19480 = !DILocation(line: 2616, column: 45, scope: !19463)
!19481 = !DILocalVariable(name: "bytes_compl", scope: !19463, file: !3, line: 2617, type: !7)
!19482 = !DILocation(line: 2617, column: 15, scope: !19463)
!19483 = !DILocation(line: 2619, column: 2, scope: !19463)
!19484 = !DILocation(line: 2619, column: 10, scope: !19463)
!19485 = !DILocation(line: 2619, column: 14, scope: !19463)
!19486 = !DILocation(line: 2619, column: 21, scope: !19463)
!19487 = !DILocation(line: 2619, column: 29, scope: !19463)
!19488 = !DILocation(line: 2619, column: 33, scope: !19463)
!19489 = !DILocation(line: 2619, column: 40, scope: !19463)
!19490 = !DILocation(line: 2619, column: 26, scope: !19463)
!19491 = !DILocation(line: 2619, column: 46, scope: !19463)
!19492 = !DILocation(line: 2620, column: 20, scope: !19463)
!19493 = !DILocation(line: 2620, column: 18, scope: !19463)
!19494 = !DILocation(line: 2620, column: 59, scope: !19463)
!19495 = !DILocation(line: 2620, column: 74, scope: !19463)
!19496 = !DILocation(line: 2621, column: 10, scope: !19463)
!19497 = !DILocation(line: 2621, column: 20, scope: !19463)
!19498 = !DILocation(line: 2621, column: 18, scope: !19463)
!19499 = !DILocation(line: 0, scope: !19463)
!19500 = !DILocation(line: 2623, column: 18, scope: !19501)
!19501 = distinct !DILexicalBlock(scope: !19463, file: !3, line: 2621, column: 28)
!19502 = !DILocation(line: 2623, column: 22, scope: !19501)
!19503 = !DILocation(line: 2623, column: 26, scope: !19501)
!19504 = !DILocation(line: 2623, column: 3, scope: !19501)
!19505 = !DILocation(line: 2625, column: 7, scope: !19506)
!19506 = distinct !DILexicalBlock(scope: !19501, file: !3, line: 2625, column: 7)
!19507 = !DILocation(line: 2625, column: 11, scope: !19506)
!19508 = !DILocation(line: 2625, column: 20, scope: !19506)
!19509 = !DILocation(line: 2625, column: 7, scope: !19501)
!19510 = !DILocation(line: 2626, column: 8, scope: !19511)
!19511 = distinct !DILexicalBlock(scope: !19512, file: !3, line: 2626, column: 8)
!19512 = distinct !DILexicalBlock(scope: !19506, file: !3, line: 2625, column: 35)
!19513 = !DILocation(line: 2626, column: 14, scope: !19511)
!19514 = !DILocation(line: 2626, column: 8, scope: !19512)
!19515 = !DILocation(line: 2627, column: 9, scope: !19516)
!19516 = distinct !DILexicalBlock(scope: !19517, file: !3, line: 2627, column: 9)
!19517 = distinct !DILexicalBlock(scope: !19511, file: !3, line: 2626, column: 34)
!19518 = !DILocation(line: 2627, column: 9, scope: !19517)
!19519 = !DILocation(line: 2628, column: 11, scope: !19520)
!19520 = distinct !DILexicalBlock(scope: !19521, file: !3, line: 2628, column: 10)
!19521 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 2627, column: 40)
!19522 = !DILocation(line: 2628, column: 17, scope: !19520)
!19523 = !DILocation(line: 2629, column: 10, scope: !19520)
!19524 = !DILocation(line: 2629, column: 15, scope: !19520)
!19525 = !DILocation(line: 2629, column: 21, scope: !19520)
!19526 = !DILocation(line: 2628, column: 10, scope: !19521)
!19527 = !DILocation(line: 2630, column: 31, scope: !19520)
!19528 = !DILocation(line: 2630, column: 7, scope: !19520)
!19529 = !DILocation(line: 2631, column: 5, scope: !19521)
!19530 = !DILocalVariable(name: "len", scope: !19531, file: !3, line: 2632, type: !7)
!19531 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 2631, column: 12)
!19532 = !DILocation(line: 2632, column: 19, scope: !19531)
!19533 = !DILocation(line: 2634, column: 30, scope: !19531)
!19534 = !DILocation(line: 2634, column: 34, scope: !19531)
!19535 = !DILocation(line: 2634, column: 6, scope: !19531)
!19536 = !DILocation(line: 2635, column: 6, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19531, file: !3, line: 2635, column: 6)
!19538 = !DILocation(line: 2635, column: 6, scope: !19539)
!19539 = distinct !DILexicalBlock(scope: !19537, file: !3, line: 2635, column: 6)
!19540 = !DILocalVariable(name: "__vpp_verify", scope: !19541, file: !3, line: 2635, type: !3258)
!19541 = distinct !DILexicalBlock(scope: !19539, file: !3, line: 2635, column: 6)
!19542 = !DILocation(line: 2635, column: 6, scope: !19541)
!19543 = !DILocalVariable(name: "pao_ID__", scope: !19544, file: !3, line: 2635, type: !12599)
!19544 = distinct !DILexicalBlock(scope: !19539, file: !3, line: 2635, column: 6)
!19545 = !DILocation(line: 2635, column: 6, scope: !19544)
!19546 = !DILocation(line: 2635, column: 6, scope: !19547)
!19547 = distinct !DILexicalBlock(scope: !19548, file: !3, line: 2635, column: 6)
!19548 = distinct !DILexicalBlock(scope: !19544, file: !3, line: 2635, column: 6)
!19549 = !{i32 -2139431193}
!19550 = !DILocation(line: 2636, column: 12, scope: !19531)
!19551 = !DILocation(line: 2636, column: 16, scope: !19531)
!19552 = !DILocation(line: 2636, column: 28, scope: !19531)
!19553 = !DILocation(line: 2636, column: 33, scope: !19531)
!19554 = !DILocation(line: 2636, column: 10, scope: !19531)
!19555 = !DILocation(line: 2637, column: 6, scope: !19556)
!19556 = distinct !DILexicalBlock(scope: !19531, file: !3, line: 2637, column: 6)
!19557 = !DILocation(line: 2637, column: 6, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !19556, file: !3, line: 2637, column: 6)
!19559 = !DILocalVariable(name: "__vpp_verify", scope: !19560, file: !3, line: 2637, type: !3258)
!19560 = distinct !DILexicalBlock(scope: !19558, file: !3, line: 2637, column: 6)
!19561 = !DILocation(line: 2637, column: 6, scope: !19560)
!19562 = !DILocalVariable(name: "pao_ID__", scope: !19563, file: !3, line: 2637, type: !12599)
!19563 = distinct !DILexicalBlock(scope: !19558, file: !3, line: 2637, column: 6)
!19564 = !DILocation(line: 2637, column: 6, scope: !19563)
!19565 = !DILocation(line: 2637, column: 6, scope: !19566)
!19566 = distinct !DILexicalBlock(scope: !19567, file: !3, line: 2637, column: 6)
!19567 = distinct !DILexicalBlock(scope: !19563, file: !3, line: 2637, column: 6)
!19568 = !DILocalVariable(name: "pto_val__", scope: !19569, file: !3, line: 2637, type: !331)
!19569 = distinct !DILexicalBlock(scope: !19566, file: !3, line: 2637, column: 6)
!19570 = !DILocation(line: 2637, column: 6, scope: !19569)
!19571 = !{i32 -2139421597}
!19572 = !DILocation(line: 2638, column: 28, scope: !19531)
!19573 = !DILocation(line: 2638, column: 32, scope: !19531)
!19574 = !DILocation(line: 2638, column: 6, scope: !19531)
!19575 = !DILocation(line: 2640, column: 20, scope: !19517)
!19576 = !DILocation(line: 2640, column: 24, scope: !19517)
!19577 = !DILocation(line: 2640, column: 36, scope: !19517)
!19578 = !DILocation(line: 2640, column: 41, scope: !19517)
!19579 = !DILocation(line: 2640, column: 17, scope: !19517)
!19580 = !DILocation(line: 2641, column: 23, scope: !19517)
!19581 = !DILocation(line: 2641, column: 27, scope: !19517)
!19582 = !DILocation(line: 2641, column: 39, scope: !19517)
!19583 = !DILocation(line: 2641, column: 5, scope: !19517)
!19584 = !DILocation(line: 2642, column: 5, scope: !19517)
!19585 = !DILocation(line: 2642, column: 9, scope: !19517)
!19586 = !DILocation(line: 2642, column: 21, scope: !19517)
!19587 = !DILocation(line: 2642, column: 25, scope: !19517)
!19588 = !DILocation(line: 2643, column: 12, scope: !19517)
!19589 = !DILocation(line: 2644, column: 4, scope: !19517)
!19590 = !DILocation(line: 2645, column: 3, scope: !19512)
!19591 = !DILocation(line: 2646, column: 8, scope: !19592)
!19592 = distinct !DILexicalBlock(scope: !19593, file: !3, line: 2646, column: 8)
!19593 = distinct !DILexicalBlock(scope: !19506, file: !3, line: 2645, column: 10)
!19594 = !DILocation(line: 2646, column: 14, scope: !19592)
!19595 = !DILocation(line: 2646, column: 8, scope: !19593)
!19596 = !DILocation(line: 2647, column: 9, scope: !19597)
!19597 = distinct !DILexicalBlock(scope: !19598, file: !3, line: 2647, column: 9)
!19598 = distinct !DILexicalBlock(scope: !19592, file: !3, line: 2646, column: 35)
!19599 = !DILocation(line: 2647, column: 9, scope: !19598)
!19600 = !DILocation(line: 2648, column: 11, scope: !19601)
!19601 = distinct !DILexicalBlock(scope: !19602, file: !3, line: 2648, column: 10)
!19602 = distinct !DILexicalBlock(scope: !19597, file: !3, line: 2647, column: 41)
!19603 = !DILocation(line: 2648, column: 17, scope: !19601)
!19604 = !DILocation(line: 2649, column: 10, scope: !19601)
!19605 = !DILocation(line: 2649, column: 15, scope: !19601)
!19606 = !DILocation(line: 2649, column: 21, scope: !19601)
!19607 = !DILocation(line: 2648, column: 10, scope: !19602)
!19608 = !DILocation(line: 2650, column: 31, scope: !19601)
!19609 = !DILocation(line: 2650, column: 7, scope: !19601)
!19610 = !DILocation(line: 2651, column: 5, scope: !19602)
!19611 = !DILocalVariable(name: "len", scope: !19612, file: !3, line: 2652, type: !7)
!19612 = distinct !DILexicalBlock(scope: !19597, file: !3, line: 2651, column: 12)
!19613 = !DILocation(line: 2652, column: 19, scope: !19612)
!19614 = !DILocation(line: 2654, column: 30, scope: !19612)
!19615 = !DILocation(line: 2654, column: 34, scope: !19612)
!19616 = !DILocation(line: 2654, column: 6, scope: !19612)
!19617 = !DILocation(line: 2655, column: 6, scope: !19618)
!19618 = distinct !DILexicalBlock(scope: !19612, file: !3, line: 2655, column: 6)
!19619 = !DILocation(line: 2655, column: 6, scope: !19620)
!19620 = distinct !DILexicalBlock(scope: !19618, file: !3, line: 2655, column: 6)
!19621 = !DILocalVariable(name: "__vpp_verify", scope: !19622, file: !3, line: 2655, type: !3258)
!19622 = distinct !DILexicalBlock(scope: !19620, file: !3, line: 2655, column: 6)
!19623 = !DILocation(line: 2655, column: 6, scope: !19622)
!19624 = !DILocalVariable(name: "pao_ID__", scope: !19625, file: !3, line: 2655, type: !12599)
!19625 = distinct !DILexicalBlock(scope: !19620, file: !3, line: 2655, column: 6)
!19626 = !DILocation(line: 2655, column: 6, scope: !19625)
!19627 = !DILocation(line: 2655, column: 6, scope: !19628)
!19628 = distinct !DILexicalBlock(scope: !19629, file: !3, line: 2655, column: 6)
!19629 = distinct !DILexicalBlock(scope: !19625, file: !3, line: 2655, column: 6)
!19630 = !{i32 -2139413751}
!19631 = !DILocation(line: 2656, column: 12, scope: !19612)
!19632 = !DILocation(line: 2656, column: 16, scope: !19612)
!19633 = !DILocation(line: 2656, column: 28, scope: !19612)
!19634 = !DILocation(line: 2656, column: 33, scope: !19612)
!19635 = !DILocation(line: 2656, column: 10, scope: !19612)
!19636 = !DILocation(line: 2657, column: 6, scope: !19637)
!19637 = distinct !DILexicalBlock(scope: !19612, file: !3, line: 2657, column: 6)
!19638 = !DILocation(line: 2657, column: 6, scope: !19639)
!19639 = distinct !DILexicalBlock(scope: !19637, file: !3, line: 2657, column: 6)
!19640 = !DILocalVariable(name: "__vpp_verify", scope: !19641, file: !3, line: 2657, type: !3258)
!19641 = distinct !DILexicalBlock(scope: !19639, file: !3, line: 2657, column: 6)
!19642 = !DILocation(line: 2657, column: 6, scope: !19641)
!19643 = !DILocalVariable(name: "pao_ID__", scope: !19644, file: !3, line: 2657, type: !12599)
!19644 = distinct !DILexicalBlock(scope: !19639, file: !3, line: 2657, column: 6)
!19645 = !DILocation(line: 2657, column: 6, scope: !19644)
!19646 = !DILocation(line: 2657, column: 6, scope: !19647)
!19647 = distinct !DILexicalBlock(scope: !19648, file: !3, line: 2657, column: 6)
!19648 = distinct !DILexicalBlock(scope: !19644, file: !3, line: 2657, column: 6)
!19649 = !DILocalVariable(name: "pto_val__", scope: !19650, file: !3, line: 2657, type: !331)
!19650 = distinct !DILexicalBlock(scope: !19647, file: !3, line: 2657, column: 6)
!19651 = !DILocation(line: 2657, column: 6, scope: !19650)
!19652 = !{i32 -2139404155}
!19653 = !DILocation(line: 2658, column: 28, scope: !19612)
!19654 = !DILocation(line: 2658, column: 32, scope: !19612)
!19655 = !DILocation(line: 2658, column: 6, scope: !19612)
!19656 = !DILocation(line: 2660, column: 20, scope: !19598)
!19657 = !DILocation(line: 2660, column: 24, scope: !19598)
!19658 = !DILocation(line: 2660, column: 36, scope: !19598)
!19659 = !DILocation(line: 2660, column: 41, scope: !19598)
!19660 = !DILocation(line: 2660, column: 17, scope: !19598)
!19661 = !DILocation(line: 2661, column: 23, scope: !19598)
!19662 = !DILocation(line: 2661, column: 27, scope: !19598)
!19663 = !DILocation(line: 2661, column: 39, scope: !19598)
!19664 = !DILocation(line: 2661, column: 5, scope: !19598)
!19665 = !DILocation(line: 2662, column: 5, scope: !19598)
!19666 = !DILocation(line: 2662, column: 9, scope: !19598)
!19667 = !DILocation(line: 2662, column: 21, scope: !19598)
!19668 = !DILocation(line: 2662, column: 25, scope: !19598)
!19669 = !DILocation(line: 2663, column: 12, scope: !19598)
!19670 = !DILocation(line: 2664, column: 4, scope: !19598)
!19671 = !DILocation(line: 2666, column: 7, scope: !19672)
!19672 = distinct !DILexicalBlock(scope: !19501, file: !3, line: 2666, column: 7)
!19673 = !DILocation(line: 2666, column: 7, scope: !19501)
!19674 = !DILocation(line: 2667, column: 22, scope: !19672)
!19675 = !DILocation(line: 2667, column: 26, scope: !19672)
!19676 = !DILocation(line: 2667, column: 34, scope: !19672)
!19677 = !DILocation(line: 2667, column: 4, scope: !19672)
!19678 = !DILocation(line: 2667, column: 8, scope: !19672)
!19679 = !DILocation(line: 2667, column: 15, scope: !19672)
!19680 = !DILocation(line: 2667, column: 20, scope: !19672)
!19681 = !DILocation(line: 2668, column: 7, scope: !19682)
!19682 = distinct !DILexicalBlock(scope: !19501, file: !3, line: 2668, column: 7)
!19683 = !DILocation(line: 2668, column: 7, scope: !19501)
!19684 = !DILocation(line: 2669, column: 21, scope: !19682)
!19685 = !DILocation(line: 2669, column: 25, scope: !19682)
!19686 = !DILocation(line: 2669, column: 4, scope: !19682)
!19687 = !DILocation(line: 2669, column: 8, scope: !19682)
!19688 = !DILocation(line: 2669, column: 19, scope: !19682)
!19689 = distinct !{!19689, !19483, !19690}
!19690 = !DILocation(line: 2670, column: 2, scope: !19463)
!19691 = !DILocation(line: 2672, column: 25, scope: !19463)
!19692 = !DILocation(line: 2672, column: 29, scope: !19463)
!19693 = !DILocation(line: 2672, column: 34, scope: !19463)
!19694 = !DILocation(line: 2672, column: 43, scope: !19463)
!19695 = !DILocation(line: 2672, column: 2, scope: !19463)
!19696 = !DILocation(line: 2674, column: 6, scope: !19697)
!19697 = distinct !DILexicalBlock(scope: !19463, file: !3, line: 2674, column: 6)
!19698 = !DILocation(line: 0, scope: !19697)
!19699 = !DILocation(line: 2674, column: 6, scope: !19463)
!19700 = !DILocation(line: 2675, column: 3, scope: !19701)
!19701 = distinct !DILexicalBlock(scope: !19697, file: !3, line: 2674, column: 72)
!19702 = !DILocation(line: 2675, column: 7, scope: !19701)
!19703 = !DILocation(line: 2675, column: 15, scope: !19701)
!19704 = !DILocation(line: 2676, column: 20, scope: !19701)
!19705 = !DILocation(line: 2676, column: 3, scope: !19701)
!19706 = !DILocation(line: 2677, column: 2, scope: !19701)
!19707 = !DILocation(line: 2678, column: 9, scope: !19463)
!19708 = !DILocation(line: 2678, column: 2, scope: !19463)
!19709 = distinct !DISubprogram(name: "nv_get_stats", scope: !3, file: !3, line: 1733, type: !19710, scopeLine: 1735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19710 = !DISubroutineType(types: !19711)
!19711 = !{null, !32, !7446, !739}
!19712 = !DILocalVariable(name: "cpu", arg: 1, scope: !19709, file: !3, line: 1733, type: !32)
!19713 = !DILocation(line: 1733, column: 30, scope: !19709)
!19714 = !DILocalVariable(name: "np", arg: 2, scope: !19709, file: !3, line: 1733, type: !7446)
!19715 = !DILocation(line: 1733, column: 51, scope: !19709)
!19716 = !DILocalVariable(name: "storage", arg: 3, scope: !19709, file: !3, line: 1734, type: !739)
!19717 = !DILocation(line: 1734, column: 31, scope: !19709)
!19718 = !DILocalVariable(name: "src", scope: !19709, file: !3, line: 1736, type: !7436)
!19719 = !DILocation(line: 1736, column: 24, scope: !19709)
!19720 = !DILocation(line: 1736, column: 30, scope: !19721)
!19721 = distinct !DILexicalBlock(scope: !19709, file: !3, line: 1736, column: 30)
!19722 = !DILocation(line: 1736, column: 30, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19721, file: !3, line: 1736, column: 30)
!19724 = !DILocalVariable(name: "__vpp_verify", scope: !19725, file: !3, line: 1736, type: !3258)
!19725 = distinct !DILexicalBlock(scope: !19723, file: !3, line: 1736, column: 30)
!19726 = !DILocation(line: 1736, column: 30, scope: !19725)
!19727 = !DILocalVariable(name: "syncp_start", scope: !19709, file: !3, line: 1737, type: !7)
!19728 = !DILocation(line: 1737, column: 15, scope: !19709)
!19729 = !DILocalVariable(name: "rx_packets", scope: !19709, file: !3, line: 1738, type: !331)
!19730 = !DILocation(line: 1738, column: 6, scope: !19709)
!19731 = !DILocalVariable(name: "rx_bytes", scope: !19709, file: !3, line: 1738, type: !331)
!19732 = !DILocation(line: 1738, column: 18, scope: !19709)
!19733 = !DILocalVariable(name: "rx_dropped", scope: !19709, file: !3, line: 1738, type: !331)
!19734 = !DILocation(line: 1738, column: 28, scope: !19709)
!19735 = !DILocalVariable(name: "rx_missed_errors", scope: !19709, file: !3, line: 1738, type: !331)
!19736 = !DILocation(line: 1738, column: 40, scope: !19709)
!19737 = !DILocalVariable(name: "tx_packets", scope: !19709, file: !3, line: 1739, type: !331)
!19738 = !DILocation(line: 1739, column: 6, scope: !19709)
!19739 = !DILocalVariable(name: "tx_bytes", scope: !19709, file: !3, line: 1739, type: !331)
!19740 = !DILocation(line: 1739, column: 18, scope: !19709)
!19741 = !DILocalVariable(name: "tx_dropped", scope: !19709, file: !3, line: 1739, type: !331)
!19742 = !DILocation(line: 1739, column: 28, scope: !19709)
!19743 = !DILocation(line: 1741, column: 2, scope: !19709)
!19744 = !DILocation(line: 1742, column: 44, scope: !19745)
!19745 = distinct !DILexicalBlock(scope: !19709, file: !3, line: 1741, column: 5)
!19746 = !DILocation(line: 1742, column: 48, scope: !19745)
!19747 = !DILocation(line: 1742, column: 17, scope: !19745)
!19748 = !DILocation(line: 1742, column: 15, scope: !19745)
!19749 = !DILocation(line: 1743, column: 22, scope: !19745)
!19750 = !DILocation(line: 1743, column: 27, scope: !19745)
!19751 = !DILocation(line: 1743, column: 20, scope: !19745)
!19752 = !DILocation(line: 1744, column: 22, scope: !19745)
!19753 = !DILocation(line: 1744, column: 27, scope: !19745)
!19754 = !DILocation(line: 1744, column: 20, scope: !19745)
!19755 = !DILocation(line: 1745, column: 22, scope: !19745)
!19756 = !DILocation(line: 1745, column: 27, scope: !19745)
!19757 = !DILocation(line: 1745, column: 20, scope: !19745)
!19758 = !DILocation(line: 1746, column: 22, scope: !19745)
!19759 = !DILocation(line: 1746, column: 27, scope: !19745)
!19760 = !DILocation(line: 1746, column: 20, scope: !19745)
!19761 = !DILocation(line: 1747, column: 2, scope: !19745)
!19762 = !DILocation(line: 1747, column: 38, scope: !19709)
!19763 = !DILocation(line: 1747, column: 42, scope: !19709)
!19764 = !DILocation(line: 1747, column: 60, scope: !19709)
!19765 = !DILocation(line: 1747, column: 11, scope: !19709)
!19766 = distinct !{!19766, !19743, !19767}
!19767 = !DILocation(line: 1747, column: 72, scope: !19709)
!19768 = !DILocation(line: 1749, column: 31, scope: !19709)
!19769 = !DILocation(line: 1749, column: 2, scope: !19709)
!19770 = !DILocation(line: 1749, column: 11, scope: !19709)
!19771 = !DILocation(line: 1749, column: 28, scope: !19709)
!19772 = !DILocation(line: 1750, column: 31, scope: !19709)
!19773 = !DILocation(line: 1750, column: 2, scope: !19709)
!19774 = !DILocation(line: 1750, column: 11, scope: !19709)
!19775 = !DILocation(line: 1750, column: 28, scope: !19709)
!19776 = !DILocation(line: 1751, column: 31, scope: !19709)
!19777 = !DILocation(line: 1751, column: 2, scope: !19709)
!19778 = !DILocation(line: 1751, column: 11, scope: !19709)
!19779 = !DILocation(line: 1751, column: 28, scope: !19709)
!19780 = !DILocation(line: 1752, column: 31, scope: !19709)
!19781 = !DILocation(line: 1752, column: 2, scope: !19709)
!19782 = !DILocation(line: 1752, column: 11, scope: !19709)
!19783 = !DILocation(line: 1752, column: 28, scope: !19709)
!19784 = !DILocation(line: 1754, column: 2, scope: !19709)
!19785 = !DILocation(line: 1755, column: 44, scope: !19786)
!19786 = distinct !DILexicalBlock(scope: !19709, file: !3, line: 1754, column: 5)
!19787 = !DILocation(line: 1755, column: 48, scope: !19786)
!19788 = !DILocation(line: 1755, column: 17, scope: !19786)
!19789 = !DILocation(line: 1755, column: 15, scope: !19786)
!19790 = !DILocation(line: 1756, column: 17, scope: !19786)
!19791 = !DILocation(line: 1756, column: 22, scope: !19786)
!19792 = !DILocation(line: 1756, column: 15, scope: !19786)
!19793 = !DILocation(line: 1757, column: 17, scope: !19786)
!19794 = !DILocation(line: 1757, column: 22, scope: !19786)
!19795 = !DILocation(line: 1757, column: 15, scope: !19786)
!19796 = !DILocation(line: 1758, column: 17, scope: !19786)
!19797 = !DILocation(line: 1758, column: 22, scope: !19786)
!19798 = !DILocation(line: 1758, column: 15, scope: !19786)
!19799 = !DILocation(line: 1759, column: 2, scope: !19786)
!19800 = !DILocation(line: 1759, column: 38, scope: !19709)
!19801 = !DILocation(line: 1759, column: 42, scope: !19709)
!19802 = !DILocation(line: 1759, column: 60, scope: !19709)
!19803 = !DILocation(line: 1759, column: 11, scope: !19709)
!19804 = distinct !{!19804, !19784, !19805}
!19805 = !DILocation(line: 1759, column: 72, scope: !19709)
!19806 = !DILocation(line: 1761, column: 25, scope: !19709)
!19807 = !DILocation(line: 1761, column: 2, scope: !19709)
!19808 = !DILocation(line: 1761, column: 11, scope: !19709)
!19809 = !DILocation(line: 1761, column: 22, scope: !19709)
!19810 = !DILocation(line: 1762, column: 25, scope: !19709)
!19811 = !DILocation(line: 1762, column: 2, scope: !19709)
!19812 = !DILocation(line: 1762, column: 11, scope: !19709)
!19813 = !DILocation(line: 1762, column: 22, scope: !19709)
!19814 = !DILocation(line: 1763, column: 25, scope: !19709)
!19815 = !DILocation(line: 1763, column: 2, scope: !19709)
!19816 = !DILocation(line: 1763, column: 11, scope: !19709)
!19817 = !DILocation(line: 1763, column: 22, scope: !19709)
!19818 = !DILocation(line: 1764, column: 1, scope: !19709)
!19819 = distinct !DISubprogram(name: "spin_lock_bh", scope: !8243, file: !8243, line: 357, type: !8244, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19820 = !DILocation(line: 77, column: 53, scope: !12589, inlinedAt: !19821)
!19821 = distinct !DILocation(line: 12, column: 2, scope: !12593, inlinedAt: !19822)
!19822 = distinct !DILocation(line: 359, column: 2, scope: !19823)
!19823 = distinct !DILexicalBlock(scope: !19819, file: !8243, line: 359, column: 2)
!19824 = !DILocation(line: 79, column: 2, scope: !12598, inlinedAt: !19821)
!19825 = !DILocation(line: 79, column: 2, scope: !12602, inlinedAt: !19821)
!19826 = !DILocation(line: 10, column: 65, scope: !12593, inlinedAt: !19822)
!19827 = !DILocation(line: 10, column: 82, scope: !12593, inlinedAt: !19822)
!19828 = !DILocalVariable(name: "lock", arg: 1, scope: !19819, file: !8243, line: 357, type: !2181)
!19829 = !DILocation(line: 357, column: 54, scope: !19819)
!19830 = !DILocation(line: 359, column: 2, scope: !19819)
!19831 = !DILocation(line: 359, column: 2, scope: !19832)
!19832 = distinct !DILexicalBlock(scope: !19823, file: !8243, line: 359, column: 2)
!19833 = !DILabel(scope: !19832, name: "__here", file: !8243, line: 359)
!19834 = !DILocation(line: 12, column: 2, scope: !12593, inlinedAt: !19822)
!19835 = !DILocation(line: 13, column: 2, scope: !12593, inlinedAt: !19822)
!19836 = !DILocation(line: 359, column: 2, scope: !19823)
!19837 = !DILocation(line: 359, column: 2, scope: !19838)
!19838 = distinct !DILexicalBlock(scope: !19823, file: !8243, line: 359, column: 2)
!19839 = !DILocation(line: 360, column: 1, scope: !19819)
!19840 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !8243, file: !8243, line: 397, type: !8244, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19841 = !DILocalVariable(name: "lock", arg: 1, scope: !19840, file: !8243, line: 397, type: !2181)
!19842 = !DILocation(line: 397, column: 56, scope: !19840)
!19843 = !DILocation(line: 399, column: 2, scope: !19840)
!19844 = !DILocation(line: 399, column: 2, scope: !19845)
!19845 = distinct !DILexicalBlock(scope: !19846, file: !8243, line: 399, column: 2)
!19846 = distinct !DILexicalBlock(scope: !19840, file: !8243, line: 399, column: 2)
!19847 = !DILabel(scope: !19845, name: "__here", file: !8243, line: 399)
!19848 = !DILocation(line: 399, column: 2, scope: !19846)
!19849 = !DILocation(line: 399, column: 2, scope: !19850)
!19850 = distinct !DILexicalBlock(scope: !19846, file: !8243, line: 399, column: 2)
!19851 = !DILocation(line: 400, column: 1, scope: !19840)
!19852 = distinct !DISubprogram(name: "u64_stats_fetch_begin_irq", scope: !3072, file: !3072, line: 203, type: !19853, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19853 = !DISubroutineType(types: !19854)
!19854 = !{!7, !19855}
!19855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19856, size: 64)
!19856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3071)
!19857 = !DILocalVariable(name: "syncp", arg: 1, scope: !19852, file: !3072, line: 203, type: !19855)
!19858 = !DILocation(line: 203, column: 83, scope: !19852)
!19859 = !DILocation(line: 208, column: 33, scope: !19852)
!19860 = !DILocation(line: 208, column: 9, scope: !19852)
!19861 = !DILocation(line: 208, column: 2, scope: !19852)
!19862 = distinct !DISubprogram(name: "u64_stats_fetch_retry_irq", scope: !3072, file: !3072, line: 211, type: !19863, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19863 = !DISubroutineType(types: !19864)
!19864 = !{!771, !19855, !7}
!19865 = !DILocalVariable(name: "syncp", arg: 1, scope: !19862, file: !3072, line: 211, type: !19855)
!19866 = !DILocation(line: 211, column: 75, scope: !19862)
!19867 = !DILocalVariable(name: "start", arg: 2, scope: !19862, file: !3072, line: 212, type: !7)
!19868 = !DILocation(line: 212, column: 24, scope: !19862)
!19869 = !DILocation(line: 217, column: 33, scope: !19862)
!19870 = !DILocation(line: 217, column: 40, scope: !19862)
!19871 = !DILocation(line: 217, column: 9, scope: !19862)
!19872 = !DILocation(line: 217, column: 2, scope: !19862)
!19873 = distinct !DISubprogram(name: "__u64_stats_fetch_begin", scope: !3072, file: !3072, line: 161, type: !19853, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19874 = !DILocalVariable(name: "syncp", arg: 1, scope: !19873, file: !3072, line: 161, type: !19855)
!19875 = !DILocation(line: 161, column: 81, scope: !19873)
!19876 = !DILocation(line: 166, column: 2, scope: !19873)
!19877 = distinct !DISubprogram(name: "__u64_stats_fetch_retry", scope: !3072, file: !3072, line: 178, type: !19863, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19878 = !DILocalVariable(name: "syncp", arg: 1, scope: !19877, file: !3072, line: 178, type: !19855)
!19879 = !DILocation(line: 178, column: 73, scope: !19877)
!19880 = !DILocalVariable(name: "start", arg: 2, scope: !19877, file: !3072, line: 179, type: !7)
!19881 = !DILocation(line: 179, column: 20, scope: !19877)
!19882 = !DILocation(line: 184, column: 2, scope: !19877)
!19883 = distinct !DISubprogram(name: "nv_start_xmit_optimized", scope: !3, file: !3, line: 2383, type: !412, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19884 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !19885)
!19885 = distinct !DILocation(line: 2575, column: 2, scope: !19883)
!19886 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !19885)
!19887 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !19888)
!19888 = distinct !DILocation(line: 2544, column: 2, scope: !19889)
!19889 = distinct !DILexicalBlock(scope: !19890, file: !3, line: 2544, column: 2)
!19890 = distinct !DILexicalBlock(scope: !19891, file: !3, line: 2544, column: 2)
!19891 = distinct !DILexicalBlock(scope: !19892, file: !3, line: 2544, column: 2)
!19892 = distinct !DILexicalBlock(scope: !19893, file: !3, line: 2544, column: 2)
!19893 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2544, column: 2)
!19894 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !19895)
!19895 = distinct !DILocation(line: 2427, column: 2, scope: !19883)
!19896 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !19895)
!19897 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !19898)
!19898 = distinct !DILocation(line: 2418, column: 3, scope: !19899)
!19899 = distinct !DILexicalBlock(scope: !19900, file: !3, line: 2415, column: 40)
!19900 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2415, column: 6)
!19901 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !19898)
!19902 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !19903)
!19903 = distinct !DILocation(line: 2413, column: 2, scope: !19904)
!19904 = distinct !DILexicalBlock(scope: !19905, file: !3, line: 2413, column: 2)
!19905 = distinct !DILexicalBlock(scope: !19906, file: !3, line: 2413, column: 2)
!19906 = distinct !DILexicalBlock(scope: !19907, file: !3, line: 2413, column: 2)
!19907 = distinct !DILexicalBlock(scope: !19908, file: !3, line: 2413, column: 2)
!19908 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2413, column: 2)
!19909 = !DILocalVariable(name: "skb", arg: 1, scope: !19883, file: !3, line: 2383, type: !415)
!19910 = !DILocation(line: 2383, column: 60, scope: !19883)
!19911 = !DILocalVariable(name: "dev", arg: 2, scope: !19883, file: !3, line: 2384, type: !290)
!19912 = !DILocation(line: 2384, column: 28, scope: !19883)
!19913 = !DILocalVariable(name: "np", scope: !19883, file: !3, line: 2386, type: !7446)
!19914 = !DILocation(line: 2386, column: 18, scope: !19883)
!19915 = !DILocation(line: 2386, column: 35, scope: !19883)
!19916 = !DILocation(line: 2386, column: 23, scope: !19883)
!19917 = !DILocalVariable(name: "tx_flags", scope: !19883, file: !3, line: 2387, type: !987)
!19918 = !DILocation(line: 2387, column: 6, scope: !19883)
!19919 = !DILocalVariable(name: "tx_flags_extra", scope: !19883, file: !3, line: 2388, type: !987)
!19920 = !DILocation(line: 2388, column: 6, scope: !19883)
!19921 = !DILocalVariable(name: "fragments", scope: !19883, file: !3, line: 2389, type: !7)
!19922 = !DILocation(line: 2389, column: 15, scope: !19883)
!19923 = !DILocation(line: 2389, column: 27, scope: !19883)
!19924 = !DILocation(line: 2389, column: 44, scope: !19883)
!19925 = !DILocalVariable(name: "i", scope: !19883, file: !3, line: 2390, type: !7)
!19926 = !DILocation(line: 2390, column: 15, scope: !19883)
!19927 = !DILocalVariable(name: "offset", scope: !19883, file: !3, line: 2391, type: !987)
!19928 = !DILocation(line: 2391, column: 6, scope: !19883)
!19929 = !DILocalVariable(name: "bcnt", scope: !19883, file: !3, line: 2392, type: !987)
!19930 = !DILocation(line: 2392, column: 6, scope: !19883)
!19931 = !DILocalVariable(name: "size", scope: !19883, file: !3, line: 2393, type: !987)
!19932 = !DILocation(line: 2393, column: 6, scope: !19883)
!19933 = !DILocation(line: 2393, column: 25, scope: !19883)
!19934 = !DILocation(line: 2393, column: 13, scope: !19883)
!19935 = !DILocalVariable(name: "entries", scope: !19883, file: !3, line: 2394, type: !987)
!19936 = !DILocation(line: 2394, column: 6, scope: !19883)
!19937 = !DILocation(line: 2394, column: 17, scope: !19883)
!19938 = !DILocation(line: 2394, column: 22, scope: !19883)
!19939 = !DILocation(line: 2394, column: 51, scope: !19883)
!19940 = !DILocation(line: 2394, column: 56, scope: !19883)
!19941 = !DILocation(line: 2394, column: 50, scope: !19883)
!19942 = !DILocation(line: 2394, column: 47, scope: !19883)
!19943 = !DILocalVariable(name: "empty_slots", scope: !19883, file: !3, line: 2395, type: !987)
!19944 = !DILocation(line: 2395, column: 6, scope: !19883)
!19945 = !DILocalVariable(name: "put_tx", scope: !19883, file: !3, line: 2396, type: !7827)
!19946 = !DILocation(line: 2396, column: 23, scope: !19883)
!19947 = !DILocalVariable(name: "start_tx", scope: !19883, file: !3, line: 2397, type: !7827)
!19948 = !DILocation(line: 2397, column: 23, scope: !19883)
!19949 = !DILocalVariable(name: "prev_tx", scope: !19883, file: !3, line: 2398, type: !7827)
!19950 = !DILocation(line: 2398, column: 23, scope: !19883)
!19951 = !DILocalVariable(name: "prev_tx_ctx", scope: !19883, file: !3, line: 2399, type: !7837)
!19952 = !DILocation(line: 2399, column: 21, scope: !19883)
!19953 = !DILocalVariable(name: "start_tx_ctx", scope: !19883, file: !3, line: 2400, type: !7837)
!19954 = !DILocation(line: 2400, column: 21, scope: !19883)
!19955 = !DILocalVariable(name: "tmp_tx_ctx", scope: !19883, file: !3, line: 2401, type: !7837)
!19956 = !DILocation(line: 2401, column: 21, scope: !19883)
!19957 = !DILocalVariable(name: "flags", scope: !19883, file: !3, line: 2402, type: !312)
!19958 = !DILocation(line: 2402, column: 16, scope: !19883)
!19959 = !DILocalVariable(name: "ret", scope: !19883, file: !3, line: 2403, type: !414)
!19960 = !DILocation(line: 2403, column: 14, scope: !19883)
!19961 = !DILocation(line: 2406, column: 9, scope: !19962)
!19962 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2406, column: 2)
!19963 = !DILocation(line: 2406, column: 7, scope: !19962)
!19964 = !DILocation(line: 2406, column: 14, scope: !19965)
!19965 = distinct !DILexicalBlock(scope: !19962, file: !3, line: 2406, column: 2)
!19966 = !DILocation(line: 2406, column: 18, scope: !19965)
!19967 = !DILocation(line: 2406, column: 16, scope: !19965)
!19968 = !DILocation(line: 2406, column: 2, scope: !19962)
!19969 = !DILocalVariable(name: "frag_size", scope: !19970, file: !3, line: 2407, type: !987)
!19970 = distinct !DILexicalBlock(scope: !19965, file: !3, line: 2406, column: 34)
!19971 = !DILocation(line: 2407, column: 7, scope: !19970)
!19972 = !DILocation(line: 2407, column: 34, scope: !19970)
!19973 = !DILocation(line: 2407, column: 51, scope: !19970)
!19974 = !DILocation(line: 2407, column: 57, scope: !19970)
!19975 = !DILocation(line: 2407, column: 19, scope: !19970)
!19976 = !DILocation(line: 2409, column: 15, scope: !19970)
!19977 = !DILocation(line: 2409, column: 25, scope: !19970)
!19978 = !DILocation(line: 2410, column: 9, scope: !19970)
!19979 = !DILocation(line: 2410, column: 19, scope: !19970)
!19980 = !DILocation(line: 2410, column: 8, scope: !19970)
!19981 = !DILocation(line: 2409, column: 50, scope: !19970)
!19982 = !DILocation(line: 2409, column: 11, scope: !19970)
!19983 = !DILocation(line: 2411, column: 2, scope: !19970)
!19984 = !DILocation(line: 2406, column: 30, scope: !19965)
!19985 = !DILocation(line: 2406, column: 2, scope: !19965)
!19986 = distinct !{!19986, !19968, !19987}
!19987 = !DILocation(line: 2411, column: 2, scope: !19962)
!19988 = !DILocation(line: 2413, column: 2, scope: !19883)
!19989 = !DILocation(line: 2413, column: 2, scope: !19908)
!19990 = !DILocalVariable(name: "__dummy", scope: !19991, file: !3, line: 2413, type: !312)
!19991 = distinct !DILexicalBlock(scope: !19907, file: !3, line: 2413, column: 2)
!19992 = !DILocation(line: 2413, column: 2, scope: !19991)
!19993 = !DILocalVariable(name: "__dummy2", scope: !19991, file: !3, line: 2413, type: !312)
!19994 = !DILocation(line: 2413, column: 2, scope: !19907)
!19995 = !DILocation(line: 2413, column: 2, scope: !19906)
!19996 = !DILocation(line: 2413, column: 2, scope: !19997)
!19997 = distinct !DILexicalBlock(scope: !19906, file: !3, line: 2413, column: 2)
!19998 = !DILocalVariable(name: "__dummy", scope: !19999, file: !3, line: 2413, type: !312)
!19999 = distinct !DILexicalBlock(scope: !20000, file: !3, line: 2413, column: 2)
!20000 = distinct !DILexicalBlock(scope: !19997, file: !3, line: 2413, column: 2)
!20001 = !DILocation(line: 2413, column: 2, scope: !19999)
!20002 = !DILocalVariable(name: "__dummy2", scope: !19999, file: !3, line: 2413, type: !312)
!20003 = !DILocation(line: 2413, column: 2, scope: !20000)
!20004 = !DILocation(line: 2413, column: 2, scope: !19905)
!20005 = !{i32 -2139463365}
!20006 = !DILocation(line: 2413, column: 2, scope: !19904)
!20007 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !19903)
!20008 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !19903)
!20009 = !DILocation(line: 2414, column: 38, scope: !19883)
!20010 = !DILocation(line: 2414, column: 16, scope: !19883)
!20011 = !DILocation(line: 2414, column: 14, scope: !19883)
!20012 = !DILocation(line: 2415, column: 6, scope: !19900)
!20013 = !DILocation(line: 2415, column: 6, scope: !19883)
!20014 = !DILocation(line: 2416, column: 20, scope: !19899)
!20015 = !DILocation(line: 2416, column: 3, scope: !19899)
!20016 = !DILocation(line: 2417, column: 3, scope: !19899)
!20017 = !DILocation(line: 2417, column: 7, scope: !19899)
!20018 = !DILocation(line: 2417, column: 15, scope: !19899)
!20019 = !DILocation(line: 2418, column: 27, scope: !19899)
!20020 = !DILocation(line: 2418, column: 31, scope: !19899)
!20021 = !DILocation(line: 2418, column: 37, scope: !19899)
!20022 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !19898)
!20023 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !19898)
!20024 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !19898)
!20025 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !19898)
!20026 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !19898)
!20027 = !DILocation(line: 2423, column: 7, scope: !19899)
!20028 = !DILocation(line: 2425, column: 3, scope: !19899)
!20029 = !DILocation(line: 2427, column: 26, scope: !19883)
!20030 = !DILocation(line: 2427, column: 30, scope: !19883)
!20031 = !DILocation(line: 2427, column: 36, scope: !19883)
!20032 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !19895)
!20033 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !19895)
!20034 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !19895)
!20035 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !19895)
!20036 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !19895)
!20037 = !DILocation(line: 2429, column: 22, scope: !19883)
!20038 = !DILocation(line: 2429, column: 26, scope: !19883)
!20039 = !DILocation(line: 2429, column: 33, scope: !19883)
!20040 = !DILocation(line: 2429, column: 20, scope: !19883)
!20041 = !DILocation(line: 2429, column: 11, scope: !19883)
!20042 = !DILocation(line: 2430, column: 17, scope: !19883)
!20043 = !DILocation(line: 2430, column: 21, scope: !19883)
!20044 = !DILocation(line: 2430, column: 15, scope: !19883)
!20045 = !DILocation(line: 2433, column: 2, scope: !19883)
!20046 = !DILocation(line: 2434, column: 11, scope: !20047)
!20047 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2433, column: 5)
!20048 = !DILocation(line: 2434, column: 16, scope: !20047)
!20049 = !DILocation(line: 2434, column: 10, scope: !20047)
!20050 = !DILocation(line: 2434, column: 63, scope: !20047)
!20051 = !DILocation(line: 2434, column: 8, scope: !20047)
!20052 = !DILocation(line: 2435, column: 25, scope: !20047)
!20053 = !DILocation(line: 2435, column: 3, scope: !20047)
!20054 = !DILocation(line: 2435, column: 7, scope: !20047)
!20055 = !DILocation(line: 2435, column: 19, scope: !20047)
!20056 = !DILocation(line: 2435, column: 23, scope: !20047)
!20057 = !DILocation(line: 2438, column: 7, scope: !20058)
!20058 = distinct !DILexicalBlock(scope: !20047, file: !3, line: 2438, column: 7)
!20059 = !DILocation(line: 2438, column: 7, scope: !20047)
!20060 = !DILocation(line: 2441, column: 22, scope: !20061)
!20061 = distinct !DILexicalBlock(scope: !20058, file: !3, line: 2439, column: 36)
!20062 = !DILocation(line: 2441, column: 4, scope: !20061)
!20063 = !DILocation(line: 2442, column: 28, scope: !20061)
!20064 = !DILocation(line: 2442, column: 32, scope: !20061)
!20065 = !DILocation(line: 2442, column: 4, scope: !20061)
!20066 = !DILocation(line: 2443, column: 4, scope: !20067)
!20067 = distinct !DILexicalBlock(scope: !20061, file: !3, line: 2443, column: 4)
!20068 = !DILocation(line: 2443, column: 4, scope: !20069)
!20069 = distinct !DILexicalBlock(scope: !20067, file: !3, line: 2443, column: 4)
!20070 = !DILocalVariable(name: "__vpp_verify", scope: !20071, file: !3, line: 2443, type: !3258)
!20071 = distinct !DILexicalBlock(scope: !20069, file: !3, line: 2443, column: 4)
!20072 = !DILocation(line: 2443, column: 4, scope: !20071)
!20073 = !DILocalVariable(name: "pao_ID__", scope: !20074, file: !3, line: 2443, type: !12599)
!20074 = distinct !DILexicalBlock(scope: !20069, file: !3, line: 2443, column: 4)
!20075 = !DILocation(line: 2443, column: 4, scope: !20074)
!20076 = !DILocation(line: 2443, column: 4, scope: !20077)
!20077 = distinct !DILexicalBlock(scope: !20078, file: !3, line: 2443, column: 4)
!20078 = distinct !DILexicalBlock(scope: !20074, file: !3, line: 2443, column: 4)
!20079 = !{i32 -2139455282}
!20080 = !DILocation(line: 2444, column: 26, scope: !20061)
!20081 = !DILocation(line: 2444, column: 30, scope: !20061)
!20082 = !DILocation(line: 2444, column: 4, scope: !20061)
!20083 = !DILocation(line: 2446, column: 8, scope: !20061)
!20084 = !DILocation(line: 2448, column: 4, scope: !20061)
!20085 = !DILocation(line: 2450, column: 29, scope: !20047)
!20086 = !DILocation(line: 2450, column: 3, scope: !20047)
!20087 = !DILocation(line: 2450, column: 7, scope: !20047)
!20088 = !DILocation(line: 2450, column: 19, scope: !20047)
!20089 = !DILocation(line: 2450, column: 27, scope: !20047)
!20090 = !DILocation(line: 2451, column: 3, scope: !20047)
!20091 = !DILocation(line: 2451, column: 7, scope: !20047)
!20092 = !DILocation(line: 2451, column: 19, scope: !20047)
!20093 = !DILocation(line: 2451, column: 30, scope: !20047)
!20094 = !DILocation(line: 2452, column: 21, scope: !20047)
!20095 = !DILocation(line: 2452, column: 3, scope: !20047)
!20096 = !DILocation(line: 2452, column: 11, scope: !20047)
!20097 = !DILocation(line: 2452, column: 19, scope: !20047)
!20098 = !DILocation(line: 2453, column: 20, scope: !20047)
!20099 = !DILocation(line: 2453, column: 3, scope: !20047)
!20100 = !DILocation(line: 2453, column: 11, scope: !20047)
!20101 = !DILocation(line: 2453, column: 18, scope: !20047)
!20102 = !DILocation(line: 2454, column: 21, scope: !20047)
!20103 = !DILocation(line: 2454, column: 3, scope: !20047)
!20104 = !DILocation(line: 2454, column: 11, scope: !20047)
!20105 = !DILocation(line: 2454, column: 19, scope: !20047)
!20106 = !DILocation(line: 2456, column: 12, scope: !20047)
!20107 = !DILocation(line: 2457, column: 13, scope: !20047)
!20108 = !DILocation(line: 2457, column: 10, scope: !20047)
!20109 = !DILocation(line: 2458, column: 11, scope: !20047)
!20110 = !DILocation(line: 2458, column: 8, scope: !20047)
!20111 = !DILocation(line: 2459, column: 7, scope: !20112)
!20112 = distinct !DILexicalBlock(scope: !20047, file: !3, line: 2459, column: 7)
!20113 = !DILocation(line: 2459, column: 7, scope: !20047)
!20114 = !DILocation(line: 2460, column: 13, scope: !20112)
!20115 = !DILocation(line: 2460, column: 17, scope: !20112)
!20116 = !DILocation(line: 2460, column: 25, scope: !20112)
!20117 = !DILocation(line: 2460, column: 11, scope: !20112)
!20118 = !DILocation(line: 2460, column: 4, scope: !20112)
!20119 = !DILocation(line: 2461, column: 7, scope: !20120)
!20120 = distinct !DILexicalBlock(scope: !20047, file: !3, line: 2461, column: 7)
!20121 = !DILocation(line: 2461, column: 7, scope: !20047)
!20122 = !DILocation(line: 2462, column: 21, scope: !20120)
!20123 = !DILocation(line: 2462, column: 25, scope: !20120)
!20124 = !DILocation(line: 2462, column: 4, scope: !20120)
!20125 = !DILocation(line: 2462, column: 8, scope: !20120)
!20126 = !DILocation(line: 2462, column: 19, scope: !20120)
!20127 = !DILocation(line: 2463, column: 2, scope: !20047)
!20128 = !DILocation(line: 2463, column: 11, scope: !19883)
!20129 = distinct !{!20129, !20045, !20130}
!20130 = !DILocation(line: 2463, column: 15, scope: !19883)
!20131 = !DILocation(line: 2466, column: 9, scope: !20132)
!20132 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2466, column: 2)
!20133 = !DILocation(line: 2466, column: 7, scope: !20132)
!20134 = !DILocation(line: 2466, column: 14, scope: !20135)
!20135 = distinct !DILexicalBlock(scope: !20132, file: !3, line: 2466, column: 2)
!20136 = !DILocation(line: 2466, column: 18, scope: !20135)
!20137 = !DILocation(line: 2466, column: 16, scope: !20135)
!20138 = !DILocation(line: 2466, column: 2, scope: !20132)
!20139 = !DILocalVariable(name: "frag", scope: !20140, file: !3, line: 2467, type: !20141)
!20140 = distinct !DILexicalBlock(scope: !20135, file: !3, line: 2466, column: 34)
!20141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7934, size: 64)
!20142 = !DILocation(line: 2467, column: 15, scope: !20140)
!20143 = !DILocation(line: 2467, column: 23, scope: !20140)
!20144 = !DILocation(line: 2467, column: 40, scope: !20140)
!20145 = !DILocation(line: 2467, column: 46, scope: !20140)
!20146 = !DILocalVariable(name: "frag_size", scope: !20140, file: !3, line: 2468, type: !987)
!20147 = !DILocation(line: 2468, column: 7, scope: !20140)
!20148 = !DILocation(line: 2468, column: 33, scope: !20140)
!20149 = !DILocation(line: 2468, column: 19, scope: !20140)
!20150 = !DILocation(line: 2469, column: 10, scope: !20140)
!20151 = !DILocation(line: 2471, column: 3, scope: !20140)
!20152 = !DILocation(line: 2472, column: 12, scope: !20153)
!20153 = distinct !DILexicalBlock(scope: !20140, file: !3, line: 2471, column: 6)
!20154 = !DILocation(line: 2472, column: 22, scope: !20153)
!20155 = !DILocation(line: 2472, column: 11, scope: !20153)
!20156 = !DILocation(line: 2472, column: 69, scope: !20153)
!20157 = !DILocation(line: 2472, column: 9, scope: !20153)
!20158 = !DILocation(line: 2473, column: 9, scope: !20159)
!20159 = distinct !DILexicalBlock(scope: !20153, file: !3, line: 2473, column: 8)
!20160 = !DILocation(line: 2473, column: 8, scope: !20153)
!20161 = !DILocation(line: 2474, column: 33, scope: !20159)
!20162 = !DILocation(line: 2474, column: 37, scope: !20159)
!20163 = !DILocation(line: 2474, column: 31, scope: !20159)
!20164 = !DILocation(line: 2474, column: 18, scope: !20159)
!20165 = !DILocation(line: 2474, column: 5, scope: !20159)
!20166 = !DILocation(line: 2476, column: 9, scope: !20153)
!20167 = !DILocation(line: 2476, column: 13, scope: !20153)
!20168 = !DILocation(line: 2476, column: 22, scope: !20153)
!20169 = !DILocation(line: 2477, column: 8, scope: !20153)
!20170 = !DILocation(line: 2477, column: 14, scope: !20153)
!20171 = !DILocation(line: 2478, column: 8, scope: !20153)
!20172 = !DILocation(line: 2475, column: 26, scope: !20153)
!20173 = !DILocation(line: 2475, column: 4, scope: !20153)
!20174 = !DILocation(line: 2475, column: 8, scope: !20153)
!20175 = !DILocation(line: 2475, column: 20, scope: !20153)
!20176 = !DILocation(line: 2475, column: 24, scope: !20153)
!20177 = !DILocation(line: 2481, column: 8, scope: !20178)
!20178 = distinct !DILexicalBlock(scope: !20153, file: !3, line: 2481, column: 8)
!20179 = !DILocation(line: 2481, column: 8, scope: !20153)
!20180 = !DILocation(line: 2485, column: 5, scope: !20181)
!20181 = distinct !DILexicalBlock(scope: !20178, file: !3, line: 2482, column: 37)
!20182 = !DILocation(line: 2486, column: 21, scope: !20183)
!20183 = distinct !DILexicalBlock(scope: !20181, file: !3, line: 2485, column: 8)
!20184 = !DILocation(line: 2486, column: 25, scope: !20183)
!20185 = !DILocation(line: 2486, column: 6, scope: !20183)
!20186 = !DILocation(line: 2487, column: 10, scope: !20187)
!20187 = distinct !DILexicalBlock(scope: !20183, file: !3, line: 2487, column: 10)
!20188 = !DILocation(line: 2487, column: 10, scope: !20183)
!20189 = !DILocation(line: 2488, column: 20, scope: !20187)
!20190 = !DILocation(line: 2488, column: 24, scope: !20187)
!20191 = !DILocation(line: 2488, column: 18, scope: !20187)
!20192 = !DILocation(line: 2488, column: 7, scope: !20187)
!20193 = !DILocation(line: 2489, column: 5, scope: !20183)
!20194 = !DILocation(line: 2489, column: 14, scope: !20181)
!20195 = !DILocation(line: 2489, column: 28, scope: !20181)
!20196 = !DILocation(line: 2489, column: 32, scope: !20181)
!20197 = !DILocation(line: 2489, column: 25, scope: !20181)
!20198 = distinct !{!20198, !20180, !20199}
!20199 = !DILocation(line: 2489, column: 42, scope: !20181)
!20200 = !DILocation(line: 2490, column: 23, scope: !20181)
!20201 = !DILocation(line: 2490, column: 5, scope: !20181)
!20202 = !DILocation(line: 2491, column: 22, scope: !20181)
!20203 = !DILocation(line: 2491, column: 5, scope: !20181)
!20204 = !DILocation(line: 2491, column: 9, scope: !20181)
!20205 = !DILocation(line: 2491, column: 20, scope: !20181)
!20206 = !DILocation(line: 2492, column: 29, scope: !20181)
!20207 = !DILocation(line: 2492, column: 33, scope: !20181)
!20208 = !DILocation(line: 2492, column: 5, scope: !20181)
!20209 = !DILocation(line: 2493, column: 5, scope: !20210)
!20210 = distinct !DILexicalBlock(scope: !20181, file: !3, line: 2493, column: 5)
!20211 = !DILocation(line: 2493, column: 5, scope: !20212)
!20212 = distinct !DILexicalBlock(scope: !20210, file: !3, line: 2493, column: 5)
!20213 = !DILocalVariable(name: "__vpp_verify", scope: !20214, file: !3, line: 2493, type: !3258)
!20214 = distinct !DILexicalBlock(scope: !20212, file: !3, line: 2493, column: 5)
!20215 = !DILocation(line: 2493, column: 5, scope: !20214)
!20216 = !DILocalVariable(name: "pao_ID__", scope: !20217, file: !3, line: 2493, type: !12599)
!20217 = distinct !DILexicalBlock(scope: !20212, file: !3, line: 2493, column: 5)
!20218 = !DILocation(line: 2493, column: 5, scope: !20217)
!20219 = !DILocation(line: 2493, column: 5, scope: !20220)
!20220 = distinct !DILexicalBlock(scope: !20221, file: !3, line: 2493, column: 5)
!20221 = distinct !DILexicalBlock(scope: !20217, file: !3, line: 2493, column: 5)
!20222 = !{i32 -2139442012}
!20223 = !DILocation(line: 2494, column: 27, scope: !20181)
!20224 = !DILocation(line: 2494, column: 31, scope: !20181)
!20225 = !DILocation(line: 2494, column: 5, scope: !20181)
!20226 = !DILocation(line: 2496, column: 9, scope: !20181)
!20227 = !DILocation(line: 2498, column: 5, scope: !20181)
!20228 = !DILocation(line: 2500, column: 30, scope: !20153)
!20229 = !DILocation(line: 2500, column: 4, scope: !20153)
!20230 = !DILocation(line: 2500, column: 8, scope: !20153)
!20231 = !DILocation(line: 2500, column: 20, scope: !20153)
!20232 = !DILocation(line: 2500, column: 28, scope: !20153)
!20233 = !DILocation(line: 2501, column: 4, scope: !20153)
!20234 = !DILocation(line: 2501, column: 8, scope: !20153)
!20235 = !DILocation(line: 2501, column: 20, scope: !20153)
!20236 = !DILocation(line: 2501, column: 31, scope: !20153)
!20237 = !DILocation(line: 2502, column: 22, scope: !20153)
!20238 = !DILocation(line: 2502, column: 4, scope: !20153)
!20239 = !DILocation(line: 2502, column: 12, scope: !20153)
!20240 = !DILocation(line: 2502, column: 20, scope: !20153)
!20241 = !DILocation(line: 2503, column: 21, scope: !20153)
!20242 = !DILocation(line: 2503, column: 4, scope: !20153)
!20243 = !DILocation(line: 2503, column: 12, scope: !20153)
!20244 = !DILocation(line: 2503, column: 19, scope: !20153)
!20245 = !DILocation(line: 2504, column: 22, scope: !20153)
!20246 = !DILocation(line: 2504, column: 4, scope: !20153)
!20247 = !DILocation(line: 2504, column: 12, scope: !20153)
!20248 = !DILocation(line: 2504, column: 20, scope: !20153)
!20249 = !DILocation(line: 2506, column: 14, scope: !20153)
!20250 = !DILocation(line: 2506, column: 11, scope: !20153)
!20251 = !DILocation(line: 2507, column: 17, scope: !20153)
!20252 = !DILocation(line: 2507, column: 14, scope: !20153)
!20253 = !DILocation(line: 2508, column: 8, scope: !20254)
!20254 = distinct !DILexicalBlock(scope: !20153, file: !3, line: 2508, column: 8)
!20255 = !DILocation(line: 2508, column: 8, scope: !20153)
!20256 = !DILocation(line: 2509, column: 14, scope: !20254)
!20257 = !DILocation(line: 2509, column: 18, scope: !20254)
!20258 = !DILocation(line: 2509, column: 26, scope: !20254)
!20259 = !DILocation(line: 2509, column: 12, scope: !20254)
!20260 = !DILocation(line: 2509, column: 5, scope: !20254)
!20261 = !DILocation(line: 2510, column: 8, scope: !20262)
!20262 = distinct !DILexicalBlock(scope: !20153, file: !3, line: 2510, column: 8)
!20263 = !DILocation(line: 2510, column: 8, scope: !20153)
!20264 = !DILocation(line: 2511, column: 22, scope: !20262)
!20265 = !DILocation(line: 2511, column: 26, scope: !20262)
!20266 = !DILocation(line: 2511, column: 5, scope: !20262)
!20267 = !DILocation(line: 2511, column: 9, scope: !20262)
!20268 = !DILocation(line: 2511, column: 20, scope: !20262)
!20269 = !DILocation(line: 2512, column: 3, scope: !20153)
!20270 = !DILocation(line: 2512, column: 12, scope: !20140)
!20271 = distinct !{!20271, !20151, !20272}
!20272 = !DILocation(line: 2512, column: 21, scope: !20140)
!20273 = !DILocation(line: 2513, column: 2, scope: !20140)
!20274 = !DILocation(line: 2466, column: 30, scope: !20135)
!20275 = !DILocation(line: 2466, column: 2, scope: !20135)
!20276 = distinct !{!20276, !20138, !20277}
!20277 = !DILocation(line: 2513, column: 2, scope: !20132)
!20278 = !DILocation(line: 2515, column: 6, scope: !20279)
!20279 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2515, column: 6)
!20280 = !DILocation(line: 2515, column: 6, scope: !19883)
!20281 = !DILocation(line: 2516, column: 13, scope: !20279)
!20282 = !DILocation(line: 2516, column: 17, scope: !20279)
!20283 = !DILocation(line: 2516, column: 25, scope: !20279)
!20284 = !DILocation(line: 2516, column: 11, scope: !20279)
!20285 = !DILocation(line: 2516, column: 3, scope: !20279)
!20286 = !DILocation(line: 2518, column: 13, scope: !20279)
!20287 = !DILocation(line: 2518, column: 20, scope: !20279)
!20288 = !DILocation(line: 2518, column: 11, scope: !20279)
!20289 = !DILocation(line: 2520, column: 6, scope: !20290)
!20290 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2520, column: 6)
!20291 = !DILocation(line: 2520, column: 6, scope: !19883)
!20292 = !DILocation(line: 2521, column: 17, scope: !20290)
!20293 = !DILocation(line: 2521, column: 21, scope: !20290)
!20294 = !DILocation(line: 2521, column: 15, scope: !20290)
!20295 = !DILocation(line: 2521, column: 3, scope: !20290)
!20296 = !DILocation(line: 2523, column: 17, scope: !20290)
!20297 = !DILocation(line: 2523, column: 21, scope: !20290)
!20298 = !DILocation(line: 2523, column: 32, scope: !20290)
!20299 = !DILocation(line: 2523, column: 15, scope: !20290)
!20300 = !DILocation(line: 2526, column: 2, scope: !19883)
!20301 = !DILocation(line: 2526, column: 11, scope: !19883)
!20302 = !DILocation(line: 2526, column: 19, scope: !19883)
!20303 = !DILocation(line: 2529, column: 21, scope: !19883)
!20304 = !DILocation(line: 2529, column: 2, scope: !19883)
!20305 = !DILocation(line: 2529, column: 15, scope: !19883)
!20306 = !DILocation(line: 2529, column: 19, scope: !19883)
!20307 = !DILocation(line: 2531, column: 17, scope: !20308)
!20308 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2531, column: 6)
!20309 = !DILocation(line: 2531, column: 6, scope: !20308)
!20310 = !DILocation(line: 2531, column: 6, scope: !19883)
!20311 = !DILocation(line: 2532, column: 34, scope: !20308)
!20312 = !DILocation(line: 2532, column: 51, scope: !20308)
!20313 = !DILocation(line: 2532, column: 60, scope: !20308)
!20314 = !DILocation(line: 2532, column: 31, scope: !20308)
!20315 = !DILocation(line: 2532, column: 18, scope: !20308)
!20316 = !DILocation(line: 2532, column: 3, scope: !20308)
!20317 = !DILocation(line: 2534, column: 20, scope: !20308)
!20318 = !DILocation(line: 2534, column: 25, scope: !20308)
!20319 = !DILocation(line: 2534, column: 35, scope: !20308)
!20320 = !DILocation(line: 2534, column: 18, scope: !20308)
!20321 = !DILocation(line: 2538, column: 6, scope: !20322)
!20322 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2538, column: 6)
!20323 = !DILocation(line: 2538, column: 6, scope: !19883)
!20324 = !DILocation(line: 2539, column: 22, scope: !20322)
!20325 = !DILocation(line: 2539, column: 3, scope: !20322)
!20326 = !DILocation(line: 2539, column: 13, scope: !20322)
!20327 = !DILocation(line: 2539, column: 20, scope: !20322)
!20328 = !DILocation(line: 2542, column: 3, scope: !20322)
!20329 = !DILocation(line: 2542, column: 13, scope: !20322)
!20330 = !DILocation(line: 2542, column: 20, scope: !20322)
!20331 = !DILocation(line: 2544, column: 2, scope: !19883)
!20332 = !DILocation(line: 2544, column: 2, scope: !19893)
!20333 = !DILocalVariable(name: "__dummy", scope: !20334, file: !3, line: 2544, type: !312)
!20334 = distinct !DILexicalBlock(scope: !19892, file: !3, line: 2544, column: 2)
!20335 = !DILocation(line: 2544, column: 2, scope: !20334)
!20336 = !DILocalVariable(name: "__dummy2", scope: !20334, file: !3, line: 2544, type: !312)
!20337 = !DILocation(line: 2544, column: 2, scope: !19892)
!20338 = !DILocation(line: 2544, column: 2, scope: !19891)
!20339 = !DILocation(line: 2544, column: 2, scope: !20340)
!20340 = distinct !DILexicalBlock(scope: !19891, file: !3, line: 2544, column: 2)
!20341 = !DILocalVariable(name: "__dummy", scope: !20342, file: !3, line: 2544, type: !312)
!20342 = distinct !DILexicalBlock(scope: !20343, file: !3, line: 2544, column: 2)
!20343 = distinct !DILexicalBlock(scope: !20340, file: !3, line: 2544, column: 2)
!20344 = !DILocation(line: 2544, column: 2, scope: !20342)
!20345 = !DILocalVariable(name: "__dummy2", scope: !20342, file: !3, line: 2544, type: !312)
!20346 = !DILocation(line: 2544, column: 2, scope: !20343)
!20347 = !DILocation(line: 2544, column: 2, scope: !19890)
!20348 = !{i32 -2139439478}
!20349 = !DILocation(line: 2544, column: 2, scope: !19889)
!20350 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !19888)
!20351 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !19888)
!20352 = !DILocation(line: 2546, column: 6, scope: !20353)
!20353 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2546, column: 6)
!20354 = !DILocation(line: 2546, column: 10, scope: !20353)
!20355 = !DILocation(line: 2546, column: 6, scope: !19883)
!20356 = !DILocation(line: 2552, column: 7, scope: !20357)
!20357 = distinct !DILexicalBlock(scope: !20358, file: !3, line: 2552, column: 7)
!20358 = distinct !DILexicalBlock(scope: !20353, file: !3, line: 2546, column: 20)
!20359 = !DILocation(line: 2552, column: 11, scope: !20357)
!20360 = !DILocation(line: 2552, column: 31, scope: !20357)
!20361 = !DILocation(line: 2552, column: 7, scope: !20358)
!20362 = !DILocation(line: 2553, column: 9, scope: !20363)
!20363 = distinct !DILexicalBlock(scope: !20364, file: !3, line: 2553, column: 8)
!20364 = distinct !DILexicalBlock(scope: !20357, file: !3, line: 2552, column: 53)
!20365 = !DILocation(line: 2553, column: 13, scope: !20363)
!20366 = !DILocation(line: 2553, column: 8, scope: !20364)
!20367 = !DILocation(line: 2554, column: 27, scope: !20363)
!20368 = !DILocation(line: 2554, column: 5, scope: !20363)
!20369 = !DILocation(line: 2554, column: 9, scope: !20363)
!20370 = !DILocation(line: 2554, column: 25, scope: !20363)
!20371 = !DILocation(line: 2557, column: 13, scope: !20364)
!20372 = !DILocation(line: 2558, column: 34, scope: !20364)
!20373 = !DILocation(line: 2558, column: 4, scope: !20364)
!20374 = !DILocation(line: 2558, column: 18, scope: !20364)
!20375 = !DILocation(line: 2558, column: 32, scope: !20364)
!20376 = !DILocation(line: 2559, column: 32, scope: !20364)
!20377 = !DILocation(line: 2559, column: 36, scope: !20364)
!20378 = !DILocation(line: 2559, column: 4, scope: !20364)
!20379 = !DILocation(line: 2559, column: 18, scope: !20364)
!20380 = !DILocation(line: 2559, column: 30, scope: !20364)
!20381 = !DILocation(line: 2560, column: 22, scope: !20364)
!20382 = !DILocation(line: 2560, column: 26, scope: !20364)
!20383 = !DILocation(line: 2560, column: 4, scope: !20364)
!20384 = !DILocation(line: 2560, column: 8, scope: !20364)
!20385 = !DILocation(line: 2560, column: 20, scope: !20364)
!20386 = !DILocation(line: 2561, column: 3, scope: !20364)
!20387 = !DILocation(line: 2562, column: 4, scope: !20388)
!20388 = distinct !DILexicalBlock(scope: !20357, file: !3, line: 2561, column: 10)
!20389 = !DILocation(line: 2562, column: 8, scope: !20388)
!20390 = !DILocation(line: 2562, column: 27, scope: !20388)
!20391 = !DILocation(line: 2564, column: 2, scope: !20358)
!20392 = !DILocation(line: 2567, column: 23, scope: !19883)
!20393 = !DILocation(line: 2567, column: 2, scope: !19883)
!20394 = !DILocation(line: 2567, column: 12, scope: !19883)
!20395 = !DILocation(line: 2567, column: 20, scope: !19883)
!20396 = !DILocation(line: 2569, column: 20, scope: !19883)
!20397 = !DILocation(line: 2569, column: 24, scope: !19883)
!20398 = !DILocation(line: 2569, column: 29, scope: !19883)
!20399 = !DILocation(line: 2569, column: 34, scope: !19883)
!20400 = !DILocation(line: 2569, column: 2, scope: !19883)
!20401 = !DILocation(line: 2571, column: 19, scope: !19883)
!20402 = !DILocation(line: 2571, column: 2, scope: !19883)
!20403 = !DILocation(line: 2573, column: 18, scope: !19883)
!20404 = !DILocation(line: 2573, column: 2, scope: !19883)
!20405 = !DILocation(line: 2573, column: 6, scope: !19883)
!20406 = !DILocation(line: 2573, column: 13, scope: !19883)
!20407 = !DILocation(line: 2573, column: 16, scope: !19883)
!20408 = !DILocation(line: 2575, column: 26, scope: !19883)
!20409 = !DILocation(line: 2575, column: 30, scope: !19883)
!20410 = !DILocation(line: 2575, column: 36, scope: !19883)
!20411 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !19885)
!20412 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !19885)
!20413 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !19885)
!20414 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !19885)
!20415 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !19885)
!20416 = !DILocation(line: 2575, column: 2, scope: !19883)
!20417 = !DILabel(scope: !19883, name: "txkick", file: !3, line: 2577)
!20418 = !DILocation(line: 2577, column: 1, scope: !19883)
!20419 = !DILocation(line: 2578, column: 26, scope: !20420)
!20420 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2578, column: 6)
!20421 = !DILocation(line: 2578, column: 6, scope: !20420)
!20422 = !DILocation(line: 2578, column: 31, scope: !20420)
!20423 = !DILocation(line: 2578, column: 35, scope: !20420)
!20424 = !DILocation(line: 2578, column: 6, scope: !19883)
!20425 = !DILocalVariable(name: "txrxctl_kick", scope: !20426, file: !3, line: 2579, type: !987)
!20426 = distinct !DILexicalBlock(scope: !20420, file: !3, line: 2578, column: 55)
!20427 = !DILocation(line: 2579, column: 7, scope: !20426)
!20428 = !DILocation(line: 2579, column: 3, scope: !20426)
!20429 = !DILabel(scope: !20426, name: "dma_error", file: !3, line: 2580)
!20430 = !DILocation(line: 2580, column: 1, scope: !20426)
!20431 = !DILocation(line: 2581, column: 39, scope: !20426)
!20432 = !DILocation(line: 2581, column: 43, scope: !20426)
!20433 = !DILocation(line: 2581, column: 37, scope: !20426)
!20434 = !DILocation(line: 2581, column: 16, scope: !20426)
!20435 = !DILocation(line: 2582, column: 10, scope: !20426)
!20436 = !DILocation(line: 2582, column: 35, scope: !20426)
!20437 = !DILocation(line: 2582, column: 24, scope: !20426)
!20438 = !DILocation(line: 2582, column: 40, scope: !20426)
!20439 = !DILocation(line: 2582, column: 3, scope: !20426)
!20440 = !DILocation(line: 2583, column: 2, scope: !20426)
!20441 = !DILocation(line: 2585, column: 9, scope: !19883)
!20442 = !DILocation(line: 2585, column: 2, scope: !19883)
!20443 = distinct !DISubprogram(name: "nv_rx_process", scope: !3, file: !3, line: 2896, type: !723, scopeLine: 2897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20444 = !DILocalVariable(name: "dev", arg: 1, scope: !20443, file: !3, line: 2896, type: !290)
!20445 = !DILocation(line: 2896, column: 45, scope: !20443)
!20446 = !DILocalVariable(name: "limit", arg: 2, scope: !20443, file: !3, line: 2896, type: !32)
!20447 = !DILocation(line: 2896, column: 54, scope: !20443)
!20448 = !DILocalVariable(name: "np", scope: !20443, file: !3, line: 2898, type: !7446)
!20449 = !DILocation(line: 2898, column: 18, scope: !20443)
!20450 = !DILocation(line: 2898, column: 35, scope: !20443)
!20451 = !DILocation(line: 2898, column: 23, scope: !20443)
!20452 = !DILocalVariable(name: "flags", scope: !20443, file: !3, line: 2899, type: !987)
!20453 = !DILocation(line: 2899, column: 6, scope: !20443)
!20454 = !DILocalVariable(name: "rx_work", scope: !20443, file: !3, line: 2900, type: !32)
!20455 = !DILocation(line: 2900, column: 6, scope: !20443)
!20456 = !DILocalVariable(name: "skb", scope: !20443, file: !3, line: 2901, type: !415)
!20457 = !DILocation(line: 2901, column: 18, scope: !20443)
!20458 = !DILocalVariable(name: "len", scope: !20443, file: !3, line: 2902, type: !32)
!20459 = !DILocation(line: 2902, column: 6, scope: !20443)
!20460 = !DILocation(line: 2904, column: 2, scope: !20443)
!20461 = !DILocation(line: 2904, column: 10, scope: !20443)
!20462 = !DILocation(line: 2904, column: 14, scope: !20443)
!20463 = !DILocation(line: 2904, column: 21, scope: !20443)
!20464 = !DILocation(line: 2904, column: 29, scope: !20443)
!20465 = !DILocation(line: 2904, column: 33, scope: !20443)
!20466 = !DILocation(line: 2904, column: 40, scope: !20443)
!20467 = !DILocation(line: 2904, column: 26, scope: !20443)
!20468 = !DILocation(line: 2904, column: 46, scope: !20443)
!20469 = !DILocation(line: 2905, column: 19, scope: !20443)
!20470 = !DILocation(line: 2905, column: 17, scope: !20443)
!20471 = !DILocation(line: 2905, column: 58, scope: !20443)
!20472 = !DILocation(line: 2905, column: 73, scope: !20443)
!20473 = !DILocation(line: 2906, column: 4, scope: !20443)
!20474 = !DILocation(line: 2906, column: 14, scope: !20443)
!20475 = !DILocation(line: 2906, column: 12, scope: !20443)
!20476 = !DILocation(line: 0, scope: !20443)
!20477 = !DILocation(line: 2913, column: 3, scope: !20478)
!20478 = distinct !DILexicalBlock(scope: !20443, file: !3, line: 2906, column: 22)
!20479 = !DILocation(line: 2916, column: 9, scope: !20478)
!20480 = !DILocation(line: 2916, column: 13, scope: !20478)
!20481 = !DILocation(line: 2916, column: 25, scope: !20478)
!20482 = !DILocation(line: 2916, column: 7, scope: !20478)
!20483 = !DILocation(line: 2917, column: 3, scope: !20478)
!20484 = !DILocation(line: 2917, column: 7, scope: !20478)
!20485 = !DILocation(line: 2917, column: 19, scope: !20478)
!20486 = !DILocation(line: 2917, column: 23, scope: !20478)
!20487 = !DILocation(line: 2920, column: 7, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20478, file: !3, line: 2920, column: 7)
!20489 = !DILocation(line: 2920, column: 11, scope: !20488)
!20490 = !DILocation(line: 2920, column: 20, scope: !20488)
!20491 = !DILocation(line: 2920, column: 7, scope: !20478)
!20492 = !DILocation(line: 2921, column: 8, scope: !20493)
!20493 = distinct !DILexicalBlock(scope: !20494, file: !3, line: 2921, column: 8)
!20494 = distinct !DILexicalBlock(scope: !20488, file: !3, line: 2920, column: 35)
!20495 = !DILocation(line: 2921, column: 8, scope: !20494)
!20496 = !DILocation(line: 2922, column: 11, scope: !20497)
!20497 = distinct !DILexicalBlock(scope: !20493, file: !3, line: 2921, column: 47)
!20498 = !DILocation(line: 2922, column: 17, scope: !20497)
!20499 = !DILocation(line: 2922, column: 9, scope: !20497)
!20500 = !DILocation(line: 2923, column: 9, scope: !20501)
!20501 = distinct !DILexicalBlock(scope: !20497, file: !3, line: 2923, column: 9)
!20502 = !DILocation(line: 2923, column: 9, scope: !20497)
!20503 = !DILocation(line: 2924, column: 11, scope: !20504)
!20504 = distinct !DILexicalBlock(scope: !20505, file: !3, line: 2924, column: 10)
!20505 = distinct !DILexicalBlock(scope: !20501, file: !3, line: 2923, column: 40)
!20506 = !DILocation(line: 2924, column: 17, scope: !20504)
!20507 = !DILocation(line: 2924, column: 37, scope: !20504)
!20508 = !DILocation(line: 2924, column: 10, scope: !20505)
!20509 = !DILocation(line: 2925, column: 23, scope: !20510)
!20510 = distinct !DILexicalBlock(scope: !20504, file: !3, line: 2924, column: 54)
!20511 = !DILocation(line: 2925, column: 28, scope: !20510)
!20512 = !DILocation(line: 2925, column: 33, scope: !20510)
!20513 = !DILocation(line: 2925, column: 39, scope: !20510)
!20514 = !DILocation(line: 2925, column: 13, scope: !20510)
!20515 = !DILocation(line: 2925, column: 11, scope: !20510)
!20516 = !DILocation(line: 2926, column: 11, scope: !20517)
!20517 = distinct !DILexicalBlock(scope: !20510, file: !3, line: 2926, column: 11)
!20518 = !DILocation(line: 2926, column: 15, scope: !20517)
!20519 = !DILocation(line: 2926, column: 11, scope: !20510)
!20520 = !DILocation(line: 2927, column: 8, scope: !20521)
!20521 = distinct !DILexicalBlock(scope: !20517, file: !3, line: 2926, column: 20)
!20522 = !DILocation(line: 2928, column: 8, scope: !20521)
!20523 = !DILocation(line: 2930, column: 6, scope: !20510)
!20524 = !DILocation(line: 2932, column: 16, scope: !20525)
!20525 = distinct !DILexicalBlock(scope: !20504, file: !3, line: 2932, column: 15)
!20526 = !DILocation(line: 2932, column: 22, scope: !20525)
!20527 = !DILocation(line: 2932, column: 42, scope: !20525)
!20528 = !DILocation(line: 2932, column: 15, scope: !20504)
!20529 = !DILocation(line: 2933, column: 11, scope: !20530)
!20530 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 2933, column: 11)
!20531 = distinct !DILexicalBlock(scope: !20525, file: !3, line: 2932, column: 63)
!20532 = !DILocation(line: 2933, column: 17, scope: !20530)
!20533 = !DILocation(line: 2933, column: 11, scope: !20531)
!20534 = !DILocation(line: 2934, column: 11, scope: !20530)
!20535 = !DILocation(line: 2934, column: 8, scope: !20530)
!20536 = !DILocation(line: 2935, column: 6, scope: !20531)
!20537 = !DILocation(line: 2938, column: 26, scope: !20538)
!20538 = distinct !DILexicalBlock(scope: !20525, file: !3, line: 2937, column: 11)
!20539 = !DILocation(line: 2938, column: 33, scope: !20538)
!20540 = !DILocation(line: 2938, column: 7, scope: !20538)
!20541 = !DILocation(line: 2939, column: 7, scope: !20538)
!20542 = !DILocation(line: 2940, column: 7, scope: !20538)
!20543 = !DILocation(line: 2942, column: 5, scope: !20505)
!20544 = !DILocation(line: 2943, column: 4, scope: !20497)
!20545 = !DILocation(line: 2944, column: 5, scope: !20546)
!20546 = distinct !DILexicalBlock(scope: !20493, file: !3, line: 2943, column: 11)
!20547 = !DILocation(line: 2945, column: 5, scope: !20546)
!20548 = !DILocation(line: 2947, column: 3, scope: !20494)
!20549 = !DILocation(line: 2948, column: 8, scope: !20550)
!20550 = distinct !DILexicalBlock(scope: !20551, file: !3, line: 2948, column: 8)
!20551 = distinct !DILexicalBlock(scope: !20488, file: !3, line: 2947, column: 10)
!20552 = !DILocation(line: 2948, column: 8, scope: !20551)
!20553 = !DILocation(line: 2949, column: 11, scope: !20554)
!20554 = distinct !DILexicalBlock(scope: !20550, file: !3, line: 2948, column: 48)
!20555 = !DILocation(line: 2949, column: 17, scope: !20554)
!20556 = !DILocation(line: 2949, column: 9, scope: !20554)
!20557 = !DILocation(line: 2950, column: 9, scope: !20558)
!20558 = distinct !DILexicalBlock(scope: !20554, file: !3, line: 2950, column: 9)
!20559 = !DILocation(line: 2950, column: 9, scope: !20554)
!20560 = !DILocation(line: 2951, column: 11, scope: !20561)
!20561 = distinct !DILexicalBlock(scope: !20562, file: !3, line: 2951, column: 10)
!20562 = distinct !DILexicalBlock(scope: !20558, file: !3, line: 2950, column: 41)
!20563 = !DILocation(line: 2951, column: 17, scope: !20561)
!20564 = !DILocation(line: 2951, column: 38, scope: !20561)
!20565 = !DILocation(line: 2951, column: 10, scope: !20562)
!20566 = !DILocation(line: 2952, column: 23, scope: !20567)
!20567 = distinct !DILexicalBlock(scope: !20561, file: !3, line: 2951, column: 56)
!20568 = !DILocation(line: 2952, column: 28, scope: !20567)
!20569 = !DILocation(line: 2952, column: 33, scope: !20567)
!20570 = !DILocation(line: 2952, column: 39, scope: !20567)
!20571 = !DILocation(line: 2952, column: 13, scope: !20567)
!20572 = !DILocation(line: 2952, column: 11, scope: !20567)
!20573 = !DILocation(line: 2953, column: 11, scope: !20574)
!20574 = distinct !DILexicalBlock(scope: !20567, file: !3, line: 2953, column: 11)
!20575 = !DILocation(line: 2953, column: 15, scope: !20574)
!20576 = !DILocation(line: 2953, column: 11, scope: !20567)
!20577 = !DILocation(line: 2954, column: 8, scope: !20578)
!20578 = distinct !DILexicalBlock(scope: !20574, file: !3, line: 2953, column: 20)
!20579 = !DILocation(line: 2955, column: 8, scope: !20578)
!20580 = !DILocation(line: 2957, column: 6, scope: !20567)
!20581 = !DILocation(line: 2959, column: 16, scope: !20582)
!20582 = distinct !DILexicalBlock(scope: !20561, file: !3, line: 2959, column: 15)
!20583 = !DILocation(line: 2959, column: 22, scope: !20582)
!20584 = !DILocation(line: 2959, column: 43, scope: !20582)
!20585 = !DILocation(line: 2959, column: 15, scope: !20561)
!20586 = !DILocation(line: 2960, column: 11, scope: !20587)
!20587 = distinct !DILexicalBlock(scope: !20588, file: !3, line: 2960, column: 11)
!20588 = distinct !DILexicalBlock(scope: !20582, file: !3, line: 2959, column: 65)
!20589 = !DILocation(line: 2960, column: 17, scope: !20587)
!20590 = !DILocation(line: 2960, column: 11, scope: !20588)
!20591 = !DILocation(line: 2961, column: 11, scope: !20587)
!20592 = !DILocation(line: 2961, column: 8, scope: !20587)
!20593 = !DILocation(line: 2962, column: 6, scope: !20588)
!20594 = !DILocation(line: 2965, column: 7, scope: !20595)
!20595 = distinct !DILexicalBlock(scope: !20582, file: !3, line: 2964, column: 11)
!20596 = !DILocation(line: 2966, column: 7, scope: !20595)
!20597 = !DILocation(line: 2968, column: 5, scope: !20562)
!20598 = !DILocation(line: 2969, column: 11, scope: !20599)
!20599 = distinct !DILexicalBlock(scope: !20554, file: !3, line: 2969, column: 9)
!20600 = !DILocation(line: 2969, column: 17, scope: !20599)
!20601 = !DILocation(line: 2969, column: 40, scope: !20599)
!20602 = !DILocation(line: 2969, column: 67, scope: !20599)
!20603 = !DILocation(line: 2970, column: 11, scope: !20599)
!20604 = !DILocation(line: 2970, column: 17, scope: !20599)
!20605 = !DILocation(line: 2970, column: 40, scope: !20599)
!20606 = !DILocation(line: 2969, column: 9, scope: !20554)
!20607 = !DILocation(line: 2971, column: 6, scope: !20599)
!20608 = !DILocation(line: 2971, column: 11, scope: !20599)
!20609 = !DILocation(line: 2971, column: 21, scope: !20599)
!20610 = !DILocation(line: 2972, column: 4, scope: !20554)
!20611 = !DILocation(line: 2973, column: 5, scope: !20612)
!20612 = distinct !DILexicalBlock(scope: !20550, file: !3, line: 2972, column: 11)
!20613 = !DILocation(line: 2974, column: 5, scope: !20612)
!20614 = !DILocation(line: 2978, column: 11, scope: !20478)
!20615 = !DILocation(line: 2978, column: 16, scope: !20478)
!20616 = !DILocation(line: 2978, column: 3, scope: !20478)
!20617 = !DILocation(line: 2979, column: 34, scope: !20478)
!20618 = !DILocation(line: 2979, column: 39, scope: !20478)
!20619 = !DILocation(line: 2979, column: 19, scope: !20478)
!20620 = !DILocation(line: 2979, column: 3, scope: !20478)
!20621 = !DILocation(line: 2979, column: 8, scope: !20478)
!20622 = !DILocation(line: 2979, column: 17, scope: !20478)
!20623 = !DILocation(line: 2980, column: 21, scope: !20478)
!20624 = !DILocation(line: 2980, column: 25, scope: !20478)
!20625 = !DILocation(line: 2980, column: 31, scope: !20478)
!20626 = !DILocation(line: 2980, column: 3, scope: !20478)
!20627 = !DILocation(line: 2981, column: 27, scope: !20478)
!20628 = !DILocation(line: 2981, column: 31, scope: !20478)
!20629 = !DILocation(line: 2981, column: 3, scope: !20478)
!20630 = !DILocation(line: 2982, column: 3, scope: !20631)
!20631 = distinct !DILexicalBlock(scope: !20478, file: !3, line: 2982, column: 3)
!20632 = !DILocation(line: 2982, column: 3, scope: !20633)
!20633 = distinct !DILexicalBlock(scope: !20631, file: !3, line: 2982, column: 3)
!20634 = !DILocalVariable(name: "__vpp_verify", scope: !20635, file: !3, line: 2982, type: !3258)
!20635 = distinct !DILexicalBlock(scope: !20633, file: !3, line: 2982, column: 3)
!20636 = !DILocation(line: 2982, column: 3, scope: !20635)
!20637 = !DILocalVariable(name: "pao_ID__", scope: !20638, file: !3, line: 2982, type: !12599)
!20638 = distinct !DILexicalBlock(scope: !20633, file: !3, line: 2982, column: 3)
!20639 = !DILocation(line: 2982, column: 3, scope: !20638)
!20640 = !DILocation(line: 2982, column: 3, scope: !20641)
!20641 = distinct !DILexicalBlock(scope: !20642, file: !3, line: 2982, column: 3)
!20642 = distinct !DILexicalBlock(scope: !20638, file: !3, line: 2982, column: 3)
!20643 = !{i32 -2139360771}
!20644 = !DILocation(line: 2983, column: 3, scope: !20645)
!20645 = distinct !DILexicalBlock(scope: !20478, file: !3, line: 2983, column: 3)
!20646 = !DILocation(line: 2983, column: 3, scope: !20647)
!20647 = distinct !DILexicalBlock(scope: !20645, file: !3, line: 2983, column: 3)
!20648 = !DILocalVariable(name: "__vpp_verify", scope: !20649, file: !3, line: 2983, type: !3258)
!20649 = distinct !DILexicalBlock(scope: !20647, file: !3, line: 2983, column: 3)
!20650 = !DILocation(line: 2983, column: 3, scope: !20649)
!20651 = !DILocalVariable(name: "pao_ID__", scope: !20652, file: !3, line: 2983, type: !12599)
!20652 = distinct !DILexicalBlock(scope: !20647, file: !3, line: 2983, column: 3)
!20653 = !DILocation(line: 2983, column: 3, scope: !20652)
!20654 = !DILocation(line: 2983, column: 3, scope: !20655)
!20655 = distinct !DILexicalBlock(scope: !20656, file: !3, line: 2983, column: 3)
!20656 = distinct !DILexicalBlock(scope: !20652, file: !3, line: 2983, column: 3)
!20657 = !DILocalVariable(name: "pto_val__", scope: !20658, file: !3, line: 2983, type: !331)
!20658 = distinct !DILexicalBlock(scope: !20655, file: !3, line: 2983, column: 3)
!20659 = !DILocation(line: 2983, column: 3, scope: !20658)
!20660 = !{i32 -2139351175}
!20661 = !DILocation(line: 2984, column: 25, scope: !20478)
!20662 = !DILocation(line: 2984, column: 29, scope: !20478)
!20663 = !DILocation(line: 2984, column: 3, scope: !20478)
!20664 = !DILabel(scope: !20478, name: "next_pkt", file: !3, line: 2985)
!20665 = !DILocation(line: 2985, column: 1, scope: !20478)
!20666 = !DILocation(line: 2986, column: 7, scope: !20667)
!20667 = distinct !DILexicalBlock(scope: !20478, file: !3, line: 2986, column: 7)
!20668 = !DILocation(line: 2986, column: 7, scope: !20478)
!20669 = !DILocation(line: 2987, column: 22, scope: !20667)
!20670 = !DILocation(line: 2987, column: 26, scope: !20667)
!20671 = !DILocation(line: 2987, column: 34, scope: !20667)
!20672 = !DILocation(line: 2987, column: 4, scope: !20667)
!20673 = !DILocation(line: 2987, column: 8, scope: !20667)
!20674 = !DILocation(line: 2987, column: 15, scope: !20667)
!20675 = !DILocation(line: 2987, column: 20, scope: !20667)
!20676 = !DILocation(line: 2988, column: 7, scope: !20677)
!20677 = distinct !DILexicalBlock(scope: !20478, file: !3, line: 2988, column: 7)
!20678 = !DILocation(line: 2988, column: 7, scope: !20478)
!20679 = !DILocation(line: 2989, column: 21, scope: !20677)
!20680 = !DILocation(line: 2989, column: 25, scope: !20677)
!20681 = !DILocation(line: 2989, column: 4, scope: !20677)
!20682 = !DILocation(line: 2989, column: 8, scope: !20677)
!20683 = !DILocation(line: 2989, column: 19, scope: !20677)
!20684 = !DILocation(line: 2991, column: 10, scope: !20478)
!20685 = distinct !{!20685, !20460, !20686}
!20686 = !DILocation(line: 2992, column: 2, scope: !20443)
!20687 = !DILocation(line: 2994, column: 9, scope: !20443)
!20688 = !DILocation(line: 2994, column: 2, scope: !20443)
!20689 = distinct !DISubprogram(name: "nv_change_interrupt_mode", scope: !3, file: !3, line: 3651, type: !723, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20690 = !DILocalVariable(name: "dev", arg: 1, scope: !20689, file: !3, line: 3651, type: !290)
!20691 = !DILocation(line: 3651, column: 63, scope: !20689)
!20692 = !DILocalVariable(name: "total_work", arg: 2, scope: !20689, file: !3, line: 3651, type: !32)
!20693 = !DILocation(line: 3651, column: 72, scope: !20689)
!20694 = !DILocalVariable(name: "np", scope: !20689, file: !3, line: 3653, type: !7446)
!20695 = !DILocation(line: 3653, column: 18, scope: !20689)
!20696 = !DILocation(line: 3653, column: 35, scope: !20689)
!20697 = !DILocation(line: 3653, column: 23, scope: !20689)
!20698 = !DILocation(line: 3655, column: 6, scope: !20699)
!20699 = distinct !DILexicalBlock(scope: !20689, file: !3, line: 3655, column: 6)
!20700 = !DILocation(line: 3655, column: 24, scope: !20699)
!20701 = !DILocation(line: 3655, column: 6, scope: !20689)
!20702 = !DILocation(line: 3656, column: 7, scope: !20703)
!20703 = distinct !DILexicalBlock(scope: !20704, file: !3, line: 3656, column: 7)
!20704 = distinct !DILexicalBlock(scope: !20699, file: !3, line: 3655, column: 57)
!20705 = !DILocation(line: 3656, column: 18, scope: !20703)
!20706 = !DILocation(line: 3656, column: 7, scope: !20704)
!20707 = !DILocation(line: 3658, column: 4, scope: !20708)
!20708 = distinct !DILexicalBlock(scope: !20703, file: !3, line: 3656, column: 42)
!20709 = !DILocation(line: 3658, column: 8, scope: !20708)
!20710 = !DILocation(line: 3658, column: 20, scope: !20708)
!20711 = !DILocation(line: 3659, column: 8, scope: !20712)
!20712 = distinct !DILexicalBlock(scope: !20708, file: !3, line: 3659, column: 8)
!20713 = !DILocation(line: 3659, column: 12, scope: !20712)
!20714 = !DILocation(line: 3659, column: 20, scope: !20712)
!20715 = !DILocation(line: 3659, column: 8, scope: !20708)
!20716 = !DILocation(line: 3660, column: 5, scope: !20717)
!20717 = distinct !DILexicalBlock(scope: !20712, file: !3, line: 3659, column: 42)
!20718 = !DILocation(line: 3660, column: 9, scope: !20717)
!20719 = !DILocation(line: 3660, column: 17, scope: !20717)
!20720 = !DILocation(line: 3661, column: 5, scope: !20717)
!20721 = !DILocation(line: 3663, column: 3, scope: !20708)
!20722 = !DILocation(line: 3664, column: 8, scope: !20723)
!20723 = distinct !DILexicalBlock(scope: !20724, file: !3, line: 3664, column: 8)
!20724 = distinct !DILexicalBlock(scope: !20703, file: !3, line: 3663, column: 10)
!20725 = !DILocation(line: 3664, column: 12, scope: !20723)
!20726 = !DILocation(line: 3664, column: 24, scope: !20723)
!20727 = !DILocation(line: 3664, column: 8, scope: !20724)
!20728 = !DILocation(line: 3665, column: 5, scope: !20729)
!20729 = distinct !DILexicalBlock(scope: !20723, file: !3, line: 3664, column: 54)
!20730 = !DILocation(line: 3665, column: 9, scope: !20729)
!20731 = !DILocation(line: 3665, column: 20, scope: !20729)
!20732 = !DILocation(line: 3666, column: 4, scope: !20729)
!20733 = !DILocation(line: 3669, column: 9, scope: !20734)
!20734 = distinct !DILexicalBlock(scope: !20735, file: !3, line: 3669, column: 9)
!20735 = distinct !DILexicalBlock(scope: !20723, file: !3, line: 3666, column: 11)
!20736 = !DILocation(line: 3669, column: 13, scope: !20734)
!20737 = !DILocation(line: 3669, column: 21, scope: !20734)
!20738 = !DILocation(line: 3669, column: 9, scope: !20735)
!20739 = !DILocation(line: 3670, column: 6, scope: !20740)
!20740 = distinct !DILexicalBlock(scope: !20734, file: !3, line: 3669, column: 50)
!20741 = !DILocation(line: 3670, column: 10, scope: !20740)
!20742 = !DILocation(line: 3670, column: 18, scope: !20740)
!20743 = !DILocation(line: 3671, column: 6, scope: !20740)
!20744 = !DILocation(line: 3675, column: 2, scope: !20704)
!20745 = !DILocation(line: 3676, column: 2, scope: !20689)
!20746 = !DILocation(line: 3677, column: 1, scope: !20689)
!20747 = distinct !DISubprogram(name: "napi_complete", scope: !31, file: !31, line: 486, type: !20748, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20748 = !DISubroutineType(types: !20749)
!20749 = !{!771, !7463}
!20750 = !DILocalVariable(name: "n", arg: 1, scope: !20747, file: !31, line: 486, type: !7463)
!20751 = !DILocation(line: 486, column: 54, scope: !20747)
!20752 = !DILocation(line: 488, column: 28, scope: !20747)
!20753 = !DILocation(line: 488, column: 9, scope: !20747)
!20754 = !DILocation(line: 488, column: 2, scope: !20747)
!20755 = distinct !DISubprogram(name: "rx_missing_handler", scope: !3, file: !3, line: 2887, type: !20756, scopeLine: 2888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20756 = !DISubroutineType(types: !20757)
!20757 = !{null, !987, !7446}
!20758 = !DILocalVariable(name: "flags", arg: 1, scope: !20755, file: !3, line: 2887, type: !987)
!20759 = !DILocation(line: 2887, column: 36, scope: !20755)
!20760 = !DILocalVariable(name: "np", arg: 2, scope: !20755, file: !3, line: 2887, type: !7446)
!20761 = !DILocation(line: 2887, column: 59, scope: !20755)
!20762 = !DILocation(line: 2889, column: 6, scope: !20763)
!20763 = distinct !DILexicalBlock(scope: !20755, file: !3, line: 2889, column: 6)
!20764 = !DILocation(line: 2889, column: 12, scope: !20763)
!20765 = !DILocation(line: 2889, column: 6, scope: !20755)
!20766 = !DILocation(line: 2890, column: 27, scope: !20767)
!20767 = distinct !DILexicalBlock(scope: !20763, file: !3, line: 2889, column: 33)
!20768 = !DILocation(line: 2890, column: 31, scope: !20767)
!20769 = !DILocation(line: 2890, column: 3, scope: !20767)
!20770 = !DILocation(line: 2891, column: 3, scope: !20771)
!20771 = distinct !DILexicalBlock(scope: !20767, file: !3, line: 2891, column: 3)
!20772 = !DILocation(line: 2891, column: 3, scope: !20773)
!20773 = distinct !DILexicalBlock(scope: !20771, file: !3, line: 2891, column: 3)
!20774 = !DILocalVariable(name: "__vpp_verify", scope: !20775, file: !3, line: 2891, type: !3258)
!20775 = distinct !DILexicalBlock(scope: !20773, file: !3, line: 2891, column: 3)
!20776 = !DILocation(line: 2891, column: 3, scope: !20775)
!20777 = !DILocalVariable(name: "pao_ID__", scope: !20778, file: !3, line: 2891, type: !12599)
!20778 = distinct !DILexicalBlock(scope: !20773, file: !3, line: 2891, column: 3)
!20779 = !DILocation(line: 2891, column: 3, scope: !20778)
!20780 = !DILocation(line: 2891, column: 3, scope: !20781)
!20781 = distinct !DILexicalBlock(scope: !20782, file: !3, line: 2891, column: 3)
!20782 = distinct !DILexicalBlock(scope: !20778, file: !3, line: 2891, column: 3)
!20783 = !{i32 -2139374794}
!20784 = !DILocation(line: 2892, column: 25, scope: !20767)
!20785 = !DILocation(line: 2892, column: 29, scope: !20767)
!20786 = !DILocation(line: 2892, column: 3, scope: !20767)
!20787 = !DILocation(line: 2893, column: 2, scope: !20767)
!20788 = !DILocation(line: 2894, column: 1, scope: !20755)
!20789 = distinct !DISubprogram(name: "nv_get_drvinfo", scope: !3, file: !3, line: 4296, type: !5527, scopeLine: 4297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20790 = !DILocalVariable(name: "dev", arg: 1, scope: !20789, file: !3, line: 4296, type: !290)
!20791 = !DILocation(line: 4296, column: 47, scope: !20789)
!20792 = !DILocalVariable(name: "info", arg: 2, scope: !20789, file: !3, line: 4296, type: !5529)
!20793 = !DILocation(line: 4296, column: 76, scope: !20789)
!20794 = !DILocalVariable(name: "np", scope: !20789, file: !3, line: 4298, type: !7446)
!20795 = !DILocation(line: 4298, column: 18, scope: !20789)
!20796 = !DILocation(line: 4298, column: 35, scope: !20789)
!20797 = !DILocation(line: 4298, column: 23, scope: !20789)
!20798 = !DILocation(line: 4299, column: 10, scope: !20789)
!20799 = !DILocation(line: 4299, column: 16, scope: !20789)
!20800 = !DILocation(line: 4299, column: 2, scope: !20789)
!20801 = !DILocation(line: 4300, column: 10, scope: !20789)
!20802 = !DILocation(line: 4300, column: 16, scope: !20789)
!20803 = !DILocation(line: 4300, column: 2, scope: !20789)
!20804 = !DILocation(line: 4301, column: 10, scope: !20789)
!20805 = !DILocation(line: 4301, column: 16, scope: !20789)
!20806 = !DILocation(line: 4301, column: 35, scope: !20789)
!20807 = !DILocation(line: 4301, column: 39, scope: !20789)
!20808 = !DILocation(line: 4301, column: 26, scope: !20789)
!20809 = !DILocation(line: 4301, column: 2, scope: !20789)
!20810 = !DILocation(line: 4302, column: 1, scope: !20789)
!20811 = distinct !DISubprogram(name: "nv_get_regs_len", scope: !3, file: !3, line: 4592, type: !402, scopeLine: 4593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20812 = !DILocalVariable(name: "dev", arg: 1, scope: !20811, file: !3, line: 4592, type: !290)
!20813 = !DILocation(line: 4592, column: 47, scope: !20811)
!20814 = !DILocalVariable(name: "np", scope: !20811, file: !3, line: 4594, type: !7446)
!20815 = !DILocation(line: 4594, column: 18, scope: !20811)
!20816 = !DILocation(line: 4594, column: 35, scope: !20811)
!20817 = !DILocation(line: 4594, column: 23, scope: !20811)
!20818 = !DILocation(line: 4595, column: 9, scope: !20811)
!20819 = !DILocation(line: 4595, column: 13, scope: !20811)
!20820 = !DILocation(line: 4595, column: 2, scope: !20811)
!20821 = distinct !DISubprogram(name: "nv_get_regs", scope: !3, file: !3, line: 4598, type: !5548, scopeLine: 4599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20822 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !20823)
!20823 = distinct !DILocation(line: 4609, column: 2, scope: !20821)
!20824 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !20825)
!20825 = distinct !DILocation(line: 4606, column: 2, scope: !20821)
!20826 = !DILocalVariable(name: "dev", arg: 1, scope: !20821, file: !3, line: 4598, type: !290)
!20827 = !DILocation(line: 4598, column: 44, scope: !20821)
!20828 = !DILocalVariable(name: "regs", arg: 2, scope: !20821, file: !3, line: 4598, type: !5550)
!20829 = !DILocation(line: 4598, column: 70, scope: !20821)
!20830 = !DILocalVariable(name: "buf", arg: 3, scope: !20821, file: !3, line: 4598, type: !591)
!20831 = !DILocation(line: 4598, column: 82, scope: !20821)
!20832 = !DILocalVariable(name: "np", scope: !20821, file: !3, line: 4600, type: !7446)
!20833 = !DILocation(line: 4600, column: 18, scope: !20821)
!20834 = !DILocation(line: 4600, column: 35, scope: !20821)
!20835 = !DILocation(line: 4600, column: 23, scope: !20821)
!20836 = !DILocalVariable(name: "base", scope: !20821, file: !3, line: 4601, type: !793)
!20837 = !DILocation(line: 4601, column: 14, scope: !20821)
!20838 = !DILocation(line: 4601, column: 32, scope: !20821)
!20839 = !DILocation(line: 4601, column: 21, scope: !20821)
!20840 = !DILocalVariable(name: "rbuf", scope: !20821, file: !3, line: 4602, type: !2516)
!20841 = !DILocation(line: 4602, column: 7, scope: !20821)
!20842 = !DILocation(line: 4602, column: 14, scope: !20821)
!20843 = !DILocalVariable(name: "i", scope: !20821, file: !3, line: 4603, type: !32)
!20844 = !DILocation(line: 4603, column: 6, scope: !20821)
!20845 = !DILocation(line: 4605, column: 2, scope: !20821)
!20846 = !DILocation(line: 4605, column: 8, scope: !20821)
!20847 = !DILocation(line: 4605, column: 16, scope: !20821)
!20848 = !DILocation(line: 4606, column: 17, scope: !20821)
!20849 = !DILocation(line: 4606, column: 21, scope: !20821)
!20850 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !20825)
!20851 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !20825)
!20852 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !20825)
!20853 = !DILocation(line: 4607, column: 9, scope: !20854)
!20854 = distinct !DILexicalBlock(scope: !20821, file: !3, line: 4607, column: 2)
!20855 = !DILocation(line: 4607, column: 7, scope: !20854)
!20856 = !DILocation(line: 4607, column: 14, scope: !20857)
!20857 = distinct !DILexicalBlock(scope: !20854, file: !3, line: 4607, column: 2)
!20858 = !DILocation(line: 4607, column: 18, scope: !20857)
!20859 = !DILocation(line: 4607, column: 22, scope: !20857)
!20860 = !DILocation(line: 4607, column: 35, scope: !20857)
!20861 = !DILocation(line: 4607, column: 16, scope: !20857)
!20862 = !DILocation(line: 4607, column: 2, scope: !20854)
!20863 = !DILocation(line: 4608, column: 19, scope: !20857)
!20864 = !DILocation(line: 4608, column: 26, scope: !20857)
!20865 = !DILocation(line: 4608, column: 27, scope: !20857)
!20866 = !DILocation(line: 4608, column: 24, scope: !20857)
!20867 = !DILocation(line: 4608, column: 13, scope: !20857)
!20868 = !DILocation(line: 4608, column: 3, scope: !20857)
!20869 = !DILocation(line: 4608, column: 8, scope: !20857)
!20870 = !DILocation(line: 4608, column: 11, scope: !20857)
!20871 = !DILocation(line: 4607, column: 50, scope: !20857)
!20872 = !DILocation(line: 4607, column: 2, scope: !20857)
!20873 = distinct !{!20873, !20862, !20874}
!20874 = !DILocation(line: 4608, column: 39, scope: !20854)
!20875 = !DILocation(line: 4609, column: 19, scope: !20821)
!20876 = !DILocation(line: 4609, column: 23, scope: !20821)
!20877 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !20823)
!20878 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !20823)
!20879 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !20823)
!20880 = !DILocation(line: 4610, column: 1, scope: !20821)
!20881 = distinct !DISubprogram(name: "nv_get_wol", scope: !3, file: !3, line: 4304, type: !5559, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20882 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !20883)
!20883 = distinct !DILocation(line: 4312, column: 2, scope: !20881)
!20884 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !20885)
!20885 = distinct !DILocation(line: 4309, column: 2, scope: !20881)
!20886 = !DILocalVariable(name: "dev", arg: 1, scope: !20881, file: !3, line: 4304, type: !290)
!20887 = !DILocation(line: 4304, column: 43, scope: !20881)
!20888 = !DILocalVariable(name: "wolinfo", arg: 2, scope: !20881, file: !3, line: 4304, type: !5561)
!20889 = !DILocation(line: 4304, column: 72, scope: !20881)
!20890 = !DILocalVariable(name: "np", scope: !20881, file: !3, line: 4306, type: !7446)
!20891 = !DILocation(line: 4306, column: 18, scope: !20881)
!20892 = !DILocation(line: 4306, column: 35, scope: !20881)
!20893 = !DILocation(line: 4306, column: 23, scope: !20881)
!20894 = !DILocation(line: 4307, column: 2, scope: !20881)
!20895 = !DILocation(line: 4307, column: 11, scope: !20881)
!20896 = !DILocation(line: 4307, column: 21, scope: !20881)
!20897 = !DILocation(line: 4309, column: 17, scope: !20881)
!20898 = !DILocation(line: 4309, column: 21, scope: !20881)
!20899 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !20885)
!20900 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !20885)
!20901 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !20885)
!20902 = !DILocation(line: 4310, column: 6, scope: !20903)
!20903 = distinct !DILexicalBlock(scope: !20881, file: !3, line: 4310, column: 6)
!20904 = !DILocation(line: 4310, column: 10, scope: !20903)
!20905 = !DILocation(line: 4310, column: 6, scope: !20881)
!20906 = !DILocation(line: 4311, column: 3, scope: !20903)
!20907 = !DILocation(line: 4311, column: 12, scope: !20903)
!20908 = !DILocation(line: 4311, column: 20, scope: !20903)
!20909 = !DILocation(line: 4312, column: 19, scope: !20881)
!20910 = !DILocation(line: 4312, column: 23, scope: !20881)
!20911 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !20883)
!20912 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !20883)
!20913 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !20883)
!20914 = !DILocation(line: 4313, column: 1, scope: !20881)
!20915 = distinct !DISubprogram(name: "nv_set_wol", scope: !3, file: !3, line: 4315, type: !5571, scopeLine: 4316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20916 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !20917)
!20917 = distinct !DILocation(line: 4330, column: 3, scope: !20918)
!20918 = distinct !DILexicalBlock(scope: !20919, file: !3, line: 4327, column: 26)
!20919 = distinct !DILexicalBlock(scope: !20915, file: !3, line: 4327, column: 6)
!20920 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !20921)
!20921 = distinct !DILocation(line: 4328, column: 3, scope: !20918)
!20922 = !DILocalVariable(name: "dev", arg: 1, scope: !20915, file: !3, line: 4315, type: !290)
!20923 = !DILocation(line: 4315, column: 42, scope: !20915)
!20924 = !DILocalVariable(name: "wolinfo", arg: 2, scope: !20915, file: !3, line: 4315, type: !5561)
!20925 = !DILocation(line: 4315, column: 71, scope: !20915)
!20926 = !DILocalVariable(name: "np", scope: !20915, file: !3, line: 4317, type: !7446)
!20927 = !DILocation(line: 4317, column: 18, scope: !20915)
!20928 = !DILocation(line: 4317, column: 35, scope: !20915)
!20929 = !DILocation(line: 4317, column: 23, scope: !20915)
!20930 = !DILocalVariable(name: "base", scope: !20915, file: !3, line: 4318, type: !793)
!20931 = !DILocation(line: 4318, column: 14, scope: !20915)
!20932 = !DILocation(line: 4318, column: 32, scope: !20915)
!20933 = !DILocation(line: 4318, column: 21, scope: !20915)
!20934 = !DILocalVariable(name: "flags", scope: !20915, file: !3, line: 4319, type: !987)
!20935 = !DILocation(line: 4319, column: 6, scope: !20915)
!20936 = !DILocation(line: 4321, column: 6, scope: !20937)
!20937 = distinct !DILexicalBlock(scope: !20915, file: !3, line: 4321, column: 6)
!20938 = !DILocation(line: 4321, column: 15, scope: !20937)
!20939 = !DILocation(line: 4321, column: 23, scope: !20937)
!20940 = !DILocation(line: 4321, column: 6, scope: !20915)
!20941 = !DILocation(line: 4322, column: 3, scope: !20942)
!20942 = distinct !DILexicalBlock(scope: !20937, file: !3, line: 4321, column: 29)
!20943 = !DILocation(line: 4322, column: 7, scope: !20942)
!20944 = !DILocation(line: 4322, column: 18, scope: !20942)
!20945 = !DILocation(line: 4323, column: 2, scope: !20942)
!20946 = !DILocation(line: 4323, column: 13, scope: !20947)
!20947 = distinct !DILexicalBlock(scope: !20937, file: !3, line: 4323, column: 13)
!20948 = !DILocation(line: 4323, column: 22, scope: !20947)
!20949 = !DILocation(line: 4323, column: 30, scope: !20947)
!20950 = !DILocation(line: 4323, column: 13, scope: !20937)
!20951 = !DILocation(line: 4324, column: 3, scope: !20952)
!20952 = distinct !DILexicalBlock(scope: !20947, file: !3, line: 4323, column: 44)
!20953 = !DILocation(line: 4324, column: 7, scope: !20952)
!20954 = !DILocation(line: 4324, column: 18, scope: !20952)
!20955 = !DILocation(line: 4325, column: 9, scope: !20952)
!20956 = !DILocation(line: 4326, column: 2, scope: !20952)
!20957 = !DILocation(line: 4327, column: 20, scope: !20919)
!20958 = !DILocation(line: 4327, column: 6, scope: !20919)
!20959 = !DILocation(line: 4327, column: 6, scope: !20915)
!20960 = !DILocation(line: 4328, column: 18, scope: !20918)
!20961 = !DILocation(line: 4328, column: 22, scope: !20918)
!20962 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !20921)
!20963 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !20921)
!20964 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !20921)
!20965 = !DILocation(line: 4329, column: 10, scope: !20918)
!20966 = !DILocation(line: 4329, column: 17, scope: !20918)
!20967 = !DILocation(line: 4329, column: 22, scope: !20918)
!20968 = !DILocation(line: 4329, column: 3, scope: !20918)
!20969 = !DILocation(line: 4330, column: 20, scope: !20918)
!20970 = !DILocation(line: 4330, column: 24, scope: !20918)
!20971 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !20917)
!20972 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !20917)
!20973 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !20917)
!20974 = !DILocation(line: 4331, column: 2, scope: !20918)
!20975 = !DILocation(line: 4332, column: 28, scope: !20915)
!20976 = !DILocation(line: 4332, column: 32, scope: !20915)
!20977 = !DILocation(line: 4332, column: 41, scope: !20915)
!20978 = !DILocation(line: 4332, column: 46, scope: !20915)
!20979 = !DILocation(line: 4332, column: 50, scope: !20915)
!20980 = !DILocation(line: 4332, column: 2, scope: !20915)
!20981 = !DILocation(line: 4333, column: 2, scope: !20915)
!20982 = distinct !DISubprogram(name: "nv_nway_reset", scope: !3, file: !3, line: 4612, type: !402, scopeLine: 4613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20983 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !20984)
!20984 = distinct !DILocation(line: 4628, column: 4, scope: !20985)
!20985 = distinct !DILexicalBlock(scope: !20986, file: !3, line: 4621, column: 27)
!20986 = distinct !DILexicalBlock(scope: !20987, file: !3, line: 4621, column: 7)
!20987 = distinct !DILexicalBlock(scope: !20988, file: !3, line: 4617, column: 19)
!20988 = distinct !DILexicalBlock(scope: !20982, file: !3, line: 4617, column: 6)
!20989 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !20990)
!20990 = distinct !DILocation(line: 4625, column: 4, scope: !20985)
!20991 = !DILocalVariable(name: "dev", arg: 1, scope: !20982, file: !3, line: 4612, type: !290)
!20992 = !DILocation(line: 4612, column: 45, scope: !20982)
!20993 = !DILocalVariable(name: "np", scope: !20982, file: !3, line: 4614, type: !7446)
!20994 = !DILocation(line: 4614, column: 18, scope: !20982)
!20995 = !DILocation(line: 4614, column: 35, scope: !20982)
!20996 = !DILocation(line: 4614, column: 23, scope: !20982)
!20997 = !DILocalVariable(name: "ret", scope: !20982, file: !3, line: 4615, type: !32)
!20998 = !DILocation(line: 4615, column: 6, scope: !20982)
!20999 = !DILocation(line: 4617, column: 6, scope: !20988)
!21000 = !DILocation(line: 4617, column: 10, scope: !20988)
!21001 = !DILocation(line: 4617, column: 6, scope: !20982)
!21002 = !DILocalVariable(name: "bmcr", scope: !20987, file: !3, line: 4618, type: !32)
!21003 = !DILocation(line: 4618, column: 7, scope: !20987)
!21004 = !DILocation(line: 4620, column: 21, scope: !20987)
!21005 = !DILocation(line: 4620, column: 3, scope: !20987)
!21006 = !DILocation(line: 4621, column: 21, scope: !20986)
!21007 = !DILocation(line: 4621, column: 7, scope: !20986)
!21008 = !DILocation(line: 4621, column: 7, scope: !20987)
!21009 = !DILocation(line: 4622, column: 19, scope: !20985)
!21010 = !DILocation(line: 4622, column: 4, scope: !20985)
!21011 = !DILocation(line: 4623, column: 21, scope: !20985)
!21012 = !DILocation(line: 4623, column: 4, scope: !20985)
!21013 = !DILocation(line: 4624, column: 20, scope: !20985)
!21014 = !DILocation(line: 4624, column: 4, scope: !20985)
!21015 = !DILocation(line: 4625, column: 15, scope: !20985)
!21016 = !DILocation(line: 4625, column: 19, scope: !20985)
!21017 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !20990)
!21018 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !20990)
!21019 = !DILocation(line: 4627, column: 17, scope: !20985)
!21020 = !DILocation(line: 4627, column: 4, scope: !20985)
!21021 = !DILocation(line: 4628, column: 17, scope: !20985)
!21022 = !DILocation(line: 4628, column: 21, scope: !20985)
!21023 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !20984)
!21024 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !20984)
!21025 = !DILocation(line: 4629, column: 22, scope: !20985)
!21026 = !DILocation(line: 4629, column: 4, scope: !20985)
!21027 = !DILocation(line: 4630, column: 23, scope: !20985)
!21028 = !DILocation(line: 4630, column: 4, scope: !20985)
!21029 = !DILocation(line: 4631, column: 16, scope: !20985)
!21030 = !DILocation(line: 4631, column: 4, scope: !20985)
!21031 = !DILocation(line: 4632, column: 3, scope: !20985)
!21032 = !DILocation(line: 4634, column: 17, scope: !20987)
!21033 = !DILocation(line: 4634, column: 22, scope: !20987)
!21034 = !DILocation(line: 4634, column: 26, scope: !20987)
!21035 = !DILocation(line: 4634, column: 10, scope: !20987)
!21036 = !DILocation(line: 4634, column: 8, scope: !20987)
!21037 = !DILocation(line: 4635, column: 7, scope: !21038)
!21038 = distinct !DILexicalBlock(scope: !20987, file: !3, line: 4635, column: 7)
!21039 = !DILocation(line: 4635, column: 11, scope: !21038)
!21040 = !DILocation(line: 4635, column: 21, scope: !21038)
!21041 = !DILocation(line: 4635, column: 7, scope: !20987)
!21042 = !DILocation(line: 4636, column: 9, scope: !21043)
!21043 = distinct !DILexicalBlock(scope: !21038, file: !3, line: 4635, column: 49)
!21044 = !DILocation(line: 4638, column: 18, scope: !21045)
!21045 = distinct !DILexicalBlock(scope: !21043, file: !3, line: 4638, column: 8)
!21046 = !DILocation(line: 4638, column: 23, scope: !21045)
!21047 = !DILocation(line: 4638, column: 8, scope: !21045)
!21048 = !DILocation(line: 4638, column: 8, scope: !21043)
!21049 = !DILocation(line: 4639, column: 17, scope: !21050)
!21050 = distinct !DILexicalBlock(scope: !21045, file: !3, line: 4638, column: 30)
!21051 = !DILocation(line: 4639, column: 5, scope: !21050)
!21052 = !DILocation(line: 4640, column: 5, scope: !21050)
!21053 = !DILocation(line: 4642, column: 3, scope: !21043)
!21054 = !DILocation(line: 4643, column: 9, scope: !21055)
!21055 = distinct !DILexicalBlock(scope: !21038, file: !3, line: 4642, column: 10)
!21056 = !DILocation(line: 4644, column: 11, scope: !21055)
!21057 = !DILocation(line: 4644, column: 16, scope: !21055)
!21058 = !DILocation(line: 4644, column: 20, scope: !21055)
!21059 = !DILocation(line: 4644, column: 39, scope: !21055)
!21060 = !DILocation(line: 4644, column: 4, scope: !21055)
!21061 = !DILocation(line: 4647, column: 21, scope: !21062)
!21062 = distinct !DILexicalBlock(scope: !20987, file: !3, line: 4647, column: 7)
!21063 = !DILocation(line: 4647, column: 7, scope: !21062)
!21064 = !DILocation(line: 4647, column: 7, scope: !20987)
!21065 = !DILocation(line: 4648, column: 18, scope: !21066)
!21066 = distinct !DILexicalBlock(scope: !21062, file: !3, line: 4647, column: 27)
!21067 = !DILocation(line: 4648, column: 4, scope: !21066)
!21068 = !DILocation(line: 4649, column: 18, scope: !21066)
!21069 = !DILocation(line: 4649, column: 4, scope: !21066)
!21070 = !DILocation(line: 4650, column: 3, scope: !21066)
!21071 = !DILocation(line: 4651, column: 7, scope: !20987)
!21072 = !DILocation(line: 4652, column: 2, scope: !20987)
!21073 = !DILocation(line: 4653, column: 7, scope: !21074)
!21074 = distinct !DILexicalBlock(scope: !20988, file: !3, line: 4652, column: 9)
!21075 = !DILocation(line: 4656, column: 9, scope: !20982)
!21076 = !DILocation(line: 4656, column: 2, scope: !20982)
!21077 = !DILocation(line: 4657, column: 1, scope: !20982)
!21078 = distinct !DISubprogram(name: "nv_get_ringparam", scope: !3, file: !3, line: 4659, type: !5647, scopeLine: 4660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21079 = !DILocalVariable(name: "dev", arg: 1, scope: !21078, file: !3, line: 4659, type: !290)
!21080 = !DILocation(line: 4659, column: 49, scope: !21078)
!21081 = !DILocalVariable(name: "ring", arg: 2, scope: !21078, file: !3, line: 4659, type: !5649)
!21082 = !DILocation(line: 4659, column: 80, scope: !21078)
!21083 = !DILocalVariable(name: "np", scope: !21078, file: !3, line: 4661, type: !7446)
!21084 = !DILocation(line: 4661, column: 18, scope: !21078)
!21085 = !DILocation(line: 4661, column: 35, scope: !21078)
!21086 = !DILocation(line: 4661, column: 23, scope: !21078)
!21087 = !DILocation(line: 4663, column: 26, scope: !21078)
!21088 = !DILocation(line: 4663, column: 30, scope: !21078)
!21089 = !DILocation(line: 4663, column: 39, scope: !21078)
!21090 = !DILocation(line: 4663, column: 25, scope: !21078)
!21091 = !DILocation(line: 4663, column: 2, scope: !21078)
!21092 = !DILocation(line: 4663, column: 8, scope: !21078)
!21093 = !DILocation(line: 4663, column: 23, scope: !21078)
!21094 = !DILocation(line: 4664, column: 26, scope: !21078)
!21095 = !DILocation(line: 4664, column: 30, scope: !21078)
!21096 = !DILocation(line: 4664, column: 39, scope: !21078)
!21097 = !DILocation(line: 4664, column: 25, scope: !21078)
!21098 = !DILocation(line: 4664, column: 2, scope: !21078)
!21099 = !DILocation(line: 4664, column: 8, scope: !21078)
!21100 = !DILocation(line: 4664, column: 23, scope: !21078)
!21101 = !DILocation(line: 4666, column: 21, scope: !21078)
!21102 = !DILocation(line: 4666, column: 25, scope: !21078)
!21103 = !DILocation(line: 4666, column: 2, scope: !21078)
!21104 = !DILocation(line: 4666, column: 8, scope: !21078)
!21105 = !DILocation(line: 4666, column: 19, scope: !21078)
!21106 = !DILocation(line: 4667, column: 21, scope: !21078)
!21107 = !DILocation(line: 4667, column: 25, scope: !21078)
!21108 = !DILocation(line: 4667, column: 2, scope: !21078)
!21109 = !DILocation(line: 4667, column: 8, scope: !21078)
!21110 = !DILocation(line: 4667, column: 19, scope: !21078)
!21111 = !DILocation(line: 4668, column: 1, scope: !21078)
!21112 = distinct !DISubprogram(name: "nv_set_ringparam", scope: !3, file: !3, line: 4670, type: !5663, scopeLine: 4671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21113 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !21114)
!21114 = distinct !DILocation(line: 4783, column: 3, scope: !21115)
!21115 = distinct !DILexicalBlock(scope: !21116, file: !3, line: 4764, column: 26)
!21116 = distinct !DILexicalBlock(scope: !21112, file: !3, line: 4764, column: 6)
!21117 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !21118)
!21118 = distinct !DILocation(line: 4736, column: 3, scope: !21119)
!21119 = distinct !DILexicalBlock(scope: !21120, file: !3, line: 4731, column: 26)
!21120 = distinct !DILexicalBlock(scope: !21112, file: !3, line: 4731, column: 6)
!21121 = !DILocalVariable(name: "dev", arg: 1, scope: !21112, file: !3, line: 4670, type: !290)
!21122 = !DILocation(line: 4670, column: 48, scope: !21112)
!21123 = !DILocalVariable(name: "ring", arg: 2, scope: !21112, file: !3, line: 4670, type: !5649)
!21124 = !DILocation(line: 4670, column: 79, scope: !21112)
!21125 = !DILocalVariable(name: "np", scope: !21112, file: !3, line: 4672, type: !7446)
!21126 = !DILocation(line: 4672, column: 18, scope: !21112)
!21127 = !DILocation(line: 4672, column: 35, scope: !21112)
!21128 = !DILocation(line: 4672, column: 23, scope: !21112)
!21129 = !DILocalVariable(name: "base", scope: !21112, file: !3, line: 4673, type: !793)
!21130 = !DILocation(line: 4673, column: 14, scope: !21112)
!21131 = !DILocation(line: 4673, column: 32, scope: !21112)
!21132 = !DILocation(line: 4673, column: 21, scope: !21112)
!21133 = !DILocalVariable(name: "rxtx_ring", scope: !21112, file: !3, line: 4674, type: !793)
!21134 = !DILocation(line: 4674, column: 6, scope: !21112)
!21135 = !DILocalVariable(name: "rx_skbuff", scope: !21112, file: !3, line: 4674, type: !793)
!21136 = !DILocation(line: 4674, column: 18, scope: !21112)
!21137 = !DILocalVariable(name: "tx_skbuff", scope: !21112, file: !3, line: 4674, type: !793)
!21138 = !DILocation(line: 4674, column: 30, scope: !21112)
!21139 = !DILocalVariable(name: "ring_addr", scope: !21112, file: !3, line: 4675, type: !2036)
!21140 = !DILocation(line: 4675, column: 13, scope: !21112)
!21141 = !DILocation(line: 4677, column: 6, scope: !21142)
!21142 = distinct !DILexicalBlock(scope: !21112, file: !3, line: 4677, column: 6)
!21143 = !DILocation(line: 4677, column: 12, scope: !21142)
!21144 = !DILocation(line: 4677, column: 23, scope: !21142)
!21145 = !DILocation(line: 4677, column: 37, scope: !21142)
!21146 = !DILocation(line: 4678, column: 6, scope: !21142)
!21147 = !DILocation(line: 4678, column: 12, scope: !21142)
!21148 = !DILocation(line: 4678, column: 23, scope: !21142)
!21149 = !DILocation(line: 4678, column: 37, scope: !21142)
!21150 = !DILocation(line: 4679, column: 6, scope: !21142)
!21151 = !DILocation(line: 4679, column: 12, scope: !21142)
!21152 = !DILocation(line: 4679, column: 28, scope: !21142)
!21153 = !DILocation(line: 4679, column: 33, scope: !21142)
!21154 = !DILocation(line: 4680, column: 6, scope: !21142)
!21155 = !DILocation(line: 4680, column: 12, scope: !21142)
!21156 = !DILocation(line: 4680, column: 29, scope: !21142)
!21157 = !DILocation(line: 4680, column: 34, scope: !21142)
!21158 = !DILocation(line: 4681, column: 7, scope: !21142)
!21159 = !DILocation(line: 4681, column: 11, scope: !21142)
!21160 = !DILocation(line: 4681, column: 20, scope: !21142)
!21161 = !DILocation(line: 4681, column: 34, scope: !21142)
!21162 = !DILocation(line: 4682, column: 8, scope: !21142)
!21163 = !DILocation(line: 4682, column: 14, scope: !21142)
!21164 = !DILocation(line: 4682, column: 25, scope: !21142)
!21165 = !DILocation(line: 4682, column: 47, scope: !21142)
!21166 = !DILocation(line: 4683, column: 8, scope: !21142)
!21167 = !DILocation(line: 4683, column: 14, scope: !21142)
!21168 = !DILocation(line: 4683, column: 25, scope: !21142)
!21169 = !DILocation(line: 4683, column: 49, scope: !21142)
!21170 = !DILocation(line: 4684, column: 7, scope: !21142)
!21171 = !DILocation(line: 4684, column: 11, scope: !21142)
!21172 = !DILocation(line: 4684, column: 20, scope: !21142)
!21173 = !DILocation(line: 4684, column: 34, scope: !21142)
!21174 = !DILocation(line: 4685, column: 8, scope: !21142)
!21175 = !DILocation(line: 4685, column: 14, scope: !21142)
!21176 = !DILocation(line: 4685, column: 25, scope: !21142)
!21177 = !DILocation(line: 4685, column: 49, scope: !21142)
!21178 = !DILocation(line: 4686, column: 8, scope: !21142)
!21179 = !DILocation(line: 4686, column: 14, scope: !21142)
!21180 = !DILocation(line: 4686, column: 25, scope: !21142)
!21181 = !DILocation(line: 4677, column: 6, scope: !21112)
!21182 = !DILocation(line: 4687, column: 3, scope: !21183)
!21183 = distinct !DILexicalBlock(scope: !21142, file: !3, line: 4686, column: 52)
!21184 = !DILocation(line: 4691, column: 20, scope: !21185)
!21185 = distinct !DILexicalBlock(scope: !21112, file: !3, line: 4691, column: 6)
!21186 = !DILocation(line: 4691, column: 7, scope: !21185)
!21187 = !DILocation(line: 4691, column: 6, scope: !21112)
!21188 = !DILocation(line: 4692, column: 35, scope: !21189)
!21189 = distinct !DILexicalBlock(scope: !21185, file: !3, line: 4691, column: 25)
!21190 = !DILocation(line: 4692, column: 39, scope: !21189)
!21191 = !DILocation(line: 4692, column: 48, scope: !21189)
!21192 = !DILocation(line: 4694, column: 14, scope: !21189)
!21193 = !DILocation(line: 4694, column: 20, scope: !21189)
!21194 = !DILocation(line: 4695, column: 13, scope: !21189)
!21195 = !DILocation(line: 4695, column: 19, scope: !21189)
!21196 = !DILocation(line: 4694, column: 31, scope: !21189)
!21197 = !DILocation(line: 4694, column: 13, scope: !21189)
!21198 = !DILocation(line: 4693, column: 38, scope: !21189)
!21199 = !DILocation(line: 4692, column: 15, scope: !21189)
!21200 = !DILocation(line: 4692, column: 13, scope: !21189)
!21201 = !DILocation(line: 4697, column: 2, scope: !21189)
!21202 = !DILocation(line: 4698, column: 35, scope: !21203)
!21203 = distinct !DILexicalBlock(scope: !21185, file: !3, line: 4697, column: 9)
!21204 = !DILocation(line: 4698, column: 39, scope: !21203)
!21205 = !DILocation(line: 4698, column: 48, scope: !21203)
!21206 = !DILocation(line: 4700, column: 14, scope: !21203)
!21207 = !DILocation(line: 4700, column: 20, scope: !21203)
!21208 = !DILocation(line: 4701, column: 13, scope: !21203)
!21209 = !DILocation(line: 4701, column: 19, scope: !21203)
!21210 = !DILocation(line: 4700, column: 31, scope: !21203)
!21211 = !DILocation(line: 4700, column: 13, scope: !21203)
!21212 = !DILocation(line: 4699, column: 41, scope: !21203)
!21213 = !DILocation(line: 4698, column: 15, scope: !21203)
!21214 = !DILocation(line: 4698, column: 13, scope: !21203)
!21215 = !DILocation(line: 4704, column: 28, scope: !21112)
!21216 = !DILocation(line: 4704, column: 34, scope: !21112)
!21217 = !DILocation(line: 4704, column: 14, scope: !21112)
!21218 = !DILocation(line: 4704, column: 12, scope: !21112)
!21219 = !DILocation(line: 4706, column: 28, scope: !21112)
!21220 = !DILocation(line: 4706, column: 34, scope: !21112)
!21221 = !DILocation(line: 4706, column: 14, scope: !21112)
!21222 = !DILocation(line: 4706, column: 12, scope: !21112)
!21223 = !DILocation(line: 4708, column: 7, scope: !21224)
!21224 = distinct !DILexicalBlock(scope: !21112, file: !3, line: 4708, column: 6)
!21225 = !DILocation(line: 4708, column: 17, scope: !21224)
!21226 = !DILocation(line: 4708, column: 21, scope: !21224)
!21227 = !DILocation(line: 4708, column: 31, scope: !21224)
!21228 = !DILocation(line: 4708, column: 35, scope: !21224)
!21229 = !DILocation(line: 4708, column: 6, scope: !21112)
!21230 = !DILocation(line: 4710, column: 21, scope: !21231)
!21231 = distinct !DILexicalBlock(scope: !21232, file: !3, line: 4710, column: 7)
!21232 = distinct !DILexicalBlock(scope: !21224, file: !3, line: 4708, column: 46)
!21233 = !DILocation(line: 4710, column: 8, scope: !21231)
!21234 = !DILocation(line: 4710, column: 7, scope: !21232)
!21235 = !DILocation(line: 4711, column: 8, scope: !21236)
!21236 = distinct !DILexicalBlock(scope: !21237, file: !3, line: 4711, column: 8)
!21237 = distinct !DILexicalBlock(scope: !21231, file: !3, line: 4710, column: 26)
!21238 = !DILocation(line: 4711, column: 8, scope: !21237)
!21239 = !DILocation(line: 4712, column: 24, scope: !21236)
!21240 = !DILocation(line: 4712, column: 28, scope: !21236)
!21241 = !DILocation(line: 4712, column: 37, scope: !21236)
!21242 = !DILocation(line: 4714, column: 10, scope: !21236)
!21243 = !DILocation(line: 4714, column: 16, scope: !21236)
!21244 = !DILocation(line: 4715, column: 9, scope: !21236)
!21245 = !DILocation(line: 4715, column: 15, scope: !21236)
!21246 = !DILocation(line: 4714, column: 27, scope: !21236)
!21247 = !DILocation(line: 4714, column: 9, scope: !21236)
!21248 = !DILocation(line: 4713, column: 34, scope: !21236)
!21249 = !DILocation(line: 4716, column: 9, scope: !21236)
!21250 = !DILocation(line: 4716, column: 20, scope: !21236)
!21251 = !DILocation(line: 4712, column: 5, scope: !21236)
!21252 = !DILocation(line: 4717, column: 3, scope: !21237)
!21253 = !DILocation(line: 4718, column: 8, scope: !21254)
!21254 = distinct !DILexicalBlock(scope: !21255, file: !3, line: 4718, column: 8)
!21255 = distinct !DILexicalBlock(scope: !21231, file: !3, line: 4717, column: 10)
!21256 = !DILocation(line: 4718, column: 8, scope: !21255)
!21257 = !DILocation(line: 4719, column: 24, scope: !21254)
!21258 = !DILocation(line: 4719, column: 28, scope: !21254)
!21259 = !DILocation(line: 4719, column: 37, scope: !21254)
!21260 = !DILocation(line: 4721, column: 10, scope: !21254)
!21261 = !DILocation(line: 4721, column: 16, scope: !21254)
!21262 = !DILocation(line: 4722, column: 9, scope: !21254)
!21263 = !DILocation(line: 4722, column: 15, scope: !21254)
!21264 = !DILocation(line: 4721, column: 27, scope: !21254)
!21265 = !DILocation(line: 4721, column: 9, scope: !21254)
!21266 = !DILocation(line: 4720, column: 37, scope: !21254)
!21267 = !DILocation(line: 4723, column: 9, scope: !21254)
!21268 = !DILocation(line: 4723, column: 20, scope: !21254)
!21269 = !DILocation(line: 4719, column: 5, scope: !21254)
!21270 = !DILocation(line: 4726, column: 9, scope: !21232)
!21271 = !DILocation(line: 4726, column: 3, scope: !21232)
!21272 = !DILocation(line: 4727, column: 9, scope: !21232)
!21273 = !DILocation(line: 4727, column: 3, scope: !21232)
!21274 = !DILocation(line: 4728, column: 3, scope: !21232)
!21275 = !DILocation(line: 4731, column: 20, scope: !21120)
!21276 = !DILocation(line: 4731, column: 6, scope: !21120)
!21277 = !DILocation(line: 4731, column: 6, scope: !21112)
!21278 = !DILocation(line: 4732, column: 18, scope: !21119)
!21279 = !DILocation(line: 4732, column: 3, scope: !21119)
!21280 = !DILocation(line: 4733, column: 19, scope: !21119)
!21281 = !DILocation(line: 4733, column: 3, scope: !21119)
!21282 = !DILocation(line: 4734, column: 20, scope: !21119)
!21283 = !DILocation(line: 4734, column: 3, scope: !21119)
!21284 = !DILocation(line: 4735, column: 19, scope: !21119)
!21285 = !DILocation(line: 4735, column: 3, scope: !21119)
!21286 = !DILocation(line: 4736, column: 14, scope: !21119)
!21287 = !DILocation(line: 4736, column: 18, scope: !21119)
!21288 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !21118)
!21289 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !21118)
!21290 = !DILocation(line: 4738, column: 16, scope: !21119)
!21291 = !DILocation(line: 4738, column: 3, scope: !21119)
!21292 = !DILocation(line: 4739, column: 17, scope: !21119)
!21293 = !DILocation(line: 4739, column: 3, scope: !21119)
!21294 = !DILocation(line: 4741, column: 17, scope: !21119)
!21295 = !DILocation(line: 4741, column: 3, scope: !21119)
!21296 = !DILocation(line: 4743, column: 14, scope: !21119)
!21297 = !DILocation(line: 4743, column: 3, scope: !21119)
!21298 = !DILocation(line: 4744, column: 2, scope: !21119)
!21299 = !DILocation(line: 4747, column: 21, scope: !21112)
!21300 = !DILocation(line: 4747, column: 27, scope: !21112)
!21301 = !DILocation(line: 4747, column: 2, scope: !21112)
!21302 = !DILocation(line: 4747, column: 6, scope: !21112)
!21303 = !DILocation(line: 4747, column: 19, scope: !21112)
!21304 = !DILocation(line: 4748, column: 21, scope: !21112)
!21305 = !DILocation(line: 4748, column: 27, scope: !21112)
!21306 = !DILocation(line: 4748, column: 2, scope: !21112)
!21307 = !DILocation(line: 4748, column: 6, scope: !21112)
!21308 = !DILocation(line: 4748, column: 19, scope: !21112)
!21309 = !DILocation(line: 4750, column: 20, scope: !21310)
!21310 = distinct !DILexicalBlock(scope: !21112, file: !3, line: 4750, column: 6)
!21311 = !DILocation(line: 4750, column: 7, scope: !21310)
!21312 = !DILocation(line: 4750, column: 6, scope: !21112)
!21313 = !DILocation(line: 4751, column: 42, scope: !21314)
!21314 = distinct !DILexicalBlock(scope: !21310, file: !3, line: 4750, column: 25)
!21315 = !DILocation(line: 4751, column: 22, scope: !21314)
!21316 = !DILocation(line: 4751, column: 3, scope: !21314)
!21317 = !DILocation(line: 4751, column: 7, scope: !21314)
!21318 = !DILocation(line: 4751, column: 15, scope: !21314)
!21319 = !DILocation(line: 4751, column: 20, scope: !21314)
!21320 = !DILocation(line: 4752, column: 23, scope: !21314)
!21321 = !DILocation(line: 4752, column: 27, scope: !21314)
!21322 = !DILocation(line: 4752, column: 35, scope: !21314)
!21323 = !DILocation(line: 4752, column: 40, scope: !21314)
!21324 = !DILocation(line: 4752, column: 44, scope: !21314)
!21325 = !DILocation(line: 4752, column: 3, scope: !21314)
!21326 = !DILocation(line: 4752, column: 7, scope: !21314)
!21327 = !DILocation(line: 4752, column: 15, scope: !21314)
!21328 = !DILocation(line: 4752, column: 20, scope: !21314)
!21329 = !DILocation(line: 4753, column: 2, scope: !21314)
!21330 = !DILocation(line: 4754, column: 43, scope: !21331)
!21331 = distinct !DILexicalBlock(scope: !21310, file: !3, line: 4753, column: 9)
!21332 = !DILocation(line: 4754, column: 20, scope: !21331)
!21333 = !DILocation(line: 4754, column: 3, scope: !21331)
!21334 = !DILocation(line: 4754, column: 7, scope: !21331)
!21335 = !DILocation(line: 4754, column: 15, scope: !21331)
!21336 = !DILocation(line: 4754, column: 18, scope: !21331)
!21337 = !DILocation(line: 4755, column: 21, scope: !21331)
!21338 = !DILocation(line: 4755, column: 25, scope: !21331)
!21339 = !DILocation(line: 4755, column: 33, scope: !21331)
!21340 = !DILocation(line: 4755, column: 36, scope: !21331)
!21341 = !DILocation(line: 4755, column: 40, scope: !21331)
!21342 = !DILocation(line: 4755, column: 3, scope: !21331)
!21343 = !DILocation(line: 4755, column: 7, scope: !21331)
!21344 = !DILocation(line: 4755, column: 15, scope: !21331)
!21345 = !DILocation(line: 4755, column: 18, scope: !21331)
!21346 = !DILocation(line: 4757, column: 36, scope: !21112)
!21347 = !DILocation(line: 4757, column: 15, scope: !21112)
!21348 = !DILocation(line: 4757, column: 2, scope: !21112)
!21349 = !DILocation(line: 4757, column: 6, scope: !21112)
!21350 = !DILocation(line: 4757, column: 13, scope: !21112)
!21351 = !DILocation(line: 4758, column: 36, scope: !21112)
!21352 = !DILocation(line: 4758, column: 15, scope: !21112)
!21353 = !DILocation(line: 4758, column: 2, scope: !21112)
!21354 = !DILocation(line: 4758, column: 6, scope: !21112)
!21355 = !DILocation(line: 4758, column: 13, scope: !21112)
!21356 = !DILocation(line: 4759, column: 18, scope: !21112)
!21357 = !DILocation(line: 4759, column: 2, scope: !21112)
!21358 = !DILocation(line: 4759, column: 6, scope: !21112)
!21359 = !DILocation(line: 4759, column: 16, scope: !21112)
!21360 = !DILocation(line: 4761, column: 9, scope: !21112)
!21361 = !DILocation(line: 4761, column: 13, scope: !21112)
!21362 = !DILocation(line: 4761, column: 2, scope: !21112)
!21363 = !DILocation(line: 4761, column: 52, scope: !21112)
!21364 = !DILocation(line: 4761, column: 56, scope: !21112)
!21365 = !DILocation(line: 4761, column: 50, scope: !21112)
!21366 = !DILocation(line: 4762, column: 9, scope: !21112)
!21367 = !DILocation(line: 4762, column: 13, scope: !21112)
!21368 = !DILocation(line: 4762, column: 2, scope: !21112)
!21369 = !DILocation(line: 4762, column: 52, scope: !21112)
!21370 = !DILocation(line: 4762, column: 56, scope: !21112)
!21371 = !DILocation(line: 4762, column: 50, scope: !21112)
!21372 = !DILocation(line: 4764, column: 20, scope: !21116)
!21373 = !DILocation(line: 4764, column: 6, scope: !21116)
!21374 = !DILocation(line: 4764, column: 6, scope: !21112)
!21375 = !DILocation(line: 4766, column: 15, scope: !21115)
!21376 = !DILocation(line: 4766, column: 3, scope: !21115)
!21377 = !DILocation(line: 4767, column: 20, scope: !21378)
!21378 = distinct !DILexicalBlock(scope: !21115, file: !3, line: 4767, column: 7)
!21379 = !DILocation(line: 4767, column: 7, scope: !21378)
!21380 = !DILocation(line: 4767, column: 7, scope: !21115)
!21381 = !DILocation(line: 4768, column: 9, scope: !21382)
!21382 = distinct !DILexicalBlock(scope: !21383, file: !3, line: 4768, column: 8)
!21383 = distinct !DILexicalBlock(scope: !21378, file: !3, line: 4767, column: 26)
!21384 = !DILocation(line: 4768, column: 13, scope: !21382)
!21385 = !DILocation(line: 4768, column: 8, scope: !21383)
!21386 = !DILocation(line: 4769, column: 16, scope: !21382)
!21387 = !DILocation(line: 4769, column: 20, scope: !21382)
!21388 = !DILocation(line: 4769, column: 30, scope: !21382)
!21389 = !DILocation(line: 4769, column: 38, scope: !21382)
!21390 = !DILocation(line: 4769, column: 5, scope: !21382)
!21391 = !DILocation(line: 4770, column: 3, scope: !21383)
!21392 = !DILocation(line: 4773, column: 10, scope: !21115)
!21393 = !DILocation(line: 4773, column: 14, scope: !21115)
!21394 = !DILocation(line: 4773, column: 25, scope: !21115)
!21395 = !DILocation(line: 4773, column: 30, scope: !21115)
!21396 = !DILocation(line: 4773, column: 3, scope: !21115)
!21397 = !DILocation(line: 4774, column: 18, scope: !21115)
!21398 = !DILocation(line: 4774, column: 3, scope: !21115)
!21399 = !DILocation(line: 4775, column: 12, scope: !21115)
!21400 = !DILocation(line: 4775, column: 16, scope: !21115)
!21401 = !DILocation(line: 4775, column: 28, scope: !21115)
!21402 = !DILocation(line: 4775, column: 32, scope: !21115)
!21403 = !DILocation(line: 4775, column: 61, scope: !21115)
!21404 = !DILocation(line: 4775, column: 65, scope: !21115)
!21405 = !DILocation(line: 4775, column: 77, scope: !21115)
!21406 = !DILocation(line: 4775, column: 81, scope: !21115)
!21407 = !DILocation(line: 4775, column: 57, scope: !21115)
!21408 = !DILocation(line: 4776, column: 4, scope: !21115)
!21409 = !DILocation(line: 4776, column: 9, scope: !21115)
!21410 = !DILocation(line: 4775, column: 3, scope: !21115)
!21411 = !DILocation(line: 4777, column: 12, scope: !21115)
!21412 = !DILocation(line: 4777, column: 3, scope: !21115)
!21413 = !DILocation(line: 4778, column: 29, scope: !21115)
!21414 = !DILocation(line: 4778, column: 33, scope: !21115)
!21415 = !DILocation(line: 4778, column: 28, scope: !21115)
!21416 = !DILocation(line: 4778, column: 58, scope: !21115)
!21417 = !DILocation(line: 4778, column: 47, scope: !21115)
!21418 = !DILocation(line: 4778, column: 63, scope: !21115)
!21419 = !DILocation(line: 4778, column: 3, scope: !21115)
!21420 = !DILocation(line: 4779, column: 12, scope: !21115)
!21421 = !DILocation(line: 4779, column: 3, scope: !21115)
!21422 = !DILocation(line: 4782, column: 17, scope: !21115)
!21423 = !DILocation(line: 4782, column: 3, scope: !21115)
!21424 = !DILocation(line: 4783, column: 16, scope: !21115)
!21425 = !DILocation(line: 4783, column: 20, scope: !21115)
!21426 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !21114)
!21427 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !21114)
!21428 = !DILocation(line: 4784, column: 21, scope: !21115)
!21429 = !DILocation(line: 4784, column: 3, scope: !21115)
!21430 = !DILocation(line: 4785, column: 22, scope: !21115)
!21431 = !DILocation(line: 4785, column: 3, scope: !21115)
!21432 = !DILocation(line: 4786, column: 18, scope: !21115)
!21433 = !DILocation(line: 4786, column: 3, scope: !21115)
!21434 = !DILocation(line: 4787, column: 17, scope: !21115)
!21435 = !DILocation(line: 4787, column: 3, scope: !21115)
!21436 = !DILocation(line: 4788, column: 2, scope: !21115)
!21437 = !DILocation(line: 4789, column: 2, scope: !21112)
!21438 = !DILabel(scope: !21112, name: "exit", file: !3, line: 4790)
!21439 = !DILocation(line: 4790, column: 1, scope: !21112)
!21440 = !DILocation(line: 4791, column: 2, scope: !21112)
!21441 = !DILocation(line: 4792, column: 1, scope: !21112)
!21442 = distinct !DISubprogram(name: "nv_get_pauseparam", scope: !3, file: !3, line: 4794, type: !5676, scopeLine: 4795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21443 = !DILocalVariable(name: "dev", arg: 1, scope: !21442, file: !3, line: 4794, type: !290)
!21444 = !DILocation(line: 4794, column: 50, scope: !21442)
!21445 = !DILocalVariable(name: "pause", arg: 2, scope: !21442, file: !3, line: 4794, type: !5678)
!21446 = !DILocation(line: 4794, column: 82, scope: !21442)
!21447 = !DILocalVariable(name: "np", scope: !21442, file: !3, line: 4796, type: !7446)
!21448 = !DILocation(line: 4796, column: 18, scope: !21442)
!21449 = !DILocation(line: 4796, column: 35, scope: !21442)
!21450 = !DILocation(line: 4796, column: 23, scope: !21442)
!21451 = !DILocation(line: 4798, column: 20, scope: !21442)
!21452 = !DILocation(line: 4798, column: 24, scope: !21442)
!21453 = !DILocation(line: 4798, column: 36, scope: !21442)
!21454 = !DILocation(line: 4798, column: 61, scope: !21442)
!21455 = !DILocation(line: 4798, column: 2, scope: !21442)
!21456 = !DILocation(line: 4798, column: 9, scope: !21442)
!21457 = !DILocation(line: 4798, column: 17, scope: !21442)
!21458 = !DILocation(line: 4799, column: 21, scope: !21442)
!21459 = !DILocation(line: 4799, column: 25, scope: !21442)
!21460 = !DILocation(line: 4799, column: 37, scope: !21442)
!21461 = !DILocation(line: 4799, column: 64, scope: !21442)
!21462 = !DILocation(line: 4799, column: 2, scope: !21442)
!21463 = !DILocation(line: 4799, column: 9, scope: !21442)
!21464 = !DILocation(line: 4799, column: 18, scope: !21442)
!21465 = !DILocation(line: 4800, column: 21, scope: !21442)
!21466 = !DILocation(line: 4800, column: 25, scope: !21442)
!21467 = !DILocation(line: 4800, column: 37, scope: !21442)
!21468 = !DILocation(line: 4800, column: 64, scope: !21442)
!21469 = !DILocation(line: 4800, column: 2, scope: !21442)
!21470 = !DILocation(line: 4800, column: 9, scope: !21442)
!21471 = !DILocation(line: 4800, column: 18, scope: !21442)
!21472 = !DILocation(line: 4801, column: 1, scope: !21442)
!21473 = distinct !DISubprogram(name: "nv_set_pauseparam", scope: !3, file: !3, line: 4803, type: !5687, scopeLine: 4804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21474 = !DILocation(line: 392, column: 53, scope: !9484, inlinedAt: !21475)
!21475 = distinct !DILocation(line: 4826, column: 3, scope: !21476)
!21476 = distinct !DILexicalBlock(scope: !21477, file: !3, line: 4819, column: 26)
!21477 = distinct !DILexicalBlock(scope: !21473, file: !3, line: 4819, column: 6)
!21478 = !DILocation(line: 352, column: 51, scope: !9492, inlinedAt: !21479)
!21479 = distinct !DILocation(line: 4823, column: 3, scope: !21476)
!21480 = !DILocalVariable(name: "dev", arg: 1, scope: !21473, file: !3, line: 4803, type: !290)
!21481 = !DILocation(line: 4803, column: 49, scope: !21473)
!21482 = !DILocalVariable(name: "pause", arg: 2, scope: !21473, file: !3, line: 4803, type: !5678)
!21483 = !DILocation(line: 4803, column: 81, scope: !21473)
!21484 = !DILocalVariable(name: "np", scope: !21473, file: !3, line: 4805, type: !7446)
!21485 = !DILocation(line: 4805, column: 18, scope: !21473)
!21486 = !DILocation(line: 4805, column: 35, scope: !21473)
!21487 = !DILocation(line: 4805, column: 23, scope: !21473)
!21488 = !DILocalVariable(name: "adv", scope: !21473, file: !3, line: 4806, type: !32)
!21489 = !DILocation(line: 4806, column: 6, scope: !21473)
!21490 = !DILocalVariable(name: "bmcr", scope: !21473, file: !3, line: 4806, type: !32)
!21491 = !DILocation(line: 4806, column: 11, scope: !21473)
!21492 = !DILocation(line: 4808, column: 8, scope: !21493)
!21493 = distinct !DILexicalBlock(scope: !21473, file: !3, line: 4808, column: 6)
!21494 = !DILocation(line: 4808, column: 12, scope: !21493)
!21495 = !DILocation(line: 4808, column: 20, scope: !21493)
!21496 = !DILocation(line: 4808, column: 23, scope: !21493)
!21497 = !DILocation(line: 4808, column: 27, scope: !21493)
!21498 = !DILocation(line: 4808, column: 34, scope: !21493)
!21499 = !DILocation(line: 4808, column: 40, scope: !21493)
!21500 = !DILocation(line: 4809, column: 7, scope: !21493)
!21501 = !DILocation(line: 4809, column: 11, scope: !21493)
!21502 = !DILocation(line: 4809, column: 19, scope: !21493)
!21503 = !DILocation(line: 4809, column: 23, scope: !21493)
!21504 = !DILocation(line: 4809, column: 30, scope: !21493)
!21505 = !DILocation(line: 4809, column: 38, scope: !21493)
!21506 = !DILocation(line: 4809, column: 41, scope: !21493)
!21507 = !DILocation(line: 4809, column: 45, scope: !21493)
!21508 = !DILocation(line: 4809, column: 52, scope: !21493)
!21509 = !DILocation(line: 4808, column: 6, scope: !21473)
!21510 = !DILocation(line: 4810, column: 15, scope: !21511)
!21511 = distinct !DILexicalBlock(scope: !21493, file: !3, line: 4809, column: 59)
!21512 = !DILocation(line: 4810, column: 3, scope: !21511)
!21513 = !DILocation(line: 4811, column: 3, scope: !21511)
!21514 = !DILocation(line: 4813, column: 6, scope: !21515)
!21515 = distinct !DILexicalBlock(scope: !21473, file: !3, line: 4813, column: 6)
!21516 = !DILocation(line: 4813, column: 13, scope: !21515)
!21517 = !DILocation(line: 4813, column: 22, scope: !21515)
!21518 = !DILocation(line: 4813, column: 27, scope: !21515)
!21519 = !DILocation(line: 4813, column: 31, scope: !21515)
!21520 = !DILocation(line: 4813, column: 43, scope: !21515)
!21521 = !DILocation(line: 4813, column: 6, scope: !21473)
!21522 = !DILocation(line: 4814, column: 15, scope: !21523)
!21523 = distinct !DILexicalBlock(scope: !21515, file: !3, line: 4813, column: 72)
!21524 = !DILocation(line: 4814, column: 3, scope: !21523)
!21525 = !DILocation(line: 4815, column: 3, scope: !21523)
!21526 = !DILocation(line: 4818, column: 20, scope: !21473)
!21527 = !DILocation(line: 4818, column: 2, scope: !21473)
!21528 = !DILocation(line: 4819, column: 20, scope: !21477)
!21529 = !DILocation(line: 4819, column: 6, scope: !21477)
!21530 = !DILocation(line: 4819, column: 6, scope: !21473)
!21531 = !DILocation(line: 4820, column: 18, scope: !21476)
!21532 = !DILocation(line: 4820, column: 3, scope: !21476)
!21533 = !DILocation(line: 4821, column: 20, scope: !21476)
!21534 = !DILocation(line: 4821, column: 3, scope: !21476)
!21535 = !DILocation(line: 4822, column: 19, scope: !21476)
!21536 = !DILocation(line: 4822, column: 3, scope: !21476)
!21537 = !DILocation(line: 4823, column: 14, scope: !21476)
!21538 = !DILocation(line: 4823, column: 18, scope: !21476)
!21539 = !DILocation(line: 354, column: 2, scope: !9600, inlinedAt: !21479)
!21540 = !DILocation(line: 354, column: 2, scope: !9603, inlinedAt: !21479)
!21541 = !DILocation(line: 4825, column: 16, scope: !21476)
!21542 = !DILocation(line: 4825, column: 3, scope: !21476)
!21543 = !DILocation(line: 4826, column: 16, scope: !21476)
!21544 = !DILocation(line: 4826, column: 20, scope: !21476)
!21545 = !DILocation(line: 394, column: 2, scope: !9680, inlinedAt: !21475)
!21546 = !DILocation(line: 394, column: 2, scope: !9683, inlinedAt: !21475)
!21547 = !DILocation(line: 4827, column: 21, scope: !21476)
!21548 = !DILocation(line: 4827, column: 3, scope: !21476)
!21549 = !DILocation(line: 4828, column: 22, scope: !21476)
!21550 = !DILocation(line: 4828, column: 3, scope: !21476)
!21551 = !DILocation(line: 4829, column: 2, scope: !21476)
!21552 = !DILocation(line: 4831, column: 2, scope: !21473)
!21553 = !DILocation(line: 4831, column: 6, scope: !21473)
!21554 = !DILocation(line: 4831, column: 18, scope: !21473)
!21555 = !DILocation(line: 4832, column: 6, scope: !21556)
!21556 = distinct !DILexicalBlock(scope: !21473, file: !3, line: 4832, column: 6)
!21557 = !DILocation(line: 4832, column: 13, scope: !21556)
!21558 = !DILocation(line: 4832, column: 6, scope: !21473)
!21559 = !DILocation(line: 4833, column: 3, scope: !21556)
!21560 = !DILocation(line: 4833, column: 7, scope: !21556)
!21561 = !DILocation(line: 4833, column: 19, scope: !21556)
!21562 = !DILocation(line: 4834, column: 6, scope: !21563)
!21563 = distinct !DILexicalBlock(scope: !21473, file: !3, line: 4834, column: 6)
!21564 = !DILocation(line: 4834, column: 13, scope: !21563)
!21565 = !DILocation(line: 4834, column: 6, scope: !21473)
!21566 = !DILocation(line: 4835, column: 3, scope: !21563)
!21567 = !DILocation(line: 4835, column: 7, scope: !21563)
!21568 = !DILocation(line: 4835, column: 19, scope: !21563)
!21569 = !DILocation(line: 4837, column: 6, scope: !21570)
!21570 = distinct !DILexicalBlock(scope: !21473, file: !3, line: 4837, column: 6)
!21571 = !DILocation(line: 4837, column: 10, scope: !21570)
!21572 = !DILocation(line: 4837, column: 18, scope: !21570)
!21573 = !DILocation(line: 4837, column: 21, scope: !21570)
!21574 = !DILocation(line: 4837, column: 28, scope: !21570)
!21575 = !DILocation(line: 4837, column: 6, scope: !21473)
!21576 = !DILocation(line: 4838, column: 3, scope: !21577)
!21577 = distinct !DILexicalBlock(scope: !21570, file: !3, line: 4837, column: 37)
!21578 = !DILocation(line: 4838, column: 7, scope: !21577)
!21579 = !DILocation(line: 4838, column: 19, scope: !21577)
!21580 = !DILocation(line: 4840, column: 16, scope: !21577)
!21581 = !DILocation(line: 4840, column: 21, scope: !21577)
!21582 = !DILocation(line: 4840, column: 25, scope: !21577)
!21583 = !DILocation(line: 4840, column: 9, scope: !21577)
!21584 = !DILocation(line: 4840, column: 7, scope: !21577)
!21585 = !DILocation(line: 4841, column: 7, scope: !21577)
!21586 = !DILocation(line: 4842, column: 7, scope: !21587)
!21587 = distinct !DILexicalBlock(scope: !21577, file: !3, line: 4842, column: 7)
!21588 = !DILocation(line: 4842, column: 11, scope: !21587)
!21589 = !DILocation(line: 4842, column: 23, scope: !21587)
!21590 = !DILocation(line: 4842, column: 7, scope: !21577)
!21591 = !DILocation(line: 4843, column: 8, scope: !21587)
!21592 = !DILocation(line: 4843, column: 4, scope: !21587)
!21593 = !DILocation(line: 4844, column: 7, scope: !21594)
!21594 = distinct !DILexicalBlock(scope: !21577, file: !3, line: 4844, column: 7)
!21595 = !DILocation(line: 4844, column: 11, scope: !21594)
!21596 = !DILocation(line: 4844, column: 23, scope: !21594)
!21597 = !DILocation(line: 4844, column: 7, scope: !21577)
!21598 = !DILocation(line: 4845, column: 8, scope: !21594)
!21599 = !DILocation(line: 4845, column: 4, scope: !21594)
!21600 = !DILocation(line: 4846, column: 10, scope: !21577)
!21601 = !DILocation(line: 4846, column: 15, scope: !21577)
!21602 = !DILocation(line: 4846, column: 19, scope: !21577)
!21603 = !DILocation(line: 4846, column: 43, scope: !21577)
!21604 = !DILocation(line: 4846, column: 3, scope: !21577)
!21605 = !DILocation(line: 4848, column: 21, scope: !21606)
!21606 = distinct !DILexicalBlock(scope: !21577, file: !3, line: 4848, column: 7)
!21607 = !DILocation(line: 4848, column: 7, scope: !21606)
!21608 = !DILocation(line: 4848, column: 7, scope: !21577)
!21609 = !DILocation(line: 4849, column: 16, scope: !21606)
!21610 = !DILocation(line: 4849, column: 4, scope: !21606)
!21611 = !DILocation(line: 4850, column: 17, scope: !21577)
!21612 = !DILocation(line: 4850, column: 22, scope: !21577)
!21613 = !DILocation(line: 4850, column: 26, scope: !21577)
!21614 = !DILocation(line: 4850, column: 10, scope: !21577)
!21615 = !DILocation(line: 4850, column: 8, scope: !21577)
!21616 = !DILocation(line: 4851, column: 8, scope: !21577)
!21617 = !DILocation(line: 4852, column: 10, scope: !21577)
!21618 = !DILocation(line: 4852, column: 15, scope: !21577)
!21619 = !DILocation(line: 4852, column: 19, scope: !21577)
!21620 = !DILocation(line: 4852, column: 38, scope: !21577)
!21621 = !DILocation(line: 4852, column: 3, scope: !21577)
!21622 = !DILocation(line: 4853, column: 2, scope: !21577)
!21623 = !DILocation(line: 4854, column: 3, scope: !21624)
!21624 = distinct !DILexicalBlock(scope: !21570, file: !3, line: 4853, column: 9)
!21625 = !DILocation(line: 4854, column: 7, scope: !21624)
!21626 = !DILocation(line: 4854, column: 19, scope: !21624)
!21627 = !DILocation(line: 4855, column: 7, scope: !21628)
!21628 = distinct !DILexicalBlock(scope: !21624, file: !3, line: 4855, column: 7)
!21629 = !DILocation(line: 4855, column: 14, scope: !21628)
!21630 = !DILocation(line: 4855, column: 7, scope: !21624)
!21631 = !DILocation(line: 4856, column: 4, scope: !21628)
!21632 = !DILocation(line: 4856, column: 8, scope: !21628)
!21633 = !DILocation(line: 4856, column: 20, scope: !21628)
!21634 = !DILocation(line: 4857, column: 7, scope: !21635)
!21635 = distinct !DILexicalBlock(scope: !21624, file: !3, line: 4857, column: 7)
!21636 = !DILocation(line: 4857, column: 14, scope: !21635)
!21637 = !DILocation(line: 4857, column: 7, scope: !21624)
!21638 = !DILocation(line: 4858, column: 4, scope: !21635)
!21639 = !DILocation(line: 4858, column: 8, scope: !21635)
!21640 = !DILocation(line: 4858, column: 20, scope: !21635)
!21641 = !DILocation(line: 4860, column: 22, scope: !21642)
!21642 = distinct !DILexicalBlock(scope: !21624, file: !3, line: 4860, column: 7)
!21643 = !DILocation(line: 4860, column: 8, scope: !21642)
!21644 = !DILocation(line: 4860, column: 7, scope: !21624)
!21645 = !DILocation(line: 4861, column: 24, scope: !21642)
!21646 = !DILocation(line: 4861, column: 4, scope: !21642)
!21647 = !DILocation(line: 4863, column: 20, scope: !21642)
!21648 = !DILocation(line: 4863, column: 25, scope: !21642)
!21649 = !DILocation(line: 4863, column: 29, scope: !21642)
!21650 = !DILocation(line: 4863, column: 4, scope: !21642)
!21651 = !DILocation(line: 4866, column: 20, scope: !21652)
!21652 = distinct !DILexicalBlock(scope: !21473, file: !3, line: 4866, column: 6)
!21653 = !DILocation(line: 4866, column: 6, scope: !21652)
!21654 = !DILocation(line: 4866, column: 6, scope: !21473)
!21655 = !DILocation(line: 4867, column: 17, scope: !21656)
!21656 = distinct !DILexicalBlock(scope: !21652, file: !3, line: 4866, column: 26)
!21657 = !DILocation(line: 4867, column: 3, scope: !21656)
!21658 = !DILocation(line: 4868, column: 17, scope: !21656)
!21659 = !DILocation(line: 4868, column: 3, scope: !21656)
!21660 = !DILocation(line: 4869, column: 2, scope: !21656)
!21661 = !DILocation(line: 4870, column: 2, scope: !21473)
!21662 = !DILocation(line: 4871, column: 1, scope: !21473)
!21663 = distinct !DISubprogram(name: "nv_self_test", scope: !3, file: !3, line: 5262, type: !5691, scopeLine: 5263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21664 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !21665)
!21665 = distinct !DILocation(line: 5293, column: 4, scope: !21666)
!21666 = distinct !DILexicalBlock(scope: !21667, file: !3, line: 5277, column: 27)
!21667 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 5277, column: 7)
!21668 = distinct !DILexicalBlock(scope: !21669, file: !3, line: 5276, column: 41)
!21669 = distinct !DILexicalBlock(scope: !21663, file: !3, line: 5276, column: 6)
!21670 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !21671)
!21671 = distinct !DILocation(line: 5282, column: 4, scope: !21666)
!21672 = !DILocalVariable(name: "dev", arg: 1, scope: !21663, file: !3, line: 5262, type: !290)
!21673 = !DILocation(line: 5262, column: 45, scope: !21663)
!21674 = !DILocalVariable(name: "test", arg: 2, scope: !21663, file: !3, line: 5262, type: !5693)
!21675 = !DILocation(line: 5262, column: 71, scope: !21663)
!21676 = !DILocalVariable(name: "buffer", arg: 3, scope: !21663, file: !3, line: 5262, type: !5372)
!21677 = !DILocation(line: 5262, column: 82, scope: !21663)
!21678 = !DILocalVariable(name: "np", scope: !21663, file: !3, line: 5264, type: !7446)
!21679 = !DILocation(line: 5264, column: 18, scope: !21663)
!21680 = !DILocation(line: 5264, column: 35, scope: !21663)
!21681 = !DILocation(line: 5264, column: 23, scope: !21663)
!21682 = !DILocalVariable(name: "base", scope: !21663, file: !3, line: 5265, type: !793)
!21683 = !DILocation(line: 5265, column: 14, scope: !21663)
!21684 = !DILocation(line: 5265, column: 32, scope: !21663)
!21685 = !DILocation(line: 5265, column: 21, scope: !21663)
!21686 = !DILocalVariable(name: "result", scope: !21663, file: !3, line: 5266, type: !32)
!21687 = !DILocation(line: 5266, column: 6, scope: !21663)
!21688 = !DILocalVariable(name: "count", scope: !21663, file: !3, line: 5266, type: !32)
!21689 = !DILocation(line: 5266, column: 14, scope: !21663)
!21690 = !DILocation(line: 5268, column: 28, scope: !21663)
!21691 = !DILocation(line: 5268, column: 10, scope: !21663)
!21692 = !DILocation(line: 5268, column: 8, scope: !21663)
!21693 = !DILocation(line: 5269, column: 9, scope: !21663)
!21694 = !DILocation(line: 5269, column: 2, scope: !21663)
!21695 = !DILocation(line: 5269, column: 20, scope: !21663)
!21696 = !DILocation(line: 5269, column: 26, scope: !21663)
!21697 = !DILocation(line: 5271, column: 20, scope: !21698)
!21698 = distinct !DILexicalBlock(scope: !21663, file: !3, line: 5271, column: 6)
!21699 = !DILocation(line: 5271, column: 7, scope: !21698)
!21700 = !DILocation(line: 5271, column: 6, scope: !21663)
!21701 = !DILocation(line: 5272, column: 3, scope: !21702)
!21702 = distinct !DILexicalBlock(scope: !21698, file: !3, line: 5271, column: 26)
!21703 = !DILocation(line: 5272, column: 9, scope: !21702)
!21704 = !DILocation(line: 5272, column: 15, scope: !21702)
!21705 = !DILocation(line: 5273, column: 3, scope: !21702)
!21706 = !DILocation(line: 5273, column: 13, scope: !21702)
!21707 = !DILocation(line: 5274, column: 2, scope: !21702)
!21708 = !DILocation(line: 5276, column: 6, scope: !21669)
!21709 = !DILocation(line: 5276, column: 12, scope: !21669)
!21710 = !DILocation(line: 5276, column: 18, scope: !21669)
!21711 = !DILocation(line: 5276, column: 6, scope: !21663)
!21712 = !DILocation(line: 5277, column: 21, scope: !21667)
!21713 = !DILocation(line: 5277, column: 7, scope: !21667)
!21714 = !DILocation(line: 5277, column: 7, scope: !21668)
!21715 = !DILocation(line: 5278, column: 21, scope: !21666)
!21716 = !DILocation(line: 5278, column: 4, scope: !21666)
!21717 = !DILocation(line: 5279, column: 20, scope: !21666)
!21718 = !DILocation(line: 5279, column: 4, scope: !21666)
!21719 = !DILocation(line: 5280, column: 21, scope: !21666)
!21720 = !DILocation(line: 5280, column: 4, scope: !21666)
!21721 = !DILocation(line: 5281, column: 20, scope: !21666)
!21722 = !DILocation(line: 5281, column: 4, scope: !21666)
!21723 = !DILocation(line: 5282, column: 19, scope: !21666)
!21724 = !DILocation(line: 5282, column: 23, scope: !21666)
!21725 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !21671)
!21726 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !21671)
!21727 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !21671)
!21728 = !DILocation(line: 5283, column: 29, scope: !21666)
!21729 = !DILocation(line: 5283, column: 34, scope: !21666)
!21730 = !DILocation(line: 5283, column: 38, scope: !21666)
!21731 = !DILocation(line: 5283, column: 4, scope: !21666)
!21732 = !DILocation(line: 5284, column: 10, scope: !21733)
!21733 = distinct !DILexicalBlock(scope: !21666, file: !3, line: 5284, column: 8)
!21734 = !DILocation(line: 5284, column: 14, scope: !21733)
!21735 = !DILocation(line: 5284, column: 24, scope: !21733)
!21736 = !DILocation(line: 5284, column: 8, scope: !21666)
!21737 = !DILocation(line: 5285, column: 32, scope: !21733)
!21738 = !DILocation(line: 5285, column: 37, scope: !21733)
!21739 = !DILocation(line: 5285, column: 5, scope: !21733)
!21740 = !DILocation(line: 5287, column: 32, scope: !21733)
!21741 = !DILocation(line: 5287, column: 37, scope: !21733)
!21742 = !DILocation(line: 5287, column: 5, scope: !21733)
!21743 = !DILocation(line: 5289, column: 17, scope: !21666)
!21744 = !DILocation(line: 5289, column: 4, scope: !21666)
!21745 = !DILocation(line: 5290, column: 18, scope: !21666)
!21746 = !DILocation(line: 5290, column: 4, scope: !21666)
!21747 = !DILocation(line: 5292, column: 18, scope: !21666)
!21748 = !DILocation(line: 5292, column: 4, scope: !21666)
!21749 = !DILocation(line: 5293, column: 21, scope: !21666)
!21750 = !DILocation(line: 5293, column: 25, scope: !21666)
!21751 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !21665)
!21752 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !21665)
!21753 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !21665)
!21754 = !DILocation(line: 5294, column: 22, scope: !21666)
!21755 = !DILocation(line: 5294, column: 4, scope: !21666)
!21756 = !DILocation(line: 5295, column: 23, scope: !21666)
!21757 = !DILocation(line: 5295, column: 4, scope: !21666)
!21758 = !DILocation(line: 5296, column: 3, scope: !21666)
!21759 = !DILocation(line: 5298, column: 25, scope: !21760)
!21760 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 5298, column: 7)
!21761 = !DILocation(line: 5298, column: 8, scope: !21760)
!21762 = !DILocation(line: 5298, column: 7, scope: !21668)
!21763 = !DILocation(line: 5299, column: 4, scope: !21764)
!21764 = distinct !DILexicalBlock(scope: !21760, file: !3, line: 5298, column: 31)
!21765 = !DILocation(line: 5299, column: 10, scope: !21764)
!21766 = !DILocation(line: 5299, column: 16, scope: !21764)
!21767 = !DILocation(line: 5300, column: 4, scope: !21764)
!21768 = !DILocation(line: 5300, column: 14, scope: !21764)
!21769 = !DILocation(line: 5301, column: 3, scope: !21764)
!21770 = !DILocation(line: 5303, column: 30, scope: !21668)
!21771 = !DILocation(line: 5303, column: 12, scope: !21668)
!21772 = !DILocation(line: 5303, column: 10, scope: !21668)
!21773 = !DILocation(line: 5304, column: 7, scope: !21774)
!21774 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 5304, column: 7)
!21775 = !DILocation(line: 5304, column: 14, scope: !21774)
!21776 = !DILocation(line: 5304, column: 7, scope: !21668)
!21777 = !DILocation(line: 5305, column: 4, scope: !21778)
!21778 = distinct !DILexicalBlock(scope: !21774, file: !3, line: 5304, column: 20)
!21779 = !DILocation(line: 5305, column: 10, scope: !21778)
!21780 = !DILocation(line: 5305, column: 16, scope: !21778)
!21781 = !DILocation(line: 5306, column: 4, scope: !21778)
!21782 = !DILocation(line: 5306, column: 14, scope: !21778)
!21783 = !DILocation(line: 5307, column: 3, scope: !21778)
!21784 = !DILocation(line: 5308, column: 7, scope: !21785)
!21785 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 5308, column: 7)
!21786 = !DILocation(line: 5308, column: 14, scope: !21785)
!21787 = !DILocation(line: 5308, column: 7, scope: !21668)
!21788 = !DILocation(line: 5310, column: 4, scope: !21789)
!21789 = distinct !DILexicalBlock(scope: !21785, file: !3, line: 5308, column: 20)
!21790 = !DILocation(line: 5313, column: 7, scope: !21791)
!21791 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 5313, column: 7)
!21792 = !DILocation(line: 5313, column: 13, scope: !21791)
!21793 = !DILocation(line: 5313, column: 34, scope: !21791)
!21794 = !DILocation(line: 5313, column: 55, scope: !21791)
!21795 = !DILocation(line: 5313, column: 38, scope: !21791)
!21796 = !DILocation(line: 5313, column: 7, scope: !21668)
!21797 = !DILocation(line: 5314, column: 4, scope: !21798)
!21798 = distinct !DILexicalBlock(scope: !21791, file: !3, line: 5313, column: 61)
!21799 = !DILocation(line: 5314, column: 10, scope: !21798)
!21800 = !DILocation(line: 5314, column: 16, scope: !21798)
!21801 = !DILocation(line: 5315, column: 4, scope: !21798)
!21802 = !DILocation(line: 5315, column: 14, scope: !21798)
!21803 = !DILocation(line: 5316, column: 3, scope: !21798)
!21804 = !DILocation(line: 5318, column: 21, scope: !21805)
!21805 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 5318, column: 7)
!21806 = !DILocation(line: 5318, column: 7, scope: !21805)
!21807 = !DILocation(line: 5318, column: 7, scope: !21668)
!21808 = !DILocation(line: 5320, column: 16, scope: !21809)
!21809 = distinct !DILexicalBlock(scope: !21805, file: !3, line: 5318, column: 27)
!21810 = !DILocation(line: 5320, column: 4, scope: !21809)
!21811 = !DILocation(line: 5321, column: 21, scope: !21812)
!21812 = distinct !DILexicalBlock(scope: !21809, file: !3, line: 5321, column: 8)
!21813 = !DILocation(line: 5321, column: 8, scope: !21812)
!21814 = !DILocation(line: 5321, column: 8, scope: !21809)
!21815 = !DILocation(line: 5322, column: 10, scope: !21816)
!21816 = distinct !DILexicalBlock(scope: !21817, file: !3, line: 5322, column: 9)
!21817 = distinct !DILexicalBlock(scope: !21812, file: !3, line: 5321, column: 27)
!21818 = !DILocation(line: 5322, column: 14, scope: !21816)
!21819 = !DILocation(line: 5322, column: 9, scope: !21817)
!21820 = !DILocation(line: 5323, column: 17, scope: !21816)
!21821 = !DILocation(line: 5323, column: 21, scope: !21816)
!21822 = !DILocation(line: 5323, column: 31, scope: !21816)
!21823 = !DILocation(line: 5323, column: 39, scope: !21816)
!21824 = !DILocation(line: 5323, column: 6, scope: !21816)
!21825 = !DILocation(line: 5324, column: 4, scope: !21817)
!21826 = !DILocation(line: 5326, column: 11, scope: !21809)
!21827 = !DILocation(line: 5326, column: 15, scope: !21809)
!21828 = !DILocation(line: 5326, column: 26, scope: !21809)
!21829 = !DILocation(line: 5326, column: 31, scope: !21809)
!21830 = !DILocation(line: 5326, column: 4, scope: !21809)
!21831 = !DILocation(line: 5327, column: 19, scope: !21809)
!21832 = !DILocation(line: 5327, column: 4, scope: !21809)
!21833 = !DILocation(line: 5328, column: 13, scope: !21809)
!21834 = !DILocation(line: 5328, column: 17, scope: !21809)
!21835 = !DILocation(line: 5328, column: 29, scope: !21809)
!21836 = !DILocation(line: 5328, column: 33, scope: !21809)
!21837 = !DILocation(line: 5328, column: 62, scope: !21809)
!21838 = !DILocation(line: 5328, column: 66, scope: !21809)
!21839 = !DILocation(line: 5328, column: 78, scope: !21809)
!21840 = !DILocation(line: 5328, column: 82, scope: !21809)
!21841 = !DILocation(line: 5328, column: 58, scope: !21809)
!21842 = !DILocation(line: 5329, column: 5, scope: !21809)
!21843 = !DILocation(line: 5329, column: 10, scope: !21809)
!21844 = !DILocation(line: 5328, column: 4, scope: !21809)
!21845 = !DILocation(line: 5330, column: 13, scope: !21809)
!21846 = !DILocation(line: 5330, column: 4, scope: !21809)
!21847 = !DILocation(line: 5331, column: 30, scope: !21809)
!21848 = !DILocation(line: 5331, column: 34, scope: !21809)
!21849 = !DILocation(line: 5331, column: 29, scope: !21809)
!21850 = !DILocation(line: 5331, column: 59, scope: !21809)
!21851 = !DILocation(line: 5331, column: 48, scope: !21809)
!21852 = !DILocation(line: 5331, column: 64, scope: !21809)
!21853 = !DILocation(line: 5331, column: 4, scope: !21809)
!21854 = !DILocation(line: 5332, column: 13, scope: !21809)
!21855 = !DILocation(line: 5332, column: 4, scope: !21809)
!21856 = !DILocation(line: 5334, column: 18, scope: !21809)
!21857 = !DILocation(line: 5334, column: 4, scope: !21809)
!21858 = !DILocation(line: 5335, column: 22, scope: !21809)
!21859 = !DILocation(line: 5335, column: 4, scope: !21809)
!21860 = !DILocation(line: 5336, column: 19, scope: !21809)
!21861 = !DILocation(line: 5336, column: 4, scope: !21809)
!21862 = !DILocation(line: 5337, column: 28, scope: !21809)
!21863 = !DILocation(line: 5337, column: 33, scope: !21809)
!21864 = !DILocation(line: 5337, column: 37, scope: !21809)
!21865 = !DILocation(line: 5337, column: 4, scope: !21809)
!21866 = !DILocation(line: 5338, column: 3, scope: !21809)
!21867 = !DILocation(line: 5339, column: 2, scope: !21668)
!21868 = !DILocation(line: 5340, column: 1, scope: !21663)
!21869 = distinct !DISubprogram(name: "nv_get_strings", scope: !3, file: !3, line: 5342, type: !5704, scopeLine: 5343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21870 = !DILocalVariable(name: "dev", arg: 1, scope: !21869, file: !3, line: 5342, type: !290)
!21871 = !DILocation(line: 5342, column: 47, scope: !21869)
!21872 = !DILocalVariable(name: "stringset", arg: 2, scope: !21869, file: !3, line: 5342, type: !987)
!21873 = !DILocation(line: 5342, column: 56, scope: !21869)
!21874 = !DILocalVariable(name: "buffer", arg: 3, scope: !21869, file: !3, line: 5342, type: !793)
!21875 = !DILocation(line: 5342, column: 71, scope: !21869)
!21876 = !DILocation(line: 5344, column: 10, scope: !21869)
!21877 = !DILocation(line: 5344, column: 2, scope: !21869)
!21878 = !DILocation(line: 5346, column: 10, scope: !21879)
!21879 = distinct !DILexicalBlock(scope: !21869, file: !3, line: 5344, column: 21)
!21880 = !DILocation(line: 5346, column: 52, scope: !21879)
!21881 = !DILocation(line: 5346, column: 34, scope: !21879)
!21882 = !DILocation(line: 5346, column: 70, scope: !21879)
!21883 = !DILocation(line: 5346, column: 3, scope: !21879)
!21884 = !DILocation(line: 5347, column: 3, scope: !21879)
!21885 = !DILocation(line: 5349, column: 10, scope: !21879)
!21886 = !DILocation(line: 5349, column: 52, scope: !21879)
!21887 = !DILocation(line: 5349, column: 34, scope: !21879)
!21888 = !DILocation(line: 5349, column: 69, scope: !21879)
!21889 = !DILocation(line: 5349, column: 3, scope: !21879)
!21890 = !DILocation(line: 5350, column: 3, scope: !21879)
!21891 = !DILocation(line: 5352, column: 1, scope: !21869)
!21892 = distinct !DISubprogram(name: "nv_get_ethtool_stats", scope: !3, file: !3, line: 5016, type: !5712, scopeLine: 5020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21893 = !DILocalVariable(name: "dev", arg: 1, scope: !21892, file: !3, line: 5016, type: !290)
!21894 = !DILocation(line: 5016, column: 53, scope: !21892)
!21895 = !DILocalVariable(name: "estats", arg: 2, scope: !21892, file: !3, line: 5017, type: !5714)
!21896 = !DILocation(line: 5017, column: 28, scope: !21892)
!21897 = !DILocalVariable(name: "buffer", arg: 3, scope: !21892, file: !3, line: 5017, type: !5372)
!21898 = !DILocation(line: 5017, column: 41, scope: !21892)
!21899 = !DILocalVariable(name: "np", scope: !21892, file: !3, line: 5021, type: !7446)
!21900 = !DILocation(line: 5021, column: 18, scope: !21892)
!21901 = !DILocation(line: 5021, column: 35, scope: !21892)
!21902 = !DILocation(line: 5021, column: 23, scope: !21892)
!21903 = !DILocation(line: 5023, column: 16, scope: !21892)
!21904 = !DILocation(line: 5023, column: 20, scope: !21892)
!21905 = !DILocation(line: 5023, column: 2, scope: !21892)
!21906 = !DILocation(line: 5024, column: 18, scope: !21892)
!21907 = !DILocation(line: 5024, column: 2, scope: !21892)
!21908 = !DILocation(line: 5025, column: 9, scope: !21892)
!21909 = !DILocation(line: 5025, column: 2, scope: !21892)
!21910 = !DILocation(line: 5025, column: 18, scope: !21892)
!21911 = !DILocation(line: 5025, column: 22, scope: !21892)
!21912 = !DILocation(line: 5026, column: 27, scope: !21892)
!21913 = !DILocation(line: 5026, column: 9, scope: !21892)
!21914 = !DILocation(line: 5026, column: 45, scope: !21892)
!21915 = !DILocation(line: 5027, column: 18, scope: !21892)
!21916 = !DILocation(line: 5027, column: 22, scope: !21892)
!21917 = !DILocation(line: 5027, column: 2, scope: !21892)
!21918 = !DILocation(line: 5028, column: 1, scope: !21892)
!21919 = distinct !DISubprogram(name: "nv_get_sset_count", scope: !3, file: !3, line: 4992, type: !723, scopeLine: 4993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21920 = !DILocalVariable(name: "dev", arg: 1, scope: !21919, file: !3, line: 4992, type: !290)
!21921 = !DILocation(line: 4992, column: 49, scope: !21919)
!21922 = !DILocalVariable(name: "sset", arg: 2, scope: !21919, file: !3, line: 4992, type: !32)
!21923 = !DILocation(line: 4992, column: 58, scope: !21919)
!21924 = !DILocalVariable(name: "np", scope: !21919, file: !3, line: 4994, type: !7446)
!21925 = !DILocation(line: 4994, column: 18, scope: !21919)
!21926 = !DILocation(line: 4994, column: 35, scope: !21919)
!21927 = !DILocation(line: 4994, column: 23, scope: !21919)
!21928 = !DILocation(line: 4996, column: 10, scope: !21919)
!21929 = !DILocation(line: 4996, column: 2, scope: !21919)
!21930 = !DILocation(line: 4998, column: 7, scope: !21931)
!21931 = distinct !DILexicalBlock(scope: !21932, file: !3, line: 4998, column: 7)
!21932 = distinct !DILexicalBlock(scope: !21919, file: !3, line: 4996, column: 16)
!21933 = !DILocation(line: 4998, column: 11, scope: !21931)
!21934 = !DILocation(line: 4998, column: 23, scope: !21931)
!21935 = !DILocation(line: 4998, column: 7, scope: !21932)
!21936 = !DILocation(line: 4999, column: 4, scope: !21931)
!21937 = !DILocation(line: 5001, column: 4, scope: !21931)
!21938 = !DILocation(line: 5003, column: 7, scope: !21939)
!21939 = distinct !DILexicalBlock(scope: !21932, file: !3, line: 5003, column: 7)
!21940 = !DILocation(line: 5003, column: 11, scope: !21939)
!21941 = !DILocation(line: 5003, column: 23, scope: !21939)
!21942 = !DILocation(line: 5003, column: 7, scope: !21932)
!21943 = !DILocation(line: 5004, column: 4, scope: !21939)
!21944 = !DILocation(line: 5005, column: 12, scope: !21945)
!21945 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 5005, column: 12)
!21946 = !DILocation(line: 5005, column: 16, scope: !21945)
!21947 = !DILocation(line: 5005, column: 28, scope: !21945)
!21948 = !DILocation(line: 5005, column: 12, scope: !21939)
!21949 = !DILocation(line: 5006, column: 4, scope: !21945)
!21950 = !DILocation(line: 5007, column: 12, scope: !21951)
!21951 = distinct !DILexicalBlock(scope: !21945, file: !3, line: 5007, column: 12)
!21952 = !DILocation(line: 5007, column: 16, scope: !21951)
!21953 = !DILocation(line: 5007, column: 28, scope: !21951)
!21954 = !DILocation(line: 5007, column: 12, scope: !21945)
!21955 = !DILocation(line: 5008, column: 4, scope: !21951)
!21956 = !DILocation(line: 5010, column: 4, scope: !21951)
!21957 = !DILocation(line: 5012, column: 3, scope: !21932)
!21958 = !DILocation(line: 5014, column: 1, scope: !21919)
!21959 = distinct !DISubprogram(name: "nv_get_link_ksettings", scope: !3, file: !3, line: 4336, type: !5977, scopeLine: 4338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21960 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !21961)
!21961 = distinct !DILocation(line: 4413, column: 2, scope: !21959)
!21962 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !21963)
!21963 = distinct !DILocation(line: 4343, column: 2, scope: !21959)
!21964 = !DILocalVariable(name: "dev", arg: 1, scope: !21959, file: !3, line: 4336, type: !290)
!21965 = !DILocation(line: 4336, column: 53, scope: !21959)
!21966 = !DILocalVariable(name: "cmd", arg: 2, scope: !21959, file: !3, line: 4337, type: !5979)
!21967 = !DILocation(line: 4337, column: 37, scope: !21959)
!21968 = !DILocalVariable(name: "np", scope: !21959, file: !3, line: 4339, type: !7446)
!21969 = !DILocation(line: 4339, column: 18, scope: !21959)
!21970 = !DILocation(line: 4339, column: 35, scope: !21959)
!21971 = !DILocation(line: 4339, column: 23, scope: !21959)
!21972 = !DILocalVariable(name: "speed", scope: !21959, file: !3, line: 4340, type: !987)
!21973 = !DILocation(line: 4340, column: 6, scope: !21959)
!21974 = !DILocalVariable(name: "supported", scope: !21959, file: !3, line: 4340, type: !987)
!21975 = !DILocation(line: 4340, column: 13, scope: !21959)
!21976 = !DILocalVariable(name: "advertising", scope: !21959, file: !3, line: 4340, type: !987)
!21977 = !DILocation(line: 4340, column: 24, scope: !21959)
!21978 = !DILocalVariable(name: "adv", scope: !21959, file: !3, line: 4341, type: !32)
!21979 = !DILocation(line: 4341, column: 6, scope: !21959)
!21980 = !DILocation(line: 4343, column: 17, scope: !21959)
!21981 = !DILocation(line: 4343, column: 21, scope: !21959)
!21982 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !21963)
!21983 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !21963)
!21984 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !21963)
!21985 = !DILocation(line: 4344, column: 2, scope: !21959)
!21986 = !DILocation(line: 4344, column: 7, scope: !21959)
!21987 = !DILocation(line: 4344, column: 12, scope: !21959)
!21988 = !DILocation(line: 4344, column: 17, scope: !21959)
!21989 = !DILocation(line: 4345, column: 21, scope: !21990)
!21990 = distinct !DILexicalBlock(scope: !21959, file: !3, line: 4345, column: 6)
!21991 = !DILocation(line: 4345, column: 7, scope: !21990)
!21992 = !DILocation(line: 4345, column: 6, scope: !21959)
!21993 = !DILocation(line: 4348, column: 27, scope: !21994)
!21994 = distinct !DILexicalBlock(scope: !21995, file: !3, line: 4348, column: 7)
!21995 = distinct !DILexicalBlock(scope: !21990, file: !3, line: 4345, column: 27)
!21996 = !DILocation(line: 4348, column: 7, scope: !21994)
!21997 = !DILocation(line: 4348, column: 7, scope: !21995)
!21998 = !DILocation(line: 4349, column: 21, scope: !21999)
!21999 = distinct !DILexicalBlock(scope: !21994, file: !3, line: 4348, column: 33)
!22000 = !DILocation(line: 4349, column: 4, scope: !21999)
!22001 = !DILocation(line: 4350, column: 3, scope: !21999)
!22002 = !DILocation(line: 4351, column: 22, scope: !22003)
!22003 = distinct !DILexicalBlock(scope: !21994, file: !3, line: 4350, column: 10)
!22004 = !DILocation(line: 4351, column: 4, scope: !22003)
!22005 = !DILocation(line: 4353, column: 2, scope: !21995)
!22006 = !DILocation(line: 4355, column: 23, scope: !22007)
!22007 = distinct !DILexicalBlock(scope: !21959, file: !3, line: 4355, column: 6)
!22008 = !DILocation(line: 4355, column: 6, scope: !22007)
!22009 = !DILocation(line: 4355, column: 6, scope: !21959)
!22010 = !DILocation(line: 4356, column: 11, scope: !22011)
!22011 = distinct !DILexicalBlock(scope: !22007, file: !3, line: 4355, column: 29)
!22012 = !DILocation(line: 4356, column: 15, scope: !22011)
!22013 = !DILocation(line: 4356, column: 25, scope: !22011)
!22014 = !DILocation(line: 4356, column: 3, scope: !22011)
!22015 = !DILocation(line: 4358, column: 10, scope: !22016)
!22016 = distinct !DILexicalBlock(scope: !22011, file: !3, line: 4356, column: 51)
!22017 = !DILocation(line: 4359, column: 4, scope: !22016)
!22018 = !DILocation(line: 4361, column: 10, scope: !22016)
!22019 = !DILocation(line: 4362, column: 4, scope: !22016)
!22020 = !DILocation(line: 4364, column: 10, scope: !22016)
!22021 = !DILocation(line: 4365, column: 4, scope: !22016)
!22022 = !DILocation(line: 4367, column: 10, scope: !22016)
!22023 = !DILocation(line: 4368, column: 4, scope: !22016)
!22024 = !DILocation(line: 4370, column: 3, scope: !22011)
!22025 = !DILocation(line: 4370, column: 8, scope: !22011)
!22026 = !DILocation(line: 4370, column: 13, scope: !22011)
!22027 = !DILocation(line: 4370, column: 20, scope: !22011)
!22028 = !DILocation(line: 4371, column: 7, scope: !22029)
!22029 = distinct !DILexicalBlock(scope: !22011, file: !3, line: 4371, column: 7)
!22030 = !DILocation(line: 4371, column: 11, scope: !22029)
!22031 = !DILocation(line: 4371, column: 7, scope: !22011)
!22032 = !DILocation(line: 4372, column: 4, scope: !22029)
!22033 = !DILocation(line: 4372, column: 9, scope: !22029)
!22034 = !DILocation(line: 4372, column: 14, scope: !22029)
!22035 = !DILocation(line: 4372, column: 21, scope: !22029)
!22036 = !DILocation(line: 4373, column: 2, scope: !22011)
!22037 = !DILocation(line: 4374, column: 9, scope: !22038)
!22038 = distinct !DILexicalBlock(scope: !22007, file: !3, line: 4373, column: 9)
!22039 = !DILocation(line: 4375, column: 3, scope: !22038)
!22040 = !DILocation(line: 4375, column: 8, scope: !22038)
!22041 = !DILocation(line: 4375, column: 13, scope: !22038)
!22042 = !DILocation(line: 4375, column: 20, scope: !22038)
!22043 = !DILocation(line: 4377, column: 20, scope: !21959)
!22044 = !DILocation(line: 4377, column: 2, scope: !21959)
!22045 = !DILocation(line: 4377, column: 7, scope: !21959)
!22046 = !DILocation(line: 4377, column: 12, scope: !21959)
!22047 = !DILocation(line: 4377, column: 18, scope: !21959)
!22048 = !DILocation(line: 4378, column: 22, scope: !21959)
!22049 = !DILocation(line: 4378, column: 26, scope: !21959)
!22050 = !DILocation(line: 4378, column: 2, scope: !21959)
!22051 = !DILocation(line: 4378, column: 7, scope: !21959)
!22052 = !DILocation(line: 4378, column: 12, scope: !21959)
!22053 = !DILocation(line: 4378, column: 20, scope: !21959)
!22054 = !DILocation(line: 4380, column: 14, scope: !21959)
!22055 = !DILocation(line: 4381, column: 6, scope: !22056)
!22056 = distinct !DILexicalBlock(scope: !21959, file: !3, line: 4381, column: 6)
!22057 = !DILocation(line: 4381, column: 10, scope: !22056)
!22058 = !DILocation(line: 4381, column: 6, scope: !21959)
!22059 = !DILocation(line: 4382, column: 15, scope: !22060)
!22060 = distinct !DILexicalBlock(scope: !22056, file: !3, line: 4381, column: 19)
!22061 = !DILocation(line: 4383, column: 16, scope: !22060)
!22062 = !DILocation(line: 4383, column: 21, scope: !22060)
!22063 = !DILocation(line: 4383, column: 25, scope: !22060)
!22064 = !DILocation(line: 4383, column: 9, scope: !22060)
!22065 = !DILocation(line: 4383, column: 7, scope: !22060)
!22066 = !DILocation(line: 4384, column: 7, scope: !22067)
!22067 = distinct !DILexicalBlock(scope: !22060, file: !3, line: 4384, column: 7)
!22068 = !DILocation(line: 4384, column: 11, scope: !22067)
!22069 = !DILocation(line: 4384, column: 7, scope: !22060)
!22070 = !DILocation(line: 4385, column: 16, scope: !22067)
!22071 = !DILocation(line: 4385, column: 4, scope: !22067)
!22072 = !DILocation(line: 4386, column: 7, scope: !22073)
!22073 = distinct !DILexicalBlock(scope: !22060, file: !3, line: 4386, column: 7)
!22074 = !DILocation(line: 4386, column: 11, scope: !22073)
!22075 = !DILocation(line: 4386, column: 7, scope: !22060)
!22076 = !DILocation(line: 4387, column: 16, scope: !22073)
!22077 = !DILocation(line: 4387, column: 4, scope: !22073)
!22078 = !DILocation(line: 4388, column: 7, scope: !22079)
!22079 = distinct !DILexicalBlock(scope: !22060, file: !3, line: 4388, column: 7)
!22080 = !DILocation(line: 4388, column: 11, scope: !22079)
!22081 = !DILocation(line: 4388, column: 7, scope: !22060)
!22082 = !DILocation(line: 4389, column: 16, scope: !22079)
!22083 = !DILocation(line: 4389, column: 4, scope: !22079)
!22084 = !DILocation(line: 4390, column: 7, scope: !22085)
!22085 = distinct !DILexicalBlock(scope: !22060, file: !3, line: 4390, column: 7)
!22086 = !DILocation(line: 4390, column: 11, scope: !22085)
!22087 = !DILocation(line: 4390, column: 7, scope: !22060)
!22088 = !DILocation(line: 4391, column: 16, scope: !22085)
!22089 = !DILocation(line: 4391, column: 4, scope: !22085)
!22090 = !DILocation(line: 4392, column: 7, scope: !22091)
!22091 = distinct !DILexicalBlock(scope: !22060, file: !3, line: 4392, column: 7)
!22092 = !DILocation(line: 4392, column: 11, scope: !22091)
!22093 = !DILocation(line: 4392, column: 19, scope: !22091)
!22094 = !DILocation(line: 4392, column: 7, scope: !22060)
!22095 = !DILocation(line: 4393, column: 17, scope: !22096)
!22096 = distinct !DILexicalBlock(scope: !22091, file: !3, line: 4392, column: 35)
!22097 = !DILocation(line: 4393, column: 22, scope: !22096)
!22098 = !DILocation(line: 4393, column: 26, scope: !22096)
!22099 = !DILocation(line: 4393, column: 10, scope: !22096)
!22100 = !DILocation(line: 4393, column: 8, scope: !22096)
!22101 = !DILocation(line: 4394, column: 8, scope: !22102)
!22102 = distinct !DILexicalBlock(scope: !22096, file: !3, line: 4394, column: 8)
!22103 = !DILocation(line: 4394, column: 12, scope: !22102)
!22104 = !DILocation(line: 4394, column: 8, scope: !22096)
!22105 = !DILocation(line: 4395, column: 17, scope: !22102)
!22106 = !DILocation(line: 4395, column: 5, scope: !22102)
!22107 = !DILocation(line: 4396, column: 3, scope: !22096)
!22108 = !DILocation(line: 4397, column: 2, scope: !22060)
!22109 = !DILocation(line: 4398, column: 12, scope: !21959)
!22110 = !DILocation(line: 4402, column: 6, scope: !22111)
!22111 = distinct !DILexicalBlock(scope: !21959, file: !3, line: 4402, column: 6)
!22112 = !DILocation(line: 4402, column: 10, scope: !22111)
!22113 = !DILocation(line: 4402, column: 18, scope: !22111)
!22114 = !DILocation(line: 4402, column: 6, scope: !21959)
!22115 = !DILocation(line: 4403, column: 13, scope: !22111)
!22116 = !DILocation(line: 4403, column: 3, scope: !22111)
!22117 = !DILocation(line: 4405, column: 26, scope: !21959)
!22118 = !DILocation(line: 4405, column: 30, scope: !21959)
!22119 = !DILocation(line: 4405, column: 2, scope: !21959)
!22120 = !DILocation(line: 4405, column: 7, scope: !21959)
!22121 = !DILocation(line: 4405, column: 12, scope: !21959)
!22122 = !DILocation(line: 4405, column: 24, scope: !21959)
!22123 = !DILocation(line: 4407, column: 42, scope: !21959)
!22124 = !DILocation(line: 4407, column: 47, scope: !21959)
!22125 = !DILocation(line: 4407, column: 58, scope: !21959)
!22126 = !DILocation(line: 4408, column: 7, scope: !21959)
!22127 = !DILocation(line: 4407, column: 2, scope: !21959)
!22128 = !DILocation(line: 4409, column: 42, scope: !21959)
!22129 = !DILocation(line: 4409, column: 47, scope: !21959)
!22130 = !DILocation(line: 4409, column: 58, scope: !21959)
!22131 = !DILocation(line: 4410, column: 7, scope: !21959)
!22132 = !DILocation(line: 4409, column: 2, scope: !21959)
!22133 = !DILocation(line: 4413, column: 19, scope: !21959)
!22134 = !DILocation(line: 4413, column: 23, scope: !21959)
!22135 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !21961)
!22136 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !21961)
!22137 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !21961)
!22138 = !DILocation(line: 4414, column: 2, scope: !21959)
!22139 = distinct !DISubprogram(name: "nv_set_link_ksettings", scope: !3, file: !3, line: 4417, type: !6016, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22140 = !DILocation(line: 407, column: 64, scope: !9884, inlinedAt: !22141)
!22141 = distinct !DILocation(line: 4477, column: 3, scope: !22142)
!22142 = distinct !DILexicalBlock(scope: !22143, file: !3, line: 4459, column: 26)
!22143 = distinct !DILexicalBlock(scope: !22139, file: !3, line: 4459, column: 6)
!22144 = !DILocation(line: 407, column: 84, scope: !9884, inlinedAt: !22141)
!22145 = !DILocation(line: 327, column: 67, scope: !8260, inlinedAt: !22146)
!22146 = distinct !DILocation(line: 4466, column: 3, scope: !22147)
!22147 = distinct !DILexicalBlock(scope: !22148, file: !3, line: 4466, column: 3)
!22148 = distinct !DILexicalBlock(scope: !22149, file: !3, line: 4466, column: 3)
!22149 = distinct !DILexicalBlock(scope: !22150, file: !3, line: 4466, column: 3)
!22150 = distinct !DILexicalBlock(scope: !22151, file: !3, line: 4466, column: 3)
!22151 = distinct !DILexicalBlock(scope: !22142, file: !3, line: 4466, column: 3)
!22152 = !DILocalVariable(name: "dev", arg: 1, scope: !22139, file: !3, line: 4417, type: !290)
!22153 = !DILocation(line: 4417, column: 53, scope: !22139)
!22154 = !DILocalVariable(name: "cmd", arg: 2, scope: !22139, file: !3, line: 4418, type: !6018)
!22155 = !DILocation(line: 4418, column: 43, scope: !22139)
!22156 = !DILocalVariable(name: "np", scope: !22139, file: !3, line: 4420, type: !7446)
!22157 = !DILocation(line: 4420, column: 18, scope: !22139)
!22158 = !DILocation(line: 4420, column: 35, scope: !22139)
!22159 = !DILocation(line: 4420, column: 23, scope: !22139)
!22160 = !DILocalVariable(name: "speed", scope: !22139, file: !3, line: 4421, type: !987)
!22161 = !DILocation(line: 4421, column: 6, scope: !22139)
!22162 = !DILocation(line: 4421, column: 14, scope: !22139)
!22163 = !DILocation(line: 4421, column: 19, scope: !22139)
!22164 = !DILocation(line: 4421, column: 24, scope: !22139)
!22165 = !DILocalVariable(name: "advertising", scope: !22139, file: !3, line: 4422, type: !987)
!22166 = !DILocation(line: 4422, column: 6, scope: !22139)
!22167 = !DILocation(line: 4425, column: 7, scope: !22139)
!22168 = !DILocation(line: 4425, column: 12, scope: !22139)
!22169 = !DILocation(line: 4425, column: 23, scope: !22139)
!22170 = !DILocation(line: 4424, column: 2, scope: !22139)
!22171 = !DILocation(line: 4427, column: 6, scope: !22172)
!22172 = distinct !DILexicalBlock(scope: !22139, file: !3, line: 4427, column: 6)
!22173 = !DILocation(line: 4427, column: 11, scope: !22172)
!22174 = !DILocation(line: 4427, column: 16, scope: !22172)
!22175 = !DILocation(line: 4427, column: 21, scope: !22172)
!22176 = !DILocation(line: 4427, column: 6, scope: !22139)
!22177 = !DILocation(line: 4428, column: 3, scope: !22172)
!22178 = !DILocation(line: 4429, column: 6, scope: !22179)
!22179 = distinct !DILexicalBlock(scope: !22139, file: !3, line: 4429, column: 6)
!22180 = !DILocation(line: 4429, column: 11, scope: !22179)
!22181 = !DILocation(line: 4429, column: 16, scope: !22179)
!22182 = !DILocation(line: 4429, column: 31, scope: !22179)
!22183 = !DILocation(line: 4429, column: 35, scope: !22179)
!22184 = !DILocation(line: 4429, column: 28, scope: !22179)
!22185 = !DILocation(line: 4429, column: 6, scope: !22139)
!22186 = !DILocation(line: 4432, column: 3, scope: !22187)
!22187 = distinct !DILexicalBlock(scope: !22179, file: !3, line: 4429, column: 44)
!22188 = !DILocation(line: 4434, column: 6, scope: !22189)
!22189 = distinct !DILexicalBlock(scope: !22139, file: !3, line: 4434, column: 6)
!22190 = !DILocation(line: 4434, column: 11, scope: !22189)
!22191 = !DILocation(line: 4434, column: 16, scope: !22189)
!22192 = !DILocation(line: 4434, column: 24, scope: !22189)
!22193 = !DILocation(line: 4434, column: 6, scope: !22139)
!22194 = !DILocalVariable(name: "mask", scope: !22195, file: !3, line: 4435, type: !987)
!22195 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 4434, column: 43)
!22196 = !DILocation(line: 4435, column: 7, scope: !22195)
!22197 = !DILocation(line: 4437, column: 8, scope: !22195)
!22198 = !DILocation(line: 4439, column: 7, scope: !22199)
!22199 = distinct !DILexicalBlock(scope: !22195, file: !3, line: 4439, column: 7)
!22200 = !DILocation(line: 4439, column: 11, scope: !22199)
!22201 = !DILocation(line: 4439, column: 19, scope: !22199)
!22202 = !DILocation(line: 4439, column: 7, scope: !22195)
!22203 = !DILocation(line: 4440, column: 9, scope: !22199)
!22204 = !DILocation(line: 4440, column: 4, scope: !22199)
!22205 = !DILocation(line: 4442, column: 8, scope: !22206)
!22206 = distinct !DILexicalBlock(scope: !22195, file: !3, line: 4442, column: 7)
!22207 = !DILocation(line: 4442, column: 22, scope: !22206)
!22208 = !DILocation(line: 4442, column: 20, scope: !22206)
!22209 = !DILocation(line: 4442, column: 28, scope: !22206)
!22210 = !DILocation(line: 4442, column: 7, scope: !22195)
!22211 = !DILocation(line: 4443, column: 4, scope: !22206)
!22212 = !DILocation(line: 4445, column: 2, scope: !22195)
!22213 = !DILocation(line: 4445, column: 13, scope: !22214)
!22214 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 4445, column: 13)
!22215 = !DILocation(line: 4445, column: 18, scope: !22214)
!22216 = !DILocation(line: 4445, column: 23, scope: !22214)
!22217 = !DILocation(line: 4445, column: 31, scope: !22214)
!22218 = !DILocation(line: 4445, column: 13, scope: !22189)
!22219 = !DILocation(line: 4449, column: 7, scope: !22220)
!22220 = distinct !DILexicalBlock(scope: !22221, file: !3, line: 4449, column: 7)
!22221 = distinct !DILexicalBlock(scope: !22214, file: !3, line: 4445, column: 51)
!22222 = !DILocation(line: 4449, column: 13, scope: !22220)
!22223 = !DILocation(line: 4449, column: 25, scope: !22220)
!22224 = !DILocation(line: 4449, column: 28, scope: !22220)
!22225 = !DILocation(line: 4449, column: 34, scope: !22220)
!22226 = !DILocation(line: 4449, column: 7, scope: !22221)
!22227 = !DILocation(line: 4450, column: 4, scope: !22220)
!22228 = !DILocation(line: 4451, column: 7, scope: !22229)
!22229 = distinct !DILexicalBlock(scope: !22221, file: !3, line: 4451, column: 7)
!22230 = !DILocation(line: 4451, column: 12, scope: !22229)
!22231 = !DILocation(line: 4451, column: 17, scope: !22229)
!22232 = !DILocation(line: 4451, column: 24, scope: !22229)
!22233 = !DILocation(line: 4451, column: 39, scope: !22229)
!22234 = !DILocation(line: 4452, column: 7, scope: !22229)
!22235 = !DILocation(line: 4452, column: 12, scope: !22229)
!22236 = !DILocation(line: 4452, column: 17, scope: !22229)
!22237 = !DILocation(line: 4452, column: 24, scope: !22229)
!22238 = !DILocation(line: 4451, column: 7, scope: !22221)
!22239 = !DILocation(line: 4453, column: 4, scope: !22229)
!22240 = !DILocation(line: 4454, column: 2, scope: !22221)
!22241 = !DILocation(line: 4455, column: 3, scope: !22242)
!22242 = distinct !DILexicalBlock(scope: !22214, file: !3, line: 4454, column: 9)
!22243 = !DILocation(line: 4458, column: 20, scope: !22139)
!22244 = !DILocation(line: 4458, column: 2, scope: !22139)
!22245 = !DILocation(line: 4459, column: 20, scope: !22143)
!22246 = !DILocation(line: 4459, column: 6, scope: !22143)
!22247 = !DILocation(line: 4459, column: 6, scope: !22139)
!22248 = !DILocalVariable(name: "flags", scope: !22142, file: !3, line: 4460, type: !312)
!22249 = !DILocation(line: 4460, column: 17, scope: !22142)
!22250 = !DILocation(line: 4462, column: 18, scope: !22142)
!22251 = !DILocation(line: 4462, column: 3, scope: !22142)
!22252 = !DILocation(line: 4463, column: 20, scope: !22142)
!22253 = !DILocation(line: 4463, column: 3, scope: !22142)
!22254 = !DILocation(line: 4464, column: 19, scope: !22142)
!22255 = !DILocation(line: 4464, column: 3, scope: !22142)
!22256 = !DILocation(line: 4466, column: 3, scope: !22142)
!22257 = !DILocation(line: 4466, column: 3, scope: !22151)
!22258 = !DILocalVariable(name: "__dummy", scope: !22259, file: !3, line: 4466, type: !312)
!22259 = distinct !DILexicalBlock(scope: !22150, file: !3, line: 4466, column: 3)
!22260 = !DILocation(line: 4466, column: 3, scope: !22259)
!22261 = !DILocalVariable(name: "__dummy2", scope: !22259, file: !3, line: 4466, type: !312)
!22262 = !DILocation(line: 4466, column: 3, scope: !22150)
!22263 = !DILocation(line: 4466, column: 3, scope: !22149)
!22264 = !DILocation(line: 4466, column: 3, scope: !22265)
!22265 = distinct !DILexicalBlock(scope: !22149, file: !3, line: 4466, column: 3)
!22266 = !DILocalVariable(name: "__dummy", scope: !22267, file: !3, line: 4466, type: !312)
!22267 = distinct !DILexicalBlock(scope: !22268, file: !3, line: 4466, column: 3)
!22268 = distinct !DILexicalBlock(scope: !22265, file: !3, line: 4466, column: 3)
!22269 = !DILocation(line: 4466, column: 3, scope: !22267)
!22270 = !DILocalVariable(name: "__dummy2", scope: !22267, file: !3, line: 4466, type: !312)
!22271 = !DILocation(line: 4466, column: 3, scope: !22268)
!22272 = !DILocation(line: 4466, column: 3, scope: !22148)
!22273 = !{i32 -2139297065}
!22274 = !DILocation(line: 4466, column: 3, scope: !22147)
!22275 = !DILocation(line: 329, column: 10, scope: !8260, inlinedAt: !22146)
!22276 = !DILocation(line: 329, column: 16, scope: !8260, inlinedAt: !22146)
!22277 = !DILocation(line: 4476, column: 16, scope: !22142)
!22278 = !DILocation(line: 4476, column: 3, scope: !22142)
!22279 = !DILocation(line: 4477, column: 27, scope: !22142)
!22280 = !DILocation(line: 4477, column: 31, scope: !22142)
!22281 = !DILocation(line: 4477, column: 37, scope: !22142)
!22282 = !DILocation(line: 409, column: 2, scope: !10023, inlinedAt: !22141)
!22283 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !22141)
!22284 = !DILocation(line: 409, column: 2, scope: !10029, inlinedAt: !22141)
!22285 = !DILocation(line: 409, column: 2, scope: !10036, inlinedAt: !22141)
!22286 = !DILocation(line: 409, column: 2, scope: !10039, inlinedAt: !22141)
!22287 = !DILocation(line: 4478, column: 21, scope: !22142)
!22288 = !DILocation(line: 4478, column: 3, scope: !22142)
!22289 = !DILocation(line: 4479, column: 22, scope: !22142)
!22290 = !DILocation(line: 4479, column: 3, scope: !22142)
!22291 = !DILocation(line: 4480, column: 2, scope: !22142)
!22292 = !DILocation(line: 4482, column: 6, scope: !22293)
!22293 = distinct !DILexicalBlock(scope: !22139, file: !3, line: 4482, column: 6)
!22294 = !DILocation(line: 4482, column: 11, scope: !22293)
!22295 = !DILocation(line: 4482, column: 16, scope: !22293)
!22296 = !DILocation(line: 4482, column: 24, scope: !22293)
!22297 = !DILocation(line: 4482, column: 6, scope: !22139)
!22298 = !DILocalVariable(name: "adv", scope: !22299, file: !3, line: 4483, type: !32)
!22299 = distinct !DILexicalBlock(scope: !22293, file: !3, line: 4482, column: 43)
!22300 = !DILocation(line: 4483, column: 7, scope: !22299)
!22301 = !DILocalVariable(name: "bmcr", scope: !22299, file: !3, line: 4483, type: !32)
!22302 = !DILocation(line: 4483, column: 12, scope: !22299)
!22303 = !DILocation(line: 4485, column: 3, scope: !22299)
!22304 = !DILocation(line: 4485, column: 7, scope: !22299)
!22305 = !DILocation(line: 4485, column: 15, scope: !22299)
!22306 = !DILocation(line: 4488, column: 16, scope: !22299)
!22307 = !DILocation(line: 4488, column: 21, scope: !22299)
!22308 = !DILocation(line: 4488, column: 25, scope: !22299)
!22309 = !DILocation(line: 4488, column: 9, scope: !22299)
!22310 = !DILocation(line: 4488, column: 7, scope: !22299)
!22311 = !DILocation(line: 4489, column: 7, scope: !22299)
!22312 = !DILocation(line: 4490, column: 7, scope: !22313)
!22313 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4490, column: 7)
!22314 = !DILocation(line: 4490, column: 19, scope: !22313)
!22315 = !DILocation(line: 4490, column: 7, scope: !22299)
!22316 = !DILocation(line: 4491, column: 8, scope: !22313)
!22317 = !DILocation(line: 4491, column: 4, scope: !22313)
!22318 = !DILocation(line: 4492, column: 7, scope: !22319)
!22319 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4492, column: 7)
!22320 = !DILocation(line: 4492, column: 19, scope: !22319)
!22321 = !DILocation(line: 4492, column: 7, scope: !22299)
!22322 = !DILocation(line: 4493, column: 8, scope: !22319)
!22323 = !DILocation(line: 4493, column: 4, scope: !22319)
!22324 = !DILocation(line: 4494, column: 7, scope: !22325)
!22325 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4494, column: 7)
!22326 = !DILocation(line: 4494, column: 19, scope: !22325)
!22327 = !DILocation(line: 4494, column: 7, scope: !22299)
!22328 = !DILocation(line: 4495, column: 8, scope: !22325)
!22329 = !DILocation(line: 4495, column: 4, scope: !22325)
!22330 = !DILocation(line: 4496, column: 7, scope: !22331)
!22331 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4496, column: 7)
!22332 = !DILocation(line: 4496, column: 19, scope: !22331)
!22333 = !DILocation(line: 4496, column: 7, scope: !22299)
!22334 = !DILocation(line: 4497, column: 8, scope: !22331)
!22335 = !DILocation(line: 4497, column: 4, scope: !22331)
!22336 = !DILocation(line: 4498, column: 7, scope: !22337)
!22337 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4498, column: 7)
!22338 = !DILocation(line: 4498, column: 11, scope: !22337)
!22339 = !DILocation(line: 4498, column: 23, scope: !22337)
!22340 = !DILocation(line: 4498, column: 7, scope: !22299)
!22341 = !DILocation(line: 4499, column: 8, scope: !22337)
!22342 = !DILocation(line: 4499, column: 4, scope: !22337)
!22343 = !DILocation(line: 4500, column: 7, scope: !22344)
!22344 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4500, column: 7)
!22345 = !DILocation(line: 4500, column: 11, scope: !22344)
!22346 = !DILocation(line: 4500, column: 23, scope: !22344)
!22347 = !DILocation(line: 4500, column: 7, scope: !22299)
!22348 = !DILocation(line: 4501, column: 8, scope: !22344)
!22349 = !DILocation(line: 4501, column: 4, scope: !22344)
!22350 = !DILocation(line: 4502, column: 10, scope: !22299)
!22351 = !DILocation(line: 4502, column: 15, scope: !22299)
!22352 = !DILocation(line: 4502, column: 19, scope: !22299)
!22353 = !DILocation(line: 4502, column: 43, scope: !22299)
!22354 = !DILocation(line: 4502, column: 3, scope: !22299)
!22355 = !DILocation(line: 4504, column: 7, scope: !22356)
!22356 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4504, column: 7)
!22357 = !DILocation(line: 4504, column: 11, scope: !22356)
!22358 = !DILocation(line: 4504, column: 19, scope: !22356)
!22359 = !DILocation(line: 4504, column: 7, scope: !22299)
!22360 = !DILocation(line: 4505, column: 17, scope: !22361)
!22361 = distinct !DILexicalBlock(scope: !22356, file: !3, line: 4504, column: 35)
!22362 = !DILocation(line: 4505, column: 22, scope: !22361)
!22363 = !DILocation(line: 4505, column: 26, scope: !22361)
!22364 = !DILocation(line: 4505, column: 10, scope: !22361)
!22365 = !DILocation(line: 4505, column: 8, scope: !22361)
!22366 = !DILocation(line: 4506, column: 8, scope: !22361)
!22367 = !DILocation(line: 4507, column: 8, scope: !22368)
!22368 = distinct !DILexicalBlock(scope: !22361, file: !3, line: 4507, column: 8)
!22369 = !DILocation(line: 4507, column: 20, scope: !22368)
!22370 = !DILocation(line: 4507, column: 8, scope: !22361)
!22371 = !DILocation(line: 4508, column: 9, scope: !22368)
!22372 = !DILocation(line: 4508, column: 5, scope: !22368)
!22373 = !DILocation(line: 4509, column: 11, scope: !22361)
!22374 = !DILocation(line: 4509, column: 16, scope: !22361)
!22375 = !DILocation(line: 4509, column: 20, scope: !22361)
!22376 = !DILocation(line: 4509, column: 43, scope: !22361)
!22377 = !DILocation(line: 4509, column: 4, scope: !22361)
!22378 = !DILocation(line: 4510, column: 3, scope: !22361)
!22379 = !DILocation(line: 4512, column: 21, scope: !22380)
!22380 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4512, column: 7)
!22381 = !DILocation(line: 4512, column: 7, scope: !22380)
!22382 = !DILocation(line: 4512, column: 7, scope: !22299)
!22383 = !DILocation(line: 4513, column: 16, scope: !22380)
!22384 = !DILocation(line: 4513, column: 4, scope: !22380)
!22385 = !DILocation(line: 4514, column: 17, scope: !22299)
!22386 = !DILocation(line: 4514, column: 22, scope: !22299)
!22387 = !DILocation(line: 4514, column: 26, scope: !22299)
!22388 = !DILocation(line: 4514, column: 10, scope: !22299)
!22389 = !DILocation(line: 4514, column: 8, scope: !22299)
!22390 = !DILocation(line: 4515, column: 7, scope: !22391)
!22391 = distinct !DILexicalBlock(scope: !22299, file: !3, line: 4515, column: 7)
!22392 = !DILocation(line: 4515, column: 11, scope: !22391)
!22393 = !DILocation(line: 4515, column: 21, scope: !22391)
!22394 = !DILocation(line: 4515, column: 7, scope: !22299)
!22395 = !DILocation(line: 4516, column: 9, scope: !22396)
!22396 = distinct !DILexicalBlock(scope: !22391, file: !3, line: 4515, column: 49)
!22397 = !DILocation(line: 4519, column: 18, scope: !22398)
!22398 = distinct !DILexicalBlock(scope: !22396, file: !3, line: 4519, column: 8)
!22399 = !DILocation(line: 4519, column: 23, scope: !22398)
!22400 = !DILocation(line: 4519, column: 8, scope: !22398)
!22401 = !DILocation(line: 4519, column: 8, scope: !22396)
!22402 = !DILocation(line: 4520, column: 17, scope: !22403)
!22403 = distinct !DILexicalBlock(scope: !22398, file: !3, line: 4519, column: 30)
!22404 = !DILocation(line: 4520, column: 5, scope: !22403)
!22405 = !DILocation(line: 4521, column: 5, scope: !22403)
!22406 = !DILocation(line: 4523, column: 3, scope: !22396)
!22407 = !DILocation(line: 4524, column: 9, scope: !22408)
!22408 = distinct !DILexicalBlock(scope: !22391, file: !3, line: 4523, column: 10)
!22409 = !DILocation(line: 4525, column: 11, scope: !22408)
!22410 = !DILocation(line: 4525, column: 16, scope: !22408)
!22411 = !DILocation(line: 4525, column: 20, scope: !22408)
!22412 = !DILocation(line: 4525, column: 39, scope: !22408)
!22413 = !DILocation(line: 4525, column: 4, scope: !22408)
!22414 = !DILocation(line: 4527, column: 2, scope: !22299)
!22415 = !DILocalVariable(name: "adv", scope: !22416, file: !3, line: 4528, type: !32)
!22416 = distinct !DILexicalBlock(scope: !22293, file: !3, line: 4527, column: 9)
!22417 = !DILocation(line: 4528, column: 7, scope: !22416)
!22418 = !DILocalVariable(name: "bmcr", scope: !22416, file: !3, line: 4528, type: !32)
!22419 = !DILocation(line: 4528, column: 12, scope: !22416)
!22420 = !DILocation(line: 4530, column: 3, scope: !22416)
!22421 = !DILocation(line: 4530, column: 7, scope: !22416)
!22422 = !DILocation(line: 4530, column: 15, scope: !22416)
!22423 = !DILocation(line: 4532, column: 16, scope: !22416)
!22424 = !DILocation(line: 4532, column: 21, scope: !22416)
!22425 = !DILocation(line: 4532, column: 25, scope: !22416)
!22426 = !DILocation(line: 4532, column: 9, scope: !22416)
!22427 = !DILocation(line: 4532, column: 7, scope: !22416)
!22428 = !DILocation(line: 4533, column: 7, scope: !22416)
!22429 = !DILocation(line: 4534, column: 7, scope: !22430)
!22430 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4534, column: 7)
!22431 = !DILocation(line: 4534, column: 13, scope: !22430)
!22432 = !DILocation(line: 4534, column: 25, scope: !22430)
!22433 = !DILocation(line: 4534, column: 28, scope: !22430)
!22434 = !DILocation(line: 4534, column: 33, scope: !22430)
!22435 = !DILocation(line: 4534, column: 38, scope: !22430)
!22436 = !DILocation(line: 4534, column: 45, scope: !22430)
!22437 = !DILocation(line: 4534, column: 7, scope: !22416)
!22438 = !DILocation(line: 4535, column: 8, scope: !22430)
!22439 = !DILocation(line: 4535, column: 4, scope: !22430)
!22440 = !DILocation(line: 4536, column: 7, scope: !22441)
!22441 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4536, column: 7)
!22442 = !DILocation(line: 4536, column: 13, scope: !22441)
!22443 = !DILocation(line: 4536, column: 25, scope: !22441)
!22444 = !DILocation(line: 4536, column: 28, scope: !22441)
!22445 = !DILocation(line: 4536, column: 33, scope: !22441)
!22446 = !DILocation(line: 4536, column: 38, scope: !22441)
!22447 = !DILocation(line: 4536, column: 45, scope: !22441)
!22448 = !DILocation(line: 4536, column: 7, scope: !22416)
!22449 = !DILocation(line: 4537, column: 8, scope: !22441)
!22450 = !DILocation(line: 4537, column: 4, scope: !22441)
!22451 = !DILocation(line: 4538, column: 7, scope: !22452)
!22452 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4538, column: 7)
!22453 = !DILocation(line: 4538, column: 13, scope: !22452)
!22454 = !DILocation(line: 4538, column: 26, scope: !22452)
!22455 = !DILocation(line: 4538, column: 29, scope: !22452)
!22456 = !DILocation(line: 4538, column: 34, scope: !22452)
!22457 = !DILocation(line: 4538, column: 39, scope: !22452)
!22458 = !DILocation(line: 4538, column: 46, scope: !22452)
!22459 = !DILocation(line: 4538, column: 7, scope: !22416)
!22460 = !DILocation(line: 4539, column: 8, scope: !22452)
!22461 = !DILocation(line: 4539, column: 4, scope: !22452)
!22462 = !DILocation(line: 4540, column: 7, scope: !22463)
!22463 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4540, column: 7)
!22464 = !DILocation(line: 4540, column: 13, scope: !22463)
!22465 = !DILocation(line: 4540, column: 26, scope: !22463)
!22466 = !DILocation(line: 4540, column: 29, scope: !22463)
!22467 = !DILocation(line: 4540, column: 34, scope: !22463)
!22468 = !DILocation(line: 4540, column: 39, scope: !22463)
!22469 = !DILocation(line: 4540, column: 46, scope: !22463)
!22470 = !DILocation(line: 4540, column: 7, scope: !22416)
!22471 = !DILocation(line: 4541, column: 8, scope: !22463)
!22472 = !DILocation(line: 4541, column: 4, scope: !22463)
!22473 = !DILocation(line: 4542, column: 3, scope: !22416)
!22474 = !DILocation(line: 4542, column: 7, scope: !22416)
!22475 = !DILocation(line: 4542, column: 19, scope: !22416)
!22476 = !DILocation(line: 4543, column: 7, scope: !22477)
!22477 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4543, column: 7)
!22478 = !DILocation(line: 4543, column: 11, scope: !22477)
!22479 = !DILocation(line: 4543, column: 23, scope: !22477)
!22480 = !DILocation(line: 4543, column: 7, scope: !22416)
!22481 = !DILocation(line: 4544, column: 8, scope: !22482)
!22482 = distinct !DILexicalBlock(scope: !22477, file: !3, line: 4543, column: 47)
!22483 = !DILocation(line: 4545, column: 4, scope: !22482)
!22484 = !DILocation(line: 4545, column: 8, scope: !22482)
!22485 = !DILocation(line: 4545, column: 20, scope: !22482)
!22486 = !DILocation(line: 4546, column: 3, scope: !22482)
!22487 = !DILocation(line: 4547, column: 7, scope: !22488)
!22488 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4547, column: 7)
!22489 = !DILocation(line: 4547, column: 11, scope: !22488)
!22490 = !DILocation(line: 4547, column: 23, scope: !22488)
!22491 = !DILocation(line: 4547, column: 7, scope: !22416)
!22492 = !DILocation(line: 4548, column: 8, scope: !22493)
!22493 = distinct !DILexicalBlock(scope: !22488, file: !3, line: 4547, column: 47)
!22494 = !DILocation(line: 4549, column: 4, scope: !22493)
!22495 = !DILocation(line: 4549, column: 8, scope: !22493)
!22496 = !DILocation(line: 4549, column: 20, scope: !22493)
!22497 = !DILocation(line: 4550, column: 3, scope: !22493)
!22498 = !DILocation(line: 4551, column: 10, scope: !22416)
!22499 = !DILocation(line: 4551, column: 15, scope: !22416)
!22500 = !DILocation(line: 4551, column: 19, scope: !22416)
!22501 = !DILocation(line: 4551, column: 43, scope: !22416)
!22502 = !DILocation(line: 4551, column: 3, scope: !22416)
!22503 = !DILocation(line: 4552, column: 20, scope: !22416)
!22504 = !DILocation(line: 4552, column: 3, scope: !22416)
!22505 = !DILocation(line: 4552, column: 7, scope: !22416)
!22506 = !DILocation(line: 4552, column: 18, scope: !22416)
!22507 = !DILocation(line: 4554, column: 7, scope: !22508)
!22508 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4554, column: 7)
!22509 = !DILocation(line: 4554, column: 11, scope: !22508)
!22510 = !DILocation(line: 4554, column: 19, scope: !22508)
!22511 = !DILocation(line: 4554, column: 7, scope: !22416)
!22512 = !DILocation(line: 4555, column: 17, scope: !22513)
!22513 = distinct !DILexicalBlock(scope: !22508, file: !3, line: 4554, column: 35)
!22514 = !DILocation(line: 4555, column: 22, scope: !22513)
!22515 = !DILocation(line: 4555, column: 26, scope: !22513)
!22516 = !DILocation(line: 4555, column: 10, scope: !22513)
!22517 = !DILocation(line: 4555, column: 8, scope: !22513)
!22518 = !DILocation(line: 4556, column: 8, scope: !22513)
!22519 = !DILocation(line: 4557, column: 11, scope: !22513)
!22520 = !DILocation(line: 4557, column: 16, scope: !22513)
!22521 = !DILocation(line: 4557, column: 20, scope: !22513)
!22522 = !DILocation(line: 4557, column: 43, scope: !22513)
!22523 = !DILocation(line: 4557, column: 4, scope: !22513)
!22524 = !DILocation(line: 4558, column: 3, scope: !22513)
!22525 = !DILocation(line: 4560, column: 17, scope: !22416)
!22526 = !DILocation(line: 4560, column: 22, scope: !22416)
!22527 = !DILocation(line: 4560, column: 26, scope: !22416)
!22528 = !DILocation(line: 4560, column: 10, scope: !22416)
!22529 = !DILocation(line: 4560, column: 8, scope: !22416)
!22530 = !DILocation(line: 4561, column: 8, scope: !22416)
!22531 = !DILocation(line: 4562, column: 7, scope: !22532)
!22532 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4562, column: 7)
!22533 = !DILocation(line: 4562, column: 11, scope: !22532)
!22534 = !DILocation(line: 4562, column: 22, scope: !22532)
!22535 = !DILocation(line: 4562, column: 7, scope: !22416)
!22536 = !DILocation(line: 4563, column: 9, scope: !22532)
!22537 = !DILocation(line: 4563, column: 4, scope: !22532)
!22538 = !DILocation(line: 4564, column: 7, scope: !22539)
!22539 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4564, column: 7)
!22540 = !DILocation(line: 4564, column: 11, scope: !22539)
!22541 = !DILocation(line: 4564, column: 22, scope: !22539)
!22542 = !DILocation(line: 4564, column: 7, scope: !22416)
!22543 = !DILocation(line: 4565, column: 9, scope: !22539)
!22544 = !DILocation(line: 4565, column: 4, scope: !22539)
!22545 = !DILocation(line: 4566, column: 7, scope: !22546)
!22546 = distinct !DILexicalBlock(scope: !22416, file: !3, line: 4566, column: 7)
!22547 = !DILocation(line: 4566, column: 11, scope: !22546)
!22548 = !DILocation(line: 4566, column: 19, scope: !22546)
!22549 = !DILocation(line: 4566, column: 7, scope: !22416)
!22550 = !DILocation(line: 4568, column: 18, scope: !22551)
!22551 = distinct !DILexicalBlock(scope: !22552, file: !3, line: 4568, column: 8)
!22552 = distinct !DILexicalBlock(scope: !22546, file: !3, line: 4566, column: 39)
!22553 = !DILocation(line: 4568, column: 23, scope: !22551)
!22554 = !DILocation(line: 4568, column: 8, scope: !22551)
!22555 = !DILocation(line: 4568, column: 8, scope: !22552)
!22556 = !DILocation(line: 4569, column: 17, scope: !22557)
!22557 = distinct !DILexicalBlock(scope: !22551, file: !3, line: 4568, column: 30)
!22558 = !DILocation(line: 4569, column: 5, scope: !22557)
!22559 = !DILocation(line: 4570, column: 5, scope: !22557)
!22560 = !DILocation(line: 4572, column: 3, scope: !22552)
!22561 = !DILocation(line: 4573, column: 11, scope: !22562)
!22562 = distinct !DILexicalBlock(scope: !22546, file: !3, line: 4572, column: 10)
!22563 = !DILocation(line: 4573, column: 16, scope: !22562)
!22564 = !DILocation(line: 4573, column: 20, scope: !22562)
!22565 = !DILocation(line: 4573, column: 39, scope: !22562)
!22566 = !DILocation(line: 4573, column: 4, scope: !22562)
!22567 = !DILocation(line: 4574, column: 22, scope: !22568)
!22568 = distinct !DILexicalBlock(scope: !22562, file: !3, line: 4574, column: 8)
!22569 = !DILocation(line: 4574, column: 8, scope: !22568)
!22570 = !DILocation(line: 4574, column: 8, scope: !22562)
!22571 = !DILocation(line: 4576, column: 5, scope: !22572)
!22572 = distinct !DILexicalBlock(scope: !22573, file: !3, line: 4576, column: 5)
!22573 = distinct !DILexicalBlock(scope: !22574, file: !3, line: 4576, column: 5)
!22574 = distinct !DILexicalBlock(scope: !22575, file: !3, line: 4576, column: 5)
!22575 = distinct !DILexicalBlock(scope: !22576, file: !3, line: 4576, column: 5)
!22576 = distinct !DILexicalBlock(scope: !22568, file: !3, line: 4574, column: 28)
!22577 = !DILocation(line: 4577, column: 19, scope: !22576)
!22578 = !DILocation(line: 4577, column: 5, scope: !22576)
!22579 = !DILocation(line: 4578, column: 4, scope: !22576)
!22580 = !DILocation(line: 4582, column: 20, scope: !22581)
!22581 = distinct !DILexicalBlock(scope: !22139, file: !3, line: 4582, column: 6)
!22582 = !DILocation(line: 4582, column: 6, scope: !22581)
!22583 = !DILocation(line: 4582, column: 6, scope: !22139)
!22584 = !DILocation(line: 4583, column: 17, scope: !22585)
!22585 = distinct !DILexicalBlock(scope: !22581, file: !3, line: 4582, column: 26)
!22586 = !DILocation(line: 4583, column: 3, scope: !22585)
!22587 = !DILocation(line: 4584, column: 17, scope: !22585)
!22588 = !DILocation(line: 4584, column: 3, scope: !22585)
!22589 = !DILocation(line: 4585, column: 2, scope: !22585)
!22590 = !DILocation(line: 4587, column: 2, scope: !22139)
!22591 = !DILocation(line: 4588, column: 1, scope: !22139)
!22592 = distinct !DISubprogram(name: "pci_name", scope: !7053, file: !7053, line: 1875, type: !22593, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22593 = !DISubroutineType(types: !22594)
!22594 = !{!292, !22595}
!22595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22596, size: 64)
!22596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7532)
!22597 = !DILocalVariable(name: "pdev", arg: 1, scope: !22592, file: !7053, line: 1875, type: !22595)
!22598 = !DILocation(line: 1875, column: 58, scope: !22592)
!22599 = !DILocation(line: 1877, column: 19, scope: !22592)
!22600 = !DILocation(line: 1877, column: 25, scope: !22592)
!22601 = !DILocation(line: 1877, column: 9, scope: !22592)
!22602 = !DILocation(line: 1877, column: 2, scope: !22592)
!22603 = distinct !DISubprogram(name: "phy_reset", scope: !3, file: !3, line: 1179, type: !5725, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22604 = !DILocalVariable(name: "dev", arg: 1, scope: !22603, file: !3, line: 1179, type: !290)
!22605 = !DILocation(line: 1179, column: 41, scope: !22603)
!22606 = !DILocalVariable(name: "bmcr_setup", arg: 2, scope: !22603, file: !3, line: 1179, type: !987)
!22607 = !DILocation(line: 1179, column: 50, scope: !22603)
!22608 = !DILocalVariable(name: "np", scope: !22603, file: !3, line: 1181, type: !7446)
!22609 = !DILocation(line: 1181, column: 18, scope: !22603)
!22610 = !DILocation(line: 1181, column: 35, scope: !22603)
!22611 = !DILocation(line: 1181, column: 23, scope: !22603)
!22612 = !DILocalVariable(name: "miicontrol", scope: !22603, file: !3, line: 1182, type: !987)
!22613 = !DILocation(line: 1182, column: 6, scope: !22603)
!22614 = !DILocalVariable(name: "tries", scope: !22603, file: !3, line: 1183, type: !7)
!22615 = !DILocation(line: 1183, column: 15, scope: !22603)
!22616 = !DILocation(line: 1185, column: 28, scope: !22603)
!22617 = !DILocation(line: 1185, column: 26, scope: !22603)
!22618 = !DILocation(line: 1185, column: 13, scope: !22603)
!22619 = !DILocation(line: 1186, column: 13, scope: !22620)
!22620 = distinct !DILexicalBlock(scope: !22603, file: !3, line: 1186, column: 6)
!22621 = !DILocation(line: 1186, column: 18, scope: !22620)
!22622 = !DILocation(line: 1186, column: 22, scope: !22620)
!22623 = !DILocation(line: 1186, column: 41, scope: !22620)
!22624 = !DILocation(line: 1186, column: 6, scope: !22620)
!22625 = !DILocation(line: 1186, column: 6, scope: !22603)
!22626 = !DILocation(line: 1187, column: 3, scope: !22620)
!22627 = !DILocation(line: 1190, column: 2, scope: !22603)
!22628 = !DILocation(line: 1193, column: 2, scope: !22603)
!22629 = !DILocation(line: 1193, column: 9, scope: !22603)
!22630 = !DILocation(line: 1193, column: 20, scope: !22603)
!22631 = !DILocation(line: 1194, column: 3, scope: !22632)
!22632 = distinct !DILexicalBlock(scope: !22603, file: !3, line: 1193, column: 34)
!22633 = !DILocation(line: 1195, column: 23, scope: !22632)
!22634 = !DILocation(line: 1195, column: 28, scope: !22632)
!22635 = !DILocation(line: 1195, column: 32, scope: !22632)
!22636 = !DILocation(line: 1195, column: 16, scope: !22632)
!22637 = !DILocation(line: 1195, column: 14, scope: !22632)
!22638 = !DILocation(line: 1197, column: 12, scope: !22639)
!22639 = distinct !DILexicalBlock(scope: !22632, file: !3, line: 1197, column: 7)
!22640 = !DILocation(line: 1197, column: 15, scope: !22639)
!22641 = !DILocation(line: 1197, column: 7, scope: !22632)
!22642 = !DILocation(line: 1198, column: 4, scope: !22639)
!22643 = distinct !{!22643, !22628, !22644}
!22644 = !DILocation(line: 1199, column: 2, scope: !22603)
!22645 = !DILocation(line: 1200, column: 2, scope: !22603)
!22646 = !DILocation(line: 1201, column: 1, scope: !22603)
!22647 = distinct !DISubprogram(name: "dma_free_coherent", scope: !8177, file: !8177, line: 400, type: !22648, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22648 = !DISubroutineType(types: !22649)
!22649 = !{null, !6545, !1039, !591, !2036}
!22650 = !DILocalVariable(name: "dev", arg: 1, scope: !22647, file: !8177, line: 400, type: !6545)
!22651 = !DILocation(line: 400, column: 53, scope: !22647)
!22652 = !DILocalVariable(name: "size", arg: 2, scope: !22647, file: !8177, line: 400, type: !1039)
!22653 = !DILocation(line: 400, column: 65, scope: !22647)
!22654 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !22647, file: !8177, line: 401, type: !591)
!22655 = !DILocation(line: 401, column: 9, scope: !22647)
!22656 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !22647, file: !8177, line: 401, type: !2036)
!22657 = !DILocation(line: 401, column: 30, scope: !22647)
!22658 = !DILocation(line: 403, column: 24, scope: !22647)
!22659 = !DILocation(line: 403, column: 29, scope: !22647)
!22660 = !DILocation(line: 403, column: 35, scope: !22647)
!22661 = !DILocation(line: 403, column: 45, scope: !22647)
!22662 = !DILocation(line: 403, column: 9, scope: !22647)
!22663 = !DILocation(line: 403, column: 2, scope: !22647)
!22664 = distinct !DISubprogram(name: "nv_link_test", scope: !3, file: !3, line: 5030, type: !402, scopeLine: 5031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22665 = !DILocalVariable(name: "dev", arg: 1, scope: !22664, file: !3, line: 5030, type: !290)
!22666 = !DILocation(line: 5030, column: 44, scope: !22664)
!22667 = !DILocalVariable(name: "np", scope: !22664, file: !3, line: 5032, type: !7446)
!22668 = !DILocation(line: 5032, column: 18, scope: !22664)
!22669 = !DILocation(line: 5032, column: 35, scope: !22664)
!22670 = !DILocation(line: 5032, column: 23, scope: !22664)
!22671 = !DILocalVariable(name: "mii_status", scope: !22664, file: !3, line: 5033, type: !32)
!22672 = !DILocation(line: 5033, column: 6, scope: !22664)
!22673 = !DILocation(line: 5035, column: 9, scope: !22664)
!22674 = !DILocation(line: 5035, column: 14, scope: !22664)
!22675 = !DILocation(line: 5035, column: 18, scope: !22664)
!22676 = !DILocation(line: 5035, column: 2, scope: !22664)
!22677 = !DILocation(line: 5036, column: 22, scope: !22664)
!22678 = !DILocation(line: 5036, column: 27, scope: !22664)
!22679 = !DILocation(line: 5036, column: 31, scope: !22664)
!22680 = !DILocation(line: 5036, column: 15, scope: !22664)
!22681 = !DILocation(line: 5036, column: 13, scope: !22664)
!22682 = !DILocation(line: 5039, column: 8, scope: !22683)
!22683 = distinct !DILexicalBlock(scope: !22664, file: !3, line: 5039, column: 6)
!22684 = !DILocation(line: 5039, column: 19, scope: !22683)
!22685 = !DILocation(line: 5039, column: 6, scope: !22664)
!22686 = !DILocation(line: 5040, column: 3, scope: !22683)
!22687 = !DILocation(line: 5042, column: 3, scope: !22683)
!22688 = !DILocation(line: 5043, column: 1, scope: !22664)
!22689 = distinct !DISubprogram(name: "nv_register_test", scope: !3, file: !3, line: 5045, type: !402, scopeLine: 5046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22690 = !DILocalVariable(name: "dev", arg: 1, scope: !22689, file: !3, line: 5045, type: !290)
!22691 = !DILocation(line: 5045, column: 48, scope: !22689)
!22692 = !DILocalVariable(name: "base", scope: !22689, file: !3, line: 5047, type: !793)
!22693 = !DILocation(line: 5047, column: 14, scope: !22689)
!22694 = !DILocation(line: 5047, column: 32, scope: !22689)
!22695 = !DILocation(line: 5047, column: 21, scope: !22689)
!22696 = !DILocalVariable(name: "i", scope: !22689, file: !3, line: 5048, type: !32)
!22697 = !DILocation(line: 5048, column: 6, scope: !22689)
!22698 = !DILocalVariable(name: "orig_read", scope: !22689, file: !3, line: 5049, type: !987)
!22699 = !DILocation(line: 5049, column: 6, scope: !22689)
!22700 = !DILocalVariable(name: "new_read", scope: !22689, file: !3, line: 5049, type: !987)
!22701 = !DILocation(line: 5049, column: 17, scope: !22689)
!22702 = !DILocation(line: 5051, column: 2, scope: !22689)
!22703 = !DILocation(line: 5052, column: 21, scope: !22704)
!22704 = distinct !DILexicalBlock(scope: !22689, file: !3, line: 5051, column: 5)
!22705 = !DILocation(line: 5052, column: 46, scope: !22704)
!22706 = !DILocation(line: 5052, column: 28, scope: !22704)
!22707 = !DILocation(line: 5052, column: 49, scope: !22704)
!22708 = !DILocation(line: 5052, column: 26, scope: !22704)
!22709 = !DILocation(line: 5052, column: 15, scope: !22704)
!22710 = !DILocation(line: 5052, column: 13, scope: !22704)
!22711 = !DILocation(line: 5055, column: 34, scope: !22704)
!22712 = !DILocation(line: 5055, column: 16, scope: !22704)
!22713 = !DILocation(line: 5055, column: 37, scope: !22704)
!22714 = !DILocation(line: 5055, column: 13, scope: !22704)
!22715 = !DILocation(line: 5057, column: 10, scope: !22704)
!22716 = !DILocation(line: 5057, column: 21, scope: !22704)
!22717 = !DILocation(line: 5057, column: 46, scope: !22704)
!22718 = !DILocation(line: 5057, column: 28, scope: !22704)
!22719 = !DILocation(line: 5057, column: 49, scope: !22704)
!22720 = !DILocation(line: 5057, column: 26, scope: !22704)
!22721 = !DILocation(line: 5057, column: 3, scope: !22704)
!22722 = !DILocation(line: 5059, column: 20, scope: !22704)
!22723 = !DILocation(line: 5059, column: 45, scope: !22704)
!22724 = !DILocation(line: 5059, column: 27, scope: !22704)
!22725 = !DILocation(line: 5059, column: 48, scope: !22704)
!22726 = !DILocation(line: 5059, column: 25, scope: !22704)
!22727 = !DILocation(line: 5059, column: 14, scope: !22704)
!22728 = !DILocation(line: 5059, column: 12, scope: !22704)
!22729 = !DILocation(line: 5061, column: 8, scope: !22730)
!22730 = distinct !DILexicalBlock(scope: !22704, file: !3, line: 5061, column: 7)
!22731 = !DILocation(line: 5061, column: 37, scope: !22730)
!22732 = !DILocation(line: 5061, column: 19, scope: !22730)
!22733 = !DILocation(line: 5061, column: 40, scope: !22730)
!22734 = !DILocation(line: 5061, column: 17, scope: !22730)
!22735 = !DILocation(line: 5061, column: 50, scope: !22730)
!22736 = !DILocation(line: 5061, column: 80, scope: !22730)
!22737 = !DILocation(line: 5061, column: 62, scope: !22730)
!22738 = !DILocation(line: 5061, column: 83, scope: !22730)
!22739 = !DILocation(line: 5061, column: 60, scope: !22730)
!22740 = !DILocation(line: 5061, column: 46, scope: !22730)
!22741 = !DILocation(line: 5061, column: 7, scope: !22704)
!22742 = !DILocation(line: 5062, column: 4, scope: !22730)
!22743 = !DILocation(line: 5065, column: 34, scope: !22704)
!22744 = !DILocation(line: 5065, column: 16, scope: !22704)
!22745 = !DILocation(line: 5065, column: 37, scope: !22704)
!22746 = !DILocation(line: 5065, column: 13, scope: !22704)
!22747 = !DILocation(line: 5066, column: 10, scope: !22704)
!22748 = !DILocation(line: 5066, column: 21, scope: !22704)
!22749 = !DILocation(line: 5066, column: 46, scope: !22704)
!22750 = !DILocation(line: 5066, column: 28, scope: !22704)
!22751 = !DILocation(line: 5066, column: 49, scope: !22704)
!22752 = !DILocation(line: 5066, column: 26, scope: !22704)
!22753 = !DILocation(line: 5066, column: 3, scope: !22704)
!22754 = !DILocation(line: 5068, column: 2, scope: !22704)
!22755 = !DILocation(line: 5068, column: 29, scope: !22689)
!22756 = !DILocation(line: 5068, column: 11, scope: !22689)
!22757 = !DILocation(line: 5068, column: 34, scope: !22689)
!22758 = !DILocation(line: 5068, column: 38, scope: !22689)
!22759 = distinct !{!22759, !22702, !22760}
!22760 = !DILocation(line: 5068, column: 42, scope: !22689)
!22761 = !DILocation(line: 5070, column: 2, scope: !22689)
!22762 = !DILocation(line: 5071, column: 1, scope: !22689)
!22763 = distinct !DISubprogram(name: "nv_interrupt_test", scope: !3, file: !3, line: 5073, type: !402, scopeLine: 5074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22764 = !DILocation(line: 402, column: 57, scope: !8242, inlinedAt: !22765)
!22765 = distinct !DILocation(line: 5119, column: 2, scope: !22763)
!22766 = !DILocation(line: 377, column: 55, scope: !8252, inlinedAt: !22767)
!22767 = distinct !DILocation(line: 5106, column: 2, scope: !22763)
!22768 = !DILocalVariable(name: "dev", arg: 1, scope: !22763, file: !3, line: 5073, type: !290)
!22769 = !DILocation(line: 5073, column: 49, scope: !22763)
!22770 = !DILocalVariable(name: "np", scope: !22763, file: !3, line: 5075, type: !7446)
!22771 = !DILocation(line: 5075, column: 18, scope: !22763)
!22772 = !DILocation(line: 5075, column: 35, scope: !22763)
!22773 = !DILocation(line: 5075, column: 23, scope: !22763)
!22774 = !DILocalVariable(name: "base", scope: !22763, file: !3, line: 5076, type: !793)
!22775 = !DILocation(line: 5076, column: 14, scope: !22763)
!22776 = !DILocation(line: 5076, column: 32, scope: !22763)
!22777 = !DILocation(line: 5076, column: 21, scope: !22763)
!22778 = !DILocalVariable(name: "ret", scope: !22763, file: !3, line: 5077, type: !32)
!22779 = !DILocation(line: 5077, column: 6, scope: !22763)
!22780 = !DILocalVariable(name: "testcnt", scope: !22763, file: !3, line: 5078, type: !32)
!22781 = !DILocation(line: 5078, column: 6, scope: !22763)
!22782 = !DILocalVariable(name: "save_msi_flags", scope: !22763, file: !3, line: 5079, type: !987)
!22783 = !DILocation(line: 5079, column: 6, scope: !22763)
!22784 = !DILocalVariable(name: "save_poll_interval", scope: !22763, file: !3, line: 5079, type: !987)
!22785 = !DILocation(line: 5079, column: 22, scope: !22763)
!22786 = !DILocation(line: 5081, column: 20, scope: !22787)
!22787 = distinct !DILexicalBlock(scope: !22763, file: !3, line: 5081, column: 6)
!22788 = !DILocation(line: 5081, column: 6, scope: !22787)
!22789 = !DILocation(line: 5081, column: 6, scope: !22763)
!22790 = !DILocation(line: 5083, column: 15, scope: !22791)
!22791 = distinct !DILexicalBlock(scope: !22787, file: !3, line: 5081, column: 26)
!22792 = !DILocation(line: 5083, column: 3, scope: !22791)
!22793 = !DILocation(line: 5084, column: 30, scope: !22791)
!22794 = !DILocation(line: 5084, column: 34, scope: !22791)
!22795 = !DILocation(line: 5084, column: 24, scope: !22791)
!22796 = !DILocation(line: 5084, column: 22, scope: !22791)
!22797 = !DILocation(line: 5085, column: 2, scope: !22791)
!22798 = !DILocation(line: 5088, column: 2, scope: !22763)
!22799 = !DILocation(line: 5088, column: 6, scope: !22763)
!22800 = !DILocation(line: 5088, column: 16, scope: !22763)
!22801 = !DILocation(line: 5091, column: 19, scope: !22763)
!22802 = !DILocation(line: 5091, column: 23, scope: !22763)
!22803 = !DILocation(line: 5091, column: 17, scope: !22763)
!22804 = !DILocation(line: 5092, column: 2, scope: !22763)
!22805 = !DILocation(line: 5092, column: 6, scope: !22763)
!22806 = !DILocation(line: 5092, column: 16, scope: !22763)
!22807 = !DILocation(line: 5093, column: 2, scope: !22763)
!22808 = !DILocation(line: 5093, column: 6, scope: !22763)
!22809 = !DILocation(line: 5093, column: 16, scope: !22763)
!22810 = !DILocation(line: 5094, column: 21, scope: !22811)
!22811 = distinct !DILexicalBlock(scope: !22763, file: !3, line: 5094, column: 6)
!22812 = !DILocation(line: 5094, column: 6, scope: !22811)
!22813 = !DILocation(line: 5094, column: 6, scope: !22763)
!22814 = !DILocation(line: 5095, column: 3, scope: !22811)
!22815 = !DILocation(line: 5098, column: 33, scope: !22763)
!22816 = !DILocation(line: 5098, column: 38, scope: !22763)
!22817 = !DILocation(line: 5098, column: 2, scope: !22763)
!22818 = !DILocation(line: 5099, column: 30, scope: !22763)
!22819 = !DILocation(line: 5099, column: 35, scope: !22763)
!22820 = !DILocation(line: 5099, column: 2, scope: !22763)
!22821 = !DILocation(line: 5101, column: 26, scope: !22763)
!22822 = !DILocation(line: 5101, column: 2, scope: !22763)
!22823 = !DILocation(line: 5104, column: 2, scope: !22763)
!22824 = !DILocation(line: 5106, column: 17, scope: !22763)
!22825 = !DILocation(line: 5106, column: 21, scope: !22763)
!22826 = !DILocation(line: 379, column: 2, scope: !9170, inlinedAt: !22767)
!22827 = !DILocation(line: 379, column: 2, scope: !9173, inlinedAt: !22767)
!22828 = !DILocation(line: 379, column: 2, scope: !9176, inlinedAt: !22767)
!22829 = !DILocation(line: 5109, column: 12, scope: !22763)
!22830 = !DILocation(line: 5109, column: 16, scope: !22763)
!22831 = !DILocation(line: 5109, column: 10, scope: !22763)
!22832 = !DILocation(line: 5110, column: 7, scope: !22833)
!22833 = distinct !DILexicalBlock(scope: !22763, file: !3, line: 5110, column: 6)
!22834 = !DILocation(line: 5110, column: 6, scope: !22763)
!22835 = !DILocation(line: 5111, column: 7, scope: !22833)
!22836 = !DILocation(line: 5111, column: 3, scope: !22833)
!22837 = !DILocation(line: 5113, column: 27, scope: !22763)
!22838 = !DILocation(line: 5113, column: 2, scope: !22763)
!22839 = !DILocation(line: 5114, column: 8, scope: !22840)
!22840 = distinct !DILexicalBlock(scope: !22763, file: !3, line: 5114, column: 6)
!22841 = !DILocation(line: 5114, column: 12, scope: !22840)
!22842 = !DILocation(line: 5114, column: 22, scope: !22840)
!22843 = !DILocation(line: 5114, column: 6, scope: !22763)
!22844 = !DILocation(line: 5115, column: 30, scope: !22840)
!22845 = !DILocation(line: 5115, column: 35, scope: !22840)
!22846 = !DILocation(line: 5115, column: 3, scope: !22840)
!22847 = !DILocation(line: 5117, column: 30, scope: !22840)
!22848 = !DILocation(line: 5117, column: 35, scope: !22840)
!22849 = !DILocation(line: 5117, column: 3, scope: !22840)
!22850 = !DILocation(line: 5119, column: 19, scope: !22763)
!22851 = !DILocation(line: 5119, column: 23, scope: !22763)
!22852 = !DILocation(line: 404, column: 2, scope: !9184, inlinedAt: !22765)
!22853 = !DILocation(line: 404, column: 2, scope: !9187, inlinedAt: !22765)
!22854 = !DILocation(line: 404, column: 2, scope: !9190, inlinedAt: !22765)
!22855 = !DILocation(line: 5121, column: 14, scope: !22763)
!22856 = !DILocation(line: 5121, column: 2, scope: !22763)
!22857 = !DILocation(line: 5123, column: 18, scope: !22763)
!22858 = !DILocation(line: 5123, column: 2, scope: !22763)
!22859 = !DILocation(line: 5123, column: 6, scope: !22763)
!22860 = !DILocation(line: 5123, column: 16, scope: !22763)
!22861 = !DILocation(line: 5125, column: 20, scope: !22862)
!22862 = distinct !DILexicalBlock(scope: !22763, file: !3, line: 5125, column: 6)
!22863 = !DILocation(line: 5125, column: 6, scope: !22862)
!22864 = !DILocation(line: 5125, column: 6, scope: !22763)
!22865 = !DILocation(line: 5126, column: 10, scope: !22866)
!22866 = distinct !DILexicalBlock(scope: !22862, file: !3, line: 5125, column: 26)
!22867 = !DILocation(line: 5126, column: 30, scope: !22866)
!22868 = !DILocation(line: 5126, column: 35, scope: !22866)
!22869 = !DILocation(line: 5126, column: 3, scope: !22866)
!22870 = !DILocation(line: 5127, column: 31, scope: !22866)
!22871 = !DILocation(line: 5127, column: 36, scope: !22866)
!22872 = !DILocation(line: 5127, column: 3, scope: !22866)
!22873 = !DILocation(line: 5129, column: 22, scope: !22874)
!22874 = distinct !DILexicalBlock(scope: !22866, file: !3, line: 5129, column: 7)
!22875 = !DILocation(line: 5129, column: 7, scope: !22874)
!22876 = !DILocation(line: 5129, column: 7, scope: !22866)
!22877 = !DILocation(line: 5130, column: 4, scope: !22874)
!22878 = !DILocation(line: 5131, column: 2, scope: !22866)
!22879 = !DILocation(line: 5133, column: 9, scope: !22763)
!22880 = !DILocation(line: 5133, column: 2, scope: !22763)
!22881 = !DILocation(line: 5134, column: 1, scope: !22763)
!22882 = distinct !DISubprogram(name: "nv_loopback_test", scope: !3, file: !3, line: 5136, type: !402, scopeLine: 5137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22883 = !DILocalVariable(name: "dev", arg: 1, scope: !22882, file: !3, line: 5136, type: !290)
!22884 = !DILocation(line: 5136, column: 48, scope: !22882)
!22885 = !DILocalVariable(name: "np", scope: !22882, file: !3, line: 5138, type: !7446)
!22886 = !DILocation(line: 5138, column: 18, scope: !22882)
!22887 = !DILocation(line: 5138, column: 35, scope: !22882)
!22888 = !DILocation(line: 5138, column: 23, scope: !22882)
!22889 = !DILocalVariable(name: "base", scope: !22882, file: !3, line: 5139, type: !793)
!22890 = !DILocation(line: 5139, column: 14, scope: !22882)
!22891 = !DILocation(line: 5139, column: 32, scope: !22882)
!22892 = !DILocation(line: 5139, column: 21, scope: !22882)
!22893 = !DILocalVariable(name: "tx_skb", scope: !22882, file: !3, line: 5140, type: !415)
!22894 = !DILocation(line: 5140, column: 18, scope: !22882)
!22895 = !DILocalVariable(name: "rx_skb", scope: !22882, file: !3, line: 5140, type: !415)
!22896 = !DILocation(line: 5140, column: 27, scope: !22882)
!22897 = !DILocalVariable(name: "test_dma_addr", scope: !22882, file: !3, line: 5141, type: !2036)
!22898 = !DILocation(line: 5141, column: 13, scope: !22882)
!22899 = !DILocalVariable(name: "tx_flags_extra", scope: !22882, file: !3, line: 5142, type: !987)
!22900 = !DILocation(line: 5142, column: 6, scope: !22882)
!22901 = !DILocation(line: 5142, column: 24, scope: !22882)
!22902 = !DILocation(line: 5142, column: 28, scope: !22882)
!22903 = !DILocation(line: 5142, column: 37, scope: !22882)
!22904 = !DILocalVariable(name: "flags", scope: !22882, file: !3, line: 5143, type: !987)
!22905 = !DILocation(line: 5143, column: 6, scope: !22882)
!22906 = !DILocalVariable(name: "len", scope: !22882, file: !3, line: 5144, type: !32)
!22907 = !DILocation(line: 5144, column: 6, scope: !22882)
!22908 = !DILocalVariable(name: "i", scope: !22882, file: !3, line: 5144, type: !32)
!22909 = !DILocation(line: 5144, column: 11, scope: !22882)
!22910 = !DILocalVariable(name: "pkt_len", scope: !22882, file: !3, line: 5144, type: !32)
!22911 = !DILocation(line: 5144, column: 14, scope: !22882)
!22912 = !DILocalVariable(name: "pkt_data", scope: !22882, file: !3, line: 5145, type: !793)
!22913 = !DILocation(line: 5145, column: 6, scope: !22882)
!22914 = !DILocalVariable(name: "filter_flags", scope: !22882, file: !3, line: 5146, type: !987)
!22915 = !DILocation(line: 5146, column: 6, scope: !22882)
!22916 = !DILocalVariable(name: "misc1_flags", scope: !22882, file: !3, line: 5147, type: !987)
!22917 = !DILocation(line: 5147, column: 6, scope: !22882)
!22918 = !DILocalVariable(name: "ret", scope: !22882, file: !3, line: 5148, type: !32)
!22919 = !DILocation(line: 5148, column: 6, scope: !22882)
!22920 = !DILocation(line: 5150, column: 20, scope: !22921)
!22921 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5150, column: 6)
!22922 = !DILocation(line: 5150, column: 6, scope: !22921)
!22923 = !DILocation(line: 5150, column: 6, scope: !22882)
!22924 = !DILocation(line: 5151, column: 18, scope: !22925)
!22925 = distinct !DILexicalBlock(scope: !22921, file: !3, line: 5150, column: 26)
!22926 = !DILocation(line: 5151, column: 3, scope: !22925)
!22927 = !DILocation(line: 5152, column: 24, scope: !22925)
!22928 = !DILocation(line: 5152, column: 29, scope: !22925)
!22929 = !DILocation(line: 5152, column: 18, scope: !22925)
!22930 = !DILocation(line: 5152, column: 16, scope: !22925)
!22931 = !DILocation(line: 5153, column: 23, scope: !22925)
!22932 = !DILocation(line: 5153, column: 28, scope: !22925)
!22933 = !DILocation(line: 5153, column: 17, scope: !22925)
!22934 = !DILocation(line: 5153, column: 15, scope: !22925)
!22935 = !DILocation(line: 5154, column: 2, scope: !22925)
!22936 = !DILocation(line: 5155, column: 17, scope: !22937)
!22937 = distinct !DILexicalBlock(scope: !22921, file: !3, line: 5154, column: 9)
!22938 = !DILocation(line: 5155, column: 3, scope: !22937)
!22939 = !DILocation(line: 5159, column: 14, scope: !22882)
!22940 = !DILocation(line: 5159, column: 2, scope: !22882)
!22941 = !DILocation(line: 5160, column: 15, scope: !22882)
!22942 = !DILocation(line: 5160, column: 2, scope: !22882)
!22943 = !DILocation(line: 5163, column: 28, scope: !22882)
!22944 = !DILocation(line: 5163, column: 33, scope: !22882)
!22945 = !DILocation(line: 5163, column: 2, scope: !22882)
!22946 = !DILocation(line: 5164, column: 48, scope: !22882)
!22947 = !DILocation(line: 5164, column: 53, scope: !22882)
!22948 = !DILocation(line: 5164, column: 2, scope: !22882)
!22949 = !DILocation(line: 5167, column: 9, scope: !22882)
!22950 = !DILocation(line: 5167, column: 13, scope: !22882)
!22951 = !DILocation(line: 5167, column: 24, scope: !22882)
!22952 = !DILocation(line: 5167, column: 29, scope: !22882)
!22953 = !DILocation(line: 5167, column: 2, scope: !22882)
!22954 = !DILocation(line: 5168, column: 17, scope: !22882)
!22955 = !DILocation(line: 5168, column: 2, scope: !22882)
!22956 = !DILocation(line: 5169, column: 11, scope: !22882)
!22957 = !DILocation(line: 5169, column: 15, scope: !22882)
!22958 = !DILocation(line: 5169, column: 27, scope: !22882)
!22959 = !DILocation(line: 5169, column: 31, scope: !22882)
!22960 = !DILocation(line: 5169, column: 60, scope: !22882)
!22961 = !DILocation(line: 5169, column: 64, scope: !22882)
!22962 = !DILocation(line: 5169, column: 76, scope: !22882)
!22963 = !DILocation(line: 5169, column: 80, scope: !22882)
!22964 = !DILocation(line: 5169, column: 56, scope: !22882)
!22965 = !DILocation(line: 5170, column: 3, scope: !22882)
!22966 = !DILocation(line: 5170, column: 8, scope: !22882)
!22967 = !DILocation(line: 5169, column: 2, scope: !22882)
!22968 = !DILocation(line: 5171, column: 11, scope: !22882)
!22969 = !DILocation(line: 5171, column: 2, scope: !22882)
!22970 = !DILocation(line: 5174, column: 16, scope: !22882)
!22971 = !DILocation(line: 5174, column: 2, scope: !22882)
!22972 = !DILocation(line: 5177, column: 10, scope: !22882)
!22973 = !DILocation(line: 5178, column: 28, scope: !22882)
!22974 = !DILocation(line: 5178, column: 33, scope: !22882)
!22975 = !DILocation(line: 5178, column: 11, scope: !22882)
!22976 = !DILocation(line: 5178, column: 9, scope: !22882)
!22977 = !DILocation(line: 5179, column: 7, scope: !22978)
!22978 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5179, column: 6)
!22979 = !DILocation(line: 5179, column: 6, scope: !22882)
!22980 = !DILocation(line: 5180, column: 7, scope: !22981)
!22981 = distinct !DILexicalBlock(scope: !22978, file: !3, line: 5179, column: 15)
!22982 = !DILocation(line: 5181, column: 3, scope: !22981)
!22983 = !DILocation(line: 5183, column: 18, scope: !22882)
!22984 = !DILocation(line: 5183, column: 16, scope: !22882)
!22985 = !DILocation(line: 5186, column: 6, scope: !22986)
!22986 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5186, column: 6)
!22987 = !DILocation(line: 5186, column: 6, scope: !22882)
!22988 = !DILocation(line: 5188, column: 21, scope: !22989)
!22989 = distinct !DILexicalBlock(scope: !22986, file: !3, line: 5187, column: 29)
!22990 = !DILocation(line: 5188, column: 3, scope: !22989)
!22991 = !DILocation(line: 5189, column: 3, scope: !22989)
!22992 = !DILocation(line: 5191, column: 21, scope: !22882)
!22993 = !DILocation(line: 5191, column: 29, scope: !22882)
!22994 = !DILocation(line: 5191, column: 13, scope: !22882)
!22995 = !DILocation(line: 5191, column: 11, scope: !22882)
!22996 = !DILocation(line: 5192, column: 9, scope: !22997)
!22997 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5192, column: 2)
!22998 = !DILocation(line: 5192, column: 7, scope: !22997)
!22999 = !DILocation(line: 5192, column: 14, scope: !23000)
!23000 = distinct !DILexicalBlock(scope: !22997, file: !3, line: 5192, column: 2)
!23001 = !DILocation(line: 5192, column: 18, scope: !23000)
!23002 = !DILocation(line: 5192, column: 16, scope: !23000)
!23003 = !DILocation(line: 5192, column: 2, scope: !22997)
!23004 = !DILocation(line: 5193, column: 22, scope: !23000)
!23005 = !DILocation(line: 5193, column: 24, scope: !23000)
!23006 = !DILocation(line: 5193, column: 17, scope: !23000)
!23007 = !DILocation(line: 5193, column: 3, scope: !23000)
!23008 = !DILocation(line: 5193, column: 12, scope: !23000)
!23009 = !DILocation(line: 5193, column: 15, scope: !23000)
!23010 = !DILocation(line: 5192, column: 28, scope: !23000)
!23011 = !DILocation(line: 5192, column: 2, scope: !23000)
!23012 = distinct !{!23012, !23003, !23013}
!23013 = !DILocation(line: 5193, column: 30, scope: !22997)
!23014 = !DILocation(line: 5195, column: 20, scope: !23015)
!23015 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5195, column: 6)
!23016 = !DILocation(line: 5195, column: 7, scope: !23015)
!23017 = !DILocation(line: 5195, column: 6, scope: !22882)
!23018 = !DILocation(line: 5196, column: 29, scope: !23019)
!23019 = distinct !DILexicalBlock(scope: !23015, file: !3, line: 5195, column: 25)
!23020 = !DILocation(line: 5196, column: 3, scope: !23019)
!23021 = !DILocation(line: 5196, column: 7, scope: !23019)
!23022 = !DILocation(line: 5196, column: 15, scope: !23019)
!23023 = !DILocation(line: 5196, column: 23, scope: !23019)
!23024 = !DILocation(line: 5196, column: 27, scope: !23019)
!23025 = !DILocation(line: 5197, column: 33, scope: !23019)
!23026 = !DILocation(line: 5197, column: 3, scope: !23019)
!23027 = !DILocation(line: 5197, column: 7, scope: !23019)
!23028 = !DILocation(line: 5197, column: 15, scope: !23019)
!23029 = !DILocation(line: 5197, column: 23, scope: !23019)
!23030 = !DILocation(line: 5197, column: 31, scope: !23019)
!23031 = !DILocation(line: 5198, column: 2, scope: !23019)
!23032 = !DILocation(line: 5199, column: 31, scope: !23033)
!23033 = distinct !DILexicalBlock(scope: !23015, file: !3, line: 5198, column: 9)
!23034 = !DILocation(line: 5199, column: 3, scope: !23033)
!23035 = !DILocation(line: 5199, column: 7, scope: !23033)
!23036 = !DILocation(line: 5199, column: 15, scope: !23033)
!23037 = !DILocation(line: 5199, column: 21, scope: !23033)
!23038 = !DILocation(line: 5199, column: 29, scope: !23033)
!23039 = !DILocation(line: 5200, column: 30, scope: !23033)
!23040 = !DILocation(line: 5200, column: 3, scope: !23033)
!23041 = !DILocation(line: 5200, column: 7, scope: !23033)
!23042 = !DILocation(line: 5200, column: 15, scope: !23033)
!23043 = !DILocation(line: 5200, column: 21, scope: !23033)
!23044 = !DILocation(line: 5200, column: 28, scope: !23033)
!23045 = !DILocation(line: 5201, column: 31, scope: !23033)
!23046 = !DILocation(line: 5201, column: 3, scope: !23033)
!23047 = !DILocation(line: 5201, column: 7, scope: !23033)
!23048 = !DILocation(line: 5201, column: 15, scope: !23033)
!23049 = !DILocation(line: 5201, column: 21, scope: !23033)
!23050 = !DILocation(line: 5201, column: 29, scope: !23033)
!23051 = !DILocation(line: 5203, column: 28, scope: !22882)
!23052 = !DILocation(line: 5203, column: 32, scope: !22882)
!23053 = !DILocation(line: 5203, column: 27, scope: !22882)
!23054 = !DILocation(line: 5203, column: 57, scope: !22882)
!23055 = !DILocation(line: 5203, column: 46, scope: !22882)
!23056 = !DILocation(line: 5203, column: 62, scope: !22882)
!23057 = !DILocation(line: 5203, column: 2, scope: !22882)
!23058 = !DILocation(line: 5204, column: 22, scope: !22882)
!23059 = !DILocation(line: 5204, column: 11, scope: !22882)
!23060 = !DILocation(line: 5204, column: 2, scope: !22882)
!23061 = !DILocation(line: 5206, column: 2, scope: !22882)
!23062 = !DILocation(line: 5209, column: 20, scope: !23063)
!23063 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5209, column: 6)
!23064 = !DILocation(line: 5209, column: 7, scope: !23063)
!23065 = !DILocation(line: 5209, column: 6, scope: !22882)
!23066 = !DILocation(line: 5210, column: 11, scope: !23067)
!23067 = distinct !DILexicalBlock(scope: !23063, file: !3, line: 5209, column: 25)
!23068 = !DILocation(line: 5210, column: 9, scope: !23067)
!23069 = !DILocation(line: 5211, column: 29, scope: !23067)
!23070 = !DILocation(line: 5211, column: 33, scope: !23067)
!23071 = !DILocation(line: 5211, column: 41, scope: !23067)
!23072 = !DILocation(line: 5211, column: 50, scope: !23067)
!23073 = !DILocation(line: 5211, column: 54, scope: !23067)
!23074 = !DILocation(line: 5211, column: 9, scope: !23067)
!23075 = !DILocation(line: 5211, column: 7, scope: !23067)
!23076 = !DILocation(line: 5213, column: 2, scope: !23067)
!23077 = !DILocation(line: 5214, column: 11, scope: !23078)
!23078 = distinct !DILexicalBlock(scope: !23063, file: !3, line: 5213, column: 9)
!23079 = !DILocation(line: 5214, column: 9, scope: !23078)
!23080 = !DILocation(line: 5215, column: 32, scope: !23078)
!23081 = !DILocation(line: 5215, column: 36, scope: !23078)
!23082 = !DILocation(line: 5215, column: 44, scope: !23078)
!23083 = !DILocation(line: 5215, column: 51, scope: !23078)
!23084 = !DILocation(line: 5215, column: 55, scope: !23078)
!23085 = !DILocation(line: 5215, column: 9, scope: !23078)
!23086 = !DILocation(line: 5215, column: 7, scope: !23078)
!23087 = !DILocation(line: 5218, column: 6, scope: !23088)
!23088 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5218, column: 6)
!23089 = !DILocation(line: 5218, column: 12, scope: !23088)
!23090 = !DILocation(line: 5218, column: 6, scope: !22882)
!23091 = !DILocation(line: 5219, column: 7, scope: !23092)
!23092 = distinct !DILexicalBlock(scope: !23088, file: !3, line: 5218, column: 27)
!23093 = !DILocation(line: 5220, column: 2, scope: !23092)
!23094 = !DILocation(line: 5220, column: 13, scope: !23095)
!23095 = distinct !DILexicalBlock(scope: !23088, file: !3, line: 5220, column: 13)
!23096 = !DILocation(line: 5220, column: 17, scope: !23095)
!23097 = !DILocation(line: 5220, column: 26, scope: !23095)
!23098 = !DILocation(line: 5220, column: 13, scope: !23088)
!23099 = !DILocation(line: 5221, column: 7, scope: !23100)
!23100 = distinct !DILexicalBlock(scope: !23101, file: !3, line: 5221, column: 7)
!23101 = distinct !DILexicalBlock(scope: !23095, file: !3, line: 5220, column: 41)
!23102 = !DILocation(line: 5221, column: 13, scope: !23100)
!23103 = !DILocation(line: 5221, column: 7, scope: !23101)
!23104 = !DILocation(line: 5222, column: 8, scope: !23100)
!23105 = !DILocation(line: 5222, column: 4, scope: !23100)
!23106 = !DILocation(line: 5223, column: 2, scope: !23101)
!23107 = !DILocation(line: 5224, column: 7, scope: !23108)
!23108 = distinct !DILexicalBlock(scope: !23109, file: !3, line: 5224, column: 7)
!23109 = distinct !DILexicalBlock(scope: !23095, file: !3, line: 5223, column: 9)
!23110 = !DILocation(line: 5224, column: 13, scope: !23108)
!23111 = !DILocation(line: 5224, column: 7, scope: !23109)
!23112 = !DILocation(line: 5225, column: 8, scope: !23108)
!23113 = !DILocation(line: 5225, column: 4, scope: !23108)
!23114 = !DILocation(line: 5228, column: 6, scope: !23115)
!23115 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5228, column: 6)
!23116 = !DILocation(line: 5228, column: 6, scope: !22882)
!23117 = !DILocation(line: 5229, column: 7, scope: !23118)
!23118 = distinct !DILexicalBlock(scope: !23119, file: !3, line: 5229, column: 7)
!23119 = distinct !DILexicalBlock(scope: !23115, file: !3, line: 5228, column: 11)
!23120 = !DILocation(line: 5229, column: 14, scope: !23118)
!23121 = !DILocation(line: 5229, column: 11, scope: !23118)
!23122 = !DILocation(line: 5229, column: 7, scope: !23119)
!23123 = !DILocation(line: 5230, column: 8, scope: !23124)
!23124 = distinct !DILexicalBlock(scope: !23118, file: !3, line: 5229, column: 23)
!23125 = !DILocation(line: 5231, column: 3, scope: !23124)
!23126 = !DILocation(line: 5232, column: 13, scope: !23127)
!23127 = distinct !DILexicalBlock(scope: !23118, file: !3, line: 5231, column: 10)
!23128 = !DILocation(line: 5232, column: 17, scope: !23127)
!23129 = !DILocation(line: 5232, column: 27, scope: !23127)
!23130 = !DILocation(line: 5232, column: 11, scope: !23127)
!23131 = !DILocation(line: 5233, column: 11, scope: !23132)
!23132 = distinct !DILexicalBlock(scope: !23127, file: !3, line: 5233, column: 4)
!23133 = !DILocation(line: 5233, column: 9, scope: !23132)
!23134 = !DILocation(line: 5233, column: 16, scope: !23135)
!23135 = distinct !DILexicalBlock(scope: !23132, file: !3, line: 5233, column: 4)
!23136 = !DILocation(line: 5233, column: 20, scope: !23135)
!23137 = !DILocation(line: 5233, column: 18, scope: !23135)
!23138 = !DILocation(line: 5233, column: 4, scope: !23132)
!23139 = !DILocation(line: 5234, column: 9, scope: !23140)
!23140 = distinct !DILexicalBlock(scope: !23141, file: !3, line: 5234, column: 9)
!23141 = distinct !DILexicalBlock(scope: !23135, file: !3, line: 5233, column: 34)
!23142 = !DILocation(line: 5234, column: 17, scope: !23140)
!23143 = !DILocation(line: 5234, column: 22, scope: !23140)
!23144 = !DILocation(line: 5234, column: 33, scope: !23140)
!23145 = !DILocation(line: 5234, column: 35, scope: !23140)
!23146 = !DILocation(line: 5234, column: 28, scope: !23140)
!23147 = !DILocation(line: 5234, column: 25, scope: !23140)
!23148 = !DILocation(line: 5234, column: 9, scope: !23141)
!23149 = !DILocation(line: 5235, column: 10, scope: !23150)
!23150 = distinct !DILexicalBlock(scope: !23140, file: !3, line: 5234, column: 44)
!23151 = !DILocation(line: 5236, column: 6, scope: !23150)
!23152 = !DILocation(line: 5238, column: 4, scope: !23141)
!23153 = !DILocation(line: 5233, column: 30, scope: !23135)
!23154 = !DILocation(line: 5233, column: 4, scope: !23135)
!23155 = distinct !{!23155, !23138, !23156}
!23156 = !DILocation(line: 5238, column: 4, scope: !23132)
!23157 = !DILocation(line: 5240, column: 2, scope: !23119)
!23158 = !DILocation(line: 5242, column: 2, scope: !22882)
!23159 = !DILocation(line: 5245, column: 20, scope: !22882)
!23160 = !DILocation(line: 5245, column: 2, scope: !22882)
!23161 = !DILabel(scope: !22882, name: "out", file: !3, line: 5246)
!23162 = !DILocation(line: 5246, column: 2, scope: !22882)
!23163 = !DILocation(line: 5248, column: 15, scope: !22882)
!23164 = !DILocation(line: 5248, column: 2, scope: !22882)
!23165 = !DILocation(line: 5249, column: 16, scope: !22882)
!23166 = !DILocation(line: 5249, column: 2, scope: !22882)
!23167 = !DILocation(line: 5251, column: 16, scope: !22882)
!23168 = !DILocation(line: 5251, column: 2, scope: !22882)
!23169 = !DILocation(line: 5253, column: 20, scope: !23170)
!23170 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 5253, column: 6)
!23171 = !DILocation(line: 5253, column: 6, scope: !23170)
!23172 = !DILocation(line: 5253, column: 6, scope: !22882)
!23173 = !DILocation(line: 5254, column: 10, scope: !23174)
!23174 = distinct !DILexicalBlock(scope: !23170, file: !3, line: 5253, column: 26)
!23175 = !DILocation(line: 5254, column: 23, scope: !23174)
!23176 = !DILocation(line: 5254, column: 28, scope: !23174)
!23177 = !DILocation(line: 5254, column: 3, scope: !23174)
!23178 = !DILocation(line: 5255, column: 10, scope: !23174)
!23179 = !DILocation(line: 5255, column: 24, scope: !23174)
!23180 = !DILocation(line: 5255, column: 29, scope: !23174)
!23181 = !DILocation(line: 5255, column: 3, scope: !23174)
!23182 = !DILocation(line: 5256, column: 17, scope: !23174)
!23183 = !DILocation(line: 5256, column: 3, scope: !23174)
!23184 = !DILocation(line: 5257, column: 2, scope: !23174)
!23185 = !DILocation(line: 5259, column: 9, scope: !22882)
!23186 = !DILocation(line: 5259, column: 2, scope: !22882)
!23187 = distinct !DISubprogram(name: "nv_descr_getlength", scope: !3, file: !3, line: 950, type: !23188, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23188 = !DISubroutineType(types: !23189)
!23189 = !{!987, !7820, !987}
!23190 = !DILocalVariable(name: "prd", arg: 1, scope: !23187, file: !3, line: 950, type: !7820)
!23191 = !DILocation(line: 950, column: 56, scope: !23187)
!23192 = !DILocalVariable(name: "v", arg: 2, scope: !23187, file: !3, line: 950, type: !987)
!23193 = !DILocation(line: 950, column: 65, scope: !23187)
!23194 = !DILocation(line: 952, column: 9, scope: !23187)
!23195 = !DILocation(line: 953, column: 7, scope: !23187)
!23196 = !DILocation(line: 953, column: 9, scope: !23187)
!23197 = !DILocation(line: 953, column: 6, scope: !23187)
!23198 = !DILocation(line: 953, column: 3, scope: !23187)
!23199 = !DILocation(line: 952, column: 2, scope: !23187)
!23200 = distinct !DISubprogram(name: "nv_descr_getlength_ex", scope: !3, file: !3, line: 956, type: !23201, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23201 = !DISubroutineType(types: !23202)
!23202 = !{!987, !7827, !987}
!23203 = !DILocalVariable(name: "prd", arg: 1, scope: !23200, file: !3, line: 956, type: !7827)
!23204 = !DILocation(line: 956, column: 62, scope: !23200)
!23205 = !DILocalVariable(name: "v", arg: 2, scope: !23200, file: !3, line: 956, type: !987)
!23206 = !DILocation(line: 956, column: 71, scope: !23200)
!23207 = !DILocation(line: 958, column: 9, scope: !23200)
!23208 = !DILocation(line: 958, column: 35, scope: !23200)
!23209 = !DILocation(line: 958, column: 2, scope: !23200)
!23210 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !6541, file: !6541, line: 660, type: !23211, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23211 = !DISubroutineType(types: !23212)
!23212 = !{null, !6545, !591}
!23213 = !DILocalVariable(name: "dev", arg: 1, scope: !23210, file: !6541, line: 660, type: !6545)
!23214 = !DILocation(line: 660, column: 51, scope: !23210)
!23215 = !DILocalVariable(name: "data", arg: 2, scope: !23210, file: !6541, line: 660, type: !591)
!23216 = !DILocation(line: 660, column: 62, scope: !23210)
!23217 = !DILocation(line: 662, column: 21, scope: !23210)
!23218 = !DILocation(line: 662, column: 2, scope: !23210)
!23219 = !DILocation(line: 662, column: 7, scope: !23210)
!23220 = !DILocation(line: 662, column: 19, scope: !23210)
!23221 = !DILocation(line: 663, column: 1, scope: !23210)
!23222 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !10341, file: !10341, line: 116, type: !10342, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23223 = !DILocalVariable(name: "addr", arg: 1, scope: !23222, file: !10341, line: 116, type: !5860)
!23224 = !DILocation(line: 116, column: 54, scope: !23222)
!23225 = !DILocalVariable(name: "a", scope: !23222, file: !10341, line: 119, type: !987)
!23226 = !DILocation(line: 119, column: 6, scope: !23222)
!23227 = !DILocation(line: 119, column: 24, scope: !23222)
!23228 = !DILocation(line: 119, column: 10, scope: !23222)
!23229 = !DILocation(line: 126, column: 16, scope: !23222)
!23230 = !DILocation(line: 126, column: 14, scope: !23222)
!23231 = !DILocation(line: 126, column: 9, scope: !23222)
!23232 = !DILocation(line: 126, column: 2, scope: !23222)
!23233 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !10341, file: !10341, line: 98, type: !10342, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23234 = !DILocalVariable(name: "addr", arg: 1, scope: !23233, file: !10341, line: 98, type: !5860)
!23235 = !DILocation(line: 98, column: 49, scope: !23233)
!23236 = !DILocation(line: 101, column: 25, scope: !23233)
!23237 = !DILocation(line: 101, column: 11, scope: !23233)
!23238 = !DILocation(line: 101, column: 49, scope: !23233)
!23239 = !DILocation(line: 101, column: 54, scope: !23233)
!23240 = !DILocation(line: 101, column: 34, scope: !23233)
!23241 = !DILocation(line: 101, column: 33, scope: !23233)
!23242 = !DILocation(line: 101, column: 31, scope: !23233)
!23243 = !DILocation(line: 101, column: 61, scope: !23233)
!23244 = !DILocation(line: 101, column: 2, scope: !23233)
!23245 = distinct !DISubprogram(name: "eth_random_addr", scope: !10341, file: !10341, line: 223, type: !11660, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23246 = !DILocalVariable(name: "addr", arg: 1, scope: !23245, file: !10341, line: 223, type: !793)
!23247 = !DILocation(line: 223, column: 40, scope: !23245)
!23248 = !DILocation(line: 225, column: 19, scope: !23245)
!23249 = !DILocation(line: 225, column: 2, scope: !23245)
!23250 = !DILocation(line: 226, column: 2, scope: !23245)
!23251 = !DILocation(line: 226, column: 10, scope: !23245)
!23252 = !DILocation(line: 227, column: 2, scope: !23245)
!23253 = !DILocation(line: 227, column: 10, scope: !23245)
!23254 = !DILocation(line: 228, column: 1, scope: !23245)
!23255 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !14301, file: !14301, line: 661, type: !3809, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23256 = !DILocalVariable(name: "__edi", scope: !23257, file: !14301, line: 663, type: !312)
!23257 = distinct !DILexicalBlock(scope: !23255, file: !14301, line: 663, column: 2)
!23258 = !DILocation(line: 663, column: 2, scope: !23257)
!23259 = !DILocalVariable(name: "__esi", scope: !23257, file: !14301, line: 663, type: !312)
!23260 = !DILocalVariable(name: "__edx", scope: !23257, file: !14301, line: 663, type: !312)
!23261 = !DILocalVariable(name: "__ecx", scope: !23257, file: !14301, line: 663, type: !312)
!23262 = !DILocalVariable(name: "__eax", scope: !23257, file: !14301, line: 663, type: !312)
!23263 = !{i32 -2145585508, i32 -2145584778, i32 -2145584544, i32 -2145584493, i32 -2145584465, i32 -2145584440, i32 -2145584756, i32 -2145584743, i32 -2145584305, i32 -2145584186, i32 -2145584651, i32 -2145584624, i32 -2145584596, i32 -2145584566}
!23264 = !DILocation(line: 664, column: 1, scope: !23255)
!23265 = !DILocalVariable(name: "dev", arg: 1, scope: !8215, file: !3, line: 1203, type: !290)
!23266 = !DILocation(line: 1203, column: 50, scope: !8215)
!23267 = !DILocalVariable(name: "np", arg: 2, scope: !8215, file: !3, line: 1203, type: !7446)
!23268 = !DILocation(line: 1203, column: 71, scope: !8215)
!23269 = !DILocalVariable(name: "i", scope: !8215, file: !3, line: 1217, type: !32)
!23270 = !DILocation(line: 1217, column: 6, scope: !8215)
!23271 = !DILocation(line: 1219, column: 9, scope: !23272)
!23272 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 1219, column: 2)
!23273 = !DILocation(line: 1219, column: 7, scope: !23272)
!23274 = !DILocation(line: 1219, column: 14, scope: !23275)
!23275 = distinct !DILexicalBlock(scope: !23272, file: !3, line: 1219, column: 2)
!23276 = !DILocation(line: 1219, column: 16, scope: !23275)
!23277 = !DILocation(line: 1219, column: 2, scope: !23272)
!23278 = !DILocation(line: 1220, column: 14, scope: !23279)
!23279 = distinct !DILexicalBlock(scope: !23280, file: !3, line: 1220, column: 7)
!23280 = distinct !DILexicalBlock(scope: !23275, file: !3, line: 1219, column: 39)
!23281 = !DILocation(line: 1220, column: 19, scope: !23279)
!23282 = !DILocation(line: 1220, column: 23, scope: !23279)
!23283 = !DILocation(line: 1220, column: 35, scope: !23279)
!23284 = !DILocation(line: 1220, column: 32, scope: !23279)
!23285 = !DILocation(line: 1220, column: 38, scope: !23279)
!23286 = !DILocation(line: 1220, column: 46, scope: !23279)
!23287 = !DILocation(line: 1220, column: 43, scope: !23279)
!23288 = !DILocation(line: 1220, column: 49, scope: !23279)
!23289 = !DILocation(line: 1220, column: 7, scope: !23279)
!23290 = !DILocation(line: 1220, column: 7, scope: !23280)
!23291 = !DILocation(line: 1221, column: 4, scope: !23279)
!23292 = !DILocation(line: 1222, column: 2, scope: !23280)
!23293 = !DILocation(line: 1219, column: 35, scope: !23275)
!23294 = !DILocation(line: 1219, column: 2, scope: !23275)
!23295 = distinct !{!23295, !23277, !23296}
!23296 = !DILocation(line: 1222, column: 2, scope: !23272)
!23297 = !DILocation(line: 1224, column: 2, scope: !8215)
!23298 = !DILocation(line: 1225, column: 1, scope: !8215)
!23299 = distinct !DISubprogram(name: "init_realtek_8211c", scope: !3, file: !3, line: 1227, type: !8216, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23300 = !DILocalVariable(name: "dev", arg: 1, scope: !23299, file: !3, line: 1227, type: !290)
!23301 = !DILocation(line: 1227, column: 50, scope: !23299)
!23302 = !DILocalVariable(name: "np", arg: 2, scope: !23299, file: !3, line: 1227, type: !7446)
!23303 = !DILocation(line: 1227, column: 71, scope: !23299)
!23304 = !DILocalVariable(name: "reg", scope: !23299, file: !3, line: 1229, type: !987)
!23305 = !DILocation(line: 1229, column: 6, scope: !23299)
!23306 = !DILocalVariable(name: "base", scope: !23299, file: !3, line: 1230, type: !793)
!23307 = !DILocation(line: 1230, column: 14, scope: !23299)
!23308 = !DILocation(line: 1230, column: 32, scope: !23299)
!23309 = !DILocation(line: 1230, column: 21, scope: !23299)
!23310 = !DILocalVariable(name: "powerstate", scope: !23299, file: !3, line: 1231, type: !987)
!23311 = !DILocation(line: 1231, column: 6, scope: !23299)
!23312 = !DILocation(line: 1231, column: 25, scope: !23299)
!23313 = !DILocation(line: 1231, column: 30, scope: !23299)
!23314 = !DILocation(line: 1231, column: 19, scope: !23299)
!23315 = !DILocation(line: 1234, column: 13, scope: !23299)
!23316 = !DILocation(line: 1235, column: 9, scope: !23299)
!23317 = !DILocation(line: 1235, column: 21, scope: !23299)
!23318 = !DILocation(line: 1235, column: 26, scope: !23299)
!23319 = !DILocation(line: 1235, column: 2, scope: !23299)
!23320 = !DILocation(line: 1236, column: 2, scope: !23299)
!23321 = !DILocation(line: 1238, column: 13, scope: !23299)
!23322 = !DILocation(line: 1239, column: 9, scope: !23299)
!23323 = !DILocation(line: 1239, column: 21, scope: !23299)
!23324 = !DILocation(line: 1239, column: 26, scope: !23299)
!23325 = !DILocation(line: 1239, column: 2, scope: !23299)
!23326 = !DILocation(line: 1240, column: 2, scope: !23299)
!23327 = !DILocation(line: 1242, column: 15, scope: !23299)
!23328 = !DILocation(line: 1242, column: 20, scope: !23299)
!23329 = !DILocation(line: 1242, column: 24, scope: !23299)
!23330 = !DILocation(line: 1242, column: 8, scope: !23299)
!23331 = !DILocation(line: 1242, column: 6, scope: !23299)
!23332 = !DILocation(line: 1243, column: 6, scope: !23299)
!23333 = !DILocation(line: 1244, column: 13, scope: !23334)
!23334 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 1244, column: 6)
!23335 = !DILocation(line: 1244, column: 18, scope: !23334)
!23336 = !DILocation(line: 1244, column: 22, scope: !23334)
!23337 = !DILocation(line: 1244, column: 54, scope: !23334)
!23338 = !DILocation(line: 1244, column: 6, scope: !23334)
!23339 = !DILocation(line: 1244, column: 6, scope: !23299)
!23340 = !DILocation(line: 1245, column: 3, scope: !23334)
!23341 = !DILocation(line: 1246, column: 13, scope: !23342)
!23342 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 1246, column: 6)
!23343 = !DILocation(line: 1246, column: 18, scope: !23342)
!23344 = !DILocation(line: 1246, column: 22, scope: !23342)
!23345 = !DILocation(line: 1246, column: 6, scope: !23342)
!23346 = !DILocation(line: 1246, column: 6, scope: !23299)
!23347 = !DILocation(line: 1248, column: 3, scope: !23342)
!23348 = !DILocation(line: 1249, column: 15, scope: !23299)
!23349 = !DILocation(line: 1249, column: 20, scope: !23299)
!23350 = !DILocation(line: 1249, column: 24, scope: !23299)
!23351 = !DILocation(line: 1249, column: 8, scope: !23299)
!23352 = !DILocation(line: 1249, column: 6, scope: !23299)
!23353 = !DILocation(line: 1250, column: 8, scope: !23354)
!23354 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 1250, column: 6)
!23355 = !DILocation(line: 1250, column: 12, scope: !23354)
!23356 = !DILocation(line: 1250, column: 6, scope: !23299)
!23357 = !DILocation(line: 1251, column: 7, scope: !23358)
!23358 = distinct !DILexicalBlock(scope: !23354, file: !3, line: 1250, column: 35)
!23359 = !DILocation(line: 1252, column: 14, scope: !23360)
!23360 = distinct !DILexicalBlock(scope: !23358, file: !3, line: 1252, column: 7)
!23361 = !DILocation(line: 1252, column: 19, scope: !23360)
!23362 = !DILocation(line: 1252, column: 23, scope: !23360)
!23363 = !DILocation(line: 1252, column: 55, scope: !23360)
!23364 = !DILocation(line: 1252, column: 7, scope: !23360)
!23365 = !DILocation(line: 1252, column: 7, scope: !23358)
!23366 = !DILocation(line: 1253, column: 4, scope: !23360)
!23367 = !DILocation(line: 1254, column: 2, scope: !23358)
!23368 = !DILocation(line: 1255, column: 13, scope: !23369)
!23369 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 1255, column: 6)
!23370 = !DILocation(line: 1255, column: 18, scope: !23369)
!23371 = !DILocation(line: 1255, column: 22, scope: !23369)
!23372 = !DILocation(line: 1255, column: 6, scope: !23369)
!23373 = !DILocation(line: 1255, column: 6, scope: !23299)
!23374 = !DILocation(line: 1257, column: 3, scope: !23369)
!23375 = !DILocation(line: 1259, column: 2, scope: !23299)
!23376 = !DILocation(line: 1260, column: 1, scope: !23299)
!23377 = distinct !DISubprogram(name: "init_realtek_8201", scope: !3, file: !3, line: 1262, type: !8216, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23378 = !DILocalVariable(name: "dev", arg: 1, scope: !23377, file: !3, line: 1262, type: !290)
!23379 = !DILocation(line: 1262, column: 49, scope: !23377)
!23380 = !DILocalVariable(name: "np", arg: 2, scope: !23377, file: !3, line: 1262, type: !7446)
!23381 = !DILocation(line: 1262, column: 70, scope: !23377)
!23382 = !DILocalVariable(name: "phy_reserved", scope: !23377, file: !3, line: 1264, type: !987)
!23383 = !DILocation(line: 1264, column: 6, scope: !23377)
!23384 = !DILocation(line: 1266, column: 6, scope: !23385)
!23385 = distinct !DILexicalBlock(scope: !23377, file: !3, line: 1266, column: 6)
!23386 = !DILocation(line: 1266, column: 10, scope: !23385)
!23387 = !DILocation(line: 1266, column: 22, scope: !23385)
!23388 = !DILocation(line: 1266, column: 6, scope: !23377)
!23389 = !DILocation(line: 1267, column: 25, scope: !23390)
!23390 = distinct !DILexicalBlock(scope: !23385, file: !3, line: 1266, column: 47)
!23391 = !DILocation(line: 1267, column: 30, scope: !23390)
!23392 = !DILocation(line: 1267, column: 34, scope: !23390)
!23393 = !DILocation(line: 1267, column: 18, scope: !23390)
!23394 = !DILocation(line: 1267, column: 16, scope: !23390)
!23395 = !DILocation(line: 1269, column: 16, scope: !23390)
!23396 = !DILocation(line: 1270, column: 14, scope: !23397)
!23397 = distinct !DILexicalBlock(scope: !23390, file: !3, line: 1270, column: 7)
!23398 = !DILocation(line: 1270, column: 19, scope: !23397)
!23399 = !DILocation(line: 1270, column: 23, scope: !23397)
!23400 = !DILocation(line: 1271, column: 30, scope: !23397)
!23401 = !DILocation(line: 1270, column: 7, scope: !23397)
!23402 = !DILocation(line: 1270, column: 7, scope: !23390)
!23403 = !DILocation(line: 1272, column: 4, scope: !23397)
!23404 = !DILocation(line: 1273, column: 2, scope: !23390)
!23405 = !DILocation(line: 1275, column: 2, scope: !23377)
!23406 = !DILocation(line: 1276, column: 1, scope: !23377)
!23407 = distinct !DISubprogram(name: "init_cicada", scope: !3, file: !3, line: 1301, type: !23408, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23408 = !DISubroutineType(types: !23409)
!23409 = !{!32, !290, !7446, !987}
!23410 = !DILocalVariable(name: "dev", arg: 1, scope: !23407, file: !3, line: 1301, type: !290)
!23411 = !DILocation(line: 1301, column: 43, scope: !23407)
!23412 = !DILocalVariable(name: "np", arg: 2, scope: !23407, file: !3, line: 1301, type: !7446)
!23413 = !DILocation(line: 1301, column: 64, scope: !23407)
!23414 = !DILocalVariable(name: "phyinterface", arg: 3, scope: !23407, file: !3, line: 1302, type: !987)
!23415 = !DILocation(line: 1302, column: 14, scope: !23407)
!23416 = !DILocalVariable(name: "phy_reserved", scope: !23407, file: !3, line: 1304, type: !987)
!23417 = !DILocation(line: 1304, column: 6, scope: !23407)
!23418 = !DILocation(line: 1306, column: 6, scope: !23419)
!23419 = distinct !DILexicalBlock(scope: !23407, file: !3, line: 1306, column: 6)
!23420 = !DILocation(line: 1306, column: 19, scope: !23419)
!23421 = !DILocation(line: 1306, column: 6, scope: !23407)
!23422 = !DILocation(line: 1307, column: 25, scope: !23423)
!23423 = distinct !DILexicalBlock(scope: !23419, file: !3, line: 1306, column: 32)
!23424 = !DILocation(line: 1307, column: 30, scope: !23423)
!23425 = !DILocation(line: 1307, column: 34, scope: !23423)
!23426 = !DILocation(line: 1307, column: 18, scope: !23423)
!23427 = !DILocation(line: 1307, column: 16, scope: !23423)
!23428 = !DILocation(line: 1308, column: 16, scope: !23423)
!23429 = !DILocation(line: 1309, column: 16, scope: !23423)
!23430 = !DILocation(line: 1310, column: 14, scope: !23431)
!23431 = distinct !DILexicalBlock(scope: !23423, file: !3, line: 1310, column: 7)
!23432 = !DILocation(line: 1310, column: 19, scope: !23431)
!23433 = !DILocation(line: 1310, column: 23, scope: !23431)
!23434 = !DILocation(line: 1310, column: 43, scope: !23431)
!23435 = !DILocation(line: 1310, column: 7, scope: !23431)
!23436 = !DILocation(line: 1310, column: 7, scope: !23423)
!23437 = !DILocation(line: 1311, column: 4, scope: !23431)
!23438 = !DILocation(line: 1312, column: 25, scope: !23423)
!23439 = !DILocation(line: 1312, column: 30, scope: !23423)
!23440 = !DILocation(line: 1312, column: 34, scope: !23423)
!23441 = !DILocation(line: 1312, column: 18, scope: !23423)
!23442 = !DILocation(line: 1312, column: 16, scope: !23423)
!23443 = !DILocation(line: 1313, column: 16, scope: !23423)
!23444 = !DILocation(line: 1314, column: 14, scope: !23445)
!23445 = distinct !DILexicalBlock(scope: !23423, file: !3, line: 1314, column: 7)
!23446 = !DILocation(line: 1314, column: 19, scope: !23445)
!23447 = !DILocation(line: 1314, column: 23, scope: !23445)
!23448 = !DILocation(line: 1314, column: 45, scope: !23445)
!23449 = !DILocation(line: 1314, column: 7, scope: !23445)
!23450 = !DILocation(line: 1314, column: 7, scope: !23423)
!23451 = !DILocation(line: 1315, column: 4, scope: !23445)
!23452 = !DILocation(line: 1316, column: 2, scope: !23423)
!23453 = !DILocation(line: 1317, column: 24, scope: !23407)
!23454 = !DILocation(line: 1317, column: 29, scope: !23407)
!23455 = !DILocation(line: 1317, column: 33, scope: !23407)
!23456 = !DILocation(line: 1317, column: 17, scope: !23407)
!23457 = !DILocation(line: 1317, column: 15, scope: !23407)
!23458 = !DILocation(line: 1318, column: 15, scope: !23407)
!23459 = !DILocation(line: 1319, column: 13, scope: !23460)
!23460 = distinct !DILexicalBlock(scope: !23407, file: !3, line: 1319, column: 6)
!23461 = !DILocation(line: 1319, column: 18, scope: !23460)
!23462 = !DILocation(line: 1319, column: 22, scope: !23460)
!23463 = !DILocation(line: 1319, column: 46, scope: !23460)
!23464 = !DILocation(line: 1319, column: 6, scope: !23460)
!23465 = !DILocation(line: 1319, column: 6, scope: !23407)
!23466 = !DILocation(line: 1320, column: 3, scope: !23460)
!23467 = !DILocation(line: 1322, column: 2, scope: !23407)
!23468 = !DILocation(line: 1323, column: 1, scope: !23407)
!23469 = distinct !DISubprogram(name: "init_vitesse", scope: !3, file: !3, line: 1325, type: !8216, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23470 = !DILocalVariable(name: "dev", arg: 1, scope: !23469, file: !3, line: 1325, type: !290)
!23471 = !DILocation(line: 1325, column: 44, scope: !23469)
!23472 = !DILocalVariable(name: "np", arg: 2, scope: !23469, file: !3, line: 1325, type: !7446)
!23473 = !DILocation(line: 1325, column: 65, scope: !23469)
!23474 = !DILocalVariable(name: "phy_reserved", scope: !23469, file: !3, line: 1327, type: !987)
!23475 = !DILocation(line: 1327, column: 6, scope: !23469)
!23476 = !DILocation(line: 1329, column: 13, scope: !23477)
!23477 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1329, column: 6)
!23478 = !DILocation(line: 1329, column: 18, scope: !23477)
!23479 = !DILocation(line: 1329, column: 22, scope: !23477)
!23480 = !DILocation(line: 1329, column: 6, scope: !23477)
!23481 = !DILocation(line: 1329, column: 6, scope: !23469)
!23482 = !DILocation(line: 1331, column: 3, scope: !23477)
!23483 = !DILocation(line: 1332, column: 13, scope: !23484)
!23484 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1332, column: 6)
!23485 = !DILocation(line: 1332, column: 18, scope: !23484)
!23486 = !DILocation(line: 1332, column: 22, scope: !23484)
!23487 = !DILocation(line: 1332, column: 6, scope: !23484)
!23488 = !DILocation(line: 1332, column: 6, scope: !23469)
!23489 = !DILocation(line: 1334, column: 3, scope: !23484)
!23490 = !DILocation(line: 1335, column: 24, scope: !23469)
!23491 = !DILocation(line: 1335, column: 29, scope: !23469)
!23492 = !DILocation(line: 1335, column: 33, scope: !23469)
!23493 = !DILocation(line: 1335, column: 17, scope: !23469)
!23494 = !DILocation(line: 1335, column: 15, scope: !23469)
!23495 = !DILocation(line: 1337, column: 13, scope: !23496)
!23496 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1337, column: 6)
!23497 = !DILocation(line: 1337, column: 18, scope: !23496)
!23498 = !DILocation(line: 1337, column: 22, scope: !23496)
!23499 = !DILocation(line: 1337, column: 54, scope: !23496)
!23500 = !DILocation(line: 1337, column: 6, scope: !23496)
!23501 = !DILocation(line: 1337, column: 6, scope: !23469)
!23502 = !DILocation(line: 1338, column: 3, scope: !23496)
!23503 = !DILocation(line: 1339, column: 24, scope: !23469)
!23504 = !DILocation(line: 1339, column: 29, scope: !23469)
!23505 = !DILocation(line: 1339, column: 33, scope: !23469)
!23506 = !DILocation(line: 1339, column: 17, scope: !23469)
!23507 = !DILocation(line: 1339, column: 15, scope: !23469)
!23508 = !DILocation(line: 1341, column: 15, scope: !23469)
!23509 = !DILocation(line: 1342, column: 15, scope: !23469)
!23510 = !DILocation(line: 1343, column: 13, scope: !23511)
!23511 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1343, column: 6)
!23512 = !DILocation(line: 1343, column: 18, scope: !23511)
!23513 = !DILocation(line: 1343, column: 22, scope: !23511)
!23514 = !DILocation(line: 1343, column: 54, scope: !23511)
!23515 = !DILocation(line: 1343, column: 6, scope: !23511)
!23516 = !DILocation(line: 1343, column: 6, scope: !23469)
!23517 = !DILocation(line: 1344, column: 3, scope: !23511)
!23518 = !DILocation(line: 1345, column: 13, scope: !23519)
!23519 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1345, column: 6)
!23520 = !DILocation(line: 1345, column: 18, scope: !23519)
!23521 = !DILocation(line: 1345, column: 22, scope: !23519)
!23522 = !DILocation(line: 1345, column: 6, scope: !23519)
!23523 = !DILocation(line: 1345, column: 6, scope: !23469)
!23524 = !DILocation(line: 1347, column: 3, scope: !23519)
!23525 = !DILocation(line: 1348, column: 13, scope: !23526)
!23526 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1348, column: 6)
!23527 = !DILocation(line: 1348, column: 18, scope: !23526)
!23528 = !DILocation(line: 1348, column: 22, scope: !23526)
!23529 = !DILocation(line: 1348, column: 6, scope: !23526)
!23530 = !DILocation(line: 1348, column: 6, scope: !23469)
!23531 = !DILocation(line: 1350, column: 3, scope: !23526)
!23532 = !DILocation(line: 1351, column: 24, scope: !23469)
!23533 = !DILocation(line: 1351, column: 29, scope: !23469)
!23534 = !DILocation(line: 1351, column: 33, scope: !23469)
!23535 = !DILocation(line: 1351, column: 17, scope: !23469)
!23536 = !DILocation(line: 1351, column: 15, scope: !23469)
!23537 = !DILocation(line: 1353, column: 15, scope: !23469)
!23538 = !DILocation(line: 1354, column: 15, scope: !23469)
!23539 = !DILocation(line: 1355, column: 13, scope: !23540)
!23540 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1355, column: 6)
!23541 = !DILocation(line: 1355, column: 18, scope: !23540)
!23542 = !DILocation(line: 1355, column: 22, scope: !23540)
!23543 = !DILocation(line: 1355, column: 54, scope: !23540)
!23544 = !DILocation(line: 1355, column: 6, scope: !23540)
!23545 = !DILocation(line: 1355, column: 6, scope: !23469)
!23546 = !DILocation(line: 1356, column: 3, scope: !23540)
!23547 = !DILocation(line: 1357, column: 24, scope: !23469)
!23548 = !DILocation(line: 1357, column: 29, scope: !23469)
!23549 = !DILocation(line: 1357, column: 33, scope: !23469)
!23550 = !DILocation(line: 1357, column: 17, scope: !23469)
!23551 = !DILocation(line: 1357, column: 15, scope: !23469)
!23552 = !DILocation(line: 1359, column: 13, scope: !23553)
!23553 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1359, column: 6)
!23554 = !DILocation(line: 1359, column: 18, scope: !23553)
!23555 = !DILocation(line: 1359, column: 22, scope: !23553)
!23556 = !DILocation(line: 1359, column: 54, scope: !23553)
!23557 = !DILocation(line: 1359, column: 6, scope: !23553)
!23558 = !DILocation(line: 1359, column: 6, scope: !23469)
!23559 = !DILocation(line: 1360, column: 3, scope: !23553)
!23560 = !DILocation(line: 1361, column: 13, scope: !23561)
!23561 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1361, column: 6)
!23562 = !DILocation(line: 1361, column: 18, scope: !23561)
!23563 = !DILocation(line: 1361, column: 22, scope: !23561)
!23564 = !DILocation(line: 1361, column: 6, scope: !23561)
!23565 = !DILocation(line: 1361, column: 6, scope: !23469)
!23566 = !DILocation(line: 1363, column: 3, scope: !23561)
!23567 = !DILocation(line: 1364, column: 13, scope: !23568)
!23568 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1364, column: 6)
!23569 = !DILocation(line: 1364, column: 18, scope: !23568)
!23570 = !DILocation(line: 1364, column: 22, scope: !23568)
!23571 = !DILocation(line: 1364, column: 6, scope: !23568)
!23572 = !DILocation(line: 1364, column: 6, scope: !23469)
!23573 = !DILocation(line: 1366, column: 3, scope: !23568)
!23574 = !DILocation(line: 1367, column: 24, scope: !23469)
!23575 = !DILocation(line: 1367, column: 29, scope: !23469)
!23576 = !DILocation(line: 1367, column: 33, scope: !23469)
!23577 = !DILocation(line: 1367, column: 17, scope: !23469)
!23578 = !DILocation(line: 1367, column: 15, scope: !23469)
!23579 = !DILocation(line: 1369, column: 13, scope: !23580)
!23580 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1369, column: 6)
!23581 = !DILocation(line: 1369, column: 18, scope: !23580)
!23582 = !DILocation(line: 1369, column: 22, scope: !23580)
!23583 = !DILocation(line: 1369, column: 54, scope: !23580)
!23584 = !DILocation(line: 1369, column: 6, scope: !23580)
!23585 = !DILocation(line: 1369, column: 6, scope: !23469)
!23586 = !DILocation(line: 1370, column: 3, scope: !23580)
!23587 = !DILocation(line: 1371, column: 24, scope: !23469)
!23588 = !DILocation(line: 1371, column: 29, scope: !23469)
!23589 = !DILocation(line: 1371, column: 33, scope: !23469)
!23590 = !DILocation(line: 1371, column: 17, scope: !23469)
!23591 = !DILocation(line: 1371, column: 15, scope: !23469)
!23592 = !DILocation(line: 1373, column: 15, scope: !23469)
!23593 = !DILocation(line: 1374, column: 15, scope: !23469)
!23594 = !DILocation(line: 1375, column: 13, scope: !23595)
!23595 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1375, column: 6)
!23596 = !DILocation(line: 1375, column: 18, scope: !23595)
!23597 = !DILocation(line: 1375, column: 22, scope: !23595)
!23598 = !DILocation(line: 1375, column: 54, scope: !23595)
!23599 = !DILocation(line: 1375, column: 6, scope: !23595)
!23600 = !DILocation(line: 1375, column: 6, scope: !23469)
!23601 = !DILocation(line: 1376, column: 3, scope: !23595)
!23602 = !DILocation(line: 1377, column: 13, scope: !23603)
!23603 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1377, column: 6)
!23604 = !DILocation(line: 1377, column: 18, scope: !23603)
!23605 = !DILocation(line: 1377, column: 22, scope: !23603)
!23606 = !DILocation(line: 1377, column: 6, scope: !23603)
!23607 = !DILocation(line: 1377, column: 6, scope: !23469)
!23608 = !DILocation(line: 1379, column: 3, scope: !23603)
!23609 = !DILocation(line: 1380, column: 13, scope: !23610)
!23610 = distinct !DILexicalBlock(scope: !23469, file: !3, line: 1380, column: 6)
!23611 = !DILocation(line: 1380, column: 18, scope: !23610)
!23612 = !DILocation(line: 1380, column: 22, scope: !23610)
!23613 = !DILocation(line: 1380, column: 6, scope: !23610)
!23614 = !DILocation(line: 1380, column: 6, scope: !23469)
!23615 = !DILocation(line: 1382, column: 3, scope: !23610)
!23616 = !DILocation(line: 1384, column: 2, scope: !23469)
!23617 = !DILocation(line: 1385, column: 1, scope: !23469)
!23618 = distinct !DISubprogram(name: "init_realtek_8201_cross", scope: !3, file: !3, line: 1278, type: !8216, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23619 = !DILocalVariable(name: "dev", arg: 1, scope: !23618, file: !3, line: 1278, type: !290)
!23620 = !DILocation(line: 1278, column: 55, scope: !23618)
!23621 = !DILocalVariable(name: "np", arg: 2, scope: !23618, file: !3, line: 1278, type: !7446)
!23622 = !DILocation(line: 1278, column: 76, scope: !23618)
!23623 = !DILocalVariable(name: "phy_reserved", scope: !23618, file: !3, line: 1280, type: !987)
!23624 = !DILocation(line: 1280, column: 6, scope: !23618)
!23625 = !DILocation(line: 1282, column: 6, scope: !23626)
!23626 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 1282, column: 6)
!23627 = !DILocation(line: 1282, column: 16, scope: !23626)
!23628 = !DILocation(line: 1282, column: 6, scope: !23618)
!23629 = !DILocation(line: 1283, column: 14, scope: !23630)
!23630 = distinct !DILexicalBlock(scope: !23631, file: !3, line: 1283, column: 7)
!23631 = distinct !DILexicalBlock(scope: !23626, file: !3, line: 1282, column: 52)
!23632 = !DILocation(line: 1283, column: 19, scope: !23630)
!23633 = !DILocation(line: 1283, column: 23, scope: !23630)
!23634 = !DILocation(line: 1283, column: 7, scope: !23630)
!23635 = !DILocation(line: 1283, column: 7, scope: !23631)
!23636 = !DILocation(line: 1285, column: 4, scope: !23630)
!23637 = !DILocation(line: 1286, column: 25, scope: !23631)
!23638 = !DILocation(line: 1286, column: 30, scope: !23631)
!23639 = !DILocation(line: 1286, column: 34, scope: !23631)
!23640 = !DILocation(line: 1286, column: 18, scope: !23631)
!23641 = !DILocation(line: 1286, column: 16, scope: !23631)
!23642 = !DILocation(line: 1288, column: 16, scope: !23631)
!23643 = !DILocation(line: 1289, column: 16, scope: !23631)
!23644 = !DILocation(line: 1290, column: 14, scope: !23645)
!23645 = distinct !DILexicalBlock(scope: !23631, file: !3, line: 1290, column: 7)
!23646 = !DILocation(line: 1290, column: 19, scope: !23645)
!23647 = !DILocation(line: 1290, column: 23, scope: !23645)
!23648 = !DILocation(line: 1291, column: 30, scope: !23645)
!23649 = !DILocation(line: 1290, column: 7, scope: !23645)
!23650 = !DILocation(line: 1290, column: 7, scope: !23631)
!23651 = !DILocation(line: 1292, column: 4, scope: !23645)
!23652 = !DILocation(line: 1293, column: 14, scope: !23653)
!23653 = distinct !DILexicalBlock(scope: !23631, file: !3, line: 1293, column: 7)
!23654 = !DILocation(line: 1293, column: 19, scope: !23653)
!23655 = !DILocation(line: 1293, column: 23, scope: !23653)
!23656 = !DILocation(line: 1293, column: 7, scope: !23653)
!23657 = !DILocation(line: 1293, column: 7, scope: !23631)
!23658 = !DILocation(line: 1295, column: 4, scope: !23653)
!23659 = !DILocation(line: 1296, column: 2, scope: !23631)
!23660 = !DILocation(line: 1298, column: 2, scope: !23618)
!23661 = !DILocation(line: 1299, column: 1, scope: !23618)
!23662 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !7053, file: !7053, line: 1865, type: !23663, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23663 = !DISubroutineType(types: !23664)
!23664 = !{!591, !7531}
!23665 = !DILocalVariable(name: "pdev", arg: 1, scope: !23662, file: !7053, line: 1865, type: !7531)
!23666 = !DILocation(line: 1865, column: 53, scope: !23662)
!23667 = !DILocation(line: 1867, column: 26, scope: !23662)
!23668 = !DILocation(line: 1867, column: 32, scope: !23662)
!23669 = !DILocation(line: 1867, column: 9, scope: !23662)
!23670 = !DILocation(line: 1867, column: 2, scope: !23662)
!23671 = distinct !DISubprogram(name: "nv_restore_mac_addr", scope: !3, file: !3, line: 6181, type: !7658, scopeLine: 6182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23672 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !23671, file: !3, line: 6181, type: !7531)
!23673 = !DILocation(line: 6181, column: 49, scope: !23671)
!23674 = !DILocalVariable(name: "dev", scope: !23671, file: !3, line: 6183, type: !290)
!23675 = !DILocation(line: 6183, column: 21, scope: !23671)
!23676 = !DILocation(line: 6183, column: 43, scope: !23671)
!23677 = !DILocation(line: 6183, column: 27, scope: !23671)
!23678 = !DILocalVariable(name: "np", scope: !23671, file: !3, line: 6184, type: !7446)
!23679 = !DILocation(line: 6184, column: 18, scope: !23671)
!23680 = !DILocation(line: 6184, column: 35, scope: !23671)
!23681 = !DILocation(line: 6184, column: 23, scope: !23671)
!23682 = !DILocalVariable(name: "base", scope: !23671, file: !3, line: 6185, type: !793)
!23683 = !DILocation(line: 6185, column: 14, scope: !23671)
!23684 = !DILocation(line: 6185, column: 32, scope: !23671)
!23685 = !DILocation(line: 6185, column: 21, scope: !23671)
!23686 = !DILocation(line: 6190, column: 9, scope: !23671)
!23687 = !DILocation(line: 6190, column: 13, scope: !23671)
!23688 = !DILocation(line: 6190, column: 26, scope: !23671)
!23689 = !DILocation(line: 6190, column: 31, scope: !23671)
!23690 = !DILocation(line: 6190, column: 2, scope: !23671)
!23691 = !DILocation(line: 6191, column: 9, scope: !23671)
!23692 = !DILocation(line: 6191, column: 13, scope: !23671)
!23693 = !DILocation(line: 6191, column: 26, scope: !23671)
!23694 = !DILocation(line: 6191, column: 31, scope: !23671)
!23695 = !DILocation(line: 6191, column: 2, scope: !23671)
!23696 = !DILocation(line: 6192, column: 15, scope: !23671)
!23697 = !DILocation(line: 6192, column: 20, scope: !23671)
!23698 = !DILocation(line: 6192, column: 9, scope: !23671)
!23699 = !DILocation(line: 6192, column: 41, scope: !23671)
!23700 = !DILocation(line: 6193, column: 9, scope: !23671)
!23701 = !DILocation(line: 6193, column: 14, scope: !23671)
!23702 = !DILocation(line: 6192, column: 2, scope: !23671)
!23703 = !DILocation(line: 6194, column: 1, scope: !23671)
!23704 = distinct !DISubprogram(name: "nv_restore_phy", scope: !3, file: !3, line: 6159, type: !406, scopeLine: 6160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23705 = !DILocalVariable(name: "dev", arg: 1, scope: !23704, file: !3, line: 6159, type: !290)
!23706 = !DILocation(line: 6159, column: 47, scope: !23704)
!23707 = !DILocalVariable(name: "np", scope: !23704, file: !3, line: 6161, type: !7446)
!23708 = !DILocation(line: 6161, column: 18, scope: !23704)
!23709 = !DILocation(line: 6161, column: 35, scope: !23704)
!23710 = !DILocation(line: 6161, column: 23, scope: !23704)
!23711 = !DILocalVariable(name: "phy_reserved", scope: !23704, file: !3, line: 6162, type: !581)
!23712 = !DILocation(line: 6162, column: 6, scope: !23704)
!23713 = !DILocalVariable(name: "mii_control", scope: !23704, file: !3, line: 6162, type: !581)
!23714 = !DILocation(line: 6162, column: 20, scope: !23704)
!23715 = !DILocation(line: 6164, column: 6, scope: !23716)
!23716 = distinct !DILexicalBlock(scope: !23704, file: !3, line: 6164, column: 6)
!23717 = !DILocation(line: 6164, column: 10, scope: !23716)
!23718 = !DILocation(line: 6164, column: 18, scope: !23716)
!23719 = !DILocation(line: 6164, column: 37, scope: !23716)
!23720 = !DILocation(line: 6165, column: 6, scope: !23716)
!23721 = !DILocation(line: 6165, column: 10, scope: !23716)
!23722 = !DILocation(line: 6165, column: 20, scope: !23716)
!23723 = !DILocation(line: 6165, column: 46, scope: !23716)
!23724 = !DILocation(line: 6166, column: 6, scope: !23716)
!23725 = !DILocation(line: 6166, column: 16, scope: !23716)
!23726 = !DILocation(line: 6164, column: 6, scope: !23704)
!23727 = !DILocation(line: 6167, column: 10, scope: !23728)
!23728 = distinct !DILexicalBlock(scope: !23716, file: !3, line: 6166, column: 52)
!23729 = !DILocation(line: 6167, column: 15, scope: !23728)
!23730 = !DILocation(line: 6167, column: 19, scope: !23728)
!23731 = !DILocation(line: 6167, column: 3, scope: !23728)
!23732 = !DILocation(line: 6168, column: 25, scope: !23728)
!23733 = !DILocation(line: 6168, column: 30, scope: !23728)
!23734 = !DILocation(line: 6168, column: 34, scope: !23728)
!23735 = !DILocation(line: 6168, column: 18, scope: !23728)
!23736 = !DILocation(line: 6168, column: 16, scope: !23728)
!23737 = !DILocation(line: 6169, column: 16, scope: !23728)
!23738 = !DILocation(line: 6170, column: 16, scope: !23728)
!23739 = !DILocation(line: 6171, column: 10, scope: !23728)
!23740 = !DILocation(line: 6171, column: 15, scope: !23728)
!23741 = !DILocation(line: 6171, column: 19, scope: !23728)
!23742 = !DILocation(line: 6171, column: 51, scope: !23728)
!23743 = !DILocation(line: 6171, column: 3, scope: !23728)
!23744 = !DILocation(line: 6172, column: 10, scope: !23728)
!23745 = !DILocation(line: 6172, column: 15, scope: !23728)
!23746 = !DILocation(line: 6172, column: 19, scope: !23728)
!23747 = !DILocation(line: 6172, column: 3, scope: !23728)
!23748 = !DILocation(line: 6175, column: 24, scope: !23728)
!23749 = !DILocation(line: 6175, column: 29, scope: !23728)
!23750 = !DILocation(line: 6175, column: 33, scope: !23728)
!23751 = !DILocation(line: 6175, column: 17, scope: !23728)
!23752 = !DILocation(line: 6175, column: 15, scope: !23728)
!23753 = !DILocation(line: 6176, column: 15, scope: !23728)
!23754 = !DILocation(line: 6177, column: 10, scope: !23728)
!23755 = !DILocation(line: 6177, column: 15, scope: !23728)
!23756 = !DILocation(line: 6177, column: 19, scope: !23728)
!23757 = !DILocation(line: 6177, column: 38, scope: !23728)
!23758 = !DILocation(line: 6177, column: 3, scope: !23728)
!23759 = !DILocation(line: 6178, column: 2, scope: !23728)
!23760 = !DILocation(line: 6179, column: 1, scope: !23704)
!23761 = distinct !DISubprogram(name: "nv_mgmt_release_sema", scope: !3, file: !3, line: 5411, type: !406, scopeLine: 5412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23762 = !DILocalVariable(name: "dev", arg: 1, scope: !23761, file: !3, line: 5411, type: !290)
!23763 = !DILocation(line: 5411, column: 53, scope: !23761)
!23764 = !DILocalVariable(name: "np", scope: !23761, file: !3, line: 5413, type: !7446)
!23765 = !DILocation(line: 5413, column: 18, scope: !23761)
!23766 = !DILocation(line: 5413, column: 35, scope: !23761)
!23767 = !DILocation(line: 5413, column: 23, scope: !23761)
!23768 = !DILocalVariable(name: "base", scope: !23761, file: !3, line: 5414, type: !793)
!23769 = !DILocation(line: 5414, column: 14, scope: !23761)
!23770 = !DILocation(line: 5414, column: 32, scope: !23761)
!23771 = !DILocation(line: 5414, column: 21, scope: !23761)
!23772 = !DILocalVariable(name: "tx_ctrl", scope: !23761, file: !3, line: 5415, type: !987)
!23773 = !DILocation(line: 5415, column: 6, scope: !23761)
!23774 = !DILocation(line: 5417, column: 6, scope: !23775)
!23775 = distinct !DILexicalBlock(scope: !23761, file: !3, line: 5417, column: 6)
!23776 = !DILocation(line: 5417, column: 10, scope: !23775)
!23777 = !DILocation(line: 5417, column: 22, scope: !23775)
!23778 = !DILocation(line: 5417, column: 6, scope: !23761)
!23779 = !DILocation(line: 5418, column: 7, scope: !23780)
!23780 = distinct !DILexicalBlock(scope: !23781, file: !3, line: 5418, column: 7)
!23781 = distinct !DILexicalBlock(scope: !23775, file: !3, line: 5417, column: 43)
!23782 = !DILocation(line: 5418, column: 11, scope: !23780)
!23783 = !DILocation(line: 5418, column: 7, scope: !23781)
!23784 = !DILocation(line: 5419, column: 20, scope: !23785)
!23785 = distinct !DILexicalBlock(scope: !23780, file: !3, line: 5418, column: 22)
!23786 = !DILocation(line: 5419, column: 25, scope: !23785)
!23787 = !DILocation(line: 5419, column: 14, scope: !23785)
!23788 = !DILocation(line: 5419, column: 12, scope: !23785)
!23789 = !DILocation(line: 5420, column: 12, scope: !23785)
!23790 = !DILocation(line: 5421, column: 11, scope: !23785)
!23791 = !DILocation(line: 5421, column: 20, scope: !23785)
!23792 = !DILocation(line: 5421, column: 25, scope: !23785)
!23793 = !DILocation(line: 5421, column: 4, scope: !23785)
!23794 = !DILocation(line: 5422, column: 3, scope: !23785)
!23795 = !DILocation(line: 5423, column: 2, scope: !23781)
!23796 = !DILocation(line: 5424, column: 1, scope: !23761)
!23797 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !6541, file: !6541, line: 655, type: !23798, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23798 = !DISubroutineType(types: !23799)
!23799 = !{!591, !6891}
!23800 = !DILocalVariable(name: "dev", arg: 1, scope: !23797, file: !6541, line: 655, type: !6891)
!23801 = !DILocation(line: 655, column: 58, scope: !23797)
!23802 = !DILocation(line: 657, column: 9, scope: !23797)
!23803 = !DILocation(line: 657, column: 14, scope: !23797)
!23804 = !DILocation(line: 657, column: 2, scope: !23797)
!23805 = distinct !DISubprogram(name: "nv_suspend", scope: !3, file: !3, line: 6221, type: !6578, scopeLine: 6222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23806 = !DILocalVariable(name: "device", arg: 1, scope: !23805, file: !3, line: 6221, type: !6545)
!23807 = !DILocation(line: 6221, column: 38, scope: !23805)
!23808 = !DILocalVariable(name: "dev", scope: !23805, file: !3, line: 6223, type: !290)
!23809 = !DILocation(line: 6223, column: 21, scope: !23805)
!23810 = !DILocation(line: 6223, column: 43, scope: !23805)
!23811 = !DILocation(line: 6223, column: 27, scope: !23805)
!23812 = !DILocalVariable(name: "np", scope: !23805, file: !3, line: 6224, type: !7446)
!23813 = !DILocation(line: 6224, column: 18, scope: !23805)
!23814 = !DILocation(line: 6224, column: 35, scope: !23805)
!23815 = !DILocation(line: 6224, column: 23, scope: !23805)
!23816 = !DILocalVariable(name: "base", scope: !23805, file: !3, line: 6225, type: !793)
!23817 = !DILocation(line: 6225, column: 14, scope: !23805)
!23818 = !DILocation(line: 6225, column: 32, scope: !23805)
!23819 = !DILocation(line: 6225, column: 21, scope: !23805)
!23820 = !DILocalVariable(name: "i", scope: !23805, file: !3, line: 6226, type: !32)
!23821 = !DILocation(line: 6226, column: 6, scope: !23805)
!23822 = !DILocation(line: 6228, column: 20, scope: !23823)
!23823 = distinct !DILexicalBlock(scope: !23805, file: !3, line: 6228, column: 6)
!23824 = !DILocation(line: 6228, column: 6, scope: !23823)
!23825 = !DILocation(line: 6228, column: 6, scope: !23805)
!23826 = !DILocation(line: 6230, column: 12, scope: !23827)
!23827 = distinct !DILexicalBlock(scope: !23823, file: !3, line: 6228, column: 26)
!23828 = !DILocation(line: 6230, column: 3, scope: !23827)
!23829 = !DILocation(line: 6231, column: 2, scope: !23827)
!23830 = !DILocation(line: 6232, column: 22, scope: !23805)
!23831 = !DILocation(line: 6232, column: 2, scope: !23805)
!23832 = !DILocation(line: 6235, column: 9, scope: !23833)
!23833 = distinct !DILexicalBlock(scope: !23805, file: !3, line: 6235, column: 2)
!23834 = !DILocation(line: 6235, column: 7, scope: !23833)
!23835 = !DILocation(line: 6235, column: 14, scope: !23836)
!23836 = distinct !DILexicalBlock(scope: !23833, file: !3, line: 6235, column: 2)
!23837 = !DILocation(line: 6235, column: 19, scope: !23836)
!23838 = !DILocation(line: 6235, column: 23, scope: !23836)
!23839 = !DILocation(line: 6235, column: 36, scope: !23836)
!23840 = !DILocation(line: 6235, column: 16, scope: !23836)
!23841 = !DILocation(line: 6235, column: 2, scope: !23833)
!23842 = !DILocation(line: 6236, column: 37, scope: !23836)
!23843 = !DILocation(line: 6236, column: 44, scope: !23836)
!23844 = !DILocation(line: 6236, column: 45, scope: !23836)
!23845 = !DILocation(line: 6236, column: 42, scope: !23836)
!23846 = !DILocation(line: 6236, column: 31, scope: !23836)
!23847 = !DILocation(line: 6236, column: 3, scope: !23836)
!23848 = !DILocation(line: 6236, column: 7, scope: !23836)
!23849 = !DILocation(line: 6236, column: 26, scope: !23836)
!23850 = !DILocation(line: 6236, column: 29, scope: !23836)
!23851 = !DILocation(line: 6235, column: 51, scope: !23836)
!23852 = !DILocation(line: 6235, column: 2, scope: !23836)
!23853 = distinct !{!23853, !23841, !23854}
!23854 = !DILocation(line: 6236, column: 57, scope: !23833)
!23855 = !DILocation(line: 6238, column: 2, scope: !23805)
!23856 = distinct !DISubprogram(name: "nv_resume", scope: !3, file: !3, line: 6241, type: !6578, scopeLine: 6242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!23857 = !DILocalVariable(name: "device", arg: 1, scope: !23856, file: !3, line: 6241, type: !6545)
!23858 = !DILocation(line: 6241, column: 37, scope: !23856)
!23859 = !DILocalVariable(name: "pdev", scope: !23856, file: !3, line: 6243, type: !7531)
!23860 = !DILocation(line: 6243, column: 18, scope: !23856)
!23861 = !DILocalVariable(name: "__mptr", scope: !23862, file: !3, line: 6243, type: !591)
!23862 = distinct !DILexicalBlock(scope: !23856, file: !3, line: 6243, column: 25)
!23863 = !DILocation(line: 6243, column: 25, scope: !23862)
!23864 = !DILocation(line: 6243, column: 25, scope: !23865)
!23865 = distinct !DILexicalBlock(scope: !23862, file: !3, line: 6243, column: 25)
!23866 = !DILocalVariable(name: "dev", scope: !23856, file: !3, line: 6244, type: !290)
!23867 = !DILocation(line: 6244, column: 21, scope: !23856)
!23868 = !DILocation(line: 6244, column: 43, scope: !23856)
!23869 = !DILocation(line: 6244, column: 27, scope: !23856)
!23870 = !DILocalVariable(name: "np", scope: !23856, file: !3, line: 6245, type: !7446)
!23871 = !DILocation(line: 6245, column: 18, scope: !23856)
!23872 = !DILocation(line: 6245, column: 35, scope: !23856)
!23873 = !DILocation(line: 6245, column: 23, scope: !23856)
!23874 = !DILocalVariable(name: "base", scope: !23856, file: !3, line: 6246, type: !793)
!23875 = !DILocation(line: 6246, column: 14, scope: !23856)
!23876 = !DILocation(line: 6246, column: 32, scope: !23856)
!23877 = !DILocation(line: 6246, column: 21, scope: !23856)
!23878 = !DILocalVariable(name: "i", scope: !23856, file: !3, line: 6247, type: !32)
!23879 = !DILocation(line: 6247, column: 6, scope: !23856)
!23880 = !DILocalVariable(name: "rc", scope: !23856, file: !3, line: 6247, type: !32)
!23881 = !DILocation(line: 6247, column: 9, scope: !23856)
!23882 = !DILocation(line: 6250, column: 9, scope: !23883)
!23883 = distinct !DILexicalBlock(scope: !23856, file: !3, line: 6250, column: 2)
!23884 = !DILocation(line: 6250, column: 7, scope: !23883)
!23885 = !DILocation(line: 6250, column: 14, scope: !23886)
!23886 = distinct !DILexicalBlock(scope: !23883, file: !3, line: 6250, column: 2)
!23887 = !DILocation(line: 6250, column: 19, scope: !23886)
!23888 = !DILocation(line: 6250, column: 23, scope: !23886)
!23889 = !DILocation(line: 6250, column: 36, scope: !23886)
!23890 = !DILocation(line: 6250, column: 16, scope: !23886)
!23891 = !DILocation(line: 6250, column: 2, scope: !23883)
!23892 = !DILocation(line: 6251, column: 10, scope: !23886)
!23893 = !DILocation(line: 6251, column: 14, scope: !23886)
!23894 = !DILocation(line: 6251, column: 33, scope: !23886)
!23895 = !DILocation(line: 6251, column: 37, scope: !23886)
!23896 = !DILocation(line: 6251, column: 42, scope: !23886)
!23897 = !DILocation(line: 6251, column: 43, scope: !23886)
!23898 = !DILocation(line: 6251, column: 41, scope: !23886)
!23899 = !DILocation(line: 6251, column: 3, scope: !23886)
!23900 = !DILocation(line: 6250, column: 51, scope: !23886)
!23901 = !DILocation(line: 6250, column: 2, scope: !23886)
!23902 = distinct !{!23902, !23891, !23903}
!23903 = !DILocation(line: 6251, column: 55, scope: !23883)
!23904 = !DILocation(line: 6253, column: 6, scope: !23905)
!23905 = distinct !DILexicalBlock(scope: !23856, file: !3, line: 6253, column: 6)
!23906 = !DILocation(line: 6253, column: 10, scope: !23905)
!23907 = !DILocation(line: 6253, column: 22, scope: !23905)
!23908 = !DILocation(line: 6253, column: 6, scope: !23856)
!23909 = !DILocation(line: 6254, column: 26, scope: !23905)
!23910 = !DILocation(line: 6254, column: 3, scope: !23905)
!23911 = !DILocation(line: 6257, column: 11, scope: !23856)
!23912 = !DILocation(line: 6257, column: 2, scope: !23856)
!23913 = !DILocation(line: 6259, column: 22, scope: !23856)
!23914 = !DILocation(line: 6259, column: 2, scope: !23856)
!23915 = !DILocation(line: 6260, column: 20, scope: !23916)
!23916 = distinct !DILexicalBlock(scope: !23856, file: !3, line: 6260, column: 6)
!23917 = !DILocation(line: 6260, column: 6, scope: !23916)
!23918 = !DILocation(line: 6260, column: 6, scope: !23856)
!23919 = !DILocation(line: 6261, column: 16, scope: !23920)
!23920 = distinct !DILexicalBlock(scope: !23916, file: !3, line: 6260, column: 26)
!23921 = !DILocation(line: 6261, column: 8, scope: !23920)
!23922 = !DILocation(line: 6261, column: 6, scope: !23920)
!23923 = !DILocation(line: 6262, column: 20, scope: !23920)
!23924 = !DILocation(line: 6262, column: 3, scope: !23920)
!23925 = !DILocation(line: 6263, column: 2, scope: !23920)
!23926 = !DILocation(line: 6264, column: 9, scope: !23856)
!23927 = !DILocation(line: 6264, column: 2, scope: !23856)
