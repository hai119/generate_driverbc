; ModuleID = '../bcout/drivers/net/ethernet/mellanox/mlx5/core/eswitch.llvm.bc'
source_filename = "drivers/net/ethernet/mellanox/mlx5/core/eswitch.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.lock_class_key = type {}
%struct.kmem_cache = type opaque
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.123, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.2, %union.anon.130, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.132, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.133, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.134, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.137, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.140, %struct.list_head, %struct.list_head, %union.anon.141 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.138 }
%union.anon.138 = type { %struct.anon.139 }
%struct.anon.139 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.140 = type { %struct.list_head }
%union.anon.141 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.131, i32 }
%union.anon.131 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.64, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.93, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.96, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.38, %union.anon.40, %union.anon.41, i16, i8, i8, i32, %union.anon.43, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.60, [0 x i32], %union.anon.61, i16, %union.anon.62, %struct.refcount_struct, [0 x i32], %union.anon.63 }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i32 }
%union.anon.41 = type { i32 }
%union.anon.43 = type { %struct.hlist_node }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.175, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.191, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.175 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.176, %union.anon.177 }
%union.anon.176 = type { [16 x i8] }
%union.anon.177 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.94 }
%union.anon.94 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.179 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.179 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type { i16, i16, i16, i8 }
%struct.netdev_bpf = type { i32, %union.anon.180 }
%union.anon.180 = type { %struct.anon.181 }
%struct.anon.181 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink*, i32, i8, %struct.spinlock, i32, i32, i8*, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex }
%struct.devlink = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.devlink_dpipe_headers*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink_ops*, %struct.xarray, %struct.devlink_dev_stats, %struct.device*, %struct.possible_net_t, %struct.mutex, i8, [31 x i8], [0 x i8] }
%struct.devlink_dpipe_headers = type { %struct.devlink_dpipe_header**, i32 }
%struct.devlink_dpipe_header = type { i8*, i32, %struct.devlink_dpipe_field*, i32, i8 }
%struct.devlink_dpipe_field = type { i8*, i32, i32, i32 }
%struct.devlink_ops = type { i32, i64, i64, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32)*, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.devlink*, i16*)*, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i8*)*, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)*, void (%struct.devlink*, %struct.devlink_trap*, i8*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*)*, void (%struct.devlink*, %struct.devlink_trap_policer*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* }
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_info_req = type opaque
%struct.devlink_flash_update_params = type { i8*, i8*, i32 }
%struct.devlink_trap = type { i32, i32, i8, i16, i8*, i16, i32 }
%struct.devlink_trap_group = type { i8*, i16, i8, i32 }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.163 }
%union.anon.163 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.ip_tunnel_parm = type { [16 x i8], i32, i16, i16, i32, i32, %struct.iphdr }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.184 }
%union.anon.184 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.185, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.185 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.186 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.186 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type { i8, i8, i8, i8, i32, i32, i32, %struct.in6_addr }
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.fib6_info = type { %struct.fib6_table*, %struct.fib6_info*, %struct.fib6_node*, %union.anon.100, i32, %struct.refcount_struct, i64, %struct.dst_metrics*, %struct.rt6key, i32, %struct.rt6key, %struct.rt6key, i32, i8, i8, i8, %struct.callback_head, %struct.nexthop*, [0 x %struct.fib6_nh] }
%struct.fib6_table = type { %struct.hlist_node, i32, %struct.spinlock, %struct.fib6_node, %struct.inet_peer_base, i32, i32 }
%struct.fib6_node = type { %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_info*, i16, i16, i32, %struct.fib6_info*, %struct.callback_head }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%union.anon.100 = type { %struct.list_head }
%struct.dst_metrics = type { [17 x i32], %struct.refcount_struct }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.nexthop = type { %struct.rb_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.net*, i32, i8, i8, i8, %struct.refcount_struct, %struct.callback_head, %union.anon.101 }
%union.anon.101 = type { %struct.nh_info* }
%struct.nh_info = type { %struct.hlist_node, %struct.nexthop*, i8, i8, i8, %union.anon.102 }
%union.anon.102 = type { %struct.fib_nh }
%struct.fib_nh = type { %struct.fib_nh_common, %struct.hlist_node, %struct.fib_info*, i32, i32 }
%struct.fib_nh_common = type { %struct.net_device*, i32, i8, i8, i8, i8, %struct.lwtunnel_state*, %union.anon.103, i32, %struct.atomic_t, %struct.rtable**, %struct.rtable*, %struct.fnhe_hash_bucket* }
%struct.lwtunnel_state = type { i16, i16, i16, %struct.atomic_t, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.sk_buff*)*, %struct.callback_head, [0 x i8] }
%union.anon.103 = type { %struct.in6_addr }
%struct.rtable = type { %struct.dst_entry, i32, i32, i16, i8, i8, i32, i8, %union.anon.104, i32, %struct.list_head, %struct.uncached_list* }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.percpu_counter = type { i64 }
%union.anon.104 = type { %struct.in6_addr }
%struct.uncached_list = type opaque
%struct.fnhe_hash_bucket = type { %struct.fib_nh_exception* }
%struct.fib_nh_exception = type { %struct.fib_nh_exception*, i32, i32, i32, i8, i32, i64, %struct.rtable*, %struct.rtable*, i64, %struct.callback_head }
%struct.fib_info = type { %struct.hlist_node, %struct.hlist_node, %struct.list_head, %struct.net*, i32, %struct.refcount_struct, i32, i8, i8, i8, i8, i32, i32, i32, %struct.dst_metrics*, i32, i8, i8, %struct.nexthop*, %struct.callback_head, [0 x %struct.fib_nh] }
%struct.fib6_nh = type { %struct.fib_nh_common, %struct.rt6_info**, %struct.rt6_exception_bucket* }
%struct.rt6_info = type { %struct.dst_entry, %struct.fib6_info*, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, %struct.inet6_dev*, i32, %struct.list_head, %struct.uncached_list*, i16 }
%struct.rt6_exception_bucket = type { %struct.hlist_head, i32 }
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.92 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.65, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.65 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.66, i8, i8, i16, i32 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.72 }
%struct.anon.72 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.92 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type { i32, i32, i32, i32 (%struct.Qdisc*, i64, %struct.qdisc_walker*)* }
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.187, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.187 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.188 }
%union.anon.188 = type { %struct.anon.189 }
%struct.anon.189 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type { i32, i32, i32, i8, i64, i32 (%struct.tcf_proto*, i8*, %struct.tcf_walker*)* }
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.191 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type { i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32)*, %struct.udp_tunnel_nic_shared*, i32, [4 x %struct.udp_tunnel_nic_table_info] }
%struct.udp_tunnel_nic_shared = type { %struct.udp_tunnel_nic*, %struct.list_head }
%struct.udp_tunnel_nic_table_info = type { i32, i32 }
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.98, %struct.callback_head }
%union.anon.98 = type { void (%struct.sock*)* }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.99, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.99 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type { i32, i32, i32, %struct.list_head, %struct.callback_head, %struct.bucket_table*, %struct.lockdep_map, [0 x %struct.rhash_lock_head*] }
%struct.lockdep_map = type {}
%struct.rhash_lock_head = type {}
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.105 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rt6_statistics = type { i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t }
%struct.seg6_pernet_data = type opaque
%struct.anon.105 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type { %union.anon.106 }
%union.anon.106 = type { %struct.anon.107 }
%struct.anon.107 = type { i32, %struct.callback_head }
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.59 }
%union.anon.59 = type { [4 x i32] }
%union.anon.60 = type { i64 }
%union.anon.61 = type { %struct.hlist_node }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.64 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.93 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%union.anon.96 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.46, %union.anon.49, %union.anon.50, [48 x i8], %union.anon.51, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.53, i32, i32, i32, i16, i16, %union.anon.55, %union.anon.56, %union.anon.57, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.48 }
%union.anon.48 = type { %struct.net_device* }
%union.anon.49 = type { %struct.sock* }
%union.anon.50 = type { i64 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, void (%struct.sk_buff*)* }
%union.anon.53 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.58, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.45, i8, i64, i32, %struct.kiocb* }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%union.anon.45 = type { i8* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.58 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.97, i32 }
%union.anon.97 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.sock_reuseport = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.142, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.142 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.108, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.108 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.166, %union.anon.167, %union.anon.168, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.171, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.166 = type { %struct.hlist_node }
%union.anon.167 = type { %struct.rb_node }
%union.anon.168 = type { %struct.anon.170 }
%struct.anon.170 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.171 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.172, void (i8*)*, i8* }
%union.anon.172 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.173, i16, i16 }
%union.anon.173 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.109, %union.anon.110, i32 }
%union.anon.109 = type { %struct.list_head }
%union.anon.110 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.132 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.133 = type { %struct.callback_head }
%union.anon.134 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.135 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.135 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.137 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.130 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.25 }
%union.anon.25 = type { %struct.anon.26, [48 x i8] }
%struct.anon.26 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.27, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.28, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.29, %union.anon.33, %struct.key_restriction* }
%union.anon.27 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.28 = type { i64 }
%union.anon.29 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.30, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.30 = type { i64 }
%struct.key_type = type opaque
%union.anon.33 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.111 }
%struct.anon.111 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.115 }
%struct.anon.115 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.122, i32, [12 x i8] }
%union.anon.122 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.123 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.124, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.127 }
%union.anon.124 = type { %struct.anon.125 }
%struct.anon.125 = type { i64, i64 }
%union.anon.127 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.mlx5_eswitch = type { %struct.mlx5_core_dev*, %struct.mlx5_nb, %struct.mlx5_eswitch_fdb, [256 x %struct.hlist_head], %struct.esw_mc_addr, %struct.workqueue_struct*, %struct.mlx5_vport*, i32, i32, i32, %struct.mutex, %struct.mutex, %struct.anon.164, %struct.mlx5_esw_offload, i32, i16, i16, %struct.mlx5_esw_functions, %struct.anon.165 }
%struct.mlx5_core_dev = type { %struct.device*, i32, %struct.pci_dev*, %struct.mutex, i32, i8, [64 x i8], %struct.mlx5_cmd, [2 x %struct.mlx5_port_caps], %struct.anon.144, i64, i64, %struct.mlx5_init_seg*, i64, i32, %struct.mutex, i64, %struct.mlx5_priv, %struct.mlx5_profile*, i32, %struct.mlx5e_resources, %struct.mlx5_dm*, %struct.mlx5_vxlan*, %struct.mlx5_geneve*, %struct.anon.150, %struct.mlx5_clock, %struct.mlx5_ib_clock_info*, %struct.mlx5_fw_tracer*, %struct.mlx5_rsc_dump*, i32, %struct.mlx5_hv_vhca* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.143, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.143 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.mlx5_cmd = type { %struct.mlx5_nb, i32, i8*, i64, i32, i8*, i64, i16, i8, i8, i32, i32, i32*, %struct.spinlock, %struct.spinlock, i8, i64, [32 x i8], %struct.workqueue_struct*, %struct.semaphore, %struct.semaphore, i32, i16, [32 x %struct.mlx5_cmd_work_ent*], %struct.dma_pool*, %struct.mlx5_cmd_debug, [5 x %struct.cmd_msg_cache], i32, %struct.mlx5_cmd_stats* }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.mlx5_cmd_work_ent = type { i64, %struct.mlx5_cmd_msg*, %struct.mlx5_cmd_msg*, i8*, i32, void (i32, i8*)*, %struct.delayed_work, i8*, i32, %struct.completion, %struct.completion, %struct.mlx5_cmd*, %struct.work_struct, %struct.mlx5_cmd_layout*, i32, i32, i8, i8, i64, i64, i16, i8, %struct.refcount_struct }
%struct.mlx5_cmd_msg = type { %struct.list_head, %struct.cmd_msg_cache*, i32, %struct.mlx5_cmd_first, %struct.mlx5_cmd_mailbox* }
%struct.cmd_msg_cache = type { %struct.spinlock, %struct.list_head, i32, i32 }
%struct.mlx5_cmd_first = type { [4 x i32] }
%struct.mlx5_cmd_mailbox = type { i8*, i64, %struct.mlx5_cmd_mailbox* }
%struct.mlx5_cmd_layout = type { i8, [3 x i8], i32, i64, [4 x i32], [4 x i32], i64, i32, i8, i8, i8, i8 }
%struct.dma_pool = type opaque
%struct.mlx5_cmd_debug = type { %struct.dentry*, i8*, i8*, i8, i16, i16 }
%struct.mlx5_cmd_stats = type { i64, i64, %struct.dentry*, %struct.spinlock }
%struct.mlx5_port_caps = type { i32, i32, i8, i8 }
%struct.anon.144 = type { [22 x [1024 x i32]], [22 x [1024 x i32]], [20 x i32], [3 x [18 x i32]], [64 x i32], [18 x i32], i8 }
%struct.mlx5_init_seg = type { i32, i32, [2 x i32], i32, i32, i32, [120 x i32], i32, %struct.health_buffer, [880 x i32], i32, i32, [2 x i32], i32, [1019 x i32], i64, i32, i32 }
%struct.health_buffer = type { [5 x i32], [3 x i32], i32, i32, [2 x i32], i32, i32, i32, i8, i8, i16 }
%struct.mlx5_priv = type { %struct.mlx5_irq_table*, %struct.mlx5_eq_table*, %struct.mlx5_nb, %struct.workqueue_struct*, %struct.xarray, i32, %struct.atomic_t, %struct.list_head, i32, i32, %struct.mlx5_core_health, %struct.dentry*, %struct.dentry*, %struct.dentry*, %struct.dentry*, %struct.mutex, i32, %struct.mutex, %struct.list_head, %struct.dentry*, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.mlx5_events*, %struct.mlx5_flow_steering*, %struct.mlx5_mpfs*, %struct.mlx5_eswitch*, %struct.mlx5_core_sriov, %struct.mlx5_lag*, %struct.mlx5_devcom*, %struct.mlx5_fw_reset*, %struct.mlx5_core_roce, %struct.mlx5_fc_stats, %struct.mlx5_rl_table, %struct.mlx5_bfreg_data, %struct.mlx5_uars_page* }
%struct.mlx5_irq_table = type opaque
%struct.mlx5_eq_table = type opaque
%struct.mlx5_core_health = type { %struct.health_buffer*, i32*, %struct.timer_list, i32, i32, i8, i32, i32, %struct.spinlock, %struct.workqueue_struct*, i64, %struct.work_struct, %struct.work_struct, %struct.delayed_work, %struct.devlink_health_reporter*, %struct.devlink_health_reporter* }
%struct.devlink_health_reporter = type opaque
%struct.mlx5_events = type opaque
%struct.mlx5_flow_steering = type { %struct.mlx5_core_dev*, i32, %struct.kmem_cache*, %struct.kmem_cache*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_namespace**, %struct.mlx5_flow_root_namespace**, %struct.mlx5_flow_root_namespace**, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace* }
%struct.mlx5_flow_namespace = type { %struct.fs_node, i32 }
%struct.fs_node = type { %struct.list_head, %struct.list_head, i32, %struct.fs_node*, %struct.fs_node*, %struct.rw_semaphore, %struct.refcount_struct, i8, void (%struct.fs_node*)*, void (%struct.fs_node*)*, %struct.atomic_t }
%struct.mlx5_flow_root_namespace = type { %struct.mlx5_flow_namespace, i32, %struct.mlx5_fs_dr_domain, i32, %struct.mlx5_core_dev*, %struct.mlx5_flow_table*, %struct.mutex, %struct.list_head, %struct.mlx5_flow_cmds* }
%struct.mlx5_fs_dr_domain = type { %struct.mlx5dr_domain* }
%struct.mlx5dr_domain = type opaque
%struct.mlx5_flow_table = type { %struct.fs_node, %struct.mlx5_fs_dr_table, i32, i16, i32, i32, i32, i32, %struct.anon.145, %struct.mutex, %struct.list_head, i32, %struct.rhltable, i32, %struct.mlx5_flow_namespace* }
%struct.mlx5_fs_dr_table = type { %struct.mlx5dr_table*, %struct.mlx5dr_action* }
%struct.mlx5dr_table = type opaque
%struct.mlx5dr_action = type opaque
%struct.anon.145 = type { i8, i32, i32, i32, i32 }
%struct.rhltable = type { %struct.rhashtable }
%struct.mlx5_flow_cmds = type opaque
%struct.mlx5_mpfs = type opaque
%struct.mlx5_core_sriov = type { %struct.mlx5_vf_context*, i32, i16 }
%struct.mlx5_vf_context = type { i32, i64, i64, i8, i32 }
%struct.mlx5_lag = type opaque
%struct.mlx5_devcom = type opaque
%struct.mlx5_fw_reset = type opaque
%struct.mlx5_core_roce = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle* }
%struct.mlx5_flow_group = type { %struct.fs_node, %struct.mlx5_fs_dr_matcher, %struct.mlx5_flow_group_mask, i32, i32, %struct.ida, i32, %struct.rhashtable, %struct.rhlist_head }
%struct.mlx5_fs_dr_matcher = type { %struct.mlx5dr_matcher* }
%struct.mlx5dr_matcher = type opaque
%struct.mlx5_flow_group_mask = type { i8, [80 x i32] }
%struct.ida = type { %struct.xarray }
%struct.rhlist_head = type { %struct.rhash_head, %struct.rhlist_head* }
%struct.mlx5_flow_handle = type { i32, [0 x %struct.mlx5_flow_rule*] }
%struct.mlx5_flow_rule = type { %struct.fs_node, %struct.mlx5_flow_table*, %struct.mlx5_flow_destination, %struct.list_head, i32 }
%struct.mlx5_flow_destination = type { i32, %union.anon.146 }
%union.anon.146 = type { %struct.anon.147 }
%struct.anon.147 = type { i16, i16, %struct.mlx5_pkt_reformat*, i8 }
%struct.mlx5_pkt_reformat = type { i32, i32, %union.anon.148 }
%union.anon.148 = type { %struct.mlx5_fs_dr_action }
%struct.mlx5_fs_dr_action = type { %struct.mlx5dr_action* }
%struct.mlx5_fc_stats = type { %struct.spinlock, %struct.idr, %struct.list_head, %struct.llist_head, %struct.llist_head, %struct.workqueue_struct*, %struct.delayed_work, i64, i64, i32*, %struct.mlx5_fc_pool }
%struct.llist_head = type { %struct.llist_node* }
%struct.mlx5_fc_pool = type { %struct.mlx5_core_dev*, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32 }
%struct.mlx5_rl_table = type { %struct.mutex, i16, i32, i32, %struct.mlx5_rl_entry* }
%struct.mlx5_rl_entry = type { [48 x i8], i16, i64, i16, i8 }
%struct.mlx5_bfreg_data = type { %struct.mlx5_bfreg_head, %struct.mlx5_bfreg_head }
%struct.mlx5_bfreg_head = type { %struct.mutex, %struct.list_head }
%struct.mlx5_uars_page = type { i8*, i8, i32, %struct.list_head, i32, i64*, i64*, i32, i32, %struct.kref, %struct.mlx5_core_dev* }
%struct.mlx5_profile = type { i64, i8, [23 x %struct.anon.149] }
%struct.anon.149 = type { i32, i32 }
%struct.mlx5e_resources = type { i32, %struct.mlx5_td, %struct.mlx5_core_mkey, %struct.mlx5_sq_bfreg }
%struct.mlx5_td = type { %struct.mutex, %struct.list_head, i32 }
%struct.mlx5_core_mkey = type { i64, i64, i32, i32, i32 }
%struct.mlx5_sq_bfreg = type { i8*, %struct.mlx5_uars_page*, i8, i32, i32 }
%struct.mlx5_dm = type opaque
%struct.mlx5_vxlan = type opaque
%struct.mlx5_geneve = type opaque
%struct.anon.150 = type { %struct.mlx5_rsvd_gids, i32 }
%struct.mlx5_rsvd_gids = type { i32, i32, %struct.ida }
%struct.mlx5_clock = type { %struct.mlx5_nb, %struct.seqlock_t, %struct.cyclecounter, %struct.timecounter, %struct.hwtstamp_config, i32, i64, %struct.delayed_work, %struct.ptp_clock*, %struct.ptp_clock_info, %struct.mlx5_pps }
%struct.cyclecounter = type { i64 (%struct.cyclecounter*)*, i64, i32, i32 }
%struct.timecounter = type { %struct.cyclecounter*, i64, i64, i64, i64 }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ptp_clock = type opaque
%struct.ptp_clock_info = type { %struct.module*, [16 x i8], i32, i32, i32, i32, i32, i32, %struct.ptp_pin_desc*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*, %struct.ptp_system_timestamp*)*, i32 (%struct.ptp_clock_info*, %struct.system_device_crosststamp*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.ptp_clock_request*, i32)*, i32 (%struct.ptp_clock_info*, i32, i32, i32)*, i64 (%struct.ptp_clock_info*)* }
%struct.ptp_pin_desc = type { [64 x i8], i32, i32, i32, [5 x i32] }
%struct.ptp_system_timestamp = type { %struct.timespec64, %struct.timespec64 }
%struct.system_device_crosststamp = type { i64, i64, i64 }
%struct.ptp_clock_request = type { i32, %union.anon.151 }
%union.anon.151 = type { %struct.ptp_perout_request }
%struct.ptp_perout_request = type { %union.anon.152, %struct.ptp_clock_time, i32, i32, %union.anon.153 }
%union.anon.152 = type { %struct.ptp_clock_time }
%struct.ptp_clock_time = type { i64, i32, i32 }
%union.anon.153 = type { %struct.ptp_clock_time }
%struct.mlx5_pps = type { [8 x i8], %struct.work_struct, [8 x i64], i8 }
%struct.mlx5_ib_clock_info = type opaque
%struct.mlx5_fw_tracer = type opaque
%struct.mlx5_rsc_dump = type opaque
%struct.mlx5_hv_vhca = type opaque
%struct.mlx5_nb = type { %struct.notifier_block, i8 }
%struct.mlx5_eswitch_fdb = type { %union.anon.154, i32 }
%union.anon.154 = type { %struct.offloads_fdb }
%struct.offloads_fdb = type { %struct.mlx5_flow_namespace*, %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle**, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle*, i32, %struct.mlx5_fs_chains*, %struct.anon.155 }
%struct.mlx5_fs_chains = type opaque
%struct.anon.155 = type { [256 x %struct.hlist_head], %struct.mutex }
%struct.esw_mc_addr = type { %struct.l2addr_node, %struct.mlx5_flow_handle*, i32 }
%struct.l2addr_node = type { %struct.hlist_node, [6 x i8] }
%struct.mlx5_vport = type { %struct.mlx5_core_dev*, i32, [256 x %struct.hlist_head], [256 x %struct.hlist_head], %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle*, %struct.work_struct, %struct.vport_ingress, %struct.vport_egress, i32, i32, %struct.mlx5_vport_info, %struct.anon.162, i8, i32, %struct.devlink_port* }
%struct.vport_ingress = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_handle*, %struct.anon.156, %struct.anon.157 }
%struct.anon.156 = type { %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle*, %struct.mlx5_fc* }
%struct.mlx5_fc = type opaque
%struct.anon.157 = type { %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_modify_hdr*, %struct.mlx5_flow_handle* }
%struct.mlx5_modify_hdr = type { i32, %union.anon.158 }
%union.anon.158 = type { %struct.mlx5_fs_dr_action }
%struct.vport_egress = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_handle*, %struct.mlx5_flow_group*, %union.anon.159 }
%union.anon.159 = type { %struct.anon.160 }
%struct.anon.160 = type { %struct.mlx5_flow_group*, %struct.mlx5_flow_handle*, %struct.mlx5_fc* }
%struct.mlx5_vport_info = type { [6 x i8], i16, i8, i64, i32, i32, i32, i8, i8 }
%struct.anon.162 = type { i8, i32, i32 }
%struct.anon.164 = type { i8, i32 }
%struct.mlx5_esw_offload = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_modify_hdr*, %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_eswitch_rep*, %struct.list_head, %struct.mutex, %struct.mutex, [256 x %struct.hlist_head], %struct.mutex, [256 x %struct.hlist_head], %struct.mod_hdr_tbl, [256 x %struct.hlist_head], %struct.mutex, [2 x %struct.mlx5_eswitch_rep_ops*], i8, %struct.atomic64_t, i32, %struct.ida, i32 }
%struct.mlx5_eswitch_rep = type { [2 x %struct.mlx5_eswitch_rep_data], i16, i16, i16, i32 }
%struct.mlx5_eswitch_rep_data = type { i8*, %struct.atomic_t }
%struct.mod_hdr_tbl = type { %struct.mutex, [256 x %struct.hlist_head] }
%struct.mlx5_eswitch_rep_ops = type { i32 (%struct.mlx5_core_dev*, %struct.mlx5_eswitch_rep*)*, void (%struct.mlx5_eswitch_rep*)*, i8* (%struct.mlx5_eswitch_rep*)* }
%struct.mlx5_esw_functions = type { %struct.mlx5_nb, i16 }
%struct.anon.165 = type { i32 }
%union.devlink_param_value = type { i32, [28 x i8] }
%struct.mlx5_flow_act = type { i32, %struct.mlx5_modify_hdr*, %struct.mlx5_pkt_reformat*, %union.anon.199, i32, [2 x %struct.mlx5_fs_vlan], %struct.ib_counters* }
%union.anon.199 = type { i64 }
%struct.mlx5_fs_vlan = type { i16, i16, i8 }
%struct.ib_counters = type { %struct.ib_device*, %struct.ib_uobject*, %struct.atomic_t }
%struct.ib_device = type { %struct.device*, %struct.ib_device_ops, [64 x i8], %struct.callback_head, %struct.list_head, %struct.rw_semaphore, %struct.spinlock, %struct.rw_semaphore, %struct.xarray, %struct.mutex, %struct.rwlock_t, %struct.ib_port_data*, i32, %union.anon.222, [3 x %struct.attribute_group*], i64, i64, [64 x i8], i64, i32, i8, i8, i8, %struct.ib_device_attr, %struct.attribute_group*, %struct.rdma_hw_stats*, i32, %struct.spinlock, [3 x %struct.list_head], %struct.rdma_restrack_root*, %struct.uapi_definition*, %struct.refcount_struct, %struct.completion, %struct.work_struct, %struct.rdma_link_ops*, %struct.mutex, %struct.xarray, [16 x i8], i32, i32 }
%struct.ib_device_ops = type { %struct.module*, i32, i32, i8, i32 (%struct.ib_qp*, %struct.ib_send_wr*, %struct.ib_send_wr**)*, i32 (%struct.ib_qp*, %struct.ib_recv_wr*, %struct.ib_recv_wr**)*, void (%struct.ib_qp*)*, void (%struct.ib_qp*)*, i32 (%struct.ib_cq*, i32, %struct.ib_wc*)*, i32 (%struct.ib_cq*, i32)*, i32 (%struct.ib_cq*, i32)*, i32 (%struct.ib_cq*, i32)*, i32 (%struct.ib_srq*, %struct.ib_recv_wr*, %struct.ib_recv_wr**)*, i32 (%struct.ib_device*, i32, i8, %struct.ib_wc*, %struct.ib_grh*, %struct.ib_mad*, %struct.ib_mad*, i64*, i16*)*, i32 (%struct.ib_device*, %struct.ib_device_attr*, %struct.ib_udata*)*, i32 (%struct.ib_device*, i32, %struct.ib_device_modify*)*, void (%struct.ib_device*, i8*)*, %struct.cpumask* (%struct.ib_device*, i32)*, i32 (%struct.ib_device*, i8, %struct.ib_port_attr*)*, i32 (%struct.ib_device*, i8, i32, %struct.ib_port_modify*)*, i32 (%struct.ib_device*, i8, %struct.ib_port_immutable*)*, i32 (%struct.ib_device*, i8)*, %struct.net_device* (%struct.ib_device*, i8)*, %struct.net_device* (%struct.ib_device*, i8, i32, i8*, i8, void (%struct.net_device*)*)*, i32 (%struct.ib_device*, i8, i32, %struct.rdma_netdev_alloc_params*)*, i32 (%struct.ib_device*, i8, i32, %union.ib_gid*)*, i32 (%struct.ib_gid_attr*, i8**)*, i32 (%struct.ib_gid_attr*, i8**)*, i32 (%struct.ib_device*, i8, i16, i16*)*, i32 (%struct.ib_ucontext*, %struct.ib_udata*)*, void (%struct.ib_ucontext*)*, i32 (%struct.ib_ucontext*, %struct.vm_area_struct*)*, void (%struct.rdma_user_mmap_entry*)*, void (%struct.ib_ucontext*)*, i32 (%struct.ib_pd*, %struct.ib_udata*)*, i32 (%struct.ib_pd*, %struct.ib_udata*)*, i32 (%struct.ib_ah*, %struct.rdma_ah_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_ah*, %struct.rdma_ah_attr*)*, i32 (%struct.ib_ah*, %struct.rdma_ah_attr*)*, i32 (%struct.ib_ah*, i32)*, i32 (%struct.ib_srq*, %struct.ib_srq_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_srq*, %struct.ib_srq_attr*, i32, %struct.ib_udata*)*, i32 (%struct.ib_srq*, %struct.ib_srq_attr*)*, i32 (%struct.ib_srq*, %struct.ib_udata*)*, %struct.ib_qp* (%struct.ib_pd*, %struct.ib_qp_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_qp*, %struct.ib_qp_attr*, i32, %struct.ib_udata*)*, i32 (%struct.ib_qp*, %struct.ib_qp_attr*, i32, %struct.ib_qp_init_attr*)*, i32 (%struct.ib_qp*, %struct.ib_udata*)*, i32 (%struct.ib_cq*, %struct.ib_cq_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_cq*, i16, i16)*, i32 (%struct.ib_cq*, %struct.ib_udata*)*, i32 (%struct.ib_cq*, i32, %struct.ib_udata*)*, %struct.ib_mr* (%struct.ib_pd*, i32)*, %struct.ib_mr* (%struct.ib_pd*, i64, i64, i64, i32, %struct.ib_udata*)*, i32 (%struct.ib_mr*, i32, i64, i64, i64, i32, %struct.ib_pd*, %struct.ib_udata*)*, i32 (%struct.ib_mr*, %struct.ib_udata*)*, %struct.ib_mr* (%struct.ib_pd*, i32, i32)*, %struct.ib_mr* (%struct.ib_pd*, i32, i32)*, i32 (%struct.ib_pd*, i32, i32, %struct.ib_sge*, i32, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_mr*, %struct.scatterlist*, i32, i32*)*, i32 (%struct.ib_mr*, i32, %struct.ib_mr_status*)*, i32 (%struct.ib_mw*, %struct.ib_udata*)*, i32 (%struct.ib_mw*)*, i32 (%struct.ib_qp*, %union.ib_gid*, i16)*, i32 (%struct.ib_qp*, %union.ib_gid*, i16)*, i32 (%struct.ib_xrcd*, %struct.ib_udata*)*, i32 (%struct.ib_xrcd*, %struct.ib_udata*)*, %struct.ib_flow* (%struct.ib_qp*, %struct.ib_flow_attr*, %struct.ib_udata*)*, i32 (%struct.ib_flow*)*, %struct.ib_flow_action* (%struct.ib_device*, %struct.ib_flow_action_attrs_esp*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_flow_action*)*, i32 (%struct.ib_flow_action*, %struct.ib_flow_action_attrs_esp*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_device*, i32, i8, i32)*, i32 (%struct.ib_device*, i32, i8, %struct.ifla_vf_info*)*, i32 (%struct.ib_device*, i32, i8, %struct.ifla_vf_stats*)*, i32 (%struct.ib_device*, i32, i8, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.ib_device*, i32, i8, i64, i32)*, %struct.ib_wq* (%struct.ib_pd*, %struct.ib_wq_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_wq*, %struct.ib_udata*)*, i32 (%struct.ib_wq*, %struct.ib_wq_attr*, i32, %struct.ib_udata*)*, i32 (%struct.ib_rwq_ind_table*, %struct.ib_rwq_ind_table_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_rwq_ind_table*)*, %struct.ib_dm* (%struct.ib_device*, %struct.ib_ucontext*, %struct.ib_dm_alloc_attr*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_dm*, %struct.uverbs_attr_bundle*)*, %struct.ib_mr* (%struct.ib_pd*, %struct.ib_dm*, %struct.ib_dm_mr_attr*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_counters*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_counters*)*, i32 (%struct.ib_counters*, %struct.ib_counters_read_attr*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_mr*, %struct.scatterlist*, i32, i32*, %struct.scatterlist*, i32, i32*)*, %struct.rdma_hw_stats* (%struct.ib_device*, i8)*, i32 (%struct.ib_device*, %struct.rdma_hw_stats*, i8, i32)*, i32 (%struct.ib_device*, i8, %struct.kobject*)*, i32 (%struct.sk_buff*, %struct.ib_mr*)*, i32 (%struct.sk_buff*, %struct.ib_mr*)*, i32 (%struct.sk_buff*, %struct.ib_cq*)*, i32 (%struct.sk_buff*, %struct.ib_cq*)*, i32 (%struct.sk_buff*, %struct.ib_qp*)*, i32 (%struct.sk_buff*, %struct.ib_qp*)*, i32 (%struct.sk_buff*, %struct.rdma_cm_id*)*, i32 (%struct.ib_device*)*, void (%struct.ib_device*)*, void (%struct.ib_qp*)*, void (%struct.ib_qp*)*, %struct.ib_qp* (%struct.ib_device*, i32)*, i32 (%struct.iw_cm_id*, %struct.iw_cm_conn_param*)*, i32 (%struct.iw_cm_id*, %struct.iw_cm_conn_param*)*, i32 (%struct.iw_cm_id*, i8*, i8)*, i32 (%struct.iw_cm_id*, i32)*, i32 (%struct.iw_cm_id*)*, i32 (%struct.rdma_counter*, %struct.ib_qp*)*, i32 (%struct.ib_qp*)*, i32 (%struct.rdma_counter*)*, %struct.rdma_hw_stats* (%struct.rdma_counter*)*, i32 (%struct.rdma_counter*)*, i32 (%struct.sk_buff*, %struct.ib_mr*)*, i32 (%struct.ib_ucontext*, %struct.uverbs_attr_bundle*)*, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ib_qp = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_cq*, %struct.ib_cq*, %struct.spinlock, i32, %struct.list_head, %struct.list_head, %struct.ib_srq*, %struct.ib_xrcd*, %struct.list_head, %struct.atomic_t, %struct.list_head, %struct.ib_qp*, %struct.ib_uqp_object*, void (%struct.ib_event*, i8*)*, i8*, %struct.ib_gid_attr*, %struct.ib_gid_attr*, i32, i32, i32, i32, %struct.ib_rwq_ind_table*, %struct.ib_qp_security*, i8, i8, %struct.rdma_restrack_entry, %struct.rdma_counter* }
%struct.ib_pd = type { i32, i32, %struct.ib_device*, %struct.ib_uobject*, %struct.atomic_t, i32, %struct.ib_mr*, %struct.rdma_restrack_entry }
%struct.ib_mr = type { %struct.ib_device*, %struct.ib_pd*, i32, i32, i64, i64, i32, i32, i8, %union.anon.200, %struct.ib_dm*, %struct.ib_sig_attrs*, %struct.rdma_restrack_entry }
%union.anon.200 = type { %struct.list_head }
%struct.ib_dm = type { %struct.ib_device*, i32, i32, %struct.ib_uobject*, %struct.atomic_t }
%struct.ib_sig_attrs = type { i8, %struct.ib_sig_domain, %struct.ib_sig_domain, i32 }
%struct.ib_sig_domain = type { i32, %union.anon.201 }
%union.anon.201 = type { %struct.ib_t10_dif_domain }
%struct.ib_t10_dif_domain = type { i32, i16, i16, i16, i32, i8, i8, i8, i16 }
%struct.ib_cq = type { %struct.ib_device*, %struct.ib_ucq_object*, void (%struct.ib_cq*, i8*)*, void (%struct.ib_event*, i8*)*, i8*, i32, i32, %struct.atomic_t, i32, %struct.ib_wc*, %struct.list_head, %union.anon.208, %struct.workqueue_struct*, %struct.dim*, i64, i8, i32, %struct.rdma_restrack_entry }
%struct.ib_ucq_object = type opaque
%struct.ib_wc = type { %union.anon.206, i32, i32, i32, i32, %struct.ib_qp*, %union.anon.207, i32, i32, i32, i16, i8, i8, i8, [6 x i8], i16, i8 }
%union.anon.206 = type { i64 }
%union.anon.207 = type { i32 }
%union.anon.208 = type { %struct.irq_poll }
%struct.irq_poll = type { %struct.list_head, i64, i32, i32 (%struct.irq_poll*, i32)* }
%struct.dim = type { i8, %struct.dim_stats, %struct.dim_sample, %struct.dim_sample, %struct.work_struct, i8*, i8, i8, i8, i8, i8, i8 }
%struct.dim_stats = type { i32, i32, i32, i32, i32 }
%struct.dim_sample = type { i64, i32, i32, i16, i32 }
%struct.ib_srq = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_usrq_object*, {}*, i8*, i32, %struct.atomic_t, %struct.anon.203 }
%struct.ib_usrq_object = type opaque
%struct.anon.203 = type { %struct.ib_cq*, %union.anon.204 }
%union.anon.204 = type { %struct.anon.205 }
%struct.anon.205 = type { %struct.ib_xrcd*, i32 }
%struct.ib_xrcd = type { %struct.ib_device*, %struct.atomic_t, %struct.inode*, %struct.rw_semaphore, %struct.xarray }
%struct.ib_uqp_object = type opaque
%struct.ib_event = type { %struct.ib_device*, %union.anon.202, i32 }
%union.anon.202 = type { %struct.ib_cq* }
%struct.ib_gid_attr = type { %struct.net_device*, %struct.ib_device*, %union.ib_gid, i32, i16, i8 }
%union.ib_gid = type { %struct.anon.209 }
%struct.anon.209 = type { i64, i64 }
%struct.ib_rwq_ind_table = type { %struct.ib_device*, %struct.ib_uobject*, %struct.atomic_t, i32, i32, %struct.ib_wq** }
%struct.ib_wq = type { %struct.ib_device*, %struct.ib_uwq_object*, i8*, {}*, %struct.ib_pd*, %struct.ib_cq*, i32, i32, i32, %struct.atomic_t }
%struct.ib_uwq_object = type opaque
%struct.ib_qp_security = type { %struct.ib_qp*, %struct.ib_device*, %struct.mutex, %struct.ib_ports_pkeys*, %struct.list_head, i8*, i8, %struct.atomic_t, %struct.completion, i32 }
%struct.ib_ports_pkeys = type { %struct.ib_port_pkey, %struct.ib_port_pkey }
%struct.ib_port_pkey = type { i32, i16, i8, %struct.list_head, %struct.list_head, %struct.ib_qp_security* }
%struct.rdma_restrack_entry = type { i8, %struct.kref, %struct.completion, %struct.task_struct*, i8*, i32, i8, i32 }
%struct.rdma_counter = type { %struct.rdma_restrack_entry, %struct.ib_device*, i32, %struct.kref, %struct.rdma_counter_mode, %struct.mutex, %struct.rdma_hw_stats*, i8 }
%struct.rdma_counter_mode = type { i32, i32, %struct.auto_mode_param }
%struct.auto_mode_param = type { i32 }
%struct.ib_send_wr = type { %struct.ib_send_wr*, %union.anon.210, %struct.ib_sge*, i32, i32, i32, %union.anon.211 }
%union.anon.210 = type { i64 }
%struct.ib_sge = type { i64, i32, i32 }
%union.anon.211 = type { i32 }
%struct.ib_recv_wr = type { %struct.ib_recv_wr*, %union.anon.212, %struct.ib_sge*, i32 }
%union.anon.212 = type { i64 }
%struct.ib_grh = type { i32, i16, i8, i8, %union.ib_gid, %union.ib_gid }
%struct.ib_mad = type opaque
%struct.ib_udata = type { i8*, i8*, i64, i64 }
%struct.ib_device_modify = type { i64, [64 x i8] }
%struct.ib_port_attr = type { i64, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, i8, i8, i16, i8, i16 }
%struct.ib_port_modify = type { i32, i32, i8 }
%struct.ib_port_immutable = type { i32, i32, i32, i32 }
%struct.rdma_netdev_alloc_params = type { i64, i32, i32, i8*, i32 (%struct.ib_device*, i8, %struct.net_device*, i8*)* }
%struct.ib_ucontext = type { %struct.ib_device*, %struct.ib_uverbs_file*, i8, %struct.ib_rdmacg_object, %struct.rdma_restrack_entry, %struct.xarray }
%struct.ib_uverbs_file = type opaque
%struct.ib_rdmacg_object = type {}
%struct.rdma_user_mmap_entry = type { %struct.kref, %struct.ib_ucontext*, i64, i64, i8 }
%struct.ib_ah = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_uobject*, %struct.ib_gid_attr*, i32 }
%struct.rdma_ah_init_attr = type { %struct.rdma_ah_attr*, i32, %struct.net_device* }
%struct.rdma_ah_attr = type { %struct.ib_global_route, i8, i8, i8, i8, i32, %union.anon.214 }
%struct.ib_global_route = type { %struct.ib_gid_attr*, %union.ib_gid, i32, i8, i8, i8 }
%union.anon.214 = type { %struct.opa_ah_attr }
%struct.opa_ah_attr = type { i32, i8, i8 }
%struct.ib_srq_init_attr = type { void (%struct.ib_event*, i8*)*, i8*, %struct.ib_srq_attr, i32, %struct.anon.215 }
%struct.ib_srq_attr = type { i32, i32, i32 }
%struct.anon.215 = type { %struct.ib_cq*, %union.anon.216 }
%union.anon.216 = type { %struct.anon.217 }
%struct.anon.217 = type { %struct.ib_xrcd* }
%struct.ib_qp_init_attr = type { void (%struct.ib_event*, i8*)*, i8*, %struct.ib_cq*, %struct.ib_cq*, %struct.ib_srq*, %struct.ib_xrcd*, %struct.ib_qp_cap, i32, i32, i32, i8, %struct.ib_rwq_ind_table*, i32 }
%struct.ib_qp_cap = type { i32, i32, i32, i32, i32, i32 }
%struct.ib_qp_attr = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ib_qp_cap, %struct.rdma_ah_attr, %struct.rdma_ah_attr, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.net_device* }
%struct.ib_cq_init_attr = type { i32, i32, i32 }
%struct.uverbs_attr_bundle = type opaque
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.ib_mr_status = type { i32, %struct.ib_sig_err }
%struct.ib_sig_err = type { i32, i32, i32, i64, i32 }
%struct.ib_mw = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_uobject*, i32, i32 }
%struct.ib_flow = type { %struct.ib_qp*, %struct.ib_device*, %struct.ib_uobject* }
%struct.ib_flow_attr = type { i32, i16, i16, i32, i8, i8, [0 x %union.ib_flow_spec] }
%union.ib_flow_spec = type { %struct.ib_flow_spec_action_handle, [72 x i8] }
%struct.ib_flow_spec_action_handle = type { i32, i16, %struct.ib_flow_action* }
%struct.ib_flow_action = type { %struct.ib_device*, %struct.ib_uobject*, i32, %struct.atomic_t }
%struct.ib_flow_action_attrs_esp = type { %struct.ib_flow_action_attrs_esp_keymats*, %struct.ib_flow_action_attrs_esp_replays*, %struct.ib_flow_spec_list*, i32, i32, i32, i32, i64, i64 }
%struct.ib_flow_action_attrs_esp_keymats = type { i32, %union.anon.220 }
%union.anon.220 = type { %struct.ib_uverbs_flow_action_esp_keymat_aes_gcm }
%struct.ib_uverbs_flow_action_esp_keymat_aes_gcm = type { i64, i32, i32, i32, i32, [8 x i32] }
%struct.ib_flow_action_attrs_esp_replays = type { i32, %union.anon.221 }
%union.anon.221 = type { %struct.ib_uverbs_flow_action_esp_replay_bmp }
%struct.ib_uverbs_flow_action_esp_replay_bmp = type { i32 }
%struct.ib_flow_spec_list = type { %struct.ib_flow_spec_list*, %union.ib_flow_spec }
%struct.ib_wq_init_attr = type { i8*, i32, i32, i32, %struct.ib_cq*, void (%struct.ib_event*, i8*)*, i32 }
%struct.ib_wq_attr = type { i32, i32, i32, i32 }
%struct.ib_rwq_ind_table_init_attr = type { i32, %struct.ib_wq** }
%struct.ib_dm_alloc_attr = type { i64, i32, i32 }
%struct.ib_dm_mr_attr = type { i64, i64, i32 }
%struct.ib_counters_read_attr = type { i64*, i32, i32 }
%struct.rdma_cm_id = type opaque
%struct.iw_cm_id = type opaque
%struct.iw_cm_conn_param = type opaque
%struct.ib_port_data = type { %struct.ib_device*, %struct.ib_port_immutable, %struct.spinlock, %struct.list_head, %struct.ib_port_cache, %struct.spinlock, %struct.net_device*, %struct.hlist_node, %struct.rdma_port_counter, %struct.rdma_hw_stats* }
%struct.ib_port_cache = type { i64, %struct.ib_pkey_cache*, %struct.ib_gid_table*, i8, i32 }
%struct.ib_pkey_cache = type opaque
%struct.ib_gid_table = type opaque
%struct.rdma_port_counter = type { %struct.rdma_counter_mode, %struct.rdma_hw_stats*, i32, %struct.mutex }
%union.anon.222 = type { %struct.ib_core_device }
%struct.ib_core_device = type { %struct.device, %struct.possible_net_t, %struct.kobject*, %struct.list_head, %struct.ib_device* }
%struct.ib_device_attr = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, i32, i32, %struct.ib_odp_caps, i64, i64, %struct.ib_rss_caps, i32, i32, %struct.ib_tm_caps, %struct.ib_cq_caps, i64, i32 }
%struct.ib_odp_caps = type { i64, %struct.anon.213 }
%struct.anon.213 = type { i32, i32, i32, i32 }
%struct.ib_rss_caps = type { i32, i32, i32 }
%struct.ib_tm_caps = type { i32, i32, i32, i32, i32 }
%struct.ib_cq_caps = type { i16, i16 }
%struct.rdma_hw_stats = type { %struct.mutex, i64, i64, i8**, i32, [0 x i64] }
%struct.rdma_restrack_root = type opaque
%struct.uapi_definition = type opaque
%struct.rdma_link_ops = type { %struct.list_head, i8*, i32 (i8*, %struct.net_device*)* }
%struct.ib_uobject = type { i64, %struct.ib_uverbs_file*, %struct.ib_ucontext*, i8*, %struct.list_head, %struct.ib_rdmacg_object, i32, %struct.kref, %struct.atomic_t, %struct.callback_head, %struct.uverbs_api_object* }
%struct.uverbs_api_object = type opaque
%struct.mlx5_flow_spec = type { i8, [128 x i32], [128 x i32], %struct.mlx5_flow_context }
%struct.mlx5_flow_context = type { i32, i32, i32 }
%struct.legacy_fdb = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_table*, %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle* }
%struct.mlx5_vport_drop_stats = type { i64, i64 }
%struct.mlx5_flow_table_attr = type { i32, i32, i32, i32, %struct.mlx5_flow_table*, %struct.anon.192 }
%struct.anon.192 = type { i32, i32 }
%struct.mlx5_eqe = type { i8, i8, i8, i8, [7 x i32], %union.ev_data, i16, i8, i8 }
%union.ev_data = type <{ %struct.mlx5_eqe_gpio, [12 x i8] }>
%struct.mlx5_eqe_gpio = type { [2 x i32], i64 }
%struct.mlx5_eqe_vport_change = type { [2 x i8], i16, [6 x i32] }
%struct.vport_addr = type { %struct.l2addr_node, i8, i16, %struct.mlx5_flow_handle*, i8, i8 }

@mlx5_core_debug_mask = external dso_local global i32, align 4
@.str = private unnamed_addr constant [46 x i8] c"E-Switch: FDB is not supported, aborting ...\0A\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"E-Switch: ingress ACL is not supported by FW\0A\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"E-Switch: engress ACL is not supported by FW\0A\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"E-Switch: Enable: mode(%s), nvfs(%d), active vports(%d)\0A\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"LEGACY\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"OFFLOADS\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"E-Switch: Disable: mode(%s), nvfs(%d), active vports(%d)\0A\00", align 1
@.str.7 = private unnamed_addr constant [61 x i8] c"E-Switch: Total vports %d, per vport: max uc(%d) max mc(%d)\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"mlx5_esw_wq\00", align 1
@mlx5_eswitch_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !0
@.str.10 = private unnamed_addr constant [30 x i8] c"&esw->offloads.encap_tbl_lock\00", align 1
@mlx5_eswitch_init.__key.11 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !12248
@.str.12 = private unnamed_addr constant [30 x i8] c"&esw->offloads.decap_tbl_lock\00", align 1
@mlx5_eswitch_init.__key.13 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !12250
@.str.14 = private unnamed_addr constant [17 x i8] c"&esw->state_lock\00", align 1
@mlx5_eswitch_init.__key.15 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !12252
@.str.16 = private unnamed_addr constant [16 x i8] c"&esw->mode_lock\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"E-Switch: cleanup\0A\00", align 1
@mlx5_devlink_port_function_hw_addr_get.__msg = internal constant [24 x i8] c"mlx5_core: Invalid port\00", align 16, !dbg !12254
@mlx5_devlink_port_function_hw_addr_set.__msg = internal constant [47 x i8] c"mlx5_core: Eswitch doesn't support set hw_addr\00", align 16, !dbg !12258
@mlx5_devlink_port_function_hw_addr_set.__msg.18 = internal constant [44 x i8] c"mlx5_core: Port doesn't support set hw_addr\00", align 16, !dbg !12264
@mlx5_devlink_port_function_hw_addr_set.__msg.19 = internal constant [24 x i8] c"mlx5_core: Invalid port\00", align 16, !dbg !12267
@mlx5_devlink_port_function_hw_addr_set.__msg.20 = internal constant [37 x i8] c"mlx5_core: Eswitch vport is disabled\00", align 16, !dbg !12269
@.str.21 = private unnamed_addr constant [72 x i8] c"%s:%d:(pid %d): Failed to set vport %d link state, opmod = %d, err = %d\00", align 1
@__func__.mlx5_eswitch_set_vport_state = private unnamed_addr constant [29 x i8] c"mlx5_eswitch_set_vport_state\00", align 1
@.str.22 = private unnamed_addr constant [65 x i8] c"%s:%d:(pid %d): Spoofchk in set while MAC is invalid, vport(%d)\0A\00", align 1
@__func__.mlx5_eswitch_set_vport_spoofchk = private unnamed_addr constant [32 x i8] c"mlx5_eswitch_set_vport_spoofchk\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"include/net/devlink.h\00", align 1
@.str.24 = private unnamed_addr constant [37 x i8] c"E-Switch: ECPF vport doesn't exist!\0A\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"drivers/net/ethernet/mellanox/mlx5/core/eswitch.c\00", align 1
@.str.26 = private unnamed_addr constant [71 x i8] c"E-Switch: E-Switch create TSAR vport element failed (vport=%d,err=%d)\0A\00", align 1
@.str.27 = private unnamed_addr constant [72 x i8] c"E-Switch: E-Switch destroy TSAR vport element failed (vport=%d,err=%d)\0A\00", align 1
@.str.28 = private unnamed_addr constant [72 x i8] c"E-Switch: Devlink can't get param fdb_large_groups, uses default (%d).\0A\00", align 1
@.str.29 = private unnamed_addr constant [44 x i8] c"E-Switch: E-Switch create TSAR failed (%d)\0A\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"E-Switch: Failed to get FDB flow namespace\0A\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"E-Switch: Failed to create VEPA FDB err %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [45 x i8] c"E-Switch: Failed to create FDB Table err %d\0A\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"E-Switch: Failed to create flow group err(%d)\0A\00", align 1
@.str.34 = private unnamed_addr constant [56 x i8] c"E-Switch: Failed to create allmulti flow group err(%d)\0A\00", align 1
@.str.35 = private unnamed_addr constant [55 x i8] c"E-Switch: Failed to create promisc flow group err(%d)\0A\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"E-Switch: E-Switch destroy TSAR failed (%d)\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.37 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.38 = private unnamed_addr constant [65 x i8] c"%s:%d:(pid %d): Set invalid MAC while spoofchk is on, vport(%d)\0A\00", align 1
@__func__.mlx5_esw_set_vport_mac_locked = private unnamed_addr constant [30 x i8] c"mlx5_esw_set_vport_mac_locked\00", align 1
@.str.39 = private unnamed_addr constant [72 x i8] c"%s:%d:(pid %d): Failed to mlx5_modify_nic_vport_mac vport(%d) err=(%d)\0A\00", align 1
@.str.40 = private unnamed_addr constant [109 x i8] c"%s:%d:(pid %d): Failed to set vport %d node guid, err = %d. RDMA_CM will not function properly for this VF.\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.41 = private unnamed_addr constant [42 x i8] c"E-Switch: Failed to MAC(%pM) in mcast DB\0A\00", align 1
@.str.42 = private unnamed_addr constant [50 x i8] c"E-Switch: Failed to add MAC(%pM) to vport[%d] DB\0A\00", align 1
@.str.43 = private unnamed_addr constant [68 x i8] c"E-Switch: Failed to add L2 table mac(%pM) for vport(0x%x), err(%d)\0A\00", align 1
@.str.44 = private unnamed_addr constant [88 x i8] c"E-Switch: FDB: Failed to add flow rule: dmac_v(%pM) dmac_c(%pM) -> vport(%d), err(%ld)\0A\00", align 1
@.str.45 = private unnamed_addr constant [61 x i8] c"E-Switch: ALL-MULTI: Failed to add MAC(%pM) to vport[%d] DB\0A\00", align 1
@.str.46 = private unnamed_addr constant [66 x i8] c"E-Switch: Failed to del L2 table mac(%pM) for vport(%d), err(%d)\0A\00", align 1
@.str.47 = private unnamed_addr constant [64 x i8] c"E-Switch: Failed to find eswitch MC addr for MAC(%pM) vport(%d)\00", align 1
@.str.48 = private unnamed_addr constant [59 x i8] c"E-Switch: Failed to add allmulti MAC(%pM) to vport[%d] DB\0A\00", align 1
@.str.49 = private unnamed_addr constant [71 x i8] c"E-Switch: E-Switch modify TSAR vport element failed (vport=%d,err=%d)\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %devlink) #0 !dbg !12277 {
entry:
  %retval = alloca %struct.mlx5_eswitch*, align 8
  %devlink.addr = alloca %struct.devlink*, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %err = alloca i32, align 4
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !12280, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !12282, metadata !DIExpression()), !dbg !12283
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12284
  %call = call i8* @devlink_priv(%struct.devlink* %0) #8, !dbg !12285
  %1 = bitcast i8* %call to %struct.mlx5_core_dev*, !dbg !12285
  store %struct.mlx5_core_dev* %1, %struct.mlx5_core_dev** %dev, align 8, !dbg !12283
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12286, metadata !DIExpression()), !dbg !12287
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12288
  %call1 = call i32 @mlx5_eswitch_check(%struct.mlx5_core_dev* %2) #8, !dbg !12289
  store i32 %call1, i32* %err, align 4, !dbg !12290
  %3 = load i32, i32* %err, align 4, !dbg !12291
  %tobool = icmp ne i32 %3, 0, !dbg !12291
  br i1 %tobool, label %if.then, label %if.end, !dbg !12293

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !12294
  %conv = sext i32 %4 to i64, !dbg !12294
  %call2 = call i8* @ERR_PTR(i64 %conv) #8, !dbg !12295
  %5 = bitcast i8* %call2 to %struct.mlx5_eswitch*, !dbg !12295
  store %struct.mlx5_eswitch* %5, %struct.mlx5_eswitch** %retval, align 8, !dbg !12296
  br label %return, !dbg !12296

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12297
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 17, !dbg !12298
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !12299
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !12299
  store %struct.mlx5_eswitch* %7, %struct.mlx5_eswitch** %retval, align 8, !dbg !12300
  br label %return, !dbg !12300

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %retval, align 8, !dbg !12301
  ret %struct.mlx5_eswitch* %8, !dbg !12301
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devlink_priv(%struct.devlink* %devlink) #0 !dbg !12302 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !12305, metadata !DIExpression()), !dbg !12306
  br label %do.body, !dbg !12307

do.body:                                          ; preds = %entry
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12308
  %tobool = icmp ne %struct.devlink* %0, null, !dbg !12308
  %lnot = xor i1 %tobool, true, !dbg !12308
  %lnot1 = xor i1 %lnot, true, !dbg !12308
  %lnot2 = xor i1 %lnot1, true, !dbg !12308
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12308
  %conv = sext i32 %lnot.ext to i64, !dbg !12308
  %tobool3 = icmp ne i64 %conv, 0, !dbg !12308
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12311

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !12308

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !12312

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !12314

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !12312

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i32 1352, i32 0, i64 12) #9, !dbg !12316, !srcloc !12318
  br label %do.end7, !dbg !12316

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !12312

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 560) #9, !dbg !12319, !srcloc !12322
  unreachable, !dbg !12323

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !12312

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !12312

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !12311

do.end11:                                         ; preds = %if.end
  %1 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12324
  %priv = getelementptr inbounds %struct.devlink, %struct.devlink* %1, i32 0, i32 21, !dbg !12325
  %2 = bitcast [0 x i8]* %priv to i8*, !dbg !12326
  ret i8* %2, !dbg !12327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_check(%struct.mlx5_core_dev* %dev) #0 !dbg !12328 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12335
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !12335
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !12335
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !12335
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12335
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !12335
  %1 = load i32, i32* %add.ptr, align 4, !dbg !12335
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !12335
  br i1 %2, label %cond.true, label %cond.false, !dbg !12335

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12335
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !12335
  %hca_cur2 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !12335
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !12335
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !12335
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !12335
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !12335
  %and = and i32 %4, 255, !dbg !12335
  %shl = shl i32 %and, 24, !dbg !12335
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12335
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !12335
  %hca_cur7 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps6, i32 0, i32 0, !dbg !12335
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !12335
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !12335
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !12335
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !12335
  %and11 = and i32 %6, 65280, !dbg !12335
  %shl12 = shl i32 %and11, 8, !dbg !12335
  %or = or i32 %shl, %shl12, !dbg !12335
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12335
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !12335
  %hca_cur14 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps13, i32 0, i32 0, !dbg !12335
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !12335
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !12335
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !12335
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !12335
  %and18 = and i32 %8, 16711680, !dbg !12335
  %shr = lshr i32 %and18, 8, !dbg !12335
  %or19 = or i32 %or, %shr, !dbg !12335
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12335
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !12335
  %hca_cur21 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps20, i32 0, i32 0, !dbg !12335
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !12335
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !12335
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !12335
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !12335
  %and25 = and i32 %10, -16777216, !dbg !12335
  %shr26 = lshr i32 %and25, 24, !dbg !12335
  %or27 = or i32 %or19, %shr26, !dbg !12335
  br label %cond.end, !dbg !12335

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12335
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !12335
  %hca_cur29 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps28, i32 0, i32 0, !dbg !12335
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !12335
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !12335
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !12335
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !12335
  %call = call i32 @__fswab32(i32 %12) #10, !dbg !12335
  br label %cond.end, !dbg !12335

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !12335
  %shr33 = lshr i32 %cond, 8, !dbg !12335
  %and34 = and i32 %shr33, 3, !dbg !12335
  %cmp = icmp ne i32 %and34, 1, !dbg !12337
  br i1 %cmp, label %if.then, label %if.end, !dbg !12338

if.then:                                          ; preds = %cond.end
  store i32 -95, i32* %retval, align 4, !dbg !12339
  br label %return, !dbg !12339

if.end:                                           ; preds = %cond.end
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12340
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !12340
  %hca_cur36 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps35, i32 0, i32 0, !dbg !12340
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 0, !dbg !12340
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !12340
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 13, !dbg !12340
  %14 = load i32, i32* %add.ptr39, align 4, !dbg !12340
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !12340
  br i1 %15, label %cond.true40, label %cond.false72, !dbg !12340

cond.true40:                                      ; preds = %if.end
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12340
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !12340
  %hca_cur42 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps41, i32 0, i32 0, !dbg !12340
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 0, !dbg !12340
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !12340
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 13, !dbg !12340
  %17 = load i32, i32* %add.ptr45, align 4, !dbg !12340
  %and46 = and i32 %17, 255, !dbg !12340
  %shl47 = shl i32 %and46, 24, !dbg !12340
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12340
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !12340
  %hca_cur49 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps48, i32 0, i32 0, !dbg !12340
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 0, !dbg !12340
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !12340
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 13, !dbg !12340
  %19 = load i32, i32* %add.ptr52, align 4, !dbg !12340
  %and53 = and i32 %19, 65280, !dbg !12340
  %shl54 = shl i32 %and53, 8, !dbg !12340
  %or55 = or i32 %shl47, %shl54, !dbg !12340
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12340
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !12340
  %hca_cur57 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps56, i32 0, i32 0, !dbg !12340
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 0, !dbg !12340
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !12340
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 13, !dbg !12340
  %21 = load i32, i32* %add.ptr60, align 4, !dbg !12340
  %and61 = and i32 %21, 16711680, !dbg !12340
  %shr62 = lshr i32 %and61, 8, !dbg !12340
  %or63 = or i32 %or55, %shr62, !dbg !12340
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12340
  %caps64 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !12340
  %hca_cur65 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps64, i32 0, i32 0, !dbg !12340
  %arrayidx66 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur65, i64 0, i64 0, !dbg !12340
  %arraydecay67 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx66, i64 0, i64 0, !dbg !12340
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 13, !dbg !12340
  %23 = load i32, i32* %add.ptr68, align 4, !dbg !12340
  %and69 = and i32 %23, -16777216, !dbg !12340
  %shr70 = lshr i32 %and69, 24, !dbg !12340
  %or71 = or i32 %or63, %shr70, !dbg !12340
  br label %cond.end79, !dbg !12340

cond.false72:                                     ; preds = %if.end
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12340
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !12340
  %hca_cur74 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps73, i32 0, i32 0, !dbg !12340
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 0, !dbg !12340
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !12340
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 13, !dbg !12340
  %25 = load i32, i32* %add.ptr77, align 4, !dbg !12340
  %call78 = call i32 @__fswab32(i32 %25) #10, !dbg !12340
  br label %cond.end79, !dbg !12340

cond.end79:                                       ; preds = %cond.false72, %cond.true40
  %cond80 = phi i32 [ %or71, %cond.true40 ], [ %call78, %cond.false72 ], !dbg !12340
  %shr81 = lshr i32 %cond80, 24, !dbg !12340
  %and82 = and i32 %shr81, 1, !dbg !12340
  %tobool = icmp ne i32 %and82, 0, !dbg !12340
  br i1 %tobool, label %if.end84, label %if.then83, !dbg !12342

if.then83:                                        ; preds = %cond.end79
  store i32 -95, i32* %retval, align 4, !dbg !12343
  br label %return, !dbg !12343

if.end84:                                         ; preds = %cond.end79
  store i32 0, i32* %retval, align 4, !dbg !12344
  br label %return, !dbg !12344

return:                                           ; preds = %if.end84, %if.then83, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !12345
  ret i32 %26, !dbg !12345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !12346 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !12350, metadata !DIExpression()), !dbg !12351
  %0 = load i64, i64* %error.addr, align 8, !dbg !12352
  %1 = inttoptr i64 %0 to i8*, !dbg !12353
  ret i8* %1, !dbg !12354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !12355 {
entry:
  %retval = alloca %struct.mlx5_vport*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %idx = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12358, metadata !DIExpression()), !dbg !12359
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.declare(metadata i16* %idx, metadata !12362, metadata !DIExpression()), !dbg !12363
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12364
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !12364
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12366

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12367
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !12367
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12367
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !12367
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !12367
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !12367
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12367
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !12367
  %3 = load i32, i32* %add.ptr, align 4, !dbg !12367
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !12367
  br i1 %4, label %cond.true, label %cond.false, !dbg !12367

cond.true:                                        ; preds = %lor.lhs.false
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12367
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !12367
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !12367
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !12367
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !12367
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !12367
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !12367
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !12367
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !12367
  %and = and i32 %7, 255, !dbg !12367
  %shl = shl i32 %and, 24, !dbg !12367
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12367
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !12367
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !12367
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !12367
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !12367
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !12367
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !12367
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !12367
  %10 = load i32, i32* %add.ptr12, align 4, !dbg !12367
  %and13 = and i32 %10, 65280, !dbg !12367
  %shl14 = shl i32 %and13, 8, !dbg !12367
  %or = or i32 %shl, %shl14, !dbg !12367
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12367
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !12367
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !12367
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !12367
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !12367
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !12367
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !12367
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !12367
  %13 = load i32, i32* %add.ptr20, align 4, !dbg !12367
  %and21 = and i32 %13, 16711680, !dbg !12367
  %shr = lshr i32 %and21, 8, !dbg !12367
  %or22 = or i32 %or, %shr, !dbg !12367
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12367
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !12367
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !12367
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !12367
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !12367
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !12367
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !12367
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !12367
  %16 = load i32, i32* %add.ptr28, align 4, !dbg !12367
  %and29 = and i32 %16, -16777216, !dbg !12367
  %shr30 = lshr i32 %and29, 24, !dbg !12367
  %or31 = or i32 %or22, %shr30, !dbg !12367
  br label %cond.end, !dbg !12367

cond.false:                                       ; preds = %lor.lhs.false
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12367
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !12367
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !12367
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !12367
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !12367
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !12367
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !12367
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !12367
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !12367
  %call = call i32 @__fswab32(i32 %19) #10, !dbg !12367
  br label %cond.end, !dbg !12367

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !12367
  %shr38 = lshr i32 %cond, 31, !dbg !12367
  %and39 = and i32 %shr38, 1, !dbg !12367
  %tobool40 = icmp ne i32 %and39, 0, !dbg !12367
  br i1 %tobool40, label %if.end, label %if.then, !dbg !12368

if.then:                                          ; preds = %cond.end, %entry
  %call41 = call i8* @ERR_PTR(i64 -1) #8, !dbg !12369
  %20 = bitcast i8* %call41 to %struct.mlx5_vport*, !dbg !12369
  store %struct.mlx5_vport* %20, %struct.mlx5_vport** %retval, align 8, !dbg !12370
  br label %return, !dbg !12370

if.end:                                           ; preds = %cond.end
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12371
  %22 = load i16, i16* %vport_num.addr, align 2, !dbg !12372
  %call42 = call i32 @mlx5_eswitch_vport_num_to_index(%struct.mlx5_eswitch* %21, i16 zeroext %22) #8, !dbg !12373
  %conv = trunc i32 %call42 to i16, !dbg !12373
  store i16 %conv, i16* %idx, align 2, !dbg !12374
  %23 = load i16, i16* %idx, align 2, !dbg !12375
  %conv43 = zext i16 %23 to i32, !dbg !12375
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12377
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 8, !dbg !12378
  %25 = load i32, i32* %total_vports, align 4, !dbg !12378
  %sub = sub i32 %25, 1, !dbg !12379
  %cmp = icmp sgt i32 %conv43, %sub, !dbg !12380
  br i1 %cmp, label %if.then45, label %if.end52, !dbg !12381

if.then45:                                        ; preds = %if.end
  br label %do.body, !dbg !12382

do.body:                                          ; preds = %if.then45
  %26 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !12384
  %conv46 = zext i32 %26 to i64, !dbg !12384
  %and47 = and i64 8, %conv46, !dbg !12384
  %tobool48 = icmp ne i64 %and47, 0, !dbg !12384
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !12387

if.then49:                                        ; preds = %do.body
  br label %if.end50, !dbg !12384

if.end50:                                         ; preds = %if.then49, %do.body
  br label %do.end, !dbg !12387

do.end:                                           ; preds = %if.end50
  %call51 = call i8* @ERR_PTR(i64 -22) #8, !dbg !12388
  %27 = bitcast i8* %call51 to %struct.mlx5_vport*, !dbg !12388
  store %struct.mlx5_vport* %27, %struct.mlx5_vport** %retval, align 8, !dbg !12389
  br label %return, !dbg !12389

if.end52:                                         ; preds = %if.end
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12390
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %28, i32 0, i32 6, !dbg !12391
  %29 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !12391
  %30 = load i16, i16* %idx, align 2, !dbg !12392
  %idxprom = zext i16 %30 to i64, !dbg !12390
  %arrayidx53 = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %29, i64 %idxprom, !dbg !12390
  store %struct.mlx5_vport* %arrayidx53, %struct.mlx5_vport** %retval, align 8, !dbg !12393
  br label %return, !dbg !12393

return:                                           ; preds = %if.end52, %do.end, %if.then
  %31 = load %struct.mlx5_vport*, %struct.mlx5_vport** %retval, align 8, !dbg !12394
  ret %struct.mlx5_vport* %31, !dbg !12394
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #3 !dbg !12395 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12399, metadata !DIExpression()), !dbg !12400
  %0 = load i32, i32* %val.addr, align 4, !dbg !12401
  %call = call i32 @__arch_swab32(i32 %0) #10, !dbg !12402
  ret i32 %call, !dbg !12403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_vport_num_to_index(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !12404 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12407, metadata !DIExpression()), !dbg !12408
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !12409, metadata !DIExpression()), !dbg !12410
  %0 = load i16, i16* %vport_num.addr, align 2, !dbg !12411
  %conv = zext i16 %0 to i32, !dbg !12411
  %cmp = icmp eq i32 %conv, 65534, !dbg !12413
  br i1 %cmp, label %if.then, label %if.end5, !dbg !12414

if.then:                                          ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12415
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !12418
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12418
  %call = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %2) #8, !dbg !12419
  br i1 %call, label %if.end, label %if.then2, !dbg !12420

if.then2:                                         ; preds = %if.then
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12421
  %dev3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !12421
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev3, align 8, !dbg !12421
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 0, !dbg !12421
  %5 = load %struct.device*, %struct.device** %device, align 8, !dbg !12421
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !12421
  br label %if.end, !dbg !12421

if.end:                                           ; preds = %if.then2, %if.then
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12422
  %call4 = call i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %6) #8, !dbg !12423
  store i32 %call4, i32* %retval, align 4, !dbg !12424
  br label %return, !dbg !12424

if.end5:                                          ; preds = %entry
  %7 = load i16, i16* %vport_num.addr, align 2, !dbg !12425
  %conv6 = zext i16 %7 to i32, !dbg !12425
  %cmp7 = icmp eq i32 %conv6, 65535, !dbg !12427
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !12428

if.then9:                                         ; preds = %if.end5
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12429
  %call10 = call i32 @mlx5_eswitch_uplink_idx(%struct.mlx5_eswitch* %8) #8, !dbg !12430
  store i32 %call10, i32* %retval, align 4, !dbg !12431
  br label %return, !dbg !12431

if.end11:                                         ; preds = %if.end5
  %9 = load i16, i16* %vport_num.addr, align 2, !dbg !12432
  %conv12 = zext i16 %9 to i32, !dbg !12432
  store i32 %conv12, i32* %retval, align 4, !dbg !12433
  br label %return, !dbg !12433

return:                                           ; preds = %if.end11, %if.then9, %if.end
  %10 = load i32, i32* %retval, align 4, !dbg !12434
  ret i32 %10, !dbg !12434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_modify_esw_vport_context(%struct.mlx5_core_dev* %dev, i16 zeroext %vport, i1 zeroext %other_vport, i8* %in) #0 !dbg !12435 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %other_vport.addr = alloca i8, align 1
  %in.addr = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v167 = alloca i32, align 4
  %_v345 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp523 = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12438, metadata !DIExpression()), !dbg !12439
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !12440, metadata !DIExpression()), !dbg !12441
  %frombool = zext i1 %other_vport to i8
  store i8 %frombool, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !12442, metadata !DIExpression()), !dbg !12443
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !12444, metadata !DIExpression()), !dbg !12445
  br label %do.body, !dbg !12446

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12447, metadata !DIExpression()), !dbg !12449
  store i32 1875, i32* %_v, align 4, !dbg !12449
  br label %do.body1, !dbg !12449

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !12450

do.end:                                           ; preds = %do.body1
  %0 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %1 = bitcast i8* %0 to i32*, !dbg !12449
  %add.ptr = getelementptr i32, i32* %1, i64 0, !dbg !12449
  %2 = load i32, i32* %add.ptr, align 4, !dbg !12449
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !12449
  br i1 %3, label %cond.true, label %cond.false, !dbg !12449

cond.true:                                        ; preds = %do.end
  %4 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %5 = bitcast i8* %4 to i32*, !dbg !12449
  %add.ptr2 = getelementptr i32, i32* %5, i64 0, !dbg !12449
  %6 = load i32, i32* %add.ptr2, align 4, !dbg !12449
  %and = and i32 %6, 255, !dbg !12449
  %shl = shl i32 %and, 24, !dbg !12449
  %7 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %8 = bitcast i8* %7 to i32*, !dbg !12449
  %add.ptr3 = getelementptr i32, i32* %8, i64 0, !dbg !12449
  %9 = load i32, i32* %add.ptr3, align 4, !dbg !12449
  %and4 = and i32 %9, 65280, !dbg !12449
  %shl5 = shl i32 %and4, 8, !dbg !12449
  %or = or i32 %shl, %shl5, !dbg !12449
  %10 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %11 = bitcast i8* %10 to i32*, !dbg !12449
  %add.ptr6 = getelementptr i32, i32* %11, i64 0, !dbg !12449
  %12 = load i32, i32* %add.ptr6, align 4, !dbg !12449
  %and7 = and i32 %12, 16711680, !dbg !12449
  %shr = lshr i32 %and7, 8, !dbg !12449
  %or8 = or i32 %or, %shr, !dbg !12449
  %13 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %14 = bitcast i8* %13 to i32*, !dbg !12449
  %add.ptr9 = getelementptr i32, i32* %14, i64 0, !dbg !12449
  %15 = load i32, i32* %add.ptr9, align 4, !dbg !12449
  %and10 = and i32 %15, -16777216, !dbg !12449
  %shr11 = lshr i32 %and10, 24, !dbg !12449
  %or12 = or i32 %or8, %shr11, !dbg !12449
  br label %cond.end, !dbg !12449

cond.false:                                       ; preds = %do.end
  %16 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %17 = bitcast i8* %16 to i32*, !dbg !12449
  %add.ptr13 = getelementptr i32, i32* %17, i64 0, !dbg !12449
  %18 = load i32, i32* %add.ptr13, align 4, !dbg !12449
  %call = call i32 @__fswab32(i32 %18) #10, !dbg !12449
  br label %cond.end, !dbg !12449

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call, %cond.false ], !dbg !12449
  %and14 = and i32 %cond, 65535, !dbg !12449
  %19 = load i32, i32* %_v, align 4, !dbg !12449
  %and15 = and i32 %19, 65535, !dbg !12449
  %shl16 = shl i32 %and15, 16, !dbg !12449
  %or17 = or i32 %and14, %shl16, !dbg !12449
  %20 = call i1 @llvm.is.constant.i32(i32 %or17), !dbg !12449
  br i1 %20, label %cond.true18, label %cond.false134, !dbg !12449

cond.true18:                                      ; preds = %cond.end
  %21 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %22 = bitcast i8* %21 to i32*, !dbg !12449
  %add.ptr19 = getelementptr i32, i32* %22, i64 0, !dbg !12449
  %23 = load i32, i32* %add.ptr19, align 4, !dbg !12449
  %24 = call i1 @llvm.is.constant.i32(i32 %23), !dbg !12449
  br i1 %24, label %cond.true20, label %cond.false36, !dbg !12449

cond.true20:                                      ; preds = %cond.true18
  %25 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %26 = bitcast i8* %25 to i32*, !dbg !12449
  %add.ptr21 = getelementptr i32, i32* %26, i64 0, !dbg !12449
  %27 = load i32, i32* %add.ptr21, align 4, !dbg !12449
  %and22 = and i32 %27, 255, !dbg !12449
  %shl23 = shl i32 %and22, 24, !dbg !12449
  %28 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %29 = bitcast i8* %28 to i32*, !dbg !12449
  %add.ptr24 = getelementptr i32, i32* %29, i64 0, !dbg !12449
  %30 = load i32, i32* %add.ptr24, align 4, !dbg !12449
  %and25 = and i32 %30, 65280, !dbg !12449
  %shl26 = shl i32 %and25, 8, !dbg !12449
  %or27 = or i32 %shl23, %shl26, !dbg !12449
  %31 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %32 = bitcast i8* %31 to i32*, !dbg !12449
  %add.ptr28 = getelementptr i32, i32* %32, i64 0, !dbg !12449
  %33 = load i32, i32* %add.ptr28, align 4, !dbg !12449
  %and29 = and i32 %33, 16711680, !dbg !12449
  %shr30 = lshr i32 %and29, 8, !dbg !12449
  %or31 = or i32 %or27, %shr30, !dbg !12449
  %34 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %35 = bitcast i8* %34 to i32*, !dbg !12449
  %add.ptr32 = getelementptr i32, i32* %35, i64 0, !dbg !12449
  %36 = load i32, i32* %add.ptr32, align 4, !dbg !12449
  %and33 = and i32 %36, -16777216, !dbg !12449
  %shr34 = lshr i32 %and33, 24, !dbg !12449
  %or35 = or i32 %or31, %shr34, !dbg !12449
  br label %cond.end39, !dbg !12449

cond.false36:                                     ; preds = %cond.true18
  %37 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %38 = bitcast i8* %37 to i32*, !dbg !12449
  %add.ptr37 = getelementptr i32, i32* %38, i64 0, !dbg !12449
  %39 = load i32, i32* %add.ptr37, align 4, !dbg !12449
  %call38 = call i32 @__fswab32(i32 %39) #10, !dbg !12449
  br label %cond.end39, !dbg !12449

cond.end39:                                       ; preds = %cond.false36, %cond.true20
  %cond40 = phi i32 [ %or35, %cond.true20 ], [ %call38, %cond.false36 ], !dbg !12449
  %and41 = and i32 %cond40, 65535, !dbg !12449
  %40 = load i32, i32* %_v, align 4, !dbg !12449
  %and42 = and i32 %40, 65535, !dbg !12449
  %shl43 = shl i32 %and42, 16, !dbg !12449
  %or44 = or i32 %and41, %shl43, !dbg !12449
  %and45 = and i32 %or44, 255, !dbg !12449
  %shl46 = shl i32 %and45, 24, !dbg !12449
  %41 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %42 = bitcast i8* %41 to i32*, !dbg !12449
  %add.ptr47 = getelementptr i32, i32* %42, i64 0, !dbg !12449
  %43 = load i32, i32* %add.ptr47, align 4, !dbg !12449
  %44 = call i1 @llvm.is.constant.i32(i32 %43), !dbg !12449
  br i1 %44, label %cond.true48, label %cond.false64, !dbg !12449

cond.true48:                                      ; preds = %cond.end39
  %45 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %46 = bitcast i8* %45 to i32*, !dbg !12449
  %add.ptr49 = getelementptr i32, i32* %46, i64 0, !dbg !12449
  %47 = load i32, i32* %add.ptr49, align 4, !dbg !12449
  %and50 = and i32 %47, 255, !dbg !12449
  %shl51 = shl i32 %and50, 24, !dbg !12449
  %48 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %49 = bitcast i8* %48 to i32*, !dbg !12449
  %add.ptr52 = getelementptr i32, i32* %49, i64 0, !dbg !12449
  %50 = load i32, i32* %add.ptr52, align 4, !dbg !12449
  %and53 = and i32 %50, 65280, !dbg !12449
  %shl54 = shl i32 %and53, 8, !dbg !12449
  %or55 = or i32 %shl51, %shl54, !dbg !12449
  %51 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %52 = bitcast i8* %51 to i32*, !dbg !12449
  %add.ptr56 = getelementptr i32, i32* %52, i64 0, !dbg !12449
  %53 = load i32, i32* %add.ptr56, align 4, !dbg !12449
  %and57 = and i32 %53, 16711680, !dbg !12449
  %shr58 = lshr i32 %and57, 8, !dbg !12449
  %or59 = or i32 %or55, %shr58, !dbg !12449
  %54 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %55 = bitcast i8* %54 to i32*, !dbg !12449
  %add.ptr60 = getelementptr i32, i32* %55, i64 0, !dbg !12449
  %56 = load i32, i32* %add.ptr60, align 4, !dbg !12449
  %and61 = and i32 %56, -16777216, !dbg !12449
  %shr62 = lshr i32 %and61, 24, !dbg !12449
  %or63 = or i32 %or59, %shr62, !dbg !12449
  br label %cond.end67, !dbg !12449

cond.false64:                                     ; preds = %cond.end39
  %57 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %58 = bitcast i8* %57 to i32*, !dbg !12449
  %add.ptr65 = getelementptr i32, i32* %58, i64 0, !dbg !12449
  %59 = load i32, i32* %add.ptr65, align 4, !dbg !12449
  %call66 = call i32 @__fswab32(i32 %59) #10, !dbg !12449
  br label %cond.end67, !dbg !12449

cond.end67:                                       ; preds = %cond.false64, %cond.true48
  %cond68 = phi i32 [ %or63, %cond.true48 ], [ %call66, %cond.false64 ], !dbg !12449
  %and69 = and i32 %cond68, 65535, !dbg !12449
  %60 = load i32, i32* %_v, align 4, !dbg !12449
  %and70 = and i32 %60, 65535, !dbg !12449
  %shl71 = shl i32 %and70, 16, !dbg !12449
  %or72 = or i32 %and69, %shl71, !dbg !12449
  %and73 = and i32 %or72, 65280, !dbg !12449
  %shl74 = shl i32 %and73, 8, !dbg !12449
  %or75 = or i32 %shl46, %shl74, !dbg !12449
  %61 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %62 = bitcast i8* %61 to i32*, !dbg !12449
  %add.ptr76 = getelementptr i32, i32* %62, i64 0, !dbg !12449
  %63 = load i32, i32* %add.ptr76, align 4, !dbg !12449
  %64 = call i1 @llvm.is.constant.i32(i32 %63), !dbg !12449
  br i1 %64, label %cond.true77, label %cond.false93, !dbg !12449

cond.true77:                                      ; preds = %cond.end67
  %65 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %66 = bitcast i8* %65 to i32*, !dbg !12449
  %add.ptr78 = getelementptr i32, i32* %66, i64 0, !dbg !12449
  %67 = load i32, i32* %add.ptr78, align 4, !dbg !12449
  %and79 = and i32 %67, 255, !dbg !12449
  %shl80 = shl i32 %and79, 24, !dbg !12449
  %68 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %69 = bitcast i8* %68 to i32*, !dbg !12449
  %add.ptr81 = getelementptr i32, i32* %69, i64 0, !dbg !12449
  %70 = load i32, i32* %add.ptr81, align 4, !dbg !12449
  %and82 = and i32 %70, 65280, !dbg !12449
  %shl83 = shl i32 %and82, 8, !dbg !12449
  %or84 = or i32 %shl80, %shl83, !dbg !12449
  %71 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %72 = bitcast i8* %71 to i32*, !dbg !12449
  %add.ptr85 = getelementptr i32, i32* %72, i64 0, !dbg !12449
  %73 = load i32, i32* %add.ptr85, align 4, !dbg !12449
  %and86 = and i32 %73, 16711680, !dbg !12449
  %shr87 = lshr i32 %and86, 8, !dbg !12449
  %or88 = or i32 %or84, %shr87, !dbg !12449
  %74 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %75 = bitcast i8* %74 to i32*, !dbg !12449
  %add.ptr89 = getelementptr i32, i32* %75, i64 0, !dbg !12449
  %76 = load i32, i32* %add.ptr89, align 4, !dbg !12449
  %and90 = and i32 %76, -16777216, !dbg !12449
  %shr91 = lshr i32 %and90, 24, !dbg !12449
  %or92 = or i32 %or88, %shr91, !dbg !12449
  br label %cond.end96, !dbg !12449

cond.false93:                                     ; preds = %cond.end67
  %77 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %78 = bitcast i8* %77 to i32*, !dbg !12449
  %add.ptr94 = getelementptr i32, i32* %78, i64 0, !dbg !12449
  %79 = load i32, i32* %add.ptr94, align 4, !dbg !12449
  %call95 = call i32 @__fswab32(i32 %79) #10, !dbg !12449
  br label %cond.end96, !dbg !12449

cond.end96:                                       ; preds = %cond.false93, %cond.true77
  %cond97 = phi i32 [ %or92, %cond.true77 ], [ %call95, %cond.false93 ], !dbg !12449
  %and98 = and i32 %cond97, 65535, !dbg !12449
  %80 = load i32, i32* %_v, align 4, !dbg !12449
  %and99 = and i32 %80, 65535, !dbg !12449
  %shl100 = shl i32 %and99, 16, !dbg !12449
  %or101 = or i32 %and98, %shl100, !dbg !12449
  %and102 = and i32 %or101, 16711680, !dbg !12449
  %shr103 = lshr i32 %and102, 8, !dbg !12449
  %or104 = or i32 %or75, %shr103, !dbg !12449
  %81 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %82 = bitcast i8* %81 to i32*, !dbg !12449
  %add.ptr105 = getelementptr i32, i32* %82, i64 0, !dbg !12449
  %83 = load i32, i32* %add.ptr105, align 4, !dbg !12449
  %84 = call i1 @llvm.is.constant.i32(i32 %83), !dbg !12449
  br i1 %84, label %cond.true106, label %cond.false122, !dbg !12449

cond.true106:                                     ; preds = %cond.end96
  %85 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %86 = bitcast i8* %85 to i32*, !dbg !12449
  %add.ptr107 = getelementptr i32, i32* %86, i64 0, !dbg !12449
  %87 = load i32, i32* %add.ptr107, align 4, !dbg !12449
  %and108 = and i32 %87, 255, !dbg !12449
  %shl109 = shl i32 %and108, 24, !dbg !12449
  %88 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %89 = bitcast i8* %88 to i32*, !dbg !12449
  %add.ptr110 = getelementptr i32, i32* %89, i64 0, !dbg !12449
  %90 = load i32, i32* %add.ptr110, align 4, !dbg !12449
  %and111 = and i32 %90, 65280, !dbg !12449
  %shl112 = shl i32 %and111, 8, !dbg !12449
  %or113 = or i32 %shl109, %shl112, !dbg !12449
  %91 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %92 = bitcast i8* %91 to i32*, !dbg !12449
  %add.ptr114 = getelementptr i32, i32* %92, i64 0, !dbg !12449
  %93 = load i32, i32* %add.ptr114, align 4, !dbg !12449
  %and115 = and i32 %93, 16711680, !dbg !12449
  %shr116 = lshr i32 %and115, 8, !dbg !12449
  %or117 = or i32 %or113, %shr116, !dbg !12449
  %94 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %95 = bitcast i8* %94 to i32*, !dbg !12449
  %add.ptr118 = getelementptr i32, i32* %95, i64 0, !dbg !12449
  %96 = load i32, i32* %add.ptr118, align 4, !dbg !12449
  %and119 = and i32 %96, -16777216, !dbg !12449
  %shr120 = lshr i32 %and119, 24, !dbg !12449
  %or121 = or i32 %or117, %shr120, !dbg !12449
  br label %cond.end125, !dbg !12449

cond.false122:                                    ; preds = %cond.end96
  %97 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %98 = bitcast i8* %97 to i32*, !dbg !12449
  %add.ptr123 = getelementptr i32, i32* %98, i64 0, !dbg !12449
  %99 = load i32, i32* %add.ptr123, align 4, !dbg !12449
  %call124 = call i32 @__fswab32(i32 %99) #10, !dbg !12449
  br label %cond.end125, !dbg !12449

cond.end125:                                      ; preds = %cond.false122, %cond.true106
  %cond126 = phi i32 [ %or121, %cond.true106 ], [ %call124, %cond.false122 ], !dbg !12449
  %and127 = and i32 %cond126, 65535, !dbg !12449
  %100 = load i32, i32* %_v, align 4, !dbg !12449
  %and128 = and i32 %100, 65535, !dbg !12449
  %shl129 = shl i32 %and128, 16, !dbg !12449
  %or130 = or i32 %and127, %shl129, !dbg !12449
  %and131 = and i32 %or130, -16777216, !dbg !12449
  %shr132 = lshr i32 %and131, 24, !dbg !12449
  %or133 = or i32 %or104, %shr132, !dbg !12449
  br label %cond.end162, !dbg !12449

cond.false134:                                    ; preds = %cond.end
  %101 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %102 = bitcast i8* %101 to i32*, !dbg !12449
  %add.ptr135 = getelementptr i32, i32* %102, i64 0, !dbg !12449
  %103 = load i32, i32* %add.ptr135, align 4, !dbg !12449
  %104 = call i1 @llvm.is.constant.i32(i32 %103), !dbg !12449
  br i1 %104, label %cond.true136, label %cond.false152, !dbg !12449

cond.true136:                                     ; preds = %cond.false134
  %105 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %106 = bitcast i8* %105 to i32*, !dbg !12449
  %add.ptr137 = getelementptr i32, i32* %106, i64 0, !dbg !12449
  %107 = load i32, i32* %add.ptr137, align 4, !dbg !12449
  %and138 = and i32 %107, 255, !dbg !12449
  %shl139 = shl i32 %and138, 24, !dbg !12449
  %108 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %109 = bitcast i8* %108 to i32*, !dbg !12449
  %add.ptr140 = getelementptr i32, i32* %109, i64 0, !dbg !12449
  %110 = load i32, i32* %add.ptr140, align 4, !dbg !12449
  %and141 = and i32 %110, 65280, !dbg !12449
  %shl142 = shl i32 %and141, 8, !dbg !12449
  %or143 = or i32 %shl139, %shl142, !dbg !12449
  %111 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %112 = bitcast i8* %111 to i32*, !dbg !12449
  %add.ptr144 = getelementptr i32, i32* %112, i64 0, !dbg !12449
  %113 = load i32, i32* %add.ptr144, align 4, !dbg !12449
  %and145 = and i32 %113, 16711680, !dbg !12449
  %shr146 = lshr i32 %and145, 8, !dbg !12449
  %or147 = or i32 %or143, %shr146, !dbg !12449
  %114 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %115 = bitcast i8* %114 to i32*, !dbg !12449
  %add.ptr148 = getelementptr i32, i32* %115, i64 0, !dbg !12449
  %116 = load i32, i32* %add.ptr148, align 4, !dbg !12449
  %and149 = and i32 %116, -16777216, !dbg !12449
  %shr150 = lshr i32 %and149, 24, !dbg !12449
  %or151 = or i32 %or147, %shr150, !dbg !12449
  br label %cond.end155, !dbg !12449

cond.false152:                                    ; preds = %cond.false134
  %117 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %118 = bitcast i8* %117 to i32*, !dbg !12449
  %add.ptr153 = getelementptr i32, i32* %118, i64 0, !dbg !12449
  %119 = load i32, i32* %add.ptr153, align 4, !dbg !12449
  %call154 = call i32 @__fswab32(i32 %119) #10, !dbg !12449
  br label %cond.end155, !dbg !12449

cond.end155:                                      ; preds = %cond.false152, %cond.true136
  %cond156 = phi i32 [ %or151, %cond.true136 ], [ %call154, %cond.false152 ], !dbg !12449
  %and157 = and i32 %cond156, 65535, !dbg !12449
  %120 = load i32, i32* %_v, align 4, !dbg !12449
  %and158 = and i32 %120, 65535, !dbg !12449
  %shl159 = shl i32 %and158, 16, !dbg !12449
  %or160 = or i32 %and157, %shl159, !dbg !12449
  %call161 = call i32 @__fswab32(i32 %or160) #10, !dbg !12449
  br label %cond.end162, !dbg !12449

cond.end162:                                      ; preds = %cond.end155, %cond.end125
  %cond163 = phi i32 [ %or133, %cond.end125 ], [ %call161, %cond.end155 ], !dbg !12449
  %121 = load i8*, i8** %in.addr, align 8, !dbg !12449
  %122 = bitcast i8* %121 to i32*, !dbg !12449
  %add.ptr164 = getelementptr i32, i32* %122, i64 0, !dbg !12449
  store i32 %cond163, i32* %add.ptr164, align 4, !dbg !12449
  br label %do.end165, !dbg !12449

do.end165:                                        ; preds = %cond.end162
  br label %do.body166, !dbg !12452

do.body166:                                       ; preds = %do.end165
  call void @llvm.dbg.declare(metadata i32* %_v167, metadata !12453, metadata !DIExpression()), !dbg !12455
  %123 = load i16, i16* %vport.addr, align 2, !dbg !12455
  %conv = zext i16 %123 to i32, !dbg !12455
  store i32 %conv, i32* %_v167, align 4, !dbg !12455
  br label %do.body168, !dbg !12455

do.body168:                                       ; preds = %do.body166
  br label %do.end169, !dbg !12456

do.end169:                                        ; preds = %do.body168
  %124 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %125 = bitcast i8* %124 to i32*, !dbg !12455
  %add.ptr170 = getelementptr i32, i32* %125, i64 2, !dbg !12455
  %126 = load i32, i32* %add.ptr170, align 4, !dbg !12455
  %127 = call i1 @llvm.is.constant.i32(i32 %126), !dbg !12455
  br i1 %127, label %cond.true171, label %cond.false187, !dbg !12455

cond.true171:                                     ; preds = %do.end169
  %128 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %129 = bitcast i8* %128 to i32*, !dbg !12455
  %add.ptr172 = getelementptr i32, i32* %129, i64 2, !dbg !12455
  %130 = load i32, i32* %add.ptr172, align 4, !dbg !12455
  %and173 = and i32 %130, 255, !dbg !12455
  %shl174 = shl i32 %and173, 24, !dbg !12455
  %131 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %132 = bitcast i8* %131 to i32*, !dbg !12455
  %add.ptr175 = getelementptr i32, i32* %132, i64 2, !dbg !12455
  %133 = load i32, i32* %add.ptr175, align 4, !dbg !12455
  %and176 = and i32 %133, 65280, !dbg !12455
  %shl177 = shl i32 %and176, 8, !dbg !12455
  %or178 = or i32 %shl174, %shl177, !dbg !12455
  %134 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %135 = bitcast i8* %134 to i32*, !dbg !12455
  %add.ptr179 = getelementptr i32, i32* %135, i64 2, !dbg !12455
  %136 = load i32, i32* %add.ptr179, align 4, !dbg !12455
  %and180 = and i32 %136, 16711680, !dbg !12455
  %shr181 = lshr i32 %and180, 8, !dbg !12455
  %or182 = or i32 %or178, %shr181, !dbg !12455
  %137 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %138 = bitcast i8* %137 to i32*, !dbg !12455
  %add.ptr183 = getelementptr i32, i32* %138, i64 2, !dbg !12455
  %139 = load i32, i32* %add.ptr183, align 4, !dbg !12455
  %and184 = and i32 %139, -16777216, !dbg !12455
  %shr185 = lshr i32 %and184, 24, !dbg !12455
  %or186 = or i32 %or182, %shr185, !dbg !12455
  br label %cond.end190, !dbg !12455

cond.false187:                                    ; preds = %do.end169
  %140 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %141 = bitcast i8* %140 to i32*, !dbg !12455
  %add.ptr188 = getelementptr i32, i32* %141, i64 2, !dbg !12455
  %142 = load i32, i32* %add.ptr188, align 4, !dbg !12455
  %call189 = call i32 @__fswab32(i32 %142) #10, !dbg !12455
  br label %cond.end190, !dbg !12455

cond.end190:                                      ; preds = %cond.false187, %cond.true171
  %cond191 = phi i32 [ %or186, %cond.true171 ], [ %call189, %cond.false187 ], !dbg !12455
  %and192 = and i32 %cond191, -65536, !dbg !12455
  %143 = load i32, i32* %_v167, align 4, !dbg !12455
  %and193 = and i32 %143, 65535, !dbg !12455
  %shl194 = shl i32 %and193, 0, !dbg !12455
  %or195 = or i32 %and192, %shl194, !dbg !12455
  %144 = call i1 @llvm.is.constant.i32(i32 %or195), !dbg !12455
  br i1 %144, label %cond.true196, label %cond.false312, !dbg !12455

cond.true196:                                     ; preds = %cond.end190
  %145 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %146 = bitcast i8* %145 to i32*, !dbg !12455
  %add.ptr197 = getelementptr i32, i32* %146, i64 2, !dbg !12455
  %147 = load i32, i32* %add.ptr197, align 4, !dbg !12455
  %148 = call i1 @llvm.is.constant.i32(i32 %147), !dbg !12455
  br i1 %148, label %cond.true198, label %cond.false214, !dbg !12455

cond.true198:                                     ; preds = %cond.true196
  %149 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %150 = bitcast i8* %149 to i32*, !dbg !12455
  %add.ptr199 = getelementptr i32, i32* %150, i64 2, !dbg !12455
  %151 = load i32, i32* %add.ptr199, align 4, !dbg !12455
  %and200 = and i32 %151, 255, !dbg !12455
  %shl201 = shl i32 %and200, 24, !dbg !12455
  %152 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %153 = bitcast i8* %152 to i32*, !dbg !12455
  %add.ptr202 = getelementptr i32, i32* %153, i64 2, !dbg !12455
  %154 = load i32, i32* %add.ptr202, align 4, !dbg !12455
  %and203 = and i32 %154, 65280, !dbg !12455
  %shl204 = shl i32 %and203, 8, !dbg !12455
  %or205 = or i32 %shl201, %shl204, !dbg !12455
  %155 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %156 = bitcast i8* %155 to i32*, !dbg !12455
  %add.ptr206 = getelementptr i32, i32* %156, i64 2, !dbg !12455
  %157 = load i32, i32* %add.ptr206, align 4, !dbg !12455
  %and207 = and i32 %157, 16711680, !dbg !12455
  %shr208 = lshr i32 %and207, 8, !dbg !12455
  %or209 = or i32 %or205, %shr208, !dbg !12455
  %158 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %159 = bitcast i8* %158 to i32*, !dbg !12455
  %add.ptr210 = getelementptr i32, i32* %159, i64 2, !dbg !12455
  %160 = load i32, i32* %add.ptr210, align 4, !dbg !12455
  %and211 = and i32 %160, -16777216, !dbg !12455
  %shr212 = lshr i32 %and211, 24, !dbg !12455
  %or213 = or i32 %or209, %shr212, !dbg !12455
  br label %cond.end217, !dbg !12455

cond.false214:                                    ; preds = %cond.true196
  %161 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %162 = bitcast i8* %161 to i32*, !dbg !12455
  %add.ptr215 = getelementptr i32, i32* %162, i64 2, !dbg !12455
  %163 = load i32, i32* %add.ptr215, align 4, !dbg !12455
  %call216 = call i32 @__fswab32(i32 %163) #10, !dbg !12455
  br label %cond.end217, !dbg !12455

cond.end217:                                      ; preds = %cond.false214, %cond.true198
  %cond218 = phi i32 [ %or213, %cond.true198 ], [ %call216, %cond.false214 ], !dbg !12455
  %and219 = and i32 %cond218, -65536, !dbg !12455
  %164 = load i32, i32* %_v167, align 4, !dbg !12455
  %and220 = and i32 %164, 65535, !dbg !12455
  %shl221 = shl i32 %and220, 0, !dbg !12455
  %or222 = or i32 %and219, %shl221, !dbg !12455
  %and223 = and i32 %or222, 255, !dbg !12455
  %shl224 = shl i32 %and223, 24, !dbg !12455
  %165 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %166 = bitcast i8* %165 to i32*, !dbg !12455
  %add.ptr225 = getelementptr i32, i32* %166, i64 2, !dbg !12455
  %167 = load i32, i32* %add.ptr225, align 4, !dbg !12455
  %168 = call i1 @llvm.is.constant.i32(i32 %167), !dbg !12455
  br i1 %168, label %cond.true226, label %cond.false242, !dbg !12455

cond.true226:                                     ; preds = %cond.end217
  %169 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %170 = bitcast i8* %169 to i32*, !dbg !12455
  %add.ptr227 = getelementptr i32, i32* %170, i64 2, !dbg !12455
  %171 = load i32, i32* %add.ptr227, align 4, !dbg !12455
  %and228 = and i32 %171, 255, !dbg !12455
  %shl229 = shl i32 %and228, 24, !dbg !12455
  %172 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %173 = bitcast i8* %172 to i32*, !dbg !12455
  %add.ptr230 = getelementptr i32, i32* %173, i64 2, !dbg !12455
  %174 = load i32, i32* %add.ptr230, align 4, !dbg !12455
  %and231 = and i32 %174, 65280, !dbg !12455
  %shl232 = shl i32 %and231, 8, !dbg !12455
  %or233 = or i32 %shl229, %shl232, !dbg !12455
  %175 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %176 = bitcast i8* %175 to i32*, !dbg !12455
  %add.ptr234 = getelementptr i32, i32* %176, i64 2, !dbg !12455
  %177 = load i32, i32* %add.ptr234, align 4, !dbg !12455
  %and235 = and i32 %177, 16711680, !dbg !12455
  %shr236 = lshr i32 %and235, 8, !dbg !12455
  %or237 = or i32 %or233, %shr236, !dbg !12455
  %178 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %179 = bitcast i8* %178 to i32*, !dbg !12455
  %add.ptr238 = getelementptr i32, i32* %179, i64 2, !dbg !12455
  %180 = load i32, i32* %add.ptr238, align 4, !dbg !12455
  %and239 = and i32 %180, -16777216, !dbg !12455
  %shr240 = lshr i32 %and239, 24, !dbg !12455
  %or241 = or i32 %or237, %shr240, !dbg !12455
  br label %cond.end245, !dbg !12455

cond.false242:                                    ; preds = %cond.end217
  %181 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %182 = bitcast i8* %181 to i32*, !dbg !12455
  %add.ptr243 = getelementptr i32, i32* %182, i64 2, !dbg !12455
  %183 = load i32, i32* %add.ptr243, align 4, !dbg !12455
  %call244 = call i32 @__fswab32(i32 %183) #10, !dbg !12455
  br label %cond.end245, !dbg !12455

cond.end245:                                      ; preds = %cond.false242, %cond.true226
  %cond246 = phi i32 [ %or241, %cond.true226 ], [ %call244, %cond.false242 ], !dbg !12455
  %and247 = and i32 %cond246, -65536, !dbg !12455
  %184 = load i32, i32* %_v167, align 4, !dbg !12455
  %and248 = and i32 %184, 65535, !dbg !12455
  %shl249 = shl i32 %and248, 0, !dbg !12455
  %or250 = or i32 %and247, %shl249, !dbg !12455
  %and251 = and i32 %or250, 65280, !dbg !12455
  %shl252 = shl i32 %and251, 8, !dbg !12455
  %or253 = or i32 %shl224, %shl252, !dbg !12455
  %185 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %186 = bitcast i8* %185 to i32*, !dbg !12455
  %add.ptr254 = getelementptr i32, i32* %186, i64 2, !dbg !12455
  %187 = load i32, i32* %add.ptr254, align 4, !dbg !12455
  %188 = call i1 @llvm.is.constant.i32(i32 %187), !dbg !12455
  br i1 %188, label %cond.true255, label %cond.false271, !dbg !12455

cond.true255:                                     ; preds = %cond.end245
  %189 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %190 = bitcast i8* %189 to i32*, !dbg !12455
  %add.ptr256 = getelementptr i32, i32* %190, i64 2, !dbg !12455
  %191 = load i32, i32* %add.ptr256, align 4, !dbg !12455
  %and257 = and i32 %191, 255, !dbg !12455
  %shl258 = shl i32 %and257, 24, !dbg !12455
  %192 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %193 = bitcast i8* %192 to i32*, !dbg !12455
  %add.ptr259 = getelementptr i32, i32* %193, i64 2, !dbg !12455
  %194 = load i32, i32* %add.ptr259, align 4, !dbg !12455
  %and260 = and i32 %194, 65280, !dbg !12455
  %shl261 = shl i32 %and260, 8, !dbg !12455
  %or262 = or i32 %shl258, %shl261, !dbg !12455
  %195 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %196 = bitcast i8* %195 to i32*, !dbg !12455
  %add.ptr263 = getelementptr i32, i32* %196, i64 2, !dbg !12455
  %197 = load i32, i32* %add.ptr263, align 4, !dbg !12455
  %and264 = and i32 %197, 16711680, !dbg !12455
  %shr265 = lshr i32 %and264, 8, !dbg !12455
  %or266 = or i32 %or262, %shr265, !dbg !12455
  %198 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %199 = bitcast i8* %198 to i32*, !dbg !12455
  %add.ptr267 = getelementptr i32, i32* %199, i64 2, !dbg !12455
  %200 = load i32, i32* %add.ptr267, align 4, !dbg !12455
  %and268 = and i32 %200, -16777216, !dbg !12455
  %shr269 = lshr i32 %and268, 24, !dbg !12455
  %or270 = or i32 %or266, %shr269, !dbg !12455
  br label %cond.end274, !dbg !12455

cond.false271:                                    ; preds = %cond.end245
  %201 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %202 = bitcast i8* %201 to i32*, !dbg !12455
  %add.ptr272 = getelementptr i32, i32* %202, i64 2, !dbg !12455
  %203 = load i32, i32* %add.ptr272, align 4, !dbg !12455
  %call273 = call i32 @__fswab32(i32 %203) #10, !dbg !12455
  br label %cond.end274, !dbg !12455

cond.end274:                                      ; preds = %cond.false271, %cond.true255
  %cond275 = phi i32 [ %or270, %cond.true255 ], [ %call273, %cond.false271 ], !dbg !12455
  %and276 = and i32 %cond275, -65536, !dbg !12455
  %204 = load i32, i32* %_v167, align 4, !dbg !12455
  %and277 = and i32 %204, 65535, !dbg !12455
  %shl278 = shl i32 %and277, 0, !dbg !12455
  %or279 = or i32 %and276, %shl278, !dbg !12455
  %and280 = and i32 %or279, 16711680, !dbg !12455
  %shr281 = lshr i32 %and280, 8, !dbg !12455
  %or282 = or i32 %or253, %shr281, !dbg !12455
  %205 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %206 = bitcast i8* %205 to i32*, !dbg !12455
  %add.ptr283 = getelementptr i32, i32* %206, i64 2, !dbg !12455
  %207 = load i32, i32* %add.ptr283, align 4, !dbg !12455
  %208 = call i1 @llvm.is.constant.i32(i32 %207), !dbg !12455
  br i1 %208, label %cond.true284, label %cond.false300, !dbg !12455

cond.true284:                                     ; preds = %cond.end274
  %209 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %210 = bitcast i8* %209 to i32*, !dbg !12455
  %add.ptr285 = getelementptr i32, i32* %210, i64 2, !dbg !12455
  %211 = load i32, i32* %add.ptr285, align 4, !dbg !12455
  %and286 = and i32 %211, 255, !dbg !12455
  %shl287 = shl i32 %and286, 24, !dbg !12455
  %212 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %213 = bitcast i8* %212 to i32*, !dbg !12455
  %add.ptr288 = getelementptr i32, i32* %213, i64 2, !dbg !12455
  %214 = load i32, i32* %add.ptr288, align 4, !dbg !12455
  %and289 = and i32 %214, 65280, !dbg !12455
  %shl290 = shl i32 %and289, 8, !dbg !12455
  %or291 = or i32 %shl287, %shl290, !dbg !12455
  %215 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %216 = bitcast i8* %215 to i32*, !dbg !12455
  %add.ptr292 = getelementptr i32, i32* %216, i64 2, !dbg !12455
  %217 = load i32, i32* %add.ptr292, align 4, !dbg !12455
  %and293 = and i32 %217, 16711680, !dbg !12455
  %shr294 = lshr i32 %and293, 8, !dbg !12455
  %or295 = or i32 %or291, %shr294, !dbg !12455
  %218 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %219 = bitcast i8* %218 to i32*, !dbg !12455
  %add.ptr296 = getelementptr i32, i32* %219, i64 2, !dbg !12455
  %220 = load i32, i32* %add.ptr296, align 4, !dbg !12455
  %and297 = and i32 %220, -16777216, !dbg !12455
  %shr298 = lshr i32 %and297, 24, !dbg !12455
  %or299 = or i32 %or295, %shr298, !dbg !12455
  br label %cond.end303, !dbg !12455

cond.false300:                                    ; preds = %cond.end274
  %221 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %222 = bitcast i8* %221 to i32*, !dbg !12455
  %add.ptr301 = getelementptr i32, i32* %222, i64 2, !dbg !12455
  %223 = load i32, i32* %add.ptr301, align 4, !dbg !12455
  %call302 = call i32 @__fswab32(i32 %223) #10, !dbg !12455
  br label %cond.end303, !dbg !12455

cond.end303:                                      ; preds = %cond.false300, %cond.true284
  %cond304 = phi i32 [ %or299, %cond.true284 ], [ %call302, %cond.false300 ], !dbg !12455
  %and305 = and i32 %cond304, -65536, !dbg !12455
  %224 = load i32, i32* %_v167, align 4, !dbg !12455
  %and306 = and i32 %224, 65535, !dbg !12455
  %shl307 = shl i32 %and306, 0, !dbg !12455
  %or308 = or i32 %and305, %shl307, !dbg !12455
  %and309 = and i32 %or308, -16777216, !dbg !12455
  %shr310 = lshr i32 %and309, 24, !dbg !12455
  %or311 = or i32 %or282, %shr310, !dbg !12455
  br label %cond.end340, !dbg !12455

cond.false312:                                    ; preds = %cond.end190
  %225 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %226 = bitcast i8* %225 to i32*, !dbg !12455
  %add.ptr313 = getelementptr i32, i32* %226, i64 2, !dbg !12455
  %227 = load i32, i32* %add.ptr313, align 4, !dbg !12455
  %228 = call i1 @llvm.is.constant.i32(i32 %227), !dbg !12455
  br i1 %228, label %cond.true314, label %cond.false330, !dbg !12455

cond.true314:                                     ; preds = %cond.false312
  %229 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %230 = bitcast i8* %229 to i32*, !dbg !12455
  %add.ptr315 = getelementptr i32, i32* %230, i64 2, !dbg !12455
  %231 = load i32, i32* %add.ptr315, align 4, !dbg !12455
  %and316 = and i32 %231, 255, !dbg !12455
  %shl317 = shl i32 %and316, 24, !dbg !12455
  %232 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %233 = bitcast i8* %232 to i32*, !dbg !12455
  %add.ptr318 = getelementptr i32, i32* %233, i64 2, !dbg !12455
  %234 = load i32, i32* %add.ptr318, align 4, !dbg !12455
  %and319 = and i32 %234, 65280, !dbg !12455
  %shl320 = shl i32 %and319, 8, !dbg !12455
  %or321 = or i32 %shl317, %shl320, !dbg !12455
  %235 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %236 = bitcast i8* %235 to i32*, !dbg !12455
  %add.ptr322 = getelementptr i32, i32* %236, i64 2, !dbg !12455
  %237 = load i32, i32* %add.ptr322, align 4, !dbg !12455
  %and323 = and i32 %237, 16711680, !dbg !12455
  %shr324 = lshr i32 %and323, 8, !dbg !12455
  %or325 = or i32 %or321, %shr324, !dbg !12455
  %238 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %239 = bitcast i8* %238 to i32*, !dbg !12455
  %add.ptr326 = getelementptr i32, i32* %239, i64 2, !dbg !12455
  %240 = load i32, i32* %add.ptr326, align 4, !dbg !12455
  %and327 = and i32 %240, -16777216, !dbg !12455
  %shr328 = lshr i32 %and327, 24, !dbg !12455
  %or329 = or i32 %or325, %shr328, !dbg !12455
  br label %cond.end333, !dbg !12455

cond.false330:                                    ; preds = %cond.false312
  %241 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %242 = bitcast i8* %241 to i32*, !dbg !12455
  %add.ptr331 = getelementptr i32, i32* %242, i64 2, !dbg !12455
  %243 = load i32, i32* %add.ptr331, align 4, !dbg !12455
  %call332 = call i32 @__fswab32(i32 %243) #10, !dbg !12455
  br label %cond.end333, !dbg !12455

cond.end333:                                      ; preds = %cond.false330, %cond.true314
  %cond334 = phi i32 [ %or329, %cond.true314 ], [ %call332, %cond.false330 ], !dbg !12455
  %and335 = and i32 %cond334, -65536, !dbg !12455
  %244 = load i32, i32* %_v167, align 4, !dbg !12455
  %and336 = and i32 %244, 65535, !dbg !12455
  %shl337 = shl i32 %and336, 0, !dbg !12455
  %or338 = or i32 %and335, %shl337, !dbg !12455
  %call339 = call i32 @__fswab32(i32 %or338) #10, !dbg !12455
  br label %cond.end340, !dbg !12455

cond.end340:                                      ; preds = %cond.end333, %cond.end303
  %cond341 = phi i32 [ %or311, %cond.end303 ], [ %call339, %cond.end333 ], !dbg !12455
  %245 = load i8*, i8** %in.addr, align 8, !dbg !12455
  %246 = bitcast i8* %245 to i32*, !dbg !12455
  %add.ptr342 = getelementptr i32, i32* %246, i64 2, !dbg !12455
  store i32 %cond341, i32* %add.ptr342, align 4, !dbg !12455
  br label %do.end343, !dbg !12455

do.end343:                                        ; preds = %cond.end340
  br label %do.body344, !dbg !12458

do.body344:                                       ; preds = %do.end343
  call void @llvm.dbg.declare(metadata i32* %_v345, metadata !12459, metadata !DIExpression()), !dbg !12461
  %247 = load i8, i8* %other_vport.addr, align 1, !dbg !12461
  %tobool = trunc i8 %247 to i1, !dbg !12461
  %conv346 = zext i1 %tobool to i32, !dbg !12461
  store i32 %conv346, i32* %_v345, align 4, !dbg !12461
  br label %do.body347, !dbg !12461

do.body347:                                       ; preds = %do.body344
  br label %do.end348, !dbg !12462

do.end348:                                        ; preds = %do.body347
  %248 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %249 = bitcast i8* %248 to i32*, !dbg !12461
  %add.ptr349 = getelementptr i32, i32* %249, i64 2, !dbg !12461
  %250 = load i32, i32* %add.ptr349, align 4, !dbg !12461
  %251 = call i1 @llvm.is.constant.i32(i32 %250), !dbg !12461
  br i1 %251, label %cond.true350, label %cond.false366, !dbg !12461

cond.true350:                                     ; preds = %do.end348
  %252 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %253 = bitcast i8* %252 to i32*, !dbg !12461
  %add.ptr351 = getelementptr i32, i32* %253, i64 2, !dbg !12461
  %254 = load i32, i32* %add.ptr351, align 4, !dbg !12461
  %and352 = and i32 %254, 255, !dbg !12461
  %shl353 = shl i32 %and352, 24, !dbg !12461
  %255 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %256 = bitcast i8* %255 to i32*, !dbg !12461
  %add.ptr354 = getelementptr i32, i32* %256, i64 2, !dbg !12461
  %257 = load i32, i32* %add.ptr354, align 4, !dbg !12461
  %and355 = and i32 %257, 65280, !dbg !12461
  %shl356 = shl i32 %and355, 8, !dbg !12461
  %or357 = or i32 %shl353, %shl356, !dbg !12461
  %258 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %259 = bitcast i8* %258 to i32*, !dbg !12461
  %add.ptr358 = getelementptr i32, i32* %259, i64 2, !dbg !12461
  %260 = load i32, i32* %add.ptr358, align 4, !dbg !12461
  %and359 = and i32 %260, 16711680, !dbg !12461
  %shr360 = lshr i32 %and359, 8, !dbg !12461
  %or361 = or i32 %or357, %shr360, !dbg !12461
  %261 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %262 = bitcast i8* %261 to i32*, !dbg !12461
  %add.ptr362 = getelementptr i32, i32* %262, i64 2, !dbg !12461
  %263 = load i32, i32* %add.ptr362, align 4, !dbg !12461
  %and363 = and i32 %263, -16777216, !dbg !12461
  %shr364 = lshr i32 %and363, 24, !dbg !12461
  %or365 = or i32 %or361, %shr364, !dbg !12461
  br label %cond.end369, !dbg !12461

cond.false366:                                    ; preds = %do.end348
  %264 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %265 = bitcast i8* %264 to i32*, !dbg !12461
  %add.ptr367 = getelementptr i32, i32* %265, i64 2, !dbg !12461
  %266 = load i32, i32* %add.ptr367, align 4, !dbg !12461
  %call368 = call i32 @__fswab32(i32 %266) #10, !dbg !12461
  br label %cond.end369, !dbg !12461

cond.end369:                                      ; preds = %cond.false366, %cond.true350
  %cond370 = phi i32 [ %or365, %cond.true350 ], [ %call368, %cond.false366 ], !dbg !12461
  %and371 = and i32 %cond370, 2147483647, !dbg !12461
  %267 = load i32, i32* %_v345, align 4, !dbg !12461
  %and372 = and i32 %267, 1, !dbg !12461
  %shl373 = shl i32 %and372, 31, !dbg !12461
  %or374 = or i32 %and371, %shl373, !dbg !12461
  %268 = call i1 @llvm.is.constant.i32(i32 %or374), !dbg !12461
  br i1 %268, label %cond.true375, label %cond.false491, !dbg !12461

cond.true375:                                     ; preds = %cond.end369
  %269 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %270 = bitcast i8* %269 to i32*, !dbg !12461
  %add.ptr376 = getelementptr i32, i32* %270, i64 2, !dbg !12461
  %271 = load i32, i32* %add.ptr376, align 4, !dbg !12461
  %272 = call i1 @llvm.is.constant.i32(i32 %271), !dbg !12461
  br i1 %272, label %cond.true377, label %cond.false393, !dbg !12461

cond.true377:                                     ; preds = %cond.true375
  %273 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %274 = bitcast i8* %273 to i32*, !dbg !12461
  %add.ptr378 = getelementptr i32, i32* %274, i64 2, !dbg !12461
  %275 = load i32, i32* %add.ptr378, align 4, !dbg !12461
  %and379 = and i32 %275, 255, !dbg !12461
  %shl380 = shl i32 %and379, 24, !dbg !12461
  %276 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %277 = bitcast i8* %276 to i32*, !dbg !12461
  %add.ptr381 = getelementptr i32, i32* %277, i64 2, !dbg !12461
  %278 = load i32, i32* %add.ptr381, align 4, !dbg !12461
  %and382 = and i32 %278, 65280, !dbg !12461
  %shl383 = shl i32 %and382, 8, !dbg !12461
  %or384 = or i32 %shl380, %shl383, !dbg !12461
  %279 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %280 = bitcast i8* %279 to i32*, !dbg !12461
  %add.ptr385 = getelementptr i32, i32* %280, i64 2, !dbg !12461
  %281 = load i32, i32* %add.ptr385, align 4, !dbg !12461
  %and386 = and i32 %281, 16711680, !dbg !12461
  %shr387 = lshr i32 %and386, 8, !dbg !12461
  %or388 = or i32 %or384, %shr387, !dbg !12461
  %282 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %283 = bitcast i8* %282 to i32*, !dbg !12461
  %add.ptr389 = getelementptr i32, i32* %283, i64 2, !dbg !12461
  %284 = load i32, i32* %add.ptr389, align 4, !dbg !12461
  %and390 = and i32 %284, -16777216, !dbg !12461
  %shr391 = lshr i32 %and390, 24, !dbg !12461
  %or392 = or i32 %or388, %shr391, !dbg !12461
  br label %cond.end396, !dbg !12461

cond.false393:                                    ; preds = %cond.true375
  %285 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %286 = bitcast i8* %285 to i32*, !dbg !12461
  %add.ptr394 = getelementptr i32, i32* %286, i64 2, !dbg !12461
  %287 = load i32, i32* %add.ptr394, align 4, !dbg !12461
  %call395 = call i32 @__fswab32(i32 %287) #10, !dbg !12461
  br label %cond.end396, !dbg !12461

cond.end396:                                      ; preds = %cond.false393, %cond.true377
  %cond397 = phi i32 [ %or392, %cond.true377 ], [ %call395, %cond.false393 ], !dbg !12461
  %and398 = and i32 %cond397, 2147483647, !dbg !12461
  %288 = load i32, i32* %_v345, align 4, !dbg !12461
  %and399 = and i32 %288, 1, !dbg !12461
  %shl400 = shl i32 %and399, 31, !dbg !12461
  %or401 = or i32 %and398, %shl400, !dbg !12461
  %and402 = and i32 %or401, 255, !dbg !12461
  %shl403 = shl i32 %and402, 24, !dbg !12461
  %289 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %290 = bitcast i8* %289 to i32*, !dbg !12461
  %add.ptr404 = getelementptr i32, i32* %290, i64 2, !dbg !12461
  %291 = load i32, i32* %add.ptr404, align 4, !dbg !12461
  %292 = call i1 @llvm.is.constant.i32(i32 %291), !dbg !12461
  br i1 %292, label %cond.true405, label %cond.false421, !dbg !12461

cond.true405:                                     ; preds = %cond.end396
  %293 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %294 = bitcast i8* %293 to i32*, !dbg !12461
  %add.ptr406 = getelementptr i32, i32* %294, i64 2, !dbg !12461
  %295 = load i32, i32* %add.ptr406, align 4, !dbg !12461
  %and407 = and i32 %295, 255, !dbg !12461
  %shl408 = shl i32 %and407, 24, !dbg !12461
  %296 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %297 = bitcast i8* %296 to i32*, !dbg !12461
  %add.ptr409 = getelementptr i32, i32* %297, i64 2, !dbg !12461
  %298 = load i32, i32* %add.ptr409, align 4, !dbg !12461
  %and410 = and i32 %298, 65280, !dbg !12461
  %shl411 = shl i32 %and410, 8, !dbg !12461
  %or412 = or i32 %shl408, %shl411, !dbg !12461
  %299 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %300 = bitcast i8* %299 to i32*, !dbg !12461
  %add.ptr413 = getelementptr i32, i32* %300, i64 2, !dbg !12461
  %301 = load i32, i32* %add.ptr413, align 4, !dbg !12461
  %and414 = and i32 %301, 16711680, !dbg !12461
  %shr415 = lshr i32 %and414, 8, !dbg !12461
  %or416 = or i32 %or412, %shr415, !dbg !12461
  %302 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %303 = bitcast i8* %302 to i32*, !dbg !12461
  %add.ptr417 = getelementptr i32, i32* %303, i64 2, !dbg !12461
  %304 = load i32, i32* %add.ptr417, align 4, !dbg !12461
  %and418 = and i32 %304, -16777216, !dbg !12461
  %shr419 = lshr i32 %and418, 24, !dbg !12461
  %or420 = or i32 %or416, %shr419, !dbg !12461
  br label %cond.end424, !dbg !12461

cond.false421:                                    ; preds = %cond.end396
  %305 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %306 = bitcast i8* %305 to i32*, !dbg !12461
  %add.ptr422 = getelementptr i32, i32* %306, i64 2, !dbg !12461
  %307 = load i32, i32* %add.ptr422, align 4, !dbg !12461
  %call423 = call i32 @__fswab32(i32 %307) #10, !dbg !12461
  br label %cond.end424, !dbg !12461

cond.end424:                                      ; preds = %cond.false421, %cond.true405
  %cond425 = phi i32 [ %or420, %cond.true405 ], [ %call423, %cond.false421 ], !dbg !12461
  %and426 = and i32 %cond425, 2147483647, !dbg !12461
  %308 = load i32, i32* %_v345, align 4, !dbg !12461
  %and427 = and i32 %308, 1, !dbg !12461
  %shl428 = shl i32 %and427, 31, !dbg !12461
  %or429 = or i32 %and426, %shl428, !dbg !12461
  %and430 = and i32 %or429, 65280, !dbg !12461
  %shl431 = shl i32 %and430, 8, !dbg !12461
  %or432 = or i32 %shl403, %shl431, !dbg !12461
  %309 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %310 = bitcast i8* %309 to i32*, !dbg !12461
  %add.ptr433 = getelementptr i32, i32* %310, i64 2, !dbg !12461
  %311 = load i32, i32* %add.ptr433, align 4, !dbg !12461
  %312 = call i1 @llvm.is.constant.i32(i32 %311), !dbg !12461
  br i1 %312, label %cond.true434, label %cond.false450, !dbg !12461

cond.true434:                                     ; preds = %cond.end424
  %313 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %314 = bitcast i8* %313 to i32*, !dbg !12461
  %add.ptr435 = getelementptr i32, i32* %314, i64 2, !dbg !12461
  %315 = load i32, i32* %add.ptr435, align 4, !dbg !12461
  %and436 = and i32 %315, 255, !dbg !12461
  %shl437 = shl i32 %and436, 24, !dbg !12461
  %316 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %317 = bitcast i8* %316 to i32*, !dbg !12461
  %add.ptr438 = getelementptr i32, i32* %317, i64 2, !dbg !12461
  %318 = load i32, i32* %add.ptr438, align 4, !dbg !12461
  %and439 = and i32 %318, 65280, !dbg !12461
  %shl440 = shl i32 %and439, 8, !dbg !12461
  %or441 = or i32 %shl437, %shl440, !dbg !12461
  %319 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %320 = bitcast i8* %319 to i32*, !dbg !12461
  %add.ptr442 = getelementptr i32, i32* %320, i64 2, !dbg !12461
  %321 = load i32, i32* %add.ptr442, align 4, !dbg !12461
  %and443 = and i32 %321, 16711680, !dbg !12461
  %shr444 = lshr i32 %and443, 8, !dbg !12461
  %or445 = or i32 %or441, %shr444, !dbg !12461
  %322 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %323 = bitcast i8* %322 to i32*, !dbg !12461
  %add.ptr446 = getelementptr i32, i32* %323, i64 2, !dbg !12461
  %324 = load i32, i32* %add.ptr446, align 4, !dbg !12461
  %and447 = and i32 %324, -16777216, !dbg !12461
  %shr448 = lshr i32 %and447, 24, !dbg !12461
  %or449 = or i32 %or445, %shr448, !dbg !12461
  br label %cond.end453, !dbg !12461

cond.false450:                                    ; preds = %cond.end424
  %325 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %326 = bitcast i8* %325 to i32*, !dbg !12461
  %add.ptr451 = getelementptr i32, i32* %326, i64 2, !dbg !12461
  %327 = load i32, i32* %add.ptr451, align 4, !dbg !12461
  %call452 = call i32 @__fswab32(i32 %327) #10, !dbg !12461
  br label %cond.end453, !dbg !12461

cond.end453:                                      ; preds = %cond.false450, %cond.true434
  %cond454 = phi i32 [ %or449, %cond.true434 ], [ %call452, %cond.false450 ], !dbg !12461
  %and455 = and i32 %cond454, 2147483647, !dbg !12461
  %328 = load i32, i32* %_v345, align 4, !dbg !12461
  %and456 = and i32 %328, 1, !dbg !12461
  %shl457 = shl i32 %and456, 31, !dbg !12461
  %or458 = or i32 %and455, %shl457, !dbg !12461
  %and459 = and i32 %or458, 16711680, !dbg !12461
  %shr460 = lshr i32 %and459, 8, !dbg !12461
  %or461 = or i32 %or432, %shr460, !dbg !12461
  %329 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %330 = bitcast i8* %329 to i32*, !dbg !12461
  %add.ptr462 = getelementptr i32, i32* %330, i64 2, !dbg !12461
  %331 = load i32, i32* %add.ptr462, align 4, !dbg !12461
  %332 = call i1 @llvm.is.constant.i32(i32 %331), !dbg !12461
  br i1 %332, label %cond.true463, label %cond.false479, !dbg !12461

cond.true463:                                     ; preds = %cond.end453
  %333 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %334 = bitcast i8* %333 to i32*, !dbg !12461
  %add.ptr464 = getelementptr i32, i32* %334, i64 2, !dbg !12461
  %335 = load i32, i32* %add.ptr464, align 4, !dbg !12461
  %and465 = and i32 %335, 255, !dbg !12461
  %shl466 = shl i32 %and465, 24, !dbg !12461
  %336 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %337 = bitcast i8* %336 to i32*, !dbg !12461
  %add.ptr467 = getelementptr i32, i32* %337, i64 2, !dbg !12461
  %338 = load i32, i32* %add.ptr467, align 4, !dbg !12461
  %and468 = and i32 %338, 65280, !dbg !12461
  %shl469 = shl i32 %and468, 8, !dbg !12461
  %or470 = or i32 %shl466, %shl469, !dbg !12461
  %339 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %340 = bitcast i8* %339 to i32*, !dbg !12461
  %add.ptr471 = getelementptr i32, i32* %340, i64 2, !dbg !12461
  %341 = load i32, i32* %add.ptr471, align 4, !dbg !12461
  %and472 = and i32 %341, 16711680, !dbg !12461
  %shr473 = lshr i32 %and472, 8, !dbg !12461
  %or474 = or i32 %or470, %shr473, !dbg !12461
  %342 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %343 = bitcast i8* %342 to i32*, !dbg !12461
  %add.ptr475 = getelementptr i32, i32* %343, i64 2, !dbg !12461
  %344 = load i32, i32* %add.ptr475, align 4, !dbg !12461
  %and476 = and i32 %344, -16777216, !dbg !12461
  %shr477 = lshr i32 %and476, 24, !dbg !12461
  %or478 = or i32 %or474, %shr477, !dbg !12461
  br label %cond.end482, !dbg !12461

cond.false479:                                    ; preds = %cond.end453
  %345 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %346 = bitcast i8* %345 to i32*, !dbg !12461
  %add.ptr480 = getelementptr i32, i32* %346, i64 2, !dbg !12461
  %347 = load i32, i32* %add.ptr480, align 4, !dbg !12461
  %call481 = call i32 @__fswab32(i32 %347) #10, !dbg !12461
  br label %cond.end482, !dbg !12461

cond.end482:                                      ; preds = %cond.false479, %cond.true463
  %cond483 = phi i32 [ %or478, %cond.true463 ], [ %call481, %cond.false479 ], !dbg !12461
  %and484 = and i32 %cond483, 2147483647, !dbg !12461
  %348 = load i32, i32* %_v345, align 4, !dbg !12461
  %and485 = and i32 %348, 1, !dbg !12461
  %shl486 = shl i32 %and485, 31, !dbg !12461
  %or487 = or i32 %and484, %shl486, !dbg !12461
  %and488 = and i32 %or487, -16777216, !dbg !12461
  %shr489 = lshr i32 %and488, 24, !dbg !12461
  %or490 = or i32 %or461, %shr489, !dbg !12461
  br label %cond.end519, !dbg !12461

cond.false491:                                    ; preds = %cond.end369
  %349 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %350 = bitcast i8* %349 to i32*, !dbg !12461
  %add.ptr492 = getelementptr i32, i32* %350, i64 2, !dbg !12461
  %351 = load i32, i32* %add.ptr492, align 4, !dbg !12461
  %352 = call i1 @llvm.is.constant.i32(i32 %351), !dbg !12461
  br i1 %352, label %cond.true493, label %cond.false509, !dbg !12461

cond.true493:                                     ; preds = %cond.false491
  %353 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %354 = bitcast i8* %353 to i32*, !dbg !12461
  %add.ptr494 = getelementptr i32, i32* %354, i64 2, !dbg !12461
  %355 = load i32, i32* %add.ptr494, align 4, !dbg !12461
  %and495 = and i32 %355, 255, !dbg !12461
  %shl496 = shl i32 %and495, 24, !dbg !12461
  %356 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %357 = bitcast i8* %356 to i32*, !dbg !12461
  %add.ptr497 = getelementptr i32, i32* %357, i64 2, !dbg !12461
  %358 = load i32, i32* %add.ptr497, align 4, !dbg !12461
  %and498 = and i32 %358, 65280, !dbg !12461
  %shl499 = shl i32 %and498, 8, !dbg !12461
  %or500 = or i32 %shl496, %shl499, !dbg !12461
  %359 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %360 = bitcast i8* %359 to i32*, !dbg !12461
  %add.ptr501 = getelementptr i32, i32* %360, i64 2, !dbg !12461
  %361 = load i32, i32* %add.ptr501, align 4, !dbg !12461
  %and502 = and i32 %361, 16711680, !dbg !12461
  %shr503 = lshr i32 %and502, 8, !dbg !12461
  %or504 = or i32 %or500, %shr503, !dbg !12461
  %362 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %363 = bitcast i8* %362 to i32*, !dbg !12461
  %add.ptr505 = getelementptr i32, i32* %363, i64 2, !dbg !12461
  %364 = load i32, i32* %add.ptr505, align 4, !dbg !12461
  %and506 = and i32 %364, -16777216, !dbg !12461
  %shr507 = lshr i32 %and506, 24, !dbg !12461
  %or508 = or i32 %or504, %shr507, !dbg !12461
  br label %cond.end512, !dbg !12461

cond.false509:                                    ; preds = %cond.false491
  %365 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %366 = bitcast i8* %365 to i32*, !dbg !12461
  %add.ptr510 = getelementptr i32, i32* %366, i64 2, !dbg !12461
  %367 = load i32, i32* %add.ptr510, align 4, !dbg !12461
  %call511 = call i32 @__fswab32(i32 %367) #10, !dbg !12461
  br label %cond.end512, !dbg !12461

cond.end512:                                      ; preds = %cond.false509, %cond.true493
  %cond513 = phi i32 [ %or508, %cond.true493 ], [ %call511, %cond.false509 ], !dbg !12461
  %and514 = and i32 %cond513, 2147483647, !dbg !12461
  %368 = load i32, i32* %_v345, align 4, !dbg !12461
  %and515 = and i32 %368, 1, !dbg !12461
  %shl516 = shl i32 %and515, 31, !dbg !12461
  %or517 = or i32 %and514, %shl516, !dbg !12461
  %call518 = call i32 @__fswab32(i32 %or517) #10, !dbg !12461
  br label %cond.end519, !dbg !12461

cond.end519:                                      ; preds = %cond.end512, %cond.end482
  %cond520 = phi i32 [ %or490, %cond.end482 ], [ %call518, %cond.end512 ], !dbg !12461
  %369 = load i8*, i8** %in.addr, align 8, !dbg !12461
  %370 = bitcast i8* %369 to i32*, !dbg !12461
  %add.ptr521 = getelementptr i32, i32* %370, i64 2, !dbg !12461
  store i32 %cond520, i32* %add.ptr521, align 4, !dbg !12461
  br label %do.end522, !dbg !12461

do.end522:                                        ; preds = %cond.end519
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !12464, metadata !DIExpression()), !dbg !12467
  %371 = bitcast [4 x i32]* %_out to i8*, !dbg !12467
  call void @llvm.memset.p0i8.i64(i8* align 16 %371, i8 0, i64 16, i1 false), !dbg !12467
  %372 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12468
  %373 = load i8*, i8** %in.addr, align 8, !dbg !12468
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !12468
  %374 = bitcast i32* %arraydecay to i8*, !dbg !12468
  %call524 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %372, i8* %373, i32 272, i8* %374, i32 16) #8, !dbg !12468
  store i32 %call524, i32* %tmp523, align 4, !dbg !12467
  %375 = load i32, i32* %tmp523, align 4, !dbg !12468
  store i32 %375, i32* %tmp, align 4, !dbg !12467
  %376 = load i32, i32* %tmp, align 4, !dbg !12467
  ret i32 %376, !dbg !12470
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i32 @mlx5_cmd_exec(%struct.mlx5_core_dev*, i8*, i32, i8*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_esw_modify_vport_rate(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num, i32 %rate_mbps) #0 !dbg !12471 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %rate_mbps.addr = alloca i32, align 4
  %ctx = alloca [16 x i32], align 16
  %vport = alloca %struct.mlx5_vport*, align 8
  %_v = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !12476, metadata !DIExpression()), !dbg !12477
  store i32 %rate_mbps, i32* %rate_mbps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rate_mbps.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.declare(metadata [16 x i32]* %ctx, metadata !12480, metadata !DIExpression()), !dbg !12481
  %0 = bitcast [16 x i32]* %ctx to i8*, !dbg !12481
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 64, i1 false), !dbg !12481
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !12482, metadata !DIExpression()), !dbg !12483
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12484
  %2 = load i16, i16* %vport_num.addr, align 2, !dbg !12485
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %1, i16 zeroext %2) #8, !dbg !12486
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %vport, align 8, !dbg !12487
  %3 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12488
  %qos = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %3, i32 0, i32 12, !dbg !12490
  %enabled = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos, i32 0, i32 0, !dbg !12491
  %4 = load i8, i8* %enabled, align 8, !dbg !12491
  %tobool = trunc i8 %4 to i1, !dbg !12491
  br i1 %tobool, label %if.end, label %if.then, !dbg !12492

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !12493
  br label %return, !dbg !12493

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !12494

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12495, metadata !DIExpression()), !dbg !12497
  %5 = load i32, i32* %rate_mbps.addr, align 4, !dbg !12497
  store i32 %5, i32* %_v, align 4, !dbg !12497
  br label %do.body1, !dbg !12497

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !12498

do.end:                                           ; preds = %do.body1
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 6, !dbg !12497
  %6 = load i32, i32* %add.ptr, align 4, !dbg !12497
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !12497
  br i1 %7, label %cond.true, label %cond.false, !dbg !12497

cond.true:                                        ; preds = %do.end
  %arraydecay2 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 6, !dbg !12497
  %8 = load i32, i32* %add.ptr3, align 4, !dbg !12497
  %and = and i32 %8, 255, !dbg !12497
  %shl = shl i32 %and, 24, !dbg !12497
  %arraydecay4 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 6, !dbg !12497
  %9 = load i32, i32* %add.ptr5, align 4, !dbg !12497
  %and6 = and i32 %9, 65280, !dbg !12497
  %shl7 = shl i32 %and6, 8, !dbg !12497
  %or = or i32 %shl, %shl7, !dbg !12497
  %arraydecay8 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 6, !dbg !12497
  %10 = load i32, i32* %add.ptr9, align 4, !dbg !12497
  %and10 = and i32 %10, 16711680, !dbg !12497
  %shr = lshr i32 %and10, 8, !dbg !12497
  %or11 = or i32 %or, %shr, !dbg !12497
  %arraydecay12 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 6, !dbg !12497
  %11 = load i32, i32* %add.ptr13, align 4, !dbg !12497
  %and14 = and i32 %11, -16777216, !dbg !12497
  %shr15 = lshr i32 %and14, 24, !dbg !12497
  %or16 = or i32 %or11, %shr15, !dbg !12497
  br label %cond.end, !dbg !12497

cond.false:                                       ; preds = %do.end
  %arraydecay17 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 6, !dbg !12497
  %12 = load i32, i32* %add.ptr18, align 4, !dbg !12497
  %call19 = call i32 @__fswab32(i32 %12) #10, !dbg !12497
  br label %cond.end, !dbg !12497

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call19, %cond.false ], !dbg !12497
  %and20 = and i32 %cond, 0, !dbg !12497
  %13 = load i32, i32* %_v, align 4, !dbg !12497
  %shl21 = shl i32 %13, 0, !dbg !12497
  %or22 = or i32 %and20, %shl21, !dbg !12497
  %14 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !12497
  br i1 %14, label %cond.true23, label %cond.false159, !dbg !12497

cond.true23:                                      ; preds = %cond.end
  %arraydecay24 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 6, !dbg !12497
  %15 = load i32, i32* %add.ptr25, align 4, !dbg !12497
  %16 = call i1 @llvm.is.constant.i32(i32 %15), !dbg !12497
  br i1 %16, label %cond.true26, label %cond.false46, !dbg !12497

cond.true26:                                      ; preds = %cond.true23
  %arraydecay27 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 6, !dbg !12497
  %17 = load i32, i32* %add.ptr28, align 4, !dbg !12497
  %and29 = and i32 %17, 255, !dbg !12497
  %shl30 = shl i32 %and29, 24, !dbg !12497
  %arraydecay31 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 6, !dbg !12497
  %18 = load i32, i32* %add.ptr32, align 4, !dbg !12497
  %and33 = and i32 %18, 65280, !dbg !12497
  %shl34 = shl i32 %and33, 8, !dbg !12497
  %or35 = or i32 %shl30, %shl34, !dbg !12497
  %arraydecay36 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 6, !dbg !12497
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !12497
  %and38 = and i32 %19, 16711680, !dbg !12497
  %shr39 = lshr i32 %and38, 8, !dbg !12497
  %or40 = or i32 %or35, %shr39, !dbg !12497
  %arraydecay41 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 6, !dbg !12497
  %20 = load i32, i32* %add.ptr42, align 4, !dbg !12497
  %and43 = and i32 %20, -16777216, !dbg !12497
  %shr44 = lshr i32 %and43, 24, !dbg !12497
  %or45 = or i32 %or40, %shr44, !dbg !12497
  br label %cond.end50, !dbg !12497

cond.false46:                                     ; preds = %cond.true23
  %arraydecay47 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 6, !dbg !12497
  %21 = load i32, i32* %add.ptr48, align 4, !dbg !12497
  %call49 = call i32 @__fswab32(i32 %21) #10, !dbg !12497
  br label %cond.end50, !dbg !12497

cond.end50:                                       ; preds = %cond.false46, %cond.true26
  %cond51 = phi i32 [ %or45, %cond.true26 ], [ %call49, %cond.false46 ], !dbg !12497
  %and52 = and i32 %cond51, 0, !dbg !12497
  %22 = load i32, i32* %_v, align 4, !dbg !12497
  %shl53 = shl i32 %22, 0, !dbg !12497
  %or54 = or i32 %and52, %shl53, !dbg !12497
  %and55 = and i32 %or54, 255, !dbg !12497
  %shl56 = shl i32 %and55, 24, !dbg !12497
  %arraydecay57 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr58 = getelementptr i32, i32* %arraydecay57, i64 6, !dbg !12497
  %23 = load i32, i32* %add.ptr58, align 4, !dbg !12497
  %24 = call i1 @llvm.is.constant.i32(i32 %23), !dbg !12497
  br i1 %24, label %cond.true59, label %cond.false79, !dbg !12497

cond.true59:                                      ; preds = %cond.end50
  %arraydecay60 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 6, !dbg !12497
  %25 = load i32, i32* %add.ptr61, align 4, !dbg !12497
  %and62 = and i32 %25, 255, !dbg !12497
  %shl63 = shl i32 %and62, 24, !dbg !12497
  %arraydecay64 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr65 = getelementptr i32, i32* %arraydecay64, i64 6, !dbg !12497
  %26 = load i32, i32* %add.ptr65, align 4, !dbg !12497
  %and66 = and i32 %26, 65280, !dbg !12497
  %shl67 = shl i32 %and66, 8, !dbg !12497
  %or68 = or i32 %shl63, %shl67, !dbg !12497
  %arraydecay69 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr70 = getelementptr i32, i32* %arraydecay69, i64 6, !dbg !12497
  %27 = load i32, i32* %add.ptr70, align 4, !dbg !12497
  %and71 = and i32 %27, 16711680, !dbg !12497
  %shr72 = lshr i32 %and71, 8, !dbg !12497
  %or73 = or i32 %or68, %shr72, !dbg !12497
  %arraydecay74 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr75 = getelementptr i32, i32* %arraydecay74, i64 6, !dbg !12497
  %28 = load i32, i32* %add.ptr75, align 4, !dbg !12497
  %and76 = and i32 %28, -16777216, !dbg !12497
  %shr77 = lshr i32 %and76, 24, !dbg !12497
  %or78 = or i32 %or73, %shr77, !dbg !12497
  br label %cond.end83, !dbg !12497

cond.false79:                                     ; preds = %cond.end50
  %arraydecay80 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr81 = getelementptr i32, i32* %arraydecay80, i64 6, !dbg !12497
  %29 = load i32, i32* %add.ptr81, align 4, !dbg !12497
  %call82 = call i32 @__fswab32(i32 %29) #10, !dbg !12497
  br label %cond.end83, !dbg !12497

cond.end83:                                       ; preds = %cond.false79, %cond.true59
  %cond84 = phi i32 [ %or78, %cond.true59 ], [ %call82, %cond.false79 ], !dbg !12497
  %and85 = and i32 %cond84, 0, !dbg !12497
  %30 = load i32, i32* %_v, align 4, !dbg !12497
  %shl86 = shl i32 %30, 0, !dbg !12497
  %or87 = or i32 %and85, %shl86, !dbg !12497
  %and88 = and i32 %or87, 65280, !dbg !12497
  %shl89 = shl i32 %and88, 8, !dbg !12497
  %or90 = or i32 %shl56, %shl89, !dbg !12497
  %arraydecay91 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr92 = getelementptr i32, i32* %arraydecay91, i64 6, !dbg !12497
  %31 = load i32, i32* %add.ptr92, align 4, !dbg !12497
  %32 = call i1 @llvm.is.constant.i32(i32 %31), !dbg !12497
  br i1 %32, label %cond.true93, label %cond.false113, !dbg !12497

cond.true93:                                      ; preds = %cond.end83
  %arraydecay94 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr95 = getelementptr i32, i32* %arraydecay94, i64 6, !dbg !12497
  %33 = load i32, i32* %add.ptr95, align 4, !dbg !12497
  %and96 = and i32 %33, 255, !dbg !12497
  %shl97 = shl i32 %and96, 24, !dbg !12497
  %arraydecay98 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr99 = getelementptr i32, i32* %arraydecay98, i64 6, !dbg !12497
  %34 = load i32, i32* %add.ptr99, align 4, !dbg !12497
  %and100 = and i32 %34, 65280, !dbg !12497
  %shl101 = shl i32 %and100, 8, !dbg !12497
  %or102 = or i32 %shl97, %shl101, !dbg !12497
  %arraydecay103 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr104 = getelementptr i32, i32* %arraydecay103, i64 6, !dbg !12497
  %35 = load i32, i32* %add.ptr104, align 4, !dbg !12497
  %and105 = and i32 %35, 16711680, !dbg !12497
  %shr106 = lshr i32 %and105, 8, !dbg !12497
  %or107 = or i32 %or102, %shr106, !dbg !12497
  %arraydecay108 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr109 = getelementptr i32, i32* %arraydecay108, i64 6, !dbg !12497
  %36 = load i32, i32* %add.ptr109, align 4, !dbg !12497
  %and110 = and i32 %36, -16777216, !dbg !12497
  %shr111 = lshr i32 %and110, 24, !dbg !12497
  %or112 = or i32 %or107, %shr111, !dbg !12497
  br label %cond.end117, !dbg !12497

cond.false113:                                    ; preds = %cond.end83
  %arraydecay114 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr115 = getelementptr i32, i32* %arraydecay114, i64 6, !dbg !12497
  %37 = load i32, i32* %add.ptr115, align 4, !dbg !12497
  %call116 = call i32 @__fswab32(i32 %37) #10, !dbg !12497
  br label %cond.end117, !dbg !12497

cond.end117:                                      ; preds = %cond.false113, %cond.true93
  %cond118 = phi i32 [ %or112, %cond.true93 ], [ %call116, %cond.false113 ], !dbg !12497
  %and119 = and i32 %cond118, 0, !dbg !12497
  %38 = load i32, i32* %_v, align 4, !dbg !12497
  %shl120 = shl i32 %38, 0, !dbg !12497
  %or121 = or i32 %and119, %shl120, !dbg !12497
  %and122 = and i32 %or121, 16711680, !dbg !12497
  %shr123 = lshr i32 %and122, 8, !dbg !12497
  %or124 = or i32 %or90, %shr123, !dbg !12497
  %arraydecay125 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr126 = getelementptr i32, i32* %arraydecay125, i64 6, !dbg !12497
  %39 = load i32, i32* %add.ptr126, align 4, !dbg !12497
  %40 = call i1 @llvm.is.constant.i32(i32 %39), !dbg !12497
  br i1 %40, label %cond.true127, label %cond.false147, !dbg !12497

cond.true127:                                     ; preds = %cond.end117
  %arraydecay128 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 6, !dbg !12497
  %41 = load i32, i32* %add.ptr129, align 4, !dbg !12497
  %and130 = and i32 %41, 255, !dbg !12497
  %shl131 = shl i32 %and130, 24, !dbg !12497
  %arraydecay132 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr133 = getelementptr i32, i32* %arraydecay132, i64 6, !dbg !12497
  %42 = load i32, i32* %add.ptr133, align 4, !dbg !12497
  %and134 = and i32 %42, 65280, !dbg !12497
  %shl135 = shl i32 %and134, 8, !dbg !12497
  %or136 = or i32 %shl131, %shl135, !dbg !12497
  %arraydecay137 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr138 = getelementptr i32, i32* %arraydecay137, i64 6, !dbg !12497
  %43 = load i32, i32* %add.ptr138, align 4, !dbg !12497
  %and139 = and i32 %43, 16711680, !dbg !12497
  %shr140 = lshr i32 %and139, 8, !dbg !12497
  %or141 = or i32 %or136, %shr140, !dbg !12497
  %arraydecay142 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 6, !dbg !12497
  %44 = load i32, i32* %add.ptr143, align 4, !dbg !12497
  %and144 = and i32 %44, -16777216, !dbg !12497
  %shr145 = lshr i32 %and144, 24, !dbg !12497
  %or146 = or i32 %or141, %shr145, !dbg !12497
  br label %cond.end151, !dbg !12497

cond.false147:                                    ; preds = %cond.end117
  %arraydecay148 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr149 = getelementptr i32, i32* %arraydecay148, i64 6, !dbg !12497
  %45 = load i32, i32* %add.ptr149, align 4, !dbg !12497
  %call150 = call i32 @__fswab32(i32 %45) #10, !dbg !12497
  br label %cond.end151, !dbg !12497

cond.end151:                                      ; preds = %cond.false147, %cond.true127
  %cond152 = phi i32 [ %or146, %cond.true127 ], [ %call150, %cond.false147 ], !dbg !12497
  %and153 = and i32 %cond152, 0, !dbg !12497
  %46 = load i32, i32* %_v, align 4, !dbg !12497
  %shl154 = shl i32 %46, 0, !dbg !12497
  %or155 = or i32 %and153, %shl154, !dbg !12497
  %and156 = and i32 %or155, -16777216, !dbg !12497
  %shr157 = lshr i32 %and156, 24, !dbg !12497
  %or158 = or i32 %or124, %shr157, !dbg !12497
  br label %cond.end192, !dbg !12497

cond.false159:                                    ; preds = %cond.end
  %arraydecay160 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr161 = getelementptr i32, i32* %arraydecay160, i64 6, !dbg !12497
  %47 = load i32, i32* %add.ptr161, align 4, !dbg !12497
  %48 = call i1 @llvm.is.constant.i32(i32 %47), !dbg !12497
  br i1 %48, label %cond.true162, label %cond.false182, !dbg !12497

cond.true162:                                     ; preds = %cond.false159
  %arraydecay163 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr164 = getelementptr i32, i32* %arraydecay163, i64 6, !dbg !12497
  %49 = load i32, i32* %add.ptr164, align 4, !dbg !12497
  %and165 = and i32 %49, 255, !dbg !12497
  %shl166 = shl i32 %and165, 24, !dbg !12497
  %arraydecay167 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 6, !dbg !12497
  %50 = load i32, i32* %add.ptr168, align 4, !dbg !12497
  %and169 = and i32 %50, 65280, !dbg !12497
  %shl170 = shl i32 %and169, 8, !dbg !12497
  %or171 = or i32 %shl166, %shl170, !dbg !12497
  %arraydecay172 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr173 = getelementptr i32, i32* %arraydecay172, i64 6, !dbg !12497
  %51 = load i32, i32* %add.ptr173, align 4, !dbg !12497
  %and174 = and i32 %51, 16711680, !dbg !12497
  %shr175 = lshr i32 %and174, 8, !dbg !12497
  %or176 = or i32 %or171, %shr175, !dbg !12497
  %arraydecay177 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr178 = getelementptr i32, i32* %arraydecay177, i64 6, !dbg !12497
  %52 = load i32, i32* %add.ptr178, align 4, !dbg !12497
  %and179 = and i32 %52, -16777216, !dbg !12497
  %shr180 = lshr i32 %and179, 24, !dbg !12497
  %or181 = or i32 %or176, %shr180, !dbg !12497
  br label %cond.end186, !dbg !12497

cond.false182:                                    ; preds = %cond.false159
  %arraydecay183 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr184 = getelementptr i32, i32* %arraydecay183, i64 6, !dbg !12497
  %53 = load i32, i32* %add.ptr184, align 4, !dbg !12497
  %call185 = call i32 @__fswab32(i32 %53) #10, !dbg !12497
  br label %cond.end186, !dbg !12497

cond.end186:                                      ; preds = %cond.false182, %cond.true162
  %cond187 = phi i32 [ %or181, %cond.true162 ], [ %call185, %cond.false182 ], !dbg !12497
  %and188 = and i32 %cond187, 0, !dbg !12497
  %54 = load i32, i32* %_v, align 4, !dbg !12497
  %shl189 = shl i32 %54, 0, !dbg !12497
  %or190 = or i32 %and188, %shl189, !dbg !12497
  %call191 = call i32 @__fswab32(i32 %or190) #10, !dbg !12497
  br label %cond.end192, !dbg !12497

cond.end192:                                      ; preds = %cond.end186, %cond.end151
  %cond193 = phi i32 [ %or158, %cond.end151 ], [ %call191, %cond.end186 ], !dbg !12497
  %arraydecay194 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12497
  %add.ptr195 = getelementptr i32, i32* %arraydecay194, i64 6, !dbg !12497
  store i32 %cond193, i32* %add.ptr195, align 4, !dbg !12497
  br label %do.end196, !dbg !12497

do.end196:                                        ; preds = %cond.end192
  %55 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12500
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %55, i32 0, i32 0, !dbg !12501
  %56 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12501
  %arraydecay197 = getelementptr inbounds [16 x i32], [16 x i32]* %ctx, i64 0, i64 0, !dbg !12502
  %57 = bitcast i32* %arraydecay197 to i8*, !dbg !12502
  %58 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12503
  %qos198 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %58, i32 0, i32 12, !dbg !12504
  %esw_tsar_ix = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos198, i32 0, i32 1, !dbg !12505
  %59 = load i32, i32* %esw_tsar_ix, align 4, !dbg !12505
  %call199 = call i32 @mlx5_modify_scheduling_element_cmd(%struct.mlx5_core_dev* %56, i8 zeroext 2, i8* %57, i32 %59, i32 2) #8, !dbg !12506
  store i32 %call199, i32* %retval, align 4, !dbg !12507
  br label %return, !dbg !12507

return:                                           ; preds = %do.end196, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !12508
  ret i32 %60, !dbg !12508
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_modify_scheduling_element_cmd(%struct.mlx5_core_dev*, i8 zeroext, i8*, i32, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32* @mlx5_esw_query_functions(%struct.mlx5_core_dev* %dev) #0 !dbg !12509 {
entry:
  %retval = alloca i32*, align 8
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %outlen = alloca i32, align 4
  %in = alloca [4 x i32], align 16
  %out = alloca i32*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12512, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !12514, metadata !DIExpression()), !dbg !12515
  store i32 128, i32* %outlen, align 4, !dbg !12515
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !12516, metadata !DIExpression()), !dbg !12517
  %0 = bitcast [4 x i32]* %in to i8*, !dbg !12517
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !12517
  call void @llvm.dbg.declare(metadata i32** %out, metadata !12518, metadata !DIExpression()), !dbg !12519
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12520, metadata !DIExpression()), !dbg !12521
  %1 = load i32, i32* %outlen, align 4, !dbg !12522
  %conv = sext i32 %1 to i64, !dbg !12522
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #8, !dbg !12523
  %2 = bitcast i8* %call to i32*, !dbg !12523
  store i32* %2, i32** %out, align 8, !dbg !12524
  %3 = load i32*, i32** %out, align 8, !dbg !12525
  %tobool = icmp ne i32* %3, null, !dbg !12525
  br i1 %tobool, label %if.end, label %if.then, !dbg !12527

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #8, !dbg !12528
  %4 = bitcast i8* %call1 to i32*, !dbg !12528
  store i32* %4, i32** %retval, align 8, !dbg !12529
  br label %return, !dbg !12529

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !12530

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12531, metadata !DIExpression()), !dbg !12533
  store i32 1856, i32* %_v, align 4, !dbg !12533
  br label %do.body2, !dbg !12533

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !12534

do.end:                                           ; preds = %do.body2
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !12533
  %5 = load i32, i32* %add.ptr, align 4, !dbg !12533
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !12533
  br i1 %6, label %cond.true, label %cond.false, !dbg !12533

cond.true:                                        ; preds = %do.end
  %arraydecay3 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr4 = getelementptr i32, i32* %arraydecay3, i64 0, !dbg !12533
  %7 = load i32, i32* %add.ptr4, align 4, !dbg !12533
  %and = and i32 %7, 255, !dbg !12533
  %shl = shl i32 %and, 24, !dbg !12533
  %arraydecay5 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 0, !dbg !12533
  %8 = load i32, i32* %add.ptr6, align 4, !dbg !12533
  %and7 = and i32 %8, 65280, !dbg !12533
  %shl8 = shl i32 %and7, 8, !dbg !12533
  %or = or i32 %shl, %shl8, !dbg !12533
  %arraydecay9 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 0, !dbg !12533
  %9 = load i32, i32* %add.ptr10, align 4, !dbg !12533
  %and11 = and i32 %9, 16711680, !dbg !12533
  %shr = lshr i32 %and11, 8, !dbg !12533
  %or12 = or i32 %or, %shr, !dbg !12533
  %arraydecay13 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr14 = getelementptr i32, i32* %arraydecay13, i64 0, !dbg !12533
  %10 = load i32, i32* %add.ptr14, align 4, !dbg !12533
  %and15 = and i32 %10, -16777216, !dbg !12533
  %shr16 = lshr i32 %and15, 24, !dbg !12533
  %or17 = or i32 %or12, %shr16, !dbg !12533
  br label %cond.end, !dbg !12533

cond.false:                                       ; preds = %do.end
  %arraydecay18 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr19 = getelementptr i32, i32* %arraydecay18, i64 0, !dbg !12533
  %11 = load i32, i32* %add.ptr19, align 4, !dbg !12533
  %call20 = call i32 @__fswab32(i32 %11) #10, !dbg !12533
  br label %cond.end, !dbg !12533

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or17, %cond.true ], [ %call20, %cond.false ], !dbg !12533
  %and21 = and i32 %cond, 65535, !dbg !12533
  %12 = load i32, i32* %_v, align 4, !dbg !12533
  %and22 = and i32 %12, 65535, !dbg !12533
  %shl23 = shl i32 %and22, 16, !dbg !12533
  %or24 = or i32 %and21, %shl23, !dbg !12533
  %13 = call i1 @llvm.is.constant.i32(i32 %or24), !dbg !12533
  br i1 %13, label %cond.true25, label %cond.false165, !dbg !12533

cond.true25:                                      ; preds = %cond.end
  %arraydecay26 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr27 = getelementptr i32, i32* %arraydecay26, i64 0, !dbg !12533
  %14 = load i32, i32* %add.ptr27, align 4, !dbg !12533
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !12533
  br i1 %15, label %cond.true28, label %cond.false48, !dbg !12533

cond.true28:                                      ; preds = %cond.true25
  %arraydecay29 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr30 = getelementptr i32, i32* %arraydecay29, i64 0, !dbg !12533
  %16 = load i32, i32* %add.ptr30, align 4, !dbg !12533
  %and31 = and i32 %16, 255, !dbg !12533
  %shl32 = shl i32 %and31, 24, !dbg !12533
  %arraydecay33 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr34 = getelementptr i32, i32* %arraydecay33, i64 0, !dbg !12533
  %17 = load i32, i32* %add.ptr34, align 4, !dbg !12533
  %and35 = and i32 %17, 65280, !dbg !12533
  %shl36 = shl i32 %and35, 8, !dbg !12533
  %or37 = or i32 %shl32, %shl36, !dbg !12533
  %arraydecay38 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 0, !dbg !12533
  %18 = load i32, i32* %add.ptr39, align 4, !dbg !12533
  %and40 = and i32 %18, 16711680, !dbg !12533
  %shr41 = lshr i32 %and40, 8, !dbg !12533
  %or42 = or i32 %or37, %shr41, !dbg !12533
  %arraydecay43 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr44 = getelementptr i32, i32* %arraydecay43, i64 0, !dbg !12533
  %19 = load i32, i32* %add.ptr44, align 4, !dbg !12533
  %and45 = and i32 %19, -16777216, !dbg !12533
  %shr46 = lshr i32 %and45, 24, !dbg !12533
  %or47 = or i32 %or42, %shr46, !dbg !12533
  br label %cond.end52, !dbg !12533

cond.false48:                                     ; preds = %cond.true25
  %arraydecay49 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr50 = getelementptr i32, i32* %arraydecay49, i64 0, !dbg !12533
  %20 = load i32, i32* %add.ptr50, align 4, !dbg !12533
  %call51 = call i32 @__fswab32(i32 %20) #10, !dbg !12533
  br label %cond.end52, !dbg !12533

cond.end52:                                       ; preds = %cond.false48, %cond.true28
  %cond53 = phi i32 [ %or47, %cond.true28 ], [ %call51, %cond.false48 ], !dbg !12533
  %and54 = and i32 %cond53, 65535, !dbg !12533
  %21 = load i32, i32* %_v, align 4, !dbg !12533
  %and55 = and i32 %21, 65535, !dbg !12533
  %shl56 = shl i32 %and55, 16, !dbg !12533
  %or57 = or i32 %and54, %shl56, !dbg !12533
  %and58 = and i32 %or57, 255, !dbg !12533
  %shl59 = shl i32 %and58, 24, !dbg !12533
  %arraydecay60 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 0, !dbg !12533
  %22 = load i32, i32* %add.ptr61, align 4, !dbg !12533
  %23 = call i1 @llvm.is.constant.i32(i32 %22), !dbg !12533
  br i1 %23, label %cond.true62, label %cond.false82, !dbg !12533

cond.true62:                                      ; preds = %cond.end52
  %arraydecay63 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr64 = getelementptr i32, i32* %arraydecay63, i64 0, !dbg !12533
  %24 = load i32, i32* %add.ptr64, align 4, !dbg !12533
  %and65 = and i32 %24, 255, !dbg !12533
  %shl66 = shl i32 %and65, 24, !dbg !12533
  %arraydecay67 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 0, !dbg !12533
  %25 = load i32, i32* %add.ptr68, align 4, !dbg !12533
  %and69 = and i32 %25, 65280, !dbg !12533
  %shl70 = shl i32 %and69, 8, !dbg !12533
  %or71 = or i32 %shl66, %shl70, !dbg !12533
  %arraydecay72 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr73 = getelementptr i32, i32* %arraydecay72, i64 0, !dbg !12533
  %26 = load i32, i32* %add.ptr73, align 4, !dbg !12533
  %and74 = and i32 %26, 16711680, !dbg !12533
  %shr75 = lshr i32 %and74, 8, !dbg !12533
  %or76 = or i32 %or71, %shr75, !dbg !12533
  %arraydecay77 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !12533
  %27 = load i32, i32* %add.ptr78, align 4, !dbg !12533
  %and79 = and i32 %27, -16777216, !dbg !12533
  %shr80 = lshr i32 %and79, 24, !dbg !12533
  %or81 = or i32 %or76, %shr80, !dbg !12533
  br label %cond.end86, !dbg !12533

cond.false82:                                     ; preds = %cond.end52
  %arraydecay83 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr84 = getelementptr i32, i32* %arraydecay83, i64 0, !dbg !12533
  %28 = load i32, i32* %add.ptr84, align 4, !dbg !12533
  %call85 = call i32 @__fswab32(i32 %28) #10, !dbg !12533
  br label %cond.end86, !dbg !12533

cond.end86:                                       ; preds = %cond.false82, %cond.true62
  %cond87 = phi i32 [ %or81, %cond.true62 ], [ %call85, %cond.false82 ], !dbg !12533
  %and88 = and i32 %cond87, 65535, !dbg !12533
  %29 = load i32, i32* %_v, align 4, !dbg !12533
  %and89 = and i32 %29, 65535, !dbg !12533
  %shl90 = shl i32 %and89, 16, !dbg !12533
  %or91 = or i32 %and88, %shl90, !dbg !12533
  %and92 = and i32 %or91, 65280, !dbg !12533
  %shl93 = shl i32 %and92, 8, !dbg !12533
  %or94 = or i32 %shl59, %shl93, !dbg !12533
  %arraydecay95 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr96 = getelementptr i32, i32* %arraydecay95, i64 0, !dbg !12533
  %30 = load i32, i32* %add.ptr96, align 4, !dbg !12533
  %31 = call i1 @llvm.is.constant.i32(i32 %30), !dbg !12533
  br i1 %31, label %cond.true97, label %cond.false117, !dbg !12533

cond.true97:                                      ; preds = %cond.end86
  %arraydecay98 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr99 = getelementptr i32, i32* %arraydecay98, i64 0, !dbg !12533
  %32 = load i32, i32* %add.ptr99, align 4, !dbg !12533
  %and100 = and i32 %32, 255, !dbg !12533
  %shl101 = shl i32 %and100, 24, !dbg !12533
  %arraydecay102 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr103 = getelementptr i32, i32* %arraydecay102, i64 0, !dbg !12533
  %33 = load i32, i32* %add.ptr103, align 4, !dbg !12533
  %and104 = and i32 %33, 65280, !dbg !12533
  %shl105 = shl i32 %and104, 8, !dbg !12533
  %or106 = or i32 %shl101, %shl105, !dbg !12533
  %arraydecay107 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr108 = getelementptr i32, i32* %arraydecay107, i64 0, !dbg !12533
  %34 = load i32, i32* %add.ptr108, align 4, !dbg !12533
  %and109 = and i32 %34, 16711680, !dbg !12533
  %shr110 = lshr i32 %and109, 8, !dbg !12533
  %or111 = or i32 %or106, %shr110, !dbg !12533
  %arraydecay112 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr113 = getelementptr i32, i32* %arraydecay112, i64 0, !dbg !12533
  %35 = load i32, i32* %add.ptr113, align 4, !dbg !12533
  %and114 = and i32 %35, -16777216, !dbg !12533
  %shr115 = lshr i32 %and114, 24, !dbg !12533
  %or116 = or i32 %or111, %shr115, !dbg !12533
  br label %cond.end121, !dbg !12533

cond.false117:                                    ; preds = %cond.end86
  %arraydecay118 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr119 = getelementptr i32, i32* %arraydecay118, i64 0, !dbg !12533
  %36 = load i32, i32* %add.ptr119, align 4, !dbg !12533
  %call120 = call i32 @__fswab32(i32 %36) #10, !dbg !12533
  br label %cond.end121, !dbg !12533

cond.end121:                                      ; preds = %cond.false117, %cond.true97
  %cond122 = phi i32 [ %or116, %cond.true97 ], [ %call120, %cond.false117 ], !dbg !12533
  %and123 = and i32 %cond122, 65535, !dbg !12533
  %37 = load i32, i32* %_v, align 4, !dbg !12533
  %and124 = and i32 %37, 65535, !dbg !12533
  %shl125 = shl i32 %and124, 16, !dbg !12533
  %or126 = or i32 %and123, %shl125, !dbg !12533
  %and127 = and i32 %or126, 16711680, !dbg !12533
  %shr128 = lshr i32 %and127, 8, !dbg !12533
  %or129 = or i32 %or94, %shr128, !dbg !12533
  %arraydecay130 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr131 = getelementptr i32, i32* %arraydecay130, i64 0, !dbg !12533
  %38 = load i32, i32* %add.ptr131, align 4, !dbg !12533
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !12533
  br i1 %39, label %cond.true132, label %cond.false152, !dbg !12533

cond.true132:                                     ; preds = %cond.end121
  %arraydecay133 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr134 = getelementptr i32, i32* %arraydecay133, i64 0, !dbg !12533
  %40 = load i32, i32* %add.ptr134, align 4, !dbg !12533
  %and135 = and i32 %40, 255, !dbg !12533
  %shl136 = shl i32 %and135, 24, !dbg !12533
  %arraydecay137 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr138 = getelementptr i32, i32* %arraydecay137, i64 0, !dbg !12533
  %41 = load i32, i32* %add.ptr138, align 4, !dbg !12533
  %and139 = and i32 %41, 65280, !dbg !12533
  %shl140 = shl i32 %and139, 8, !dbg !12533
  %or141 = or i32 %shl136, %shl140, !dbg !12533
  %arraydecay142 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 0, !dbg !12533
  %42 = load i32, i32* %add.ptr143, align 4, !dbg !12533
  %and144 = and i32 %42, 16711680, !dbg !12533
  %shr145 = lshr i32 %and144, 8, !dbg !12533
  %or146 = or i32 %or141, %shr145, !dbg !12533
  %arraydecay147 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr148 = getelementptr i32, i32* %arraydecay147, i64 0, !dbg !12533
  %43 = load i32, i32* %add.ptr148, align 4, !dbg !12533
  %and149 = and i32 %43, -16777216, !dbg !12533
  %shr150 = lshr i32 %and149, 24, !dbg !12533
  %or151 = or i32 %or146, %shr150, !dbg !12533
  br label %cond.end156, !dbg !12533

cond.false152:                                    ; preds = %cond.end121
  %arraydecay153 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr154 = getelementptr i32, i32* %arraydecay153, i64 0, !dbg !12533
  %44 = load i32, i32* %add.ptr154, align 4, !dbg !12533
  %call155 = call i32 @__fswab32(i32 %44) #10, !dbg !12533
  br label %cond.end156, !dbg !12533

cond.end156:                                      ; preds = %cond.false152, %cond.true132
  %cond157 = phi i32 [ %or151, %cond.true132 ], [ %call155, %cond.false152 ], !dbg !12533
  %and158 = and i32 %cond157, 65535, !dbg !12533
  %45 = load i32, i32* %_v, align 4, !dbg !12533
  %and159 = and i32 %45, 65535, !dbg !12533
  %shl160 = shl i32 %and159, 16, !dbg !12533
  %or161 = or i32 %and158, %shl160, !dbg !12533
  %and162 = and i32 %or161, -16777216, !dbg !12533
  %shr163 = lshr i32 %and162, 24, !dbg !12533
  %or164 = or i32 %or129, %shr163, !dbg !12533
  br label %cond.end199, !dbg !12533

cond.false165:                                    ; preds = %cond.end
  %arraydecay166 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr167 = getelementptr i32, i32* %arraydecay166, i64 0, !dbg !12533
  %46 = load i32, i32* %add.ptr167, align 4, !dbg !12533
  %47 = call i1 @llvm.is.constant.i32(i32 %46), !dbg !12533
  br i1 %47, label %cond.true168, label %cond.false188, !dbg !12533

cond.true168:                                     ; preds = %cond.false165
  %arraydecay169 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr170 = getelementptr i32, i32* %arraydecay169, i64 0, !dbg !12533
  %48 = load i32, i32* %add.ptr170, align 4, !dbg !12533
  %and171 = and i32 %48, 255, !dbg !12533
  %shl172 = shl i32 %and171, 24, !dbg !12533
  %arraydecay173 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr174 = getelementptr i32, i32* %arraydecay173, i64 0, !dbg !12533
  %49 = load i32, i32* %add.ptr174, align 4, !dbg !12533
  %and175 = and i32 %49, 65280, !dbg !12533
  %shl176 = shl i32 %and175, 8, !dbg !12533
  %or177 = or i32 %shl172, %shl176, !dbg !12533
  %arraydecay178 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr179 = getelementptr i32, i32* %arraydecay178, i64 0, !dbg !12533
  %50 = load i32, i32* %add.ptr179, align 4, !dbg !12533
  %and180 = and i32 %50, 16711680, !dbg !12533
  %shr181 = lshr i32 %and180, 8, !dbg !12533
  %or182 = or i32 %or177, %shr181, !dbg !12533
  %arraydecay183 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr184 = getelementptr i32, i32* %arraydecay183, i64 0, !dbg !12533
  %51 = load i32, i32* %add.ptr184, align 4, !dbg !12533
  %and185 = and i32 %51, -16777216, !dbg !12533
  %shr186 = lshr i32 %and185, 24, !dbg !12533
  %or187 = or i32 %or182, %shr186, !dbg !12533
  br label %cond.end192, !dbg !12533

cond.false188:                                    ; preds = %cond.false165
  %arraydecay189 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr190 = getelementptr i32, i32* %arraydecay189, i64 0, !dbg !12533
  %52 = load i32, i32* %add.ptr190, align 4, !dbg !12533
  %call191 = call i32 @__fswab32(i32 %52) #10, !dbg !12533
  br label %cond.end192, !dbg !12533

cond.end192:                                      ; preds = %cond.false188, %cond.true168
  %cond193 = phi i32 [ %or187, %cond.true168 ], [ %call191, %cond.false188 ], !dbg !12533
  %and194 = and i32 %cond193, 65535, !dbg !12533
  %53 = load i32, i32* %_v, align 4, !dbg !12533
  %and195 = and i32 %53, 65535, !dbg !12533
  %shl196 = shl i32 %and195, 16, !dbg !12533
  %or197 = or i32 %and194, %shl196, !dbg !12533
  %call198 = call i32 @__fswab32(i32 %or197) #10, !dbg !12533
  br label %cond.end199, !dbg !12533

cond.end199:                                      ; preds = %cond.end192, %cond.end156
  %cond200 = phi i32 [ %or164, %cond.end156 ], [ %call198, %cond.end192 ], !dbg !12533
  %arraydecay201 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12533
  %add.ptr202 = getelementptr i32, i32* %arraydecay201, i64 0, !dbg !12533
  store i32 %cond200, i32* %add.ptr202, align 4, !dbg !12533
  br label %do.end203, !dbg !12533

do.end203:                                        ; preds = %cond.end199
  %54 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12536
  %arraydecay204 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12536
  %55 = bitcast i32* %arraydecay204 to i8*, !dbg !12536
  %56 = load i32*, i32** %out, align 8, !dbg !12536
  %57 = bitcast i32* %56 to i8*, !dbg !12536
  %call205 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %54, i8* %55, i32 16, i8* %57, i32 128) #8, !dbg !12536
  store i32 %call205, i32* %tmp, align 4, !dbg !12538
  %58 = load i32, i32* %tmp, align 4, !dbg !12536
  store i32 %58, i32* %err, align 4, !dbg !12539
  %59 = load i32, i32* %err, align 4, !dbg !12540
  %tobool206 = icmp ne i32 %59, 0, !dbg !12540
  br i1 %tobool206, label %if.end208, label %if.then207, !dbg !12542

if.then207:                                       ; preds = %do.end203
  %60 = load i32*, i32** %out, align 8, !dbg !12543
  store i32* %60, i32** %retval, align 8, !dbg !12544
  br label %return, !dbg !12544

if.end208:                                        ; preds = %do.end203
  %61 = load i32*, i32** %out, align 8, !dbg !12545
  %62 = bitcast i32* %61 to i8*, !dbg !12545
  call void @kvfree(i8* %62) #8, !dbg !12546
  %63 = load i32, i32* %err, align 4, !dbg !12547
  %conv209 = sext i32 %63 to i64, !dbg !12547
  %call210 = call i8* @ERR_PTR(i64 %conv209) #8, !dbg !12548
  %64 = bitcast i8* %call210 to i32*, !dbg !12548
  store i32* %64, i32** %retval, align 8, !dbg !12549
  br label %return, !dbg !12549

return:                                           ; preds = %if.end208, %if.then207, %if.then
  %65 = load i32*, i32** %retval, align 8, !dbg !12550
  ret i32* %65, !dbg !12550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kvzalloc(i64 %size, i32 %flags) #0 !dbg !12551 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12554, metadata !DIExpression()), !dbg !12555
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12556, metadata !DIExpression()), !dbg !12557
  %0 = load i64, i64* %size.addr, align 8, !dbg !12558
  %1 = load i32, i32* %flags.addr, align 4, !dbg !12559
  %or = or i32 %1, 256, !dbg !12560
  %call = call i8* @kvmalloc(i64 %0, i32 %or) #8, !dbg !12561
  ret i8* %call, !dbg !12562
}

; Function Attrs: noredzone
declare dso_local void @kvfree(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_load_vport(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num, i32 %enabled_events) #0 !dbg !12563 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %enabled_events.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12566, metadata !DIExpression()), !dbg !12567
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !12568, metadata !DIExpression()), !dbg !12569
  store i32 %enabled_events, i32* %enabled_events.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enabled_events.addr, metadata !12570, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12572, metadata !DIExpression()), !dbg !12573
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12574
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !12575
  %2 = load i32, i32* %enabled_events.addr, align 4, !dbg !12576
  %call = call i32 @esw_enable_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1, i32 %2) #8, !dbg !12577
  store i32 %call, i32* %err, align 4, !dbg !12578
  %3 = load i32, i32* %err, align 4, !dbg !12579
  %tobool = icmp ne i32 %3, 0, !dbg !12579
  br i1 %tobool, label %if.then, label %if.end, !dbg !12581

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !12582
  store i32 %4, i32* %retval, align 4, !dbg !12583
  br label %return, !dbg !12583

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12584
  %6 = load i16, i16* %vport_num.addr, align 2, !dbg !12585
  %call1 = call i32 @esw_offloads_load_rep(%struct.mlx5_eswitch* %5, i16 zeroext %6) #8, !dbg !12586
  store i32 %call1, i32* %err, align 4, !dbg !12587
  %7 = load i32, i32* %err, align 4, !dbg !12588
  %tobool2 = icmp ne i32 %7, 0, !dbg !12588
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12590

if.then3:                                         ; preds = %if.end
  br label %err_rep, !dbg !12591

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %err, align 4, !dbg !12592
  store i32 %8, i32* %retval, align 4, !dbg !12593
  br label %return, !dbg !12593

err_rep:                                          ; preds = %if.then3
  call void @llvm.dbg.label(metadata !12594), !dbg !12595
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12596
  %10 = load i16, i16* %vport_num.addr, align 2, !dbg !12597
  call void @esw_disable_vport(%struct.mlx5_eswitch* %9, i16 zeroext %10) #8, !dbg !12598
  %11 = load i32, i32* %err, align 4, !dbg !12599
  store i32 %11, i32* %retval, align 4, !dbg !12600
  br label %return, !dbg !12600

return:                                           ; preds = %err_rep, %if.end4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !12601
  ret i32 %12, !dbg !12601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_enable_vport(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num, i32 %enabled_events) #0 !dbg !12602 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %enabled_events.addr = alloca i32, align 4
  %vport = alloca %struct.mlx5_vport*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !12605, metadata !DIExpression()), !dbg !12606
  store i32 %enabled_events, i32* %enabled_events.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enabled_events.addr, metadata !12607, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !12609, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12611, metadata !DIExpression()), !dbg !12612
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12613
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !12614
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !12615
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %vport, align 8, !dbg !12616
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12617
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 10, !dbg !12618
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !12619
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12620, metadata !DIExpression()), !dbg !12622
  %3 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12622
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %3, i32 0, i32 13, !dbg !12622
  %4 = load i8, i8* %enabled, align 4, !dbg !12622
  %tobool = trunc i8 %4 to i1, !dbg !12622
  %lnot = xor i1 %tobool, true, !dbg !12622
  %lnot1 = xor i1 %lnot, true, !dbg !12622
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12622
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12622
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !12623
  %tobool2 = icmp ne i32 %5, 0, !dbg !12623
  %lnot3 = xor i1 %tobool2, true, !dbg !12623
  %lnot5 = xor i1 %lnot3, true, !dbg !12623
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !12623
  %conv = sext i32 %lnot.ext6 to i64, !dbg !12623
  %tobool7 = icmp ne i64 %conv, 0, !dbg !12623
  br i1 %tobool7, label %if.then, label %if.end, !dbg !12622

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12623

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !12625

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !12627

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !12625

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0), i32 1285, i32 2305, i64 12) #9, !dbg !12629, !srcloc !12631
  br label %do.end10, !dbg !12629

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 728) #9, !dbg !12632, !srcloc !12634
  br label %do.body11, !dbg !12625

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !12635

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !12625

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !12625

if.end:                                           ; preds = %do.end13, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !12622
  %tobool14 = icmp ne i32 %6, 0, !dbg !12622
  %lnot15 = xor i1 %tobool14, true, !dbg !12622
  %lnot17 = xor i1 %lnot15, true, !dbg !12622
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !12622
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !12622
  store i64 %conv19, i64* %tmp, align 8, !dbg !12623
  %7 = load i64, i64* %tmp, align 8, !dbg !12622
  br label %do.body20, !dbg !12637

do.body20:                                        ; preds = %if.end
  %8 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !12638
  %conv21 = zext i32 %8 to i64, !dbg !12638
  %and = and i64 8, %conv21, !dbg !12638
  %tobool22 = icmp ne i64 %and, 0, !dbg !12638
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !12641

if.then23:                                        ; preds = %do.body20
  br label %if.end24, !dbg !12638

if.end24:                                         ; preds = %if.then23, %do.body20
  br label %do.end25, !dbg !12641

do.end25:                                         ; preds = %if.end24
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12642
  %10 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12643
  %call26 = call i32 @esw_vport_setup(%struct.mlx5_eswitch* %9, %struct.mlx5_vport* %10) #8, !dbg !12644
  store i32 %call26, i32* %ret, align 4, !dbg !12645
  %11 = load i32, i32* %ret, align 4, !dbg !12646
  %tobool27 = icmp ne i32 %11, 0, !dbg !12646
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !12648

if.then28:                                        ; preds = %do.end25
  br label %done, !dbg !12649

if.end29:                                         ; preds = %do.end25
  %12 = load i32, i32* %enabled_events.addr, align 4, !dbg !12650
  %13 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12651
  %enabled_events30 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %13, i32 0, i32 14, !dbg !12652
  store i32 %12, i32* %enabled_events30, align 8, !dbg !12653
  %14 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12654
  %enabled31 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %14, i32 0, i32 13, !dbg !12655
  store i8 1, i8* %enabled31, align 4, !dbg !12656
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12657
  %16 = load i16, i16* %vport_num.addr, align 2, !dbg !12659
  %call32 = call zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %15, i16 zeroext %16) #8, !dbg !12660
  br i1 %call32, label %if.then37, label %lor.lhs.false, !dbg !12661

lor.lhs.false:                                    ; preds = %if.end29
  %17 = load i16, i16* %vport_num.addr, align 2, !dbg !12662
  %tobool34 = icmp ne i16 %17, 0, !dbg !12662
  br i1 %tobool34, label %if.end38, label %land.lhs.true, !dbg !12663

land.lhs.true:                                    ; preds = %lor.lhs.false
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12664
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 0, !dbg !12665
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12665
  %call35 = call zeroext i1 @mlx5_core_is_ecpf(%struct.mlx5_core_dev* %19) #8, !dbg !12666
  br i1 %call35, label %if.then37, label %if.end38, !dbg !12667

if.then37:                                        ; preds = %land.lhs.true, %if.end29
  %20 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12668
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %20, i32 0, i32 11, !dbg !12669
  %trusted = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 8, !dbg !12670
  store i8 1, i8* %trusted, align 1, !dbg !12671
  br label %if.end38, !dbg !12668

if.end38:                                         ; preds = %if.then37, %land.lhs.true, %lor.lhs.false
  %21 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12672
  call void @esw_vport_change_handle_locked(%struct.mlx5_vport* %21) #8, !dbg !12673
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12674
  %enabled_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 9, !dbg !12675
  %23 = load i32, i32* %enabled_vports, align 8, !dbg !12676
  %inc = add i32 %23, 1, !dbg !12676
  store i32 %inc, i32* %enabled_vports, align 8, !dbg !12676
  br label %do.body39, !dbg !12677

do.body39:                                        ; preds = %if.end38
  %24 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !12678
  %conv40 = zext i32 %24 to i64, !dbg !12678
  %and41 = and i64 8, %conv40, !dbg !12678
  %tobool42 = icmp ne i64 %and41, 0, !dbg !12678
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !12681

if.then43:                                        ; preds = %do.body39
  br label %if.end44, !dbg !12678

if.end44:                                         ; preds = %if.then43, %do.body39
  br label %do.end45, !dbg !12681

do.end45:                                         ; preds = %if.end44
  br label %done, !dbg !12681

done:                                             ; preds = %do.end45, %if.then28
  call void @llvm.dbg.label(metadata !12682), !dbg !12683
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12684
  %state_lock46 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %25, i32 0, i32 10, !dbg !12685
  call void @mutex_unlock(%struct.mutex* %state_lock46) #8, !dbg !12686
  %26 = load i32, i32* %ret, align 4, !dbg !12687
  ret i32 %26, !dbg !12688
}

; Function Attrs: noredzone
declare dso_local i32 @esw_offloads_load_rep(%struct.mlx5_eswitch*, i16 zeroext) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_disable_vport(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !12689 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %vport = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12692, metadata !DIExpression()), !dbg !12693
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !12694, metadata !DIExpression()), !dbg !12695
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !12696, metadata !DIExpression()), !dbg !12697
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12698
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !12699
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !12700
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %vport, align 8, !dbg !12701
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12702
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 10, !dbg !12703
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !12704
  %3 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12705
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %3, i32 0, i32 13, !dbg !12707
  %4 = load i8, i8* %enabled, align 4, !dbg !12707
  %tobool = trunc i8 %4 to i1, !dbg !12707
  br i1 %tobool, label %if.end, label %if.then, !dbg !12708

if.then:                                          ; preds = %entry
  br label %done, !dbg !12709

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !12710

do.body:                                          ; preds = %if.end
  %5 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !12711
  %conv = zext i32 %5 to i64, !dbg !12711
  %and = and i64 8, %conv, !dbg !12711
  %tobool1 = icmp ne i64 %and, 0, !dbg !12711
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12714

if.then2:                                         ; preds = %do.body
  br label %if.end3, !dbg !12711

if.end3:                                          ; preds = %if.then2, %do.body
  br label %do.end, !dbg !12714

do.end:                                           ; preds = %if.end3
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12715
  %enabled4 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %6, i32 0, i32 13, !dbg !12716
  store i8 0, i8* %enabled4, align 4, !dbg !12717
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12718
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !12719
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12719
  %9 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12720
  %vport5 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %9, i32 0, i32 1, !dbg !12721
  %10 = load i32, i32* %vport5, align 8, !dbg !12721
  %conv6 = trunc i32 %10 to i16, !dbg !12720
  %call7 = call i32 @arm_vport_context_events_cmd(%struct.mlx5_core_dev* %8, i16 zeroext %conv6, i32 0) #8, !dbg !12722
  %11 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12723
  call void @esw_vport_change_handle_locked(%struct.mlx5_vport* %11) #8, !dbg !12724
  %12 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12725
  %enabled_events = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %12, i32 0, i32 14, !dbg !12726
  store i32 0, i32* %enabled_events, align 8, !dbg !12727
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12728
  %14 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12729
  call void @esw_vport_cleanup(%struct.mlx5_eswitch* %13, %struct.mlx5_vport* %14) #8, !dbg !12730
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12731
  %enabled_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 9, !dbg !12732
  %16 = load i32, i32* %enabled_vports, align 8, !dbg !12733
  %dec = add i32 %16, -1, !dbg !12733
  store i32 %dec, i32* %enabled_vports, align 8, !dbg !12733
  br label %done, !dbg !12731

done:                                             ; preds = %do.end, %if.then
  call void @llvm.dbg.label(metadata !12734), !dbg !12735
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12736
  %state_lock8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 10, !dbg !12737
  call void @mutex_unlock(%struct.mutex* %state_lock8) #8, !dbg !12738
  ret void, !dbg !12739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_unload_vport(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !12740 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12741, metadata !DIExpression()), !dbg !12742
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !12743, metadata !DIExpression()), !dbg !12744
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12745
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !12746
  call void @esw_offloads_unload_rep(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !12747
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12748
  %3 = load i16, i16* %vport_num.addr, align 2, !dbg !12749
  call void @esw_disable_vport(%struct.mlx5_eswitch* %2, i16 zeroext %3) #8, !dbg !12750
  ret void, !dbg !12751
}

; Function Attrs: noredzone
declare dso_local void @esw_offloads_unload_rep(%struct.mlx5_eswitch*, i16 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_unload_vf_vports(%struct.mlx5_eswitch* %esw, i16 zeroext %num_vfs) #0 !dbg !12752 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %num_vfs.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12753, metadata !DIExpression()), !dbg !12754
  store i16 %num_vfs, i16* %num_vfs.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %num_vfs.addr, metadata !12755, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12757, metadata !DIExpression()), !dbg !12758
  %0 = load i16, i16* %num_vfs.addr, align 2, !dbg !12759
  %conv = zext i16 %0 to i32, !dbg !12759
  store i32 %conv, i32* %i, align 4, !dbg !12759
  br label %for.cond, !dbg !12759

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !12761
  %cmp = icmp sge i32 %1, 1, !dbg !12761
  br i1 %cmp, label %for.body, label %for.end, !dbg !12759

for.body:                                         ; preds = %for.cond
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12763
  %3 = load i32, i32* %i, align 4, !dbg !12764
  %conv2 = trunc i32 %3 to i16, !dbg !12764
  call void @mlx5_eswitch_unload_vport(%struct.mlx5_eswitch* %2, i16 zeroext %conv2) #8, !dbg !12765
  br label %for.inc, !dbg !12765

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !12761
  %dec = add i32 %4, -1, !dbg !12761
  store i32 %dec, i32* %i, align 4, !dbg !12761
  br label %for.cond, !dbg !12761, !llvm.loop !12766

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_load_vf_vports(%struct.mlx5_eswitch* %esw, i16 zeroext %num_vfs, i32 %enabled_events) #0 !dbg !12769 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %num_vfs.addr = alloca i16, align 2
  %enabled_events.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12770, metadata !DIExpression()), !dbg !12771
  store i16 %num_vfs, i16* %num_vfs.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %num_vfs.addr, metadata !12772, metadata !DIExpression()), !dbg !12773
  store i32 %enabled_events, i32* %enabled_events.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enabled_events.addr, metadata !12774, metadata !DIExpression()), !dbg !12775
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12776, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12778, metadata !DIExpression()), !dbg !12779
  store i32 1, i32* %i, align 4, !dbg !12780
  br label %for.cond, !dbg !12780

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12782
  %1 = load i16, i16* %num_vfs.addr, align 2, !dbg !12782
  %conv = zext i16 %1 to i32, !dbg !12782
  %cmp = icmp sle i32 %0, %conv, !dbg !12782
  br i1 %cmp, label %for.body, label %for.end, !dbg !12780

for.body:                                         ; preds = %for.cond
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12784
  %3 = load i32, i32* %i, align 4, !dbg !12786
  %conv2 = trunc i32 %3 to i16, !dbg !12786
  %4 = load i32, i32* %enabled_events.addr, align 4, !dbg !12787
  %call = call i32 @mlx5_eswitch_load_vport(%struct.mlx5_eswitch* %2, i16 zeroext %conv2, i32 %4) #8, !dbg !12788
  store i32 %call, i32* %err, align 4, !dbg !12789
  %5 = load i32, i32* %err, align 4, !dbg !12790
  %tobool = icmp ne i32 %5, 0, !dbg !12790
  br i1 %tobool, label %if.then, label %if.end, !dbg !12792

if.then:                                          ; preds = %for.body
  br label %vf_err, !dbg !12793

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12794

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !12782
  %inc = add i32 %6, 1, !dbg !12782
  store i32 %inc, i32* %i, align 4, !dbg !12782
  br label %for.cond, !dbg !12782, !llvm.loop !12795

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12797
  br label %return, !dbg !12797

vf_err:                                           ; preds = %if.then
  call void @llvm.dbg.label(metadata !12798), !dbg !12799
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12800
  %8 = load i32, i32* %i, align 4, !dbg !12801
  %sub = sub i32 %8, 1, !dbg !12802
  %conv3 = trunc i32 %sub to i16, !dbg !12801
  call void @mlx5_eswitch_unload_vf_vports(%struct.mlx5_eswitch* %7, i16 zeroext %conv3) #8, !dbg !12803
  %9 = load i32, i32* %err, align 4, !dbg !12804
  store i32 %9, i32* %retval, align 4, !dbg !12805
  br label %return, !dbg !12805

return:                                           ; preds = %vf_err, %for.end
  %10 = load i32, i32* %retval, align 4, !dbg !12806
  ret i32 %10, !dbg !12806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_enable_pf_vf_vports(%struct.mlx5_eswitch* %esw, i32 %enabled_events) #0 !dbg !12807 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %enabled_events.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12810, metadata !DIExpression()), !dbg !12811
  store i32 %enabled_events, i32* %enabled_events.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enabled_events.addr, metadata !12812, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12814, metadata !DIExpression()), !dbg !12815
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12816
  %1 = load i32, i32* %enabled_events.addr, align 4, !dbg !12817
  %call = call i32 @mlx5_eswitch_load_vport(%struct.mlx5_eswitch* %0, i16 zeroext 0, i32 %1) #8, !dbg !12818
  store i32 %call, i32* %ret, align 4, !dbg !12819
  %2 = load i32, i32* %ret, align 4, !dbg !12820
  %tobool = icmp ne i32 %2, 0, !dbg !12820
  br i1 %tobool, label %if.then, label %if.end, !dbg !12822

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !12823
  store i32 %3, i32* %retval, align 4, !dbg !12824
  br label %return, !dbg !12824

if.end:                                           ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12825
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !12827
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12827
  %call1 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %5) #8, !dbg !12828
  br i1 %call1, label %if.then2, label %if.end7, !dbg !12829

if.then2:                                         ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12830
  %7 = load i32, i32* %enabled_events.addr, align 4, !dbg !12832
  %call3 = call i32 @mlx5_eswitch_load_vport(%struct.mlx5_eswitch* %6, i16 zeroext -2, i32 %7) #8, !dbg !12833
  store i32 %call3, i32* %ret, align 4, !dbg !12834
  %8 = load i32, i32* %ret, align 4, !dbg !12835
  %tobool4 = icmp ne i32 %8, 0, !dbg !12835
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !12837

if.then5:                                         ; preds = %if.then2
  br label %ecpf_err, !dbg !12838

if.end6:                                          ; preds = %if.then2
  br label %if.end7, !dbg !12839

if.end7:                                          ; preds = %if.end6, %if.end
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12840
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12841
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 17, !dbg !12842
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !12843
  %11 = load i16, i16* %num_vfs, align 8, !dbg !12843
  %12 = load i32, i32* %enabled_events.addr, align 4, !dbg !12844
  %call8 = call i32 @mlx5_eswitch_load_vf_vports(%struct.mlx5_eswitch* %9, i16 zeroext %11, i32 %12) #8, !dbg !12845
  store i32 %call8, i32* %ret, align 4, !dbg !12846
  %13 = load i32, i32* %ret, align 4, !dbg !12847
  %tobool9 = icmp ne i32 %13, 0, !dbg !12847
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !12849

if.then10:                                        ; preds = %if.end7
  br label %vf_err, !dbg !12850

if.end11:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !12851
  br label %return, !dbg !12851

vf_err:                                           ; preds = %if.then10
  call void @llvm.dbg.label(metadata !12852), !dbg !12853
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12854
  %dev12 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !12856
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev12, align 8, !dbg !12856
  %call13 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %15) #8, !dbg !12857
  br i1 %call13, label %if.then14, label %if.end15, !dbg !12858

if.then14:                                        ; preds = %vf_err
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12859
  call void @mlx5_eswitch_unload_vport(%struct.mlx5_eswitch* %16, i16 zeroext -2) #8, !dbg !12860
  br label %if.end15, !dbg !12860

if.end15:                                         ; preds = %if.then14, %vf_err
  br label %ecpf_err, !dbg !12861

ecpf_err:                                         ; preds = %if.end15, %if.then5
  call void @llvm.dbg.label(metadata !12862), !dbg !12863
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12864
  call void @mlx5_eswitch_unload_vport(%struct.mlx5_eswitch* %17, i16 zeroext 0) #8, !dbg !12865
  %18 = load i32, i32* %ret, align 4, !dbg !12866
  store i32 %18, i32* %retval, align 4, !dbg !12867
  br label %return, !dbg !12867

return:                                           ; preds = %ecpf_err, %if.end11, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !12868
  ret i32 %19, !dbg !12868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %dev) #0 !dbg !12869 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12872, metadata !DIExpression()), !dbg !12873
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12874
  %call = call zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %0) #8, !dbg !12875
  br i1 %call, label %land.rhs, label %land.end, !dbg !12876

land.rhs:                                         ; preds = %entry
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12877
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !12877
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !12877
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !12877
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12877
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !12877
  %2 = load i32, i32* %add.ptr, align 4, !dbg !12877
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !12877
  br i1 %3, label %cond.true, label %cond.false, !dbg !12877

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12877
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !12877
  %hca_cur2 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !12877
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 9, !dbg !12877
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !12877
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !12877
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !12877
  %and = and i32 %5, 255, !dbg !12877
  %shl = shl i32 %and, 24, !dbg !12877
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12877
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !12877
  %hca_cur7 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps6, i32 0, i32 0, !dbg !12877
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 9, !dbg !12877
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !12877
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 0, !dbg !12877
  %7 = load i32, i32* %add.ptr10, align 4, !dbg !12877
  %and11 = and i32 %7, 65280, !dbg !12877
  %shl12 = shl i32 %and11, 8, !dbg !12877
  %or = or i32 %shl, %shl12, !dbg !12877
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12877
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !12877
  %hca_cur14 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps13, i32 0, i32 0, !dbg !12877
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 9, !dbg !12877
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !12877
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 0, !dbg !12877
  %9 = load i32, i32* %add.ptr17, align 4, !dbg !12877
  %and18 = and i32 %9, 16711680, !dbg !12877
  %shr = lshr i32 %and18, 8, !dbg !12877
  %or19 = or i32 %or, %shr, !dbg !12877
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12877
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !12877
  %hca_cur21 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps20, i32 0, i32 0, !dbg !12877
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 9, !dbg !12877
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !12877
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 0, !dbg !12877
  %11 = load i32, i32* %add.ptr24, align 4, !dbg !12877
  %and25 = and i32 %11, -16777216, !dbg !12877
  %shr26 = lshr i32 %and25, 24, !dbg !12877
  %or27 = or i32 %or19, %shr26, !dbg !12877
  br label %cond.end, !dbg !12877

cond.false:                                       ; preds = %land.rhs
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12877
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !12877
  %hca_cur29 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps28, i32 0, i32 0, !dbg !12877
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 9, !dbg !12877
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !12877
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !12877
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !12877
  %call33 = call i32 @__fswab32(i32 %13) #10, !dbg !12877
  br label %cond.end, !dbg !12877

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call33, %cond.false ], !dbg !12877
  %shr34 = lshr i32 %cond, 4, !dbg !12877
  %and35 = and i32 %shr34, 1, !dbg !12877
  %tobool = icmp ne i32 %and35, 0, !dbg !12876
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %14 = phi i1 [ false, %entry ], [ %tobool, %cond.end ], !dbg !12878
  ret i1 %14, !dbg !12879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_disable_pf_vf_vports(%struct.mlx5_eswitch* %esw) #0 !dbg !12880 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12883, metadata !DIExpression()), !dbg !12884
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12885
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12886
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 17, !dbg !12887
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !12888
  %2 = load i16, i16* %num_vfs, align 8, !dbg !12888
  call void @mlx5_eswitch_unload_vf_vports(%struct.mlx5_eswitch* %0, i16 zeroext %2) #8, !dbg !12889
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12890
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !12892
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12892
  %call = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %4) #8, !dbg !12893
  br i1 %call, label %if.then, label %if.end, !dbg !12894

if.then:                                          ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12895
  call void @mlx5_eswitch_unload_vport(%struct.mlx5_eswitch* %5, i16 zeroext -2) #8, !dbg !12896
  br label %if.end, !dbg !12896

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12897
  call void @mlx5_eswitch_unload_vport(%struct.mlx5_eswitch* %6, i16 zeroext 0) #8, !dbg !12898
  ret void, !dbg !12899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_enable_locked(%struct.mlx5_eswitch* %esw, i32 %mode, i32 %num_vfs) #0 !dbg !12900 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %mode.addr = alloca i32, align 4
  %num_vfs.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12903, metadata !DIExpression()), !dbg !12904
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12905, metadata !DIExpression()), !dbg !12906
  store i32 %num_vfs, i32* %num_vfs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_vfs.addr, metadata !12907, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12909, metadata !DIExpression()), !dbg !12910
  br label %do.body, !dbg !12911

do.body:                                          ; preds = %entry
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12912
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 11, !dbg !12912
  br label %do.end, !dbg !12912

do.end:                                           ; preds = %do.body
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12914
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !12914
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12914
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !12914
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !12914
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 8, !dbg !12914
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12914
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 16, !dbg !12914
  %3 = load i32, i32* %add.ptr, align 4, !dbg !12914
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !12914
  br i1 %4, label %cond.true, label %cond.false, !dbg !12914

cond.true:                                        ; preds = %do.end
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12914
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !12914
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !12914
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !12914
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !12914
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 8, !dbg !12914
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !12914
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 16, !dbg !12914
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !12914
  %and = and i32 %7, 255, !dbg !12914
  %shl = shl i32 %and, 24, !dbg !12914
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12914
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !12914
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !12914
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !12914
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !12914
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 8, !dbg !12914
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !12914
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 16, !dbg !12914
  %10 = load i32, i32* %add.ptr12, align 4, !dbg !12914
  %and13 = and i32 %10, 65280, !dbg !12914
  %shl14 = shl i32 %and13, 8, !dbg !12914
  %or = or i32 %shl, %shl14, !dbg !12914
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12914
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !12914
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !12914
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !12914
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !12914
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 8, !dbg !12914
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !12914
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 16, !dbg !12914
  %13 = load i32, i32* %add.ptr20, align 4, !dbg !12914
  %and21 = and i32 %13, 16711680, !dbg !12914
  %shr = lshr i32 %and21, 8, !dbg !12914
  %or22 = or i32 %or, %shr, !dbg !12914
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12914
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !12914
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !12914
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !12914
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !12914
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 8, !dbg !12914
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !12914
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 16, !dbg !12914
  %16 = load i32, i32* %add.ptr28, align 4, !dbg !12914
  %and29 = and i32 %16, -16777216, !dbg !12914
  %shr30 = lshr i32 %and29, 24, !dbg !12914
  %or31 = or i32 %or22, %shr30, !dbg !12914
  br label %cond.end, !dbg !12914

cond.false:                                       ; preds = %do.end
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12914
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !12914
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !12914
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !12914
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !12914
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 8, !dbg !12914
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !12914
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 16, !dbg !12914
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !12914
  %call = call i32 @__fswab32(i32 %19) #10, !dbg !12914
  br label %cond.end, !dbg !12914

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !12914
  %shr38 = lshr i32 %cond, 31, !dbg !12914
  %and39 = and i32 %shr38, 1, !dbg !12914
  %tobool = icmp ne i32 %and39, 0, !dbg !12914
  br i1 %tobool, label %if.end, label %if.then, !dbg !12916

if.then:                                          ; preds = %cond.end
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12917
  %dev40 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 0, !dbg !12917
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev40, align 8, !dbg !12917
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 0, !dbg !12917
  %22 = load %struct.device*, %struct.device** %device, align 8, !dbg !12917
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %22, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0)) #11, !dbg !12917
  store i32 -95, i32* %retval, align 4, !dbg !12919
  br label %return, !dbg !12919

if.end:                                           ; preds = %cond.end
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12920
  %dev41 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 0, !dbg !12920
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev41, align 8, !dbg !12920
  %caps42 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !12920
  %hca_cur43 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps42, i32 0, i32 0, !dbg !12920
  %arrayidx44 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur43, i64 0, i64 8, !dbg !12920
  %arraydecay45 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx44, i64 0, i64 0, !dbg !12920
  %add.ptr46 = getelementptr i32, i32* %arraydecay45, i64 32, !dbg !12920
  %25 = load i32, i32* %add.ptr46, align 4, !dbg !12920
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !12920
  br i1 %26, label %cond.true47, label %cond.false83, !dbg !12920

cond.true47:                                      ; preds = %if.end
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12920
  %dev48 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 0, !dbg !12920
  %28 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev48, align 8, !dbg !12920
  %caps49 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %28, i32 0, i32 9, !dbg !12920
  %hca_cur50 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps49, i32 0, i32 0, !dbg !12920
  %arrayidx51 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur50, i64 0, i64 8, !dbg !12920
  %arraydecay52 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx51, i64 0, i64 0, !dbg !12920
  %add.ptr53 = getelementptr i32, i32* %arraydecay52, i64 32, !dbg !12920
  %29 = load i32, i32* %add.ptr53, align 4, !dbg !12920
  %and54 = and i32 %29, 255, !dbg !12920
  %shl55 = shl i32 %and54, 24, !dbg !12920
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12920
  %dev56 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %30, i32 0, i32 0, !dbg !12920
  %31 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev56, align 8, !dbg !12920
  %caps57 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %31, i32 0, i32 9, !dbg !12920
  %hca_cur58 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps57, i32 0, i32 0, !dbg !12920
  %arrayidx59 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur58, i64 0, i64 8, !dbg !12920
  %arraydecay60 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx59, i64 0, i64 0, !dbg !12920
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 32, !dbg !12920
  %32 = load i32, i32* %add.ptr61, align 4, !dbg !12920
  %and62 = and i32 %32, 65280, !dbg !12920
  %shl63 = shl i32 %and62, 8, !dbg !12920
  %or64 = or i32 %shl55, %shl63, !dbg !12920
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12920
  %dev65 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 0, !dbg !12920
  %34 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev65, align 8, !dbg !12920
  %caps66 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %34, i32 0, i32 9, !dbg !12920
  %hca_cur67 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps66, i32 0, i32 0, !dbg !12920
  %arrayidx68 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur67, i64 0, i64 8, !dbg !12920
  %arraydecay69 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx68, i64 0, i64 0, !dbg !12920
  %add.ptr70 = getelementptr i32, i32* %arraydecay69, i64 32, !dbg !12920
  %35 = load i32, i32* %add.ptr70, align 4, !dbg !12920
  %and71 = and i32 %35, 16711680, !dbg !12920
  %shr72 = lshr i32 %and71, 8, !dbg !12920
  %or73 = or i32 %or64, %shr72, !dbg !12920
  %36 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12920
  %dev74 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %36, i32 0, i32 0, !dbg !12920
  %37 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev74, align 8, !dbg !12920
  %caps75 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %37, i32 0, i32 9, !dbg !12920
  %hca_cur76 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps75, i32 0, i32 0, !dbg !12920
  %arrayidx77 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur76, i64 0, i64 8, !dbg !12920
  %arraydecay78 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx77, i64 0, i64 0, !dbg !12920
  %add.ptr79 = getelementptr i32, i32* %arraydecay78, i64 32, !dbg !12920
  %38 = load i32, i32* %add.ptr79, align 4, !dbg !12920
  %and80 = and i32 %38, -16777216, !dbg !12920
  %shr81 = lshr i32 %and80, 24, !dbg !12920
  %or82 = or i32 %or73, %shr81, !dbg !12920
  br label %cond.end91, !dbg !12920

cond.false83:                                     ; preds = %if.end
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12920
  %dev84 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 0, !dbg !12920
  %40 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev84, align 8, !dbg !12920
  %caps85 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %40, i32 0, i32 9, !dbg !12920
  %hca_cur86 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps85, i32 0, i32 0, !dbg !12920
  %arrayidx87 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur86, i64 0, i64 8, !dbg !12920
  %arraydecay88 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx87, i64 0, i64 0, !dbg !12920
  %add.ptr89 = getelementptr i32, i32* %arraydecay88, i64 32, !dbg !12920
  %41 = load i32, i32* %add.ptr89, align 4, !dbg !12920
  %call90 = call i32 @__fswab32(i32 %41) #10, !dbg !12920
  br label %cond.end91, !dbg !12920

cond.end91:                                       ; preds = %cond.false83, %cond.true47
  %cond92 = phi i32 [ %or82, %cond.true47 ], [ %call90, %cond.false83 ], !dbg !12920
  %shr93 = lshr i32 %cond92, 31, !dbg !12920
  %and94 = and i32 %shr93, 1, !dbg !12920
  %tobool95 = icmp ne i32 %and94, 0, !dbg !12920
  br i1 %tobool95, label %if.end99, label %if.then96, !dbg !12922

if.then96:                                        ; preds = %cond.end91
  %42 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12923
  %dev97 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %42, i32 0, i32 0, !dbg !12923
  %43 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev97, align 8, !dbg !12923
  %device98 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %43, i32 0, i32 0, !dbg !12923
  %44 = load %struct.device*, %struct.device** %device98, align 8, !dbg !12923
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %44, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !12923
  br label %if.end99, !dbg !12923

if.end99:                                         ; preds = %if.then96, %cond.end91
  %45 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12924
  %dev100 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %45, i32 0, i32 0, !dbg !12924
  %46 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev100, align 8, !dbg !12924
  %caps101 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %46, i32 0, i32 9, !dbg !12924
  %hca_cur102 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps101, i32 0, i32 0, !dbg !12924
  %arrayidx103 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur102, i64 0, i64 8, !dbg !12924
  %arraydecay104 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx103, i64 0, i64 0, !dbg !12924
  %add.ptr105 = getelementptr i32, i32* %arraydecay104, i64 48, !dbg !12924
  %47 = load i32, i32* %add.ptr105, align 4, !dbg !12924
  %48 = call i1 @llvm.is.constant.i32(i32 %47), !dbg !12924
  br i1 %48, label %cond.true106, label %cond.false142, !dbg !12924

cond.true106:                                     ; preds = %if.end99
  %49 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12924
  %dev107 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %49, i32 0, i32 0, !dbg !12924
  %50 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev107, align 8, !dbg !12924
  %caps108 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %50, i32 0, i32 9, !dbg !12924
  %hca_cur109 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps108, i32 0, i32 0, !dbg !12924
  %arrayidx110 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur109, i64 0, i64 8, !dbg !12924
  %arraydecay111 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx110, i64 0, i64 0, !dbg !12924
  %add.ptr112 = getelementptr i32, i32* %arraydecay111, i64 48, !dbg !12924
  %51 = load i32, i32* %add.ptr112, align 4, !dbg !12924
  %and113 = and i32 %51, 255, !dbg !12924
  %shl114 = shl i32 %and113, 24, !dbg !12924
  %52 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12924
  %dev115 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %52, i32 0, i32 0, !dbg !12924
  %53 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev115, align 8, !dbg !12924
  %caps116 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %53, i32 0, i32 9, !dbg !12924
  %hca_cur117 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps116, i32 0, i32 0, !dbg !12924
  %arrayidx118 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur117, i64 0, i64 8, !dbg !12924
  %arraydecay119 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx118, i64 0, i64 0, !dbg !12924
  %add.ptr120 = getelementptr i32, i32* %arraydecay119, i64 48, !dbg !12924
  %54 = load i32, i32* %add.ptr120, align 4, !dbg !12924
  %and121 = and i32 %54, 65280, !dbg !12924
  %shl122 = shl i32 %and121, 8, !dbg !12924
  %or123 = or i32 %shl114, %shl122, !dbg !12924
  %55 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12924
  %dev124 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %55, i32 0, i32 0, !dbg !12924
  %56 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev124, align 8, !dbg !12924
  %caps125 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %56, i32 0, i32 9, !dbg !12924
  %hca_cur126 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps125, i32 0, i32 0, !dbg !12924
  %arrayidx127 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur126, i64 0, i64 8, !dbg !12924
  %arraydecay128 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx127, i64 0, i64 0, !dbg !12924
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 48, !dbg !12924
  %57 = load i32, i32* %add.ptr129, align 4, !dbg !12924
  %and130 = and i32 %57, 16711680, !dbg !12924
  %shr131 = lshr i32 %and130, 8, !dbg !12924
  %or132 = or i32 %or123, %shr131, !dbg !12924
  %58 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12924
  %dev133 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %58, i32 0, i32 0, !dbg !12924
  %59 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev133, align 8, !dbg !12924
  %caps134 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %59, i32 0, i32 9, !dbg !12924
  %hca_cur135 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps134, i32 0, i32 0, !dbg !12924
  %arrayidx136 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur135, i64 0, i64 8, !dbg !12924
  %arraydecay137 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx136, i64 0, i64 0, !dbg !12924
  %add.ptr138 = getelementptr i32, i32* %arraydecay137, i64 48, !dbg !12924
  %60 = load i32, i32* %add.ptr138, align 4, !dbg !12924
  %and139 = and i32 %60, -16777216, !dbg !12924
  %shr140 = lshr i32 %and139, 24, !dbg !12924
  %or141 = or i32 %or132, %shr140, !dbg !12924
  br label %cond.end150, !dbg !12924

cond.false142:                                    ; preds = %if.end99
  %61 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12924
  %dev143 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %61, i32 0, i32 0, !dbg !12924
  %62 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev143, align 8, !dbg !12924
  %caps144 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %62, i32 0, i32 9, !dbg !12924
  %hca_cur145 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps144, i32 0, i32 0, !dbg !12924
  %arrayidx146 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur145, i64 0, i64 8, !dbg !12924
  %arraydecay147 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx146, i64 0, i64 0, !dbg !12924
  %add.ptr148 = getelementptr i32, i32* %arraydecay147, i64 48, !dbg !12924
  %63 = load i32, i32* %add.ptr148, align 4, !dbg !12924
  %call149 = call i32 @__fswab32(i32 %63) #10, !dbg !12924
  br label %cond.end150, !dbg !12924

cond.end150:                                      ; preds = %cond.false142, %cond.true106
  %cond151 = phi i32 [ %or141, %cond.true106 ], [ %call149, %cond.false142 ], !dbg !12924
  %shr152 = lshr i32 %cond151, 31, !dbg !12924
  %and153 = and i32 %shr152, 1, !dbg !12924
  %tobool154 = icmp ne i32 %and153, 0, !dbg !12924
  br i1 %tobool154, label %if.end158, label %if.then155, !dbg !12926

if.then155:                                       ; preds = %cond.end150
  %64 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12927
  %dev156 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %64, i32 0, i32 0, !dbg !12927
  %65 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev156, align 8, !dbg !12927
  %device157 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %65, i32 0, i32 0, !dbg !12927
  %66 = load %struct.device*, %struct.device** %device157, align 8, !dbg !12927
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %66, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !12927
  br label %if.end158, !dbg !12927

if.end158:                                        ; preds = %if.then155, %cond.end150
  %67 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12928
  call void @mlx5_eswitch_get_devlink_param(%struct.mlx5_eswitch* %67) #8, !dbg !12929
  %68 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12930
  %69 = load i32, i32* %num_vfs.addr, align 4, !dbg !12931
  call void @mlx5_eswitch_update_num_of_vfs(%struct.mlx5_eswitch* %68, i32 %69) #8, !dbg !12932
  %70 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12933
  call void @esw_create_tsar(%struct.mlx5_eswitch* %70) #8, !dbg !12934
  %71 = load i32, i32* %mode.addr, align 4, !dbg !12935
  %72 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12936
  %mode159 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %72, i32 0, i32 14, !dbg !12937
  store i32 %71, i32* %mode159, align 8, !dbg !12938
  %73 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12939
  %dev160 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %73, i32 0, i32 0, !dbg !12940
  %74 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev160, align 8, !dbg !12940
  call void @mlx5_lag_update(%struct.mlx5_core_dev* %74) #8, !dbg !12941
  %75 = load i32, i32* %mode.addr, align 4, !dbg !12942
  %cmp = icmp eq i32 %75, 1, !dbg !12944
  br i1 %cmp, label %if.then161, label %if.else, !dbg !12945

if.then161:                                       ; preds = %if.end158
  %76 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12946
  %call162 = call i32 @esw_legacy_enable(%struct.mlx5_eswitch* %76) #8, !dbg !12948
  store i32 %call162, i32* %err, align 4, !dbg !12949
  br label %if.end166, !dbg !12950

if.else:                                          ; preds = %if.end158
  %77 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12951
  %dev163 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %77, i32 0, i32 0, !dbg !12953
  %78 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev163, align 8, !dbg !12953
  call void @mlx5_reload_interface(%struct.mlx5_core_dev* %78, i32 1) #8, !dbg !12954
  %79 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12955
  %dev164 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %79, i32 0, i32 0, !dbg !12956
  %80 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev164, align 8, !dbg !12956
  call void @mlx5_reload_interface(%struct.mlx5_core_dev* %80, i32 0) #8, !dbg !12957
  %81 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12958
  %call165 = call i32 @esw_offloads_enable(%struct.mlx5_eswitch* %81) #8, !dbg !12959
  store i32 %call165, i32* %err, align 4, !dbg !12960
  br label %if.end166

if.end166:                                        ; preds = %if.else, %if.then161
  %82 = load i32, i32* %err, align 4, !dbg !12961
  %tobool167 = icmp ne i32 %82, 0, !dbg !12961
  br i1 %tobool167, label %if.then168, label %if.end169, !dbg !12963

if.then168:                                       ; preds = %if.end166
  br label %abort, !dbg !12964

if.end169:                                        ; preds = %if.end166
  %83 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12965
  call void @mlx5_eswitch_event_handlers_register(%struct.mlx5_eswitch* %83) #8, !dbg !12966
  %84 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12967
  %dev170 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %84, i32 0, i32 0, !dbg !12967
  %85 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev170, align 8, !dbg !12967
  %device171 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %85, i32 0, i32 0, !dbg !12967
  %86 = load %struct.device*, %struct.device** %device171, align 8, !dbg !12967
  %87 = load i32, i32* %mode.addr, align 4, !dbg !12967
  %cmp172 = icmp eq i32 %87, 1, !dbg !12967
  %88 = zext i1 %cmp172 to i64, !dbg !12967
  %cond173 = select i1 %cmp172, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), !dbg !12967
  %89 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12967
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %89, i32 0, i32 17, !dbg !12967
  %num_vfs174 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !12967
  %90 = load i16, i16* %num_vfs174, align 8, !dbg !12967
  %conv = zext i16 %90 to i32, !dbg !12967
  %91 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12967
  %enabled_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %91, i32 0, i32 9, !dbg !12967
  %92 = load i32, i32* %enabled_vports, align 8, !dbg !12967
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %86, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), i8* %cond173, i32 %conv, i32 %92) #11, !dbg !12967
  store i32 0, i32* %retval, align 4, !dbg !12968
  br label %return, !dbg !12968

abort:                                            ; preds = %if.then168
  call void @llvm.dbg.label(metadata !12969), !dbg !12970
  %93 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12971
  %mode175 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %93, i32 0, i32 14, !dbg !12972
  store i32 0, i32* %mode175, align 8, !dbg !12973
  %94 = load i32, i32* %mode.addr, align 4, !dbg !12974
  %cmp176 = icmp eq i32 %94, 2, !dbg !12976
  br i1 %cmp176, label %if.then178, label %if.end181, !dbg !12977

if.then178:                                       ; preds = %abort
  %95 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12978
  %dev179 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %95, i32 0, i32 0, !dbg !12980
  %96 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev179, align 8, !dbg !12980
  call void @mlx5_reload_interface(%struct.mlx5_core_dev* %96, i32 0) #8, !dbg !12981
  %97 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12982
  %dev180 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %97, i32 0, i32 0, !dbg !12983
  %98 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev180, align 8, !dbg !12983
  call void @mlx5_reload_interface(%struct.mlx5_core_dev* %98, i32 1) #8, !dbg !12984
  br label %if.end181, !dbg !12985

if.end181:                                        ; preds = %if.then178, %abort
  %99 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12986
  call void @esw_destroy_tsar(%struct.mlx5_eswitch* %99) #8, !dbg !12987
  %100 = load i32, i32* %err, align 4, !dbg !12988
  store i32 %100, i32* %retval, align 4, !dbg !12989
  br label %return, !dbg !12989

return:                                           ; preds = %if.end181, %if.end169, %if.then
  %101 = load i32, i32* %retval, align 4, !dbg !12990
  ret i32 %101, !dbg !12990
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_eswitch_get_devlink_param(%struct.mlx5_eswitch* %esw) #0 !dbg !12991 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %val = alloca %union.devlink_param_value, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !12994, metadata !DIExpression()), !dbg !12995
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12996
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !12997
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12997
  %2 = bitcast %struct.mlx5_core_dev* %1 to i8*, !dbg !12996
  %call = call %struct.devlink* @priv_to_devlink(i8* %2) #8, !dbg !12998
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !12995
  call void @llvm.dbg.declare(metadata %union.devlink_param_value* %val, metadata !12999, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13008, metadata !DIExpression()), !dbg !13009
  %3 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !13010
  %call1 = call i32 @devlink_param_driverinit_value_get(%struct.devlink* %3, i32 12, %union.devlink_param_value* %val) #8, !dbg !13011
  store i32 %call1, i32* %err, align 4, !dbg !13012
  %4 = load i32, i32* %err, align 4, !dbg !13013
  %tobool = icmp ne i32 %4, 0, !dbg !13013
  br i1 %tobool, label %if.else, label %if.then, !dbg !13015

if.then:                                          ; preds = %entry
  %vu32 = bitcast %union.devlink_param_value* %val to i32*, !dbg !13016
  %5 = load i32, i32* %vu32, align 4, !dbg !13016
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13018
  %params = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 18, !dbg !13019
  %large_group_num = getelementptr inbounds %struct.anon.165, %struct.anon.165* %params, i32 0, i32 0, !dbg !13020
  store i32 %5, i32* %large_group_num, align 8, !dbg !13021
  br label %if.end, !dbg !13022

if.else:                                          ; preds = %entry
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13023
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !13023
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !13023
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 0, !dbg !13023
  %9 = load %struct.device*, %struct.device** %device, align 8, !dbg !13023
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.28, i64 0, i64 0), i32 15) #11, !dbg !13023
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13025
  %params3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 18, !dbg !13026
  %large_group_num4 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %params3, i32 0, i32 0, !dbg !13027
  store i32 15, i32* %large_group_num4, align 8, !dbg !13028
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_eswitch_update_num_of_vfs(%struct.mlx5_eswitch* %esw, i32 %num_vfs) #0 !dbg !13030 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %num_vfs.addr = alloca i32, align 4
  %out = alloca i32*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13033, metadata !DIExpression()), !dbg !13034
  store i32 %num_vfs, i32* %num_vfs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_vfs.addr, metadata !13035, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.declare(metadata i32** %out, metadata !13037, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13039, metadata !DIExpression()), !dbg !13041
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13041
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !13041
  %1 = load i32, i32* %mode, align 8, !dbg !13041
  %cmp = icmp ne i32 %1, 0, !dbg !13041
  %lnot = xor i1 %cmp, true, !dbg !13041
  %lnot1 = xor i1 %lnot, true, !dbg !13041
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13041
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13041
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !13042
  %tobool = icmp ne i32 %2, 0, !dbg !13042
  %lnot2 = xor i1 %tobool, true, !dbg !13042
  %lnot4 = xor i1 %lnot2, true, !dbg !13042
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !13042
  %conv = sext i32 %lnot.ext5 to i64, !dbg !13042
  %tobool6 = icmp ne i64 %conv, 0, !dbg !13042
  br i1 %tobool6, label %if.then, label %if.end, !dbg !13041

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13042

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !13044

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !13046

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !13044

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0), i32 1551, i32 2307, i64 12) #9, !dbg !13048, !srcloc !13050
  br label %do.end9, !dbg !13048

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 732) #9, !dbg !13051, !srcloc !13053
  br label %do.body10, !dbg !13044

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !13054

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !13044

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !13044

if.end:                                           ; preds = %do.end12, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !13041
  %tobool13 = icmp ne i32 %3, 0, !dbg !13041
  %lnot14 = xor i1 %tobool13, true, !dbg !13041
  %lnot16 = xor i1 %lnot14, true, !dbg !13041
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13041
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !13041
  store i64 %conv18, i64* %tmp, align 8, !dbg !13042
  %4 = load i64, i64* %tmp, align 8, !dbg !13041
  %5 = load i32, i32* %num_vfs.addr, align 4, !dbg !13056
  %cmp19 = icmp slt i32 %5, 0, !dbg !13058
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !13059

if.then21:                                        ; preds = %if.end
  br label %return, !dbg !13060

if.end22:                                         ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13061
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 0, !dbg !13063
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13063
  %call = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %7) #8, !dbg !13064
  br i1 %call, label %if.end26, label %if.then23, !dbg !13065

if.then23:                                        ; preds = %if.end22
  %8 = load i32, i32* %num_vfs.addr, align 4, !dbg !13066
  %conv24 = trunc i32 %8 to i16, !dbg !13066
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13068
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 17, !dbg !13069
  %num_vfs25 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !13070
  store i16 %conv24, i16* %num_vfs25, align 8, !dbg !13071
  br label %return, !dbg !13072

if.end26:                                         ; preds = %if.end22
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13073
  %dev27 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !13074
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev27, align 8, !dbg !13074
  %call28 = call i32* @mlx5_esw_query_functions(%struct.mlx5_core_dev* %11) #8, !dbg !13075
  store i32* %call28, i32** %out, align 8, !dbg !13076
  %12 = load i32*, i32** %out, align 8, !dbg !13077
  %13 = bitcast i32* %12 to i8*, !dbg !13077
  %call29 = call zeroext i1 @IS_ERR(i8* %13) #8, !dbg !13079
  br i1 %call29, label %if.then30, label %if.end31, !dbg !13080

if.then30:                                        ; preds = %if.end26
  br label %return, !dbg !13081

if.end31:                                         ; preds = %if.end26
  %14 = load i32*, i32** %out, align 8, !dbg !13082
  %add.ptr = getelementptr i32, i32* %14, i64 4, !dbg !13082
  %15 = load i32, i32* %add.ptr, align 4, !dbg !13082
  %16 = call i1 @llvm.is.constant.i32(i32 %15), !dbg !13082
  br i1 %16, label %cond.true, label %cond.false, !dbg !13082

cond.true:                                        ; preds = %if.end31
  %17 = load i32*, i32** %out, align 8, !dbg !13082
  %add.ptr32 = getelementptr i32, i32* %17, i64 4, !dbg !13082
  %18 = load i32, i32* %add.ptr32, align 4, !dbg !13082
  %and = and i32 %18, 255, !dbg !13082
  %shl = shl i32 %and, 24, !dbg !13082
  %19 = load i32*, i32** %out, align 8, !dbg !13082
  %add.ptr33 = getelementptr i32, i32* %19, i64 4, !dbg !13082
  %20 = load i32, i32* %add.ptr33, align 4, !dbg !13082
  %and34 = and i32 %20, 65280, !dbg !13082
  %shl35 = shl i32 %and34, 8, !dbg !13082
  %or = or i32 %shl, %shl35, !dbg !13082
  %21 = load i32*, i32** %out, align 8, !dbg !13082
  %add.ptr36 = getelementptr i32, i32* %21, i64 4, !dbg !13082
  %22 = load i32, i32* %add.ptr36, align 4, !dbg !13082
  %and37 = and i32 %22, 16711680, !dbg !13082
  %shr = lshr i32 %and37, 8, !dbg !13082
  %or38 = or i32 %or, %shr, !dbg !13082
  %23 = load i32*, i32** %out, align 8, !dbg !13082
  %add.ptr39 = getelementptr i32, i32* %23, i64 4, !dbg !13082
  %24 = load i32, i32* %add.ptr39, align 4, !dbg !13082
  %and40 = and i32 %24, -16777216, !dbg !13082
  %shr41 = lshr i32 %and40, 24, !dbg !13082
  %or42 = or i32 %or38, %shr41, !dbg !13082
  br label %cond.end, !dbg !13082

cond.false:                                       ; preds = %if.end31
  %25 = load i32*, i32** %out, align 8, !dbg !13082
  %add.ptr43 = getelementptr i32, i32* %25, i64 4, !dbg !13082
  %26 = load i32, i32* %add.ptr43, align 4, !dbg !13082
  %call44 = call i32 @__fswab32(i32 %26) #10, !dbg !13082
  br label %cond.end, !dbg !13082

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or42, %cond.true ], [ %call44, %cond.false ], !dbg !13082
  %shr45 = lshr i32 %cond, 0, !dbg !13082
  %and46 = and i32 %shr45, 65535, !dbg !13082
  %conv47 = trunc i32 %and46 to i16, !dbg !13082
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13083
  %esw_funcs48 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 17, !dbg !13084
  %num_vfs49 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs48, i32 0, i32 1, !dbg !13085
  store i16 %conv47, i16* %num_vfs49, align 8, !dbg !13086
  %28 = load i32*, i32** %out, align 8, !dbg !13087
  %29 = bitcast i32* %28 to i8*, !dbg !13087
  call void @kvfree(i8* %29) #8, !dbg !13088
  br label %return, !dbg !13089

return:                                           ; preds = %cond.end, %if.then30, %if.then23, %if.then21
  ret void, !dbg !13089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_create_tsar(%struct.mlx5_eswitch* %esw) #0 !dbg !13090 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %tsar_ctx = alloca [16 x i32], align 16
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %attr = alloca i32*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13091, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.declare(metadata [16 x i32]* %tsar_ctx, metadata !13093, metadata !DIExpression()), !dbg !13094
  %0 = bitcast [16 x i32]* %tsar_ctx to i8*, !dbg !13094
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 64, i1 false), !dbg !13094
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !13095, metadata !DIExpression()), !dbg !13096
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13097
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !13098
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !13098
  store %struct.mlx5_core_dev* %2, %struct.mlx5_core_dev** %dev, align 8, !dbg !13096
  call void @llvm.dbg.declare(metadata i32** %attr, metadata !13099, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13101, metadata !DIExpression()), !dbg !13102
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13103
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !13103
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !13103
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13103
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13103
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 16, !dbg !13103
  %4 = load i32, i32* %add.ptr, align 4, !dbg !13103
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !13103
  br i1 %5, label %cond.true, label %cond.false, !dbg !13103

cond.true:                                        ; preds = %entry
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13103
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !13103
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !13103
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !13103
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !13103
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 16, !dbg !13103
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !13103
  %and = and i32 %7, 255, !dbg !13103
  %shl = shl i32 %and, 24, !dbg !13103
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13103
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !13103
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !13103
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !13103
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !13103
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 16, !dbg !13103
  %9 = load i32, i32* %add.ptr11, align 4, !dbg !13103
  %and12 = and i32 %9, 65280, !dbg !13103
  %shl13 = shl i32 %and12, 8, !dbg !13103
  %or = or i32 %shl, %shl13, !dbg !13103
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13103
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !13103
  %hca_cur15 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps14, i32 0, i32 0, !dbg !13103
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !13103
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !13103
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 16, !dbg !13103
  %11 = load i32, i32* %add.ptr18, align 4, !dbg !13103
  %and19 = and i32 %11, 16711680, !dbg !13103
  %shr = lshr i32 %and19, 8, !dbg !13103
  %or20 = or i32 %or, %shr, !dbg !13103
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13103
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !13103
  %hca_cur22 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps21, i32 0, i32 0, !dbg !13103
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !13103
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !13103
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 16, !dbg !13103
  %13 = load i32, i32* %add.ptr25, align 4, !dbg !13103
  %and26 = and i32 %13, -16777216, !dbg !13103
  %shr27 = lshr i32 %and26, 24, !dbg !13103
  %or28 = or i32 %or20, %shr27, !dbg !13103
  br label %cond.end, !dbg !13103

cond.false:                                       ; preds = %entry
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13103
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !13103
  %hca_cur30 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps29, i32 0, i32 0, !dbg !13103
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !13103
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !13103
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 16, !dbg !13103
  %15 = load i32, i32* %add.ptr33, align 4, !dbg !13103
  %call = call i32 @__fswab32(i32 %15) #10, !dbg !13103
  br label %cond.end, !dbg !13103

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call, %cond.false ], !dbg !13103
  %shr34 = lshr i32 %cond, 4, !dbg !13103
  %and35 = and i32 %shr34, 1, !dbg !13103
  %tobool = icmp ne i32 %and35, 0, !dbg !13103
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13105

lor.lhs.false:                                    ; preds = %cond.end
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13106
  %caps36 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !13106
  %hca_cur37 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps36, i32 0, i32 0, !dbg !13106
  %arrayidx38 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur37, i64 0, i64 12, !dbg !13106
  %arraydecay39 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx38, i64 0, i64 0, !dbg !13106
  %add.ptr40 = getelementptr i32, i32* %arraydecay39, i64 0, !dbg !13106
  %17 = load i32, i32* %add.ptr40, align 4, !dbg !13106
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !13106
  br i1 %18, label %cond.true41, label %cond.false73, !dbg !13106

cond.true41:                                      ; preds = %lor.lhs.false
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13106
  %caps42 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !13106
  %hca_cur43 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps42, i32 0, i32 0, !dbg !13106
  %arrayidx44 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur43, i64 0, i64 12, !dbg !13106
  %arraydecay45 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx44, i64 0, i64 0, !dbg !13106
  %add.ptr46 = getelementptr i32, i32* %arraydecay45, i64 0, !dbg !13106
  %20 = load i32, i32* %add.ptr46, align 4, !dbg !13106
  %and47 = and i32 %20, 255, !dbg !13106
  %shl48 = shl i32 %and47, 24, !dbg !13106
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13106
  %caps49 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !13106
  %hca_cur50 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps49, i32 0, i32 0, !dbg !13106
  %arrayidx51 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur50, i64 0, i64 12, !dbg !13106
  %arraydecay52 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx51, i64 0, i64 0, !dbg !13106
  %add.ptr53 = getelementptr i32, i32* %arraydecay52, i64 0, !dbg !13106
  %22 = load i32, i32* %add.ptr53, align 4, !dbg !13106
  %and54 = and i32 %22, 65280, !dbg !13106
  %shl55 = shl i32 %and54, 8, !dbg !13106
  %or56 = or i32 %shl48, %shl55, !dbg !13106
  %23 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13106
  %caps57 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %23, i32 0, i32 9, !dbg !13106
  %hca_cur58 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps57, i32 0, i32 0, !dbg !13106
  %arrayidx59 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur58, i64 0, i64 12, !dbg !13106
  %arraydecay60 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx59, i64 0, i64 0, !dbg !13106
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 0, !dbg !13106
  %24 = load i32, i32* %add.ptr61, align 4, !dbg !13106
  %and62 = and i32 %24, 16711680, !dbg !13106
  %shr63 = lshr i32 %and62, 8, !dbg !13106
  %or64 = or i32 %or56, %shr63, !dbg !13106
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13106
  %caps65 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %25, i32 0, i32 9, !dbg !13106
  %hca_cur66 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps65, i32 0, i32 0, !dbg !13106
  %arrayidx67 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur66, i64 0, i64 12, !dbg !13106
  %arraydecay68 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx67, i64 0, i64 0, !dbg !13106
  %add.ptr69 = getelementptr i32, i32* %arraydecay68, i64 0, !dbg !13106
  %26 = load i32, i32* %add.ptr69, align 4, !dbg !13106
  %and70 = and i32 %26, -16777216, !dbg !13106
  %shr71 = lshr i32 %and70, 24, !dbg !13106
  %or72 = or i32 %or64, %shr71, !dbg !13106
  br label %cond.end80, !dbg !13106

cond.false73:                                     ; preds = %lor.lhs.false
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13106
  %caps74 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !13106
  %hca_cur75 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps74, i32 0, i32 0, !dbg !13106
  %arrayidx76 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur75, i64 0, i64 12, !dbg !13106
  %arraydecay77 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx76, i64 0, i64 0, !dbg !13106
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !13106
  %28 = load i32, i32* %add.ptr78, align 4, !dbg !13106
  %call79 = call i32 @__fswab32(i32 %28) #10, !dbg !13106
  br label %cond.end80, !dbg !13106

cond.end80:                                       ; preds = %cond.false73, %cond.true41
  %cond81 = phi i32 [ %or72, %cond.true41 ], [ %call79, %cond.false73 ], !dbg !13106
  %shr82 = lshr i32 %cond81, 30, !dbg !13106
  %and83 = and i32 %shr82, 1, !dbg !13106
  %tobool84 = icmp ne i32 %and83, 0, !dbg !13106
  br i1 %tobool84, label %if.end, label %if.then, !dbg !13107

if.then:                                          ; preds = %cond.end80, %cond.end
  br label %return, !dbg !13108

if.end:                                           ; preds = %cond.end80
  %29 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13109
  %call85 = call zeroext i1 @element_type_supported(%struct.mlx5_eswitch* %29, i32 0) #8, !dbg !13111
  br i1 %call85, label %if.end87, label %if.then86, !dbg !13112

if.then86:                                        ; preds = %if.end
  br label %return, !dbg !13113

if.end87:                                         ; preds = %if.end
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13114
  %qos = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %30, i32 0, i32 12, !dbg !13116
  %enabled = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos, i32 0, i32 0, !dbg !13117
  %31 = load i8, i8* %enabled, align 8, !dbg !13117
  %tobool88 = trunc i8 %31 to i1, !dbg !13117
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !13118

if.then89:                                        ; preds = %if.end87
  br label %return, !dbg !13119

if.end90:                                         ; preds = %if.end87
  br label %do.body, !dbg !13120

do.body:                                          ; preds = %if.end90
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13121, metadata !DIExpression()), !dbg !13123
  store i32 0, i32* %_v, align 4, !dbg !13123
  br label %do.body91, !dbg !13123

do.body91:                                        ; preds = %do.body
  br label %do.end, !dbg !13124

do.end:                                           ; preds = %do.body91
  %arraydecay92 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr93 = getelementptr i32, i32* %arraydecay92, i64 0, !dbg !13123
  %32 = load i32, i32* %add.ptr93, align 4, !dbg !13123
  %33 = call i1 @llvm.is.constant.i32(i32 %32), !dbg !13123
  br i1 %33, label %cond.true94, label %cond.false114, !dbg !13123

cond.true94:                                      ; preds = %do.end
  %arraydecay95 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr96 = getelementptr i32, i32* %arraydecay95, i64 0, !dbg !13123
  %34 = load i32, i32* %add.ptr96, align 4, !dbg !13123
  %and97 = and i32 %34, 255, !dbg !13123
  %shl98 = shl i32 %and97, 24, !dbg !13123
  %arraydecay99 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr100 = getelementptr i32, i32* %arraydecay99, i64 0, !dbg !13123
  %35 = load i32, i32* %add.ptr100, align 4, !dbg !13123
  %and101 = and i32 %35, 65280, !dbg !13123
  %shl102 = shl i32 %and101, 8, !dbg !13123
  %or103 = or i32 %shl98, %shl102, !dbg !13123
  %arraydecay104 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr105 = getelementptr i32, i32* %arraydecay104, i64 0, !dbg !13123
  %36 = load i32, i32* %add.ptr105, align 4, !dbg !13123
  %and106 = and i32 %36, 16711680, !dbg !13123
  %shr107 = lshr i32 %and106, 8, !dbg !13123
  %or108 = or i32 %or103, %shr107, !dbg !13123
  %arraydecay109 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr110 = getelementptr i32, i32* %arraydecay109, i64 0, !dbg !13123
  %37 = load i32, i32* %add.ptr110, align 4, !dbg !13123
  %and111 = and i32 %37, -16777216, !dbg !13123
  %shr112 = lshr i32 %and111, 24, !dbg !13123
  %or113 = or i32 %or108, %shr112, !dbg !13123
  br label %cond.end118, !dbg !13123

cond.false114:                                    ; preds = %do.end
  %arraydecay115 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr116 = getelementptr i32, i32* %arraydecay115, i64 0, !dbg !13123
  %38 = load i32, i32* %add.ptr116, align 4, !dbg !13123
  %call117 = call i32 @__fswab32(i32 %38) #10, !dbg !13123
  br label %cond.end118, !dbg !13123

cond.end118:                                      ; preds = %cond.false114, %cond.true94
  %cond119 = phi i32 [ %or113, %cond.true94 ], [ %call117, %cond.false114 ], !dbg !13123
  %and120 = and i32 %cond119, 16777215, !dbg !13123
  %39 = load i32, i32* %_v, align 4, !dbg !13123
  %and121 = and i32 %39, 255, !dbg !13123
  %shl122 = shl i32 %and121, 24, !dbg !13123
  %or123 = or i32 %and120, %shl122, !dbg !13123
  %40 = call i1 @llvm.is.constant.i32(i32 %or123), !dbg !13123
  br i1 %40, label %cond.true124, label %cond.false264, !dbg !13123

cond.true124:                                     ; preds = %cond.end118
  %arraydecay125 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr126 = getelementptr i32, i32* %arraydecay125, i64 0, !dbg !13123
  %41 = load i32, i32* %add.ptr126, align 4, !dbg !13123
  %42 = call i1 @llvm.is.constant.i32(i32 %41), !dbg !13123
  br i1 %42, label %cond.true127, label %cond.false147, !dbg !13123

cond.true127:                                     ; preds = %cond.true124
  %arraydecay128 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 0, !dbg !13123
  %43 = load i32, i32* %add.ptr129, align 4, !dbg !13123
  %and130 = and i32 %43, 255, !dbg !13123
  %shl131 = shl i32 %and130, 24, !dbg !13123
  %arraydecay132 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr133 = getelementptr i32, i32* %arraydecay132, i64 0, !dbg !13123
  %44 = load i32, i32* %add.ptr133, align 4, !dbg !13123
  %and134 = and i32 %44, 65280, !dbg !13123
  %shl135 = shl i32 %and134, 8, !dbg !13123
  %or136 = or i32 %shl131, %shl135, !dbg !13123
  %arraydecay137 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr138 = getelementptr i32, i32* %arraydecay137, i64 0, !dbg !13123
  %45 = load i32, i32* %add.ptr138, align 4, !dbg !13123
  %and139 = and i32 %45, 16711680, !dbg !13123
  %shr140 = lshr i32 %and139, 8, !dbg !13123
  %or141 = or i32 %or136, %shr140, !dbg !13123
  %arraydecay142 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 0, !dbg !13123
  %46 = load i32, i32* %add.ptr143, align 4, !dbg !13123
  %and144 = and i32 %46, -16777216, !dbg !13123
  %shr145 = lshr i32 %and144, 24, !dbg !13123
  %or146 = or i32 %or141, %shr145, !dbg !13123
  br label %cond.end151, !dbg !13123

cond.false147:                                    ; preds = %cond.true124
  %arraydecay148 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr149 = getelementptr i32, i32* %arraydecay148, i64 0, !dbg !13123
  %47 = load i32, i32* %add.ptr149, align 4, !dbg !13123
  %call150 = call i32 @__fswab32(i32 %47) #10, !dbg !13123
  br label %cond.end151, !dbg !13123

cond.end151:                                      ; preds = %cond.false147, %cond.true127
  %cond152 = phi i32 [ %or146, %cond.true127 ], [ %call150, %cond.false147 ], !dbg !13123
  %and153 = and i32 %cond152, 16777215, !dbg !13123
  %48 = load i32, i32* %_v, align 4, !dbg !13123
  %and154 = and i32 %48, 255, !dbg !13123
  %shl155 = shl i32 %and154, 24, !dbg !13123
  %or156 = or i32 %and153, %shl155, !dbg !13123
  %and157 = and i32 %or156, 255, !dbg !13123
  %shl158 = shl i32 %and157, 24, !dbg !13123
  %arraydecay159 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr160 = getelementptr i32, i32* %arraydecay159, i64 0, !dbg !13123
  %49 = load i32, i32* %add.ptr160, align 4, !dbg !13123
  %50 = call i1 @llvm.is.constant.i32(i32 %49), !dbg !13123
  br i1 %50, label %cond.true161, label %cond.false181, !dbg !13123

cond.true161:                                     ; preds = %cond.end151
  %arraydecay162 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr163 = getelementptr i32, i32* %arraydecay162, i64 0, !dbg !13123
  %51 = load i32, i32* %add.ptr163, align 4, !dbg !13123
  %and164 = and i32 %51, 255, !dbg !13123
  %shl165 = shl i32 %and164, 24, !dbg !13123
  %arraydecay166 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr167 = getelementptr i32, i32* %arraydecay166, i64 0, !dbg !13123
  %52 = load i32, i32* %add.ptr167, align 4, !dbg !13123
  %and168 = and i32 %52, 65280, !dbg !13123
  %shl169 = shl i32 %and168, 8, !dbg !13123
  %or170 = or i32 %shl165, %shl169, !dbg !13123
  %arraydecay171 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !13123
  %53 = load i32, i32* %add.ptr172, align 4, !dbg !13123
  %and173 = and i32 %53, 16711680, !dbg !13123
  %shr174 = lshr i32 %and173, 8, !dbg !13123
  %or175 = or i32 %or170, %shr174, !dbg !13123
  %arraydecay176 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 0, !dbg !13123
  %54 = load i32, i32* %add.ptr177, align 4, !dbg !13123
  %and178 = and i32 %54, -16777216, !dbg !13123
  %shr179 = lshr i32 %and178, 24, !dbg !13123
  %or180 = or i32 %or175, %shr179, !dbg !13123
  br label %cond.end185, !dbg !13123

cond.false181:                                    ; preds = %cond.end151
  %arraydecay182 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr183 = getelementptr i32, i32* %arraydecay182, i64 0, !dbg !13123
  %55 = load i32, i32* %add.ptr183, align 4, !dbg !13123
  %call184 = call i32 @__fswab32(i32 %55) #10, !dbg !13123
  br label %cond.end185, !dbg !13123

cond.end185:                                      ; preds = %cond.false181, %cond.true161
  %cond186 = phi i32 [ %or180, %cond.true161 ], [ %call184, %cond.false181 ], !dbg !13123
  %and187 = and i32 %cond186, 16777215, !dbg !13123
  %56 = load i32, i32* %_v, align 4, !dbg !13123
  %and188 = and i32 %56, 255, !dbg !13123
  %shl189 = shl i32 %and188, 24, !dbg !13123
  %or190 = or i32 %and187, %shl189, !dbg !13123
  %and191 = and i32 %or190, 65280, !dbg !13123
  %shl192 = shl i32 %and191, 8, !dbg !13123
  %or193 = or i32 %shl158, %shl192, !dbg !13123
  %arraydecay194 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr195 = getelementptr i32, i32* %arraydecay194, i64 0, !dbg !13123
  %57 = load i32, i32* %add.ptr195, align 4, !dbg !13123
  %58 = call i1 @llvm.is.constant.i32(i32 %57), !dbg !13123
  br i1 %58, label %cond.true196, label %cond.false216, !dbg !13123

cond.true196:                                     ; preds = %cond.end185
  %arraydecay197 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr198 = getelementptr i32, i32* %arraydecay197, i64 0, !dbg !13123
  %59 = load i32, i32* %add.ptr198, align 4, !dbg !13123
  %and199 = and i32 %59, 255, !dbg !13123
  %shl200 = shl i32 %and199, 24, !dbg !13123
  %arraydecay201 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr202 = getelementptr i32, i32* %arraydecay201, i64 0, !dbg !13123
  %60 = load i32, i32* %add.ptr202, align 4, !dbg !13123
  %and203 = and i32 %60, 65280, !dbg !13123
  %shl204 = shl i32 %and203, 8, !dbg !13123
  %or205 = or i32 %shl200, %shl204, !dbg !13123
  %arraydecay206 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 0, !dbg !13123
  %61 = load i32, i32* %add.ptr207, align 4, !dbg !13123
  %and208 = and i32 %61, 16711680, !dbg !13123
  %shr209 = lshr i32 %and208, 8, !dbg !13123
  %or210 = or i32 %or205, %shr209, !dbg !13123
  %arraydecay211 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr212 = getelementptr i32, i32* %arraydecay211, i64 0, !dbg !13123
  %62 = load i32, i32* %add.ptr212, align 4, !dbg !13123
  %and213 = and i32 %62, -16777216, !dbg !13123
  %shr214 = lshr i32 %and213, 24, !dbg !13123
  %or215 = or i32 %or210, %shr214, !dbg !13123
  br label %cond.end220, !dbg !13123

cond.false216:                                    ; preds = %cond.end185
  %arraydecay217 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr218 = getelementptr i32, i32* %arraydecay217, i64 0, !dbg !13123
  %63 = load i32, i32* %add.ptr218, align 4, !dbg !13123
  %call219 = call i32 @__fswab32(i32 %63) #10, !dbg !13123
  br label %cond.end220, !dbg !13123

cond.end220:                                      ; preds = %cond.false216, %cond.true196
  %cond221 = phi i32 [ %or215, %cond.true196 ], [ %call219, %cond.false216 ], !dbg !13123
  %and222 = and i32 %cond221, 16777215, !dbg !13123
  %64 = load i32, i32* %_v, align 4, !dbg !13123
  %and223 = and i32 %64, 255, !dbg !13123
  %shl224 = shl i32 %and223, 24, !dbg !13123
  %or225 = or i32 %and222, %shl224, !dbg !13123
  %and226 = and i32 %or225, 16711680, !dbg !13123
  %shr227 = lshr i32 %and226, 8, !dbg !13123
  %or228 = or i32 %or193, %shr227, !dbg !13123
  %arraydecay229 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 0, !dbg !13123
  %65 = load i32, i32* %add.ptr230, align 4, !dbg !13123
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !13123
  br i1 %66, label %cond.true231, label %cond.false251, !dbg !13123

cond.true231:                                     ; preds = %cond.end220
  %arraydecay232 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr233 = getelementptr i32, i32* %arraydecay232, i64 0, !dbg !13123
  %67 = load i32, i32* %add.ptr233, align 4, !dbg !13123
  %and234 = and i32 %67, 255, !dbg !13123
  %shl235 = shl i32 %and234, 24, !dbg !13123
  %arraydecay236 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr237 = getelementptr i32, i32* %arraydecay236, i64 0, !dbg !13123
  %68 = load i32, i32* %add.ptr237, align 4, !dbg !13123
  %and238 = and i32 %68, 65280, !dbg !13123
  %shl239 = shl i32 %and238, 8, !dbg !13123
  %or240 = or i32 %shl235, %shl239, !dbg !13123
  %arraydecay241 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr242 = getelementptr i32, i32* %arraydecay241, i64 0, !dbg !13123
  %69 = load i32, i32* %add.ptr242, align 4, !dbg !13123
  %and243 = and i32 %69, 16711680, !dbg !13123
  %shr244 = lshr i32 %and243, 8, !dbg !13123
  %or245 = or i32 %or240, %shr244, !dbg !13123
  %arraydecay246 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 0, !dbg !13123
  %70 = load i32, i32* %add.ptr247, align 4, !dbg !13123
  %and248 = and i32 %70, -16777216, !dbg !13123
  %shr249 = lshr i32 %and248, 24, !dbg !13123
  %or250 = or i32 %or245, %shr249, !dbg !13123
  br label %cond.end255, !dbg !13123

cond.false251:                                    ; preds = %cond.end220
  %arraydecay252 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr253 = getelementptr i32, i32* %arraydecay252, i64 0, !dbg !13123
  %71 = load i32, i32* %add.ptr253, align 4, !dbg !13123
  %call254 = call i32 @__fswab32(i32 %71) #10, !dbg !13123
  br label %cond.end255, !dbg !13123

cond.end255:                                      ; preds = %cond.false251, %cond.true231
  %cond256 = phi i32 [ %or250, %cond.true231 ], [ %call254, %cond.false251 ], !dbg !13123
  %and257 = and i32 %cond256, 16777215, !dbg !13123
  %72 = load i32, i32* %_v, align 4, !dbg !13123
  %and258 = and i32 %72, 255, !dbg !13123
  %shl259 = shl i32 %and258, 24, !dbg !13123
  %or260 = or i32 %and257, %shl259, !dbg !13123
  %and261 = and i32 %or260, -16777216, !dbg !13123
  %shr262 = lshr i32 %and261, 24, !dbg !13123
  %or263 = or i32 %or228, %shr262, !dbg !13123
  br label %cond.end298, !dbg !13123

cond.false264:                                    ; preds = %cond.end118
  %arraydecay265 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr266 = getelementptr i32, i32* %arraydecay265, i64 0, !dbg !13123
  %73 = load i32, i32* %add.ptr266, align 4, !dbg !13123
  %74 = call i1 @llvm.is.constant.i32(i32 %73), !dbg !13123
  br i1 %74, label %cond.true267, label %cond.false287, !dbg !13123

cond.true267:                                     ; preds = %cond.false264
  %arraydecay268 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr269 = getelementptr i32, i32* %arraydecay268, i64 0, !dbg !13123
  %75 = load i32, i32* %add.ptr269, align 4, !dbg !13123
  %and270 = and i32 %75, 255, !dbg !13123
  %shl271 = shl i32 %and270, 24, !dbg !13123
  %arraydecay272 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr273 = getelementptr i32, i32* %arraydecay272, i64 0, !dbg !13123
  %76 = load i32, i32* %add.ptr273, align 4, !dbg !13123
  %and274 = and i32 %76, 65280, !dbg !13123
  %shl275 = shl i32 %and274, 8, !dbg !13123
  %or276 = or i32 %shl271, %shl275, !dbg !13123
  %arraydecay277 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr278 = getelementptr i32, i32* %arraydecay277, i64 0, !dbg !13123
  %77 = load i32, i32* %add.ptr278, align 4, !dbg !13123
  %and279 = and i32 %77, 16711680, !dbg !13123
  %shr280 = lshr i32 %and279, 8, !dbg !13123
  %or281 = or i32 %or276, %shr280, !dbg !13123
  %arraydecay282 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr283 = getelementptr i32, i32* %arraydecay282, i64 0, !dbg !13123
  %78 = load i32, i32* %add.ptr283, align 4, !dbg !13123
  %and284 = and i32 %78, -16777216, !dbg !13123
  %shr285 = lshr i32 %and284, 24, !dbg !13123
  %or286 = or i32 %or281, %shr285, !dbg !13123
  br label %cond.end291, !dbg !13123

cond.false287:                                    ; preds = %cond.false264
  %arraydecay288 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr289 = getelementptr i32, i32* %arraydecay288, i64 0, !dbg !13123
  %79 = load i32, i32* %add.ptr289, align 4, !dbg !13123
  %call290 = call i32 @__fswab32(i32 %79) #10, !dbg !13123
  br label %cond.end291, !dbg !13123

cond.end291:                                      ; preds = %cond.false287, %cond.true267
  %cond292 = phi i32 [ %or286, %cond.true267 ], [ %call290, %cond.false287 ], !dbg !13123
  %and293 = and i32 %cond292, 16777215, !dbg !13123
  %80 = load i32, i32* %_v, align 4, !dbg !13123
  %and294 = and i32 %80, 255, !dbg !13123
  %shl295 = shl i32 %and294, 24, !dbg !13123
  %or296 = or i32 %and293, %shl295, !dbg !13123
  %call297 = call i32 @__fswab32(i32 %or296) #10, !dbg !13123
  br label %cond.end298, !dbg !13123

cond.end298:                                      ; preds = %cond.end291, %cond.end255
  %cond299 = phi i32 [ %or263, %cond.end255 ], [ %call297, %cond.end291 ], !dbg !13123
  %arraydecay300 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13123
  %add.ptr301 = getelementptr i32, i32* %arraydecay300, i64 0, !dbg !13123
  store i32 %cond299, i32* %add.ptr301, align 4, !dbg !13123
  br label %do.end302, !dbg !13123

do.end302:                                        ; preds = %cond.end298
  %arraydecay303 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13126
  %81 = bitcast i32* %arraydecay303 to i8*, !dbg !13126
  %add.ptr304 = getelementptr i8, i8* %81, i64 4, !dbg !13126
  %82 = bitcast i8* %add.ptr304 to i32*, !dbg !13126
  store i32* %82, i32** %attr, align 8, !dbg !13127
  %83 = load i32*, i32** %attr, align 8, !dbg !13128
  store i32 0, i32* %83, align 4, !dbg !13129
  %84 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13130
  %arraydecay305 = getelementptr inbounds [16 x i32], [16 x i32]* %tsar_ctx, i64 0, i64 0, !dbg !13131
  %85 = bitcast i32* %arraydecay305 to i8*, !dbg !13131
  %86 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13132
  %qos306 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %86, i32 0, i32 12, !dbg !13133
  %root_tsar_id = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos306, i32 0, i32 1, !dbg !13134
  %call307 = call i32 @mlx5_create_scheduling_element_cmd(%struct.mlx5_core_dev* %84, i8 zeroext 2, i8* %85, i32* %root_tsar_id) #8, !dbg !13135
  store i32 %call307, i32* %err, align 4, !dbg !13136
  %87 = load i32, i32* %err, align 4, !dbg !13137
  %tobool308 = icmp ne i32 %87, 0, !dbg !13137
  br i1 %tobool308, label %if.then309, label %if.end311, !dbg !13139

if.then309:                                       ; preds = %do.end302
  %88 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13140
  %dev310 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %88, i32 0, i32 0, !dbg !13140
  %89 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev310, align 8, !dbg !13140
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %89, i32 0, i32 0, !dbg !13140
  %90 = load %struct.device*, %struct.device** %device, align 8, !dbg !13140
  %91 = load i32, i32* %err, align 4, !dbg !13140
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %90, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29, i64 0, i64 0), i32 %91) #11, !dbg !13140
  br label %return, !dbg !13142

if.end311:                                        ; preds = %do.end302
  %92 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13143
  %qos312 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %92, i32 0, i32 12, !dbg !13144
  %enabled313 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos312, i32 0, i32 0, !dbg !13145
  store i8 1, i8* %enabled313, align 8, !dbg !13146
  br label %return, !dbg !13147

return:                                           ; preds = %if.end311, %if.then309, %if.then89, %if.then86, %if.then
  ret void, !dbg !13147
}

; Function Attrs: noredzone
declare dso_local void @mlx5_lag_update(%struct.mlx5_core_dev*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_legacy_enable(%struct.mlx5_eswitch* %esw) #0 !dbg !13148 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !13153, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13155, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13157, metadata !DIExpression()), !dbg !13158
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13159
  %call = call i32 @esw_create_legacy_table(%struct.mlx5_eswitch* %0) #8, !dbg !13160
  store i32 %call, i32* %ret, align 4, !dbg !13161
  %1 = load i32, i32* %ret, align 4, !dbg !13162
  %tobool = icmp ne i32 %1, 0, !dbg !13162
  br i1 %tobool, label %if.then, label %if.end, !dbg !13164

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !13165
  store i32 %2, i32* %retval, align 4, !dbg !13166
  br label %return, !dbg !13166

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !13167
  br label %for.cond, !dbg !13167

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13169
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 6, !dbg !13169
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !13169
  %5 = load i32, i32* %i, align 4, !dbg !13169
  %idxprom = sext i32 %5 to i64, !dbg !13169
  %arrayidx = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %4, i64 %idxprom, !dbg !13169
  store %struct.mlx5_vport* %arrayidx, %struct.mlx5_vport** %vport, align 8, !dbg !13169
  %6 = load i32, i32* %i, align 4, !dbg !13169
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13169
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 17, !dbg !13169
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !13169
  %8 = load i16, i16* %num_vfs, align 8, !dbg !13169
  %conv = zext i16 %8 to i32, !dbg !13169
  %cmp = icmp sle i32 %6, %conv, !dbg !13169
  br i1 %cmp, label %for.body, label %for.end, !dbg !13167

for.body:                                         ; preds = %for.cond
  %9 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13171
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %9, i32 0, i32 11, !dbg !13172
  %link_state = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 4, !dbg !13173
  store i32 2, i32* %link_state, align 8, !dbg !13174
  br label %for.inc, !dbg !13171

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !13169
  %inc = add i32 %10, 1, !dbg !13169
  store i32 %inc, i32* %i, align 4, !dbg !13169
  br label %for.cond, !dbg !13169, !llvm.loop !13175

for.end:                                          ; preds = %for.cond
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13177
  %call2 = call i32 @mlx5_eswitch_enable_pf_vf_vports(%struct.mlx5_eswitch* %11, i32 11) #8, !dbg !13178
  store i32 %call2, i32* %ret, align 4, !dbg !13179
  %12 = load i32, i32* %ret, align 4, !dbg !13180
  %tobool3 = icmp ne i32 %12, 0, !dbg !13180
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !13182

if.then4:                                         ; preds = %for.end
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13183
  call void @esw_destroy_legacy_table(%struct.mlx5_eswitch* %13) #8, !dbg !13184
  br label %if.end5, !dbg !13184

if.end5:                                          ; preds = %if.then4, %for.end
  %14 = load i32, i32* %ret, align 4, !dbg !13185
  store i32 %14, i32* %retval, align 4, !dbg !13186
  br label %return, !dbg !13186

return:                                           ; preds = %if.end5, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !13187
  ret i32 %15, !dbg !13187
}

; Function Attrs: noredzone
declare dso_local void @mlx5_reload_interface(%struct.mlx5_core_dev*, i32) #5

; Function Attrs: noredzone
declare dso_local i32 @esw_offloads_enable(%struct.mlx5_eswitch*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_eswitch_event_handlers_register(%struct.mlx5_eswitch* %esw) #0 !dbg !13188 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13189, metadata !DIExpression()), !dbg !13190
  br label %do.body, !dbg !13191

do.body:                                          ; preds = %entry
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13192
  %nb = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 1, !dbg !13192
  %nb1 = getelementptr inbounds %struct.mlx5_nb, %struct.mlx5_nb* %nb, i32 0, i32 0, !dbg !13192
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb1, i32 0, i32 0, !dbg !13192
  store i32 (%struct.notifier_block*, i64, i8*)* @eswitch_vport_event, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !13192
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13192
  %nb2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 1, !dbg !13192
  %event_type = getelementptr inbounds %struct.mlx5_nb, %struct.mlx5_nb* %nb2, i32 0, i32 1, !dbg !13192
  store i8 13, i8* %event_type, align 8, !dbg !13192
  br label %do.end, !dbg !13192

do.end:                                           ; preds = %do.body
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13194
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !13195
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13195
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13196
  %nb3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 1, !dbg !13197
  %call = call i32 @mlx5_eq_notifier_register(%struct.mlx5_core_dev* %3, %struct.mlx5_nb* %nb3) #8, !dbg !13198
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13199
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 14, !dbg !13201
  %6 = load i32, i32* %mode, align 8, !dbg !13201
  %cmp = icmp eq i32 %6, 2, !dbg !13202
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13203

land.lhs.true:                                    ; preds = %do.end
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13204
  %dev4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !13205
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev4, align 8, !dbg !13205
  %call5 = call zeroext i1 @mlx5_eswitch_is_funcs_handler(%struct.mlx5_core_dev* %8) #8, !dbg !13206
  br i1 %call5, label %if.then, label %if.end, !dbg !13207

if.then:                                          ; preds = %land.lhs.true
  br label %do.body6, !dbg !13208

do.body6:                                         ; preds = %if.then
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13210
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 17, !dbg !13210
  %nb7 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 0, !dbg !13210
  %nb8 = getelementptr inbounds %struct.mlx5_nb, %struct.mlx5_nb* %nb7, i32 0, i32 0, !dbg !13210
  %notifier_call9 = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb8, i32 0, i32 0, !dbg !13210
  store i32 (%struct.notifier_block*, i64, i8*)* @mlx5_esw_funcs_changed_handler, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call9, align 8, !dbg !13210
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13210
  %esw_funcs10 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 17, !dbg !13210
  %nb11 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs10, i32 0, i32 0, !dbg !13210
  %event_type12 = getelementptr inbounds %struct.mlx5_nb, %struct.mlx5_nb* %nb11, i32 0, i32 1, !dbg !13210
  store i8 14, i8* %event_type12, align 8, !dbg !13210
  br label %do.end13, !dbg !13210

do.end13:                                         ; preds = %do.body6
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13212
  %dev14 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !13213
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev14, align 8, !dbg !13213
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13214
  %esw_funcs15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 17, !dbg !13215
  %nb16 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs15, i32 0, i32 0, !dbg !13216
  %call17 = call i32 @mlx5_eq_notifier_register(%struct.mlx5_core_dev* %12, %struct.mlx5_nb* %nb16) #8, !dbg !13217
  br label %if.end, !dbg !13218

if.end:                                           ; preds = %do.end13, %land.lhs.true, %do.end
  ret void, !dbg !13219
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_tsar(%struct.mlx5_eswitch* %esw) #0 !dbg !13220 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13221, metadata !DIExpression()), !dbg !13222
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13223, metadata !DIExpression()), !dbg !13224
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13225
  %qos = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 12, !dbg !13227
  %enabled = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos, i32 0, i32 0, !dbg !13228
  %1 = load i8, i8* %enabled, align 8, !dbg !13228
  %tobool = trunc i8 %1 to i1, !dbg !13228
  br i1 %tobool, label %if.end, label %if.then, !dbg !13229

if.then:                                          ; preds = %entry
  br label %return, !dbg !13230

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13231
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !13232
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13232
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13233
  %qos1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 12, !dbg !13234
  %root_tsar_id = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos1, i32 0, i32 1, !dbg !13235
  %5 = load i32, i32* %root_tsar_id, align 4, !dbg !13235
  %call = call i32 @mlx5_destroy_scheduling_element_cmd(%struct.mlx5_core_dev* %3, i8 zeroext 2, i32 %5) #8, !dbg !13236
  store i32 %call, i32* %err, align 4, !dbg !13237
  %6 = load i32, i32* %err, align 4, !dbg !13238
  %tobool2 = icmp ne i32 %6, 0, !dbg !13238
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !13240

if.then3:                                         ; preds = %if.end
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13241
  %dev4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !13241
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev4, align 8, !dbg !13241
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 0, !dbg !13241
  %9 = load %struct.device*, %struct.device** %device, align 8, !dbg !13241
  %10 = load i32, i32* %err, align 4, !dbg !13241
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i32 %10) #11, !dbg !13241
  br label %if.end5, !dbg !13241

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13242
  %qos6 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 12, !dbg !13243
  %enabled7 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos6, i32 0, i32 0, !dbg !13244
  store i8 0, i8* %enabled7, align 8, !dbg !13245
  br label %return, !dbg !13246

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !13246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_enable(%struct.mlx5_eswitch* %esw, i32 %num_vfs) #0 !dbg !13247 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %num_vfs.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %vport_events = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13250, metadata !DIExpression()), !dbg !13251
  store i32 %num_vfs, i32* %num_vfs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_vfs.addr, metadata !13252, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13254, metadata !DIExpression()), !dbg !13255
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13256
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !13256
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !13256

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13256
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !13256
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13256
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !13256
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !13256
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13256
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13256
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !13256
  %3 = load i32, i32* %add.ptr, align 4, !dbg !13256
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !13256
  br i1 %4, label %cond.true, label %cond.false, !dbg !13256

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13256
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !13256
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !13256
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !13256
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !13256
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !13256
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !13256
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !13256
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !13256
  %and = and i32 %7, 255, !dbg !13256
  %shl = shl i32 %and, 24, !dbg !13256
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13256
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !13256
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !13256
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !13256
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !13256
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !13256
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !13256
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !13256
  %10 = load i32, i32* %add.ptr12, align 4, !dbg !13256
  %and13 = and i32 %10, 65280, !dbg !13256
  %shl14 = shl i32 %and13, 8, !dbg !13256
  %or = or i32 %shl, %shl14, !dbg !13256
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13256
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !13256
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !13256
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !13256
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !13256
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !13256
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !13256
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !13256
  %13 = load i32, i32* %add.ptr20, align 4, !dbg !13256
  %and21 = and i32 %13, 16711680, !dbg !13256
  %shr = lshr i32 %and21, 8, !dbg !13256
  %or22 = or i32 %or, %shr, !dbg !13256
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13256
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !13256
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !13256
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !13256
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !13256
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !13256
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !13256
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !13256
  %16 = load i32, i32* %add.ptr28, align 4, !dbg !13256
  %and29 = and i32 %16, -16777216, !dbg !13256
  %shr30 = lshr i32 %and29, 24, !dbg !13256
  %or31 = or i32 %or22, %shr30, !dbg !13256
  br label %cond.end, !dbg !13256

cond.false:                                       ; preds = %land.lhs.true
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13256
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !13256
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !13256
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !13256
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !13256
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !13256
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !13256
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !13256
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !13256
  %call = call i32 @__fswab32(i32 %19) #10, !dbg !13256
  br label %cond.end, !dbg !13256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !13256
  %shr38 = lshr i32 %cond, 24, !dbg !13256
  %and39 = and i32 %shr38, 1, !dbg !13256
  %tobool40 = icmp ne i32 %and39, 0, !dbg !13256
  br i1 %tobool40, label %if.end, label %if.then, !dbg !13258

if.then:                                          ; preds = %cond.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !13259
  br label %return, !dbg !13259

if.end:                                           ; preds = %cond.end
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13260
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 11, !dbg !13261
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !13262
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13263
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 14, !dbg !13265
  %22 = load i32, i32* %mode, align 8, !dbg !13265
  %cmp = icmp eq i32 %22, 0, !dbg !13266
  br i1 %cmp, label %if.then41, label %if.else, !dbg !13267

if.then41:                                        ; preds = %if.end
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13268
  %24 = load i32, i32* %num_vfs.addr, align 4, !dbg !13270
  %call42 = call i32 @mlx5_eswitch_enable_locked(%struct.mlx5_eswitch* %23, i32 1, i32 %24) #8, !dbg !13271
  store i32 %call42, i32* %ret, align 4, !dbg !13272
  br label %if.end52, !dbg !13273

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %vport_events, metadata !13274, metadata !DIExpression()), !dbg !13276
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13277
  %mode43 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %25, i32 0, i32 14, !dbg !13278
  %26 = load i32, i32* %mode43, align 8, !dbg !13278
  %cmp44 = icmp eq i32 %26, 1, !dbg !13279
  %27 = zext i1 %cmp44 to i64, !dbg !13280
  %cond45 = select i1 %cmp44, i32 11, i32 1, !dbg !13280
  store i32 %cond45, i32* %vport_events, align 4, !dbg !13281
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13282
  %29 = load i32, i32* %num_vfs.addr, align 4, !dbg !13283
  %conv = trunc i32 %29 to i16, !dbg !13283
  %30 = load i32, i32* %vport_events, align 4, !dbg !13284
  %call46 = call i32 @mlx5_eswitch_load_vf_vports(%struct.mlx5_eswitch* %28, i16 zeroext %conv, i32 %30) #8, !dbg !13285
  store i32 %call46, i32* %ret, align 4, !dbg !13286
  %31 = load i32, i32* %ret, align 4, !dbg !13287
  %tobool47 = icmp ne i32 %31, 0, !dbg !13287
  br i1 %tobool47, label %if.end51, label %if.then48, !dbg !13289

if.then48:                                        ; preds = %if.else
  %32 = load i32, i32* %num_vfs.addr, align 4, !dbg !13290
  %conv49 = trunc i32 %32 to i16, !dbg !13290
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13291
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 17, !dbg !13292
  %num_vfs50 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !13293
  store i16 %conv49, i16* %num_vfs50, align 8, !dbg !13294
  br label %if.end51, !dbg !13291

if.end51:                                         ; preds = %if.then48, %if.else
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then41
  %34 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13295
  %mode_lock53 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %34, i32 0, i32 11, !dbg !13296
  call void @mutex_unlock(%struct.mutex* %mode_lock53) #8, !dbg !13297
  %35 = load i32, i32* %ret, align 4, !dbg !13298
  store i32 %35, i32* %retval, align 4, !dbg !13299
  br label %return, !dbg !13299

return:                                           ; preds = %if.end52, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !13300
  ret i32 %36, !dbg !13300
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #5

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_disable_locked(%struct.mlx5_eswitch* %esw, i1 zeroext %clear_vf) #0 !dbg !13301 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %clear_vf.addr = alloca i8, align 1
  %old_mode = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13304, metadata !DIExpression()), !dbg !13305
  %frombool = zext i1 %clear_vf to i8
  store i8 %frombool, i8* %clear_vf.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clear_vf.addr, metadata !13306, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !13308, metadata !DIExpression()), !dbg !13309
  br label %do.body, !dbg !13310

do.body:                                          ; preds = %entry
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13311
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 11, !dbg !13311
  br label %do.end, !dbg !13311

do.end:                                           ; preds = %do.body
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13313
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 14, !dbg !13315
  %2 = load i32, i32* %mode, align 8, !dbg !13315
  %cmp = icmp eq i32 %2, 0, !dbg !13316
  br i1 %cmp, label %if.then, label %if.end, !dbg !13317

if.then:                                          ; preds = %do.end
  br label %if.end23, !dbg !13318

if.end:                                           ; preds = %do.end
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13319
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !13319
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13319
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 0, !dbg !13319
  %5 = load %struct.device*, %struct.device** %device, align 8, !dbg !13319
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13319
  %mode1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 14, !dbg !13319
  %7 = load i32, i32* %mode1, align 8, !dbg !13319
  %cmp2 = icmp eq i32 %7, 1, !dbg !13319
  %8 = zext i1 %cmp2 to i64, !dbg !13319
  %cond = select i1 %cmp2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), !dbg !13319
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13319
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 17, !dbg !13319
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !13319
  %10 = load i16, i16* %num_vfs, align 8, !dbg !13319
  %conv = zext i16 %10 to i32, !dbg !13319
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13319
  %enabled_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 9, !dbg !13319
  %12 = load i32, i32* %enabled_vports, align 8, !dbg !13319
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %5, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0), i8* %cond, i32 %conv, i32 %12) #11, !dbg !13319
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13320
  call void @mlx5_eswitch_event_handlers_unregister(%struct.mlx5_eswitch* %13) #8, !dbg !13321
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13322
  %mode3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 14, !dbg !13324
  %15 = load i32, i32* %mode3, align 8, !dbg !13324
  %cmp4 = icmp eq i32 %15, 1, !dbg !13325
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !13326

if.then6:                                         ; preds = %if.end
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13327
  call void @esw_legacy_disable(%struct.mlx5_eswitch* %16) #8, !dbg !13328
  br label %if.end12, !dbg !13328

if.else:                                          ; preds = %if.end
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13329
  %mode7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 14, !dbg !13331
  %18 = load i32, i32* %mode7, align 8, !dbg !13331
  %cmp8 = icmp eq i32 %18, 2, !dbg !13332
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !13333

if.then10:                                        ; preds = %if.else
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13334
  call void @esw_offloads_disable(%struct.mlx5_eswitch* %19) #8, !dbg !13335
  br label %if.end11, !dbg !13335

if.end11:                                         ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then6
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13336
  %mode13 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 14, !dbg !13337
  %21 = load i32, i32* %mode13, align 8, !dbg !13337
  store i32 %21, i32* %old_mode, align 4, !dbg !13338
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13339
  %mode14 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 14, !dbg !13340
  store i32 0, i32* %mode14, align 8, !dbg !13341
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13342
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 0, !dbg !13343
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !13343
  call void @mlx5_lag_update(%struct.mlx5_core_dev* %24) #8, !dbg !13344
  %25 = load i32, i32* %old_mode, align 4, !dbg !13345
  %cmp16 = icmp eq i32 %25, 2, !dbg !13347
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !13348

if.then18:                                        ; preds = %if.end12
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13349
  %dev19 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 0, !dbg !13351
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev19, align 8, !dbg !13351
  call void @mlx5_reload_interface(%struct.mlx5_core_dev* %27, i32 0) #8, !dbg !13352
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13353
  %dev20 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %28, i32 0, i32 0, !dbg !13354
  %29 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev20, align 8, !dbg !13354
  call void @mlx5_reload_interface(%struct.mlx5_core_dev* %29, i32 1) #8, !dbg !13355
  br label %if.end21, !dbg !13356

if.end21:                                         ; preds = %if.then18, %if.end12
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13357
  call void @esw_destroy_tsar(%struct.mlx5_eswitch* %30) #8, !dbg !13358
  %31 = load i8, i8* %clear_vf.addr, align 1, !dbg !13359
  %tobool = trunc i8 %31 to i1, !dbg !13359
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !13361

if.then22:                                        ; preds = %if.end21
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13362
  call void @mlx5_eswitch_clear_vf_vports_info(%struct.mlx5_eswitch* %32) #8, !dbg !13363
  br label %if.end23, !dbg !13363

if.end23:                                         ; preds = %if.then, %if.then22, %if.end21
  ret void, !dbg !13364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_eswitch_event_handlers_unregister(%struct.mlx5_eswitch* %esw) #0 !dbg !13365 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13368
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !13370
  %1 = load i32, i32* %mode, align 8, !dbg !13370
  %cmp = icmp eq i32 %1, 2, !dbg !13371
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13372

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13373
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !13374
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13374
  %call = call zeroext i1 @mlx5_eswitch_is_funcs_handler(%struct.mlx5_core_dev* %3) #8, !dbg !13375
  br i1 %call, label %if.then, label %if.end, !dbg !13376

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13377
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !13378
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !13378
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13379
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 17, !dbg !13380
  %nb = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 0, !dbg !13381
  %call2 = call i32 @mlx5_eq_notifier_unregister(%struct.mlx5_core_dev* %5, %struct.mlx5_nb* %nb) #8, !dbg !13382
  br label %if.end, !dbg !13382

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13383
  %dev3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !13384
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev3, align 8, !dbg !13384
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13385
  %nb4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 1, !dbg !13386
  %call5 = call i32 @mlx5_eq_notifier_unregister(%struct.mlx5_core_dev* %8, %struct.mlx5_nb* %nb4) #8, !dbg !13387
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13388
  %work_queue = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 5, !dbg !13389
  %11 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_queue, align 8, !dbg !13389
  call void @flush_workqueue(%struct.workqueue_struct* %11) #8, !dbg !13390
  ret void, !dbg !13391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_legacy_disable(%struct.mlx5_eswitch* %esw) #0 !dbg !13392 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %mc_promisc = alloca %struct.esw_mc_addr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13393, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %mc_promisc, metadata !13395, metadata !DIExpression()), !dbg !13396
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13397
  call void @mlx5_eswitch_disable_pf_vf_vports(%struct.mlx5_eswitch* %0) #8, !dbg !13398
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13399
  %mc_promisc1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 4, !dbg !13400
  store %struct.esw_mc_addr* %mc_promisc1, %struct.esw_mc_addr** %mc_promisc, align 8, !dbg !13401
  %2 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %mc_promisc, align 8, !dbg !13402
  %uplink_rule = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %2, i32 0, i32 1, !dbg !13404
  %3 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %uplink_rule, align 8, !dbg !13404
  %tobool = icmp ne %struct.mlx5_flow_handle* %3, null, !dbg !13402
  br i1 %tobool, label %if.then, label %if.end, !dbg !13405

if.then:                                          ; preds = %entry
  %4 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %mc_promisc, align 8, !dbg !13406
  %uplink_rule2 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %4, i32 0, i32 1, !dbg !13407
  %5 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %uplink_rule2, align 8, !dbg !13407
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %5) #8, !dbg !13408
  br label %if.end, !dbg !13408

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13409
  call void @esw_destroy_legacy_table(%struct.mlx5_eswitch* %6) #8, !dbg !13410
  ret void, !dbg !13411
}

; Function Attrs: noredzone
declare dso_local void @esw_offloads_disable(%struct.mlx5_eswitch*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_eswitch_clear_vf_vports_info(%struct.mlx5_eswitch* %esw) #0 !dbg !13412 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13413, metadata !DIExpression()), !dbg !13414
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13417, metadata !DIExpression()), !dbg !13418
  store i32 1, i32* %i, align 4, !dbg !13419
  br label %for.cond, !dbg !13419

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13421
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 6, !dbg !13421
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !13421
  %2 = load i32, i32* %i, align 4, !dbg !13421
  %idxprom = sext i32 %2 to i64, !dbg !13421
  %arrayidx = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %1, i64 %idxprom, !dbg !13421
  store %struct.mlx5_vport* %arrayidx, %struct.mlx5_vport** %vport, align 8, !dbg !13421
  %3 = load i32, i32* %i, align 4, !dbg !13421
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13421
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 17, !dbg !13421
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !13421
  %5 = load i16, i16* %num_vfs, align 8, !dbg !13421
  %conv = zext i16 %5 to i32, !dbg !13421
  %cmp = icmp sle i32 %3, %conv, !dbg !13421
  br i1 %cmp, label %for.body, label %for.end, !dbg !13419

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13423
  %qos = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %6, i32 0, i32 12, !dbg !13425
  %7 = bitcast %struct.anon.162* %qos to i8*, !dbg !13426
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 12, i1 false), !dbg !13426
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13427
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %8, i32 0, i32 11, !dbg !13428
  %9 = bitcast %struct.mlx5_vport_info* %info to i8*, !dbg !13429
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false), !dbg !13429
  %10 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13430
  %info2 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %10, i32 0, i32 11, !dbg !13431
  %link_state = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info2, i32 0, i32 4, !dbg !13432
  store i32 2, i32* %link_state, align 8, !dbg !13433
  br label %for.inc, !dbg !13434

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !13421
  %inc = add i32 %11, 1, !dbg !13421
  store i32 %inc, i32* %i, align 4, !dbg !13421
  br label %for.cond, !dbg !13421, !llvm.loop !13435

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_disable(%struct.mlx5_eswitch* %esw, i1 zeroext %clear_vf) #0 !dbg !13438 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %clear_vf.addr = alloca i8, align 1
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13439, metadata !DIExpression()), !dbg !13440
  %frombool = zext i1 %clear_vf to i8
  store i8 %frombool, i8* %clear_vf.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clear_vf.addr, metadata !13441, metadata !DIExpression()), !dbg !13442
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13443
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !13443
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !13443

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13443
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !13443
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !13443
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !13443
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !13443
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13443
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13443
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !13443
  %3 = load i32, i32* %add.ptr, align 4, !dbg !13443
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !13443
  br i1 %4, label %cond.true, label %cond.false, !dbg !13443

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13443
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !13443
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !13443
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !13443
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !13443
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !13443
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !13443
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !13443
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !13443
  %and = and i32 %7, 255, !dbg !13443
  %shl = shl i32 %and, 24, !dbg !13443
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13443
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !13443
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !13443
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !13443
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !13443
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !13443
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !13443
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !13443
  %10 = load i32, i32* %add.ptr12, align 4, !dbg !13443
  %and13 = and i32 %10, 65280, !dbg !13443
  %shl14 = shl i32 %and13, 8, !dbg !13443
  %or = or i32 %shl, %shl14, !dbg !13443
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13443
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !13443
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !13443
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !13443
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !13443
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !13443
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !13443
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !13443
  %13 = load i32, i32* %add.ptr20, align 4, !dbg !13443
  %and21 = and i32 %13, 16711680, !dbg !13443
  %shr = lshr i32 %and21, 8, !dbg !13443
  %or22 = or i32 %or, %shr, !dbg !13443
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13443
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !13443
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !13443
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !13443
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !13443
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !13443
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !13443
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !13443
  %16 = load i32, i32* %add.ptr28, align 4, !dbg !13443
  %and29 = and i32 %16, -16777216, !dbg !13443
  %shr30 = lshr i32 %and29, 24, !dbg !13443
  %or31 = or i32 %or22, %shr30, !dbg !13443
  br label %cond.end, !dbg !13443

cond.false:                                       ; preds = %land.lhs.true
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13443
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !13443
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !13443
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !13443
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !13443
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !13443
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !13443
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !13443
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !13443
  %call = call i32 @__fswab32(i32 %19) #10, !dbg !13443
  br label %cond.end, !dbg !13443

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !13443
  %shr38 = lshr i32 %cond, 24, !dbg !13443
  %and39 = and i32 %shr38, 1, !dbg !13443
  %tobool40 = icmp ne i32 %and39, 0, !dbg !13443
  br i1 %tobool40, label %if.end, label %if.then, !dbg !13445

if.then:                                          ; preds = %cond.end, %entry
  br label %return, !dbg !13446

if.end:                                           ; preds = %cond.end
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13447
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 11, !dbg !13448
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !13449
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13450
  %22 = load i8, i8* %clear_vf.addr, align 1, !dbg !13451
  %tobool41 = trunc i8 %22 to i1, !dbg !13451
  call void @mlx5_eswitch_disable_locked(%struct.mlx5_eswitch* %21, i1 zeroext %tobool41) #8, !dbg !13452
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13453
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 17, !dbg !13454
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !13455
  store i16 0, i16* %num_vfs, align 8, !dbg !13456
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13457
  %mode_lock42 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 11, !dbg !13458
  call void @mutex_unlock(%struct.mutex* %mode_lock42) #8, !dbg !13459
  br label %return, !dbg !13460

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_init(%struct.mlx5_core_dev* %dev) #0 !dbg !2 {
entry:
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13461, metadata !DIExpression()), !dbg !13469
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13477, metadata !DIExpression()), !dbg !13478
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !13479, metadata !DIExpression()), !dbg !13480
  %i.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i, metadata !13481, metadata !DIExpression()), !dbg !13482
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %total_vports = alloca i32, align 4
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13483, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !13485, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !13487, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.declare(metadata i32* %total_vports, metadata !13489, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13491, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13493, metadata !DIExpression()), !dbg !13494
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !13495
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !13495
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13495
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13495
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !13495
  %1 = load i32, i32* %add.ptr, align 4, !dbg !13495
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !13495
  br i1 %2, label %cond.true, label %cond.false, !dbg !13495

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !13495
  %hca_cur2 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !13495
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !13495
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !13495
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !13495
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !13495
  %and = and i32 %4, 255, !dbg !13495
  %shl = shl i32 %and, 24, !dbg !13495
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !13495
  %hca_cur7 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps6, i32 0, i32 0, !dbg !13495
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !13495
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !13495
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !13495
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !13495
  %and11 = and i32 %6, 65280, !dbg !13495
  %shl12 = shl i32 %and11, 8, !dbg !13495
  %or = or i32 %shl, %shl12, !dbg !13495
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !13495
  %hca_cur14 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps13, i32 0, i32 0, !dbg !13495
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !13495
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !13495
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !13495
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !13495
  %and18 = and i32 %8, 16711680, !dbg !13495
  %shr = lshr i32 %and18, 8, !dbg !13495
  %or19 = or i32 %or, %shr, !dbg !13495
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !13495
  %hca_cur21 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps20, i32 0, i32 0, !dbg !13495
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !13495
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !13495
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !13495
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !13495
  %and25 = and i32 %10, -16777216, !dbg !13495
  %shr26 = lshr i32 %and25, 24, !dbg !13495
  %or27 = or i32 %or19, %shr26, !dbg !13495
  br label %cond.end, !dbg !13495

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !13495
  %hca_cur29 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps28, i32 0, i32 0, !dbg !13495
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !13495
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !13495
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !13495
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !13495
  %call = call i32 @__fswab32(i32 %12) #10, !dbg !13495
  br label %cond.end, !dbg !13495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !13495
  %shr33 = lshr i32 %cond, 31, !dbg !13495
  %and34 = and i32 %shr33, 1, !dbg !13495
  %tobool = icmp ne i32 %and34, 0, !dbg !13495
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !13495

land.lhs.true:                                    ; preds = %cond.end
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !13495
  %hca_cur36 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps35, i32 0, i32 0, !dbg !13495
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 0, !dbg !13495
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !13495
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 13, !dbg !13495
  %14 = load i32, i32* %add.ptr39, align 4, !dbg !13495
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !13495
  br i1 %15, label %cond.true40, label %cond.false72, !dbg !13495

cond.true40:                                      ; preds = %land.lhs.true
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !13495
  %hca_cur42 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps41, i32 0, i32 0, !dbg !13495
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 0, !dbg !13495
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !13495
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 13, !dbg !13495
  %17 = load i32, i32* %add.ptr45, align 4, !dbg !13495
  %and46 = and i32 %17, 255, !dbg !13495
  %shl47 = shl i32 %and46, 24, !dbg !13495
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !13495
  %hca_cur49 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps48, i32 0, i32 0, !dbg !13495
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 0, !dbg !13495
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !13495
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 13, !dbg !13495
  %19 = load i32, i32* %add.ptr52, align 4, !dbg !13495
  %and53 = and i32 %19, 65280, !dbg !13495
  %shl54 = shl i32 %and53, 8, !dbg !13495
  %or55 = or i32 %shl47, %shl54, !dbg !13495
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !13495
  %hca_cur57 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps56, i32 0, i32 0, !dbg !13495
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 0, !dbg !13495
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !13495
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 13, !dbg !13495
  %21 = load i32, i32* %add.ptr60, align 4, !dbg !13495
  %and61 = and i32 %21, 16711680, !dbg !13495
  %shr62 = lshr i32 %and61, 8, !dbg !13495
  %or63 = or i32 %or55, %shr62, !dbg !13495
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps64 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !13495
  %hca_cur65 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps64, i32 0, i32 0, !dbg !13495
  %arrayidx66 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur65, i64 0, i64 0, !dbg !13495
  %arraydecay67 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx66, i64 0, i64 0, !dbg !13495
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 13, !dbg !13495
  %23 = load i32, i32* %add.ptr68, align 4, !dbg !13495
  %and69 = and i32 %23, -16777216, !dbg !13495
  %shr70 = lshr i32 %and69, 24, !dbg !13495
  %or71 = or i32 %or63, %shr70, !dbg !13495
  br label %cond.end79, !dbg !13495

cond.false72:                                     ; preds = %land.lhs.true
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !13495
  %hca_cur74 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps73, i32 0, i32 0, !dbg !13495
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 0, !dbg !13495
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !13495
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 13, !dbg !13495
  %25 = load i32, i32* %add.ptr77, align 4, !dbg !13495
  %call78 = call i32 @__fswab32(i32 %25) #10, !dbg !13495
  br label %cond.end79, !dbg !13495

cond.end79:                                       ; preds = %cond.false72, %cond.true40
  %cond80 = phi i32 [ %or71, %cond.true40 ], [ %call78, %cond.false72 ], !dbg !13495
  %shr81 = lshr i32 %cond80, 8, !dbg !13495
  %and82 = and i32 %shr81, 3, !dbg !13495
  %cmp = icmp eq i32 %and82, 1, !dbg !13495
  br i1 %cmp, label %land.lhs.true83, label %if.then, !dbg !13495

land.lhs.true83:                                  ; preds = %cond.end79
  %26 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13495
  %call84 = call zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %26) #8, !dbg !13495
  br i1 %call84, label %if.end, label %if.then, !dbg !13497

if.then:                                          ; preds = %land.lhs.true83, %cond.end79, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !13498
  br label %return, !dbg !13498

if.end:                                           ; preds = %land.lhs.true83
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13499
  %call85 = call zeroext i16 @mlx5_eswitch_get_total_vports(%struct.mlx5_core_dev* %27) #8, !dbg !13500
  %conv = zext i16 %call85 to i32, !dbg !13500
  store i32 %conv, i32* %total_vports, align 4, !dbg !13501
  %28 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %28, i32 0, i32 0, !dbg !13502
  %29 = load %struct.device*, %struct.device** %device, align 8, !dbg !13502
  %30 = load i32, i32* %total_vports, align 4, !dbg !13502
  %31 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps86 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %31, i32 0, i32 9, !dbg !13502
  %hca_cur87 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps86, i32 0, i32 0, !dbg !13502
  %arrayidx88 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur87, i64 0, i64 0, !dbg !13502
  %arraydecay89 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx88, i64 0, i64 0, !dbg !13502
  %add.ptr90 = getelementptr i32, i32* %arraydecay89, i64 31, !dbg !13502
  %32 = load i32, i32* %add.ptr90, align 4, !dbg !13502
  %33 = call i1 @llvm.is.constant.i32(i32 %32), !dbg !13502
  br i1 %33, label %cond.true91, label %cond.false123, !dbg !13502

cond.true91:                                      ; preds = %if.end
  %34 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps92 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %34, i32 0, i32 9, !dbg !13502
  %hca_cur93 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps92, i32 0, i32 0, !dbg !13502
  %arrayidx94 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur93, i64 0, i64 0, !dbg !13502
  %arraydecay95 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx94, i64 0, i64 0, !dbg !13502
  %add.ptr96 = getelementptr i32, i32* %arraydecay95, i64 31, !dbg !13502
  %35 = load i32, i32* %add.ptr96, align 4, !dbg !13502
  %and97 = and i32 %35, 255, !dbg !13502
  %shl98 = shl i32 %and97, 24, !dbg !13502
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps99 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %36, i32 0, i32 9, !dbg !13502
  %hca_cur100 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps99, i32 0, i32 0, !dbg !13502
  %arrayidx101 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur100, i64 0, i64 0, !dbg !13502
  %arraydecay102 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx101, i64 0, i64 0, !dbg !13502
  %add.ptr103 = getelementptr i32, i32* %arraydecay102, i64 31, !dbg !13502
  %37 = load i32, i32* %add.ptr103, align 4, !dbg !13502
  %and104 = and i32 %37, 65280, !dbg !13502
  %shl105 = shl i32 %and104, 8, !dbg !13502
  %or106 = or i32 %shl98, %shl105, !dbg !13502
  %38 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps107 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %38, i32 0, i32 9, !dbg !13502
  %hca_cur108 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps107, i32 0, i32 0, !dbg !13502
  %arrayidx109 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur108, i64 0, i64 0, !dbg !13502
  %arraydecay110 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx109, i64 0, i64 0, !dbg !13502
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 31, !dbg !13502
  %39 = load i32, i32* %add.ptr111, align 4, !dbg !13502
  %and112 = and i32 %39, 16711680, !dbg !13502
  %shr113 = lshr i32 %and112, 8, !dbg !13502
  %or114 = or i32 %or106, %shr113, !dbg !13502
  %40 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps115 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %40, i32 0, i32 9, !dbg !13502
  %hca_cur116 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps115, i32 0, i32 0, !dbg !13502
  %arrayidx117 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur116, i64 0, i64 0, !dbg !13502
  %arraydecay118 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx117, i64 0, i64 0, !dbg !13502
  %add.ptr119 = getelementptr i32, i32* %arraydecay118, i64 31, !dbg !13502
  %41 = load i32, i32* %add.ptr119, align 4, !dbg !13502
  %and120 = and i32 %41, -16777216, !dbg !13502
  %shr121 = lshr i32 %and120, 24, !dbg !13502
  %or122 = or i32 %or114, %shr121, !dbg !13502
  br label %cond.end130, !dbg !13502

cond.false123:                                    ; preds = %if.end
  %42 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps124 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %42, i32 0, i32 9, !dbg !13502
  %hca_cur125 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps124, i32 0, i32 0, !dbg !13502
  %arrayidx126 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur125, i64 0, i64 0, !dbg !13502
  %arraydecay127 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx126, i64 0, i64 0, !dbg !13502
  %add.ptr128 = getelementptr i32, i32* %arraydecay127, i64 31, !dbg !13502
  %43 = load i32, i32* %add.ptr128, align 4, !dbg !13502
  %call129 = call i32 @__fswab32(i32 %43) #10, !dbg !13502
  br label %cond.end130, !dbg !13502

cond.end130:                                      ; preds = %cond.false123, %cond.true91
  %cond131 = phi i32 [ %or122, %cond.true91 ], [ %call129, %cond.false123 ], !dbg !13502
  %shr132 = lshr i32 %cond131, 0, !dbg !13502
  %and133 = and i32 %shr132, 31, !dbg !13502
  %shl134 = shl i32 1, %and133, !dbg !13502
  %44 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps135 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %44, i32 0, i32 9, !dbg !13502
  %hca_cur136 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps135, i32 0, i32 0, !dbg !13502
  %arrayidx137 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur136, i64 0, i64 0, !dbg !13502
  %arraydecay138 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx137, i64 0, i64 0, !dbg !13502
  %add.ptr139 = getelementptr i32, i32* %arraydecay138, i64 31, !dbg !13502
  %45 = load i32, i32* %add.ptr139, align 4, !dbg !13502
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !13502
  br i1 %46, label %cond.true140, label %cond.false172, !dbg !13502

cond.true140:                                     ; preds = %cond.end130
  %47 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps141 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %47, i32 0, i32 9, !dbg !13502
  %hca_cur142 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps141, i32 0, i32 0, !dbg !13502
  %arrayidx143 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur142, i64 0, i64 0, !dbg !13502
  %arraydecay144 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx143, i64 0, i64 0, !dbg !13502
  %add.ptr145 = getelementptr i32, i32* %arraydecay144, i64 31, !dbg !13502
  %48 = load i32, i32* %add.ptr145, align 4, !dbg !13502
  %and146 = and i32 %48, 255, !dbg !13502
  %shl147 = shl i32 %and146, 24, !dbg !13502
  %49 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps148 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %49, i32 0, i32 9, !dbg !13502
  %hca_cur149 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps148, i32 0, i32 0, !dbg !13502
  %arrayidx150 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur149, i64 0, i64 0, !dbg !13502
  %arraydecay151 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx150, i64 0, i64 0, !dbg !13502
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 31, !dbg !13502
  %50 = load i32, i32* %add.ptr152, align 4, !dbg !13502
  %and153 = and i32 %50, 65280, !dbg !13502
  %shl154 = shl i32 %and153, 8, !dbg !13502
  %or155 = or i32 %shl147, %shl154, !dbg !13502
  %51 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps156 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %51, i32 0, i32 9, !dbg !13502
  %hca_cur157 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps156, i32 0, i32 0, !dbg !13502
  %arrayidx158 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur157, i64 0, i64 0, !dbg !13502
  %arraydecay159 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx158, i64 0, i64 0, !dbg !13502
  %add.ptr160 = getelementptr i32, i32* %arraydecay159, i64 31, !dbg !13502
  %52 = load i32, i32* %add.ptr160, align 4, !dbg !13502
  %and161 = and i32 %52, 16711680, !dbg !13502
  %shr162 = lshr i32 %and161, 8, !dbg !13502
  %or163 = or i32 %or155, %shr162, !dbg !13502
  %53 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps164 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %53, i32 0, i32 9, !dbg !13502
  %hca_cur165 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps164, i32 0, i32 0, !dbg !13502
  %arrayidx166 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur165, i64 0, i64 0, !dbg !13502
  %arraydecay167 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx166, i64 0, i64 0, !dbg !13502
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 31, !dbg !13502
  %54 = load i32, i32* %add.ptr168, align 4, !dbg !13502
  %and169 = and i32 %54, -16777216, !dbg !13502
  %shr170 = lshr i32 %and169, 24, !dbg !13502
  %or171 = or i32 %or163, %shr170, !dbg !13502
  br label %cond.end179, !dbg !13502

cond.false172:                                    ; preds = %cond.end130
  %55 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13502
  %caps173 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %55, i32 0, i32 9, !dbg !13502
  %hca_cur174 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps173, i32 0, i32 0, !dbg !13502
  %arrayidx175 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur174, i64 0, i64 0, !dbg !13502
  %arraydecay176 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx175, i64 0, i64 0, !dbg !13502
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 31, !dbg !13502
  %56 = load i32, i32* %add.ptr177, align 4, !dbg !13502
  %call178 = call i32 @__fswab32(i32 %56) #10, !dbg !13502
  br label %cond.end179, !dbg !13502

cond.end179:                                      ; preds = %cond.false172, %cond.true140
  %cond180 = phi i32 [ %or171, %cond.true140 ], [ %call178, %cond.false172 ], !dbg !13502
  %shr181 = lshr i32 %cond180, 8, !dbg !13502
  %and182 = and i32 %shr181, 31, !dbg !13502
  %shl183 = shl i32 1, %and182, !dbg !13502
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %29, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i64 0, i64 0), i32 %30, i32 %shl134, i32 %shl183) #11, !dbg !13502
  %call184 = call i8* @kzalloc(i64 12872, i32 3264) #8, !dbg !13503
  %57 = bitcast i8* %call184 to %struct.mlx5_eswitch*, !dbg !13503
  store %struct.mlx5_eswitch* %57, %struct.mlx5_eswitch** %esw, align 8, !dbg !13504
  %58 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13505
  %tobool185 = icmp ne %struct.mlx5_eswitch* %58, null, !dbg !13505
  br i1 %tobool185, label %if.end187, label %if.then186, !dbg !13507

if.then186:                                       ; preds = %cond.end179
  store i32 -12, i32* %retval, align 4, !dbg !13508
  br label %return, !dbg !13508

if.end187:                                        ; preds = %cond.end179
  %59 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13509
  %60 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13510
  %dev188 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %60, i32 0, i32 0, !dbg !13511
  store %struct.mlx5_core_dev* %59, %struct.mlx5_core_dev** %dev188, align 8, !dbg !13512
  %61 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13513
  %call189 = call zeroext i16 @mlx5_eswitch_manager_vport(%struct.mlx5_core_dev* %61) #8, !dbg !13514
  %62 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13515
  %manager_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %62, i32 0, i32 15, !dbg !13516
  store i16 %call189, i16* %manager_vport, align 4, !dbg !13517
  %63 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13518
  %call190 = call zeroext i16 @mlx5_eswitch_first_host_vport_num(%struct.mlx5_core_dev* %63) #8, !dbg !13519
  %64 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13520
  %first_host_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %64, i32 0, i32 16, !dbg !13521
  store i16 %call190, i16* %first_host_vport, align 2, !dbg !13522
  %call191 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i32 917514, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0)) #8, !dbg !13523
  %65 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13524
  %work_queue = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %65, i32 0, i32 5, !dbg !13525
  store %struct.workqueue_struct* %call191, %struct.workqueue_struct** %work_queue, align 8, !dbg !13526
  %66 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13527
  %work_queue192 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %66, i32 0, i32 5, !dbg !13529
  %67 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_queue192, align 8, !dbg !13529
  %tobool193 = icmp ne %struct.workqueue_struct* %67, null, !dbg !13527
  br i1 %tobool193, label %if.end195, label %if.then194, !dbg !13530

if.then194:                                       ; preds = %if.end187
  store i32 -12, i32* %err, align 4, !dbg !13531
  br label %abort, !dbg !13533

if.end195:                                        ; preds = %if.end187
  %68 = load i32, i32* %total_vports, align 4, !dbg !13534
  %conv196 = sext i32 %68 to i64, !dbg !13534
  %call197 = call i8* @kcalloc(i64 %conv196, i64 4384, i32 3264) #8, !dbg !13535
  %69 = bitcast i8* %call197 to %struct.mlx5_vport*, !dbg !13535
  %70 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13536
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %70, i32 0, i32 6, !dbg !13537
  store %struct.mlx5_vport* %69, %struct.mlx5_vport** %vports, align 8, !dbg !13538
  %71 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13539
  %vports198 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %71, i32 0, i32 6, !dbg !13541
  %72 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports198, align 8, !dbg !13541
  %tobool199 = icmp ne %struct.mlx5_vport* %72, null, !dbg !13539
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !13542

if.then200:                                       ; preds = %if.end195
  store i32 -12, i32* %err, align 4, !dbg !13543
  br label %abort, !dbg !13545

if.end201:                                        ; preds = %if.end195
  %73 = load i32, i32* %total_vports, align 4, !dbg !13546
  %74 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13547
  %total_vports202 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %74, i32 0, i32 8, !dbg !13548
  store i32 %73, i32* %total_vports202, align 4, !dbg !13549
  %75 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13550
  %call203 = call i32 @esw_offloads_init_reps(%struct.mlx5_eswitch* %75) #8, !dbg !13551
  store i32 %call203, i32* %err, align 4, !dbg !13552
  %76 = load i32, i32* %err, align 4, !dbg !13553
  %tobool204 = icmp ne i32 %76, 0, !dbg !13553
  br i1 %tobool204, label %if.then205, label %if.end206, !dbg !13555

if.then205:                                       ; preds = %if.end201
  br label %abort, !dbg !13556

if.end206:                                        ; preds = %if.end201
  br label %do.body, !dbg !13557

do.body:                                          ; preds = %if.end206
  %77 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13558
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %77, i32 0, i32 13, !dbg !13558
  %encap_tbl_lock = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 8, !dbg !13558
  call void @__mutex_init(%struct.mutex* %encap_tbl_lock, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), %struct.lock_class_key* @mlx5_eswitch_init.__key) #8, !dbg !13558
  br label %do.end, !dbg !13558

do.end:                                           ; preds = %do.body
  %78 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13560
  %offloads207 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %78, i32 0, i32 13, !dbg !13560
  %encap_tbl = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads207, i32 0, i32 9, !dbg !13560
  %arraydecay208 = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %encap_tbl, i64 0, i64 0, !dbg !13560
  call void @__hash_init(%struct.hlist_head* %arraydecay208, i32 256) #8, !dbg !13560
  br label %do.body209, !dbg !13561

do.body209:                                       ; preds = %do.end
  %79 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13562
  %offloads210 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %79, i32 0, i32 13, !dbg !13562
  %decap_tbl_lock = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads210, i32 0, i32 10, !dbg !13562
  call void @__mutex_init(%struct.mutex* %decap_tbl_lock, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), %struct.lock_class_key* @mlx5_eswitch_init.__key.11) #8, !dbg !13562
  br label %do.end211, !dbg !13562

do.end211:                                        ; preds = %do.body209
  %80 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13564
  %offloads212 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %80, i32 0, i32 13, !dbg !13564
  %decap_tbl = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads212, i32 0, i32 11, !dbg !13564
  %arraydecay213 = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %decap_tbl, i64 0, i64 0, !dbg !13564
  call void @__hash_init(%struct.hlist_head* %arraydecay213, i32 256) #8, !dbg !13564
  %81 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13565
  %offloads214 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %81, i32 0, i32 13, !dbg !13566
  %mod_hdr = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads214, i32 0, i32 12, !dbg !13567
  call void @mlx5e_mod_hdr_tbl_init(%struct.mod_hdr_tbl* %mod_hdr) #8, !dbg !13568
  %82 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13569
  %offloads215 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %82, i32 0, i32 13, !dbg !13570
  %num_flows = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads215, i32 0, i32 17, !dbg !13571
  store %struct.atomic64_t* %num_flows, %struct.atomic64_t** %v.addr.i, align 8
  store i64 0, i64* %i.addr.i, align 8
  %83 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !13572
  %84 = bitcast %struct.atomic64_t* %83 to i8*, !dbg !13572
  store i8* %84, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %85 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13573
  %86 = load i64, i64* %size.addr.i.i, align 8, !dbg !13574
  %conv.i.i = trunc i64 %86 to i32, !dbg !13574
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %85, i32 %conv.i.i) #12, !dbg !13575
  %87 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13576
  %88 = load i64, i64* %size.addr.i.i, align 8, !dbg !13576
  call void @kcsan_check_access(i8* %87, i64 %88, i32 5) #12, !dbg !13576
  %89 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !13577
  %90 = load i64, i64* %i.addr.i, align 8, !dbg !13578
  call void @arch_atomic64_set(%struct.atomic64_t* %89, i64 %90) #12, !dbg !13579
  %91 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13580
  %offloads216 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %91, i32 0, i32 13, !dbg !13581
  %vport_metadata_ida = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads216, i32 0, i32 19, !dbg !13582
  call void @ida_init(%struct.ida* %vport_metadata_ida) #8, !dbg !13583
  br label %do.body217, !dbg !13584

do.body217:                                       ; preds = %do.end211
  %92 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13585
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %92, i32 0, i32 10, !dbg !13585
  call void @__mutex_init(%struct.mutex* %state_lock, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), %struct.lock_class_key* @mlx5_eswitch_init.__key.13) #8, !dbg !13585
  br label %do.end218, !dbg !13585

do.end218:                                        ; preds = %do.body217
  br label %do.body219, !dbg !13587

do.body219:                                       ; preds = %do.end218
  %93 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13588
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %93, i32 0, i32 11, !dbg !13588
  call void @__mutex_init(%struct.mutex* %mode_lock, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), %struct.lock_class_key* @mlx5_eswitch_init.__key.15) #8, !dbg !13588
  br label %do.end220, !dbg !13588

do.end220:                                        ; preds = %do.body219
  store i32 0, i32* %i, align 4, !dbg !13590
  br label %for.cond, !dbg !13590

for.cond:                                         ; preds = %for.inc, %do.end220
  %94 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13592
  %vports221 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %94, i32 0, i32 6, !dbg !13592
  %95 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports221, align 8, !dbg !13592
  %96 = load i32, i32* %i, align 4, !dbg !13592
  %idxprom = sext i32 %96 to i64, !dbg !13592
  %arrayidx222 = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %95, i64 %idxprom, !dbg !13592
  store %struct.mlx5_vport* %arrayidx222, %struct.mlx5_vport** %vport, align 8, !dbg !13592
  %97 = load i32, i32* %i, align 4, !dbg !13592
  %98 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13592
  %total_vports223 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %98, i32 0, i32 8, !dbg !13592
  %99 = load i32, i32* %total_vports223, align 4, !dbg !13592
  %cmp224 = icmp slt i32 %97, %99, !dbg !13592
  br i1 %cmp224, label %for.body, label %for.end, !dbg !13590

for.body:                                         ; preds = %for.cond
  %100 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13594
  %101 = load i32, i32* %i, align 4, !dbg !13596
  %call226 = call zeroext i16 @mlx5_eswitch_index_to_vport_num(%struct.mlx5_eswitch* %100, i32 %101) #8, !dbg !13597
  %conv227 = zext i16 %call226 to i32, !dbg !13597
  %102 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13598
  %vport228 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %102, i32 0, i32 1, !dbg !13599
  store i32 %conv227, i32* %vport228, align 8, !dbg !13600
  %103 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13601
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %103, i32 0, i32 11, !dbg !13602
  %link_state = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 4, !dbg !13603
  store i32 2, i32* %link_state, align 8, !dbg !13604
  %104 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13605
  %105 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13606
  %dev229 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %105, i32 0, i32 0, !dbg !13607
  store %struct.mlx5_core_dev* %104, %struct.mlx5_core_dev** %dev229, align 8, !dbg !13608
  br label %do.body230, !dbg !13609

do.body230:                                       ; preds = %for.body
  %106 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13610
  %vport_change_handler = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %106, i32 0, i32 6, !dbg !13610
  call void @__init_work(%struct.work_struct* %vport_change_handler, i32 0) #8, !dbg !13610
  %107 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13610
  %vport_change_handler231 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %107, i32 0, i32 6, !dbg !13610
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %vport_change_handler231, i32 0, i32 0, !dbg !13610
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !13610
  store i64 68719476704, i64* %counter, align 8, !dbg !13610
  %108 = bitcast %struct.atomic64_t* %data to i8*, !dbg !13610
  %109 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !13610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 8, i1 false), !dbg !13610
  %110 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13610
  %vport_change_handler232 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %110, i32 0, i32 6, !dbg !13610
  %entry233 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %vport_change_handler232, i32 0, i32 1, !dbg !13610
  call void @INIT_LIST_HEAD(%struct.list_head* %entry233) #8, !dbg !13610
  %111 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !13610
  %vport_change_handler234 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %111, i32 0, i32 6, !dbg !13610
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %vport_change_handler234, i32 0, i32 2, !dbg !13610
  store void (%struct.work_struct*)* @esw_vport_change_handler, void (%struct.work_struct*)** %func, align 8, !dbg !13610
  br label %do.end235, !dbg !13610

do.end235:                                        ; preds = %do.body230
  br label %for.inc, !dbg !13612

for.inc:                                          ; preds = %do.end235
  %112 = load i32, i32* %i, align 4, !dbg !13592
  %inc = add i32 %112, 1, !dbg !13592
  store i32 %inc, i32* %i, align 4, !dbg !13592
  br label %for.cond, !dbg !13592, !llvm.loop !13613

for.end:                                          ; preds = %for.cond
  %113 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13615
  %enabled_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %113, i32 0, i32 9, !dbg !13616
  store i32 0, i32* %enabled_vports, align 8, !dbg !13617
  %114 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13618
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %114, i32 0, i32 14, !dbg !13619
  store i32 0, i32* %mode, align 8, !dbg !13620
  %115 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13621
  %offloads236 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %115, i32 0, i32 13, !dbg !13622
  %inline_mode = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads236, i32 0, i32 16, !dbg !13623
  store i8 0, i8* %inline_mode, align 8, !dbg !13624
  %116 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13625
  %117 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13626
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %117, i32 0, i32 17, !dbg !13627
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !13628
  store %struct.mlx5_eswitch* %116, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !13629
  store i32 0, i32* %retval, align 4, !dbg !13630
  br label %return, !dbg !13630

abort:                                            ; preds = %if.then205, %if.then200, %if.then194
  call void @llvm.dbg.label(metadata !13631), !dbg !13632
  %118 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13633
  %work_queue237 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %118, i32 0, i32 5, !dbg !13635
  %119 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_queue237, align 8, !dbg !13635
  %tobool238 = icmp ne %struct.workqueue_struct* %119, null, !dbg !13633
  br i1 %tobool238, label %if.then239, label %if.end241, !dbg !13636

if.then239:                                       ; preds = %abort
  %120 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13637
  %work_queue240 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %120, i32 0, i32 5, !dbg !13638
  %121 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_queue240, align 8, !dbg !13638
  call void @destroy_workqueue(%struct.workqueue_struct* %121) #8, !dbg !13639
  br label %if.end241, !dbg !13639

if.end241:                                        ; preds = %if.then239, %abort
  %122 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13640
  call void @esw_offloads_cleanup_reps(%struct.mlx5_eswitch* %122) #8, !dbg !13641
  %123 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13642
  %vports242 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %123, i32 0, i32 6, !dbg !13643
  %124 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports242, align 8, !dbg !13643
  %125 = bitcast %struct.mlx5_vport* %124 to i8*, !dbg !13642
  call void @kfree(i8* %125) #8, !dbg !13644
  %126 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !13645
  %127 = bitcast %struct.mlx5_eswitch* %126 to i8*, !dbg !13645
  call void @kfree(i8* %127) #8, !dbg !13646
  %128 = load i32, i32* %err, align 4, !dbg !13647
  store i32 %128, i32* %retval, align 4, !dbg !13648
  br label %return, !dbg !13648

return:                                           ; preds = %if.end241, %for.end, %if.then186, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !13649
  ret i32 %129, !dbg !13649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %dev) #0 !dbg !13650 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13651, metadata !DIExpression()), !dbg !13652
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13653
  %coredev_type = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 1, !dbg !13654
  %1 = load i32, i32* %coredev_type, align 8, !dbg !13654
  %cmp = icmp eq i32 %1, 0, !dbg !13655
  ret i1 %cmp, !dbg !13656
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @mlx5_eswitch_get_total_vports(%struct.mlx5_core_dev*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !13657 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !13658, metadata !DIExpression()), !dbg !13662
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !13668, metadata !DIExpression()), !dbg !13669
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !13670, metadata !DIExpression()), !dbg !13671
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !13672, metadata !DIExpression()), !dbg !13673
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !13674, metadata !DIExpression()), !dbg !13678
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !13680, metadata !DIExpression()), !dbg !13684
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !13686, metadata !DIExpression()), !dbg !13690
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !13695, metadata !DIExpression()), !dbg !13696
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !13697, metadata !DIExpression()), !dbg !13698
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13699, metadata !DIExpression()), !dbg !13700
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !13701, metadata !DIExpression()), !dbg !13702
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !13703, metadata !DIExpression()), !dbg !13704
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13705, metadata !DIExpression()), !dbg !13706
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !13707, metadata !DIExpression()), !dbg !13708
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !13709, metadata !DIExpression()), !dbg !13710
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13711, metadata !DIExpression()), !dbg !13712
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13713, metadata !DIExpression()), !dbg !13714
  %0 = load i64, i64* %size.addr, align 8, !dbg !13715
  %1 = load i32, i32* %flags.addr, align 4, !dbg !13716
  %or = or i32 %1, 256, !dbg !13717
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !13718
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !13719
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !13720

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13721
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !13722
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13723

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !13724
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !13725
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13726
  %call.i.i = call i32 @get_order(i64 %7) #10, !dbg !13727
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13704
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13728
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13729
  %10 = load i32, i32* %order.i.i, align 4, !dbg !13730
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13731
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13732
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13733
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !13734
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13734
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13734
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13734
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !13734
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13735
  br label %kmalloc.exit, !dbg !13735

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !13736
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13737
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !13737
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13739

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13740
  br label %kmalloc_index.exit.i, !dbg !13740

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13741
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !13743
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13744

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13745
  br label %kmalloc_index.exit.i, !dbg !13745

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13746
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !13748
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13749

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13750
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !13751
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13752

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13753
  br label %kmalloc_index.exit.i, !dbg !13753

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13754
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !13756
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13757

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13758
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !13759
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13760

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13761
  br label %kmalloc_index.exit.i, !dbg !13761

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13762
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !13764
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13765

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13766
  br label %kmalloc_index.exit.i, !dbg !13766

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13767
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !13769
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13770

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13771
  br label %kmalloc_index.exit.i, !dbg !13771

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13772
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !13774
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13775

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13776
  br label %kmalloc_index.exit.i, !dbg !13776

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13777
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !13779
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13780

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13781
  br label %kmalloc_index.exit.i, !dbg !13781

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13782
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !13784
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13785

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13786
  br label %kmalloc_index.exit.i, !dbg !13786

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13787
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !13789
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13790

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13791
  br label %kmalloc_index.exit.i, !dbg !13791

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13792
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !13794
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13795

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13796
  br label %kmalloc_index.exit.i, !dbg !13796

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13797
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !13799
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13800

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13801
  br label %kmalloc_index.exit.i, !dbg !13801

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13802
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !13804
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13805

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13806
  br label %kmalloc_index.exit.i, !dbg !13806

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13807
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !13809
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13810

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13811
  br label %kmalloc_index.exit.i, !dbg !13811

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13812
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !13814
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13815

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13816
  br label %kmalloc_index.exit.i, !dbg !13816

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13817
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !13819
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13820

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13821
  br label %kmalloc_index.exit.i, !dbg !13821

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13822
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !13824
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13825

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13826
  br label %kmalloc_index.exit.i, !dbg !13826

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13827
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !13829
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13830

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13831
  br label %kmalloc_index.exit.i, !dbg !13831

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13832
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !13834
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13835

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13836
  br label %kmalloc_index.exit.i, !dbg !13836

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13837
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !13839
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13840

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13841
  br label %kmalloc_index.exit.i, !dbg !13841

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13842
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !13844
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13845

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13846
  br label %kmalloc_index.exit.i, !dbg !13846

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13847
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !13849
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13850

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13851
  br label %kmalloc_index.exit.i, !dbg !13851

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13852
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !13854
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13855

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13856
  br label %kmalloc_index.exit.i, !dbg !13856

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13857
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !13859
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13860

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13861
  br label %kmalloc_index.exit.i, !dbg !13861

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13862
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !13864
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13865

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13866
  br label %kmalloc_index.exit.i, !dbg !13866

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13867
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !13869
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13870

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13871
  br label %kmalloc_index.exit.i, !dbg !13871

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13872
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !13874
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13875

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13876
  br label %kmalloc_index.exit.i, !dbg !13876

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13877
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !13879
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13880

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13881
  br label %kmalloc_index.exit.i, !dbg !13881

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !13882, !srcloc !13885
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #9, !dbg !13886, !srcloc !13889
  unreachable, !dbg !13890

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !13891
  store i32 %45, i32* %index.i, align 4, !dbg !13892
  %46 = load i32, i32* %index.i, align 4, !dbg !13893
  %tobool.i = icmp ne i32 %46, 0, !dbg !13893
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13895

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13896
  br label %kmalloc.exit, !dbg !13896

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !13897
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13898
  %and.i.i = and i32 %48, 17, !dbg !13898
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13898
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13898
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13898
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13898
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13900

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13901
  br label %kmalloc_type.exit.i, !dbg !13901

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13902
  %and2.i.i = and i32 %49, 1, !dbg !13903
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13902
  %50 = zext i1 %tobool3.i.i to i64, !dbg !13902
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13902
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13904
  br label %kmalloc_type.exit.i, !dbg !13904

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !13905
  %idxprom.i = zext i32 %51 to i64, !dbg !13906
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13906
  %52 = load i32, i32* %index.i, align 4, !dbg !13907
  %idxprom6.i = zext i32 %52 to i64, !dbg !13906
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13906
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13906
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !13908
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !13909
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13910
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13911
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !13912
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13912
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13912
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13912
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !13912
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13673
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13913
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !13914
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13915
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13916
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !13917
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13918
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !13919
  store i8* %62, i8** %retval.i, align 8, !dbg !13920
  br label %kmalloc.exit, !dbg !13920

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !13921
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !13922
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !13923
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13923
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13923
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13923
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !13923
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13924
  br label %kmalloc.exit, !dbg !13924

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !13925
  ret i8* %65, !dbg !13926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_eswitch_manager_vport(%struct.mlx5_core_dev* %dev) #0 !dbg !13927 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13930, metadata !DIExpression()), !dbg !13931
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13932
  %call = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %0) #8, !dbg !13933
  %1 = zext i1 %call to i64, !dbg !13933
  %cond = select i1 %call, i32 65534, i32 0, !dbg !13933
  %conv = trunc i32 %cond to i16, !dbg !13933
  ret i16 %conv, !dbg !13934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_eswitch_first_host_vport_num(%struct.mlx5_core_dev* %dev) #0 !dbg !13935 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13936, metadata !DIExpression()), !dbg !13937
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13938
  %call = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %0) #8, !dbg !13939
  %1 = zext i1 %call to i64, !dbg !13939
  %cond = select i1 %call, i32 0, i32 1, !dbg !13939
  %conv = trunc i32 %cond to i16, !dbg !13939
  ret i16 %conv, !dbg !13940
}

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !13941 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13944, metadata !DIExpression()), !dbg !13945
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13946, metadata !DIExpression()), !dbg !13947
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  %0 = load i64, i64* %n.addr, align 8, !dbg !13950
  %1 = load i64, i64* %size.addr, align 8, !dbg !13951
  %2 = load i32, i32* %flags.addr, align 4, !dbg !13952
  %or = or i32 %2, 256, !dbg !13953
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #8, !dbg !13954
  ret i8* %call, !dbg !13955
}

; Function Attrs: noredzone
declare dso_local i32 @esw_offloads_init_reps(%struct.mlx5_eswitch*) #5

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__hash_init(%struct.hlist_head* %ht, i32 %sz) #0 !dbg !13956 {
entry:
  %ht.addr = alloca %struct.hlist_head*, align 8
  %sz.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.hlist_head* %ht, %struct.hlist_head** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %ht.addr, metadata !13960, metadata !DIExpression()), !dbg !13961
  store i32 %sz, i32* %sz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.addr, metadata !13962, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13964, metadata !DIExpression()), !dbg !13965
  store i32 0, i32* %i, align 4, !dbg !13966
  br label %for.cond, !dbg !13968

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13969
  %1 = load i32, i32* %sz.addr, align 4, !dbg !13971
  %cmp = icmp ult i32 %0, %1, !dbg !13972
  br i1 %cmp, label %for.body, label %for.end, !dbg !13973

for.body:                                         ; preds = %for.cond
  %2 = load %struct.hlist_head*, %struct.hlist_head** %ht.addr, align 8, !dbg !13974
  %3 = load i32, i32* %i, align 4, !dbg !13974
  %idxprom = zext i32 %3 to i64, !dbg !13974
  %arrayidx = getelementptr %struct.hlist_head, %struct.hlist_head* %2, i64 %idxprom, !dbg !13974
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx, i32 0, i32 0, !dbg !13974
  store %struct.hlist_node* null, %struct.hlist_node** %first, align 8, !dbg !13974
  br label %for.inc, !dbg !13974

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !13975
  %inc = add i32 %4, 1, !dbg !13975
  store i32 %inc, i32* %i, align 4, !dbg !13975
  br label %for.cond, !dbg !13976, !llvm.loop !13977

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13979
}

; Function Attrs: noredzone
declare dso_local void @mlx5e_mod_hdr_tbl_init(%struct.mod_hdr_tbl*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ida_init(%struct.ida* %ida) #0 !dbg !13980 {
entry:
  %ida.addr = alloca %struct.ida*, align 8
  store %struct.ida* %ida, %struct.ida** %ida.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ida** %ida.addr, metadata !13984, metadata !DIExpression()), !dbg !13985
  %0 = load %struct.ida*, %struct.ida** %ida.addr, align 8, !dbg !13986
  %xa = getelementptr inbounds %struct.ida, %struct.ida* %0, i32 0, i32 0, !dbg !13987
  call void @xa_init_flags(%struct.xarray* %xa, i32 8388613) #8, !dbg !13988
  ret void, !dbg !13989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_eswitch_index_to_vport_num(%struct.mlx5_eswitch* %esw, i32 %index) #0 !dbg !13990 {
entry:
  %retval = alloca i16, align 2
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %index.addr = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !13993, metadata !DIExpression()), !dbg !13994
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13995, metadata !DIExpression()), !dbg !13996
  %0 = load i32, i32* %index.addr, align 4, !dbg !13997
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !13999
  %call = call i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %1) #8, !dbg !14000
  %cmp = icmp eq i32 %0, %call, !dbg !14001
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14002

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14003
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !14004
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14004
  %call1 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %3) #8, !dbg !14005
  br i1 %call1, label %if.then, label %if.end, !dbg !14006

if.then:                                          ; preds = %land.lhs.true
  store i16 -2, i16* %retval, align 2, !dbg !14007
  br label %return, !dbg !14007

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %index.addr, align 4, !dbg !14008
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14010
  %call2 = call i32 @mlx5_eswitch_uplink_idx(%struct.mlx5_eswitch* %5) #8, !dbg !14011
  %cmp3 = icmp eq i32 %4, %call2, !dbg !14012
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !14013

if.then4:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !14014
  br label %return, !dbg !14014

if.end5:                                          ; preds = %if.end
  %6 = load i32, i32* %index.addr, align 4, !dbg !14015
  %conv = trunc i32 %6 to i16, !dbg !14015
  store i16 %conv, i16* %retval, align 2, !dbg !14016
  br label %return, !dbg !14016

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %7 = load i16, i16* %retval, align 2, !dbg !14017
  ret i16 %7, !dbg !14017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !14018 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14021, metadata !DIExpression()), !dbg !14022
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !14023, metadata !DIExpression()), !dbg !14024
  ret void, !dbg !14025
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !14026 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !14030, metadata !DIExpression()), !dbg !14031
  br label %do.body, !dbg !14032

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14033

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !14035

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !14033

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14037
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14037
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !14037
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !14037
  br label %do.end3, !dbg !14037

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !14033

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14039
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14040
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !14041
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !14042
  ret void, !dbg !14043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vport_change_handler(%struct.work_struct* %work) #0 !dbg !14044 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlx5_vport*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14045, metadata !DIExpression()), !dbg !14046
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !14047, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14049, metadata !DIExpression()), !dbg !14051
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !14051
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !14051
  store i8* %1, i8** %__mptr, align 8, !dbg !14051
  br label %do.body, !dbg !14051

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14052

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14051
  %add.ptr = getelementptr i8, i8* %2, i64 -4128, !dbg !14051
  %3 = bitcast i8* %add.ptr to %struct.mlx5_vport*, !dbg !14051
  store %struct.mlx5_vport* %3, %struct.mlx5_vport** %tmp, align 8, !dbg !14052
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %tmp, align 8, !dbg !14051
  store %struct.mlx5_vport* %4, %struct.mlx5_vport** %vport, align 8, !dbg !14048
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !14054, metadata !DIExpression()), !dbg !14055
  %5 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14056
  %dev = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %5, i32 0, i32 0, !dbg !14057
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14057
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 17, !dbg !14058
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !14059
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !14059
  store %struct.mlx5_eswitch* %7, %struct.mlx5_eswitch** %esw, align 8, !dbg !14055
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14060
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 10, !dbg !14061
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14062
  %9 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14063
  call void @esw_vport_change_handle_locked(%struct.mlx5_vport* %9) #8, !dbg !14064
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14065
  %state_lock1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 10, !dbg !14066
  call void @mutex_unlock(%struct.mutex* %state_lock1) #8, !dbg !14067
  ret void, !dbg !14068
}

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #5

; Function Attrs: noredzone
declare dso_local void @esw_offloads_cleanup_reps(%struct.mlx5_eswitch*) #5

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_cleanup(%struct.mlx5_eswitch* %esw) #0 !dbg !14069 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14070, metadata !DIExpression()), !dbg !14071
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14072
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !14072
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14074

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !14075
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14075
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !14075
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14075
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !14075
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14075
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !14075
  %3 = load i32, i32* %add.ptr, align 4, !dbg !14075
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !14075
  br i1 %4, label %cond.true, label %cond.false, !dbg !14075

cond.true:                                        ; preds = %lor.lhs.false
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !14075
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !14075
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !14075
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !14075
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !14075
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !14075
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !14075
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !14075
  %and = and i32 %7, 255, !dbg !14075
  %shl = shl i32 %and, 24, !dbg !14075
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !14075
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !14075
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !14075
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !14075
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !14075
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !14075
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !14075
  %10 = load i32, i32* %add.ptr12, align 4, !dbg !14075
  %and13 = and i32 %10, 65280, !dbg !14075
  %shl14 = shl i32 %and13, 8, !dbg !14075
  %or = or i32 %shl, %shl14, !dbg !14075
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !14075
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !14075
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !14075
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !14075
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !14075
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !14075
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !14075
  %13 = load i32, i32* %add.ptr20, align 4, !dbg !14075
  %and21 = and i32 %13, 16711680, !dbg !14075
  %shr = lshr i32 %and21, 8, !dbg !14075
  %or22 = or i32 %or, %shr, !dbg !14075
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !14075
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !14075
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !14075
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !14075
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !14075
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !14075
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !14075
  %16 = load i32, i32* %add.ptr28, align 4, !dbg !14075
  %and29 = and i32 %16, -16777216, !dbg !14075
  %shr30 = lshr i32 %and29, 24, !dbg !14075
  %or31 = or i32 %or22, %shr30, !dbg !14075
  br label %cond.end, !dbg !14075

cond.false:                                       ; preds = %lor.lhs.false
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !14075
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !14075
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !14075
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !14075
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !14075
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !14075
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !14075
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !14075
  %call = call i32 @__fswab32(i32 %19) #10, !dbg !14075
  br label %cond.end, !dbg !14075

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !14075
  %shr38 = lshr i32 %cond, 31, !dbg !14075
  %and39 = and i32 %shr38, 1, !dbg !14075
  %tobool40 = icmp ne i32 %and39, 0, !dbg !14075
  br i1 %tobool40, label %land.lhs.true, label %if.then, !dbg !14075

land.lhs.true:                                    ; preds = %cond.end
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev41 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 0, !dbg !14075
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev41, align 8, !dbg !14075
  %caps42 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !14075
  %hca_cur43 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps42, i32 0, i32 0, !dbg !14075
  %arrayidx44 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur43, i64 0, i64 0, !dbg !14075
  %arraydecay45 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx44, i64 0, i64 0, !dbg !14075
  %add.ptr46 = getelementptr i32, i32* %arraydecay45, i64 13, !dbg !14075
  %22 = load i32, i32* %add.ptr46, align 4, !dbg !14075
  %23 = call i1 @llvm.is.constant.i32(i32 %22), !dbg !14075
  br i1 %23, label %cond.true47, label %cond.false83, !dbg !14075

cond.true47:                                      ; preds = %land.lhs.true
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev48 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 0, !dbg !14075
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev48, align 8, !dbg !14075
  %caps49 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %25, i32 0, i32 9, !dbg !14075
  %hca_cur50 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps49, i32 0, i32 0, !dbg !14075
  %arrayidx51 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur50, i64 0, i64 0, !dbg !14075
  %arraydecay52 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx51, i64 0, i64 0, !dbg !14075
  %add.ptr53 = getelementptr i32, i32* %arraydecay52, i64 13, !dbg !14075
  %26 = load i32, i32* %add.ptr53, align 4, !dbg !14075
  %and54 = and i32 %26, 255, !dbg !14075
  %shl55 = shl i32 %and54, 24, !dbg !14075
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev56 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 0, !dbg !14075
  %28 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev56, align 8, !dbg !14075
  %caps57 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %28, i32 0, i32 9, !dbg !14075
  %hca_cur58 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps57, i32 0, i32 0, !dbg !14075
  %arrayidx59 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur58, i64 0, i64 0, !dbg !14075
  %arraydecay60 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx59, i64 0, i64 0, !dbg !14075
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 13, !dbg !14075
  %29 = load i32, i32* %add.ptr61, align 4, !dbg !14075
  %and62 = and i32 %29, 65280, !dbg !14075
  %shl63 = shl i32 %and62, 8, !dbg !14075
  %or64 = or i32 %shl55, %shl63, !dbg !14075
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev65 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %30, i32 0, i32 0, !dbg !14075
  %31 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev65, align 8, !dbg !14075
  %caps66 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %31, i32 0, i32 9, !dbg !14075
  %hca_cur67 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps66, i32 0, i32 0, !dbg !14075
  %arrayidx68 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur67, i64 0, i64 0, !dbg !14075
  %arraydecay69 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx68, i64 0, i64 0, !dbg !14075
  %add.ptr70 = getelementptr i32, i32* %arraydecay69, i64 13, !dbg !14075
  %32 = load i32, i32* %add.ptr70, align 4, !dbg !14075
  %and71 = and i32 %32, 16711680, !dbg !14075
  %shr72 = lshr i32 %and71, 8, !dbg !14075
  %or73 = or i32 %or64, %shr72, !dbg !14075
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev74 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 0, !dbg !14075
  %34 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev74, align 8, !dbg !14075
  %caps75 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %34, i32 0, i32 9, !dbg !14075
  %hca_cur76 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps75, i32 0, i32 0, !dbg !14075
  %arrayidx77 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur76, i64 0, i64 0, !dbg !14075
  %arraydecay78 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx77, i64 0, i64 0, !dbg !14075
  %add.ptr79 = getelementptr i32, i32* %arraydecay78, i64 13, !dbg !14075
  %35 = load i32, i32* %add.ptr79, align 4, !dbg !14075
  %and80 = and i32 %35, -16777216, !dbg !14075
  %shr81 = lshr i32 %and80, 24, !dbg !14075
  %or82 = or i32 %or73, %shr81, !dbg !14075
  br label %cond.end91, !dbg !14075

cond.false83:                                     ; preds = %land.lhs.true
  %36 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev84 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %36, i32 0, i32 0, !dbg !14075
  %37 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev84, align 8, !dbg !14075
  %caps85 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %37, i32 0, i32 9, !dbg !14075
  %hca_cur86 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps85, i32 0, i32 0, !dbg !14075
  %arrayidx87 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur86, i64 0, i64 0, !dbg !14075
  %arraydecay88 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx87, i64 0, i64 0, !dbg !14075
  %add.ptr89 = getelementptr i32, i32* %arraydecay88, i64 13, !dbg !14075
  %38 = load i32, i32* %add.ptr89, align 4, !dbg !14075
  %call90 = call i32 @__fswab32(i32 %38) #10, !dbg !14075
  br label %cond.end91, !dbg !14075

cond.end91:                                       ; preds = %cond.false83, %cond.true47
  %cond92 = phi i32 [ %or82, %cond.true47 ], [ %call90, %cond.false83 ], !dbg !14075
  %shr93 = lshr i32 %cond92, 8, !dbg !14075
  %and94 = and i32 %shr93, 3, !dbg !14075
  %cmp = icmp eq i32 %and94, 1, !dbg !14075
  br i1 %cmp, label %land.lhs.true95, label %if.then, !dbg !14075

land.lhs.true95:                                  ; preds = %cond.end91
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14075
  %dev96 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 0, !dbg !14075
  %40 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev96, align 8, !dbg !14075
  %call97 = call zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %40) #8, !dbg !14075
  br i1 %call97, label %if.end, label %if.then, !dbg !14076

if.then:                                          ; preds = %land.lhs.true95, %cond.end91, %cond.end, %entry
  br label %return, !dbg !14077

if.end:                                           ; preds = %land.lhs.true95
  %41 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14078
  %dev98 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %41, i32 0, i32 0, !dbg !14078
  %42 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev98, align 8, !dbg !14078
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %42, i32 0, i32 0, !dbg !14078
  %43 = load %struct.device*, %struct.device** %device, align 8, !dbg !14078
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %43, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0)) #11, !dbg !14078
  %44 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14079
  %dev99 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %44, i32 0, i32 0, !dbg !14080
  %45 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev99, align 8, !dbg !14080
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %45, i32 0, i32 17, !dbg !14081
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !14082
  store %struct.mlx5_eswitch* null, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !14083
  %46 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14084
  %work_queue = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %46, i32 0, i32 5, !dbg !14085
  %47 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_queue, align 8, !dbg !14085
  call void @destroy_workqueue(%struct.workqueue_struct* %47) #8, !dbg !14086
  %48 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14087
  call void @esw_offloads_cleanup_reps(%struct.mlx5_eswitch* %48) #8, !dbg !14088
  %49 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14089
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %49, i32 0, i32 11, !dbg !14090
  call void @mutex_destroy(%struct.mutex* %mode_lock) #8, !dbg !14091
  %50 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14092
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %50, i32 0, i32 10, !dbg !14093
  call void @mutex_destroy(%struct.mutex* %state_lock) #8, !dbg !14094
  %51 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14095
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %51, i32 0, i32 13, !dbg !14096
  %vport_metadata_ida = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 19, !dbg !14097
  call void @ida_destroy(%struct.ida* %vport_metadata_ida) #8, !dbg !14098
  %52 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14099
  %offloads100 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %52, i32 0, i32 13, !dbg !14100
  %mod_hdr = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads100, i32 0, i32 12, !dbg !14101
  call void @mlx5e_mod_hdr_tbl_destroy(%struct.mod_hdr_tbl* %mod_hdr) #8, !dbg !14102
  %53 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14103
  %offloads101 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %53, i32 0, i32 13, !dbg !14104
  %encap_tbl_lock = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads101, i32 0, i32 8, !dbg !14105
  call void @mutex_destroy(%struct.mutex* %encap_tbl_lock) #8, !dbg !14106
  %54 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14107
  %offloads102 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %54, i32 0, i32 13, !dbg !14108
  %decap_tbl_lock = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads102, i32 0, i32 10, !dbg !14109
  call void @mutex_destroy(%struct.mutex* %decap_tbl_lock) #8, !dbg !14110
  %55 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14111
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %55, i32 0, i32 6, !dbg !14112
  %56 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !14112
  %57 = bitcast %struct.mlx5_vport* %56 to i8*, !dbg !14111
  call void @kfree(i8* %57) #8, !dbg !14113
  %58 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14114
  %59 = bitcast %struct.mlx5_eswitch* %58 to i8*, !dbg !14114
  call void @kfree(i8* %59) #8, !dbg !14115
  br label %return, !dbg !14116

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mutex_destroy(%struct.mutex* %lock) #0 !dbg !14117 {
entry:
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !14121, metadata !DIExpression()), !dbg !14122
  ret void, !dbg !14123
}

; Function Attrs: noredzone
declare dso_local void @ida_destroy(%struct.ida*) #5

; Function Attrs: noredzone
declare dso_local void @mlx5e_mod_hdr_tbl_destroy(%struct.mod_hdr_tbl*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_set_vport_mac(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i8* %mac) #0 !dbg !14124 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %mac.addr = alloca i8*, align 8
  %evport = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14127, metadata !DIExpression()), !dbg !14128
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !14129, metadata !DIExpression()), !dbg !14130
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !14131, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !14133, metadata !DIExpression()), !dbg !14134
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14135
  %1 = load i16, i16* %vport.addr, align 2, !dbg !14136
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !14137
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %evport, align 8, !dbg !14134
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14138, metadata !DIExpression()), !dbg !14139
  store i32 0, i32* %err, align 4, !dbg !14139
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14140
  %3 = bitcast %struct.mlx5_vport* %2 to i8*, !dbg !14140
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !14142
  br i1 %call1, label %if.then, label %if.end, !dbg !14143

if.then:                                          ; preds = %entry
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14144
  %5 = bitcast %struct.mlx5_vport* %4 to i8*, !dbg !14144
  %call2 = call i64 @PTR_ERR(i8* %5) #8, !dbg !14145
  %conv = trunc i64 %call2 to i32, !dbg !14145
  store i32 %conv, i32* %retval, align 4, !dbg !14146
  br label %return, !dbg !14146

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14147
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 10, !dbg !14148
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14149
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14150
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14151
  %9 = load i8*, i8** %mac.addr, align 8, !dbg !14152
  %call3 = call i32 @mlx5_esw_set_vport_mac_locked(%struct.mlx5_eswitch* %7, %struct.mlx5_vport* %8, i8* %9) #8, !dbg !14153
  store i32 %call3, i32* %err, align 4, !dbg !14154
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14155
  %state_lock4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 10, !dbg !14156
  call void @mutex_unlock(%struct.mutex* %state_lock4) #8, !dbg !14157
  %11 = load i32, i32* %err, align 4, !dbg !14158
  store i32 %11, i32* %retval, align 4, !dbg !14159
  br label %return, !dbg !14159

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !14160
  ret i32 %12, !dbg !14160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !14161 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14164, metadata !DIExpression()), !dbg !14165
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14166
  %1 = ptrtoint i8* %0 to i64, !dbg !14166
  %2 = inttoptr i64 %1 to i8*, !dbg !14166
  %3 = ptrtoint i8* %2 to i64, !dbg !14166
  %cmp = icmp uge i64 %3, -4095, !dbg !14166
  %lnot = xor i1 %cmp, true, !dbg !14166
  %lnot1 = xor i1 %lnot, true, !dbg !14166
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14166
  %conv = sext i32 %lnot.ext to i64, !dbg !14166
  %tobool = icmp ne i64 %conv, 0, !dbg !14166
  ret i1 %tobool, !dbg !14167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !14168 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14171, metadata !DIExpression()), !dbg !14172
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14173
  %1 = ptrtoint i8* %0 to i64, !dbg !14174
  ret i64 %1, !dbg !14175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_esw_set_vport_mac_locked(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %evport, i8* %mac) #0 !dbg !14176 {
entry:
  %pscr_ret__.i43 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i43, metadata !14179, metadata !DIExpression()), !dbg !14185
  %__vpp_verify.i44 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i44, metadata !14188, metadata !DIExpression()), !dbg !14190
  %pfo_val__.i45 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i45, metadata !14191, metadata !DIExpression()), !dbg !14193
  %tmp.i46 = alloca %struct.task_struct*, align 8
  %tmp1.i47 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i38 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i38, metadata !14179, metadata !DIExpression()), !dbg !14194
  %__vpp_verify.i39 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i39, metadata !14188, metadata !DIExpression()), !dbg !14198
  %pfo_val__.i40 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i40, metadata !14191, metadata !DIExpression()), !dbg !14199
  %tmp.i41 = alloca %struct.task_struct*, align 8
  %tmp1.i42 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !14179, metadata !DIExpression()), !dbg !14200
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !14188, metadata !DIExpression()), !dbg !14203
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !14191, metadata !DIExpression()), !dbg !14204
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %evport.addr = alloca %struct.mlx5_vport*, align 8
  %mac.addr = alloca i8*, align 8
  %vport_num = alloca i16, align 2
  %node_guid = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14205, metadata !DIExpression()), !dbg !14206
  store %struct.mlx5_vport* %evport, %struct.mlx5_vport** %evport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport.addr, metadata !14207, metadata !DIExpression()), !dbg !14208
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !14209, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.declare(metadata i16* %vport_num, metadata !14211, metadata !DIExpression()), !dbg !14212
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport.addr, align 8, !dbg !14213
  %vport = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %0, i32 0, i32 1, !dbg !14214
  %1 = load i32, i32* %vport, align 8, !dbg !14214
  %conv = trunc i32 %1 to i16, !dbg !14213
  store i16 %conv, i16* %vport_num, align 2, !dbg !14212
  call void @llvm.dbg.declare(metadata i64* %node_guid, metadata !14215, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14217, metadata !DIExpression()), !dbg !14218
  store i32 0, i32* %err, align 4, !dbg !14218
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !14219
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %2) #8, !dbg !14221
  br i1 %call, label %if.then, label %if.end, !dbg !14222

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !14223
  br label %return, !dbg !14223

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport.addr, align 8, !dbg !14224
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %3, i32 0, i32 11, !dbg !14225
  %spoofchk = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 7, !dbg !14226
  %4 = load i8, i8* %spoofchk, align 4, !dbg !14226
  %tobool = trunc i8 %4 to i1, !dbg !14226
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !14227

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8*, i8** %mac.addr, align 8, !dbg !14228
  %call2 = call zeroext i1 @is_valid_ether_addr(i8* %5) #8, !dbg !14229
  br i1 %call2, label %if.end6, label %if.then3, !dbg !14230

if.then3:                                         ; preds = %land.lhs.true
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14231
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 0, !dbg !14231
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14231
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 0, !dbg !14231
  %8 = load %struct.device*, %struct.device** %device, align 8, !dbg !14231
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !14203
  %9 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !14203
  %10 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !14204, !srcloc !14232
  store i64 %10, i64* %pfo_val__.i, align 8, !dbg !14204
  %11 = load i64, i64* %pfo_val__.i, align 8, !dbg !14204
  %12 = inttoptr i64 %11 to %struct.task_struct*, !dbg !14204
  store %struct.task_struct* %12, %struct.task_struct** %tmp.i, align 8, !dbg !14204
  %13 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !14204
  store %struct.task_struct* %13, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14200
  %14 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14200
  store %struct.task_struct* %14, %struct.task_struct** %tmp1.i, align 8, !dbg !14200
  %15 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !14200
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %15, i32 0, i32 35, !dbg !14231
  %16 = load i32, i32* %pid, align 64, !dbg !14231
  %17 = load i16, i16* %vport_num, align 2, !dbg !14231
  %conv5 = zext i16 %17 to i32, !dbg !14231
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %8, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.mlx5_esw_set_vport_mac_locked, i64 0, i64 0), i32 1834, i32 %16, i32 %conv5) #11, !dbg !14231
  br label %if.end6, !dbg !14231

if.end6:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14233
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 0, !dbg !14234
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !14234
  %20 = load i16, i16* %vport_num, align 2, !dbg !14235
  %21 = load i8*, i8** %mac.addr, align 8, !dbg !14236
  %call8 = call i32 @mlx5_modify_nic_vport_mac_address(%struct.mlx5_core_dev* %19, i16 zeroext %20, i8* %21) #8, !dbg !14237
  store i32 %call8, i32* %err, align 4, !dbg !14238
  %22 = load i32, i32* %err, align 4, !dbg !14239
  %tobool9 = icmp ne i32 %22, 0, !dbg !14239
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !14240

if.then10:                                        ; preds = %if.end6
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14241
  %dev11 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 0, !dbg !14241
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev11, align 8, !dbg !14241
  %device12 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 0, !dbg !14241
  %25 = load %struct.device*, %struct.device** %device12, align 8, !dbg !14241
  store i8* null, i8** %__vpp_verify.i39, align 8, !dbg !14198
  %26 = load i8*, i8** %__vpp_verify.i39, align 8, !dbg !14198
  %27 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !14199, !srcloc !14232
  store i64 %27, i64* %pfo_val__.i40, align 8, !dbg !14199
  %28 = load i64, i64* %pfo_val__.i40, align 8, !dbg !14199
  %29 = inttoptr i64 %28 to %struct.task_struct*, !dbg !14199
  store %struct.task_struct* %29, %struct.task_struct** %tmp.i41, align 8, !dbg !14199
  %30 = load %struct.task_struct*, %struct.task_struct** %tmp.i41, align 8, !dbg !14199
  store %struct.task_struct* %30, %struct.task_struct** %pscr_ret__.i38, align 8, !dbg !14194
  %31 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i38, align 8, !dbg !14194
  store %struct.task_struct* %31, %struct.task_struct** %tmp1.i42, align 8, !dbg !14194
  %32 = load %struct.task_struct*, %struct.task_struct** %tmp1.i42, align 8, !dbg !14194
  %pid14 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %32, i32 0, i32 35, !dbg !14241
  %33 = load i32, i32* %pid14, align 64, !dbg !14241
  %34 = load i16, i16* %vport_num, align 2, !dbg !14241
  %conv15 = zext i16 %34 to i32, !dbg !14241
  %35 = load i32, i32* %err, align 4, !dbg !14241
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %25, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.mlx5_esw_set_vport_mac_locked, i64 0, i64 0), i32 1840, i32 %33, i32 %conv15, i32 %35) #11, !dbg !14241
  %36 = load i32, i32* %err, align 4, !dbg !14242
  store i32 %36, i32* %retval, align 4, !dbg !14243
  br label %return, !dbg !14243

if.end16:                                         ; preds = %if.end6
  %37 = load i8*, i8** %mac.addr, align 8, !dbg !14244
  call void @node_guid_gen_from_mac(i64* %node_guid, i8* %37) #8, !dbg !14245
  %38 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14246
  %dev17 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %38, i32 0, i32 0, !dbg !14247
  %39 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev17, align 8, !dbg !14247
  %40 = load i16, i16* %vport_num, align 2, !dbg !14248
  %41 = load i64, i64* %node_guid, align 8, !dbg !14249
  %call18 = call i32 @mlx5_modify_nic_vport_node_guid(%struct.mlx5_core_dev* %39, i16 zeroext %40, i64 %41) #8, !dbg !14250
  store i32 %call18, i32* %err, align 4, !dbg !14251
  %42 = load i32, i32* %err, align 4, !dbg !14252
  %tobool19 = icmp ne i32 %42, 0, !dbg !14252
  br i1 %tobool19, label %if.then20, label %if.end26, !dbg !14253

if.then20:                                        ; preds = %if.end16
  %43 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14254
  %dev21 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %43, i32 0, i32 0, !dbg !14254
  %44 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev21, align 8, !dbg !14254
  %device22 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %44, i32 0, i32 0, !dbg !14254
  %45 = load %struct.device*, %struct.device** %device22, align 8, !dbg !14254
  store i8* null, i8** %__vpp_verify.i44, align 8, !dbg !14190
  %46 = load i8*, i8** %__vpp_verify.i44, align 8, !dbg !14190
  %47 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !14193, !srcloc !14232
  store i64 %47, i64* %pfo_val__.i45, align 8, !dbg !14193
  %48 = load i64, i64* %pfo_val__.i45, align 8, !dbg !14193
  %49 = inttoptr i64 %48 to %struct.task_struct*, !dbg !14193
  store %struct.task_struct* %49, %struct.task_struct** %tmp.i46, align 8, !dbg !14193
  %50 = load %struct.task_struct*, %struct.task_struct** %tmp.i46, align 8, !dbg !14193
  store %struct.task_struct* %50, %struct.task_struct** %pscr_ret__.i43, align 8, !dbg !14185
  %51 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i43, align 8, !dbg !14185
  store %struct.task_struct* %51, %struct.task_struct** %tmp1.i47, align 8, !dbg !14185
  %52 = load %struct.task_struct*, %struct.task_struct** %tmp1.i47, align 8, !dbg !14185
  %pid24 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %52, i32 0, i32 35, !dbg !14254
  %53 = load i32, i32* %pid24, align 64, !dbg !14254
  %54 = load i16, i16* %vport_num, align 2, !dbg !14254
  %conv25 = zext i16 %54 to i32, !dbg !14254
  %55 = load i32, i32* %err, align 4, !dbg !14254
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %45, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.mlx5_esw_set_vport_mac_locked, i64 0, i64 0), i32 1849, i32 %53, i32 %conv25, i32 %55) #11, !dbg !14254
  br label %if.end26, !dbg !14254

if.end26:                                         ; preds = %if.then20, %if.end16
  %56 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport.addr, align 8, !dbg !14255
  %info27 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %56, i32 0, i32 11, !dbg !14256
  %mac28 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info27, i32 0, i32 0, !dbg !14257
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac28, i64 0, i64 0, !dbg !14255
  %57 = load i8*, i8** %mac.addr, align 8, !dbg !14258
  call void @ether_addr_copy(i8* %arraydecay, i8* %57) #8, !dbg !14259
  %58 = load i64, i64* %node_guid, align 8, !dbg !14260
  %59 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport.addr, align 8, !dbg !14261
  %info29 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %59, i32 0, i32 11, !dbg !14262
  %node_guid30 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info29, i32 0, i32 3, !dbg !14263
  store i64 %58, i64* %node_guid30, align 8, !dbg !14264
  %60 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport.addr, align 8, !dbg !14265
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %60, i32 0, i32 13, !dbg !14267
  %61 = load i8, i8* %enabled, align 4, !dbg !14267
  %tobool31 = trunc i8 %61 to i1, !dbg !14267
  br i1 %tobool31, label %land.lhs.true33, label %if.end37, !dbg !14268

land.lhs.true33:                                  ; preds = %if.end26
  %62 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14269
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %62, i32 0, i32 14, !dbg !14270
  %63 = load i32, i32* %mode, align 8, !dbg !14270
  %cmp = icmp eq i32 %63, 1, !dbg !14271
  br i1 %cmp, label %if.then35, label %if.end37, !dbg !14272

if.then35:                                        ; preds = %land.lhs.true33
  %64 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14273
  %65 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport.addr, align 8, !dbg !14274
  %call36 = call i32 @esw_acl_ingress_lgcy_setup(%struct.mlx5_eswitch* %64, %struct.mlx5_vport* %65) #8, !dbg !14275
  store i32 %call36, i32* %err, align 4, !dbg !14276
  br label %if.end37, !dbg !14277

if.end37:                                         ; preds = %if.then35, %land.lhs.true33, %if.end26
  %66 = load i32, i32* %err, align 4, !dbg !14278
  store i32 %66, i32* %retval, align 4, !dbg !14279
  br label %return, !dbg !14279

return:                                           ; preds = %if.end37, %if.then10, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !14280
  ret i32 %67, !dbg !14280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_port_function_hw_addr_get(%struct.devlink* %devlink, %struct.devlink_port* %port, i8* %hw_addr, i32* %hw_addr_len, %struct.netlink_ext_ack* %extack) #0 !dbg !12256 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %port.addr = alloca %struct.devlink_port*, align 8
  %hw_addr.addr = alloca i8*, align 8
  %hw_addr_len.addr = alloca i32*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  %vport_num = alloca i16, align 2
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !14281, metadata !DIExpression()), !dbg !14282
  store %struct.devlink_port* %port, %struct.devlink_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %port.addr, metadata !14283, metadata !DIExpression()), !dbg !14284
  store i8* %hw_addr, i8** %hw_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hw_addr.addr, metadata !14285, metadata !DIExpression()), !dbg !14286
  store i32* %hw_addr_len, i32** %hw_addr_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hw_addr_len.addr, metadata !14287, metadata !DIExpression()), !dbg !14288
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !14289, metadata !DIExpression()), !dbg !14290
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !14291, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !14293, metadata !DIExpression()), !dbg !14294
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14295, metadata !DIExpression()), !dbg !14296
  store i32 -95, i32* %err, align 4, !dbg !14296
  call void @llvm.dbg.declare(metadata i16* %vport_num, metadata !14297, metadata !DIExpression()), !dbg !14298
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !14299
  %call = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %0) #8, !dbg !14300
  store %struct.mlx5_eswitch* %call, %struct.mlx5_eswitch** %esw, align 8, !dbg !14301
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14302
  %2 = bitcast %struct.mlx5_eswitch* %1 to i8*, !dbg !14302
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !14304
  br i1 %call1, label %if.then, label %if.end, !dbg !14305

if.then:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14306
  %4 = bitcast %struct.mlx5_eswitch* %3 to i8*, !dbg !14306
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !14307
  %conv = trunc i64 %call2 to i32, !dbg !14307
  store i32 %conv, i32* %retval, align 4, !dbg !14308
  br label %return, !dbg !14308

if.end:                                           ; preds = %entry
  %5 = load %struct.devlink_port*, %struct.devlink_port** %port.addr, align 8, !dbg !14309
  %index = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %5, i32 0, i32 4, !dbg !14310
  %6 = load i32, i32* %index, align 8, !dbg !14310
  %call3 = call zeroext i16 @mlx5_esw_devlink_port_index_to_vport_num(i32 %6) #8, !dbg !14311
  store i16 %call3, i16* %vport_num, align 2, !dbg !14312
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14313
  %8 = load i16, i16* %vport_num, align 2, !dbg !14315
  %call4 = call zeroext i1 @is_port_function_supported(%struct.mlx5_eswitch* %7, i16 zeroext %8) #8, !dbg !14316
  br i1 %call4, label %if.end6, label %if.then5, !dbg !14317

if.then5:                                         ; preds = %if.end
  store i32 -95, i32* %retval, align 4, !dbg !14318
  br label %return, !dbg !14318

if.end6:                                          ; preds = %if.end
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14319
  %10 = load i16, i16* %vport_num, align 2, !dbg !14320
  %call7 = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %9, i16 zeroext %10) #8, !dbg !14321
  store %struct.mlx5_vport* %call7, %struct.mlx5_vport** %vport, align 8, !dbg !14322
  %11 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14323
  %12 = bitcast %struct.mlx5_vport* %11 to i8*, !dbg !14323
  %call8 = call zeroext i1 @IS_ERR(i8* %12) #8, !dbg !14325
  br i1 %call8, label %if.then9, label %if.end14, !dbg !14326

if.then9:                                         ; preds = %if.end6
  br label %do.body, !dbg !14327

do.body:                                          ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !14329, metadata !DIExpression()), !dbg !14331
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14331
  store %struct.netlink_ext_ack* %13, %struct.netlink_ext_ack** %__extack, align 8, !dbg !14331
  %14 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !14332
  %tobool = icmp ne %struct.netlink_ext_ack* %14, null, !dbg !14332
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !14331

if.then10:                                        ; preds = %do.body
  %15 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !14332
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %15, i32 0, i32 0, !dbg !14332
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @mlx5_devlink_port_function_hw_addr_get.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !14332
  br label %if.end11, !dbg !14332

if.end11:                                         ; preds = %if.then10, %do.body
  br label %do.end, !dbg !14331

do.end:                                           ; preds = %if.end11
  %16 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14334
  %17 = bitcast %struct.mlx5_vport* %16 to i8*, !dbg !14334
  %call12 = call i64 @PTR_ERR(i8* %17) #8, !dbg !14335
  %conv13 = trunc i64 %call12 to i32, !dbg !14335
  store i32 %conv13, i32* %retval, align 4, !dbg !14336
  br label %return, !dbg !14336

if.end14:                                         ; preds = %if.end6
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14337
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 10, !dbg !14338
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14339
  %19 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14340
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %19, i32 0, i32 13, !dbg !14342
  %20 = load i8, i8* %enabled, align 4, !dbg !14342
  %tobool15 = trunc i8 %20 to i1, !dbg !14342
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !14343

if.then16:                                        ; preds = %if.end14
  %21 = load i8*, i8** %hw_addr.addr, align 8, !dbg !14344
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14346
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %22, i32 0, i32 11, !dbg !14347
  %mac = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 0, !dbg !14348
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !14346
  call void @ether_addr_copy(i8* %21, i8* %arraydecay) #8, !dbg !14349
  %23 = load i32*, i32** %hw_addr_len.addr, align 8, !dbg !14350
  store i32 6, i32* %23, align 4, !dbg !14351
  store i32 0, i32* %err, align 4, !dbg !14352
  br label %if.end17, !dbg !14353

if.end17:                                         ; preds = %if.then16, %if.end14
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14354
  %state_lock18 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 10, !dbg !14355
  call void @mutex_unlock(%struct.mutex* %state_lock18) #8, !dbg !14356
  %25 = load i32, i32* %err, align 4, !dbg !14357
  store i32 %25, i32* %retval, align 4, !dbg !14358
  br label %return, !dbg !14358

return:                                           ; preds = %if.end17, %do.end, %if.then5, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !14359
  ret i32 %26, !dbg !14359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_esw_devlink_port_index_to_vport_num(i32 %dl_port_index) #0 !dbg !14360 {
entry:
  %dl_port_index.addr = alloca i32, align 4
  store i32 %dl_port_index, i32* %dl_port_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dl_port_index.addr, metadata !14363, metadata !DIExpression()), !dbg !14364
  %0 = load i32, i32* %dl_port_index.addr, align 4, !dbg !14365
  %and = and i32 %0, 65535, !dbg !14366
  %conv = trunc i32 %and to i16, !dbg !14365
  ret i16 %conv, !dbg !14367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_port_function_supported(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !14368 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14373, metadata !DIExpression()), !dbg !14374
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !14375, metadata !DIExpression()), !dbg !14376
  %0 = load i16, i16* %vport_num.addr, align 2, !dbg !14377
  %conv = zext i16 %0 to i32, !dbg !14377
  %cmp = icmp eq i32 %conv, 0, !dbg !14378
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14379

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14380
  %2 = load i16, i16* %vport_num.addr, align 2, !dbg !14381
  %call = call zeroext i1 @mlx5_eswitch_is_vf_vport(%struct.mlx5_eswitch* %1, i16 zeroext %2) #8, !dbg !14382
  br label %lor.end, !dbg !14379

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %3, !dbg !14383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ether_addr_copy(i8* %dst, i8* %src) #0 !dbg !14384 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !14388, metadata !DIExpression()), !dbg !14389
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14390, metadata !DIExpression()), !dbg !14391
  %0 = load i8*, i8** %src.addr, align 8, !dbg !14392
  %1 = bitcast i8* %0 to i32*, !dbg !14393
  %2 = load i32, i32* %1, align 4, !dbg !14393
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !14394
  %4 = bitcast i8* %3 to i32*, !dbg !14395
  store i32 %2, i32* %4, align 4, !dbg !14396
  %5 = load i8*, i8** %src.addr, align 8, !dbg !14397
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !14398
  %6 = bitcast i8* %add.ptr to i16*, !dbg !14399
  %7 = load i16, i16* %6, align 2, !dbg !14399
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !14400
  %add.ptr1 = getelementptr i8, i8* %8, i64 4, !dbg !14401
  %9 = bitcast i8* %add.ptr1 to i16*, !dbg !14402
  store i16 %7, i16* %9, align 2, !dbg !14403
  ret void, !dbg !14404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_port_function_hw_addr_set(%struct.devlink* %devlink, %struct.devlink_port* %port, i8* %hw_addr, i32 %hw_addr_len, %struct.netlink_ext_ack* %extack) #0 !dbg !12260 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %port.addr = alloca %struct.devlink_port*, align 8
  %hw_addr.addr = alloca i8*, align 8
  %hw_addr_len.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  %vport_num = alloca i16, align 2
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack9 = alloca %struct.netlink_ext_ack*, align 8
  %__extack20 = alloca %struct.netlink_ext_ack*, align 8
  %__extack33 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !14405, metadata !DIExpression()), !dbg !14406
  store %struct.devlink_port* %port, %struct.devlink_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %port.addr, metadata !14407, metadata !DIExpression()), !dbg !14408
  store i8* %hw_addr, i8** %hw_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hw_addr.addr, metadata !14409, metadata !DIExpression()), !dbg !14410
  store i32 %hw_addr_len, i32* %hw_addr_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hw_addr_len.addr, metadata !14411, metadata !DIExpression()), !dbg !14412
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !14413, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !14415, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !14417, metadata !DIExpression()), !dbg !14418
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14419, metadata !DIExpression()), !dbg !14420
  store i32 -95, i32* %err, align 4, !dbg !14420
  call void @llvm.dbg.declare(metadata i16* %vport_num, metadata !14421, metadata !DIExpression()), !dbg !14422
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !14423
  %call = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %0) #8, !dbg !14424
  store %struct.mlx5_eswitch* %call, %struct.mlx5_eswitch** %esw, align 8, !dbg !14425
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14426
  %2 = bitcast %struct.mlx5_eswitch* %1 to i8*, !dbg !14426
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !14428
  br i1 %call1, label %if.then, label %if.end4, !dbg !14429

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14430

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !14432, metadata !DIExpression()), !dbg !14434
  %3 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14434
  store %struct.netlink_ext_ack* %3, %struct.netlink_ext_ack** %__extack, align 8, !dbg !14434
  %4 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !14435
  %tobool = icmp ne %struct.netlink_ext_ack* %4, null, !dbg !14435
  br i1 %tobool, label %if.then2, label %if.end, !dbg !14434

if.then2:                                         ; preds = %do.body
  %5 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !14435
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %5, i32 0, i32 0, !dbg !14435
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @mlx5_devlink_port_function_hw_addr_set.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !14435
  br label %if.end, !dbg !14435

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !14434

do.end:                                           ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14437
  %7 = bitcast %struct.mlx5_eswitch* %6 to i8*, !dbg !14437
  %call3 = call i64 @PTR_ERR(i8* %7) #8, !dbg !14438
  %conv = trunc i64 %call3 to i32, !dbg !14438
  store i32 %conv, i32* %retval, align 4, !dbg !14439
  br label %return, !dbg !14439

if.end4:                                          ; preds = %entry
  %8 = load %struct.devlink_port*, %struct.devlink_port** %port.addr, align 8, !dbg !14440
  %index = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %8, i32 0, i32 4, !dbg !14441
  %9 = load i32, i32* %index, align 8, !dbg !14441
  %call5 = call zeroext i16 @mlx5_esw_devlink_port_index_to_vport_num(i32 %9) #8, !dbg !14442
  store i16 %call5, i16* %vport_num, align 2, !dbg !14443
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14444
  %11 = load i16, i16* %vport_num, align 2, !dbg !14446
  %call6 = call zeroext i1 @is_port_function_supported(%struct.mlx5_eswitch* %10, i16 zeroext %11) #8, !dbg !14447
  br i1 %call6, label %if.end15, label %if.then7, !dbg !14448

if.then7:                                         ; preds = %if.end4
  br label %do.body8, !dbg !14449

do.body8:                                         ; preds = %if.then7
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack9, metadata !14451, metadata !DIExpression()), !dbg !14453
  %12 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14453
  store %struct.netlink_ext_ack* %12, %struct.netlink_ext_ack** %__extack9, align 8, !dbg !14453
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack9, align 8, !dbg !14454
  %tobool10 = icmp ne %struct.netlink_ext_ack* %13, null, !dbg !14454
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !14453

if.then11:                                        ; preds = %do.body8
  %14 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack9, align 8, !dbg !14454
  %_msg12 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %14, i32 0, i32 0, !dbg !14454
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @mlx5_devlink_port_function_hw_addr_set.__msg.18, i64 0, i64 0), i8** %_msg12, align 8, !dbg !14454
  br label %if.end13, !dbg !14454

if.end13:                                         ; preds = %if.then11, %do.body8
  br label %do.end14, !dbg !14453

do.end14:                                         ; preds = %if.end13
  store i32 -22, i32* %retval, align 4, !dbg !14456
  br label %return, !dbg !14456

if.end15:                                         ; preds = %if.end4
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14457
  %16 = load i16, i16* %vport_num, align 2, !dbg !14458
  %call16 = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %15, i16 zeroext %16) #8, !dbg !14459
  store %struct.mlx5_vport* %call16, %struct.mlx5_vport** %vport, align 8, !dbg !14460
  %17 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14461
  %18 = bitcast %struct.mlx5_vport* %17 to i8*, !dbg !14461
  %call17 = call zeroext i1 @IS_ERR(i8* %18) #8, !dbg !14463
  br i1 %call17, label %if.then18, label %if.end28, !dbg !14464

if.then18:                                        ; preds = %if.end15
  br label %do.body19, !dbg !14465

do.body19:                                        ; preds = %if.then18
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack20, metadata !14467, metadata !DIExpression()), !dbg !14469
  %19 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14469
  store %struct.netlink_ext_ack* %19, %struct.netlink_ext_ack** %__extack20, align 8, !dbg !14469
  %20 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack20, align 8, !dbg !14470
  %tobool21 = icmp ne %struct.netlink_ext_ack* %20, null, !dbg !14470
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !14469

if.then22:                                        ; preds = %do.body19
  %21 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack20, align 8, !dbg !14470
  %_msg23 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %21, i32 0, i32 0, !dbg !14470
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @mlx5_devlink_port_function_hw_addr_set.__msg.19, i64 0, i64 0), i8** %_msg23, align 8, !dbg !14470
  br label %if.end24, !dbg !14470

if.end24:                                         ; preds = %if.then22, %do.body19
  br label %do.end25, !dbg !14469

do.end25:                                         ; preds = %if.end24
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14472
  %23 = bitcast %struct.mlx5_vport* %22 to i8*, !dbg !14472
  %call26 = call i64 @PTR_ERR(i8* %23) #8, !dbg !14473
  %conv27 = trunc i64 %call26 to i32, !dbg !14473
  store i32 %conv27, i32* %retval, align 4, !dbg !14474
  br label %return, !dbg !14474

if.end28:                                         ; preds = %if.end15
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14475
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 10, !dbg !14476
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14477
  %25 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14478
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %25, i32 0, i32 13, !dbg !14480
  %26 = load i8, i8* %enabled, align 4, !dbg !14480
  %tobool29 = trunc i8 %26 to i1, !dbg !14480
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !14481

if.then30:                                        ; preds = %if.end28
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14482
  %28 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !14483
  %29 = load i8*, i8** %hw_addr.addr, align 8, !dbg !14484
  %call31 = call i32 @mlx5_esw_set_vport_mac_locked(%struct.mlx5_eswitch* %27, %struct.mlx5_vport* %28, i8* %29) #8, !dbg !14485
  store i32 %call31, i32* %err, align 4, !dbg !14486
  br label %if.end39, !dbg !14487

if.else:                                          ; preds = %if.end28
  br label %do.body32, !dbg !14488

do.body32:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack33, metadata !14489, metadata !DIExpression()), !dbg !14491
  %30 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14491
  store %struct.netlink_ext_ack* %30, %struct.netlink_ext_ack** %__extack33, align 8, !dbg !14491
  %31 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack33, align 8, !dbg !14492
  %tobool34 = icmp ne %struct.netlink_ext_ack* %31, null, !dbg !14492
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !14491

if.then35:                                        ; preds = %do.body32
  %32 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack33, align 8, !dbg !14492
  %_msg36 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %32, i32 0, i32 0, !dbg !14492
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @mlx5_devlink_port_function_hw_addr_set.__msg.20, i64 0, i64 0), i8** %_msg36, align 8, !dbg !14492
  br label %if.end37, !dbg !14492

if.end37:                                         ; preds = %if.then35, %do.body32
  br label %do.end38, !dbg !14491

do.end38:                                         ; preds = %if.end37
  br label %if.end39

if.end39:                                         ; preds = %do.end38, %if.then30
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !14494
  %state_lock40 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 10, !dbg !14495
  call void @mutex_unlock(%struct.mutex* %state_lock40) #8, !dbg !14496
  %34 = load i32, i32* %err, align 4, !dbg !14497
  store i32 %34, i32* %retval, align 4, !dbg !14498
  br label %return, !dbg !14498

return:                                           ; preds = %if.end39, %do.end25, %do.end14, %do.end
  %35 = load i32, i32* %retval, align 4, !dbg !14499
  ret i32 %35, !dbg !14499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_set_vport_state(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i32 %link_state) #0 !dbg !14500 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !14179, metadata !DIExpression()), !dbg !14503
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !14188, metadata !DIExpression()), !dbg !14507
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !14191, metadata !DIExpression()), !dbg !14508
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %link_state.addr = alloca i32, align 4
  %evport = alloca %struct.mlx5_vport*, align 8
  %opmod = alloca i32, align 4
  %other_vport = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14509, metadata !DIExpression()), !dbg !14510
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !14511, metadata !DIExpression()), !dbg !14512
  store i32 %link_state, i32* %link_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %link_state.addr, metadata !14513, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !14515, metadata !DIExpression()), !dbg !14516
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14517
  %1 = load i16, i16* %vport.addr, align 2, !dbg !14518
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !14519
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %evport, align 8, !dbg !14516
  call void @llvm.dbg.declare(metadata i32* %opmod, metadata !14520, metadata !DIExpression()), !dbg !14521
  store i32 1, i32* %opmod, align 4, !dbg !14521
  call void @llvm.dbg.declare(metadata i32* %other_vport, metadata !14522, metadata !DIExpression()), !dbg !14523
  store i32 1, i32* %other_vport, align 4, !dbg !14523
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14524, metadata !DIExpression()), !dbg !14525
  store i32 0, i32* %err, align 4, !dbg !14525
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14526
  %tobool = icmp ne %struct.mlx5_eswitch* %2, null, !dbg !14526
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !14526

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14526
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !14526
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14526
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !14526
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14526
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !14526
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14526
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !14526
  %5 = load i32, i32* %add.ptr, align 4, !dbg !14526
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !14526
  br i1 %6, label %cond.true, label %cond.false, !dbg !14526

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14526
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !14526
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !14526
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !14526
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !14526
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !14526
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !14526
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !14526
  %9 = load i32, i32* %add.ptr6, align 4, !dbg !14526
  %and = and i32 %9, 255, !dbg !14526
  %shl = shl i32 %and, 24, !dbg !14526
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14526
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !14526
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !14526
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !14526
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !14526
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !14526
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !14526
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !14526
  %12 = load i32, i32* %add.ptr12, align 4, !dbg !14526
  %and13 = and i32 %12, 65280, !dbg !14526
  %shl14 = shl i32 %and13, 8, !dbg !14526
  %or = or i32 %shl, %shl14, !dbg !14526
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14526
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !14526
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !14526
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !14526
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !14526
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !14526
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !14526
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !14526
  %15 = load i32, i32* %add.ptr20, align 4, !dbg !14526
  %and21 = and i32 %15, 16711680, !dbg !14526
  %shr = lshr i32 %and21, 8, !dbg !14526
  %or22 = or i32 %or, %shr, !dbg !14526
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14526
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !14526
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !14526
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !14526
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !14526
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !14526
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !14526
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !14526
  %18 = load i32, i32* %add.ptr28, align 4, !dbg !14526
  %and29 = and i32 %18, -16777216, !dbg !14526
  %shr30 = lshr i32 %and29, 24, !dbg !14526
  %or31 = or i32 %or22, %shr30, !dbg !14526
  br label %cond.end, !dbg !14526

cond.false:                                       ; preds = %land.lhs.true
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14526
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !14526
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !14526
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !14526
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !14526
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !14526
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !14526
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !14526
  %21 = load i32, i32* %add.ptr37, align 4, !dbg !14526
  %call38 = call i32 @__fswab32(i32 %21) #10, !dbg !14526
  br label %cond.end, !dbg !14526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call38, %cond.false ], !dbg !14526
  %shr39 = lshr i32 %cond, 24, !dbg !14526
  %and40 = and i32 %shr39, 1, !dbg !14526
  %tobool41 = icmp ne i32 %and40, 0, !dbg !14526
  br i1 %tobool41, label %if.end, label %if.then, !dbg !14528

if.then:                                          ; preds = %cond.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !14529
  br label %return, !dbg !14529

if.end:                                           ; preds = %cond.end
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14530
  %23 = bitcast %struct.mlx5_vport* %22 to i8*, !dbg !14530
  %call42 = call zeroext i1 @IS_ERR(i8* %23) #8, !dbg !14532
  br i1 %call42, label %if.then43, label %if.end45, !dbg !14533

if.then43:                                        ; preds = %if.end
  %24 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14534
  %25 = bitcast %struct.mlx5_vport* %24 to i8*, !dbg !14534
  %call44 = call i64 @PTR_ERR(i8* %25) #8, !dbg !14535
  %conv = trunc i64 %call44 to i32, !dbg !14535
  store i32 %conv, i32* %retval, align 4, !dbg !14536
  br label %return, !dbg !14536

if.end45:                                         ; preds = %if.end
  %26 = load i16, i16* %vport.addr, align 2, !dbg !14537
  %conv46 = zext i16 %26 to i32, !dbg !14537
  %cmp = icmp eq i32 %conv46, 65535, !dbg !14539
  br i1 %cmp, label %if.then48, label %if.end49, !dbg !14540

if.then48:                                        ; preds = %if.end45
  store i32 2, i32* %opmod, align 4, !dbg !14541
  store i32 0, i32* %other_vport, align 4, !dbg !14543
  store i16 0, i16* %vport.addr, align 2, !dbg !14544
  br label %if.end49, !dbg !14545

if.end49:                                         ; preds = %if.then48, %if.end45
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14546
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 10, !dbg !14547
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14548
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14549
  %dev50 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %28, i32 0, i32 0, !dbg !14550
  %29 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev50, align 8, !dbg !14550
  %30 = load i32, i32* %opmod, align 4, !dbg !14551
  %conv51 = trunc i32 %30 to i8, !dbg !14551
  %31 = load i16, i16* %vport.addr, align 2, !dbg !14552
  %32 = load i32, i32* %other_vport, align 4, !dbg !14553
  %conv52 = trunc i32 %32 to i8, !dbg !14553
  %33 = load i32, i32* %link_state.addr, align 4, !dbg !14554
  %conv53 = trunc i32 %33 to i8, !dbg !14554
  %call54 = call i32 @mlx5_modify_vport_admin_state(%struct.mlx5_core_dev* %29, i8 zeroext %conv51, i16 zeroext %31, i8 zeroext %conv52, i8 zeroext %conv53) #8, !dbg !14555
  store i32 %call54, i32* %err, align 4, !dbg !14556
  %34 = load i32, i32* %err, align 4, !dbg !14557
  %tobool55 = icmp ne i32 %34, 0, !dbg !14557
  br i1 %tobool55, label %if.then56, label %if.end60, !dbg !14558

if.then56:                                        ; preds = %if.end49
  %35 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14559
  %dev57 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %35, i32 0, i32 0, !dbg !14559
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev57, align 8, !dbg !14559
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %36, i32 0, i32 0, !dbg !14559
  %37 = load %struct.device*, %struct.device** %device, align 8, !dbg !14559
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !14507
  %38 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !14507
  %39 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !14508, !srcloc !14232
  store i64 %39, i64* %pfo_val__.i, align 8, !dbg !14508
  %40 = load i64, i64* %pfo_val__.i, align 8, !dbg !14508
  %41 = inttoptr i64 %40 to %struct.task_struct*, !dbg !14508
  store %struct.task_struct* %41, %struct.task_struct** %tmp.i, align 8, !dbg !14508
  %42 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !14508
  store %struct.task_struct* %42, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14503
  %43 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14503
  store %struct.task_struct* %43, %struct.task_struct** %tmp1.i, align 8, !dbg !14503
  %44 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !14503
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %44, i32 0, i32 35, !dbg !14559
  %45 = load i32, i32* %pid, align 64, !dbg !14559
  %46 = load i16, i16* %vport.addr, align 2, !dbg !14559
  %conv59 = zext i16 %46 to i32, !dbg !14559
  %47 = load i32, i32* %opmod, align 4, !dbg !14559
  %48 = load i32, i32* %err, align 4, !dbg !14559
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %37, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.mlx5_eswitch_set_vport_state, i64 0, i64 0), i32 1974, i32 %45, i32 %conv59, i32 %47, i32 %48) #11, !dbg !14559
  br label %unlock, !dbg !14560

if.end60:                                         ; preds = %if.end49
  %49 = load i32, i32* %link_state.addr, align 4, !dbg !14561
  %50 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14562
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %50, i32 0, i32 11, !dbg !14563
  %link_state61 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 4, !dbg !14564
  store i32 %49, i32* %link_state61, align 8, !dbg !14565
  br label %unlock, !dbg !14562

unlock:                                           ; preds = %if.end60, %if.then56
  call void @llvm.dbg.label(metadata !14566), !dbg !14567
  %51 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14568
  %state_lock62 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %51, i32 0, i32 10, !dbg !14569
  call void @mutex_unlock(%struct.mutex* %state_lock62) #8, !dbg !14570
  %52 = load i32, i32* %err, align 4, !dbg !14571
  store i32 %52, i32* %retval, align 4, !dbg !14572
  br label %return, !dbg !14572

return:                                           ; preds = %unlock, %if.then43, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !14573
  ret i32 %53, !dbg !14573
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_modify_vport_admin_state(%struct.mlx5_core_dev*, i8 zeroext, i16 zeroext, i8 zeroext, i8 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_get_vport_config(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, %struct.ifla_vf_info* %ivi) #0 !dbg !14574 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %ivi.addr = alloca %struct.ifla_vf_info*, align 8
  %evport = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14577, metadata !DIExpression()), !dbg !14578
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !14579, metadata !DIExpression()), !dbg !14580
  store %struct.ifla_vf_info* %ivi, %struct.ifla_vf_info** %ivi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifla_vf_info** %ivi.addr, metadata !14581, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !14583, metadata !DIExpression()), !dbg !14584
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14585
  %1 = load i16, i16* %vport.addr, align 2, !dbg !14586
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !14587
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %evport, align 8, !dbg !14584
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14588
  %3 = bitcast %struct.mlx5_vport* %2 to i8*, !dbg !14588
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !14590
  br i1 %call1, label %if.then, label %if.end, !dbg !14591

if.then:                                          ; preds = %entry
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14592
  %5 = bitcast %struct.mlx5_vport* %4 to i8*, !dbg !14592
  %call2 = call i64 @PTR_ERR(i8* %5) #8, !dbg !14593
  %conv = trunc i64 %call2 to i32, !dbg !14593
  store i32 %conv, i32* %retval, align 4, !dbg !14594
  br label %return, !dbg !14594

if.end:                                           ; preds = %entry
  %6 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14595
  %7 = bitcast %struct.ifla_vf_info* %6 to i8*, !dbg !14596
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 72, i1 false), !dbg !14596
  %8 = load i16, i16* %vport.addr, align 2, !dbg !14597
  %conv3 = zext i16 %8 to i32, !dbg !14597
  %sub = sub i32 %conv3, 1, !dbg !14598
  %9 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14599
  %vf = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %9, i32 0, i32 0, !dbg !14600
  store i32 %sub, i32* %vf, align 4, !dbg !14601
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14602
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 10, !dbg !14603
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14604
  %11 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14605
  %mac = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %11, i32 0, i32 1, !dbg !14606
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %mac, i64 0, i64 0, !dbg !14605
  %12 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14607
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %12, i32 0, i32 11, !dbg !14608
  %mac4 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 0, !dbg !14609
  %arraydecay5 = getelementptr inbounds [6 x i8], [6 x i8]* %mac4, i64 0, i64 0, !dbg !14607
  call void @ether_addr_copy(i8* %arraydecay, i8* %arraydecay5) #8, !dbg !14610
  %13 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14611
  %info6 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %13, i32 0, i32 11, !dbg !14612
  %link_state = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info6, i32 0, i32 4, !dbg !14613
  %14 = load i32, i32* %link_state, align 8, !dbg !14613
  %15 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14614
  %linkstate = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %15, i32 0, i32 5, !dbg !14615
  store i32 %14, i32* %linkstate, align 4, !dbg !14616
  %16 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14617
  %info7 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %16, i32 0, i32 11, !dbg !14618
  %vlan = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info7, i32 0, i32 1, !dbg !14619
  %17 = load i16, i16* %vlan, align 2, !dbg !14619
  %conv8 = zext i16 %17 to i32, !dbg !14617
  %18 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14620
  %vlan9 = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %18, i32 0, i32 2, !dbg !14621
  store i32 %conv8, i32* %vlan9, align 4, !dbg !14622
  %19 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14623
  %info10 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %19, i32 0, i32 11, !dbg !14624
  %qos = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info10, i32 0, i32 2, !dbg !14625
  %20 = load i8, i8* %qos, align 8, !dbg !14625
  %conv11 = zext i8 %20 to i32, !dbg !14623
  %21 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14626
  %qos12 = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %21, i32 0, i32 3, !dbg !14627
  store i32 %conv11, i32* %qos12, align 4, !dbg !14628
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14629
  %info13 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %22, i32 0, i32 11, !dbg !14630
  %spoofchk = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info13, i32 0, i32 7, !dbg !14631
  %23 = load i8, i8* %spoofchk, align 4, !dbg !14631
  %tobool = trunc i8 %23 to i1, !dbg !14631
  %conv14 = zext i1 %tobool to i32, !dbg !14629
  %24 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14632
  %spoofchk15 = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %24, i32 0, i32 4, !dbg !14633
  store i32 %conv14, i32* %spoofchk15, align 4, !dbg !14634
  %25 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14635
  %info16 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %25, i32 0, i32 11, !dbg !14636
  %trusted = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info16, i32 0, i32 8, !dbg !14637
  %26 = load i8, i8* %trusted, align 1, !dbg !14637
  %tobool17 = trunc i8 %26 to i1, !dbg !14637
  %conv18 = zext i1 %tobool17 to i32, !dbg !14635
  %27 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14638
  %trusted19 = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %27, i32 0, i32 9, !dbg !14639
  store i32 %conv18, i32* %trusted19, align 4, !dbg !14640
  %28 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14641
  %info20 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %28, i32 0, i32 11, !dbg !14642
  %min_rate = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info20, i32 0, i32 5, !dbg !14643
  %29 = load i32, i32* %min_rate, align 4, !dbg !14643
  %30 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14644
  %min_tx_rate = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %30, i32 0, i32 6, !dbg !14645
  store i32 %29, i32* %min_tx_rate, align 4, !dbg !14646
  %31 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14647
  %info21 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %31, i32 0, i32 11, !dbg !14648
  %max_rate = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info21, i32 0, i32 6, !dbg !14649
  %32 = load i32, i32* %max_rate, align 8, !dbg !14649
  %33 = load %struct.ifla_vf_info*, %struct.ifla_vf_info** %ivi.addr, align 8, !dbg !14650
  %max_tx_rate = getelementptr inbounds %struct.ifla_vf_info, %struct.ifla_vf_info* %33, i32 0, i32 7, !dbg !14651
  store i32 %32, i32* %max_tx_rate, align 4, !dbg !14652
  %34 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14653
  %state_lock22 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %34, i32 0, i32 10, !dbg !14654
  call void @mutex_unlock(%struct.mutex* %state_lock22) #8, !dbg !14655
  store i32 0, i32* %retval, align 4, !dbg !14656
  br label %return, !dbg !14656

return:                                           ; preds = %if.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !14657
  ret i32 %35, !dbg !14657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__mlx5_eswitch_set_vport_vlan(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i16 zeroext %vlan, i8 zeroext %qos, i8 zeroext %set_flags) #0 !dbg !14658 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %vlan.addr = alloca i16, align 2
  %qos.addr = alloca i8, align 1
  %set_flags.addr = alloca i8, align 1
  %evport = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14661, metadata !DIExpression()), !dbg !14662
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !14663, metadata !DIExpression()), !dbg !14664
  store i16 %vlan, i16* %vlan.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan.addr, metadata !14665, metadata !DIExpression()), !dbg !14666
  store i8 %qos, i8* %qos.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %qos.addr, metadata !14667, metadata !DIExpression()), !dbg !14668
  store i8 %set_flags, i8* %set_flags.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set_flags.addr, metadata !14669, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !14671, metadata !DIExpression()), !dbg !14672
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14673
  %1 = load i16, i16* %vport.addr, align 2, !dbg !14674
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !14675
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %evport, align 8, !dbg !14672
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14676, metadata !DIExpression()), !dbg !14677
  store i32 0, i32* %err, align 4, !dbg !14677
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14678
  %3 = bitcast %struct.mlx5_vport* %2 to i8*, !dbg !14678
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !14680
  br i1 %call1, label %if.then, label %if.end, !dbg !14681

if.then:                                          ; preds = %entry
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14682
  %5 = bitcast %struct.mlx5_vport* %4 to i8*, !dbg !14682
  %call2 = call i64 @PTR_ERR(i8* %5) #8, !dbg !14683
  %conv = trunc i64 %call2 to i32, !dbg !14683
  store i32 %conv, i32* %retval, align 4, !dbg !14684
  br label %return, !dbg !14684

if.end:                                           ; preds = %entry
  %6 = load i16, i16* %vlan.addr, align 2, !dbg !14685
  %conv3 = zext i16 %6 to i32, !dbg !14685
  %cmp = icmp sgt i32 %conv3, 4095, !dbg !14687
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !14688

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i8, i8* %qos.addr, align 1, !dbg !14689
  %conv5 = zext i8 %7 to i32, !dbg !14689
  %cmp6 = icmp sgt i32 %conv5, 7, !dbg !14690
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !14691

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !14692
  br label %return, !dbg !14692

if.end9:                                          ; preds = %lor.lhs.false
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14693
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !14694
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14694
  %10 = load i16, i16* %vport.addr, align 2, !dbg !14695
  %11 = load i16, i16* %vlan.addr, align 2, !dbg !14696
  %12 = load i8, i8* %qos.addr, align 1, !dbg !14697
  %13 = load i8, i8* %set_flags.addr, align 1, !dbg !14698
  %call10 = call i32 @modify_esw_vport_cvlan(%struct.mlx5_core_dev* %9, i16 zeroext %10, i16 zeroext %11, i8 zeroext %12, i8 zeroext %13) #8, !dbg !14699
  store i32 %call10, i32* %err, align 4, !dbg !14700
  %14 = load i32, i32* %err, align 4, !dbg !14701
  %tobool = icmp ne i32 %14, 0, !dbg !14701
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !14703

if.then11:                                        ; preds = %if.end9
  %15 = load i32, i32* %err, align 4, !dbg !14704
  store i32 %15, i32* %retval, align 4, !dbg !14705
  br label %return, !dbg !14705

if.end12:                                         ; preds = %if.end9
  %16 = load i16, i16* %vlan.addr, align 2, !dbg !14706
  %17 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14707
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %17, i32 0, i32 11, !dbg !14708
  %vlan13 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 1, !dbg !14709
  store i16 %16, i16* %vlan13, align 2, !dbg !14710
  %18 = load i8, i8* %qos.addr, align 1, !dbg !14711
  %19 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14712
  %info14 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %19, i32 0, i32 11, !dbg !14713
  %qos15 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info14, i32 0, i32 2, !dbg !14714
  store i8 %18, i8* %qos15, align 8, !dbg !14715
  %20 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14716
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %20, i32 0, i32 13, !dbg !14718
  %21 = load i8, i8* %enabled, align 4, !dbg !14718
  %tobool16 = trunc i8 %21 to i1, !dbg !14718
  br i1 %tobool16, label %land.lhs.true, label %if.end26, !dbg !14719

land.lhs.true:                                    ; preds = %if.end12
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14720
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 14, !dbg !14721
  %23 = load i32, i32* %mode, align 8, !dbg !14721
  %cmp18 = icmp eq i32 %23, 1, !dbg !14722
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !14723

if.then20:                                        ; preds = %land.lhs.true
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14724
  %25 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14726
  %call21 = call i32 @esw_acl_ingress_lgcy_setup(%struct.mlx5_eswitch* %24, %struct.mlx5_vport* %25) #8, !dbg !14727
  store i32 %call21, i32* %err, align 4, !dbg !14728
  %26 = load i32, i32* %err, align 4, !dbg !14729
  %tobool22 = icmp ne i32 %26, 0, !dbg !14729
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !14731

if.then23:                                        ; preds = %if.then20
  %27 = load i32, i32* %err, align 4, !dbg !14732
  store i32 %27, i32* %retval, align 4, !dbg !14733
  br label %return, !dbg !14733

if.end24:                                         ; preds = %if.then20
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14734
  %29 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14735
  %call25 = call i32 @esw_acl_egress_lgcy_setup(%struct.mlx5_eswitch* %28, %struct.mlx5_vport* %29) #8, !dbg !14736
  store i32 %call25, i32* %err, align 4, !dbg !14737
  br label %if.end26, !dbg !14738

if.end26:                                         ; preds = %if.end24, %land.lhs.true, %if.end12
  %30 = load i32, i32* %err, align 4, !dbg !14739
  store i32 %30, i32* %retval, align 4, !dbg !14740
  br label %return, !dbg !14740

return:                                           ; preds = %if.end26, %if.then23, %if.then11, %if.then8, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !14741
  ret i32 %31, !dbg !14741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @modify_esw_vport_cvlan(%struct.mlx5_core_dev* %dev, i16 zeroext %vport, i16 zeroext %vlan, i8 zeroext %qos, i8 zeroext %set_flags) #0 !dbg !14742 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %vlan.addr = alloca i16, align 2
  %qos.addr = alloca i8, align 1
  %set_flags.addr = alloca i8, align 1
  %in = alloca [68 x i32], align 16
  %_v = alloca i32, align 4
  %_v312 = alloca i32, align 4
  %_v527 = alloca i32, align 4
  %_v743 = alloca i32, align 4
  %_v960 = alloca i32, align 4
  %_v1175 = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !14745, metadata !DIExpression()), !dbg !14746
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !14747, metadata !DIExpression()), !dbg !14748
  store i16 %vlan, i16* %vlan.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan.addr, metadata !14749, metadata !DIExpression()), !dbg !14750
  store i8 %qos, i8* %qos.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %qos.addr, metadata !14751, metadata !DIExpression()), !dbg !14752
  store i8 %set_flags, i8* %set_flags.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set_flags.addr, metadata !14753, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.declare(metadata [68 x i32]* %in, metadata !14755, metadata !DIExpression()), !dbg !14759
  %0 = bitcast [68 x i32]* %in to i8*, !dbg !14759
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 272, i1 false), !dbg !14759
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14760
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !14760
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14760
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !14760
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14760
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !14760
  %2 = load i32, i32* %add.ptr, align 4, !dbg !14760
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !14760
  br i1 %3, label %cond.true, label %cond.false, !dbg !14760

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14760
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !14760
  %hca_cur2 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !14760
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 9, !dbg !14760
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !14760
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !14760
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !14760
  %and = and i32 %5, 255, !dbg !14760
  %shl = shl i32 %and, 24, !dbg !14760
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14760
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !14760
  %hca_cur7 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps6, i32 0, i32 0, !dbg !14760
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 9, !dbg !14760
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !14760
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 0, !dbg !14760
  %7 = load i32, i32* %add.ptr10, align 4, !dbg !14760
  %and11 = and i32 %7, 65280, !dbg !14760
  %shl12 = shl i32 %and11, 8, !dbg !14760
  %or = or i32 %shl, %shl12, !dbg !14760
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14760
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !14760
  %hca_cur14 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps13, i32 0, i32 0, !dbg !14760
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 9, !dbg !14760
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !14760
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 0, !dbg !14760
  %9 = load i32, i32* %add.ptr17, align 4, !dbg !14760
  %and18 = and i32 %9, 16711680, !dbg !14760
  %shr = lshr i32 %and18, 8, !dbg !14760
  %or19 = or i32 %or, %shr, !dbg !14760
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14760
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !14760
  %hca_cur21 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps20, i32 0, i32 0, !dbg !14760
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 9, !dbg !14760
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !14760
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 0, !dbg !14760
  %11 = load i32, i32* %add.ptr24, align 4, !dbg !14760
  %and25 = and i32 %11, -16777216, !dbg !14760
  %shr26 = lshr i32 %and25, 24, !dbg !14760
  %or27 = or i32 %or19, %shr26, !dbg !14760
  br label %cond.end, !dbg !14760

cond.false:                                       ; preds = %entry
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14760
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !14760
  %hca_cur29 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps28, i32 0, i32 0, !dbg !14760
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 9, !dbg !14760
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !14760
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !14760
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !14760
  %call = call i32 @__fswab32(i32 %13) #10, !dbg !14760
  br label %cond.end, !dbg !14760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !14760
  %shr33 = lshr i32 %cond, 30, !dbg !14760
  %and34 = and i32 %shr33, 1, !dbg !14760
  %tobool = icmp ne i32 %and34, 0, !dbg !14760
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14762

lor.lhs.false:                                    ; preds = %cond.end
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14763
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !14763
  %hca_cur36 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps35, i32 0, i32 0, !dbg !14763
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 9, !dbg !14763
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !14763
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 0, !dbg !14763
  %15 = load i32, i32* %add.ptr39, align 4, !dbg !14763
  %16 = call i1 @llvm.is.constant.i32(i32 %15), !dbg !14763
  br i1 %16, label %cond.true40, label %cond.false72, !dbg !14763

cond.true40:                                      ; preds = %lor.lhs.false
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14763
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !14763
  %hca_cur42 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps41, i32 0, i32 0, !dbg !14763
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 9, !dbg !14763
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !14763
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 0, !dbg !14763
  %18 = load i32, i32* %add.ptr45, align 4, !dbg !14763
  %and46 = and i32 %18, 255, !dbg !14763
  %shl47 = shl i32 %and46, 24, !dbg !14763
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14763
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !14763
  %hca_cur49 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps48, i32 0, i32 0, !dbg !14763
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 9, !dbg !14763
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !14763
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 0, !dbg !14763
  %20 = load i32, i32* %add.ptr52, align 4, !dbg !14763
  %and53 = and i32 %20, 65280, !dbg !14763
  %shl54 = shl i32 %and53, 8, !dbg !14763
  %or55 = or i32 %shl47, %shl54, !dbg !14763
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14763
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !14763
  %hca_cur57 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps56, i32 0, i32 0, !dbg !14763
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 9, !dbg !14763
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !14763
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 0, !dbg !14763
  %22 = load i32, i32* %add.ptr60, align 4, !dbg !14763
  %and61 = and i32 %22, 16711680, !dbg !14763
  %shr62 = lshr i32 %and61, 8, !dbg !14763
  %or63 = or i32 %or55, %shr62, !dbg !14763
  %23 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14763
  %caps64 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %23, i32 0, i32 9, !dbg !14763
  %hca_cur65 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps64, i32 0, i32 0, !dbg !14763
  %arrayidx66 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur65, i64 0, i64 9, !dbg !14763
  %arraydecay67 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx66, i64 0, i64 0, !dbg !14763
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 0, !dbg !14763
  %24 = load i32, i32* %add.ptr68, align 4, !dbg !14763
  %and69 = and i32 %24, -16777216, !dbg !14763
  %shr70 = lshr i32 %and69, 24, !dbg !14763
  %or71 = or i32 %or63, %shr70, !dbg !14763
  br label %cond.end79, !dbg !14763

cond.false72:                                     ; preds = %lor.lhs.false
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14763
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %25, i32 0, i32 9, !dbg !14763
  %hca_cur74 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps73, i32 0, i32 0, !dbg !14763
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 9, !dbg !14763
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !14763
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 0, !dbg !14763
  %26 = load i32, i32* %add.ptr77, align 4, !dbg !14763
  %call78 = call i32 @__fswab32(i32 %26) #10, !dbg !14763
  br label %cond.end79, !dbg !14763

cond.end79:                                       ; preds = %cond.false72, %cond.true40
  %cond80 = phi i32 [ %or71, %cond.true40 ], [ %call78, %cond.false72 ], !dbg !14763
  %shr81 = lshr i32 %cond80, 28, !dbg !14763
  %and82 = and i32 %shr81, 1, !dbg !14763
  %tobool83 = icmp ne i32 %and82, 0, !dbg !14763
  br i1 %tobool83, label %if.end, label %if.then, !dbg !14764

if.then:                                          ; preds = %cond.end79, %cond.end
  store i32 -95, i32* %retval, align 4, !dbg !14765
  br label %return, !dbg !14765

if.end:                                           ; preds = %cond.end79
  br label %do.body, !dbg !14766

do.body:                                          ; preds = %if.end
  %27 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !14767
  %conv = zext i32 %27 to i64, !dbg !14767
  %and84 = and i64 8, %conv, !dbg !14767
  %tobool85 = icmp ne i64 %and84, 0, !dbg !14767
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !14770

if.then86:                                        ; preds = %do.body
  br label %if.end87, !dbg !14767

if.end87:                                         ; preds = %if.then86, %do.body
  br label %do.end, !dbg !14770

do.end:                                           ; preds = %if.end87
  %28 = load i8, i8* %set_flags.addr, align 1, !dbg !14771
  %conv88 = zext i8 %28 to i32, !dbg !14771
  %and89 = and i32 %conv88, 1, !dbg !14773
  %tobool90 = icmp ne i32 %and89, 0, !dbg !14773
  br i1 %tobool90, label %if.then91, label %if.end306, !dbg !14774

if.then91:                                        ; preds = %do.end
  br label %do.body92, !dbg !14775

do.body92:                                        ; preds = %if.then91
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !14776, metadata !DIExpression()), !dbg !14778
  store i32 1, i32* %_v, align 4, !dbg !14778
  br label %do.body93, !dbg !14778

do.body93:                                        ; preds = %do.body92
  br label %do.end94, !dbg !14779

do.end94:                                         ; preds = %do.body93
  %arraydecay95 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr96 = getelementptr i32, i32* %arraydecay95, i64 4, !dbg !14778
  %29 = load i32, i32* %add.ptr96, align 4, !dbg !14778
  %30 = call i1 @llvm.is.constant.i32(i32 %29), !dbg !14778
  br i1 %30, label %cond.true97, label %cond.false117, !dbg !14778

cond.true97:                                      ; preds = %do.end94
  %arraydecay98 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr99 = getelementptr i32, i32* %arraydecay98, i64 4, !dbg !14778
  %31 = load i32, i32* %add.ptr99, align 4, !dbg !14778
  %and100 = and i32 %31, 255, !dbg !14778
  %shl101 = shl i32 %and100, 24, !dbg !14778
  %arraydecay102 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr103 = getelementptr i32, i32* %arraydecay102, i64 4, !dbg !14778
  %32 = load i32, i32* %add.ptr103, align 4, !dbg !14778
  %and104 = and i32 %32, 65280, !dbg !14778
  %shl105 = shl i32 %and104, 8, !dbg !14778
  %or106 = or i32 %shl101, %shl105, !dbg !14778
  %arraydecay107 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr108 = getelementptr i32, i32* %arraydecay107, i64 4, !dbg !14778
  %33 = load i32, i32* %add.ptr108, align 4, !dbg !14778
  %and109 = and i32 %33, 16711680, !dbg !14778
  %shr110 = lshr i32 %and109, 8, !dbg !14778
  %or111 = or i32 %or106, %shr110, !dbg !14778
  %arraydecay112 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr113 = getelementptr i32, i32* %arraydecay112, i64 4, !dbg !14778
  %34 = load i32, i32* %add.ptr113, align 4, !dbg !14778
  %and114 = and i32 %34, -16777216, !dbg !14778
  %shr115 = lshr i32 %and114, 24, !dbg !14778
  %or116 = or i32 %or111, %shr115, !dbg !14778
  br label %cond.end121, !dbg !14778

cond.false117:                                    ; preds = %do.end94
  %arraydecay118 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr119 = getelementptr i32, i32* %arraydecay118, i64 4, !dbg !14778
  %35 = load i32, i32* %add.ptr119, align 4, !dbg !14778
  %call120 = call i32 @__fswab32(i32 %35) #10, !dbg !14778
  br label %cond.end121, !dbg !14778

cond.end121:                                      ; preds = %cond.false117, %cond.true97
  %cond122 = phi i32 [ %or116, %cond.true97 ], [ %call120, %cond.false117 ], !dbg !14778
  %and123 = and i32 %cond122, -134217729, !dbg !14778
  %36 = load i32, i32* %_v, align 4, !dbg !14778
  %and124 = and i32 %36, 1, !dbg !14778
  %shl125 = shl i32 %and124, 27, !dbg !14778
  %or126 = or i32 %and123, %shl125, !dbg !14778
  %37 = call i1 @llvm.is.constant.i32(i32 %or126), !dbg !14778
  br i1 %37, label %cond.true127, label %cond.false267, !dbg !14778

cond.true127:                                     ; preds = %cond.end121
  %arraydecay128 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 4, !dbg !14778
  %38 = load i32, i32* %add.ptr129, align 4, !dbg !14778
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !14778
  br i1 %39, label %cond.true130, label %cond.false150, !dbg !14778

cond.true130:                                     ; preds = %cond.true127
  %arraydecay131 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr132 = getelementptr i32, i32* %arraydecay131, i64 4, !dbg !14778
  %40 = load i32, i32* %add.ptr132, align 4, !dbg !14778
  %and133 = and i32 %40, 255, !dbg !14778
  %shl134 = shl i32 %and133, 24, !dbg !14778
  %arraydecay135 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 4, !dbg !14778
  %41 = load i32, i32* %add.ptr136, align 4, !dbg !14778
  %and137 = and i32 %41, 65280, !dbg !14778
  %shl138 = shl i32 %and137, 8, !dbg !14778
  %or139 = or i32 %shl134, %shl138, !dbg !14778
  %arraydecay140 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr141 = getelementptr i32, i32* %arraydecay140, i64 4, !dbg !14778
  %42 = load i32, i32* %add.ptr141, align 4, !dbg !14778
  %and142 = and i32 %42, 16711680, !dbg !14778
  %shr143 = lshr i32 %and142, 8, !dbg !14778
  %or144 = or i32 %or139, %shr143, !dbg !14778
  %arraydecay145 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 4, !dbg !14778
  %43 = load i32, i32* %add.ptr146, align 4, !dbg !14778
  %and147 = and i32 %43, -16777216, !dbg !14778
  %shr148 = lshr i32 %and147, 24, !dbg !14778
  %or149 = or i32 %or144, %shr148, !dbg !14778
  br label %cond.end154, !dbg !14778

cond.false150:                                    ; preds = %cond.true127
  %arraydecay151 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 4, !dbg !14778
  %44 = load i32, i32* %add.ptr152, align 4, !dbg !14778
  %call153 = call i32 @__fswab32(i32 %44) #10, !dbg !14778
  br label %cond.end154, !dbg !14778

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !14778
  %and156 = and i32 %cond155, -134217729, !dbg !14778
  %45 = load i32, i32* %_v, align 4, !dbg !14778
  %and157 = and i32 %45, 1, !dbg !14778
  %shl158 = shl i32 %and157, 27, !dbg !14778
  %or159 = or i32 %and156, %shl158, !dbg !14778
  %and160 = and i32 %or159, 255, !dbg !14778
  %shl161 = shl i32 %and160, 24, !dbg !14778
  %arraydecay162 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr163 = getelementptr i32, i32* %arraydecay162, i64 4, !dbg !14778
  %46 = load i32, i32* %add.ptr163, align 4, !dbg !14778
  %47 = call i1 @llvm.is.constant.i32(i32 %46), !dbg !14778
  br i1 %47, label %cond.true164, label %cond.false184, !dbg !14778

cond.true164:                                     ; preds = %cond.end154
  %arraydecay165 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr166 = getelementptr i32, i32* %arraydecay165, i64 4, !dbg !14778
  %48 = load i32, i32* %add.ptr166, align 4, !dbg !14778
  %and167 = and i32 %48, 255, !dbg !14778
  %shl168 = shl i32 %and167, 24, !dbg !14778
  %arraydecay169 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr170 = getelementptr i32, i32* %arraydecay169, i64 4, !dbg !14778
  %49 = load i32, i32* %add.ptr170, align 4, !dbg !14778
  %and171 = and i32 %49, 65280, !dbg !14778
  %shl172 = shl i32 %and171, 8, !dbg !14778
  %or173 = or i32 %shl168, %shl172, !dbg !14778
  %arraydecay174 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr175 = getelementptr i32, i32* %arraydecay174, i64 4, !dbg !14778
  %50 = load i32, i32* %add.ptr175, align 4, !dbg !14778
  %and176 = and i32 %50, 16711680, !dbg !14778
  %shr177 = lshr i32 %and176, 8, !dbg !14778
  %or178 = or i32 %or173, %shr177, !dbg !14778
  %arraydecay179 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr180 = getelementptr i32, i32* %arraydecay179, i64 4, !dbg !14778
  %51 = load i32, i32* %add.ptr180, align 4, !dbg !14778
  %and181 = and i32 %51, -16777216, !dbg !14778
  %shr182 = lshr i32 %and181, 24, !dbg !14778
  %or183 = or i32 %or178, %shr182, !dbg !14778
  br label %cond.end188, !dbg !14778

cond.false184:                                    ; preds = %cond.end154
  %arraydecay185 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr186 = getelementptr i32, i32* %arraydecay185, i64 4, !dbg !14778
  %52 = load i32, i32* %add.ptr186, align 4, !dbg !14778
  %call187 = call i32 @__fswab32(i32 %52) #10, !dbg !14778
  br label %cond.end188, !dbg !14778

cond.end188:                                      ; preds = %cond.false184, %cond.true164
  %cond189 = phi i32 [ %or183, %cond.true164 ], [ %call187, %cond.false184 ], !dbg !14778
  %and190 = and i32 %cond189, -134217729, !dbg !14778
  %53 = load i32, i32* %_v, align 4, !dbg !14778
  %and191 = and i32 %53, 1, !dbg !14778
  %shl192 = shl i32 %and191, 27, !dbg !14778
  %or193 = or i32 %and190, %shl192, !dbg !14778
  %and194 = and i32 %or193, 65280, !dbg !14778
  %shl195 = shl i32 %and194, 8, !dbg !14778
  %or196 = or i32 %shl161, %shl195, !dbg !14778
  %arraydecay197 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr198 = getelementptr i32, i32* %arraydecay197, i64 4, !dbg !14778
  %54 = load i32, i32* %add.ptr198, align 4, !dbg !14778
  %55 = call i1 @llvm.is.constant.i32(i32 %54), !dbg !14778
  br i1 %55, label %cond.true199, label %cond.false219, !dbg !14778

cond.true199:                                     ; preds = %cond.end188
  %arraydecay200 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr201 = getelementptr i32, i32* %arraydecay200, i64 4, !dbg !14778
  %56 = load i32, i32* %add.ptr201, align 4, !dbg !14778
  %and202 = and i32 %56, 255, !dbg !14778
  %shl203 = shl i32 %and202, 24, !dbg !14778
  %arraydecay204 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr205 = getelementptr i32, i32* %arraydecay204, i64 4, !dbg !14778
  %57 = load i32, i32* %add.ptr205, align 4, !dbg !14778
  %and206 = and i32 %57, 65280, !dbg !14778
  %shl207 = shl i32 %and206, 8, !dbg !14778
  %or208 = or i32 %shl203, %shl207, !dbg !14778
  %arraydecay209 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 4, !dbg !14778
  %58 = load i32, i32* %add.ptr210, align 4, !dbg !14778
  %and211 = and i32 %58, 16711680, !dbg !14778
  %shr212 = lshr i32 %and211, 8, !dbg !14778
  %or213 = or i32 %or208, %shr212, !dbg !14778
  %arraydecay214 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr215 = getelementptr i32, i32* %arraydecay214, i64 4, !dbg !14778
  %59 = load i32, i32* %add.ptr215, align 4, !dbg !14778
  %and216 = and i32 %59, -16777216, !dbg !14778
  %shr217 = lshr i32 %and216, 24, !dbg !14778
  %or218 = or i32 %or213, %shr217, !dbg !14778
  br label %cond.end223, !dbg !14778

cond.false219:                                    ; preds = %cond.end188
  %arraydecay220 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr221 = getelementptr i32, i32* %arraydecay220, i64 4, !dbg !14778
  %60 = load i32, i32* %add.ptr221, align 4, !dbg !14778
  %call222 = call i32 @__fswab32(i32 %60) #10, !dbg !14778
  br label %cond.end223, !dbg !14778

cond.end223:                                      ; preds = %cond.false219, %cond.true199
  %cond224 = phi i32 [ %or218, %cond.true199 ], [ %call222, %cond.false219 ], !dbg !14778
  %and225 = and i32 %cond224, -134217729, !dbg !14778
  %61 = load i32, i32* %_v, align 4, !dbg !14778
  %and226 = and i32 %61, 1, !dbg !14778
  %shl227 = shl i32 %and226, 27, !dbg !14778
  %or228 = or i32 %and225, %shl227, !dbg !14778
  %and229 = and i32 %or228, 16711680, !dbg !14778
  %shr230 = lshr i32 %and229, 8, !dbg !14778
  %or231 = or i32 %or196, %shr230, !dbg !14778
  %arraydecay232 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr233 = getelementptr i32, i32* %arraydecay232, i64 4, !dbg !14778
  %62 = load i32, i32* %add.ptr233, align 4, !dbg !14778
  %63 = call i1 @llvm.is.constant.i32(i32 %62), !dbg !14778
  br i1 %63, label %cond.true234, label %cond.false254, !dbg !14778

cond.true234:                                     ; preds = %cond.end223
  %arraydecay235 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr236 = getelementptr i32, i32* %arraydecay235, i64 4, !dbg !14778
  %64 = load i32, i32* %add.ptr236, align 4, !dbg !14778
  %and237 = and i32 %64, 255, !dbg !14778
  %shl238 = shl i32 %and237, 24, !dbg !14778
  %arraydecay239 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr240 = getelementptr i32, i32* %arraydecay239, i64 4, !dbg !14778
  %65 = load i32, i32* %add.ptr240, align 4, !dbg !14778
  %and241 = and i32 %65, 65280, !dbg !14778
  %shl242 = shl i32 %and241, 8, !dbg !14778
  %or243 = or i32 %shl238, %shl242, !dbg !14778
  %arraydecay244 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr245 = getelementptr i32, i32* %arraydecay244, i64 4, !dbg !14778
  %66 = load i32, i32* %add.ptr245, align 4, !dbg !14778
  %and246 = and i32 %66, 16711680, !dbg !14778
  %shr247 = lshr i32 %and246, 8, !dbg !14778
  %or248 = or i32 %or243, %shr247, !dbg !14778
  %arraydecay249 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr250 = getelementptr i32, i32* %arraydecay249, i64 4, !dbg !14778
  %67 = load i32, i32* %add.ptr250, align 4, !dbg !14778
  %and251 = and i32 %67, -16777216, !dbg !14778
  %shr252 = lshr i32 %and251, 24, !dbg !14778
  %or253 = or i32 %or248, %shr252, !dbg !14778
  br label %cond.end258, !dbg !14778

cond.false254:                                    ; preds = %cond.end223
  %arraydecay255 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr256 = getelementptr i32, i32* %arraydecay255, i64 4, !dbg !14778
  %68 = load i32, i32* %add.ptr256, align 4, !dbg !14778
  %call257 = call i32 @__fswab32(i32 %68) #10, !dbg !14778
  br label %cond.end258, !dbg !14778

cond.end258:                                      ; preds = %cond.false254, %cond.true234
  %cond259 = phi i32 [ %or253, %cond.true234 ], [ %call257, %cond.false254 ], !dbg !14778
  %and260 = and i32 %cond259, -134217729, !dbg !14778
  %69 = load i32, i32* %_v, align 4, !dbg !14778
  %and261 = and i32 %69, 1, !dbg !14778
  %shl262 = shl i32 %and261, 27, !dbg !14778
  %or263 = or i32 %and260, %shl262, !dbg !14778
  %and264 = and i32 %or263, -16777216, !dbg !14778
  %shr265 = lshr i32 %and264, 24, !dbg !14778
  %or266 = or i32 %or231, %shr265, !dbg !14778
  br label %cond.end301, !dbg !14778

cond.false267:                                    ; preds = %cond.end121
  %arraydecay268 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr269 = getelementptr i32, i32* %arraydecay268, i64 4, !dbg !14778
  %70 = load i32, i32* %add.ptr269, align 4, !dbg !14778
  %71 = call i1 @llvm.is.constant.i32(i32 %70), !dbg !14778
  br i1 %71, label %cond.true270, label %cond.false290, !dbg !14778

cond.true270:                                     ; preds = %cond.false267
  %arraydecay271 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr272 = getelementptr i32, i32* %arraydecay271, i64 4, !dbg !14778
  %72 = load i32, i32* %add.ptr272, align 4, !dbg !14778
  %and273 = and i32 %72, 255, !dbg !14778
  %shl274 = shl i32 %and273, 24, !dbg !14778
  %arraydecay275 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr276 = getelementptr i32, i32* %arraydecay275, i64 4, !dbg !14778
  %73 = load i32, i32* %add.ptr276, align 4, !dbg !14778
  %and277 = and i32 %73, 65280, !dbg !14778
  %shl278 = shl i32 %and277, 8, !dbg !14778
  %or279 = or i32 %shl274, %shl278, !dbg !14778
  %arraydecay280 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 4, !dbg !14778
  %74 = load i32, i32* %add.ptr281, align 4, !dbg !14778
  %and282 = and i32 %74, 16711680, !dbg !14778
  %shr283 = lshr i32 %and282, 8, !dbg !14778
  %or284 = or i32 %or279, %shr283, !dbg !14778
  %arraydecay285 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 4, !dbg !14778
  %75 = load i32, i32* %add.ptr286, align 4, !dbg !14778
  %and287 = and i32 %75, -16777216, !dbg !14778
  %shr288 = lshr i32 %and287, 24, !dbg !14778
  %or289 = or i32 %or284, %shr288, !dbg !14778
  br label %cond.end294, !dbg !14778

cond.false290:                                    ; preds = %cond.false267
  %arraydecay291 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr292 = getelementptr i32, i32* %arraydecay291, i64 4, !dbg !14778
  %76 = load i32, i32* %add.ptr292, align 4, !dbg !14778
  %call293 = call i32 @__fswab32(i32 %76) #10, !dbg !14778
  br label %cond.end294, !dbg !14778

cond.end294:                                      ; preds = %cond.false290, %cond.true270
  %cond295 = phi i32 [ %or289, %cond.true270 ], [ %call293, %cond.false290 ], !dbg !14778
  %and296 = and i32 %cond295, -134217729, !dbg !14778
  %77 = load i32, i32* %_v, align 4, !dbg !14778
  %and297 = and i32 %77, 1, !dbg !14778
  %shl298 = shl i32 %and297, 27, !dbg !14778
  %or299 = or i32 %and296, %shl298, !dbg !14778
  %call300 = call i32 @__fswab32(i32 %or299) #10, !dbg !14778
  br label %cond.end301, !dbg !14778

cond.end301:                                      ; preds = %cond.end294, %cond.end258
  %cond302 = phi i32 [ %or266, %cond.end258 ], [ %call300, %cond.end294 ], !dbg !14778
  %arraydecay303 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14778
  %add.ptr304 = getelementptr i32, i32* %arraydecay303, i64 4, !dbg !14778
  store i32 %cond302, i32* %add.ptr304, align 4, !dbg !14778
  br label %do.end305, !dbg !14778

do.end305:                                        ; preds = %cond.end301
  br label %if.end306, !dbg !14778

if.end306:                                        ; preds = %do.end305, %do.end
  %78 = load i8, i8* %set_flags.addr, align 1, !dbg !14781
  %conv307 = zext i8 %78 to i32, !dbg !14781
  %and308 = and i32 %conv307, 2, !dbg !14783
  %tobool309 = icmp ne i32 %and308, 0, !dbg !14783
  br i1 %tobool309, label %if.then310, label %if.end958, !dbg !14784

if.then310:                                       ; preds = %if.end306
  br label %do.body311, !dbg !14785

do.body311:                                       ; preds = %if.then310
  call void @llvm.dbg.declare(metadata i32* %_v312, metadata !14787, metadata !DIExpression()), !dbg !14789
  store i32 1, i32* %_v312, align 4, !dbg !14789
  br label %do.body313, !dbg !14789

do.body313:                                       ; preds = %do.body311
  br label %do.end314, !dbg !14790

do.end314:                                        ; preds = %do.body313
  %arraydecay315 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 4, !dbg !14789
  %79 = load i32, i32* %add.ptr316, align 4, !dbg !14789
  %80 = call i1 @llvm.is.constant.i32(i32 %79), !dbg !14789
  br i1 %80, label %cond.true317, label %cond.false337, !dbg !14789

cond.true317:                                     ; preds = %do.end314
  %arraydecay318 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr319 = getelementptr i32, i32* %arraydecay318, i64 4, !dbg !14789
  %81 = load i32, i32* %add.ptr319, align 4, !dbg !14789
  %and320 = and i32 %81, 255, !dbg !14789
  %shl321 = shl i32 %and320, 24, !dbg !14789
  %arraydecay322 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr323 = getelementptr i32, i32* %arraydecay322, i64 4, !dbg !14789
  %82 = load i32, i32* %add.ptr323, align 4, !dbg !14789
  %and324 = and i32 %82, 65280, !dbg !14789
  %shl325 = shl i32 %and324, 8, !dbg !14789
  %or326 = or i32 %shl321, %shl325, !dbg !14789
  %arraydecay327 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr328 = getelementptr i32, i32* %arraydecay327, i64 4, !dbg !14789
  %83 = load i32, i32* %add.ptr328, align 4, !dbg !14789
  %and329 = and i32 %83, 16711680, !dbg !14789
  %shr330 = lshr i32 %and329, 8, !dbg !14789
  %or331 = or i32 %or326, %shr330, !dbg !14789
  %arraydecay332 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr333 = getelementptr i32, i32* %arraydecay332, i64 4, !dbg !14789
  %84 = load i32, i32* %add.ptr333, align 4, !dbg !14789
  %and334 = and i32 %84, -16777216, !dbg !14789
  %shr335 = lshr i32 %and334, 24, !dbg !14789
  %or336 = or i32 %or331, %shr335, !dbg !14789
  br label %cond.end341, !dbg !14789

cond.false337:                                    ; preds = %do.end314
  %arraydecay338 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr339 = getelementptr i32, i32* %arraydecay338, i64 4, !dbg !14789
  %85 = load i32, i32* %add.ptr339, align 4, !dbg !14789
  %call340 = call i32 @__fswab32(i32 %85) #10, !dbg !14789
  br label %cond.end341, !dbg !14789

cond.end341:                                      ; preds = %cond.false337, %cond.true317
  %cond342 = phi i32 [ %or336, %cond.true317 ], [ %call340, %cond.false337 ], !dbg !14789
  %and343 = and i32 %cond342, -50331649, !dbg !14789
  %86 = load i32, i32* %_v312, align 4, !dbg !14789
  %and344 = and i32 %86, 3, !dbg !14789
  %shl345 = shl i32 %and344, 24, !dbg !14789
  %or346 = or i32 %and343, %shl345, !dbg !14789
  %87 = call i1 @llvm.is.constant.i32(i32 %or346), !dbg !14789
  br i1 %87, label %cond.true347, label %cond.false487, !dbg !14789

cond.true347:                                     ; preds = %cond.end341
  %arraydecay348 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr349 = getelementptr i32, i32* %arraydecay348, i64 4, !dbg !14789
  %88 = load i32, i32* %add.ptr349, align 4, !dbg !14789
  %89 = call i1 @llvm.is.constant.i32(i32 %88), !dbg !14789
  br i1 %89, label %cond.true350, label %cond.false370, !dbg !14789

cond.true350:                                     ; preds = %cond.true347
  %arraydecay351 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr352 = getelementptr i32, i32* %arraydecay351, i64 4, !dbg !14789
  %90 = load i32, i32* %add.ptr352, align 4, !dbg !14789
  %and353 = and i32 %90, 255, !dbg !14789
  %shl354 = shl i32 %and353, 24, !dbg !14789
  %arraydecay355 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr356 = getelementptr i32, i32* %arraydecay355, i64 4, !dbg !14789
  %91 = load i32, i32* %add.ptr356, align 4, !dbg !14789
  %and357 = and i32 %91, 65280, !dbg !14789
  %shl358 = shl i32 %and357, 8, !dbg !14789
  %or359 = or i32 %shl354, %shl358, !dbg !14789
  %arraydecay360 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr361 = getelementptr i32, i32* %arraydecay360, i64 4, !dbg !14789
  %92 = load i32, i32* %add.ptr361, align 4, !dbg !14789
  %and362 = and i32 %92, 16711680, !dbg !14789
  %shr363 = lshr i32 %and362, 8, !dbg !14789
  %or364 = or i32 %or359, %shr363, !dbg !14789
  %arraydecay365 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr366 = getelementptr i32, i32* %arraydecay365, i64 4, !dbg !14789
  %93 = load i32, i32* %add.ptr366, align 4, !dbg !14789
  %and367 = and i32 %93, -16777216, !dbg !14789
  %shr368 = lshr i32 %and367, 24, !dbg !14789
  %or369 = or i32 %or364, %shr368, !dbg !14789
  br label %cond.end374, !dbg !14789

cond.false370:                                    ; preds = %cond.true347
  %arraydecay371 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr372 = getelementptr i32, i32* %arraydecay371, i64 4, !dbg !14789
  %94 = load i32, i32* %add.ptr372, align 4, !dbg !14789
  %call373 = call i32 @__fswab32(i32 %94) #10, !dbg !14789
  br label %cond.end374, !dbg !14789

cond.end374:                                      ; preds = %cond.false370, %cond.true350
  %cond375 = phi i32 [ %or369, %cond.true350 ], [ %call373, %cond.false370 ], !dbg !14789
  %and376 = and i32 %cond375, -50331649, !dbg !14789
  %95 = load i32, i32* %_v312, align 4, !dbg !14789
  %and377 = and i32 %95, 3, !dbg !14789
  %shl378 = shl i32 %and377, 24, !dbg !14789
  %or379 = or i32 %and376, %shl378, !dbg !14789
  %and380 = and i32 %or379, 255, !dbg !14789
  %shl381 = shl i32 %and380, 24, !dbg !14789
  %arraydecay382 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 4, !dbg !14789
  %96 = load i32, i32* %add.ptr383, align 4, !dbg !14789
  %97 = call i1 @llvm.is.constant.i32(i32 %96), !dbg !14789
  br i1 %97, label %cond.true384, label %cond.false404, !dbg !14789

cond.true384:                                     ; preds = %cond.end374
  %arraydecay385 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr386 = getelementptr i32, i32* %arraydecay385, i64 4, !dbg !14789
  %98 = load i32, i32* %add.ptr386, align 4, !dbg !14789
  %and387 = and i32 %98, 255, !dbg !14789
  %shl388 = shl i32 %and387, 24, !dbg !14789
  %arraydecay389 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr390 = getelementptr i32, i32* %arraydecay389, i64 4, !dbg !14789
  %99 = load i32, i32* %add.ptr390, align 4, !dbg !14789
  %and391 = and i32 %99, 65280, !dbg !14789
  %shl392 = shl i32 %and391, 8, !dbg !14789
  %or393 = or i32 %shl388, %shl392, !dbg !14789
  %arraydecay394 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr395 = getelementptr i32, i32* %arraydecay394, i64 4, !dbg !14789
  %100 = load i32, i32* %add.ptr395, align 4, !dbg !14789
  %and396 = and i32 %100, 16711680, !dbg !14789
  %shr397 = lshr i32 %and396, 8, !dbg !14789
  %or398 = or i32 %or393, %shr397, !dbg !14789
  %arraydecay399 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr400 = getelementptr i32, i32* %arraydecay399, i64 4, !dbg !14789
  %101 = load i32, i32* %add.ptr400, align 4, !dbg !14789
  %and401 = and i32 %101, -16777216, !dbg !14789
  %shr402 = lshr i32 %and401, 24, !dbg !14789
  %or403 = or i32 %or398, %shr402, !dbg !14789
  br label %cond.end408, !dbg !14789

cond.false404:                                    ; preds = %cond.end374
  %arraydecay405 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr406 = getelementptr i32, i32* %arraydecay405, i64 4, !dbg !14789
  %102 = load i32, i32* %add.ptr406, align 4, !dbg !14789
  %call407 = call i32 @__fswab32(i32 %102) #10, !dbg !14789
  br label %cond.end408, !dbg !14789

cond.end408:                                      ; preds = %cond.false404, %cond.true384
  %cond409 = phi i32 [ %or403, %cond.true384 ], [ %call407, %cond.false404 ], !dbg !14789
  %and410 = and i32 %cond409, -50331649, !dbg !14789
  %103 = load i32, i32* %_v312, align 4, !dbg !14789
  %and411 = and i32 %103, 3, !dbg !14789
  %shl412 = shl i32 %and411, 24, !dbg !14789
  %or413 = or i32 %and410, %shl412, !dbg !14789
  %and414 = and i32 %or413, 65280, !dbg !14789
  %shl415 = shl i32 %and414, 8, !dbg !14789
  %or416 = or i32 %shl381, %shl415, !dbg !14789
  %arraydecay417 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr418 = getelementptr i32, i32* %arraydecay417, i64 4, !dbg !14789
  %104 = load i32, i32* %add.ptr418, align 4, !dbg !14789
  %105 = call i1 @llvm.is.constant.i32(i32 %104), !dbg !14789
  br i1 %105, label %cond.true419, label %cond.false439, !dbg !14789

cond.true419:                                     ; preds = %cond.end408
  %arraydecay420 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr421 = getelementptr i32, i32* %arraydecay420, i64 4, !dbg !14789
  %106 = load i32, i32* %add.ptr421, align 4, !dbg !14789
  %and422 = and i32 %106, 255, !dbg !14789
  %shl423 = shl i32 %and422, 24, !dbg !14789
  %arraydecay424 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr425 = getelementptr i32, i32* %arraydecay424, i64 4, !dbg !14789
  %107 = load i32, i32* %add.ptr425, align 4, !dbg !14789
  %and426 = and i32 %107, 65280, !dbg !14789
  %shl427 = shl i32 %and426, 8, !dbg !14789
  %or428 = or i32 %shl423, %shl427, !dbg !14789
  %arraydecay429 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr430 = getelementptr i32, i32* %arraydecay429, i64 4, !dbg !14789
  %108 = load i32, i32* %add.ptr430, align 4, !dbg !14789
  %and431 = and i32 %108, 16711680, !dbg !14789
  %shr432 = lshr i32 %and431, 8, !dbg !14789
  %or433 = or i32 %or428, %shr432, !dbg !14789
  %arraydecay434 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr435 = getelementptr i32, i32* %arraydecay434, i64 4, !dbg !14789
  %109 = load i32, i32* %add.ptr435, align 4, !dbg !14789
  %and436 = and i32 %109, -16777216, !dbg !14789
  %shr437 = lshr i32 %and436, 24, !dbg !14789
  %or438 = or i32 %or433, %shr437, !dbg !14789
  br label %cond.end443, !dbg !14789

cond.false439:                                    ; preds = %cond.end408
  %arraydecay440 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr441 = getelementptr i32, i32* %arraydecay440, i64 4, !dbg !14789
  %110 = load i32, i32* %add.ptr441, align 4, !dbg !14789
  %call442 = call i32 @__fswab32(i32 %110) #10, !dbg !14789
  br label %cond.end443, !dbg !14789

cond.end443:                                      ; preds = %cond.false439, %cond.true419
  %cond444 = phi i32 [ %or438, %cond.true419 ], [ %call442, %cond.false439 ], !dbg !14789
  %and445 = and i32 %cond444, -50331649, !dbg !14789
  %111 = load i32, i32* %_v312, align 4, !dbg !14789
  %and446 = and i32 %111, 3, !dbg !14789
  %shl447 = shl i32 %and446, 24, !dbg !14789
  %or448 = or i32 %and445, %shl447, !dbg !14789
  %and449 = and i32 %or448, 16711680, !dbg !14789
  %shr450 = lshr i32 %and449, 8, !dbg !14789
  %or451 = or i32 %or416, %shr450, !dbg !14789
  %arraydecay452 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr453 = getelementptr i32, i32* %arraydecay452, i64 4, !dbg !14789
  %112 = load i32, i32* %add.ptr453, align 4, !dbg !14789
  %113 = call i1 @llvm.is.constant.i32(i32 %112), !dbg !14789
  br i1 %113, label %cond.true454, label %cond.false474, !dbg !14789

cond.true454:                                     ; preds = %cond.end443
  %arraydecay455 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr456 = getelementptr i32, i32* %arraydecay455, i64 4, !dbg !14789
  %114 = load i32, i32* %add.ptr456, align 4, !dbg !14789
  %and457 = and i32 %114, 255, !dbg !14789
  %shl458 = shl i32 %and457, 24, !dbg !14789
  %arraydecay459 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr460 = getelementptr i32, i32* %arraydecay459, i64 4, !dbg !14789
  %115 = load i32, i32* %add.ptr460, align 4, !dbg !14789
  %and461 = and i32 %115, 65280, !dbg !14789
  %shl462 = shl i32 %and461, 8, !dbg !14789
  %or463 = or i32 %shl458, %shl462, !dbg !14789
  %arraydecay464 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr465 = getelementptr i32, i32* %arraydecay464, i64 4, !dbg !14789
  %116 = load i32, i32* %add.ptr465, align 4, !dbg !14789
  %and466 = and i32 %116, 16711680, !dbg !14789
  %shr467 = lshr i32 %and466, 8, !dbg !14789
  %or468 = or i32 %or463, %shr467, !dbg !14789
  %arraydecay469 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr470 = getelementptr i32, i32* %arraydecay469, i64 4, !dbg !14789
  %117 = load i32, i32* %add.ptr470, align 4, !dbg !14789
  %and471 = and i32 %117, -16777216, !dbg !14789
  %shr472 = lshr i32 %and471, 24, !dbg !14789
  %or473 = or i32 %or468, %shr472, !dbg !14789
  br label %cond.end478, !dbg !14789

cond.false474:                                    ; preds = %cond.end443
  %arraydecay475 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr476 = getelementptr i32, i32* %arraydecay475, i64 4, !dbg !14789
  %118 = load i32, i32* %add.ptr476, align 4, !dbg !14789
  %call477 = call i32 @__fswab32(i32 %118) #10, !dbg !14789
  br label %cond.end478, !dbg !14789

cond.end478:                                      ; preds = %cond.false474, %cond.true454
  %cond479 = phi i32 [ %or473, %cond.true454 ], [ %call477, %cond.false474 ], !dbg !14789
  %and480 = and i32 %cond479, -50331649, !dbg !14789
  %119 = load i32, i32* %_v312, align 4, !dbg !14789
  %and481 = and i32 %119, 3, !dbg !14789
  %shl482 = shl i32 %and481, 24, !dbg !14789
  %or483 = or i32 %and480, %shl482, !dbg !14789
  %and484 = and i32 %or483, -16777216, !dbg !14789
  %shr485 = lshr i32 %and484, 24, !dbg !14789
  %or486 = or i32 %or451, %shr485, !dbg !14789
  br label %cond.end521, !dbg !14789

cond.false487:                                    ; preds = %cond.end341
  %arraydecay488 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr489 = getelementptr i32, i32* %arraydecay488, i64 4, !dbg !14789
  %120 = load i32, i32* %add.ptr489, align 4, !dbg !14789
  %121 = call i1 @llvm.is.constant.i32(i32 %120), !dbg !14789
  br i1 %121, label %cond.true490, label %cond.false510, !dbg !14789

cond.true490:                                     ; preds = %cond.false487
  %arraydecay491 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr492 = getelementptr i32, i32* %arraydecay491, i64 4, !dbg !14789
  %122 = load i32, i32* %add.ptr492, align 4, !dbg !14789
  %and493 = and i32 %122, 255, !dbg !14789
  %shl494 = shl i32 %and493, 24, !dbg !14789
  %arraydecay495 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr496 = getelementptr i32, i32* %arraydecay495, i64 4, !dbg !14789
  %123 = load i32, i32* %add.ptr496, align 4, !dbg !14789
  %and497 = and i32 %123, 65280, !dbg !14789
  %shl498 = shl i32 %and497, 8, !dbg !14789
  %or499 = or i32 %shl494, %shl498, !dbg !14789
  %arraydecay500 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr501 = getelementptr i32, i32* %arraydecay500, i64 4, !dbg !14789
  %124 = load i32, i32* %add.ptr501, align 4, !dbg !14789
  %and502 = and i32 %124, 16711680, !dbg !14789
  %shr503 = lshr i32 %and502, 8, !dbg !14789
  %or504 = or i32 %or499, %shr503, !dbg !14789
  %arraydecay505 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr506 = getelementptr i32, i32* %arraydecay505, i64 4, !dbg !14789
  %125 = load i32, i32* %add.ptr506, align 4, !dbg !14789
  %and507 = and i32 %125, -16777216, !dbg !14789
  %shr508 = lshr i32 %and507, 24, !dbg !14789
  %or509 = or i32 %or504, %shr508, !dbg !14789
  br label %cond.end514, !dbg !14789

cond.false510:                                    ; preds = %cond.false487
  %arraydecay511 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr512 = getelementptr i32, i32* %arraydecay511, i64 4, !dbg !14789
  %126 = load i32, i32* %add.ptr512, align 4, !dbg !14789
  %call513 = call i32 @__fswab32(i32 %126) #10, !dbg !14789
  br label %cond.end514, !dbg !14789

cond.end514:                                      ; preds = %cond.false510, %cond.true490
  %cond515 = phi i32 [ %or509, %cond.true490 ], [ %call513, %cond.false510 ], !dbg !14789
  %and516 = and i32 %cond515, -50331649, !dbg !14789
  %127 = load i32, i32* %_v312, align 4, !dbg !14789
  %and517 = and i32 %127, 3, !dbg !14789
  %shl518 = shl i32 %and517, 24, !dbg !14789
  %or519 = or i32 %and516, %shl518, !dbg !14789
  %call520 = call i32 @__fswab32(i32 %or519) #10, !dbg !14789
  br label %cond.end521, !dbg !14789

cond.end521:                                      ; preds = %cond.end514, %cond.end478
  %cond522 = phi i32 [ %or486, %cond.end478 ], [ %call520, %cond.end514 ], !dbg !14789
  %arraydecay523 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14789
  %add.ptr524 = getelementptr i32, i32* %arraydecay523, i64 4, !dbg !14789
  store i32 %cond522, i32* %add.ptr524, align 4, !dbg !14789
  br label %do.end525, !dbg !14789

do.end525:                                        ; preds = %cond.end521
  br label %do.body526, !dbg !14792

do.body526:                                       ; preds = %do.end525
  call void @llvm.dbg.declare(metadata i32* %_v527, metadata !14793, metadata !DIExpression()), !dbg !14795
  %128 = load i8, i8* %qos.addr, align 1, !dbg !14795
  %conv528 = zext i8 %128 to i32, !dbg !14795
  store i32 %conv528, i32* %_v527, align 4, !dbg !14795
  br label %do.body529, !dbg !14795

do.body529:                                       ; preds = %do.body526
  br label %do.end530, !dbg !14796

do.end530:                                        ; preds = %do.body529
  %arraydecay531 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr532 = getelementptr i32, i32* %arraydecay531, i64 6, !dbg !14795
  %129 = load i32, i32* %add.ptr532, align 4, !dbg !14795
  %130 = call i1 @llvm.is.constant.i32(i32 %129), !dbg !14795
  br i1 %130, label %cond.true533, label %cond.false553, !dbg !14795

cond.true533:                                     ; preds = %do.end530
  %arraydecay534 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr535 = getelementptr i32, i32* %arraydecay534, i64 6, !dbg !14795
  %131 = load i32, i32* %add.ptr535, align 4, !dbg !14795
  %and536 = and i32 %131, 255, !dbg !14795
  %shl537 = shl i32 %and536, 24, !dbg !14795
  %arraydecay538 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr539 = getelementptr i32, i32* %arraydecay538, i64 6, !dbg !14795
  %132 = load i32, i32* %add.ptr539, align 4, !dbg !14795
  %and540 = and i32 %132, 65280, !dbg !14795
  %shl541 = shl i32 %and540, 8, !dbg !14795
  %or542 = or i32 %shl537, %shl541, !dbg !14795
  %arraydecay543 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr544 = getelementptr i32, i32* %arraydecay543, i64 6, !dbg !14795
  %133 = load i32, i32* %add.ptr544, align 4, !dbg !14795
  %and545 = and i32 %133, 16711680, !dbg !14795
  %shr546 = lshr i32 %and545, 8, !dbg !14795
  %or547 = or i32 %or542, %shr546, !dbg !14795
  %arraydecay548 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr549 = getelementptr i32, i32* %arraydecay548, i64 6, !dbg !14795
  %134 = load i32, i32* %add.ptr549, align 4, !dbg !14795
  %and550 = and i32 %134, -16777216, !dbg !14795
  %shr551 = lshr i32 %and550, 24, !dbg !14795
  %or552 = or i32 %or547, %shr551, !dbg !14795
  br label %cond.end557, !dbg !14795

cond.false553:                                    ; preds = %do.end530
  %arraydecay554 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr555 = getelementptr i32, i32* %arraydecay554, i64 6, !dbg !14795
  %135 = load i32, i32* %add.ptr555, align 4, !dbg !14795
  %call556 = call i32 @__fswab32(i32 %135) #10, !dbg !14795
  br label %cond.end557, !dbg !14795

cond.end557:                                      ; preds = %cond.false553, %cond.true533
  %cond558 = phi i32 [ %or552, %cond.true533 ], [ %call556, %cond.false553 ], !dbg !14795
  %and559 = and i32 %cond558, -28673, !dbg !14795
  %136 = load i32, i32* %_v527, align 4, !dbg !14795
  %and560 = and i32 %136, 7, !dbg !14795
  %shl561 = shl i32 %and560, 12, !dbg !14795
  %or562 = or i32 %and559, %shl561, !dbg !14795
  %137 = call i1 @llvm.is.constant.i32(i32 %or562), !dbg !14795
  br i1 %137, label %cond.true563, label %cond.false703, !dbg !14795

cond.true563:                                     ; preds = %cond.end557
  %arraydecay564 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr565 = getelementptr i32, i32* %arraydecay564, i64 6, !dbg !14795
  %138 = load i32, i32* %add.ptr565, align 4, !dbg !14795
  %139 = call i1 @llvm.is.constant.i32(i32 %138), !dbg !14795
  br i1 %139, label %cond.true566, label %cond.false586, !dbg !14795

cond.true566:                                     ; preds = %cond.true563
  %arraydecay567 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr568 = getelementptr i32, i32* %arraydecay567, i64 6, !dbg !14795
  %140 = load i32, i32* %add.ptr568, align 4, !dbg !14795
  %and569 = and i32 %140, 255, !dbg !14795
  %shl570 = shl i32 %and569, 24, !dbg !14795
  %arraydecay571 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr572 = getelementptr i32, i32* %arraydecay571, i64 6, !dbg !14795
  %141 = load i32, i32* %add.ptr572, align 4, !dbg !14795
  %and573 = and i32 %141, 65280, !dbg !14795
  %shl574 = shl i32 %and573, 8, !dbg !14795
  %or575 = or i32 %shl570, %shl574, !dbg !14795
  %arraydecay576 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr577 = getelementptr i32, i32* %arraydecay576, i64 6, !dbg !14795
  %142 = load i32, i32* %add.ptr577, align 4, !dbg !14795
  %and578 = and i32 %142, 16711680, !dbg !14795
  %shr579 = lshr i32 %and578, 8, !dbg !14795
  %or580 = or i32 %or575, %shr579, !dbg !14795
  %arraydecay581 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 6, !dbg !14795
  %143 = load i32, i32* %add.ptr582, align 4, !dbg !14795
  %and583 = and i32 %143, -16777216, !dbg !14795
  %shr584 = lshr i32 %and583, 24, !dbg !14795
  %or585 = or i32 %or580, %shr584, !dbg !14795
  br label %cond.end590, !dbg !14795

cond.false586:                                    ; preds = %cond.true563
  %arraydecay587 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr588 = getelementptr i32, i32* %arraydecay587, i64 6, !dbg !14795
  %144 = load i32, i32* %add.ptr588, align 4, !dbg !14795
  %call589 = call i32 @__fswab32(i32 %144) #10, !dbg !14795
  br label %cond.end590, !dbg !14795

cond.end590:                                      ; preds = %cond.false586, %cond.true566
  %cond591 = phi i32 [ %or585, %cond.true566 ], [ %call589, %cond.false586 ], !dbg !14795
  %and592 = and i32 %cond591, -28673, !dbg !14795
  %145 = load i32, i32* %_v527, align 4, !dbg !14795
  %and593 = and i32 %145, 7, !dbg !14795
  %shl594 = shl i32 %and593, 12, !dbg !14795
  %or595 = or i32 %and592, %shl594, !dbg !14795
  %and596 = and i32 %or595, 255, !dbg !14795
  %shl597 = shl i32 %and596, 24, !dbg !14795
  %arraydecay598 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr599 = getelementptr i32, i32* %arraydecay598, i64 6, !dbg !14795
  %146 = load i32, i32* %add.ptr599, align 4, !dbg !14795
  %147 = call i1 @llvm.is.constant.i32(i32 %146), !dbg !14795
  br i1 %147, label %cond.true600, label %cond.false620, !dbg !14795

cond.true600:                                     ; preds = %cond.end590
  %arraydecay601 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr602 = getelementptr i32, i32* %arraydecay601, i64 6, !dbg !14795
  %148 = load i32, i32* %add.ptr602, align 4, !dbg !14795
  %and603 = and i32 %148, 255, !dbg !14795
  %shl604 = shl i32 %and603, 24, !dbg !14795
  %arraydecay605 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr606 = getelementptr i32, i32* %arraydecay605, i64 6, !dbg !14795
  %149 = load i32, i32* %add.ptr606, align 4, !dbg !14795
  %and607 = and i32 %149, 65280, !dbg !14795
  %shl608 = shl i32 %and607, 8, !dbg !14795
  %or609 = or i32 %shl604, %shl608, !dbg !14795
  %arraydecay610 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr611 = getelementptr i32, i32* %arraydecay610, i64 6, !dbg !14795
  %150 = load i32, i32* %add.ptr611, align 4, !dbg !14795
  %and612 = and i32 %150, 16711680, !dbg !14795
  %shr613 = lshr i32 %and612, 8, !dbg !14795
  %or614 = or i32 %or609, %shr613, !dbg !14795
  %arraydecay615 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr616 = getelementptr i32, i32* %arraydecay615, i64 6, !dbg !14795
  %151 = load i32, i32* %add.ptr616, align 4, !dbg !14795
  %and617 = and i32 %151, -16777216, !dbg !14795
  %shr618 = lshr i32 %and617, 24, !dbg !14795
  %or619 = or i32 %or614, %shr618, !dbg !14795
  br label %cond.end624, !dbg !14795

cond.false620:                                    ; preds = %cond.end590
  %arraydecay621 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr622 = getelementptr i32, i32* %arraydecay621, i64 6, !dbg !14795
  %152 = load i32, i32* %add.ptr622, align 4, !dbg !14795
  %call623 = call i32 @__fswab32(i32 %152) #10, !dbg !14795
  br label %cond.end624, !dbg !14795

cond.end624:                                      ; preds = %cond.false620, %cond.true600
  %cond625 = phi i32 [ %or619, %cond.true600 ], [ %call623, %cond.false620 ], !dbg !14795
  %and626 = and i32 %cond625, -28673, !dbg !14795
  %153 = load i32, i32* %_v527, align 4, !dbg !14795
  %and627 = and i32 %153, 7, !dbg !14795
  %shl628 = shl i32 %and627, 12, !dbg !14795
  %or629 = or i32 %and626, %shl628, !dbg !14795
  %and630 = and i32 %or629, 65280, !dbg !14795
  %shl631 = shl i32 %and630, 8, !dbg !14795
  %or632 = or i32 %shl597, %shl631, !dbg !14795
  %arraydecay633 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr634 = getelementptr i32, i32* %arraydecay633, i64 6, !dbg !14795
  %154 = load i32, i32* %add.ptr634, align 4, !dbg !14795
  %155 = call i1 @llvm.is.constant.i32(i32 %154), !dbg !14795
  br i1 %155, label %cond.true635, label %cond.false655, !dbg !14795

cond.true635:                                     ; preds = %cond.end624
  %arraydecay636 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr637 = getelementptr i32, i32* %arraydecay636, i64 6, !dbg !14795
  %156 = load i32, i32* %add.ptr637, align 4, !dbg !14795
  %and638 = and i32 %156, 255, !dbg !14795
  %shl639 = shl i32 %and638, 24, !dbg !14795
  %arraydecay640 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr641 = getelementptr i32, i32* %arraydecay640, i64 6, !dbg !14795
  %157 = load i32, i32* %add.ptr641, align 4, !dbg !14795
  %and642 = and i32 %157, 65280, !dbg !14795
  %shl643 = shl i32 %and642, 8, !dbg !14795
  %or644 = or i32 %shl639, %shl643, !dbg !14795
  %arraydecay645 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr646 = getelementptr i32, i32* %arraydecay645, i64 6, !dbg !14795
  %158 = load i32, i32* %add.ptr646, align 4, !dbg !14795
  %and647 = and i32 %158, 16711680, !dbg !14795
  %shr648 = lshr i32 %and647, 8, !dbg !14795
  %or649 = or i32 %or644, %shr648, !dbg !14795
  %arraydecay650 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr651 = getelementptr i32, i32* %arraydecay650, i64 6, !dbg !14795
  %159 = load i32, i32* %add.ptr651, align 4, !dbg !14795
  %and652 = and i32 %159, -16777216, !dbg !14795
  %shr653 = lshr i32 %and652, 24, !dbg !14795
  %or654 = or i32 %or649, %shr653, !dbg !14795
  br label %cond.end659, !dbg !14795

cond.false655:                                    ; preds = %cond.end624
  %arraydecay656 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr657 = getelementptr i32, i32* %arraydecay656, i64 6, !dbg !14795
  %160 = load i32, i32* %add.ptr657, align 4, !dbg !14795
  %call658 = call i32 @__fswab32(i32 %160) #10, !dbg !14795
  br label %cond.end659, !dbg !14795

cond.end659:                                      ; preds = %cond.false655, %cond.true635
  %cond660 = phi i32 [ %or654, %cond.true635 ], [ %call658, %cond.false655 ], !dbg !14795
  %and661 = and i32 %cond660, -28673, !dbg !14795
  %161 = load i32, i32* %_v527, align 4, !dbg !14795
  %and662 = and i32 %161, 7, !dbg !14795
  %shl663 = shl i32 %and662, 12, !dbg !14795
  %or664 = or i32 %and661, %shl663, !dbg !14795
  %and665 = and i32 %or664, 16711680, !dbg !14795
  %shr666 = lshr i32 %and665, 8, !dbg !14795
  %or667 = or i32 %or632, %shr666, !dbg !14795
  %arraydecay668 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr669 = getelementptr i32, i32* %arraydecay668, i64 6, !dbg !14795
  %162 = load i32, i32* %add.ptr669, align 4, !dbg !14795
  %163 = call i1 @llvm.is.constant.i32(i32 %162), !dbg !14795
  br i1 %163, label %cond.true670, label %cond.false690, !dbg !14795

cond.true670:                                     ; preds = %cond.end659
  %arraydecay671 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr672 = getelementptr i32, i32* %arraydecay671, i64 6, !dbg !14795
  %164 = load i32, i32* %add.ptr672, align 4, !dbg !14795
  %and673 = and i32 %164, 255, !dbg !14795
  %shl674 = shl i32 %and673, 24, !dbg !14795
  %arraydecay675 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr676 = getelementptr i32, i32* %arraydecay675, i64 6, !dbg !14795
  %165 = load i32, i32* %add.ptr676, align 4, !dbg !14795
  %and677 = and i32 %165, 65280, !dbg !14795
  %shl678 = shl i32 %and677, 8, !dbg !14795
  %or679 = or i32 %shl674, %shl678, !dbg !14795
  %arraydecay680 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr681 = getelementptr i32, i32* %arraydecay680, i64 6, !dbg !14795
  %166 = load i32, i32* %add.ptr681, align 4, !dbg !14795
  %and682 = and i32 %166, 16711680, !dbg !14795
  %shr683 = lshr i32 %and682, 8, !dbg !14795
  %or684 = or i32 %or679, %shr683, !dbg !14795
  %arraydecay685 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr686 = getelementptr i32, i32* %arraydecay685, i64 6, !dbg !14795
  %167 = load i32, i32* %add.ptr686, align 4, !dbg !14795
  %and687 = and i32 %167, -16777216, !dbg !14795
  %shr688 = lshr i32 %and687, 24, !dbg !14795
  %or689 = or i32 %or684, %shr688, !dbg !14795
  br label %cond.end694, !dbg !14795

cond.false690:                                    ; preds = %cond.end659
  %arraydecay691 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr692 = getelementptr i32, i32* %arraydecay691, i64 6, !dbg !14795
  %168 = load i32, i32* %add.ptr692, align 4, !dbg !14795
  %call693 = call i32 @__fswab32(i32 %168) #10, !dbg !14795
  br label %cond.end694, !dbg !14795

cond.end694:                                      ; preds = %cond.false690, %cond.true670
  %cond695 = phi i32 [ %or689, %cond.true670 ], [ %call693, %cond.false690 ], !dbg !14795
  %and696 = and i32 %cond695, -28673, !dbg !14795
  %169 = load i32, i32* %_v527, align 4, !dbg !14795
  %and697 = and i32 %169, 7, !dbg !14795
  %shl698 = shl i32 %and697, 12, !dbg !14795
  %or699 = or i32 %and696, %shl698, !dbg !14795
  %and700 = and i32 %or699, -16777216, !dbg !14795
  %shr701 = lshr i32 %and700, 24, !dbg !14795
  %or702 = or i32 %or667, %shr701, !dbg !14795
  br label %cond.end737, !dbg !14795

cond.false703:                                    ; preds = %cond.end557
  %arraydecay704 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr705 = getelementptr i32, i32* %arraydecay704, i64 6, !dbg !14795
  %170 = load i32, i32* %add.ptr705, align 4, !dbg !14795
  %171 = call i1 @llvm.is.constant.i32(i32 %170), !dbg !14795
  br i1 %171, label %cond.true706, label %cond.false726, !dbg !14795

cond.true706:                                     ; preds = %cond.false703
  %arraydecay707 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr708 = getelementptr i32, i32* %arraydecay707, i64 6, !dbg !14795
  %172 = load i32, i32* %add.ptr708, align 4, !dbg !14795
  %and709 = and i32 %172, 255, !dbg !14795
  %shl710 = shl i32 %and709, 24, !dbg !14795
  %arraydecay711 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr712 = getelementptr i32, i32* %arraydecay711, i64 6, !dbg !14795
  %173 = load i32, i32* %add.ptr712, align 4, !dbg !14795
  %and713 = and i32 %173, 65280, !dbg !14795
  %shl714 = shl i32 %and713, 8, !dbg !14795
  %or715 = or i32 %shl710, %shl714, !dbg !14795
  %arraydecay716 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr717 = getelementptr i32, i32* %arraydecay716, i64 6, !dbg !14795
  %174 = load i32, i32* %add.ptr717, align 4, !dbg !14795
  %and718 = and i32 %174, 16711680, !dbg !14795
  %shr719 = lshr i32 %and718, 8, !dbg !14795
  %or720 = or i32 %or715, %shr719, !dbg !14795
  %arraydecay721 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr722 = getelementptr i32, i32* %arraydecay721, i64 6, !dbg !14795
  %175 = load i32, i32* %add.ptr722, align 4, !dbg !14795
  %and723 = and i32 %175, -16777216, !dbg !14795
  %shr724 = lshr i32 %and723, 24, !dbg !14795
  %or725 = or i32 %or720, %shr724, !dbg !14795
  br label %cond.end730, !dbg !14795

cond.false726:                                    ; preds = %cond.false703
  %arraydecay727 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr728 = getelementptr i32, i32* %arraydecay727, i64 6, !dbg !14795
  %176 = load i32, i32* %add.ptr728, align 4, !dbg !14795
  %call729 = call i32 @__fswab32(i32 %176) #10, !dbg !14795
  br label %cond.end730, !dbg !14795

cond.end730:                                      ; preds = %cond.false726, %cond.true706
  %cond731 = phi i32 [ %or725, %cond.true706 ], [ %call729, %cond.false726 ], !dbg !14795
  %and732 = and i32 %cond731, -28673, !dbg !14795
  %177 = load i32, i32* %_v527, align 4, !dbg !14795
  %and733 = and i32 %177, 7, !dbg !14795
  %shl734 = shl i32 %and733, 12, !dbg !14795
  %or735 = or i32 %and732, %shl734, !dbg !14795
  %call736 = call i32 @__fswab32(i32 %or735) #10, !dbg !14795
  br label %cond.end737, !dbg !14795

cond.end737:                                      ; preds = %cond.end730, %cond.end694
  %cond738 = phi i32 [ %or702, %cond.end694 ], [ %call736, %cond.end730 ], !dbg !14795
  %arraydecay739 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14795
  %add.ptr740 = getelementptr i32, i32* %arraydecay739, i64 6, !dbg !14795
  store i32 %cond738, i32* %add.ptr740, align 4, !dbg !14795
  br label %do.end741, !dbg !14795

do.end741:                                        ; preds = %cond.end737
  br label %do.body742, !dbg !14798

do.body742:                                       ; preds = %do.end741
  call void @llvm.dbg.declare(metadata i32* %_v743, metadata !14799, metadata !DIExpression()), !dbg !14801
  %178 = load i16, i16* %vlan.addr, align 2, !dbg !14801
  %conv744 = zext i16 %178 to i32, !dbg !14801
  store i32 %conv744, i32* %_v743, align 4, !dbg !14801
  br label %do.body745, !dbg !14801

do.body745:                                       ; preds = %do.body742
  br label %do.end746, !dbg !14802

do.end746:                                        ; preds = %do.body745
  %arraydecay747 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr748 = getelementptr i32, i32* %arraydecay747, i64 6, !dbg !14801
  %179 = load i32, i32* %add.ptr748, align 4, !dbg !14801
  %180 = call i1 @llvm.is.constant.i32(i32 %179), !dbg !14801
  br i1 %180, label %cond.true749, label %cond.false769, !dbg !14801

cond.true749:                                     ; preds = %do.end746
  %arraydecay750 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr751 = getelementptr i32, i32* %arraydecay750, i64 6, !dbg !14801
  %181 = load i32, i32* %add.ptr751, align 4, !dbg !14801
  %and752 = and i32 %181, 255, !dbg !14801
  %shl753 = shl i32 %and752, 24, !dbg !14801
  %arraydecay754 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr755 = getelementptr i32, i32* %arraydecay754, i64 6, !dbg !14801
  %182 = load i32, i32* %add.ptr755, align 4, !dbg !14801
  %and756 = and i32 %182, 65280, !dbg !14801
  %shl757 = shl i32 %and756, 8, !dbg !14801
  %or758 = or i32 %shl753, %shl757, !dbg !14801
  %arraydecay759 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr760 = getelementptr i32, i32* %arraydecay759, i64 6, !dbg !14801
  %183 = load i32, i32* %add.ptr760, align 4, !dbg !14801
  %and761 = and i32 %183, 16711680, !dbg !14801
  %shr762 = lshr i32 %and761, 8, !dbg !14801
  %or763 = or i32 %or758, %shr762, !dbg !14801
  %arraydecay764 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr765 = getelementptr i32, i32* %arraydecay764, i64 6, !dbg !14801
  %184 = load i32, i32* %add.ptr765, align 4, !dbg !14801
  %and766 = and i32 %184, -16777216, !dbg !14801
  %shr767 = lshr i32 %and766, 24, !dbg !14801
  %or768 = or i32 %or763, %shr767, !dbg !14801
  br label %cond.end773, !dbg !14801

cond.false769:                                    ; preds = %do.end746
  %arraydecay770 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr771 = getelementptr i32, i32* %arraydecay770, i64 6, !dbg !14801
  %185 = load i32, i32* %add.ptr771, align 4, !dbg !14801
  %call772 = call i32 @__fswab32(i32 %185) #10, !dbg !14801
  br label %cond.end773, !dbg !14801

cond.end773:                                      ; preds = %cond.false769, %cond.true749
  %cond774 = phi i32 [ %or768, %cond.true749 ], [ %call772, %cond.false769 ], !dbg !14801
  %and775 = and i32 %cond774, -4096, !dbg !14801
  %186 = load i32, i32* %_v743, align 4, !dbg !14801
  %and776 = and i32 %186, 4095, !dbg !14801
  %shl777 = shl i32 %and776, 0, !dbg !14801
  %or778 = or i32 %and775, %shl777, !dbg !14801
  %187 = call i1 @llvm.is.constant.i32(i32 %or778), !dbg !14801
  br i1 %187, label %cond.true779, label %cond.false919, !dbg !14801

cond.true779:                                     ; preds = %cond.end773
  %arraydecay780 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr781 = getelementptr i32, i32* %arraydecay780, i64 6, !dbg !14801
  %188 = load i32, i32* %add.ptr781, align 4, !dbg !14801
  %189 = call i1 @llvm.is.constant.i32(i32 %188), !dbg !14801
  br i1 %189, label %cond.true782, label %cond.false802, !dbg !14801

cond.true782:                                     ; preds = %cond.true779
  %arraydecay783 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr784 = getelementptr i32, i32* %arraydecay783, i64 6, !dbg !14801
  %190 = load i32, i32* %add.ptr784, align 4, !dbg !14801
  %and785 = and i32 %190, 255, !dbg !14801
  %shl786 = shl i32 %and785, 24, !dbg !14801
  %arraydecay787 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr788 = getelementptr i32, i32* %arraydecay787, i64 6, !dbg !14801
  %191 = load i32, i32* %add.ptr788, align 4, !dbg !14801
  %and789 = and i32 %191, 65280, !dbg !14801
  %shl790 = shl i32 %and789, 8, !dbg !14801
  %or791 = or i32 %shl786, %shl790, !dbg !14801
  %arraydecay792 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr793 = getelementptr i32, i32* %arraydecay792, i64 6, !dbg !14801
  %192 = load i32, i32* %add.ptr793, align 4, !dbg !14801
  %and794 = and i32 %192, 16711680, !dbg !14801
  %shr795 = lshr i32 %and794, 8, !dbg !14801
  %or796 = or i32 %or791, %shr795, !dbg !14801
  %arraydecay797 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr798 = getelementptr i32, i32* %arraydecay797, i64 6, !dbg !14801
  %193 = load i32, i32* %add.ptr798, align 4, !dbg !14801
  %and799 = and i32 %193, -16777216, !dbg !14801
  %shr800 = lshr i32 %and799, 24, !dbg !14801
  %or801 = or i32 %or796, %shr800, !dbg !14801
  br label %cond.end806, !dbg !14801

cond.false802:                                    ; preds = %cond.true779
  %arraydecay803 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr804 = getelementptr i32, i32* %arraydecay803, i64 6, !dbg !14801
  %194 = load i32, i32* %add.ptr804, align 4, !dbg !14801
  %call805 = call i32 @__fswab32(i32 %194) #10, !dbg !14801
  br label %cond.end806, !dbg !14801

cond.end806:                                      ; preds = %cond.false802, %cond.true782
  %cond807 = phi i32 [ %or801, %cond.true782 ], [ %call805, %cond.false802 ], !dbg !14801
  %and808 = and i32 %cond807, -4096, !dbg !14801
  %195 = load i32, i32* %_v743, align 4, !dbg !14801
  %and809 = and i32 %195, 4095, !dbg !14801
  %shl810 = shl i32 %and809, 0, !dbg !14801
  %or811 = or i32 %and808, %shl810, !dbg !14801
  %and812 = and i32 %or811, 255, !dbg !14801
  %shl813 = shl i32 %and812, 24, !dbg !14801
  %arraydecay814 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr815 = getelementptr i32, i32* %arraydecay814, i64 6, !dbg !14801
  %196 = load i32, i32* %add.ptr815, align 4, !dbg !14801
  %197 = call i1 @llvm.is.constant.i32(i32 %196), !dbg !14801
  br i1 %197, label %cond.true816, label %cond.false836, !dbg !14801

cond.true816:                                     ; preds = %cond.end806
  %arraydecay817 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr818 = getelementptr i32, i32* %arraydecay817, i64 6, !dbg !14801
  %198 = load i32, i32* %add.ptr818, align 4, !dbg !14801
  %and819 = and i32 %198, 255, !dbg !14801
  %shl820 = shl i32 %and819, 24, !dbg !14801
  %arraydecay821 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr822 = getelementptr i32, i32* %arraydecay821, i64 6, !dbg !14801
  %199 = load i32, i32* %add.ptr822, align 4, !dbg !14801
  %and823 = and i32 %199, 65280, !dbg !14801
  %shl824 = shl i32 %and823, 8, !dbg !14801
  %or825 = or i32 %shl820, %shl824, !dbg !14801
  %arraydecay826 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr827 = getelementptr i32, i32* %arraydecay826, i64 6, !dbg !14801
  %200 = load i32, i32* %add.ptr827, align 4, !dbg !14801
  %and828 = and i32 %200, 16711680, !dbg !14801
  %shr829 = lshr i32 %and828, 8, !dbg !14801
  %or830 = or i32 %or825, %shr829, !dbg !14801
  %arraydecay831 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr832 = getelementptr i32, i32* %arraydecay831, i64 6, !dbg !14801
  %201 = load i32, i32* %add.ptr832, align 4, !dbg !14801
  %and833 = and i32 %201, -16777216, !dbg !14801
  %shr834 = lshr i32 %and833, 24, !dbg !14801
  %or835 = or i32 %or830, %shr834, !dbg !14801
  br label %cond.end840, !dbg !14801

cond.false836:                                    ; preds = %cond.end806
  %arraydecay837 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr838 = getelementptr i32, i32* %arraydecay837, i64 6, !dbg !14801
  %202 = load i32, i32* %add.ptr838, align 4, !dbg !14801
  %call839 = call i32 @__fswab32(i32 %202) #10, !dbg !14801
  br label %cond.end840, !dbg !14801

cond.end840:                                      ; preds = %cond.false836, %cond.true816
  %cond841 = phi i32 [ %or835, %cond.true816 ], [ %call839, %cond.false836 ], !dbg !14801
  %and842 = and i32 %cond841, -4096, !dbg !14801
  %203 = load i32, i32* %_v743, align 4, !dbg !14801
  %and843 = and i32 %203, 4095, !dbg !14801
  %shl844 = shl i32 %and843, 0, !dbg !14801
  %or845 = or i32 %and842, %shl844, !dbg !14801
  %and846 = and i32 %or845, 65280, !dbg !14801
  %shl847 = shl i32 %and846, 8, !dbg !14801
  %or848 = or i32 %shl813, %shl847, !dbg !14801
  %arraydecay849 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr850 = getelementptr i32, i32* %arraydecay849, i64 6, !dbg !14801
  %204 = load i32, i32* %add.ptr850, align 4, !dbg !14801
  %205 = call i1 @llvm.is.constant.i32(i32 %204), !dbg !14801
  br i1 %205, label %cond.true851, label %cond.false871, !dbg !14801

cond.true851:                                     ; preds = %cond.end840
  %arraydecay852 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr853 = getelementptr i32, i32* %arraydecay852, i64 6, !dbg !14801
  %206 = load i32, i32* %add.ptr853, align 4, !dbg !14801
  %and854 = and i32 %206, 255, !dbg !14801
  %shl855 = shl i32 %and854, 24, !dbg !14801
  %arraydecay856 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr857 = getelementptr i32, i32* %arraydecay856, i64 6, !dbg !14801
  %207 = load i32, i32* %add.ptr857, align 4, !dbg !14801
  %and858 = and i32 %207, 65280, !dbg !14801
  %shl859 = shl i32 %and858, 8, !dbg !14801
  %or860 = or i32 %shl855, %shl859, !dbg !14801
  %arraydecay861 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr862 = getelementptr i32, i32* %arraydecay861, i64 6, !dbg !14801
  %208 = load i32, i32* %add.ptr862, align 4, !dbg !14801
  %and863 = and i32 %208, 16711680, !dbg !14801
  %shr864 = lshr i32 %and863, 8, !dbg !14801
  %or865 = or i32 %or860, %shr864, !dbg !14801
  %arraydecay866 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr867 = getelementptr i32, i32* %arraydecay866, i64 6, !dbg !14801
  %209 = load i32, i32* %add.ptr867, align 4, !dbg !14801
  %and868 = and i32 %209, -16777216, !dbg !14801
  %shr869 = lshr i32 %and868, 24, !dbg !14801
  %or870 = or i32 %or865, %shr869, !dbg !14801
  br label %cond.end875, !dbg !14801

cond.false871:                                    ; preds = %cond.end840
  %arraydecay872 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr873 = getelementptr i32, i32* %arraydecay872, i64 6, !dbg !14801
  %210 = load i32, i32* %add.ptr873, align 4, !dbg !14801
  %call874 = call i32 @__fswab32(i32 %210) #10, !dbg !14801
  br label %cond.end875, !dbg !14801

cond.end875:                                      ; preds = %cond.false871, %cond.true851
  %cond876 = phi i32 [ %or870, %cond.true851 ], [ %call874, %cond.false871 ], !dbg !14801
  %and877 = and i32 %cond876, -4096, !dbg !14801
  %211 = load i32, i32* %_v743, align 4, !dbg !14801
  %and878 = and i32 %211, 4095, !dbg !14801
  %shl879 = shl i32 %and878, 0, !dbg !14801
  %or880 = or i32 %and877, %shl879, !dbg !14801
  %and881 = and i32 %or880, 16711680, !dbg !14801
  %shr882 = lshr i32 %and881, 8, !dbg !14801
  %or883 = or i32 %or848, %shr882, !dbg !14801
  %arraydecay884 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr885 = getelementptr i32, i32* %arraydecay884, i64 6, !dbg !14801
  %212 = load i32, i32* %add.ptr885, align 4, !dbg !14801
  %213 = call i1 @llvm.is.constant.i32(i32 %212), !dbg !14801
  br i1 %213, label %cond.true886, label %cond.false906, !dbg !14801

cond.true886:                                     ; preds = %cond.end875
  %arraydecay887 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr888 = getelementptr i32, i32* %arraydecay887, i64 6, !dbg !14801
  %214 = load i32, i32* %add.ptr888, align 4, !dbg !14801
  %and889 = and i32 %214, 255, !dbg !14801
  %shl890 = shl i32 %and889, 24, !dbg !14801
  %arraydecay891 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr892 = getelementptr i32, i32* %arraydecay891, i64 6, !dbg !14801
  %215 = load i32, i32* %add.ptr892, align 4, !dbg !14801
  %and893 = and i32 %215, 65280, !dbg !14801
  %shl894 = shl i32 %and893, 8, !dbg !14801
  %or895 = or i32 %shl890, %shl894, !dbg !14801
  %arraydecay896 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr897 = getelementptr i32, i32* %arraydecay896, i64 6, !dbg !14801
  %216 = load i32, i32* %add.ptr897, align 4, !dbg !14801
  %and898 = and i32 %216, 16711680, !dbg !14801
  %shr899 = lshr i32 %and898, 8, !dbg !14801
  %or900 = or i32 %or895, %shr899, !dbg !14801
  %arraydecay901 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr902 = getelementptr i32, i32* %arraydecay901, i64 6, !dbg !14801
  %217 = load i32, i32* %add.ptr902, align 4, !dbg !14801
  %and903 = and i32 %217, -16777216, !dbg !14801
  %shr904 = lshr i32 %and903, 24, !dbg !14801
  %or905 = or i32 %or900, %shr904, !dbg !14801
  br label %cond.end910, !dbg !14801

cond.false906:                                    ; preds = %cond.end875
  %arraydecay907 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr908 = getelementptr i32, i32* %arraydecay907, i64 6, !dbg !14801
  %218 = load i32, i32* %add.ptr908, align 4, !dbg !14801
  %call909 = call i32 @__fswab32(i32 %218) #10, !dbg !14801
  br label %cond.end910, !dbg !14801

cond.end910:                                      ; preds = %cond.false906, %cond.true886
  %cond911 = phi i32 [ %or905, %cond.true886 ], [ %call909, %cond.false906 ], !dbg !14801
  %and912 = and i32 %cond911, -4096, !dbg !14801
  %219 = load i32, i32* %_v743, align 4, !dbg !14801
  %and913 = and i32 %219, 4095, !dbg !14801
  %shl914 = shl i32 %and913, 0, !dbg !14801
  %or915 = or i32 %and912, %shl914, !dbg !14801
  %and916 = and i32 %or915, -16777216, !dbg !14801
  %shr917 = lshr i32 %and916, 24, !dbg !14801
  %or918 = or i32 %or883, %shr917, !dbg !14801
  br label %cond.end953, !dbg !14801

cond.false919:                                    ; preds = %cond.end773
  %arraydecay920 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr921 = getelementptr i32, i32* %arraydecay920, i64 6, !dbg !14801
  %220 = load i32, i32* %add.ptr921, align 4, !dbg !14801
  %221 = call i1 @llvm.is.constant.i32(i32 %220), !dbg !14801
  br i1 %221, label %cond.true922, label %cond.false942, !dbg !14801

cond.true922:                                     ; preds = %cond.false919
  %arraydecay923 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr924 = getelementptr i32, i32* %arraydecay923, i64 6, !dbg !14801
  %222 = load i32, i32* %add.ptr924, align 4, !dbg !14801
  %and925 = and i32 %222, 255, !dbg !14801
  %shl926 = shl i32 %and925, 24, !dbg !14801
  %arraydecay927 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr928 = getelementptr i32, i32* %arraydecay927, i64 6, !dbg !14801
  %223 = load i32, i32* %add.ptr928, align 4, !dbg !14801
  %and929 = and i32 %223, 65280, !dbg !14801
  %shl930 = shl i32 %and929, 8, !dbg !14801
  %or931 = or i32 %shl926, %shl930, !dbg !14801
  %arraydecay932 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr933 = getelementptr i32, i32* %arraydecay932, i64 6, !dbg !14801
  %224 = load i32, i32* %add.ptr933, align 4, !dbg !14801
  %and934 = and i32 %224, 16711680, !dbg !14801
  %shr935 = lshr i32 %and934, 8, !dbg !14801
  %or936 = or i32 %or931, %shr935, !dbg !14801
  %arraydecay937 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr938 = getelementptr i32, i32* %arraydecay937, i64 6, !dbg !14801
  %225 = load i32, i32* %add.ptr938, align 4, !dbg !14801
  %and939 = and i32 %225, -16777216, !dbg !14801
  %shr940 = lshr i32 %and939, 24, !dbg !14801
  %or941 = or i32 %or936, %shr940, !dbg !14801
  br label %cond.end946, !dbg !14801

cond.false942:                                    ; preds = %cond.false919
  %arraydecay943 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr944 = getelementptr i32, i32* %arraydecay943, i64 6, !dbg !14801
  %226 = load i32, i32* %add.ptr944, align 4, !dbg !14801
  %call945 = call i32 @__fswab32(i32 %226) #10, !dbg !14801
  br label %cond.end946, !dbg !14801

cond.end946:                                      ; preds = %cond.false942, %cond.true922
  %cond947 = phi i32 [ %or941, %cond.true922 ], [ %call945, %cond.false942 ], !dbg !14801
  %and948 = and i32 %cond947, -4096, !dbg !14801
  %227 = load i32, i32* %_v743, align 4, !dbg !14801
  %and949 = and i32 %227, 4095, !dbg !14801
  %shl950 = shl i32 %and949, 0, !dbg !14801
  %or951 = or i32 %and948, %shl950, !dbg !14801
  %call952 = call i32 @__fswab32(i32 %or951) #10, !dbg !14801
  br label %cond.end953, !dbg !14801

cond.end953:                                      ; preds = %cond.end946, %cond.end910
  %cond954 = phi i32 [ %or918, %cond.end910 ], [ %call952, %cond.end946 ], !dbg !14801
  %arraydecay955 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14801
  %add.ptr956 = getelementptr i32, i32* %arraydecay955, i64 6, !dbg !14801
  store i32 %cond954, i32* %add.ptr956, align 4, !dbg !14801
  br label %do.end957, !dbg !14801

do.end957:                                        ; preds = %cond.end953
  br label %if.end958, !dbg !14804

if.end958:                                        ; preds = %do.end957, %if.end306
  br label %do.body959, !dbg !14805

do.body959:                                       ; preds = %if.end958
  call void @llvm.dbg.declare(metadata i32* %_v960, metadata !14806, metadata !DIExpression()), !dbg !14808
  store i32 1, i32* %_v960, align 4, !dbg !14808
  br label %do.body961, !dbg !14808

do.body961:                                       ; preds = %do.body959
  br label %do.end962, !dbg !14809

do.end962:                                        ; preds = %do.body961
  %arraydecay963 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr964 = getelementptr i32, i32* %arraydecay963, i64 3, !dbg !14808
  %228 = load i32, i32* %add.ptr964, align 4, !dbg !14808
  %229 = call i1 @llvm.is.constant.i32(i32 %228), !dbg !14808
  br i1 %229, label %cond.true965, label %cond.false985, !dbg !14808

cond.true965:                                     ; preds = %do.end962
  %arraydecay966 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr967 = getelementptr i32, i32* %arraydecay966, i64 3, !dbg !14808
  %230 = load i32, i32* %add.ptr967, align 4, !dbg !14808
  %and968 = and i32 %230, 255, !dbg !14808
  %shl969 = shl i32 %and968, 24, !dbg !14808
  %arraydecay970 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr971 = getelementptr i32, i32* %arraydecay970, i64 3, !dbg !14808
  %231 = load i32, i32* %add.ptr971, align 4, !dbg !14808
  %and972 = and i32 %231, 65280, !dbg !14808
  %shl973 = shl i32 %and972, 8, !dbg !14808
  %or974 = or i32 %shl969, %shl973, !dbg !14808
  %arraydecay975 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr976 = getelementptr i32, i32* %arraydecay975, i64 3, !dbg !14808
  %232 = load i32, i32* %add.ptr976, align 4, !dbg !14808
  %and977 = and i32 %232, 16711680, !dbg !14808
  %shr978 = lshr i32 %and977, 8, !dbg !14808
  %or979 = or i32 %or974, %shr978, !dbg !14808
  %arraydecay980 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr981 = getelementptr i32, i32* %arraydecay980, i64 3, !dbg !14808
  %233 = load i32, i32* %add.ptr981, align 4, !dbg !14808
  %and982 = and i32 %233, -16777216, !dbg !14808
  %shr983 = lshr i32 %and982, 24, !dbg !14808
  %or984 = or i32 %or979, %shr983, !dbg !14808
  br label %cond.end989, !dbg !14808

cond.false985:                                    ; preds = %do.end962
  %arraydecay986 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr987 = getelementptr i32, i32* %arraydecay986, i64 3, !dbg !14808
  %234 = load i32, i32* %add.ptr987, align 4, !dbg !14808
  %call988 = call i32 @__fswab32(i32 %234) #10, !dbg !14808
  br label %cond.end989, !dbg !14808

cond.end989:                                      ; preds = %cond.false985, %cond.true965
  %cond990 = phi i32 [ %or984, %cond.true965 ], [ %call988, %cond.false985 ], !dbg !14808
  %and991 = and i32 %cond990, -3, !dbg !14808
  %235 = load i32, i32* %_v960, align 4, !dbg !14808
  %and992 = and i32 %235, 1, !dbg !14808
  %shl993 = shl i32 %and992, 1, !dbg !14808
  %or994 = or i32 %and991, %shl993, !dbg !14808
  %236 = call i1 @llvm.is.constant.i32(i32 %or994), !dbg !14808
  br i1 %236, label %cond.true995, label %cond.false1135, !dbg !14808

cond.true995:                                     ; preds = %cond.end989
  %arraydecay996 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr997 = getelementptr i32, i32* %arraydecay996, i64 3, !dbg !14808
  %237 = load i32, i32* %add.ptr997, align 4, !dbg !14808
  %238 = call i1 @llvm.is.constant.i32(i32 %237), !dbg !14808
  br i1 %238, label %cond.true998, label %cond.false1018, !dbg !14808

cond.true998:                                     ; preds = %cond.true995
  %arraydecay999 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1000 = getelementptr i32, i32* %arraydecay999, i64 3, !dbg !14808
  %239 = load i32, i32* %add.ptr1000, align 4, !dbg !14808
  %and1001 = and i32 %239, 255, !dbg !14808
  %shl1002 = shl i32 %and1001, 24, !dbg !14808
  %arraydecay1003 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1004 = getelementptr i32, i32* %arraydecay1003, i64 3, !dbg !14808
  %240 = load i32, i32* %add.ptr1004, align 4, !dbg !14808
  %and1005 = and i32 %240, 65280, !dbg !14808
  %shl1006 = shl i32 %and1005, 8, !dbg !14808
  %or1007 = or i32 %shl1002, %shl1006, !dbg !14808
  %arraydecay1008 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1009 = getelementptr i32, i32* %arraydecay1008, i64 3, !dbg !14808
  %241 = load i32, i32* %add.ptr1009, align 4, !dbg !14808
  %and1010 = and i32 %241, 16711680, !dbg !14808
  %shr1011 = lshr i32 %and1010, 8, !dbg !14808
  %or1012 = or i32 %or1007, %shr1011, !dbg !14808
  %arraydecay1013 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1014 = getelementptr i32, i32* %arraydecay1013, i64 3, !dbg !14808
  %242 = load i32, i32* %add.ptr1014, align 4, !dbg !14808
  %and1015 = and i32 %242, -16777216, !dbg !14808
  %shr1016 = lshr i32 %and1015, 24, !dbg !14808
  %or1017 = or i32 %or1012, %shr1016, !dbg !14808
  br label %cond.end1022, !dbg !14808

cond.false1018:                                   ; preds = %cond.true995
  %arraydecay1019 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1020 = getelementptr i32, i32* %arraydecay1019, i64 3, !dbg !14808
  %243 = load i32, i32* %add.ptr1020, align 4, !dbg !14808
  %call1021 = call i32 @__fswab32(i32 %243) #10, !dbg !14808
  br label %cond.end1022, !dbg !14808

cond.end1022:                                     ; preds = %cond.false1018, %cond.true998
  %cond1023 = phi i32 [ %or1017, %cond.true998 ], [ %call1021, %cond.false1018 ], !dbg !14808
  %and1024 = and i32 %cond1023, -3, !dbg !14808
  %244 = load i32, i32* %_v960, align 4, !dbg !14808
  %and1025 = and i32 %244, 1, !dbg !14808
  %shl1026 = shl i32 %and1025, 1, !dbg !14808
  %or1027 = or i32 %and1024, %shl1026, !dbg !14808
  %and1028 = and i32 %or1027, 255, !dbg !14808
  %shl1029 = shl i32 %and1028, 24, !dbg !14808
  %arraydecay1030 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1031 = getelementptr i32, i32* %arraydecay1030, i64 3, !dbg !14808
  %245 = load i32, i32* %add.ptr1031, align 4, !dbg !14808
  %246 = call i1 @llvm.is.constant.i32(i32 %245), !dbg !14808
  br i1 %246, label %cond.true1032, label %cond.false1052, !dbg !14808

cond.true1032:                                    ; preds = %cond.end1022
  %arraydecay1033 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1034 = getelementptr i32, i32* %arraydecay1033, i64 3, !dbg !14808
  %247 = load i32, i32* %add.ptr1034, align 4, !dbg !14808
  %and1035 = and i32 %247, 255, !dbg !14808
  %shl1036 = shl i32 %and1035, 24, !dbg !14808
  %arraydecay1037 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1038 = getelementptr i32, i32* %arraydecay1037, i64 3, !dbg !14808
  %248 = load i32, i32* %add.ptr1038, align 4, !dbg !14808
  %and1039 = and i32 %248, 65280, !dbg !14808
  %shl1040 = shl i32 %and1039, 8, !dbg !14808
  %or1041 = or i32 %shl1036, %shl1040, !dbg !14808
  %arraydecay1042 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1043 = getelementptr i32, i32* %arraydecay1042, i64 3, !dbg !14808
  %249 = load i32, i32* %add.ptr1043, align 4, !dbg !14808
  %and1044 = and i32 %249, 16711680, !dbg !14808
  %shr1045 = lshr i32 %and1044, 8, !dbg !14808
  %or1046 = or i32 %or1041, %shr1045, !dbg !14808
  %arraydecay1047 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1048 = getelementptr i32, i32* %arraydecay1047, i64 3, !dbg !14808
  %250 = load i32, i32* %add.ptr1048, align 4, !dbg !14808
  %and1049 = and i32 %250, -16777216, !dbg !14808
  %shr1050 = lshr i32 %and1049, 24, !dbg !14808
  %or1051 = or i32 %or1046, %shr1050, !dbg !14808
  br label %cond.end1056, !dbg !14808

cond.false1052:                                   ; preds = %cond.end1022
  %arraydecay1053 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1054 = getelementptr i32, i32* %arraydecay1053, i64 3, !dbg !14808
  %251 = load i32, i32* %add.ptr1054, align 4, !dbg !14808
  %call1055 = call i32 @__fswab32(i32 %251) #10, !dbg !14808
  br label %cond.end1056, !dbg !14808

cond.end1056:                                     ; preds = %cond.false1052, %cond.true1032
  %cond1057 = phi i32 [ %or1051, %cond.true1032 ], [ %call1055, %cond.false1052 ], !dbg !14808
  %and1058 = and i32 %cond1057, -3, !dbg !14808
  %252 = load i32, i32* %_v960, align 4, !dbg !14808
  %and1059 = and i32 %252, 1, !dbg !14808
  %shl1060 = shl i32 %and1059, 1, !dbg !14808
  %or1061 = or i32 %and1058, %shl1060, !dbg !14808
  %and1062 = and i32 %or1061, 65280, !dbg !14808
  %shl1063 = shl i32 %and1062, 8, !dbg !14808
  %or1064 = or i32 %shl1029, %shl1063, !dbg !14808
  %arraydecay1065 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1066 = getelementptr i32, i32* %arraydecay1065, i64 3, !dbg !14808
  %253 = load i32, i32* %add.ptr1066, align 4, !dbg !14808
  %254 = call i1 @llvm.is.constant.i32(i32 %253), !dbg !14808
  br i1 %254, label %cond.true1067, label %cond.false1087, !dbg !14808

cond.true1067:                                    ; preds = %cond.end1056
  %arraydecay1068 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1069 = getelementptr i32, i32* %arraydecay1068, i64 3, !dbg !14808
  %255 = load i32, i32* %add.ptr1069, align 4, !dbg !14808
  %and1070 = and i32 %255, 255, !dbg !14808
  %shl1071 = shl i32 %and1070, 24, !dbg !14808
  %arraydecay1072 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1073 = getelementptr i32, i32* %arraydecay1072, i64 3, !dbg !14808
  %256 = load i32, i32* %add.ptr1073, align 4, !dbg !14808
  %and1074 = and i32 %256, 65280, !dbg !14808
  %shl1075 = shl i32 %and1074, 8, !dbg !14808
  %or1076 = or i32 %shl1071, %shl1075, !dbg !14808
  %arraydecay1077 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1078 = getelementptr i32, i32* %arraydecay1077, i64 3, !dbg !14808
  %257 = load i32, i32* %add.ptr1078, align 4, !dbg !14808
  %and1079 = and i32 %257, 16711680, !dbg !14808
  %shr1080 = lshr i32 %and1079, 8, !dbg !14808
  %or1081 = or i32 %or1076, %shr1080, !dbg !14808
  %arraydecay1082 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1083 = getelementptr i32, i32* %arraydecay1082, i64 3, !dbg !14808
  %258 = load i32, i32* %add.ptr1083, align 4, !dbg !14808
  %and1084 = and i32 %258, -16777216, !dbg !14808
  %shr1085 = lshr i32 %and1084, 24, !dbg !14808
  %or1086 = or i32 %or1081, %shr1085, !dbg !14808
  br label %cond.end1091, !dbg !14808

cond.false1087:                                   ; preds = %cond.end1056
  %arraydecay1088 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1089 = getelementptr i32, i32* %arraydecay1088, i64 3, !dbg !14808
  %259 = load i32, i32* %add.ptr1089, align 4, !dbg !14808
  %call1090 = call i32 @__fswab32(i32 %259) #10, !dbg !14808
  br label %cond.end1091, !dbg !14808

cond.end1091:                                     ; preds = %cond.false1087, %cond.true1067
  %cond1092 = phi i32 [ %or1086, %cond.true1067 ], [ %call1090, %cond.false1087 ], !dbg !14808
  %and1093 = and i32 %cond1092, -3, !dbg !14808
  %260 = load i32, i32* %_v960, align 4, !dbg !14808
  %and1094 = and i32 %260, 1, !dbg !14808
  %shl1095 = shl i32 %and1094, 1, !dbg !14808
  %or1096 = or i32 %and1093, %shl1095, !dbg !14808
  %and1097 = and i32 %or1096, 16711680, !dbg !14808
  %shr1098 = lshr i32 %and1097, 8, !dbg !14808
  %or1099 = or i32 %or1064, %shr1098, !dbg !14808
  %arraydecay1100 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1101 = getelementptr i32, i32* %arraydecay1100, i64 3, !dbg !14808
  %261 = load i32, i32* %add.ptr1101, align 4, !dbg !14808
  %262 = call i1 @llvm.is.constant.i32(i32 %261), !dbg !14808
  br i1 %262, label %cond.true1102, label %cond.false1122, !dbg !14808

cond.true1102:                                    ; preds = %cond.end1091
  %arraydecay1103 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1104 = getelementptr i32, i32* %arraydecay1103, i64 3, !dbg !14808
  %263 = load i32, i32* %add.ptr1104, align 4, !dbg !14808
  %and1105 = and i32 %263, 255, !dbg !14808
  %shl1106 = shl i32 %and1105, 24, !dbg !14808
  %arraydecay1107 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1108 = getelementptr i32, i32* %arraydecay1107, i64 3, !dbg !14808
  %264 = load i32, i32* %add.ptr1108, align 4, !dbg !14808
  %and1109 = and i32 %264, 65280, !dbg !14808
  %shl1110 = shl i32 %and1109, 8, !dbg !14808
  %or1111 = or i32 %shl1106, %shl1110, !dbg !14808
  %arraydecay1112 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1113 = getelementptr i32, i32* %arraydecay1112, i64 3, !dbg !14808
  %265 = load i32, i32* %add.ptr1113, align 4, !dbg !14808
  %and1114 = and i32 %265, 16711680, !dbg !14808
  %shr1115 = lshr i32 %and1114, 8, !dbg !14808
  %or1116 = or i32 %or1111, %shr1115, !dbg !14808
  %arraydecay1117 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1118 = getelementptr i32, i32* %arraydecay1117, i64 3, !dbg !14808
  %266 = load i32, i32* %add.ptr1118, align 4, !dbg !14808
  %and1119 = and i32 %266, -16777216, !dbg !14808
  %shr1120 = lshr i32 %and1119, 24, !dbg !14808
  %or1121 = or i32 %or1116, %shr1120, !dbg !14808
  br label %cond.end1126, !dbg !14808

cond.false1122:                                   ; preds = %cond.end1091
  %arraydecay1123 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1124 = getelementptr i32, i32* %arraydecay1123, i64 3, !dbg !14808
  %267 = load i32, i32* %add.ptr1124, align 4, !dbg !14808
  %call1125 = call i32 @__fswab32(i32 %267) #10, !dbg !14808
  br label %cond.end1126, !dbg !14808

cond.end1126:                                     ; preds = %cond.false1122, %cond.true1102
  %cond1127 = phi i32 [ %or1121, %cond.true1102 ], [ %call1125, %cond.false1122 ], !dbg !14808
  %and1128 = and i32 %cond1127, -3, !dbg !14808
  %268 = load i32, i32* %_v960, align 4, !dbg !14808
  %and1129 = and i32 %268, 1, !dbg !14808
  %shl1130 = shl i32 %and1129, 1, !dbg !14808
  %or1131 = or i32 %and1128, %shl1130, !dbg !14808
  %and1132 = and i32 %or1131, -16777216, !dbg !14808
  %shr1133 = lshr i32 %and1132, 24, !dbg !14808
  %or1134 = or i32 %or1099, %shr1133, !dbg !14808
  br label %cond.end1169, !dbg !14808

cond.false1135:                                   ; preds = %cond.end989
  %arraydecay1136 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1137 = getelementptr i32, i32* %arraydecay1136, i64 3, !dbg !14808
  %269 = load i32, i32* %add.ptr1137, align 4, !dbg !14808
  %270 = call i1 @llvm.is.constant.i32(i32 %269), !dbg !14808
  br i1 %270, label %cond.true1138, label %cond.false1158, !dbg !14808

cond.true1138:                                    ; preds = %cond.false1135
  %arraydecay1139 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1140 = getelementptr i32, i32* %arraydecay1139, i64 3, !dbg !14808
  %271 = load i32, i32* %add.ptr1140, align 4, !dbg !14808
  %and1141 = and i32 %271, 255, !dbg !14808
  %shl1142 = shl i32 %and1141, 24, !dbg !14808
  %arraydecay1143 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1144 = getelementptr i32, i32* %arraydecay1143, i64 3, !dbg !14808
  %272 = load i32, i32* %add.ptr1144, align 4, !dbg !14808
  %and1145 = and i32 %272, 65280, !dbg !14808
  %shl1146 = shl i32 %and1145, 8, !dbg !14808
  %or1147 = or i32 %shl1142, %shl1146, !dbg !14808
  %arraydecay1148 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1149 = getelementptr i32, i32* %arraydecay1148, i64 3, !dbg !14808
  %273 = load i32, i32* %add.ptr1149, align 4, !dbg !14808
  %and1150 = and i32 %273, 16711680, !dbg !14808
  %shr1151 = lshr i32 %and1150, 8, !dbg !14808
  %or1152 = or i32 %or1147, %shr1151, !dbg !14808
  %arraydecay1153 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1154 = getelementptr i32, i32* %arraydecay1153, i64 3, !dbg !14808
  %274 = load i32, i32* %add.ptr1154, align 4, !dbg !14808
  %and1155 = and i32 %274, -16777216, !dbg !14808
  %shr1156 = lshr i32 %and1155, 24, !dbg !14808
  %or1157 = or i32 %or1152, %shr1156, !dbg !14808
  br label %cond.end1162, !dbg !14808

cond.false1158:                                   ; preds = %cond.false1135
  %arraydecay1159 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1160 = getelementptr i32, i32* %arraydecay1159, i64 3, !dbg !14808
  %275 = load i32, i32* %add.ptr1160, align 4, !dbg !14808
  %call1161 = call i32 @__fswab32(i32 %275) #10, !dbg !14808
  br label %cond.end1162, !dbg !14808

cond.end1162:                                     ; preds = %cond.false1158, %cond.true1138
  %cond1163 = phi i32 [ %or1157, %cond.true1138 ], [ %call1161, %cond.false1158 ], !dbg !14808
  %and1164 = and i32 %cond1163, -3, !dbg !14808
  %276 = load i32, i32* %_v960, align 4, !dbg !14808
  %and1165 = and i32 %276, 1, !dbg !14808
  %shl1166 = shl i32 %and1165, 1, !dbg !14808
  %or1167 = or i32 %and1164, %shl1166, !dbg !14808
  %call1168 = call i32 @__fswab32(i32 %or1167) #10, !dbg !14808
  br label %cond.end1169, !dbg !14808

cond.end1169:                                     ; preds = %cond.end1162, %cond.end1126
  %cond1170 = phi i32 [ %or1134, %cond.end1126 ], [ %call1168, %cond.end1162 ], !dbg !14808
  %arraydecay1171 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14808
  %add.ptr1172 = getelementptr i32, i32* %arraydecay1171, i64 3, !dbg !14808
  store i32 %cond1170, i32* %add.ptr1172, align 4, !dbg !14808
  br label %do.end1173, !dbg !14808

do.end1173:                                       ; preds = %cond.end1169
  br label %do.body1174, !dbg !14811

do.body1174:                                      ; preds = %do.end1173
  call void @llvm.dbg.declare(metadata i32* %_v1175, metadata !14812, metadata !DIExpression()), !dbg !14814
  store i32 1, i32* %_v1175, align 4, !dbg !14814
  br label %do.body1176, !dbg !14814

do.body1176:                                      ; preds = %do.body1174
  br label %do.end1177, !dbg !14815

do.end1177:                                       ; preds = %do.body1176
  %arraydecay1178 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1179 = getelementptr i32, i32* %arraydecay1178, i64 3, !dbg !14814
  %277 = load i32, i32* %add.ptr1179, align 4, !dbg !14814
  %278 = call i1 @llvm.is.constant.i32(i32 %277), !dbg !14814
  br i1 %278, label %cond.true1180, label %cond.false1200, !dbg !14814

cond.true1180:                                    ; preds = %do.end1177
  %arraydecay1181 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1182 = getelementptr i32, i32* %arraydecay1181, i64 3, !dbg !14814
  %279 = load i32, i32* %add.ptr1182, align 4, !dbg !14814
  %and1183 = and i32 %279, 255, !dbg !14814
  %shl1184 = shl i32 %and1183, 24, !dbg !14814
  %arraydecay1185 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1186 = getelementptr i32, i32* %arraydecay1185, i64 3, !dbg !14814
  %280 = load i32, i32* %add.ptr1186, align 4, !dbg !14814
  %and1187 = and i32 %280, 65280, !dbg !14814
  %shl1188 = shl i32 %and1187, 8, !dbg !14814
  %or1189 = or i32 %shl1184, %shl1188, !dbg !14814
  %arraydecay1190 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1191 = getelementptr i32, i32* %arraydecay1190, i64 3, !dbg !14814
  %281 = load i32, i32* %add.ptr1191, align 4, !dbg !14814
  %and1192 = and i32 %281, 16711680, !dbg !14814
  %shr1193 = lshr i32 %and1192, 8, !dbg !14814
  %or1194 = or i32 %or1189, %shr1193, !dbg !14814
  %arraydecay1195 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1196 = getelementptr i32, i32* %arraydecay1195, i64 3, !dbg !14814
  %282 = load i32, i32* %add.ptr1196, align 4, !dbg !14814
  %and1197 = and i32 %282, -16777216, !dbg !14814
  %shr1198 = lshr i32 %and1197, 24, !dbg !14814
  %or1199 = or i32 %or1194, %shr1198, !dbg !14814
  br label %cond.end1204, !dbg !14814

cond.false1200:                                   ; preds = %do.end1177
  %arraydecay1201 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1202 = getelementptr i32, i32* %arraydecay1201, i64 3, !dbg !14814
  %283 = load i32, i32* %add.ptr1202, align 4, !dbg !14814
  %call1203 = call i32 @__fswab32(i32 %283) #10, !dbg !14814
  br label %cond.end1204, !dbg !14814

cond.end1204:                                     ; preds = %cond.false1200, %cond.true1180
  %cond1205 = phi i32 [ %or1199, %cond.true1180 ], [ %call1203, %cond.false1200 ], !dbg !14814
  %and1206 = and i32 %cond1205, -9, !dbg !14814
  %284 = load i32, i32* %_v1175, align 4, !dbg !14814
  %and1207 = and i32 %284, 1, !dbg !14814
  %shl1208 = shl i32 %and1207, 3, !dbg !14814
  %or1209 = or i32 %and1206, %shl1208, !dbg !14814
  %285 = call i1 @llvm.is.constant.i32(i32 %or1209), !dbg !14814
  br i1 %285, label %cond.true1210, label %cond.false1350, !dbg !14814

cond.true1210:                                    ; preds = %cond.end1204
  %arraydecay1211 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1212 = getelementptr i32, i32* %arraydecay1211, i64 3, !dbg !14814
  %286 = load i32, i32* %add.ptr1212, align 4, !dbg !14814
  %287 = call i1 @llvm.is.constant.i32(i32 %286), !dbg !14814
  br i1 %287, label %cond.true1213, label %cond.false1233, !dbg !14814

cond.true1213:                                    ; preds = %cond.true1210
  %arraydecay1214 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1215 = getelementptr i32, i32* %arraydecay1214, i64 3, !dbg !14814
  %288 = load i32, i32* %add.ptr1215, align 4, !dbg !14814
  %and1216 = and i32 %288, 255, !dbg !14814
  %shl1217 = shl i32 %and1216, 24, !dbg !14814
  %arraydecay1218 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1219 = getelementptr i32, i32* %arraydecay1218, i64 3, !dbg !14814
  %289 = load i32, i32* %add.ptr1219, align 4, !dbg !14814
  %and1220 = and i32 %289, 65280, !dbg !14814
  %shl1221 = shl i32 %and1220, 8, !dbg !14814
  %or1222 = or i32 %shl1217, %shl1221, !dbg !14814
  %arraydecay1223 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1224 = getelementptr i32, i32* %arraydecay1223, i64 3, !dbg !14814
  %290 = load i32, i32* %add.ptr1224, align 4, !dbg !14814
  %and1225 = and i32 %290, 16711680, !dbg !14814
  %shr1226 = lshr i32 %and1225, 8, !dbg !14814
  %or1227 = or i32 %or1222, %shr1226, !dbg !14814
  %arraydecay1228 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1229 = getelementptr i32, i32* %arraydecay1228, i64 3, !dbg !14814
  %291 = load i32, i32* %add.ptr1229, align 4, !dbg !14814
  %and1230 = and i32 %291, -16777216, !dbg !14814
  %shr1231 = lshr i32 %and1230, 24, !dbg !14814
  %or1232 = or i32 %or1227, %shr1231, !dbg !14814
  br label %cond.end1237, !dbg !14814

cond.false1233:                                   ; preds = %cond.true1210
  %arraydecay1234 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1235 = getelementptr i32, i32* %arraydecay1234, i64 3, !dbg !14814
  %292 = load i32, i32* %add.ptr1235, align 4, !dbg !14814
  %call1236 = call i32 @__fswab32(i32 %292) #10, !dbg !14814
  br label %cond.end1237, !dbg !14814

cond.end1237:                                     ; preds = %cond.false1233, %cond.true1213
  %cond1238 = phi i32 [ %or1232, %cond.true1213 ], [ %call1236, %cond.false1233 ], !dbg !14814
  %and1239 = and i32 %cond1238, -9, !dbg !14814
  %293 = load i32, i32* %_v1175, align 4, !dbg !14814
  %and1240 = and i32 %293, 1, !dbg !14814
  %shl1241 = shl i32 %and1240, 3, !dbg !14814
  %or1242 = or i32 %and1239, %shl1241, !dbg !14814
  %and1243 = and i32 %or1242, 255, !dbg !14814
  %shl1244 = shl i32 %and1243, 24, !dbg !14814
  %arraydecay1245 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1246 = getelementptr i32, i32* %arraydecay1245, i64 3, !dbg !14814
  %294 = load i32, i32* %add.ptr1246, align 4, !dbg !14814
  %295 = call i1 @llvm.is.constant.i32(i32 %294), !dbg !14814
  br i1 %295, label %cond.true1247, label %cond.false1267, !dbg !14814

cond.true1247:                                    ; preds = %cond.end1237
  %arraydecay1248 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1249 = getelementptr i32, i32* %arraydecay1248, i64 3, !dbg !14814
  %296 = load i32, i32* %add.ptr1249, align 4, !dbg !14814
  %and1250 = and i32 %296, 255, !dbg !14814
  %shl1251 = shl i32 %and1250, 24, !dbg !14814
  %arraydecay1252 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1253 = getelementptr i32, i32* %arraydecay1252, i64 3, !dbg !14814
  %297 = load i32, i32* %add.ptr1253, align 4, !dbg !14814
  %and1254 = and i32 %297, 65280, !dbg !14814
  %shl1255 = shl i32 %and1254, 8, !dbg !14814
  %or1256 = or i32 %shl1251, %shl1255, !dbg !14814
  %arraydecay1257 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1258 = getelementptr i32, i32* %arraydecay1257, i64 3, !dbg !14814
  %298 = load i32, i32* %add.ptr1258, align 4, !dbg !14814
  %and1259 = and i32 %298, 16711680, !dbg !14814
  %shr1260 = lshr i32 %and1259, 8, !dbg !14814
  %or1261 = or i32 %or1256, %shr1260, !dbg !14814
  %arraydecay1262 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1263 = getelementptr i32, i32* %arraydecay1262, i64 3, !dbg !14814
  %299 = load i32, i32* %add.ptr1263, align 4, !dbg !14814
  %and1264 = and i32 %299, -16777216, !dbg !14814
  %shr1265 = lshr i32 %and1264, 24, !dbg !14814
  %or1266 = or i32 %or1261, %shr1265, !dbg !14814
  br label %cond.end1271, !dbg !14814

cond.false1267:                                   ; preds = %cond.end1237
  %arraydecay1268 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1269 = getelementptr i32, i32* %arraydecay1268, i64 3, !dbg !14814
  %300 = load i32, i32* %add.ptr1269, align 4, !dbg !14814
  %call1270 = call i32 @__fswab32(i32 %300) #10, !dbg !14814
  br label %cond.end1271, !dbg !14814

cond.end1271:                                     ; preds = %cond.false1267, %cond.true1247
  %cond1272 = phi i32 [ %or1266, %cond.true1247 ], [ %call1270, %cond.false1267 ], !dbg !14814
  %and1273 = and i32 %cond1272, -9, !dbg !14814
  %301 = load i32, i32* %_v1175, align 4, !dbg !14814
  %and1274 = and i32 %301, 1, !dbg !14814
  %shl1275 = shl i32 %and1274, 3, !dbg !14814
  %or1276 = or i32 %and1273, %shl1275, !dbg !14814
  %and1277 = and i32 %or1276, 65280, !dbg !14814
  %shl1278 = shl i32 %and1277, 8, !dbg !14814
  %or1279 = or i32 %shl1244, %shl1278, !dbg !14814
  %arraydecay1280 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1281 = getelementptr i32, i32* %arraydecay1280, i64 3, !dbg !14814
  %302 = load i32, i32* %add.ptr1281, align 4, !dbg !14814
  %303 = call i1 @llvm.is.constant.i32(i32 %302), !dbg !14814
  br i1 %303, label %cond.true1282, label %cond.false1302, !dbg !14814

cond.true1282:                                    ; preds = %cond.end1271
  %arraydecay1283 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1284 = getelementptr i32, i32* %arraydecay1283, i64 3, !dbg !14814
  %304 = load i32, i32* %add.ptr1284, align 4, !dbg !14814
  %and1285 = and i32 %304, 255, !dbg !14814
  %shl1286 = shl i32 %and1285, 24, !dbg !14814
  %arraydecay1287 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1288 = getelementptr i32, i32* %arraydecay1287, i64 3, !dbg !14814
  %305 = load i32, i32* %add.ptr1288, align 4, !dbg !14814
  %and1289 = and i32 %305, 65280, !dbg !14814
  %shl1290 = shl i32 %and1289, 8, !dbg !14814
  %or1291 = or i32 %shl1286, %shl1290, !dbg !14814
  %arraydecay1292 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1293 = getelementptr i32, i32* %arraydecay1292, i64 3, !dbg !14814
  %306 = load i32, i32* %add.ptr1293, align 4, !dbg !14814
  %and1294 = and i32 %306, 16711680, !dbg !14814
  %shr1295 = lshr i32 %and1294, 8, !dbg !14814
  %or1296 = or i32 %or1291, %shr1295, !dbg !14814
  %arraydecay1297 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1298 = getelementptr i32, i32* %arraydecay1297, i64 3, !dbg !14814
  %307 = load i32, i32* %add.ptr1298, align 4, !dbg !14814
  %and1299 = and i32 %307, -16777216, !dbg !14814
  %shr1300 = lshr i32 %and1299, 24, !dbg !14814
  %or1301 = or i32 %or1296, %shr1300, !dbg !14814
  br label %cond.end1306, !dbg !14814

cond.false1302:                                   ; preds = %cond.end1271
  %arraydecay1303 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1304 = getelementptr i32, i32* %arraydecay1303, i64 3, !dbg !14814
  %308 = load i32, i32* %add.ptr1304, align 4, !dbg !14814
  %call1305 = call i32 @__fswab32(i32 %308) #10, !dbg !14814
  br label %cond.end1306, !dbg !14814

cond.end1306:                                     ; preds = %cond.false1302, %cond.true1282
  %cond1307 = phi i32 [ %or1301, %cond.true1282 ], [ %call1305, %cond.false1302 ], !dbg !14814
  %and1308 = and i32 %cond1307, -9, !dbg !14814
  %309 = load i32, i32* %_v1175, align 4, !dbg !14814
  %and1309 = and i32 %309, 1, !dbg !14814
  %shl1310 = shl i32 %and1309, 3, !dbg !14814
  %or1311 = or i32 %and1308, %shl1310, !dbg !14814
  %and1312 = and i32 %or1311, 16711680, !dbg !14814
  %shr1313 = lshr i32 %and1312, 8, !dbg !14814
  %or1314 = or i32 %or1279, %shr1313, !dbg !14814
  %arraydecay1315 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1316 = getelementptr i32, i32* %arraydecay1315, i64 3, !dbg !14814
  %310 = load i32, i32* %add.ptr1316, align 4, !dbg !14814
  %311 = call i1 @llvm.is.constant.i32(i32 %310), !dbg !14814
  br i1 %311, label %cond.true1317, label %cond.false1337, !dbg !14814

cond.true1317:                                    ; preds = %cond.end1306
  %arraydecay1318 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1319 = getelementptr i32, i32* %arraydecay1318, i64 3, !dbg !14814
  %312 = load i32, i32* %add.ptr1319, align 4, !dbg !14814
  %and1320 = and i32 %312, 255, !dbg !14814
  %shl1321 = shl i32 %and1320, 24, !dbg !14814
  %arraydecay1322 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1323 = getelementptr i32, i32* %arraydecay1322, i64 3, !dbg !14814
  %313 = load i32, i32* %add.ptr1323, align 4, !dbg !14814
  %and1324 = and i32 %313, 65280, !dbg !14814
  %shl1325 = shl i32 %and1324, 8, !dbg !14814
  %or1326 = or i32 %shl1321, %shl1325, !dbg !14814
  %arraydecay1327 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1328 = getelementptr i32, i32* %arraydecay1327, i64 3, !dbg !14814
  %314 = load i32, i32* %add.ptr1328, align 4, !dbg !14814
  %and1329 = and i32 %314, 16711680, !dbg !14814
  %shr1330 = lshr i32 %and1329, 8, !dbg !14814
  %or1331 = or i32 %or1326, %shr1330, !dbg !14814
  %arraydecay1332 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1333 = getelementptr i32, i32* %arraydecay1332, i64 3, !dbg !14814
  %315 = load i32, i32* %add.ptr1333, align 4, !dbg !14814
  %and1334 = and i32 %315, -16777216, !dbg !14814
  %shr1335 = lshr i32 %and1334, 24, !dbg !14814
  %or1336 = or i32 %or1331, %shr1335, !dbg !14814
  br label %cond.end1341, !dbg !14814

cond.false1337:                                   ; preds = %cond.end1306
  %arraydecay1338 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1339 = getelementptr i32, i32* %arraydecay1338, i64 3, !dbg !14814
  %316 = load i32, i32* %add.ptr1339, align 4, !dbg !14814
  %call1340 = call i32 @__fswab32(i32 %316) #10, !dbg !14814
  br label %cond.end1341, !dbg !14814

cond.end1341:                                     ; preds = %cond.false1337, %cond.true1317
  %cond1342 = phi i32 [ %or1336, %cond.true1317 ], [ %call1340, %cond.false1337 ], !dbg !14814
  %and1343 = and i32 %cond1342, -9, !dbg !14814
  %317 = load i32, i32* %_v1175, align 4, !dbg !14814
  %and1344 = and i32 %317, 1, !dbg !14814
  %shl1345 = shl i32 %and1344, 3, !dbg !14814
  %or1346 = or i32 %and1343, %shl1345, !dbg !14814
  %and1347 = and i32 %or1346, -16777216, !dbg !14814
  %shr1348 = lshr i32 %and1347, 24, !dbg !14814
  %or1349 = or i32 %or1314, %shr1348, !dbg !14814
  br label %cond.end1384, !dbg !14814

cond.false1350:                                   ; preds = %cond.end1204
  %arraydecay1351 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1352 = getelementptr i32, i32* %arraydecay1351, i64 3, !dbg !14814
  %318 = load i32, i32* %add.ptr1352, align 4, !dbg !14814
  %319 = call i1 @llvm.is.constant.i32(i32 %318), !dbg !14814
  br i1 %319, label %cond.true1353, label %cond.false1373, !dbg !14814

cond.true1353:                                    ; preds = %cond.false1350
  %arraydecay1354 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1355 = getelementptr i32, i32* %arraydecay1354, i64 3, !dbg !14814
  %320 = load i32, i32* %add.ptr1355, align 4, !dbg !14814
  %and1356 = and i32 %320, 255, !dbg !14814
  %shl1357 = shl i32 %and1356, 24, !dbg !14814
  %arraydecay1358 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1359 = getelementptr i32, i32* %arraydecay1358, i64 3, !dbg !14814
  %321 = load i32, i32* %add.ptr1359, align 4, !dbg !14814
  %and1360 = and i32 %321, 65280, !dbg !14814
  %shl1361 = shl i32 %and1360, 8, !dbg !14814
  %or1362 = or i32 %shl1357, %shl1361, !dbg !14814
  %arraydecay1363 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1364 = getelementptr i32, i32* %arraydecay1363, i64 3, !dbg !14814
  %322 = load i32, i32* %add.ptr1364, align 4, !dbg !14814
  %and1365 = and i32 %322, 16711680, !dbg !14814
  %shr1366 = lshr i32 %and1365, 8, !dbg !14814
  %or1367 = or i32 %or1362, %shr1366, !dbg !14814
  %arraydecay1368 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1369 = getelementptr i32, i32* %arraydecay1368, i64 3, !dbg !14814
  %323 = load i32, i32* %add.ptr1369, align 4, !dbg !14814
  %and1370 = and i32 %323, -16777216, !dbg !14814
  %shr1371 = lshr i32 %and1370, 24, !dbg !14814
  %or1372 = or i32 %or1367, %shr1371, !dbg !14814
  br label %cond.end1377, !dbg !14814

cond.false1373:                                   ; preds = %cond.false1350
  %arraydecay1374 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1375 = getelementptr i32, i32* %arraydecay1374, i64 3, !dbg !14814
  %324 = load i32, i32* %add.ptr1375, align 4, !dbg !14814
  %call1376 = call i32 @__fswab32(i32 %324) #10, !dbg !14814
  br label %cond.end1377, !dbg !14814

cond.end1377:                                     ; preds = %cond.false1373, %cond.true1353
  %cond1378 = phi i32 [ %or1372, %cond.true1353 ], [ %call1376, %cond.false1373 ], !dbg !14814
  %and1379 = and i32 %cond1378, -9, !dbg !14814
  %325 = load i32, i32* %_v1175, align 4, !dbg !14814
  %and1380 = and i32 %325, 1, !dbg !14814
  %shl1381 = shl i32 %and1380, 3, !dbg !14814
  %or1382 = or i32 %and1379, %shl1381, !dbg !14814
  %call1383 = call i32 @__fswab32(i32 %or1382) #10, !dbg !14814
  br label %cond.end1384, !dbg !14814

cond.end1384:                                     ; preds = %cond.end1377, %cond.end1341
  %cond1385 = phi i32 [ %or1349, %cond.end1341 ], [ %call1383, %cond.end1377 ], !dbg !14814
  %arraydecay1386 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14814
  %add.ptr1387 = getelementptr i32, i32* %arraydecay1386, i64 3, !dbg !14814
  store i32 %cond1385, i32* %add.ptr1387, align 4, !dbg !14814
  br label %do.end1388, !dbg !14814

do.end1388:                                       ; preds = %cond.end1384
  %326 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14817
  %327 = load i16, i16* %vport.addr, align 2, !dbg !14818
  %arraydecay1389 = getelementptr inbounds [68 x i32], [68 x i32]* %in, i64 0, i64 0, !dbg !14819
  %328 = bitcast i32* %arraydecay1389 to i8*, !dbg !14819
  %call1390 = call i32 @mlx5_eswitch_modify_esw_vport_context(%struct.mlx5_core_dev* %326, i16 zeroext %327, i1 zeroext true, i8* %328) #8, !dbg !14820
  store i32 %call1390, i32* %retval, align 4, !dbg !14821
  br label %return, !dbg !14821

return:                                           ; preds = %do.end1388, %if.then
  %329 = load i32, i32* %retval, align 4, !dbg !14822
  ret i32 %329, !dbg !14822
}

; Function Attrs: noredzone
declare dso_local i32 @esw_acl_ingress_lgcy_setup(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noredzone
declare dso_local i32 @esw_acl_egress_lgcy_setup(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_set_vport_vlan(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i16 zeroext %vlan, i8 zeroext %qos) #0 !dbg !14823 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %vlan.addr = alloca i16, align 2
  %qos.addr = alloca i8, align 1
  %set_flags = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14826, metadata !DIExpression()), !dbg !14827
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !14828, metadata !DIExpression()), !dbg !14829
  store i16 %vlan, i16* %vlan.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan.addr, metadata !14830, metadata !DIExpression()), !dbg !14831
  store i8 %qos, i8* %qos.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %qos.addr, metadata !14832, metadata !DIExpression()), !dbg !14833
  call void @llvm.dbg.declare(metadata i8* %set_flags, metadata !14834, metadata !DIExpression()), !dbg !14835
  store i8 0, i8* %set_flags, align 1, !dbg !14835
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14836, metadata !DIExpression()), !dbg !14837
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14838
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !14838
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !14838

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14838
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !14838
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14838
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !14838
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14838
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !14838
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14838
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !14838
  %3 = load i32, i32* %add.ptr, align 4, !dbg !14838
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !14838
  br i1 %4, label %cond.true, label %cond.false, !dbg !14838

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14838
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !14838
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !14838
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !14838
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !14838
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !14838
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !14838
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !14838
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !14838
  %and = and i32 %7, 255, !dbg !14838
  %shl = shl i32 %and, 24, !dbg !14838
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14838
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !14838
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !14838
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !14838
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !14838
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !14838
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !14838
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !14838
  %10 = load i32, i32* %add.ptr12, align 4, !dbg !14838
  %and13 = and i32 %10, 65280, !dbg !14838
  %shl14 = shl i32 %and13, 8, !dbg !14838
  %or = or i32 %shl, %shl14, !dbg !14838
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14838
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !14838
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !14838
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !14838
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !14838
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !14838
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !14838
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !14838
  %13 = load i32, i32* %add.ptr20, align 4, !dbg !14838
  %and21 = and i32 %13, 16711680, !dbg !14838
  %shr = lshr i32 %and21, 8, !dbg !14838
  %or22 = or i32 %or, %shr, !dbg !14838
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14838
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !14838
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !14838
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !14838
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !14838
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !14838
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !14838
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !14838
  %16 = load i32, i32* %add.ptr28, align 4, !dbg !14838
  %and29 = and i32 %16, -16777216, !dbg !14838
  %shr30 = lshr i32 %and29, 24, !dbg !14838
  %or31 = or i32 %or22, %shr30, !dbg !14838
  br label %cond.end, !dbg !14838

cond.false:                                       ; preds = %land.lhs.true
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14838
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !14838
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !14838
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !14838
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !14838
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !14838
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !14838
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !14838
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !14838
  %call = call i32 @__fswab32(i32 %19) #10, !dbg !14838
  br label %cond.end, !dbg !14838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !14838
  %shr38 = lshr i32 %cond, 24, !dbg !14838
  %and39 = and i32 %shr38, 1, !dbg !14838
  %tobool40 = icmp ne i32 %and39, 0, !dbg !14838
  br i1 %tobool40, label %if.end, label %if.then, !dbg !14840

if.then:                                          ; preds = %cond.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !14841
  br label %return, !dbg !14841

if.end:                                           ; preds = %cond.end
  %20 = load i16, i16* %vlan.addr, align 2, !dbg !14842
  %conv = zext i16 %20 to i32, !dbg !14842
  %tobool41 = icmp ne i32 %conv, 0, !dbg !14842
  br i1 %tobool41, label %if.then44, label %lor.lhs.false, !dbg !14844

lor.lhs.false:                                    ; preds = %if.end
  %21 = load i8, i8* %qos.addr, align 1, !dbg !14845
  %conv42 = zext i8 %21 to i32, !dbg !14845
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !14845
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !14846

if.then44:                                        ; preds = %lor.lhs.false, %if.end
  store i8 3, i8* %set_flags, align 1, !dbg !14847
  br label %if.end45, !dbg !14848

if.end45:                                         ; preds = %if.then44, %lor.lhs.false
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14849
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 10, !dbg !14850
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14851
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14852
  %24 = load i16, i16* %vport.addr, align 2, !dbg !14853
  %25 = load i16, i16* %vlan.addr, align 2, !dbg !14854
  %26 = load i8, i8* %qos.addr, align 1, !dbg !14855
  %27 = load i8, i8* %set_flags, align 1, !dbg !14856
  %call46 = call i32 @__mlx5_eswitch_set_vport_vlan(%struct.mlx5_eswitch* %23, i16 zeroext %24, i16 zeroext %25, i8 zeroext %26, i8 zeroext %27) #8, !dbg !14857
  store i32 %call46, i32* %err, align 4, !dbg !14858
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14859
  %state_lock47 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %28, i32 0, i32 10, !dbg !14860
  call void @mutex_unlock(%struct.mutex* %state_lock47) #8, !dbg !14861
  %29 = load i32, i32* %err, align 4, !dbg !14862
  store i32 %29, i32* %retval, align 4, !dbg !14863
  br label %return, !dbg !14863

return:                                           ; preds = %if.end45, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !14864
  ret i32 %30, !dbg !14864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_set_vport_spoofchk(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i1 zeroext %spoofchk) #0 !dbg !14865 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !14179, metadata !DIExpression()), !dbg !14868
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !14188, metadata !DIExpression()), !dbg !14871
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !14191, metadata !DIExpression()), !dbg !14872
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %spoofchk.addr = alloca i8, align 1
  %evport = alloca %struct.mlx5_vport*, align 8
  %pschk = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14873, metadata !DIExpression()), !dbg !14874
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !14875, metadata !DIExpression()), !dbg !14876
  %frombool = zext i1 %spoofchk to i8
  store i8 %frombool, i8* %spoofchk.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %spoofchk.addr, metadata !14877, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !14879, metadata !DIExpression()), !dbg !14880
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14881
  %1 = load i16, i16* %vport.addr, align 2, !dbg !14882
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !14883
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %evport, align 8, !dbg !14880
  call void @llvm.dbg.declare(metadata i8* %pschk, metadata !14884, metadata !DIExpression()), !dbg !14885
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14886, metadata !DIExpression()), !dbg !14887
  store i32 0, i32* %err, align 4, !dbg !14887
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14888
  %tobool = icmp ne %struct.mlx5_eswitch* %2, null, !dbg !14888
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !14888

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14888
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !14888
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14888
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !14888
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14888
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !14888
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14888
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !14888
  %5 = load i32, i32* %add.ptr, align 4, !dbg !14888
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !14888
  br i1 %6, label %cond.true, label %cond.false, !dbg !14888

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14888
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !14888
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !14888
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !14888
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !14888
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !14888
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !14888
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !14888
  %9 = load i32, i32* %add.ptr6, align 4, !dbg !14888
  %and = and i32 %9, 255, !dbg !14888
  %shl = shl i32 %and, 24, !dbg !14888
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14888
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !14888
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !14888
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !14888
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !14888
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !14888
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !14888
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !14888
  %12 = load i32, i32* %add.ptr12, align 4, !dbg !14888
  %and13 = and i32 %12, 65280, !dbg !14888
  %shl14 = shl i32 %and13, 8, !dbg !14888
  %or = or i32 %shl, %shl14, !dbg !14888
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14888
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !14888
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !14888
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !14888
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !14888
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !14888
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !14888
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !14888
  %15 = load i32, i32* %add.ptr20, align 4, !dbg !14888
  %and21 = and i32 %15, 16711680, !dbg !14888
  %shr = lshr i32 %and21, 8, !dbg !14888
  %or22 = or i32 %or, %shr, !dbg !14888
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14888
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !14888
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !14888
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !14888
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !14888
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !14888
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !14888
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !14888
  %18 = load i32, i32* %add.ptr28, align 4, !dbg !14888
  %and29 = and i32 %18, -16777216, !dbg !14888
  %shr30 = lshr i32 %and29, 24, !dbg !14888
  %or31 = or i32 %or22, %shr30, !dbg !14888
  br label %cond.end, !dbg !14888

cond.false:                                       ; preds = %land.lhs.true
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14888
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !14888
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !14888
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !14888
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !14888
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !14888
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !14888
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !14888
  %21 = load i32, i32* %add.ptr37, align 4, !dbg !14888
  %call38 = call i32 @__fswab32(i32 %21) #10, !dbg !14888
  br label %cond.end, !dbg !14888

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call38, %cond.false ], !dbg !14888
  %shr39 = lshr i32 %cond, 24, !dbg !14888
  %and40 = and i32 %shr39, 1, !dbg !14888
  %tobool41 = icmp ne i32 %and40, 0, !dbg !14888
  br i1 %tobool41, label %if.end, label %if.then, !dbg !14890

if.then:                                          ; preds = %cond.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !14891
  br label %return, !dbg !14891

if.end:                                           ; preds = %cond.end
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14892
  %23 = bitcast %struct.mlx5_vport* %22 to i8*, !dbg !14892
  %call42 = call zeroext i1 @IS_ERR(i8* %23) #8, !dbg !14894
  br i1 %call42, label %if.then43, label %if.end45, !dbg !14895

if.then43:                                        ; preds = %if.end
  %24 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14896
  %25 = bitcast %struct.mlx5_vport* %24 to i8*, !dbg !14896
  %call44 = call i64 @PTR_ERR(i8* %25) #8, !dbg !14897
  %conv = trunc i64 %call44 to i32, !dbg !14897
  store i32 %conv, i32* %retval, align 4, !dbg !14898
  br label %return, !dbg !14898

if.end45:                                         ; preds = %if.end
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14899
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 10, !dbg !14900
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14901
  %27 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14902
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %27, i32 0, i32 11, !dbg !14903
  %spoofchk46 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 7, !dbg !14904
  %28 = load i8, i8* %spoofchk46, align 4, !dbg !14904
  %tobool47 = trunc i8 %28 to i1, !dbg !14904
  %frombool48 = zext i1 %tobool47 to i8, !dbg !14905
  store i8 %frombool48, i8* %pschk, align 1, !dbg !14905
  %29 = load i8, i8* %spoofchk.addr, align 1, !dbg !14906
  %tobool49 = trunc i8 %29 to i1, !dbg !14906
  %30 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14907
  %info50 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %30, i32 0, i32 11, !dbg !14908
  %spoofchk51 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info50, i32 0, i32 7, !dbg !14909
  %frombool52 = zext i1 %tobool49 to i8, !dbg !14910
  store i8 %frombool52, i8* %spoofchk51, align 4, !dbg !14910
  %31 = load i8, i8* %pschk, align 1, !dbg !14911
  %tobool53 = trunc i8 %31 to i1, !dbg !14911
  br i1 %tobool53, label %land.lhs.true55, label %if.end63, !dbg !14912

land.lhs.true55:                                  ; preds = %if.end45
  %32 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14913
  %info56 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %32, i32 0, i32 11, !dbg !14914
  %mac = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info56, i32 0, i32 0, !dbg !14915
  %arraydecay57 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !14913
  %call58 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay57) #8, !dbg !14916
  br i1 %call58, label %if.end63, label %if.then59, !dbg !14917

if.then59:                                        ; preds = %land.lhs.true55
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14918
  %dev60 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 0, !dbg !14918
  %34 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev60, align 8, !dbg !14918
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %34, i32 0, i32 0, !dbg !14918
  %35 = load %struct.device*, %struct.device** %device, align 8, !dbg !14918
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !14871
  %36 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !14871
  %37 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !14872, !srcloc !14232
  store i64 %37, i64* %pfo_val__.i, align 8, !dbg !14872
  %38 = load i64, i64* %pfo_val__.i, align 8, !dbg !14872
  %39 = inttoptr i64 %38 to %struct.task_struct*, !dbg !14872
  store %struct.task_struct* %39, %struct.task_struct** %tmp.i, align 8, !dbg !14872
  %40 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !14872
  store %struct.task_struct* %40, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14868
  %41 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14868
  store %struct.task_struct* %41, %struct.task_struct** %tmp1.i, align 8, !dbg !14868
  %42 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !14868
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %42, i32 0, i32 35, !dbg !14918
  %43 = load i32, i32* %pid, align 64, !dbg !14918
  %44 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14918
  %vport62 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %44, i32 0, i32 1, !dbg !14918
  %45 = load i32, i32* %vport62, align 8, !dbg !14918
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %35, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.mlx5_eswitch_set_vport_spoofchk, i64 0, i64 0), i32 2074, i32 %43, i32 %45) #11, !dbg !14918
  br label %if.end63, !dbg !14918

if.end63:                                         ; preds = %if.then59, %land.lhs.true55, %if.end45
  %46 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14919
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %46, i32 0, i32 13, !dbg !14921
  %47 = load i8, i8* %enabled, align 4, !dbg !14921
  %tobool64 = trunc i8 %47 to i1, !dbg !14921
  br i1 %tobool64, label %land.lhs.true66, label %if.end70, !dbg !14922

land.lhs.true66:                                  ; preds = %if.end63
  %48 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14923
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %48, i32 0, i32 14, !dbg !14924
  %49 = load i32, i32* %mode, align 8, !dbg !14924
  %cmp = icmp eq i32 %49, 1, !dbg !14925
  br i1 %cmp, label %if.then68, label %if.end70, !dbg !14926

if.then68:                                        ; preds = %land.lhs.true66
  %50 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14927
  %51 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14928
  %call69 = call i32 @esw_acl_ingress_lgcy_setup(%struct.mlx5_eswitch* %50, %struct.mlx5_vport* %51) #8, !dbg !14929
  store i32 %call69, i32* %err, align 4, !dbg !14930
  br label %if.end70, !dbg !14931

if.end70:                                         ; preds = %if.then68, %land.lhs.true66, %if.end63
  %52 = load i32, i32* %err, align 4, !dbg !14932
  %tobool71 = icmp ne i32 %52, 0, !dbg !14932
  br i1 %tobool71, label %if.then72, label %if.end77, !dbg !14934

if.then72:                                        ; preds = %if.end70
  %53 = load i8, i8* %pschk, align 1, !dbg !14935
  %tobool73 = trunc i8 %53 to i1, !dbg !14935
  %54 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !14936
  %info74 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %54, i32 0, i32 11, !dbg !14937
  %spoofchk75 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info74, i32 0, i32 7, !dbg !14938
  %frombool76 = zext i1 %tobool73 to i8, !dbg !14939
  store i8 %frombool76, i8* %spoofchk75, align 4, !dbg !14939
  br label %if.end77, !dbg !14936

if.end77:                                         ; preds = %if.then72, %if.end70
  %55 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14940
  %state_lock78 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %55, i32 0, i32 10, !dbg !14941
  call void @mutex_unlock(%struct.mutex* %state_lock78) #8, !dbg !14942
  %56 = load i32, i32* %err, align 4, !dbg !14943
  store i32 %56, i32* %retval, align 4, !dbg !14944
  br label %return, !dbg !14944

return:                                           ; preds = %if.end77, %if.then43, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !14945
  ret i32 %57, !dbg !14945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #0 !dbg !14946 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14949, metadata !DIExpression()), !dbg !14950
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14951
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #8, !dbg !14952
  br i1 %call, label %land.end, label %land.rhs, !dbg !14953

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !14954
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #8, !dbg !14955
  %lnot = xor i1 %call1, true, !dbg !14956
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !14957
  ret i1 %2, !dbg !14958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_set_vepa(%struct.mlx5_eswitch* %esw, i8 zeroext %setting) #0 !dbg !14959 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %setting.addr = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14962, metadata !DIExpression()), !dbg !14963
  store i8 %setting, i8* %setting.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %setting.addr, metadata !14964, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14966, metadata !DIExpression()), !dbg !14967
  store i32 0, i32* %err, align 4, !dbg !14967
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14968
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !14968
  br i1 %tobool, label %if.end, label %if.then, !dbg !14970

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !14971
  br label %return, !dbg !14971

if.end:                                           ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14972
  %tobool1 = icmp ne %struct.mlx5_eswitch* %1, null, !dbg !14972
  br i1 %tobool1, label %land.lhs.true, label %if.then42, !dbg !14972

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14972
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !14972
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14972
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !14972
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14972
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !14972
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14972
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !14972
  %4 = load i32, i32* %add.ptr, align 4, !dbg !14972
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !14972
  br i1 %5, label %cond.true, label %cond.false, !dbg !14972

cond.true:                                        ; preds = %land.lhs.true
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14972
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 0, !dbg !14972
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !14972
  %caps3 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !14972
  %hca_cur4 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps3, i32 0, i32 0, !dbg !14972
  %arrayidx5 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur4, i64 0, i64 0, !dbg !14972
  %arraydecay6 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx5, i64 0, i64 0, !dbg !14972
  %add.ptr7 = getelementptr i32, i32* %arraydecay6, i64 13, !dbg !14972
  %8 = load i32, i32* %add.ptr7, align 4, !dbg !14972
  %and = and i32 %8, 255, !dbg !14972
  %shl = shl i32 %and, 24, !dbg !14972
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14972
  %dev8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 0, !dbg !14972
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev8, align 8, !dbg !14972
  %caps9 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !14972
  %hca_cur10 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps9, i32 0, i32 0, !dbg !14972
  %arrayidx11 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur10, i64 0, i64 0, !dbg !14972
  %arraydecay12 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx11, i64 0, i64 0, !dbg !14972
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 13, !dbg !14972
  %11 = load i32, i32* %add.ptr13, align 4, !dbg !14972
  %and14 = and i32 %11, 65280, !dbg !14972
  %shl15 = shl i32 %and14, 8, !dbg !14972
  %or = or i32 %shl, %shl15, !dbg !14972
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14972
  %dev16 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %12, i32 0, i32 0, !dbg !14972
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev16, align 8, !dbg !14972
  %caps17 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !14972
  %hca_cur18 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps17, i32 0, i32 0, !dbg !14972
  %arrayidx19 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur18, i64 0, i64 0, !dbg !14972
  %arraydecay20 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx19, i64 0, i64 0, !dbg !14972
  %add.ptr21 = getelementptr i32, i32* %arraydecay20, i64 13, !dbg !14972
  %14 = load i32, i32* %add.ptr21, align 4, !dbg !14972
  %and22 = and i32 %14, 16711680, !dbg !14972
  %shr = lshr i32 %and22, 8, !dbg !14972
  %or23 = or i32 %or, %shr, !dbg !14972
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14972
  %dev24 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 0, !dbg !14972
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev24, align 8, !dbg !14972
  %caps25 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !14972
  %hca_cur26 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps25, i32 0, i32 0, !dbg !14972
  %arrayidx27 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur26, i64 0, i64 0, !dbg !14972
  %arraydecay28 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx27, i64 0, i64 0, !dbg !14972
  %add.ptr29 = getelementptr i32, i32* %arraydecay28, i64 13, !dbg !14972
  %17 = load i32, i32* %add.ptr29, align 4, !dbg !14972
  %and30 = and i32 %17, -16777216, !dbg !14972
  %shr31 = lshr i32 %and30, 24, !dbg !14972
  %or32 = or i32 %or23, %shr31, !dbg !14972
  br label %cond.end, !dbg !14972

cond.false:                                       ; preds = %land.lhs.true
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14972
  %dev33 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 0, !dbg !14972
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev33, align 8, !dbg !14972
  %caps34 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !14972
  %hca_cur35 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps34, i32 0, i32 0, !dbg !14972
  %arrayidx36 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur35, i64 0, i64 0, !dbg !14972
  %arraydecay37 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx36, i64 0, i64 0, !dbg !14972
  %add.ptr38 = getelementptr i32, i32* %arraydecay37, i64 13, !dbg !14972
  %20 = load i32, i32* %add.ptr38, align 4, !dbg !14972
  %call = call i32 @__fswab32(i32 %20) #10, !dbg !14972
  br label %cond.end, !dbg !14972

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or32, %cond.true ], [ %call, %cond.false ], !dbg !14972
  %shr39 = lshr i32 %cond, 24, !dbg !14972
  %and40 = and i32 %shr39, 1, !dbg !14972
  %tobool41 = icmp ne i32 %and40, 0, !dbg !14972
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !14974

if.then42:                                        ; preds = %cond.end, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !14975
  br label %return, !dbg !14975

if.end43:                                         ; preds = %cond.end
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14976
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 10, !dbg !14977
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !14978
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14979
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 14, !dbg !14981
  %23 = load i32, i32* %mode, align 8, !dbg !14981
  %cmp = icmp ne i32 %23, 1, !dbg !14982
  br i1 %cmp, label %if.then44, label %if.end45, !dbg !14983

if.then44:                                        ; preds = %if.end43
  store i32 -95, i32* %err, align 4, !dbg !14984
  br label %out, !dbg !14986

if.end45:                                         ; preds = %if.end43
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14987
  %25 = load i8, i8* %setting.addr, align 1, !dbg !14988
  %call46 = call i32 @_mlx5_eswitch_set_vepa_locked(%struct.mlx5_eswitch* %24, i8 zeroext %25) #8, !dbg !14989
  store i32 %call46, i32* %err, align 4, !dbg !14990
  br label %out, !dbg !14991

out:                                              ; preds = %if.end45, %if.then44
  call void @llvm.dbg.label(metadata !14992), !dbg !14993
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14994
  %state_lock47 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 10, !dbg !14995
  call void @mutex_unlock(%struct.mutex* %state_lock47) #8, !dbg !14996
  %27 = load i32, i32* %err, align 4, !dbg !14997
  store i32 %27, i32* %retval, align 4, !dbg !14998
  br label %return, !dbg !14998

return:                                           ; preds = %out, %if.then42, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !14999
  ret i32 %28, !dbg !14999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_mlx5_eswitch_set_vepa_locked(%struct.mlx5_eswitch* %esw, i8 zeroext %setting) #0 !dbg !15000 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %setting.addr = alloca i8, align 1
  %dest = alloca %struct.mlx5_flow_destination, align 8
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %flow_rule = alloca %struct.mlx5_flow_handle*, align 8
  %spec = alloca %struct.mlx5_flow_spec*, align 8
  %err = alloca i32, align 4
  %misc = alloca i8*, align 8
  %_v = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15001, metadata !DIExpression()), !dbg !15002
  store i8 %setting, i8* %setting.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %setting.addr, metadata !15003, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination* %dest, metadata !15005, metadata !DIExpression()), !dbg !15006
  %0 = bitcast %struct.mlx5_flow_destination* %dest to i8*, !dbg !15006
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !15006
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !15007, metadata !DIExpression()), !dbg !16591
  %1 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !16591
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 56, i1 false), !dbg !16591
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %flow_rule, metadata !16592, metadata !DIExpression()), !dbg !16593
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec, metadata !16594, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16609, metadata !DIExpression()), !dbg !16610
  store i32 0, i32* %err, align 4, !dbg !16610
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !16611, metadata !DIExpression()), !dbg !16612
  %2 = load i8, i8* %setting.addr, align 1, !dbg !16613
  %tobool = icmp ne i8 %2, 0, !dbg !16613
  br i1 %tobool, label %if.end, label %if.then, !dbg !16615

if.then:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16616
  call void @esw_cleanup_vepa_rules(%struct.mlx5_eswitch* %3) #8, !dbg !16618
  store i32 0, i32* %retval, align 4, !dbg !16619
  br label %return, !dbg !16619

if.end:                                           ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16620
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 2, !dbg !16622
  %5 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !16623
  %legacy = bitcast %union.anon.154* %5 to %struct.legacy_fdb*, !dbg !16623
  %vepa_uplink_rule = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 5, !dbg !16624
  %6 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %vepa_uplink_rule, align 8, !dbg !16624
  %tobool1 = icmp ne %struct.mlx5_flow_handle* %6, null, !dbg !16620
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !16625

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16626
  br label %return, !dbg !16626

if.end3:                                          ; preds = %if.end
  %call = call i8* @kvzalloc(i64 1040, i32 3264) #8, !dbg !16627
  %7 = bitcast i8* %call to %struct.mlx5_flow_spec*, !dbg !16627
  store %struct.mlx5_flow_spec* %7, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16628
  %8 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16629
  %tobool4 = icmp ne %struct.mlx5_flow_spec* %8, null, !dbg !16629
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !16631

if.then5:                                         ; preds = %if.end3
  store i32 -12, i32* %retval, align 4, !dbg !16632
  br label %return, !dbg !16632

if.end6:                                          ; preds = %if.end3
  %9 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16633
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %9, i32 0, i32 2, !dbg !16633
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !16633
  %10 = bitcast i32* %arraydecay to i8*, !dbg !16633
  %add.ptr = getelementptr i8, i8* %10, i64 64, !dbg !16633
  store i8* %add.ptr, i8** %misc, align 8, !dbg !16634
  br label %do.body, !dbg !16635

do.body:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !16636, metadata !DIExpression()), !dbg !16638
  store i32 65535, i32* %_v, align 4, !dbg !16638
  br label %do.body7, !dbg !16638

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !16639

do.end:                                           ; preds = %do.body7
  %11 = load i8*, i8** %misc, align 8, !dbg !16638
  %12 = bitcast i8* %11 to i32*, !dbg !16638
  %add.ptr8 = getelementptr i32, i32* %12, i64 1, !dbg !16638
  %13 = load i32, i32* %add.ptr8, align 4, !dbg !16638
  %14 = call i1 @llvm.is.constant.i32(i32 %13), !dbg !16638
  br i1 %14, label %cond.true, label %cond.false, !dbg !16638

cond.true:                                        ; preds = %do.end
  %15 = load i8*, i8** %misc, align 8, !dbg !16638
  %16 = bitcast i8* %15 to i32*, !dbg !16638
  %add.ptr9 = getelementptr i32, i32* %16, i64 1, !dbg !16638
  %17 = load i32, i32* %add.ptr9, align 4, !dbg !16638
  %and = and i32 %17, 255, !dbg !16638
  %shl = shl i32 %and, 24, !dbg !16638
  %18 = load i8*, i8** %misc, align 8, !dbg !16638
  %19 = bitcast i8* %18 to i32*, !dbg !16638
  %add.ptr10 = getelementptr i32, i32* %19, i64 1, !dbg !16638
  %20 = load i32, i32* %add.ptr10, align 4, !dbg !16638
  %and11 = and i32 %20, 65280, !dbg !16638
  %shl12 = shl i32 %and11, 8, !dbg !16638
  %or = or i32 %shl, %shl12, !dbg !16638
  %21 = load i8*, i8** %misc, align 8, !dbg !16638
  %22 = bitcast i8* %21 to i32*, !dbg !16638
  %add.ptr13 = getelementptr i32, i32* %22, i64 1, !dbg !16638
  %23 = load i32, i32* %add.ptr13, align 4, !dbg !16638
  %and14 = and i32 %23, 16711680, !dbg !16638
  %shr = lshr i32 %and14, 8, !dbg !16638
  %or15 = or i32 %or, %shr, !dbg !16638
  %24 = load i8*, i8** %misc, align 8, !dbg !16638
  %25 = bitcast i8* %24 to i32*, !dbg !16638
  %add.ptr16 = getelementptr i32, i32* %25, i64 1, !dbg !16638
  %26 = load i32, i32* %add.ptr16, align 4, !dbg !16638
  %and17 = and i32 %26, -16777216, !dbg !16638
  %shr18 = lshr i32 %and17, 24, !dbg !16638
  %or19 = or i32 %or15, %shr18, !dbg !16638
  br label %cond.end, !dbg !16638

cond.false:                                       ; preds = %do.end
  %27 = load i8*, i8** %misc, align 8, !dbg !16638
  %28 = bitcast i8* %27 to i32*, !dbg !16638
  %add.ptr20 = getelementptr i32, i32* %28, i64 1, !dbg !16638
  %29 = load i32, i32* %add.ptr20, align 4, !dbg !16638
  %call21 = call i32 @__fswab32(i32 %29) #10, !dbg !16638
  br label %cond.end, !dbg !16638

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or19, %cond.true ], [ %call21, %cond.false ], !dbg !16638
  %and22 = and i32 %cond, -65536, !dbg !16638
  %30 = load i32, i32* %_v, align 4, !dbg !16638
  %and23 = and i32 %30, 65535, !dbg !16638
  %shl24 = shl i32 %and23, 0, !dbg !16638
  %or25 = or i32 %and22, %shl24, !dbg !16638
  %31 = call i1 @llvm.is.constant.i32(i32 %or25), !dbg !16638
  br i1 %31, label %cond.true26, label %cond.false142, !dbg !16638

cond.true26:                                      ; preds = %cond.end
  %32 = load i8*, i8** %misc, align 8, !dbg !16638
  %33 = bitcast i8* %32 to i32*, !dbg !16638
  %add.ptr27 = getelementptr i32, i32* %33, i64 1, !dbg !16638
  %34 = load i32, i32* %add.ptr27, align 4, !dbg !16638
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !16638
  br i1 %35, label %cond.true28, label %cond.false44, !dbg !16638

cond.true28:                                      ; preds = %cond.true26
  %36 = load i8*, i8** %misc, align 8, !dbg !16638
  %37 = bitcast i8* %36 to i32*, !dbg !16638
  %add.ptr29 = getelementptr i32, i32* %37, i64 1, !dbg !16638
  %38 = load i32, i32* %add.ptr29, align 4, !dbg !16638
  %and30 = and i32 %38, 255, !dbg !16638
  %shl31 = shl i32 %and30, 24, !dbg !16638
  %39 = load i8*, i8** %misc, align 8, !dbg !16638
  %40 = bitcast i8* %39 to i32*, !dbg !16638
  %add.ptr32 = getelementptr i32, i32* %40, i64 1, !dbg !16638
  %41 = load i32, i32* %add.ptr32, align 4, !dbg !16638
  %and33 = and i32 %41, 65280, !dbg !16638
  %shl34 = shl i32 %and33, 8, !dbg !16638
  %or35 = or i32 %shl31, %shl34, !dbg !16638
  %42 = load i8*, i8** %misc, align 8, !dbg !16638
  %43 = bitcast i8* %42 to i32*, !dbg !16638
  %add.ptr36 = getelementptr i32, i32* %43, i64 1, !dbg !16638
  %44 = load i32, i32* %add.ptr36, align 4, !dbg !16638
  %and37 = and i32 %44, 16711680, !dbg !16638
  %shr38 = lshr i32 %and37, 8, !dbg !16638
  %or39 = or i32 %or35, %shr38, !dbg !16638
  %45 = load i8*, i8** %misc, align 8, !dbg !16638
  %46 = bitcast i8* %45 to i32*, !dbg !16638
  %add.ptr40 = getelementptr i32, i32* %46, i64 1, !dbg !16638
  %47 = load i32, i32* %add.ptr40, align 4, !dbg !16638
  %and41 = and i32 %47, -16777216, !dbg !16638
  %shr42 = lshr i32 %and41, 24, !dbg !16638
  %or43 = or i32 %or39, %shr42, !dbg !16638
  br label %cond.end47, !dbg !16638

cond.false44:                                     ; preds = %cond.true26
  %48 = load i8*, i8** %misc, align 8, !dbg !16638
  %49 = bitcast i8* %48 to i32*, !dbg !16638
  %add.ptr45 = getelementptr i32, i32* %49, i64 1, !dbg !16638
  %50 = load i32, i32* %add.ptr45, align 4, !dbg !16638
  %call46 = call i32 @__fswab32(i32 %50) #10, !dbg !16638
  br label %cond.end47, !dbg !16638

cond.end47:                                       ; preds = %cond.false44, %cond.true28
  %cond48 = phi i32 [ %or43, %cond.true28 ], [ %call46, %cond.false44 ], !dbg !16638
  %and49 = and i32 %cond48, -65536, !dbg !16638
  %51 = load i32, i32* %_v, align 4, !dbg !16638
  %and50 = and i32 %51, 65535, !dbg !16638
  %shl51 = shl i32 %and50, 0, !dbg !16638
  %or52 = or i32 %and49, %shl51, !dbg !16638
  %and53 = and i32 %or52, 255, !dbg !16638
  %shl54 = shl i32 %and53, 24, !dbg !16638
  %52 = load i8*, i8** %misc, align 8, !dbg !16638
  %53 = bitcast i8* %52 to i32*, !dbg !16638
  %add.ptr55 = getelementptr i32, i32* %53, i64 1, !dbg !16638
  %54 = load i32, i32* %add.ptr55, align 4, !dbg !16638
  %55 = call i1 @llvm.is.constant.i32(i32 %54), !dbg !16638
  br i1 %55, label %cond.true56, label %cond.false72, !dbg !16638

cond.true56:                                      ; preds = %cond.end47
  %56 = load i8*, i8** %misc, align 8, !dbg !16638
  %57 = bitcast i8* %56 to i32*, !dbg !16638
  %add.ptr57 = getelementptr i32, i32* %57, i64 1, !dbg !16638
  %58 = load i32, i32* %add.ptr57, align 4, !dbg !16638
  %and58 = and i32 %58, 255, !dbg !16638
  %shl59 = shl i32 %and58, 24, !dbg !16638
  %59 = load i8*, i8** %misc, align 8, !dbg !16638
  %60 = bitcast i8* %59 to i32*, !dbg !16638
  %add.ptr60 = getelementptr i32, i32* %60, i64 1, !dbg !16638
  %61 = load i32, i32* %add.ptr60, align 4, !dbg !16638
  %and61 = and i32 %61, 65280, !dbg !16638
  %shl62 = shl i32 %and61, 8, !dbg !16638
  %or63 = or i32 %shl59, %shl62, !dbg !16638
  %62 = load i8*, i8** %misc, align 8, !dbg !16638
  %63 = bitcast i8* %62 to i32*, !dbg !16638
  %add.ptr64 = getelementptr i32, i32* %63, i64 1, !dbg !16638
  %64 = load i32, i32* %add.ptr64, align 4, !dbg !16638
  %and65 = and i32 %64, 16711680, !dbg !16638
  %shr66 = lshr i32 %and65, 8, !dbg !16638
  %or67 = or i32 %or63, %shr66, !dbg !16638
  %65 = load i8*, i8** %misc, align 8, !dbg !16638
  %66 = bitcast i8* %65 to i32*, !dbg !16638
  %add.ptr68 = getelementptr i32, i32* %66, i64 1, !dbg !16638
  %67 = load i32, i32* %add.ptr68, align 4, !dbg !16638
  %and69 = and i32 %67, -16777216, !dbg !16638
  %shr70 = lshr i32 %and69, 24, !dbg !16638
  %or71 = or i32 %or67, %shr70, !dbg !16638
  br label %cond.end75, !dbg !16638

cond.false72:                                     ; preds = %cond.end47
  %68 = load i8*, i8** %misc, align 8, !dbg !16638
  %69 = bitcast i8* %68 to i32*, !dbg !16638
  %add.ptr73 = getelementptr i32, i32* %69, i64 1, !dbg !16638
  %70 = load i32, i32* %add.ptr73, align 4, !dbg !16638
  %call74 = call i32 @__fswab32(i32 %70) #10, !dbg !16638
  br label %cond.end75, !dbg !16638

cond.end75:                                       ; preds = %cond.false72, %cond.true56
  %cond76 = phi i32 [ %or71, %cond.true56 ], [ %call74, %cond.false72 ], !dbg !16638
  %and77 = and i32 %cond76, -65536, !dbg !16638
  %71 = load i32, i32* %_v, align 4, !dbg !16638
  %and78 = and i32 %71, 65535, !dbg !16638
  %shl79 = shl i32 %and78, 0, !dbg !16638
  %or80 = or i32 %and77, %shl79, !dbg !16638
  %and81 = and i32 %or80, 65280, !dbg !16638
  %shl82 = shl i32 %and81, 8, !dbg !16638
  %or83 = or i32 %shl54, %shl82, !dbg !16638
  %72 = load i8*, i8** %misc, align 8, !dbg !16638
  %73 = bitcast i8* %72 to i32*, !dbg !16638
  %add.ptr84 = getelementptr i32, i32* %73, i64 1, !dbg !16638
  %74 = load i32, i32* %add.ptr84, align 4, !dbg !16638
  %75 = call i1 @llvm.is.constant.i32(i32 %74), !dbg !16638
  br i1 %75, label %cond.true85, label %cond.false101, !dbg !16638

cond.true85:                                      ; preds = %cond.end75
  %76 = load i8*, i8** %misc, align 8, !dbg !16638
  %77 = bitcast i8* %76 to i32*, !dbg !16638
  %add.ptr86 = getelementptr i32, i32* %77, i64 1, !dbg !16638
  %78 = load i32, i32* %add.ptr86, align 4, !dbg !16638
  %and87 = and i32 %78, 255, !dbg !16638
  %shl88 = shl i32 %and87, 24, !dbg !16638
  %79 = load i8*, i8** %misc, align 8, !dbg !16638
  %80 = bitcast i8* %79 to i32*, !dbg !16638
  %add.ptr89 = getelementptr i32, i32* %80, i64 1, !dbg !16638
  %81 = load i32, i32* %add.ptr89, align 4, !dbg !16638
  %and90 = and i32 %81, 65280, !dbg !16638
  %shl91 = shl i32 %and90, 8, !dbg !16638
  %or92 = or i32 %shl88, %shl91, !dbg !16638
  %82 = load i8*, i8** %misc, align 8, !dbg !16638
  %83 = bitcast i8* %82 to i32*, !dbg !16638
  %add.ptr93 = getelementptr i32, i32* %83, i64 1, !dbg !16638
  %84 = load i32, i32* %add.ptr93, align 4, !dbg !16638
  %and94 = and i32 %84, 16711680, !dbg !16638
  %shr95 = lshr i32 %and94, 8, !dbg !16638
  %or96 = or i32 %or92, %shr95, !dbg !16638
  %85 = load i8*, i8** %misc, align 8, !dbg !16638
  %86 = bitcast i8* %85 to i32*, !dbg !16638
  %add.ptr97 = getelementptr i32, i32* %86, i64 1, !dbg !16638
  %87 = load i32, i32* %add.ptr97, align 4, !dbg !16638
  %and98 = and i32 %87, -16777216, !dbg !16638
  %shr99 = lshr i32 %and98, 24, !dbg !16638
  %or100 = or i32 %or96, %shr99, !dbg !16638
  br label %cond.end104, !dbg !16638

cond.false101:                                    ; preds = %cond.end75
  %88 = load i8*, i8** %misc, align 8, !dbg !16638
  %89 = bitcast i8* %88 to i32*, !dbg !16638
  %add.ptr102 = getelementptr i32, i32* %89, i64 1, !dbg !16638
  %90 = load i32, i32* %add.ptr102, align 4, !dbg !16638
  %call103 = call i32 @__fswab32(i32 %90) #10, !dbg !16638
  br label %cond.end104, !dbg !16638

cond.end104:                                      ; preds = %cond.false101, %cond.true85
  %cond105 = phi i32 [ %or100, %cond.true85 ], [ %call103, %cond.false101 ], !dbg !16638
  %and106 = and i32 %cond105, -65536, !dbg !16638
  %91 = load i32, i32* %_v, align 4, !dbg !16638
  %and107 = and i32 %91, 65535, !dbg !16638
  %shl108 = shl i32 %and107, 0, !dbg !16638
  %or109 = or i32 %and106, %shl108, !dbg !16638
  %and110 = and i32 %or109, 16711680, !dbg !16638
  %shr111 = lshr i32 %and110, 8, !dbg !16638
  %or112 = or i32 %or83, %shr111, !dbg !16638
  %92 = load i8*, i8** %misc, align 8, !dbg !16638
  %93 = bitcast i8* %92 to i32*, !dbg !16638
  %add.ptr113 = getelementptr i32, i32* %93, i64 1, !dbg !16638
  %94 = load i32, i32* %add.ptr113, align 4, !dbg !16638
  %95 = call i1 @llvm.is.constant.i32(i32 %94), !dbg !16638
  br i1 %95, label %cond.true114, label %cond.false130, !dbg !16638

cond.true114:                                     ; preds = %cond.end104
  %96 = load i8*, i8** %misc, align 8, !dbg !16638
  %97 = bitcast i8* %96 to i32*, !dbg !16638
  %add.ptr115 = getelementptr i32, i32* %97, i64 1, !dbg !16638
  %98 = load i32, i32* %add.ptr115, align 4, !dbg !16638
  %and116 = and i32 %98, 255, !dbg !16638
  %shl117 = shl i32 %and116, 24, !dbg !16638
  %99 = load i8*, i8** %misc, align 8, !dbg !16638
  %100 = bitcast i8* %99 to i32*, !dbg !16638
  %add.ptr118 = getelementptr i32, i32* %100, i64 1, !dbg !16638
  %101 = load i32, i32* %add.ptr118, align 4, !dbg !16638
  %and119 = and i32 %101, 65280, !dbg !16638
  %shl120 = shl i32 %and119, 8, !dbg !16638
  %or121 = or i32 %shl117, %shl120, !dbg !16638
  %102 = load i8*, i8** %misc, align 8, !dbg !16638
  %103 = bitcast i8* %102 to i32*, !dbg !16638
  %add.ptr122 = getelementptr i32, i32* %103, i64 1, !dbg !16638
  %104 = load i32, i32* %add.ptr122, align 4, !dbg !16638
  %and123 = and i32 %104, 16711680, !dbg !16638
  %shr124 = lshr i32 %and123, 8, !dbg !16638
  %or125 = or i32 %or121, %shr124, !dbg !16638
  %105 = load i8*, i8** %misc, align 8, !dbg !16638
  %106 = bitcast i8* %105 to i32*, !dbg !16638
  %add.ptr126 = getelementptr i32, i32* %106, i64 1, !dbg !16638
  %107 = load i32, i32* %add.ptr126, align 4, !dbg !16638
  %and127 = and i32 %107, -16777216, !dbg !16638
  %shr128 = lshr i32 %and127, 24, !dbg !16638
  %or129 = or i32 %or125, %shr128, !dbg !16638
  br label %cond.end133, !dbg !16638

cond.false130:                                    ; preds = %cond.end104
  %108 = load i8*, i8** %misc, align 8, !dbg !16638
  %109 = bitcast i8* %108 to i32*, !dbg !16638
  %add.ptr131 = getelementptr i32, i32* %109, i64 1, !dbg !16638
  %110 = load i32, i32* %add.ptr131, align 4, !dbg !16638
  %call132 = call i32 @__fswab32(i32 %110) #10, !dbg !16638
  br label %cond.end133, !dbg !16638

cond.end133:                                      ; preds = %cond.false130, %cond.true114
  %cond134 = phi i32 [ %or129, %cond.true114 ], [ %call132, %cond.false130 ], !dbg !16638
  %and135 = and i32 %cond134, -65536, !dbg !16638
  %111 = load i32, i32* %_v, align 4, !dbg !16638
  %and136 = and i32 %111, 65535, !dbg !16638
  %shl137 = shl i32 %and136, 0, !dbg !16638
  %or138 = or i32 %and135, %shl137, !dbg !16638
  %and139 = and i32 %or138, -16777216, !dbg !16638
  %shr140 = lshr i32 %and139, 24, !dbg !16638
  %or141 = or i32 %or112, %shr140, !dbg !16638
  br label %cond.end170, !dbg !16638

cond.false142:                                    ; preds = %cond.end
  %112 = load i8*, i8** %misc, align 8, !dbg !16638
  %113 = bitcast i8* %112 to i32*, !dbg !16638
  %add.ptr143 = getelementptr i32, i32* %113, i64 1, !dbg !16638
  %114 = load i32, i32* %add.ptr143, align 4, !dbg !16638
  %115 = call i1 @llvm.is.constant.i32(i32 %114), !dbg !16638
  br i1 %115, label %cond.true144, label %cond.false160, !dbg !16638

cond.true144:                                     ; preds = %cond.false142
  %116 = load i8*, i8** %misc, align 8, !dbg !16638
  %117 = bitcast i8* %116 to i32*, !dbg !16638
  %add.ptr145 = getelementptr i32, i32* %117, i64 1, !dbg !16638
  %118 = load i32, i32* %add.ptr145, align 4, !dbg !16638
  %and146 = and i32 %118, 255, !dbg !16638
  %shl147 = shl i32 %and146, 24, !dbg !16638
  %119 = load i8*, i8** %misc, align 8, !dbg !16638
  %120 = bitcast i8* %119 to i32*, !dbg !16638
  %add.ptr148 = getelementptr i32, i32* %120, i64 1, !dbg !16638
  %121 = load i32, i32* %add.ptr148, align 4, !dbg !16638
  %and149 = and i32 %121, 65280, !dbg !16638
  %shl150 = shl i32 %and149, 8, !dbg !16638
  %or151 = or i32 %shl147, %shl150, !dbg !16638
  %122 = load i8*, i8** %misc, align 8, !dbg !16638
  %123 = bitcast i8* %122 to i32*, !dbg !16638
  %add.ptr152 = getelementptr i32, i32* %123, i64 1, !dbg !16638
  %124 = load i32, i32* %add.ptr152, align 4, !dbg !16638
  %and153 = and i32 %124, 16711680, !dbg !16638
  %shr154 = lshr i32 %and153, 8, !dbg !16638
  %or155 = or i32 %or151, %shr154, !dbg !16638
  %125 = load i8*, i8** %misc, align 8, !dbg !16638
  %126 = bitcast i8* %125 to i32*, !dbg !16638
  %add.ptr156 = getelementptr i32, i32* %126, i64 1, !dbg !16638
  %127 = load i32, i32* %add.ptr156, align 4, !dbg !16638
  %and157 = and i32 %127, -16777216, !dbg !16638
  %shr158 = lshr i32 %and157, 24, !dbg !16638
  %or159 = or i32 %or155, %shr158, !dbg !16638
  br label %cond.end163, !dbg !16638

cond.false160:                                    ; preds = %cond.false142
  %128 = load i8*, i8** %misc, align 8, !dbg !16638
  %129 = bitcast i8* %128 to i32*, !dbg !16638
  %add.ptr161 = getelementptr i32, i32* %129, i64 1, !dbg !16638
  %130 = load i32, i32* %add.ptr161, align 4, !dbg !16638
  %call162 = call i32 @__fswab32(i32 %130) #10, !dbg !16638
  br label %cond.end163, !dbg !16638

cond.end163:                                      ; preds = %cond.false160, %cond.true144
  %cond164 = phi i32 [ %or159, %cond.true144 ], [ %call162, %cond.false160 ], !dbg !16638
  %and165 = and i32 %cond164, -65536, !dbg !16638
  %131 = load i32, i32* %_v, align 4, !dbg !16638
  %and166 = and i32 %131, 65535, !dbg !16638
  %shl167 = shl i32 %and166, 0, !dbg !16638
  %or168 = or i32 %and165, %shl167, !dbg !16638
  %call169 = call i32 @__fswab32(i32 %or168) #10, !dbg !16638
  br label %cond.end170, !dbg !16638

cond.end170:                                      ; preds = %cond.end163, %cond.end133
  %cond171 = phi i32 [ %or141, %cond.end133 ], [ %call169, %cond.end163 ], !dbg !16638
  %132 = load i8*, i8** %misc, align 8, !dbg !16638
  %133 = bitcast i8* %132 to i32*, !dbg !16638
  %add.ptr172 = getelementptr i32, i32* %133, i64 1, !dbg !16638
  store i32 %cond171, i32* %add.ptr172, align 4, !dbg !16638
  br label %do.end173, !dbg !16638

do.end173:                                        ; preds = %cond.end170
  %134 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16641
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %134, i32 0, i32 1, !dbg !16641
  %arraydecay174 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !16641
  %135 = bitcast i32* %arraydecay174 to i8*, !dbg !16641
  %add.ptr175 = getelementptr i8, i8* %135, i64 64, !dbg !16641
  store i8* %add.ptr175, i8** %misc, align 8, !dbg !16642
  br label %do.body176, !dbg !16643

do.body176:                                       ; preds = %do.end173
  br label %do.body177, !dbg !16644

do.body177:                                       ; preds = %do.body176
  br label %do.end178, !dbg !16646

do.end178:                                        ; preds = %do.body177
  %136 = load i8*, i8** %misc, align 8, !dbg !16644
  %137 = bitcast i8* %136 to i32*, !dbg !16644
  %add.ptr179 = getelementptr i32, i32* %137, i64 1, !dbg !16644
  %138 = load i32, i32* %add.ptr179, align 4, !dbg !16644
  %139 = call i1 @llvm.is.constant.i32(i32 %138), !dbg !16644
  br i1 %139, label %cond.true180, label %cond.false196, !dbg !16644

cond.true180:                                     ; preds = %do.end178
  %140 = load i8*, i8** %misc, align 8, !dbg !16644
  %141 = bitcast i8* %140 to i32*, !dbg !16644
  %add.ptr181 = getelementptr i32, i32* %141, i64 1, !dbg !16644
  %142 = load i32, i32* %add.ptr181, align 4, !dbg !16644
  %and182 = and i32 %142, 255, !dbg !16644
  %shl183 = shl i32 %and182, 24, !dbg !16644
  %143 = load i8*, i8** %misc, align 8, !dbg !16644
  %144 = bitcast i8* %143 to i32*, !dbg !16644
  %add.ptr184 = getelementptr i32, i32* %144, i64 1, !dbg !16644
  %145 = load i32, i32* %add.ptr184, align 4, !dbg !16644
  %and185 = and i32 %145, 65280, !dbg !16644
  %shl186 = shl i32 %and185, 8, !dbg !16644
  %or187 = or i32 %shl183, %shl186, !dbg !16644
  %146 = load i8*, i8** %misc, align 8, !dbg !16644
  %147 = bitcast i8* %146 to i32*, !dbg !16644
  %add.ptr188 = getelementptr i32, i32* %147, i64 1, !dbg !16644
  %148 = load i32, i32* %add.ptr188, align 4, !dbg !16644
  %and189 = and i32 %148, 16711680, !dbg !16644
  %shr190 = lshr i32 %and189, 8, !dbg !16644
  %or191 = or i32 %or187, %shr190, !dbg !16644
  %149 = load i8*, i8** %misc, align 8, !dbg !16644
  %150 = bitcast i8* %149 to i32*, !dbg !16644
  %add.ptr192 = getelementptr i32, i32* %150, i64 1, !dbg !16644
  %151 = load i32, i32* %add.ptr192, align 4, !dbg !16644
  %and193 = and i32 %151, -16777216, !dbg !16644
  %shr194 = lshr i32 %and193, 24, !dbg !16644
  %or195 = or i32 %or191, %shr194, !dbg !16644
  br label %cond.end199, !dbg !16644

cond.false196:                                    ; preds = %do.end178
  %152 = load i8*, i8** %misc, align 8, !dbg !16644
  %153 = bitcast i8* %152 to i32*, !dbg !16644
  %add.ptr197 = getelementptr i32, i32* %153, i64 1, !dbg !16644
  %154 = load i32, i32* %add.ptr197, align 4, !dbg !16644
  %call198 = call i32 @__fswab32(i32 %154) #10, !dbg !16644
  br label %cond.end199, !dbg !16644

cond.end199:                                      ; preds = %cond.false196, %cond.true180
  %cond200 = phi i32 [ %or195, %cond.true180 ], [ %call198, %cond.false196 ], !dbg !16644
  %and201 = and i32 %cond200, -65536, !dbg !16644
  %or202 = or i32 %and201, 65535, !dbg !16644
  %155 = call i1 @llvm.is.constant.i32(i32 %or202), !dbg !16644
  br i1 %155, label %cond.true203, label %cond.false311, !dbg !16644

cond.true203:                                     ; preds = %cond.end199
  %156 = load i8*, i8** %misc, align 8, !dbg !16644
  %157 = bitcast i8* %156 to i32*, !dbg !16644
  %add.ptr204 = getelementptr i32, i32* %157, i64 1, !dbg !16644
  %158 = load i32, i32* %add.ptr204, align 4, !dbg !16644
  %159 = call i1 @llvm.is.constant.i32(i32 %158), !dbg !16644
  br i1 %159, label %cond.true205, label %cond.false221, !dbg !16644

cond.true205:                                     ; preds = %cond.true203
  %160 = load i8*, i8** %misc, align 8, !dbg !16644
  %161 = bitcast i8* %160 to i32*, !dbg !16644
  %add.ptr206 = getelementptr i32, i32* %161, i64 1, !dbg !16644
  %162 = load i32, i32* %add.ptr206, align 4, !dbg !16644
  %and207 = and i32 %162, 255, !dbg !16644
  %shl208 = shl i32 %and207, 24, !dbg !16644
  %163 = load i8*, i8** %misc, align 8, !dbg !16644
  %164 = bitcast i8* %163 to i32*, !dbg !16644
  %add.ptr209 = getelementptr i32, i32* %164, i64 1, !dbg !16644
  %165 = load i32, i32* %add.ptr209, align 4, !dbg !16644
  %and210 = and i32 %165, 65280, !dbg !16644
  %shl211 = shl i32 %and210, 8, !dbg !16644
  %or212 = or i32 %shl208, %shl211, !dbg !16644
  %166 = load i8*, i8** %misc, align 8, !dbg !16644
  %167 = bitcast i8* %166 to i32*, !dbg !16644
  %add.ptr213 = getelementptr i32, i32* %167, i64 1, !dbg !16644
  %168 = load i32, i32* %add.ptr213, align 4, !dbg !16644
  %and214 = and i32 %168, 16711680, !dbg !16644
  %shr215 = lshr i32 %and214, 8, !dbg !16644
  %or216 = or i32 %or212, %shr215, !dbg !16644
  %169 = load i8*, i8** %misc, align 8, !dbg !16644
  %170 = bitcast i8* %169 to i32*, !dbg !16644
  %add.ptr217 = getelementptr i32, i32* %170, i64 1, !dbg !16644
  %171 = load i32, i32* %add.ptr217, align 4, !dbg !16644
  %and218 = and i32 %171, -16777216, !dbg !16644
  %shr219 = lshr i32 %and218, 24, !dbg !16644
  %or220 = or i32 %or216, %shr219, !dbg !16644
  br label %cond.end224, !dbg !16644

cond.false221:                                    ; preds = %cond.true203
  %172 = load i8*, i8** %misc, align 8, !dbg !16644
  %173 = bitcast i8* %172 to i32*, !dbg !16644
  %add.ptr222 = getelementptr i32, i32* %173, i64 1, !dbg !16644
  %174 = load i32, i32* %add.ptr222, align 4, !dbg !16644
  %call223 = call i32 @__fswab32(i32 %174) #10, !dbg !16644
  br label %cond.end224, !dbg !16644

cond.end224:                                      ; preds = %cond.false221, %cond.true205
  %cond225 = phi i32 [ %or220, %cond.true205 ], [ %call223, %cond.false221 ], !dbg !16644
  %and226 = and i32 %cond225, -65536, !dbg !16644
  %or227 = or i32 %and226, 65535, !dbg !16644
  %and228 = and i32 %or227, 255, !dbg !16644
  %shl229 = shl i32 %and228, 24, !dbg !16644
  %175 = load i8*, i8** %misc, align 8, !dbg !16644
  %176 = bitcast i8* %175 to i32*, !dbg !16644
  %add.ptr230 = getelementptr i32, i32* %176, i64 1, !dbg !16644
  %177 = load i32, i32* %add.ptr230, align 4, !dbg !16644
  %178 = call i1 @llvm.is.constant.i32(i32 %177), !dbg !16644
  br i1 %178, label %cond.true231, label %cond.false247, !dbg !16644

cond.true231:                                     ; preds = %cond.end224
  %179 = load i8*, i8** %misc, align 8, !dbg !16644
  %180 = bitcast i8* %179 to i32*, !dbg !16644
  %add.ptr232 = getelementptr i32, i32* %180, i64 1, !dbg !16644
  %181 = load i32, i32* %add.ptr232, align 4, !dbg !16644
  %and233 = and i32 %181, 255, !dbg !16644
  %shl234 = shl i32 %and233, 24, !dbg !16644
  %182 = load i8*, i8** %misc, align 8, !dbg !16644
  %183 = bitcast i8* %182 to i32*, !dbg !16644
  %add.ptr235 = getelementptr i32, i32* %183, i64 1, !dbg !16644
  %184 = load i32, i32* %add.ptr235, align 4, !dbg !16644
  %and236 = and i32 %184, 65280, !dbg !16644
  %shl237 = shl i32 %and236, 8, !dbg !16644
  %or238 = or i32 %shl234, %shl237, !dbg !16644
  %185 = load i8*, i8** %misc, align 8, !dbg !16644
  %186 = bitcast i8* %185 to i32*, !dbg !16644
  %add.ptr239 = getelementptr i32, i32* %186, i64 1, !dbg !16644
  %187 = load i32, i32* %add.ptr239, align 4, !dbg !16644
  %and240 = and i32 %187, 16711680, !dbg !16644
  %shr241 = lshr i32 %and240, 8, !dbg !16644
  %or242 = or i32 %or238, %shr241, !dbg !16644
  %188 = load i8*, i8** %misc, align 8, !dbg !16644
  %189 = bitcast i8* %188 to i32*, !dbg !16644
  %add.ptr243 = getelementptr i32, i32* %189, i64 1, !dbg !16644
  %190 = load i32, i32* %add.ptr243, align 4, !dbg !16644
  %and244 = and i32 %190, -16777216, !dbg !16644
  %shr245 = lshr i32 %and244, 24, !dbg !16644
  %or246 = or i32 %or242, %shr245, !dbg !16644
  br label %cond.end250, !dbg !16644

cond.false247:                                    ; preds = %cond.end224
  %191 = load i8*, i8** %misc, align 8, !dbg !16644
  %192 = bitcast i8* %191 to i32*, !dbg !16644
  %add.ptr248 = getelementptr i32, i32* %192, i64 1, !dbg !16644
  %193 = load i32, i32* %add.ptr248, align 4, !dbg !16644
  %call249 = call i32 @__fswab32(i32 %193) #10, !dbg !16644
  br label %cond.end250, !dbg !16644

cond.end250:                                      ; preds = %cond.false247, %cond.true231
  %cond251 = phi i32 [ %or246, %cond.true231 ], [ %call249, %cond.false247 ], !dbg !16644
  %and252 = and i32 %cond251, -65536, !dbg !16644
  %or253 = or i32 %and252, 65535, !dbg !16644
  %and254 = and i32 %or253, 65280, !dbg !16644
  %shl255 = shl i32 %and254, 8, !dbg !16644
  %or256 = or i32 %shl229, %shl255, !dbg !16644
  %194 = load i8*, i8** %misc, align 8, !dbg !16644
  %195 = bitcast i8* %194 to i32*, !dbg !16644
  %add.ptr257 = getelementptr i32, i32* %195, i64 1, !dbg !16644
  %196 = load i32, i32* %add.ptr257, align 4, !dbg !16644
  %197 = call i1 @llvm.is.constant.i32(i32 %196), !dbg !16644
  br i1 %197, label %cond.true258, label %cond.false274, !dbg !16644

cond.true258:                                     ; preds = %cond.end250
  %198 = load i8*, i8** %misc, align 8, !dbg !16644
  %199 = bitcast i8* %198 to i32*, !dbg !16644
  %add.ptr259 = getelementptr i32, i32* %199, i64 1, !dbg !16644
  %200 = load i32, i32* %add.ptr259, align 4, !dbg !16644
  %and260 = and i32 %200, 255, !dbg !16644
  %shl261 = shl i32 %and260, 24, !dbg !16644
  %201 = load i8*, i8** %misc, align 8, !dbg !16644
  %202 = bitcast i8* %201 to i32*, !dbg !16644
  %add.ptr262 = getelementptr i32, i32* %202, i64 1, !dbg !16644
  %203 = load i32, i32* %add.ptr262, align 4, !dbg !16644
  %and263 = and i32 %203, 65280, !dbg !16644
  %shl264 = shl i32 %and263, 8, !dbg !16644
  %or265 = or i32 %shl261, %shl264, !dbg !16644
  %204 = load i8*, i8** %misc, align 8, !dbg !16644
  %205 = bitcast i8* %204 to i32*, !dbg !16644
  %add.ptr266 = getelementptr i32, i32* %205, i64 1, !dbg !16644
  %206 = load i32, i32* %add.ptr266, align 4, !dbg !16644
  %and267 = and i32 %206, 16711680, !dbg !16644
  %shr268 = lshr i32 %and267, 8, !dbg !16644
  %or269 = or i32 %or265, %shr268, !dbg !16644
  %207 = load i8*, i8** %misc, align 8, !dbg !16644
  %208 = bitcast i8* %207 to i32*, !dbg !16644
  %add.ptr270 = getelementptr i32, i32* %208, i64 1, !dbg !16644
  %209 = load i32, i32* %add.ptr270, align 4, !dbg !16644
  %and271 = and i32 %209, -16777216, !dbg !16644
  %shr272 = lshr i32 %and271, 24, !dbg !16644
  %or273 = or i32 %or269, %shr272, !dbg !16644
  br label %cond.end277, !dbg !16644

cond.false274:                                    ; preds = %cond.end250
  %210 = load i8*, i8** %misc, align 8, !dbg !16644
  %211 = bitcast i8* %210 to i32*, !dbg !16644
  %add.ptr275 = getelementptr i32, i32* %211, i64 1, !dbg !16644
  %212 = load i32, i32* %add.ptr275, align 4, !dbg !16644
  %call276 = call i32 @__fswab32(i32 %212) #10, !dbg !16644
  br label %cond.end277, !dbg !16644

cond.end277:                                      ; preds = %cond.false274, %cond.true258
  %cond278 = phi i32 [ %or273, %cond.true258 ], [ %call276, %cond.false274 ], !dbg !16644
  %and279 = and i32 %cond278, -65536, !dbg !16644
  %or280 = or i32 %and279, 65535, !dbg !16644
  %and281 = and i32 %or280, 16711680, !dbg !16644
  %shr282 = lshr i32 %and281, 8, !dbg !16644
  %or283 = or i32 %or256, %shr282, !dbg !16644
  %213 = load i8*, i8** %misc, align 8, !dbg !16644
  %214 = bitcast i8* %213 to i32*, !dbg !16644
  %add.ptr284 = getelementptr i32, i32* %214, i64 1, !dbg !16644
  %215 = load i32, i32* %add.ptr284, align 4, !dbg !16644
  %216 = call i1 @llvm.is.constant.i32(i32 %215), !dbg !16644
  br i1 %216, label %cond.true285, label %cond.false301, !dbg !16644

cond.true285:                                     ; preds = %cond.end277
  %217 = load i8*, i8** %misc, align 8, !dbg !16644
  %218 = bitcast i8* %217 to i32*, !dbg !16644
  %add.ptr286 = getelementptr i32, i32* %218, i64 1, !dbg !16644
  %219 = load i32, i32* %add.ptr286, align 4, !dbg !16644
  %and287 = and i32 %219, 255, !dbg !16644
  %shl288 = shl i32 %and287, 24, !dbg !16644
  %220 = load i8*, i8** %misc, align 8, !dbg !16644
  %221 = bitcast i8* %220 to i32*, !dbg !16644
  %add.ptr289 = getelementptr i32, i32* %221, i64 1, !dbg !16644
  %222 = load i32, i32* %add.ptr289, align 4, !dbg !16644
  %and290 = and i32 %222, 65280, !dbg !16644
  %shl291 = shl i32 %and290, 8, !dbg !16644
  %or292 = or i32 %shl288, %shl291, !dbg !16644
  %223 = load i8*, i8** %misc, align 8, !dbg !16644
  %224 = bitcast i8* %223 to i32*, !dbg !16644
  %add.ptr293 = getelementptr i32, i32* %224, i64 1, !dbg !16644
  %225 = load i32, i32* %add.ptr293, align 4, !dbg !16644
  %and294 = and i32 %225, 16711680, !dbg !16644
  %shr295 = lshr i32 %and294, 8, !dbg !16644
  %or296 = or i32 %or292, %shr295, !dbg !16644
  %226 = load i8*, i8** %misc, align 8, !dbg !16644
  %227 = bitcast i8* %226 to i32*, !dbg !16644
  %add.ptr297 = getelementptr i32, i32* %227, i64 1, !dbg !16644
  %228 = load i32, i32* %add.ptr297, align 4, !dbg !16644
  %and298 = and i32 %228, -16777216, !dbg !16644
  %shr299 = lshr i32 %and298, 24, !dbg !16644
  %or300 = or i32 %or296, %shr299, !dbg !16644
  br label %cond.end304, !dbg !16644

cond.false301:                                    ; preds = %cond.end277
  %229 = load i8*, i8** %misc, align 8, !dbg !16644
  %230 = bitcast i8* %229 to i32*, !dbg !16644
  %add.ptr302 = getelementptr i32, i32* %230, i64 1, !dbg !16644
  %231 = load i32, i32* %add.ptr302, align 4, !dbg !16644
  %call303 = call i32 @__fswab32(i32 %231) #10, !dbg !16644
  br label %cond.end304, !dbg !16644

cond.end304:                                      ; preds = %cond.false301, %cond.true285
  %cond305 = phi i32 [ %or300, %cond.true285 ], [ %call303, %cond.false301 ], !dbg !16644
  %and306 = and i32 %cond305, -65536, !dbg !16644
  %or307 = or i32 %and306, 65535, !dbg !16644
  %and308 = and i32 %or307, -16777216, !dbg !16644
  %shr309 = lshr i32 %and308, 24, !dbg !16644
  %or310 = or i32 %or283, %shr309, !dbg !16644
  br label %cond.end337, !dbg !16644

cond.false311:                                    ; preds = %cond.end199
  %232 = load i8*, i8** %misc, align 8, !dbg !16644
  %233 = bitcast i8* %232 to i32*, !dbg !16644
  %add.ptr312 = getelementptr i32, i32* %233, i64 1, !dbg !16644
  %234 = load i32, i32* %add.ptr312, align 4, !dbg !16644
  %235 = call i1 @llvm.is.constant.i32(i32 %234), !dbg !16644
  br i1 %235, label %cond.true313, label %cond.false329, !dbg !16644

cond.true313:                                     ; preds = %cond.false311
  %236 = load i8*, i8** %misc, align 8, !dbg !16644
  %237 = bitcast i8* %236 to i32*, !dbg !16644
  %add.ptr314 = getelementptr i32, i32* %237, i64 1, !dbg !16644
  %238 = load i32, i32* %add.ptr314, align 4, !dbg !16644
  %and315 = and i32 %238, 255, !dbg !16644
  %shl316 = shl i32 %and315, 24, !dbg !16644
  %239 = load i8*, i8** %misc, align 8, !dbg !16644
  %240 = bitcast i8* %239 to i32*, !dbg !16644
  %add.ptr317 = getelementptr i32, i32* %240, i64 1, !dbg !16644
  %241 = load i32, i32* %add.ptr317, align 4, !dbg !16644
  %and318 = and i32 %241, 65280, !dbg !16644
  %shl319 = shl i32 %and318, 8, !dbg !16644
  %or320 = or i32 %shl316, %shl319, !dbg !16644
  %242 = load i8*, i8** %misc, align 8, !dbg !16644
  %243 = bitcast i8* %242 to i32*, !dbg !16644
  %add.ptr321 = getelementptr i32, i32* %243, i64 1, !dbg !16644
  %244 = load i32, i32* %add.ptr321, align 4, !dbg !16644
  %and322 = and i32 %244, 16711680, !dbg !16644
  %shr323 = lshr i32 %and322, 8, !dbg !16644
  %or324 = or i32 %or320, %shr323, !dbg !16644
  %245 = load i8*, i8** %misc, align 8, !dbg !16644
  %246 = bitcast i8* %245 to i32*, !dbg !16644
  %add.ptr325 = getelementptr i32, i32* %246, i64 1, !dbg !16644
  %247 = load i32, i32* %add.ptr325, align 4, !dbg !16644
  %and326 = and i32 %247, -16777216, !dbg !16644
  %shr327 = lshr i32 %and326, 24, !dbg !16644
  %or328 = or i32 %or324, %shr327, !dbg !16644
  br label %cond.end332, !dbg !16644

cond.false329:                                    ; preds = %cond.false311
  %248 = load i8*, i8** %misc, align 8, !dbg !16644
  %249 = bitcast i8* %248 to i32*, !dbg !16644
  %add.ptr330 = getelementptr i32, i32* %249, i64 1, !dbg !16644
  %250 = load i32, i32* %add.ptr330, align 4, !dbg !16644
  %call331 = call i32 @__fswab32(i32 %250) #10, !dbg !16644
  br label %cond.end332, !dbg !16644

cond.end332:                                      ; preds = %cond.false329, %cond.true313
  %cond333 = phi i32 [ %or328, %cond.true313 ], [ %call331, %cond.false329 ], !dbg !16644
  %and334 = and i32 %cond333, -65536, !dbg !16644
  %or335 = or i32 %and334, 65535, !dbg !16644
  %call336 = call i32 @__fswab32(i32 %or335) #10, !dbg !16644
  br label %cond.end337, !dbg !16644

cond.end337:                                      ; preds = %cond.end332, %cond.end304
  %cond338 = phi i32 [ %or310, %cond.end304 ], [ %call336, %cond.end332 ], !dbg !16644
  %251 = load i8*, i8** %misc, align 8, !dbg !16644
  %252 = bitcast i8* %251 to i32*, !dbg !16644
  %add.ptr339 = getelementptr i32, i32* %252, i64 1, !dbg !16644
  store i32 %cond338, i32* %add.ptr339, align 4, !dbg !16644
  br label %do.end340, !dbg !16644

do.end340:                                        ; preds = %cond.end337
  %253 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16648
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %253, i32 0, i32 0, !dbg !16649
  store i8 2, i8* %match_criteria_enable, align 4, !dbg !16650
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 0, !dbg !16651
  store i32 1, i32* %type, align 8, !dbg !16652
  %254 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16653
  %fdb_table341 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %254, i32 0, i32 2, !dbg !16654
  %255 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table341, i32 0, i32 0, !dbg !16655
  %legacy342 = bitcast %union.anon.154* %255 to %struct.legacy_fdb*, !dbg !16655
  %fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy342, i32 0, i32 0, !dbg !16656
  %256 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !16656
  %257 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 1, !dbg !16657
  %ft = bitcast %union.anon.146* %257 to %struct.mlx5_flow_table**, !dbg !16657
  store %struct.mlx5_flow_table* %256, %struct.mlx5_flow_table** %ft, align 8, !dbg !16658
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !16659
  store i32 4, i32* %action, align 8, !dbg !16660
  %258 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16661
  %fdb_table343 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %258, i32 0, i32 2, !dbg !16662
  %259 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table343, i32 0, i32 0, !dbg !16663
  %legacy344 = bitcast %union.anon.154* %259 to %struct.legacy_fdb*, !dbg !16663
  %vepa_fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy344, i32 0, i32 4, !dbg !16664
  %260 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %vepa_fdb, align 8, !dbg !16664
  %261 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16665
  %call345 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %260, %struct.mlx5_flow_spec* %261, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !16666
  store %struct.mlx5_flow_handle* %call345, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16667
  %262 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16668
  %263 = bitcast %struct.mlx5_flow_handle* %262 to i8*, !dbg !16668
  %call346 = call zeroext i1 @IS_ERR(i8* %263) #8, !dbg !16670
  br i1 %call346, label %if.then347, label %if.else, !dbg !16671

if.then347:                                       ; preds = %do.end340
  %264 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16672
  %265 = bitcast %struct.mlx5_flow_handle* %264 to i8*, !dbg !16672
  %call348 = call i64 @PTR_ERR(i8* %265) #8, !dbg !16674
  %conv = trunc i64 %call348 to i32, !dbg !16674
  store i32 %conv, i32* %err, align 4, !dbg !16675
  br label %out, !dbg !16676

if.else:                                          ; preds = %do.end340
  %266 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16677
  %267 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16679
  %fdb_table349 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %267, i32 0, i32 2, !dbg !16680
  %268 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table349, i32 0, i32 0, !dbg !16681
  %legacy350 = bitcast %union.anon.154* %268 to %struct.legacy_fdb*, !dbg !16681
  %vepa_uplink_rule351 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy350, i32 0, i32 5, !dbg !16682
  store %struct.mlx5_flow_handle* %266, %struct.mlx5_flow_handle** %vepa_uplink_rule351, align 8, !dbg !16683
  br label %if.end352

if.end352:                                        ; preds = %if.else
  %269 = bitcast %struct.mlx5_flow_destination* %dest to i8*, !dbg !16684
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 32, i1 false), !dbg !16684
  %type353 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 0, !dbg !16685
  store i32 0, i32* %type353, align 8, !dbg !16686
  %270 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 1, !dbg !16687
  %vport = bitcast %union.anon.146* %270 to %struct.anon.147*, !dbg !16687
  %num = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport, i32 0, i32 0, !dbg !16688
  store i16 -1, i16* %num, align 8, !dbg !16689
  %action354 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !16690
  store i32 4, i32* %action354, align 8, !dbg !16691
  %271 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16692
  %fdb_table355 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %271, i32 0, i32 2, !dbg !16693
  %272 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table355, i32 0, i32 0, !dbg !16694
  %legacy356 = bitcast %union.anon.154* %272 to %struct.legacy_fdb*, !dbg !16694
  %vepa_fdb357 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy356, i32 0, i32 4, !dbg !16695
  %273 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %vepa_fdb357, align 8, !dbg !16695
  %call358 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %273, %struct.mlx5_flow_spec* null, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !16696
  store %struct.mlx5_flow_handle* %call358, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16697
  %274 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16698
  %275 = bitcast %struct.mlx5_flow_handle* %274 to i8*, !dbg !16698
  %call359 = call zeroext i1 @IS_ERR(i8* %275) #8, !dbg !16700
  br i1 %call359, label %if.then360, label %if.else363, !dbg !16701

if.then360:                                       ; preds = %if.end352
  %276 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16702
  %277 = bitcast %struct.mlx5_flow_handle* %276 to i8*, !dbg !16702
  %call361 = call i64 @PTR_ERR(i8* %277) #8, !dbg !16704
  %conv362 = trunc i64 %call361 to i32, !dbg !16704
  store i32 %conv362, i32* %err, align 4, !dbg !16705
  br label %out, !dbg !16706

if.else363:                                       ; preds = %if.end352
  %278 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16707
  %279 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16709
  %fdb_table364 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %279, i32 0, i32 2, !dbg !16710
  %280 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table364, i32 0, i32 0, !dbg !16711
  %legacy365 = bitcast %union.anon.154* %280 to %struct.legacy_fdb*, !dbg !16711
  %vepa_star_rule = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy365, i32 0, i32 6, !dbg !16712
  store %struct.mlx5_flow_handle* %278, %struct.mlx5_flow_handle** %vepa_star_rule, align 8, !dbg !16713
  br label %if.end366

if.end366:                                        ; preds = %if.else363
  br label %out, !dbg !16714

out:                                              ; preds = %if.end366, %if.then360, %if.then347
  call void @llvm.dbg.label(metadata !16715), !dbg !16716
  %281 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16717
  %282 = bitcast %struct.mlx5_flow_spec* %281 to i8*, !dbg !16717
  call void @kvfree(i8* %282) #8, !dbg !16718
  %283 = load i32, i32* %err, align 4, !dbg !16719
  %tobool367 = icmp ne i32 %283, 0, !dbg !16719
  br i1 %tobool367, label %if.then368, label %if.end369, !dbg !16721

if.then368:                                       ; preds = %out
  %284 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16722
  call void @esw_cleanup_vepa_rules(%struct.mlx5_eswitch* %284) #8, !dbg !16723
  br label %if.end369, !dbg !16723

if.end369:                                        ; preds = %if.then368, %out
  %285 = load i32, i32* %err, align 4, !dbg !16724
  store i32 %285, i32* %retval, align 4, !dbg !16725
  br label %return, !dbg !16725

return:                                           ; preds = %if.end369, %if.then5, %if.then2, %if.then
  %286 = load i32, i32* %retval, align 4, !dbg !16726
  ret i32 %286, !dbg !16726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_get_vepa(%struct.mlx5_eswitch* %esw, i8* %setting) #0 !dbg !16727 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %setting.addr = alloca i8*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16730, metadata !DIExpression()), !dbg !16731
  store i8* %setting, i8** %setting.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %setting.addr, metadata !16732, metadata !DIExpression()), !dbg !16733
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16734
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !16734
  br i1 %tobool, label %if.end, label %if.then, !dbg !16736

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !16737
  br label %return, !dbg !16737

if.end:                                           ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16738
  %tobool1 = icmp ne %struct.mlx5_eswitch* %1, null, !dbg !16738
  br i1 %tobool1, label %land.lhs.true, label %if.then42, !dbg !16738

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16738
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !16738
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16738
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !16738
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !16738
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !16738
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !16738
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !16738
  %4 = load i32, i32* %add.ptr, align 4, !dbg !16738
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !16738
  br i1 %5, label %cond.true, label %cond.false, !dbg !16738

cond.true:                                        ; preds = %land.lhs.true
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16738
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 0, !dbg !16738
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !16738
  %caps3 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !16738
  %hca_cur4 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps3, i32 0, i32 0, !dbg !16738
  %arrayidx5 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur4, i64 0, i64 0, !dbg !16738
  %arraydecay6 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx5, i64 0, i64 0, !dbg !16738
  %add.ptr7 = getelementptr i32, i32* %arraydecay6, i64 13, !dbg !16738
  %8 = load i32, i32* %add.ptr7, align 4, !dbg !16738
  %and = and i32 %8, 255, !dbg !16738
  %shl = shl i32 %and, 24, !dbg !16738
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16738
  %dev8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 0, !dbg !16738
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev8, align 8, !dbg !16738
  %caps9 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !16738
  %hca_cur10 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps9, i32 0, i32 0, !dbg !16738
  %arrayidx11 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur10, i64 0, i64 0, !dbg !16738
  %arraydecay12 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx11, i64 0, i64 0, !dbg !16738
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 13, !dbg !16738
  %11 = load i32, i32* %add.ptr13, align 4, !dbg !16738
  %and14 = and i32 %11, 65280, !dbg !16738
  %shl15 = shl i32 %and14, 8, !dbg !16738
  %or = or i32 %shl, %shl15, !dbg !16738
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16738
  %dev16 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %12, i32 0, i32 0, !dbg !16738
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev16, align 8, !dbg !16738
  %caps17 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !16738
  %hca_cur18 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps17, i32 0, i32 0, !dbg !16738
  %arrayidx19 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur18, i64 0, i64 0, !dbg !16738
  %arraydecay20 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx19, i64 0, i64 0, !dbg !16738
  %add.ptr21 = getelementptr i32, i32* %arraydecay20, i64 13, !dbg !16738
  %14 = load i32, i32* %add.ptr21, align 4, !dbg !16738
  %and22 = and i32 %14, 16711680, !dbg !16738
  %shr = lshr i32 %and22, 8, !dbg !16738
  %or23 = or i32 %or, %shr, !dbg !16738
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16738
  %dev24 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 0, !dbg !16738
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev24, align 8, !dbg !16738
  %caps25 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !16738
  %hca_cur26 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps25, i32 0, i32 0, !dbg !16738
  %arrayidx27 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur26, i64 0, i64 0, !dbg !16738
  %arraydecay28 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx27, i64 0, i64 0, !dbg !16738
  %add.ptr29 = getelementptr i32, i32* %arraydecay28, i64 13, !dbg !16738
  %17 = load i32, i32* %add.ptr29, align 4, !dbg !16738
  %and30 = and i32 %17, -16777216, !dbg !16738
  %shr31 = lshr i32 %and30, 24, !dbg !16738
  %or32 = or i32 %or23, %shr31, !dbg !16738
  br label %cond.end, !dbg !16738

cond.false:                                       ; preds = %land.lhs.true
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16738
  %dev33 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 0, !dbg !16738
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev33, align 8, !dbg !16738
  %caps34 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !16738
  %hca_cur35 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps34, i32 0, i32 0, !dbg !16738
  %arrayidx36 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur35, i64 0, i64 0, !dbg !16738
  %arraydecay37 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx36, i64 0, i64 0, !dbg !16738
  %add.ptr38 = getelementptr i32, i32* %arraydecay37, i64 13, !dbg !16738
  %20 = load i32, i32* %add.ptr38, align 4, !dbg !16738
  %call = call i32 @__fswab32(i32 %20) #10, !dbg !16738
  br label %cond.end, !dbg !16738

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or32, %cond.true ], [ %call, %cond.false ], !dbg !16738
  %shr39 = lshr i32 %cond, 24, !dbg !16738
  %and40 = and i32 %shr39, 1, !dbg !16738
  %tobool41 = icmp ne i32 %and40, 0, !dbg !16738
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !16740

if.then42:                                        ; preds = %cond.end, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16741
  br label %return, !dbg !16741

if.end43:                                         ; preds = %cond.end
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16742
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 14, !dbg !16744
  %22 = load i32, i32* %mode, align 8, !dbg !16744
  %cmp = icmp ne i32 %22, 1, !dbg !16745
  br i1 %cmp, label %if.then44, label %if.end45, !dbg !16746

if.then44:                                        ; preds = %if.end43
  store i32 -95, i32* %retval, align 4, !dbg !16747
  br label %return, !dbg !16747

if.end45:                                         ; preds = %if.end43
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16748
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 2, !dbg !16749
  %24 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !16750
  %legacy = bitcast %union.anon.154* %24 to %struct.legacy_fdb*, !dbg !16750
  %vepa_uplink_rule = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 5, !dbg !16751
  %25 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %vepa_uplink_rule, align 8, !dbg !16751
  %tobool46 = icmp ne %struct.mlx5_flow_handle* %25, null, !dbg !16748
  %26 = zext i1 %tobool46 to i64, !dbg !16748
  %cond47 = select i1 %tobool46, i32 1, i32 0, !dbg !16748
  %conv = trunc i32 %cond47 to i8, !dbg !16748
  %27 = load i8*, i8** %setting.addr, align 8, !dbg !16752
  store i8 %conv, i8* %27, align 1, !dbg !16753
  store i32 0, i32* %retval, align 4, !dbg !16754
  br label %return, !dbg !16754

return:                                           ; preds = %if.end45, %if.then44, %if.then42, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !16755
  ret i32 %28, !dbg !16755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_set_vport_trust(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i1 zeroext %setting) #0 !dbg !16756 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %setting.addr = alloca i8, align 1
  %evport = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16757, metadata !DIExpression()), !dbg !16758
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !16759, metadata !DIExpression()), !dbg !16760
  %frombool = zext i1 %setting to i8
  store i8 %frombool, i8* %setting.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %setting.addr, metadata !16761, metadata !DIExpression()), !dbg !16762
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !16763, metadata !DIExpression()), !dbg !16764
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16765
  %1 = load i16, i16* %vport.addr, align 2, !dbg !16766
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !16767
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %evport, align 8, !dbg !16764
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16768
  %tobool = icmp ne %struct.mlx5_eswitch* %2, null, !dbg !16768
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !16768

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16768
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !16768
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16768
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !16768
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !16768
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !16768
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !16768
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !16768
  %5 = load i32, i32* %add.ptr, align 4, !dbg !16768
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !16768
  br i1 %6, label %cond.true, label %cond.false, !dbg !16768

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16768
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !16768
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !16768
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !16768
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !16768
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !16768
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !16768
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !16768
  %9 = load i32, i32* %add.ptr6, align 4, !dbg !16768
  %and = and i32 %9, 255, !dbg !16768
  %shl = shl i32 %and, 24, !dbg !16768
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16768
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !16768
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !16768
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !16768
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !16768
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !16768
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !16768
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !16768
  %12 = load i32, i32* %add.ptr12, align 4, !dbg !16768
  %and13 = and i32 %12, 65280, !dbg !16768
  %shl14 = shl i32 %and13, 8, !dbg !16768
  %or = or i32 %shl, %shl14, !dbg !16768
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16768
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !16768
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !16768
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !16768
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !16768
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !16768
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !16768
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !16768
  %15 = load i32, i32* %add.ptr20, align 4, !dbg !16768
  %and21 = and i32 %15, 16711680, !dbg !16768
  %shr = lshr i32 %and21, 8, !dbg !16768
  %or22 = or i32 %or, %shr, !dbg !16768
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16768
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !16768
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !16768
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !16768
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !16768
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !16768
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !16768
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !16768
  %18 = load i32, i32* %add.ptr28, align 4, !dbg !16768
  %and29 = and i32 %18, -16777216, !dbg !16768
  %shr30 = lshr i32 %and29, 24, !dbg !16768
  %or31 = or i32 %or22, %shr30, !dbg !16768
  br label %cond.end, !dbg !16768

cond.false:                                       ; preds = %land.lhs.true
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16768
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !16768
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !16768
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !16768
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !16768
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !16768
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !16768
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !16768
  %21 = load i32, i32* %add.ptr37, align 4, !dbg !16768
  %call38 = call i32 @__fswab32(i32 %21) #10, !dbg !16768
  br label %cond.end, !dbg !16768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call38, %cond.false ], !dbg !16768
  %shr39 = lshr i32 %cond, 24, !dbg !16768
  %and40 = and i32 %shr39, 1, !dbg !16768
  %tobool41 = icmp ne i32 %and40, 0, !dbg !16768
  br i1 %tobool41, label %if.end, label %if.then, !dbg !16770

if.then:                                          ; preds = %cond.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !16771
  br label %return, !dbg !16771

if.end:                                           ; preds = %cond.end
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16772
  %23 = bitcast %struct.mlx5_vport* %22 to i8*, !dbg !16772
  %call42 = call zeroext i1 @IS_ERR(i8* %23) #8, !dbg !16774
  br i1 %call42, label %if.then43, label %if.end45, !dbg !16775

if.then43:                                        ; preds = %if.end
  %24 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16776
  %25 = bitcast %struct.mlx5_vport* %24 to i8*, !dbg !16776
  %call44 = call i64 @PTR_ERR(i8* %25) #8, !dbg !16777
  %conv = trunc i64 %call44 to i32, !dbg !16777
  store i32 %conv, i32* %retval, align 4, !dbg !16778
  br label %return, !dbg !16778

if.end45:                                         ; preds = %if.end
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16779
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 10, !dbg !16780
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !16781
  %27 = load i8, i8* %setting.addr, align 1, !dbg !16782
  %tobool46 = trunc i8 %27 to i1, !dbg !16782
  %28 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16783
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %28, i32 0, i32 11, !dbg !16784
  %trusted = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 8, !dbg !16785
  %frombool47 = zext i1 %tobool46 to i8, !dbg !16786
  store i8 %frombool47, i8* %trusted, align 1, !dbg !16786
  %29 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16787
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %29, i32 0, i32 13, !dbg !16789
  %30 = load i8, i8* %enabled, align 4, !dbg !16789
  %tobool48 = trunc i8 %30 to i1, !dbg !16789
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !16790

if.then49:                                        ; preds = %if.end45
  %31 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16791
  call void @esw_vport_change_handle_locked(%struct.mlx5_vport* %31) #8, !dbg !16792
  br label %if.end50, !dbg !16792

if.end50:                                         ; preds = %if.then49, %if.end45
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16793
  %state_lock51 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %32, i32 0, i32 10, !dbg !16794
  call void @mutex_unlock(%struct.mutex* %state_lock51) #8, !dbg !16795
  store i32 0, i32* %retval, align 4, !dbg !16796
  br label %return, !dbg !16796

return:                                           ; preds = %if.end50, %if.then43, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !16797
  ret i32 %33, !dbg !16797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vport_change_handle_locked(%struct.mlx5_vport* %vport) #0 !dbg !16798 {
entry:
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %mac = alloca [6 x i8], align 1
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !16801, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !16803, metadata !DIExpression()), !dbg !16804
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16805
  %dev1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %0, i32 0, i32 0, !dbg !16806
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !16806
  store %struct.mlx5_core_dev* %1, %struct.mlx5_core_dev** %dev, align 8, !dbg !16804
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !16807, metadata !DIExpression()), !dbg !16808
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16809
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 17, !dbg !16810
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !16811
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !16811
  store %struct.mlx5_eswitch* %3, %struct.mlx5_eswitch** %esw, align 8, !dbg !16808
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac, metadata !16812, metadata !DIExpression()), !dbg !16813
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16814
  %5 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16815
  %vport2 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %5, i32 0, i32 1, !dbg !16816
  %6 = load i32, i32* %vport2, align 8, !dbg !16816
  %conv = trunc i32 %6 to i16, !dbg !16815
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !16817
  %call = call i32 @mlx5_query_nic_vport_mac_address(%struct.mlx5_core_dev* %4, i16 zeroext %conv, i1 zeroext true, i8* %arraydecay) #8, !dbg !16818
  br label %do.body, !dbg !16819

do.body:                                          ; preds = %entry
  %7 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !16820
  %conv3 = zext i32 %7 to i64, !dbg !16820
  %and = and i64 8, %conv3, !dbg !16820
  %tobool = icmp ne i64 %and, 0, !dbg !16820
  br i1 %tobool, label %if.then, label %if.end, !dbg !16823

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !16820

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16823

do.end:                                           ; preds = %if.end
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16824
  %enabled_events = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %8, i32 0, i32 14, !dbg !16826
  %9 = load i32, i32* %enabled_events, align 8, !dbg !16826
  %and4 = and i32 %9, 1, !dbg !16827
  %tobool5 = icmp ne i32 %and4, 0, !dbg !16827
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !16828

if.then6:                                         ; preds = %do.end
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16829
  %11 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16831
  call void @esw_update_vport_addr_list(%struct.mlx5_eswitch* %10, %struct.mlx5_vport* %11, i32 0) #8, !dbg !16832
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16833
  %13 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16834
  call void @esw_apply_vport_addr_list(%struct.mlx5_eswitch* %12, %struct.mlx5_vport* %13, i32 0) #8, !dbg !16835
  br label %if.end7, !dbg !16836

if.end7:                                          ; preds = %if.then6, %do.end
  %14 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16837
  %enabled_events8 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %14, i32 0, i32 14, !dbg !16839
  %15 = load i32, i32* %enabled_events8, align 8, !dbg !16839
  %and9 = and i32 %15, 2, !dbg !16840
  %tobool10 = icmp ne i32 %and9, 0, !dbg !16840
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !16841

if.then11:                                        ; preds = %if.end7
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16842
  %17 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16843
  call void @esw_update_vport_addr_list(%struct.mlx5_eswitch* %16, %struct.mlx5_vport* %17, i32 1) #8, !dbg !16844
  br label %if.end12, !dbg !16844

if.end12:                                         ; preds = %if.then11, %if.end7
  %18 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16845
  %enabled_events13 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %18, i32 0, i32 14, !dbg !16847
  %19 = load i32, i32* %enabled_events13, align 8, !dbg !16847
  %and14 = and i32 %19, 8, !dbg !16848
  %tobool15 = icmp ne i32 %and14, 0, !dbg !16848
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !16849

if.then16:                                        ; preds = %if.end12
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16850
  %21 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16852
  call void @esw_update_vport_rx_mode(%struct.mlx5_eswitch* %20, %struct.mlx5_vport* %21) #8, !dbg !16853
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16854
  %allmulti_rule = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %22, i32 0, i32 5, !dbg !16856
  %23 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %allmulti_rule, align 8, !dbg !16856
  %24 = bitcast %struct.mlx5_flow_handle* %23 to i8*, !dbg !16854
  %call17 = call zeroext i1 @IS_ERR_OR_NULL(i8* %24) #8, !dbg !16857
  br i1 %call17, label %if.end19, label %if.then18, !dbg !16858

if.then18:                                        ; preds = %if.then16
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16859
  %26 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16860
  call void @esw_update_vport_mc_promisc(%struct.mlx5_eswitch* %25, %struct.mlx5_vport* %26) #8, !dbg !16861
  br label %if.end19, !dbg !16861

if.end19:                                         ; preds = %if.then18, %if.then16
  br label %if.end20, !dbg !16862

if.end20:                                         ; preds = %if.end19, %if.end12
  %27 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16863
  %enabled_events21 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %27, i32 0, i32 14, !dbg !16865
  %28 = load i32, i32* %enabled_events21, align 8, !dbg !16865
  %and22 = and i32 %28, 10, !dbg !16866
  %tobool23 = icmp ne i32 %and22, 0, !dbg !16866
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !16867

if.then24:                                        ; preds = %if.end20
  %29 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16868
  %30 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16869
  call void @esw_apply_vport_addr_list(%struct.mlx5_eswitch* %29, %struct.mlx5_vport* %30, i32 1) #8, !dbg !16870
  br label %if.end25, !dbg !16870

if.end25:                                         ; preds = %if.then24, %if.end20
  br label %do.body26, !dbg !16871

do.body26:                                        ; preds = %if.end25
  %31 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !16872
  %conv27 = zext i32 %31 to i64, !dbg !16872
  %and28 = and i64 8, %conv27, !dbg !16872
  %tobool29 = icmp ne i64 %and28, 0, !dbg !16872
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !16875

if.then30:                                        ; preds = %do.body26
  br label %if.end31, !dbg !16872

if.end31:                                         ; preds = %if.then30, %do.body26
  br label %do.end32, !dbg !16875

do.end32:                                         ; preds = %if.end31
  %32 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16876
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %32, i32 0, i32 13, !dbg !16878
  %33 = load i8, i8* %enabled, align 4, !dbg !16878
  %tobool33 = trunc i8 %33 to i1, !dbg !16878
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !16879

if.then34:                                        ; preds = %do.end32
  %34 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16880
  %35 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16881
  %vport35 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %35, i32 0, i32 1, !dbg !16882
  %36 = load i32, i32* %vport35, align 8, !dbg !16882
  %conv36 = trunc i32 %36 to i16, !dbg !16881
  %37 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16883
  %enabled_events37 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %37, i32 0, i32 14, !dbg !16884
  %38 = load i32, i32* %enabled_events37, align 8, !dbg !16884
  %call38 = call i32 @arm_vport_context_events_cmd(%struct.mlx5_core_dev* %34, i16 zeroext %conv36, i32 %38) #8, !dbg !16885
  br label %if.end39, !dbg !16885

if.end39:                                         ; preds = %if.then34, %do.end32
  ret void, !dbg !16886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_set_vport_rate(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i32 %max_rate, i32 %min_rate) #0 !dbg !16887 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %max_rate.addr = alloca i32, align 4
  %min_rate.addr = alloca i32, align 4
  %evport = alloca %struct.mlx5_vport*, align 8
  %fw_max_bw_share = alloca i32, align 4
  %previous_min_rate = alloca i32, align 4
  %min_rate_supported = alloca i8, align 1
  %max_rate_supported = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16890, metadata !DIExpression()), !dbg !16891
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !16892, metadata !DIExpression()), !dbg !16893
  store i32 %max_rate, i32* %max_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_rate.addr, metadata !16894, metadata !DIExpression()), !dbg !16895
  store i32 %min_rate, i32* %min_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_rate.addr, metadata !16896, metadata !DIExpression()), !dbg !16897
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !16898, metadata !DIExpression()), !dbg !16899
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16900
  %1 = load i16, i16* %vport.addr, align 2, !dbg !16901
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !16902
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %evport, align 8, !dbg !16899
  call void @llvm.dbg.declare(metadata i32* %fw_max_bw_share, metadata !16903, metadata !DIExpression()), !dbg !16904
  call void @llvm.dbg.declare(metadata i32* %previous_min_rate, metadata !16905, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.declare(metadata i8* %min_rate_supported, metadata !16907, metadata !DIExpression()), !dbg !16908
  call void @llvm.dbg.declare(metadata i8* %max_rate_supported, metadata !16909, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16911, metadata !DIExpression()), !dbg !16912
  store i32 0, i32* %err, align 4, !dbg !16912
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16913
  %tobool = icmp ne %struct.mlx5_eswitch* %2, null, !dbg !16913
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !16913

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16913
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !16913
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16913
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !16913
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !16913
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !16913
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !16913
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !16913
  %5 = load i32, i32* %add.ptr, align 4, !dbg !16913
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !16913
  br i1 %6, label %cond.true, label %cond.false, !dbg !16913

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16913
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !16913
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !16913
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !16913
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !16913
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !16913
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !16913
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !16913
  %9 = load i32, i32* %add.ptr6, align 4, !dbg !16913
  %and = and i32 %9, 255, !dbg !16913
  %shl = shl i32 %and, 24, !dbg !16913
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16913
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !16913
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !16913
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !16913
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !16913
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !16913
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !16913
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !16913
  %12 = load i32, i32* %add.ptr12, align 4, !dbg !16913
  %and13 = and i32 %12, 65280, !dbg !16913
  %shl14 = shl i32 %and13, 8, !dbg !16913
  %or = or i32 %shl, %shl14, !dbg !16913
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16913
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !16913
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !16913
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !16913
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !16913
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !16913
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !16913
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !16913
  %15 = load i32, i32* %add.ptr20, align 4, !dbg !16913
  %and21 = and i32 %15, 16711680, !dbg !16913
  %shr = lshr i32 %and21, 8, !dbg !16913
  %or22 = or i32 %or, %shr, !dbg !16913
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16913
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !16913
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !16913
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !16913
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !16913
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !16913
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !16913
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !16913
  %18 = load i32, i32* %add.ptr28, align 4, !dbg !16913
  %and29 = and i32 %18, -16777216, !dbg !16913
  %shr30 = lshr i32 %and29, 24, !dbg !16913
  %or31 = or i32 %or22, %shr30, !dbg !16913
  br label %cond.end, !dbg !16913

cond.false:                                       ; preds = %land.lhs.true
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16913
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !16913
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !16913
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !16913
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !16913
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !16913
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !16913
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !16913
  %21 = load i32, i32* %add.ptr37, align 4, !dbg !16913
  %call38 = call i32 @__fswab32(i32 %21) #10, !dbg !16913
  br label %cond.end, !dbg !16913

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call38, %cond.false ], !dbg !16913
  %shr39 = lshr i32 %cond, 24, !dbg !16913
  %and40 = and i32 %shr39, 1, !dbg !16913
  %tobool41 = icmp ne i32 %and40, 0, !dbg !16913
  br i1 %tobool41, label %if.end, label %if.then, !dbg !16915

if.then:                                          ; preds = %cond.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !16916
  br label %return, !dbg !16916

if.end:                                           ; preds = %cond.end
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16917
  %23 = bitcast %struct.mlx5_vport* %22 to i8*, !dbg !16917
  %call42 = call zeroext i1 @IS_ERR(i8* %23) #8, !dbg !16919
  br i1 %call42, label %if.then43, label %if.end45, !dbg !16920

if.then43:                                        ; preds = %if.end
  %24 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16921
  %25 = bitcast %struct.mlx5_vport* %24 to i8*, !dbg !16921
  %call44 = call i64 @PTR_ERR(i8* %25) #8, !dbg !16922
  %conv = trunc i64 %call44 to i32, !dbg !16922
  store i32 %conv, i32* %retval, align 4, !dbg !16923
  br label %return, !dbg !16923

if.end45:                                         ; preds = %if.end
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16924
  %dev46 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 0, !dbg !16924
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev46, align 8, !dbg !16924
  %caps47 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !16924
  %hca_cur48 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps47, i32 0, i32 0, !dbg !16924
  %arrayidx49 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur48, i64 0, i64 12, !dbg !16924
  %arraydecay50 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx49, i64 0, i64 0, !dbg !16924
  %add.ptr51 = getelementptr i32, i32* %arraydecay50, i64 7, !dbg !16924
  %28 = load i32, i32* %add.ptr51, align 4, !dbg !16924
  %29 = call i1 @llvm.is.constant.i32(i32 %28), !dbg !16924
  br i1 %29, label %cond.true52, label %cond.false88, !dbg !16924

cond.true52:                                      ; preds = %if.end45
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16924
  %dev53 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %30, i32 0, i32 0, !dbg !16924
  %31 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev53, align 8, !dbg !16924
  %caps54 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %31, i32 0, i32 9, !dbg !16924
  %hca_cur55 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps54, i32 0, i32 0, !dbg !16924
  %arrayidx56 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur55, i64 0, i64 12, !dbg !16924
  %arraydecay57 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx56, i64 0, i64 0, !dbg !16924
  %add.ptr58 = getelementptr i32, i32* %arraydecay57, i64 7, !dbg !16924
  %32 = load i32, i32* %add.ptr58, align 4, !dbg !16924
  %and59 = and i32 %32, 255, !dbg !16924
  %shl60 = shl i32 %and59, 24, !dbg !16924
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16924
  %dev61 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 0, !dbg !16924
  %34 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev61, align 8, !dbg !16924
  %caps62 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %34, i32 0, i32 9, !dbg !16924
  %hca_cur63 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps62, i32 0, i32 0, !dbg !16924
  %arrayidx64 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur63, i64 0, i64 12, !dbg !16924
  %arraydecay65 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx64, i64 0, i64 0, !dbg !16924
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 7, !dbg !16924
  %35 = load i32, i32* %add.ptr66, align 4, !dbg !16924
  %and67 = and i32 %35, 65280, !dbg !16924
  %shl68 = shl i32 %and67, 8, !dbg !16924
  %or69 = or i32 %shl60, %shl68, !dbg !16924
  %36 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16924
  %dev70 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %36, i32 0, i32 0, !dbg !16924
  %37 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev70, align 8, !dbg !16924
  %caps71 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %37, i32 0, i32 9, !dbg !16924
  %hca_cur72 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps71, i32 0, i32 0, !dbg !16924
  %arrayidx73 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur72, i64 0, i64 12, !dbg !16924
  %arraydecay74 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx73, i64 0, i64 0, !dbg !16924
  %add.ptr75 = getelementptr i32, i32* %arraydecay74, i64 7, !dbg !16924
  %38 = load i32, i32* %add.ptr75, align 4, !dbg !16924
  %and76 = and i32 %38, 16711680, !dbg !16924
  %shr77 = lshr i32 %and76, 8, !dbg !16924
  %or78 = or i32 %or69, %shr77, !dbg !16924
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16924
  %dev79 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 0, !dbg !16924
  %40 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev79, align 8, !dbg !16924
  %caps80 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %40, i32 0, i32 9, !dbg !16924
  %hca_cur81 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps80, i32 0, i32 0, !dbg !16924
  %arrayidx82 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur81, i64 0, i64 12, !dbg !16924
  %arraydecay83 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx82, i64 0, i64 0, !dbg !16924
  %add.ptr84 = getelementptr i32, i32* %arraydecay83, i64 7, !dbg !16924
  %41 = load i32, i32* %add.ptr84, align 4, !dbg !16924
  %and85 = and i32 %41, -16777216, !dbg !16924
  %shr86 = lshr i32 %and85, 24, !dbg !16924
  %or87 = or i32 %or78, %shr86, !dbg !16924
  br label %cond.end96, !dbg !16924

cond.false88:                                     ; preds = %if.end45
  %42 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16924
  %dev89 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %42, i32 0, i32 0, !dbg !16924
  %43 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev89, align 8, !dbg !16924
  %caps90 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %43, i32 0, i32 9, !dbg !16924
  %hca_cur91 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps90, i32 0, i32 0, !dbg !16924
  %arrayidx92 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur91, i64 0, i64 12, !dbg !16924
  %arraydecay93 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx92, i64 0, i64 0, !dbg !16924
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 7, !dbg !16924
  %44 = load i32, i32* %add.ptr94, align 4, !dbg !16924
  %call95 = call i32 @__fswab32(i32 %44) #10, !dbg !16924
  br label %cond.end96, !dbg !16924

cond.end96:                                       ; preds = %cond.false88, %cond.true52
  %cond97 = phi i32 [ %or87, %cond.true52 ], [ %call95, %cond.false88 ], !dbg !16924
  %shr98 = lshr i32 %cond97, 0, !dbg !16924
  store i32 %shr98, i32* %fw_max_bw_share, align 4, !dbg !16925
  %45 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16926
  %dev99 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %45, i32 0, i32 0, !dbg !16926
  %46 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev99, align 8, !dbg !16926
  %caps100 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %46, i32 0, i32 9, !dbg !16926
  %hca_cur101 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps100, i32 0, i32 0, !dbg !16926
  %arrayidx102 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur101, i64 0, i64 12, !dbg !16926
  %arraydecay103 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx102, i64 0, i64 0, !dbg !16926
  %add.ptr104 = getelementptr i32, i32* %arraydecay103, i64 0, !dbg !16926
  %47 = load i32, i32* %add.ptr104, align 4, !dbg !16926
  %48 = call i1 @llvm.is.constant.i32(i32 %47), !dbg !16926
  br i1 %48, label %cond.true105, label %cond.false141, !dbg !16926

cond.true105:                                     ; preds = %cond.end96
  %49 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16926
  %dev106 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %49, i32 0, i32 0, !dbg !16926
  %50 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev106, align 8, !dbg !16926
  %caps107 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %50, i32 0, i32 9, !dbg !16926
  %hca_cur108 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps107, i32 0, i32 0, !dbg !16926
  %arrayidx109 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur108, i64 0, i64 12, !dbg !16926
  %arraydecay110 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx109, i64 0, i64 0, !dbg !16926
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 0, !dbg !16926
  %51 = load i32, i32* %add.ptr111, align 4, !dbg !16926
  %and112 = and i32 %51, 255, !dbg !16926
  %shl113 = shl i32 %and112, 24, !dbg !16926
  %52 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16926
  %dev114 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %52, i32 0, i32 0, !dbg !16926
  %53 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev114, align 8, !dbg !16926
  %caps115 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %53, i32 0, i32 9, !dbg !16926
  %hca_cur116 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps115, i32 0, i32 0, !dbg !16926
  %arrayidx117 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur116, i64 0, i64 12, !dbg !16926
  %arraydecay118 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx117, i64 0, i64 0, !dbg !16926
  %add.ptr119 = getelementptr i32, i32* %arraydecay118, i64 0, !dbg !16926
  %54 = load i32, i32* %add.ptr119, align 4, !dbg !16926
  %and120 = and i32 %54, 65280, !dbg !16926
  %shl121 = shl i32 %and120, 8, !dbg !16926
  %or122 = or i32 %shl113, %shl121, !dbg !16926
  %55 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16926
  %dev123 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %55, i32 0, i32 0, !dbg !16926
  %56 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev123, align 8, !dbg !16926
  %caps124 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %56, i32 0, i32 9, !dbg !16926
  %hca_cur125 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps124, i32 0, i32 0, !dbg !16926
  %arrayidx126 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur125, i64 0, i64 12, !dbg !16926
  %arraydecay127 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx126, i64 0, i64 0, !dbg !16926
  %add.ptr128 = getelementptr i32, i32* %arraydecay127, i64 0, !dbg !16926
  %57 = load i32, i32* %add.ptr128, align 4, !dbg !16926
  %and129 = and i32 %57, 16711680, !dbg !16926
  %shr130 = lshr i32 %and129, 8, !dbg !16926
  %or131 = or i32 %or122, %shr130, !dbg !16926
  %58 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16926
  %dev132 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %58, i32 0, i32 0, !dbg !16926
  %59 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev132, align 8, !dbg !16926
  %caps133 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %59, i32 0, i32 9, !dbg !16926
  %hca_cur134 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps133, i32 0, i32 0, !dbg !16926
  %arrayidx135 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur134, i64 0, i64 12, !dbg !16926
  %arraydecay136 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx135, i64 0, i64 0, !dbg !16926
  %add.ptr137 = getelementptr i32, i32* %arraydecay136, i64 0, !dbg !16926
  %60 = load i32, i32* %add.ptr137, align 4, !dbg !16926
  %and138 = and i32 %60, -16777216, !dbg !16926
  %shr139 = lshr i32 %and138, 24, !dbg !16926
  %or140 = or i32 %or131, %shr139, !dbg !16926
  br label %cond.end149, !dbg !16926

cond.false141:                                    ; preds = %cond.end96
  %61 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16926
  %dev142 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %61, i32 0, i32 0, !dbg !16926
  %62 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev142, align 8, !dbg !16926
  %caps143 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %62, i32 0, i32 9, !dbg !16926
  %hca_cur144 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps143, i32 0, i32 0, !dbg !16926
  %arrayidx145 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur144, i64 0, i64 12, !dbg !16926
  %arraydecay146 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx145, i64 0, i64 0, !dbg !16926
  %add.ptr147 = getelementptr i32, i32* %arraydecay146, i64 0, !dbg !16926
  %63 = load i32, i32* %add.ptr147, align 4, !dbg !16926
  %call148 = call i32 @__fswab32(i32 %63) #10, !dbg !16926
  br label %cond.end149, !dbg !16926

cond.end149:                                      ; preds = %cond.false141, %cond.true105
  %cond150 = phi i32 [ %or140, %cond.true105 ], [ %call148, %cond.false141 ], !dbg !16926
  %shr151 = lshr i32 %cond150, 29, !dbg !16926
  %and152 = and i32 %shr151, 1, !dbg !16926
  %tobool153 = icmp ne i32 %and152, 0, !dbg !16926
  br i1 %tobool153, label %land.rhs, label %land.end, !dbg !16927

land.rhs:                                         ; preds = %cond.end149
  %64 = load i32, i32* %fw_max_bw_share, align 4, !dbg !16928
  %cmp = icmp uge i32 %64, 1, !dbg !16929
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end149
  %65 = phi i1 [ false, %cond.end149 ], [ %cmp, %land.rhs ], !dbg !16930
  %frombool = zext i1 %65 to i8, !dbg !16931
  store i8 %frombool, i8* %min_rate_supported, align 1, !dbg !16931
  %66 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16932
  %dev155 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %66, i32 0, i32 0, !dbg !16932
  %67 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev155, align 8, !dbg !16932
  %caps156 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %67, i32 0, i32 9, !dbg !16932
  %hca_cur157 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps156, i32 0, i32 0, !dbg !16932
  %arrayidx158 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur157, i64 0, i64 12, !dbg !16932
  %arraydecay159 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx158, i64 0, i64 0, !dbg !16932
  %add.ptr160 = getelementptr i32, i32* %arraydecay159, i64 0, !dbg !16932
  %68 = load i32, i32* %add.ptr160, align 4, !dbg !16932
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !16932
  br i1 %69, label %cond.true161, label %cond.false197, !dbg !16932

cond.true161:                                     ; preds = %land.end
  %70 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16932
  %dev162 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %70, i32 0, i32 0, !dbg !16932
  %71 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev162, align 8, !dbg !16932
  %caps163 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %71, i32 0, i32 9, !dbg !16932
  %hca_cur164 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps163, i32 0, i32 0, !dbg !16932
  %arrayidx165 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur164, i64 0, i64 12, !dbg !16932
  %arraydecay166 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx165, i64 0, i64 0, !dbg !16932
  %add.ptr167 = getelementptr i32, i32* %arraydecay166, i64 0, !dbg !16932
  %72 = load i32, i32* %add.ptr167, align 4, !dbg !16932
  %and168 = and i32 %72, 255, !dbg !16932
  %shl169 = shl i32 %and168, 24, !dbg !16932
  %73 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16932
  %dev170 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %73, i32 0, i32 0, !dbg !16932
  %74 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev170, align 8, !dbg !16932
  %caps171 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %74, i32 0, i32 9, !dbg !16932
  %hca_cur172 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps171, i32 0, i32 0, !dbg !16932
  %arrayidx173 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur172, i64 0, i64 12, !dbg !16932
  %arraydecay174 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx173, i64 0, i64 0, !dbg !16932
  %add.ptr175 = getelementptr i32, i32* %arraydecay174, i64 0, !dbg !16932
  %75 = load i32, i32* %add.ptr175, align 4, !dbg !16932
  %and176 = and i32 %75, 65280, !dbg !16932
  %shl177 = shl i32 %and176, 8, !dbg !16932
  %or178 = or i32 %shl169, %shl177, !dbg !16932
  %76 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16932
  %dev179 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %76, i32 0, i32 0, !dbg !16932
  %77 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev179, align 8, !dbg !16932
  %caps180 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %77, i32 0, i32 9, !dbg !16932
  %hca_cur181 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps180, i32 0, i32 0, !dbg !16932
  %arrayidx182 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur181, i64 0, i64 12, !dbg !16932
  %arraydecay183 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx182, i64 0, i64 0, !dbg !16932
  %add.ptr184 = getelementptr i32, i32* %arraydecay183, i64 0, !dbg !16932
  %78 = load i32, i32* %add.ptr184, align 4, !dbg !16932
  %and185 = and i32 %78, 16711680, !dbg !16932
  %shr186 = lshr i32 %and185, 8, !dbg !16932
  %or187 = or i32 %or178, %shr186, !dbg !16932
  %79 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16932
  %dev188 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %79, i32 0, i32 0, !dbg !16932
  %80 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev188, align 8, !dbg !16932
  %caps189 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %80, i32 0, i32 9, !dbg !16932
  %hca_cur190 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps189, i32 0, i32 0, !dbg !16932
  %arrayidx191 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur190, i64 0, i64 12, !dbg !16932
  %arraydecay192 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx191, i64 0, i64 0, !dbg !16932
  %add.ptr193 = getelementptr i32, i32* %arraydecay192, i64 0, !dbg !16932
  %81 = load i32, i32* %add.ptr193, align 4, !dbg !16932
  %and194 = and i32 %81, -16777216, !dbg !16932
  %shr195 = lshr i32 %and194, 24, !dbg !16932
  %or196 = or i32 %or187, %shr195, !dbg !16932
  br label %cond.end205, !dbg !16932

cond.false197:                                    ; preds = %land.end
  %82 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16932
  %dev198 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %82, i32 0, i32 0, !dbg !16932
  %83 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev198, align 8, !dbg !16932
  %caps199 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %83, i32 0, i32 9, !dbg !16932
  %hca_cur200 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps199, i32 0, i32 0, !dbg !16932
  %arrayidx201 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur200, i64 0, i64 12, !dbg !16932
  %arraydecay202 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx201, i64 0, i64 0, !dbg !16932
  %add.ptr203 = getelementptr i32, i32* %arraydecay202, i64 0, !dbg !16932
  %84 = load i32, i32* %add.ptr203, align 4, !dbg !16932
  %call204 = call i32 @__fswab32(i32 %84) #10, !dbg !16932
  br label %cond.end205, !dbg !16932

cond.end205:                                      ; preds = %cond.false197, %cond.true161
  %cond206 = phi i32 [ %or196, %cond.true161 ], [ %call204, %cond.false197 ], !dbg !16932
  %shr207 = lshr i32 %cond206, 28, !dbg !16932
  %and208 = and i32 %shr207, 1, !dbg !16932
  %tobool209 = icmp ne i32 %and208, 0, !dbg !16932
  %frombool210 = zext i1 %tobool209 to i8, !dbg !16933
  store i8 %frombool210, i8* %max_rate_supported, align 1, !dbg !16933
  %85 = load i32, i32* %min_rate.addr, align 4, !dbg !16934
  %tobool211 = icmp ne i32 %85, 0, !dbg !16934
  br i1 %tobool211, label %land.lhs.true212, label %lor.lhs.false, !dbg !16936

land.lhs.true212:                                 ; preds = %cond.end205
  %86 = load i8, i8* %min_rate_supported, align 1, !dbg !16937
  %tobool213 = trunc i8 %86 to i1, !dbg !16937
  br i1 %tobool213, label %lor.lhs.false, label %if.then217, !dbg !16938

lor.lhs.false:                                    ; preds = %land.lhs.true212, %cond.end205
  %87 = load i32, i32* %max_rate.addr, align 4, !dbg !16939
  %tobool214 = icmp ne i32 %87, 0, !dbg !16939
  br i1 %tobool214, label %land.lhs.true215, label %if.end218, !dbg !16940

land.lhs.true215:                                 ; preds = %lor.lhs.false
  %88 = load i8, i8* %max_rate_supported, align 1, !dbg !16941
  %tobool216 = trunc i8 %88 to i1, !dbg !16941
  br i1 %tobool216, label %if.end218, label %if.then217, !dbg !16942

if.then217:                                       ; preds = %land.lhs.true215, %land.lhs.true212
  store i32 -95, i32* %retval, align 4, !dbg !16943
  br label %return, !dbg !16943

if.end218:                                        ; preds = %land.lhs.true215, %lor.lhs.false
  %89 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16944
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %89, i32 0, i32 10, !dbg !16945
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !16946
  %90 = load i32, i32* %min_rate.addr, align 4, !dbg !16947
  %91 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16949
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %91, i32 0, i32 11, !dbg !16950
  %min_rate219 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 5, !dbg !16951
  %92 = load i32, i32* %min_rate219, align 4, !dbg !16951
  %cmp220 = icmp eq i32 %90, %92, !dbg !16952
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !16953

if.then222:                                       ; preds = %if.end218
  br label %set_max_rate, !dbg !16954

if.end223:                                        ; preds = %if.end218
  %93 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16955
  %info224 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %93, i32 0, i32 11, !dbg !16956
  %min_rate225 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info224, i32 0, i32 5, !dbg !16957
  %94 = load i32, i32* %min_rate225, align 4, !dbg !16957
  store i32 %94, i32* %previous_min_rate, align 4, !dbg !16958
  %95 = load i32, i32* %min_rate.addr, align 4, !dbg !16959
  %96 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16960
  %info226 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %96, i32 0, i32 11, !dbg !16961
  %min_rate227 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info226, i32 0, i32 5, !dbg !16962
  store i32 %95, i32* %min_rate227, align 4, !dbg !16963
  %97 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16964
  %call228 = call i32 @normalize_vports_min_rate(%struct.mlx5_eswitch* %97) #8, !dbg !16965
  store i32 %call228, i32* %err, align 4, !dbg !16966
  %98 = load i32, i32* %err, align 4, !dbg !16967
  %tobool229 = icmp ne i32 %98, 0, !dbg !16967
  br i1 %tobool229, label %if.then230, label %if.end233, !dbg !16969

if.then230:                                       ; preds = %if.end223
  %99 = load i32, i32* %previous_min_rate, align 4, !dbg !16970
  %100 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16972
  %info231 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %100, i32 0, i32 11, !dbg !16973
  %min_rate232 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info231, i32 0, i32 5, !dbg !16974
  store i32 %99, i32* %min_rate232, align 4, !dbg !16975
  br label %unlock, !dbg !16976

if.end233:                                        ; preds = %if.end223
  br label %set_max_rate, !dbg !16967

set_max_rate:                                     ; preds = %if.end233, %if.then222
  call void @llvm.dbg.label(metadata !16977), !dbg !16978
  %101 = load i32, i32* %max_rate.addr, align 4, !dbg !16979
  %102 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16981
  %info234 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %102, i32 0, i32 11, !dbg !16982
  %max_rate235 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info234, i32 0, i32 6, !dbg !16983
  %103 = load i32, i32* %max_rate235, align 8, !dbg !16983
  %cmp236 = icmp eq i32 %101, %103, !dbg !16984
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !16985

if.then238:                                       ; preds = %set_max_rate
  br label %unlock, !dbg !16986

if.end239:                                        ; preds = %set_max_rate
  %104 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16987
  %105 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16988
  %106 = load i32, i32* %max_rate.addr, align 4, !dbg !16989
  %107 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16990
  %qos = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %107, i32 0, i32 12, !dbg !16991
  %bw_share = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos, i32 0, i32 2, !dbg !16992
  %108 = load i32, i32* %bw_share, align 8, !dbg !16992
  %call240 = call i32 @esw_vport_qos_config(%struct.mlx5_eswitch* %104, %struct.mlx5_vport* %105, i32 %106, i32 %108) #8, !dbg !16993
  store i32 %call240, i32* %err, align 4, !dbg !16994
  %109 = load i32, i32* %err, align 4, !dbg !16995
  %tobool241 = icmp ne i32 %109, 0, !dbg !16995
  br i1 %tobool241, label %if.end245, label %if.then242, !dbg !16997

if.then242:                                       ; preds = %if.end239
  %110 = load i32, i32* %max_rate.addr, align 4, !dbg !16998
  %111 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !16999
  %info243 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %111, i32 0, i32 11, !dbg !17000
  %max_rate244 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info243, i32 0, i32 6, !dbg !17001
  store i32 %110, i32* %max_rate244, align 8, !dbg !17002
  br label %if.end245, !dbg !16999

if.end245:                                        ; preds = %if.then242, %if.end239
  br label %unlock, !dbg !16995

unlock:                                           ; preds = %if.end245, %if.then238, %if.then230
  call void @llvm.dbg.label(metadata !17003), !dbg !17004
  %112 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17005
  %state_lock246 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %112, i32 0, i32 10, !dbg !17006
  call void @mutex_unlock(%struct.mutex* %state_lock246) #8, !dbg !17007
  %113 = load i32, i32* %err, align 4, !dbg !17008
  store i32 %113, i32* %retval, align 4, !dbg !17009
  br label %return, !dbg !17009

return:                                           ; preds = %unlock, %if.then217, %if.then43, %if.then
  %114 = load i32, i32* %retval, align 4, !dbg !17010
  ret i32 %114, !dbg !17010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @normalize_vports_min_rate(%struct.mlx5_eswitch* %esw) #0 !dbg !17011 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %fw_max_bw_share = alloca i32, align 4
  %divider = alloca i32, align 4
  %evport = alloca %struct.mlx5_vport*, align 8
  %vport_max_rate = alloca i32, align 4
  %vport_min_rate = alloca i32, align 4
  %bw_share = alloca i32, align 4
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %__UNIQUE_ID___x739 = alloca i32, align 4
  %__UNIQUE_ID___x737 = alloca i32, align 4
  %__UNIQUE_ID___y738 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y740 = alloca i32, align 4
  %tmp49 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17012, metadata !DIExpression()), !dbg !17013
  call void @llvm.dbg.declare(metadata i32* %fw_max_bw_share, metadata !17014, metadata !DIExpression()), !dbg !17015
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17016
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !17016
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17016
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !17016
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17016
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 12, !dbg !17016
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17016
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 7, !dbg !17016
  %2 = load i32, i32* %add.ptr, align 4, !dbg !17016
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !17016
  br i1 %3, label %cond.true, label %cond.false, !dbg !17016

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17016
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !17016
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17016
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !17016
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !17016
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 12, !dbg !17016
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !17016
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 7, !dbg !17016
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !17016
  %and = and i32 %6, 255, !dbg !17016
  %shl = shl i32 %and, 24, !dbg !17016
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17016
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !17016
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !17016
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !17016
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !17016
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 12, !dbg !17016
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !17016
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 7, !dbg !17016
  %9 = load i32, i32* %add.ptr12, align 4, !dbg !17016
  %and13 = and i32 %9, 65280, !dbg !17016
  %shl14 = shl i32 %and13, 8, !dbg !17016
  %or = or i32 %shl, %shl14, !dbg !17016
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17016
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !17016
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !17016
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !17016
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !17016
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 12, !dbg !17016
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !17016
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 7, !dbg !17016
  %12 = load i32, i32* %add.ptr20, align 4, !dbg !17016
  %and21 = and i32 %12, 16711680, !dbg !17016
  %shr = lshr i32 %and21, 8, !dbg !17016
  %or22 = or i32 %or, %shr, !dbg !17016
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17016
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !17016
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !17016
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !17016
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !17016
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 12, !dbg !17016
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !17016
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 7, !dbg !17016
  %15 = load i32, i32* %add.ptr28, align 4, !dbg !17016
  %and29 = and i32 %15, -16777216, !dbg !17016
  %shr30 = lshr i32 %and29, 24, !dbg !17016
  %or31 = or i32 %or22, %shr30, !dbg !17016
  br label %cond.end, !dbg !17016

cond.false:                                       ; preds = %entry
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17016
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !17016
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !17016
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !17016
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !17016
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 12, !dbg !17016
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !17016
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 7, !dbg !17016
  %18 = load i32, i32* %add.ptr37, align 4, !dbg !17016
  %call = call i32 @__fswab32(i32 %18) #10, !dbg !17016
  br label %cond.end, !dbg !17016

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !17016
  %shr38 = lshr i32 %cond, 0, !dbg !17016
  store i32 %shr38, i32* %fw_max_bw_share, align 4, !dbg !17015
  call void @llvm.dbg.declare(metadata i32* %divider, metadata !17017, metadata !DIExpression()), !dbg !17018
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17019
  %call39 = call i32 @calculate_vports_min_rate_divider(%struct.mlx5_eswitch* %19) #8, !dbg !17020
  store i32 %call39, i32* %divider, align 4, !dbg !17018
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !17021, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.declare(metadata i32* %vport_max_rate, metadata !17023, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.declare(metadata i32* %vport_min_rate, metadata !17025, metadata !DIExpression()), !dbg !17026
  call void @llvm.dbg.declare(metadata i32* %bw_share, metadata !17027, metadata !DIExpression()), !dbg !17028
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17029, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17031, metadata !DIExpression()), !dbg !17032
  store i32 0, i32* %i, align 4, !dbg !17033
  br label %for.cond, !dbg !17033

for.cond:                                         ; preds = %for.inc, %cond.end
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17035
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 6, !dbg !17035
  %21 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !17035
  %22 = load i32, i32* %i, align 4, !dbg !17035
  %idxprom = sext i32 %22 to i64, !dbg !17035
  %arrayidx40 = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %21, i64 %idxprom, !dbg !17035
  store %struct.mlx5_vport* %arrayidx40, %struct.mlx5_vport** %evport, align 8, !dbg !17035
  %23 = load i32, i32* %i, align 4, !dbg !17035
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17035
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 8, !dbg !17035
  %25 = load i32, i32* %total_vports, align 4, !dbg !17035
  %cmp = icmp slt i32 %23, %25, !dbg !17035
  br i1 %cmp, label %for.body, label %for.end, !dbg !17033

for.body:                                         ; preds = %for.cond
  %26 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !17037
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %26, i32 0, i32 13, !dbg !17040
  %27 = load i8, i8* %enabled, align 4, !dbg !17040
  %tobool = trunc i8 %27 to i1, !dbg !17040
  br i1 %tobool, label %if.end, label %if.then, !dbg !17041

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !17042

if.end:                                           ; preds = %for.body
  %28 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !17043
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %28, i32 0, i32 11, !dbg !17044
  %min_rate = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 5, !dbg !17045
  %29 = load i32, i32* %min_rate, align 4, !dbg !17045
  store i32 %29, i32* %vport_min_rate, align 4, !dbg !17046
  %30 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !17047
  %info41 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %30, i32 0, i32 11, !dbg !17048
  %max_rate = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info41, i32 0, i32 6, !dbg !17049
  %31 = load i32, i32* %max_rate, align 8, !dbg !17049
  store i32 %31, i32* %vport_max_rate, align 4, !dbg !17050
  store i32 0, i32* %bw_share, align 4, !dbg !17051
  %32 = load i32, i32* %divider, align 4, !dbg !17052
  %tobool42 = icmp ne i32 %32, 0, !dbg !17052
  br i1 %tobool42, label %if.then43, label %if.end55, !dbg !17054

if.then43:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x739, metadata !17055, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x737, metadata !17058, metadata !DIExpression()), !dbg !17060
  %33 = load i32, i32* %vport_min_rate, align 4, !dbg !17060
  %34 = load i32, i32* %divider, align 4, !dbg !17060
  %div = udiv i32 %33, %34, !dbg !17060
  store i32 %div, i32* %__UNIQUE_ID___x737, align 4, !dbg !17060
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y738, metadata !17061, metadata !DIExpression()), !dbg !17060
  store i32 1, i32* %__UNIQUE_ID___y738, align 4, !dbg !17060
  %35 = load i32, i32* %__UNIQUE_ID___x737, align 4, !dbg !17060
  %36 = load i32, i32* %__UNIQUE_ID___y738, align 4, !dbg !17060
  %cmp44 = icmp ugt i32 %35, %36, !dbg !17060
  br i1 %cmp44, label %cond.true45, label %cond.false46, !dbg !17060

cond.true45:                                      ; preds = %if.then43
  %37 = load i32, i32* %__UNIQUE_ID___x737, align 4, !dbg !17060
  br label %cond.end47, !dbg !17060

cond.false46:                                     ; preds = %if.then43
  %38 = load i32, i32* %__UNIQUE_ID___y738, align 4, !dbg !17060
  br label %cond.end47, !dbg !17060

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi i32 [ %37, %cond.true45 ], [ %38, %cond.false46 ], !dbg !17060
  store i32 %cond48, i32* %tmp, align 4, !dbg !17060
  %39 = load i32, i32* %tmp, align 4, !dbg !17060
  store i32 %39, i32* %__UNIQUE_ID___x739, align 4, !dbg !17057
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y740, metadata !17062, metadata !DIExpression()), !dbg !17057
  %40 = load i32, i32* %fw_max_bw_share, align 4, !dbg !17057
  store i32 %40, i32* %__UNIQUE_ID___y740, align 4, !dbg !17057
  %41 = load i32, i32* %__UNIQUE_ID___x739, align 4, !dbg !17057
  %42 = load i32, i32* %__UNIQUE_ID___y740, align 4, !dbg !17057
  %cmp50 = icmp ult i32 %41, %42, !dbg !17057
  br i1 %cmp50, label %cond.true51, label %cond.false52, !dbg !17057

cond.true51:                                      ; preds = %cond.end47
  %43 = load i32, i32* %__UNIQUE_ID___x739, align 4, !dbg !17057
  br label %cond.end53, !dbg !17057

cond.false52:                                     ; preds = %cond.end47
  %44 = load i32, i32* %__UNIQUE_ID___y740, align 4, !dbg !17057
  br label %cond.end53, !dbg !17057

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ %43, %cond.true51 ], [ %44, %cond.false52 ], !dbg !17057
  store i32 %cond54, i32* %tmp49, align 4, !dbg !17057
  %45 = load i32, i32* %tmp49, align 4, !dbg !17057
  store i32 %45, i32* %bw_share, align 4, !dbg !17063
  br label %if.end55, !dbg !17064

if.end55:                                         ; preds = %cond.end53, %if.end
  %46 = load i32, i32* %bw_share, align 4, !dbg !17065
  %47 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !17067
  %qos = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %47, i32 0, i32 12, !dbg !17068
  %bw_share56 = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos, i32 0, i32 2, !dbg !17069
  %48 = load i32, i32* %bw_share56, align 8, !dbg !17069
  %cmp57 = icmp eq i32 %46, %48, !dbg !17070
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !17071

if.then58:                                        ; preds = %if.end55
  br label %for.inc, !dbg !17072

if.end59:                                         ; preds = %if.end55
  %49 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17073
  %50 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !17074
  %51 = load i32, i32* %vport_max_rate, align 4, !dbg !17075
  %52 = load i32, i32* %bw_share, align 4, !dbg !17076
  %call60 = call i32 @esw_vport_qos_config(%struct.mlx5_eswitch* %49, %struct.mlx5_vport* %50, i32 %51, i32 %52) #8, !dbg !17077
  store i32 %call60, i32* %err, align 4, !dbg !17078
  %53 = load i32, i32* %err, align 4, !dbg !17079
  %tobool61 = icmp ne i32 %53, 0, !dbg !17079
  br i1 %tobool61, label %if.else, label %if.then62, !dbg !17081

if.then62:                                        ; preds = %if.end59
  %54 = load i32, i32* %bw_share, align 4, !dbg !17082
  %55 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !17083
  %qos63 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %55, i32 0, i32 12, !dbg !17084
  %bw_share64 = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos63, i32 0, i32 2, !dbg !17085
  store i32 %54, i32* %bw_share64, align 8, !dbg !17086
  br label %if.end65, !dbg !17083

if.else:                                          ; preds = %if.end59
  %56 = load i32, i32* %err, align 4, !dbg !17087
  store i32 %56, i32* %retval, align 4, !dbg !17088
  br label %return, !dbg !17088

if.end65:                                         ; preds = %if.then62
  br label %for.inc, !dbg !17089

for.inc:                                          ; preds = %if.end65, %if.then58, %if.then
  %57 = load i32, i32* %i, align 4, !dbg !17035
  %inc = add i32 %57, 1, !dbg !17035
  store i32 %inc, i32* %i, align 4, !dbg !17035
  br label %for.cond, !dbg !17035, !llvm.loop !17090

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !17092
  br label %return, !dbg !17092

return:                                           ; preds = %for.end, %if.else
  %58 = load i32, i32* %retval, align 4, !dbg !17093
  ret i32 %58, !dbg !17093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_vport_qos_config(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport, i32 %max_rate, i32 %bw_share) #0 !dbg !17094 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %max_rate.addr = alloca i32, align 4
  %bw_share.addr = alloca i32, align 4
  %sched_ctx = alloca [16 x i32], align 16
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %vport_elem = alloca i8*, align 8
  %bitmask = alloca i32, align 4
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v303 = alloca i32, align 4
  %_v482 = alloca i32, align 4
  %_v692 = alloca i32, align 4
  %_v901 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17097, metadata !DIExpression()), !dbg !17098
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17099, metadata !DIExpression()), !dbg !17100
  store i32 %max_rate, i32* %max_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_rate.addr, metadata !17101, metadata !DIExpression()), !dbg !17102
  store i32 %bw_share, i32* %bw_share.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bw_share.addr, metadata !17103, metadata !DIExpression()), !dbg !17104
  call void @llvm.dbg.declare(metadata [16 x i32]* %sched_ctx, metadata !17105, metadata !DIExpression()), !dbg !17106
  %0 = bitcast [16 x i32]* %sched_ctx to i8*, !dbg !17106
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 64, i1 false), !dbg !17106
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !17107, metadata !DIExpression()), !dbg !17108
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17109
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !17110
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17110
  store %struct.mlx5_core_dev* %2, %struct.mlx5_core_dev** %dev, align 8, !dbg !17108
  call void @llvm.dbg.declare(metadata i8** %vport_elem, metadata !17111, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.declare(metadata i32* %bitmask, metadata !17113, metadata !DIExpression()), !dbg !17114
  store i32 0, i32* %bitmask, align 4, !dbg !17114
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17115, metadata !DIExpression()), !dbg !17116
  store i32 0, i32* %err, align 4, !dbg !17116
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17117
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !17117
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17117
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !17117
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17117
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 16, !dbg !17117
  %4 = load i32, i32* %add.ptr, align 4, !dbg !17117
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !17117
  br i1 %5, label %cond.true, label %cond.false, !dbg !17117

cond.true:                                        ; preds = %entry
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17117
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !17117
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !17117
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !17117
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !17117
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 16, !dbg !17117
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !17117
  %and = and i32 %7, 255, !dbg !17117
  %shl = shl i32 %and, 24, !dbg !17117
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17117
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !17117
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !17117
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !17117
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !17117
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 16, !dbg !17117
  %9 = load i32, i32* %add.ptr11, align 4, !dbg !17117
  %and12 = and i32 %9, 65280, !dbg !17117
  %shl13 = shl i32 %and12, 8, !dbg !17117
  %or = or i32 %shl, %shl13, !dbg !17117
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17117
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !17117
  %hca_cur15 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps14, i32 0, i32 0, !dbg !17117
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !17117
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !17117
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 16, !dbg !17117
  %11 = load i32, i32* %add.ptr18, align 4, !dbg !17117
  %and19 = and i32 %11, 16711680, !dbg !17117
  %shr = lshr i32 %and19, 8, !dbg !17117
  %or20 = or i32 %or, %shr, !dbg !17117
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17117
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !17117
  %hca_cur22 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps21, i32 0, i32 0, !dbg !17117
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !17117
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !17117
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 16, !dbg !17117
  %13 = load i32, i32* %add.ptr25, align 4, !dbg !17117
  %and26 = and i32 %13, -16777216, !dbg !17117
  %shr27 = lshr i32 %and26, 24, !dbg !17117
  %or28 = or i32 %or20, %shr27, !dbg !17117
  br label %cond.end, !dbg !17117

cond.false:                                       ; preds = %entry
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17117
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !17117
  %hca_cur30 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps29, i32 0, i32 0, !dbg !17117
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !17117
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !17117
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 16, !dbg !17117
  %15 = load i32, i32* %add.ptr33, align 4, !dbg !17117
  %call = call i32 @__fswab32(i32 %15) #10, !dbg !17117
  br label %cond.end, !dbg !17117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call, %cond.false ], !dbg !17117
  %shr34 = lshr i32 %cond, 4, !dbg !17117
  %and35 = and i32 %shr34, 1, !dbg !17117
  %tobool = icmp ne i32 %and35, 0, !dbg !17117
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !17119

lor.lhs.false:                                    ; preds = %cond.end
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17120
  %caps36 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !17120
  %hca_cur37 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps36, i32 0, i32 0, !dbg !17120
  %arrayidx38 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur37, i64 0, i64 12, !dbg !17120
  %arraydecay39 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx38, i64 0, i64 0, !dbg !17120
  %add.ptr40 = getelementptr i32, i32* %arraydecay39, i64 0, !dbg !17120
  %17 = load i32, i32* %add.ptr40, align 4, !dbg !17120
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !17120
  br i1 %18, label %cond.true41, label %cond.false73, !dbg !17120

cond.true41:                                      ; preds = %lor.lhs.false
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17120
  %caps42 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !17120
  %hca_cur43 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps42, i32 0, i32 0, !dbg !17120
  %arrayidx44 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur43, i64 0, i64 12, !dbg !17120
  %arraydecay45 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx44, i64 0, i64 0, !dbg !17120
  %add.ptr46 = getelementptr i32, i32* %arraydecay45, i64 0, !dbg !17120
  %20 = load i32, i32* %add.ptr46, align 4, !dbg !17120
  %and47 = and i32 %20, 255, !dbg !17120
  %shl48 = shl i32 %and47, 24, !dbg !17120
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17120
  %caps49 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !17120
  %hca_cur50 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps49, i32 0, i32 0, !dbg !17120
  %arrayidx51 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur50, i64 0, i64 12, !dbg !17120
  %arraydecay52 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx51, i64 0, i64 0, !dbg !17120
  %add.ptr53 = getelementptr i32, i32* %arraydecay52, i64 0, !dbg !17120
  %22 = load i32, i32* %add.ptr53, align 4, !dbg !17120
  %and54 = and i32 %22, 65280, !dbg !17120
  %shl55 = shl i32 %and54, 8, !dbg !17120
  %or56 = or i32 %shl48, %shl55, !dbg !17120
  %23 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17120
  %caps57 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %23, i32 0, i32 9, !dbg !17120
  %hca_cur58 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps57, i32 0, i32 0, !dbg !17120
  %arrayidx59 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur58, i64 0, i64 12, !dbg !17120
  %arraydecay60 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx59, i64 0, i64 0, !dbg !17120
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 0, !dbg !17120
  %24 = load i32, i32* %add.ptr61, align 4, !dbg !17120
  %and62 = and i32 %24, 16711680, !dbg !17120
  %shr63 = lshr i32 %and62, 8, !dbg !17120
  %or64 = or i32 %or56, %shr63, !dbg !17120
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17120
  %caps65 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %25, i32 0, i32 9, !dbg !17120
  %hca_cur66 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps65, i32 0, i32 0, !dbg !17120
  %arrayidx67 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur66, i64 0, i64 12, !dbg !17120
  %arraydecay68 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx67, i64 0, i64 0, !dbg !17120
  %add.ptr69 = getelementptr i32, i32* %arraydecay68, i64 0, !dbg !17120
  %26 = load i32, i32* %add.ptr69, align 4, !dbg !17120
  %and70 = and i32 %26, -16777216, !dbg !17120
  %shr71 = lshr i32 %and70, 24, !dbg !17120
  %or72 = or i32 %or64, %shr71, !dbg !17120
  br label %cond.end80, !dbg !17120

cond.false73:                                     ; preds = %lor.lhs.false
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17120
  %caps74 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !17120
  %hca_cur75 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps74, i32 0, i32 0, !dbg !17120
  %arrayidx76 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur75, i64 0, i64 12, !dbg !17120
  %arraydecay77 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx76, i64 0, i64 0, !dbg !17120
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !17120
  %28 = load i32, i32* %add.ptr78, align 4, !dbg !17120
  %call79 = call i32 @__fswab32(i32 %28) #10, !dbg !17120
  br label %cond.end80, !dbg !17120

cond.end80:                                       ; preds = %cond.false73, %cond.true41
  %cond81 = phi i32 [ %or72, %cond.true41 ], [ %call79, %cond.false73 ], !dbg !17120
  %shr82 = lshr i32 %cond81, 30, !dbg !17120
  %and83 = and i32 %shr82, 1, !dbg !17120
  %tobool84 = icmp ne i32 %and83, 0, !dbg !17120
  br i1 %tobool84, label %if.end, label %if.then, !dbg !17121

if.then:                                          ; preds = %cond.end80, %cond.end
  store i32 -95, i32* %retval, align 4, !dbg !17122
  br label %return, !dbg !17122

if.end:                                           ; preds = %cond.end80
  %29 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17123
  %qos = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %29, i32 0, i32 12, !dbg !17125
  %enabled = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos, i32 0, i32 0, !dbg !17126
  %30 = load i8, i8* %enabled, align 8, !dbg !17126
  %tobool85 = trunc i8 %30 to i1, !dbg !17126
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !17127

if.then86:                                        ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !17128
  br label %return, !dbg !17128

if.end87:                                         ; preds = %if.end
  br label %do.body, !dbg !17129

do.body:                                          ; preds = %if.end87
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !17130, metadata !DIExpression()), !dbg !17132
  store i32 1, i32* %_v, align 4, !dbg !17132
  br label %do.body88, !dbg !17132

do.body88:                                        ; preds = %do.body
  br label %do.end, !dbg !17133

do.end:                                           ; preds = %do.body88
  %arraydecay89 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr90 = getelementptr i32, i32* %arraydecay89, i64 0, !dbg !17132
  %31 = load i32, i32* %add.ptr90, align 4, !dbg !17132
  %32 = call i1 @llvm.is.constant.i32(i32 %31), !dbg !17132
  br i1 %32, label %cond.true91, label %cond.false111, !dbg !17132

cond.true91:                                      ; preds = %do.end
  %arraydecay92 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr93 = getelementptr i32, i32* %arraydecay92, i64 0, !dbg !17132
  %33 = load i32, i32* %add.ptr93, align 4, !dbg !17132
  %and94 = and i32 %33, 255, !dbg !17132
  %shl95 = shl i32 %and94, 24, !dbg !17132
  %arraydecay96 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !17132
  %34 = load i32, i32* %add.ptr97, align 4, !dbg !17132
  %and98 = and i32 %34, 65280, !dbg !17132
  %shl99 = shl i32 %and98, 8, !dbg !17132
  %or100 = or i32 %shl95, %shl99, !dbg !17132
  %arraydecay101 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr102 = getelementptr i32, i32* %arraydecay101, i64 0, !dbg !17132
  %35 = load i32, i32* %add.ptr102, align 4, !dbg !17132
  %and103 = and i32 %35, 16711680, !dbg !17132
  %shr104 = lshr i32 %and103, 8, !dbg !17132
  %or105 = or i32 %or100, %shr104, !dbg !17132
  %arraydecay106 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr107 = getelementptr i32, i32* %arraydecay106, i64 0, !dbg !17132
  %36 = load i32, i32* %add.ptr107, align 4, !dbg !17132
  %and108 = and i32 %36, -16777216, !dbg !17132
  %shr109 = lshr i32 %and108, 24, !dbg !17132
  %or110 = or i32 %or105, %shr109, !dbg !17132
  br label %cond.end115, !dbg !17132

cond.false111:                                    ; preds = %do.end
  %arraydecay112 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr113 = getelementptr i32, i32* %arraydecay112, i64 0, !dbg !17132
  %37 = load i32, i32* %add.ptr113, align 4, !dbg !17132
  %call114 = call i32 @__fswab32(i32 %37) #10, !dbg !17132
  br label %cond.end115, !dbg !17132

cond.end115:                                      ; preds = %cond.false111, %cond.true91
  %cond116 = phi i32 [ %or110, %cond.true91 ], [ %call114, %cond.false111 ], !dbg !17132
  %and117 = and i32 %cond116, 16777215, !dbg !17132
  %38 = load i32, i32* %_v, align 4, !dbg !17132
  %and118 = and i32 %38, 255, !dbg !17132
  %shl119 = shl i32 %and118, 24, !dbg !17132
  %or120 = or i32 %and117, %shl119, !dbg !17132
  %39 = call i1 @llvm.is.constant.i32(i32 %or120), !dbg !17132
  br i1 %39, label %cond.true121, label %cond.false261, !dbg !17132

cond.true121:                                     ; preds = %cond.end115
  %arraydecay122 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr123 = getelementptr i32, i32* %arraydecay122, i64 0, !dbg !17132
  %40 = load i32, i32* %add.ptr123, align 4, !dbg !17132
  %41 = call i1 @llvm.is.constant.i32(i32 %40), !dbg !17132
  br i1 %41, label %cond.true124, label %cond.false144, !dbg !17132

cond.true124:                                     ; preds = %cond.true121
  %arraydecay125 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr126 = getelementptr i32, i32* %arraydecay125, i64 0, !dbg !17132
  %42 = load i32, i32* %add.ptr126, align 4, !dbg !17132
  %and127 = and i32 %42, 255, !dbg !17132
  %shl128 = shl i32 %and127, 24, !dbg !17132
  %arraydecay129 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr130 = getelementptr i32, i32* %arraydecay129, i64 0, !dbg !17132
  %43 = load i32, i32* %add.ptr130, align 4, !dbg !17132
  %and131 = and i32 %43, 65280, !dbg !17132
  %shl132 = shl i32 %and131, 8, !dbg !17132
  %or133 = or i32 %shl128, %shl132, !dbg !17132
  %arraydecay134 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr135 = getelementptr i32, i32* %arraydecay134, i64 0, !dbg !17132
  %44 = load i32, i32* %add.ptr135, align 4, !dbg !17132
  %and136 = and i32 %44, 16711680, !dbg !17132
  %shr137 = lshr i32 %and136, 8, !dbg !17132
  %or138 = or i32 %or133, %shr137, !dbg !17132
  %arraydecay139 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr140 = getelementptr i32, i32* %arraydecay139, i64 0, !dbg !17132
  %45 = load i32, i32* %add.ptr140, align 4, !dbg !17132
  %and141 = and i32 %45, -16777216, !dbg !17132
  %shr142 = lshr i32 %and141, 24, !dbg !17132
  %or143 = or i32 %or138, %shr142, !dbg !17132
  br label %cond.end148, !dbg !17132

cond.false144:                                    ; preds = %cond.true121
  %arraydecay145 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 0, !dbg !17132
  %46 = load i32, i32* %add.ptr146, align 4, !dbg !17132
  %call147 = call i32 @__fswab32(i32 %46) #10, !dbg !17132
  br label %cond.end148, !dbg !17132

cond.end148:                                      ; preds = %cond.false144, %cond.true124
  %cond149 = phi i32 [ %or143, %cond.true124 ], [ %call147, %cond.false144 ], !dbg !17132
  %and150 = and i32 %cond149, 16777215, !dbg !17132
  %47 = load i32, i32* %_v, align 4, !dbg !17132
  %and151 = and i32 %47, 255, !dbg !17132
  %shl152 = shl i32 %and151, 24, !dbg !17132
  %or153 = or i32 %and150, %shl152, !dbg !17132
  %and154 = and i32 %or153, 255, !dbg !17132
  %shl155 = shl i32 %and154, 24, !dbg !17132
  %arraydecay156 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr157 = getelementptr i32, i32* %arraydecay156, i64 0, !dbg !17132
  %48 = load i32, i32* %add.ptr157, align 4, !dbg !17132
  %49 = call i1 @llvm.is.constant.i32(i32 %48), !dbg !17132
  br i1 %49, label %cond.true158, label %cond.false178, !dbg !17132

cond.true158:                                     ; preds = %cond.end148
  %arraydecay159 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr160 = getelementptr i32, i32* %arraydecay159, i64 0, !dbg !17132
  %50 = load i32, i32* %add.ptr160, align 4, !dbg !17132
  %and161 = and i32 %50, 255, !dbg !17132
  %shl162 = shl i32 %and161, 24, !dbg !17132
  %arraydecay163 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr164 = getelementptr i32, i32* %arraydecay163, i64 0, !dbg !17132
  %51 = load i32, i32* %add.ptr164, align 4, !dbg !17132
  %and165 = and i32 %51, 65280, !dbg !17132
  %shl166 = shl i32 %and165, 8, !dbg !17132
  %or167 = or i32 %shl162, %shl166, !dbg !17132
  %arraydecay168 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr169 = getelementptr i32, i32* %arraydecay168, i64 0, !dbg !17132
  %52 = load i32, i32* %add.ptr169, align 4, !dbg !17132
  %and170 = and i32 %52, 16711680, !dbg !17132
  %shr171 = lshr i32 %and170, 8, !dbg !17132
  %or172 = or i32 %or167, %shr171, !dbg !17132
  %arraydecay173 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr174 = getelementptr i32, i32* %arraydecay173, i64 0, !dbg !17132
  %53 = load i32, i32* %add.ptr174, align 4, !dbg !17132
  %and175 = and i32 %53, -16777216, !dbg !17132
  %shr176 = lshr i32 %and175, 24, !dbg !17132
  %or177 = or i32 %or172, %shr176, !dbg !17132
  br label %cond.end182, !dbg !17132

cond.false178:                                    ; preds = %cond.end148
  %arraydecay179 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr180 = getelementptr i32, i32* %arraydecay179, i64 0, !dbg !17132
  %54 = load i32, i32* %add.ptr180, align 4, !dbg !17132
  %call181 = call i32 @__fswab32(i32 %54) #10, !dbg !17132
  br label %cond.end182, !dbg !17132

cond.end182:                                      ; preds = %cond.false178, %cond.true158
  %cond183 = phi i32 [ %or177, %cond.true158 ], [ %call181, %cond.false178 ], !dbg !17132
  %and184 = and i32 %cond183, 16777215, !dbg !17132
  %55 = load i32, i32* %_v, align 4, !dbg !17132
  %and185 = and i32 %55, 255, !dbg !17132
  %shl186 = shl i32 %and185, 24, !dbg !17132
  %or187 = or i32 %and184, %shl186, !dbg !17132
  %and188 = and i32 %or187, 65280, !dbg !17132
  %shl189 = shl i32 %and188, 8, !dbg !17132
  %or190 = or i32 %shl155, %shl189, !dbg !17132
  %arraydecay191 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr192 = getelementptr i32, i32* %arraydecay191, i64 0, !dbg !17132
  %56 = load i32, i32* %add.ptr192, align 4, !dbg !17132
  %57 = call i1 @llvm.is.constant.i32(i32 %56), !dbg !17132
  br i1 %57, label %cond.true193, label %cond.false213, !dbg !17132

cond.true193:                                     ; preds = %cond.end182
  %arraydecay194 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr195 = getelementptr i32, i32* %arraydecay194, i64 0, !dbg !17132
  %58 = load i32, i32* %add.ptr195, align 4, !dbg !17132
  %and196 = and i32 %58, 255, !dbg !17132
  %shl197 = shl i32 %and196, 24, !dbg !17132
  %arraydecay198 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr199 = getelementptr i32, i32* %arraydecay198, i64 0, !dbg !17132
  %59 = load i32, i32* %add.ptr199, align 4, !dbg !17132
  %and200 = and i32 %59, 65280, !dbg !17132
  %shl201 = shl i32 %and200, 8, !dbg !17132
  %or202 = or i32 %shl197, %shl201, !dbg !17132
  %arraydecay203 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr204 = getelementptr i32, i32* %arraydecay203, i64 0, !dbg !17132
  %60 = load i32, i32* %add.ptr204, align 4, !dbg !17132
  %and205 = and i32 %60, 16711680, !dbg !17132
  %shr206 = lshr i32 %and205, 8, !dbg !17132
  %or207 = or i32 %or202, %shr206, !dbg !17132
  %arraydecay208 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr209 = getelementptr i32, i32* %arraydecay208, i64 0, !dbg !17132
  %61 = load i32, i32* %add.ptr209, align 4, !dbg !17132
  %and210 = and i32 %61, -16777216, !dbg !17132
  %shr211 = lshr i32 %and210, 24, !dbg !17132
  %or212 = or i32 %or207, %shr211, !dbg !17132
  br label %cond.end217, !dbg !17132

cond.false213:                                    ; preds = %cond.end182
  %arraydecay214 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr215 = getelementptr i32, i32* %arraydecay214, i64 0, !dbg !17132
  %62 = load i32, i32* %add.ptr215, align 4, !dbg !17132
  %call216 = call i32 @__fswab32(i32 %62) #10, !dbg !17132
  br label %cond.end217, !dbg !17132

cond.end217:                                      ; preds = %cond.false213, %cond.true193
  %cond218 = phi i32 [ %or212, %cond.true193 ], [ %call216, %cond.false213 ], !dbg !17132
  %and219 = and i32 %cond218, 16777215, !dbg !17132
  %63 = load i32, i32* %_v, align 4, !dbg !17132
  %and220 = and i32 %63, 255, !dbg !17132
  %shl221 = shl i32 %and220, 24, !dbg !17132
  %or222 = or i32 %and219, %shl221, !dbg !17132
  %and223 = and i32 %or222, 16711680, !dbg !17132
  %shr224 = lshr i32 %and223, 8, !dbg !17132
  %or225 = or i32 %or190, %shr224, !dbg !17132
  %arraydecay226 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr227 = getelementptr i32, i32* %arraydecay226, i64 0, !dbg !17132
  %64 = load i32, i32* %add.ptr227, align 4, !dbg !17132
  %65 = call i1 @llvm.is.constant.i32(i32 %64), !dbg !17132
  br i1 %65, label %cond.true228, label %cond.false248, !dbg !17132

cond.true228:                                     ; preds = %cond.end217
  %arraydecay229 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 0, !dbg !17132
  %66 = load i32, i32* %add.ptr230, align 4, !dbg !17132
  %and231 = and i32 %66, 255, !dbg !17132
  %shl232 = shl i32 %and231, 24, !dbg !17132
  %arraydecay233 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr234 = getelementptr i32, i32* %arraydecay233, i64 0, !dbg !17132
  %67 = load i32, i32* %add.ptr234, align 4, !dbg !17132
  %and235 = and i32 %67, 65280, !dbg !17132
  %shl236 = shl i32 %and235, 8, !dbg !17132
  %or237 = or i32 %shl232, %shl236, !dbg !17132
  %arraydecay238 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr239 = getelementptr i32, i32* %arraydecay238, i64 0, !dbg !17132
  %68 = load i32, i32* %add.ptr239, align 4, !dbg !17132
  %and240 = and i32 %68, 16711680, !dbg !17132
  %shr241 = lshr i32 %and240, 8, !dbg !17132
  %or242 = or i32 %or237, %shr241, !dbg !17132
  %arraydecay243 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr244 = getelementptr i32, i32* %arraydecay243, i64 0, !dbg !17132
  %69 = load i32, i32* %add.ptr244, align 4, !dbg !17132
  %and245 = and i32 %69, -16777216, !dbg !17132
  %shr246 = lshr i32 %and245, 24, !dbg !17132
  %or247 = or i32 %or242, %shr246, !dbg !17132
  br label %cond.end252, !dbg !17132

cond.false248:                                    ; preds = %cond.end217
  %arraydecay249 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr250 = getelementptr i32, i32* %arraydecay249, i64 0, !dbg !17132
  %70 = load i32, i32* %add.ptr250, align 4, !dbg !17132
  %call251 = call i32 @__fswab32(i32 %70) #10, !dbg !17132
  br label %cond.end252, !dbg !17132

cond.end252:                                      ; preds = %cond.false248, %cond.true228
  %cond253 = phi i32 [ %or247, %cond.true228 ], [ %call251, %cond.false248 ], !dbg !17132
  %and254 = and i32 %cond253, 16777215, !dbg !17132
  %71 = load i32, i32* %_v, align 4, !dbg !17132
  %and255 = and i32 %71, 255, !dbg !17132
  %shl256 = shl i32 %and255, 24, !dbg !17132
  %or257 = or i32 %and254, %shl256, !dbg !17132
  %and258 = and i32 %or257, -16777216, !dbg !17132
  %shr259 = lshr i32 %and258, 24, !dbg !17132
  %or260 = or i32 %or225, %shr259, !dbg !17132
  br label %cond.end295, !dbg !17132

cond.false261:                                    ; preds = %cond.end115
  %arraydecay262 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr263 = getelementptr i32, i32* %arraydecay262, i64 0, !dbg !17132
  %72 = load i32, i32* %add.ptr263, align 4, !dbg !17132
  %73 = call i1 @llvm.is.constant.i32(i32 %72), !dbg !17132
  br i1 %73, label %cond.true264, label %cond.false284, !dbg !17132

cond.true264:                                     ; preds = %cond.false261
  %arraydecay265 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr266 = getelementptr i32, i32* %arraydecay265, i64 0, !dbg !17132
  %74 = load i32, i32* %add.ptr266, align 4, !dbg !17132
  %and267 = and i32 %74, 255, !dbg !17132
  %shl268 = shl i32 %and267, 24, !dbg !17132
  %arraydecay269 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr270 = getelementptr i32, i32* %arraydecay269, i64 0, !dbg !17132
  %75 = load i32, i32* %add.ptr270, align 4, !dbg !17132
  %and271 = and i32 %75, 65280, !dbg !17132
  %shl272 = shl i32 %and271, 8, !dbg !17132
  %or273 = or i32 %shl268, %shl272, !dbg !17132
  %arraydecay274 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr275 = getelementptr i32, i32* %arraydecay274, i64 0, !dbg !17132
  %76 = load i32, i32* %add.ptr275, align 4, !dbg !17132
  %and276 = and i32 %76, 16711680, !dbg !17132
  %shr277 = lshr i32 %and276, 8, !dbg !17132
  %or278 = or i32 %or273, %shr277, !dbg !17132
  %arraydecay279 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr280 = getelementptr i32, i32* %arraydecay279, i64 0, !dbg !17132
  %77 = load i32, i32* %add.ptr280, align 4, !dbg !17132
  %and281 = and i32 %77, -16777216, !dbg !17132
  %shr282 = lshr i32 %and281, 24, !dbg !17132
  %or283 = or i32 %or278, %shr282, !dbg !17132
  br label %cond.end288, !dbg !17132

cond.false284:                                    ; preds = %cond.false261
  %arraydecay285 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 0, !dbg !17132
  %78 = load i32, i32* %add.ptr286, align 4, !dbg !17132
  %call287 = call i32 @__fswab32(i32 %78) #10, !dbg !17132
  br label %cond.end288, !dbg !17132

cond.end288:                                      ; preds = %cond.false284, %cond.true264
  %cond289 = phi i32 [ %or283, %cond.true264 ], [ %call287, %cond.false284 ], !dbg !17132
  %and290 = and i32 %cond289, 16777215, !dbg !17132
  %79 = load i32, i32* %_v, align 4, !dbg !17132
  %and291 = and i32 %79, 255, !dbg !17132
  %shl292 = shl i32 %and291, 24, !dbg !17132
  %or293 = or i32 %and290, %shl292, !dbg !17132
  %call294 = call i32 @__fswab32(i32 %or293) #10, !dbg !17132
  br label %cond.end295, !dbg !17132

cond.end295:                                      ; preds = %cond.end288, %cond.end252
  %cond296 = phi i32 [ %or260, %cond.end252 ], [ %call294, %cond.end288 ], !dbg !17132
  %arraydecay297 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17132
  %add.ptr298 = getelementptr i32, i32* %arraydecay297, i64 0, !dbg !17132
  store i32 %cond296, i32* %add.ptr298, align 4, !dbg !17132
  br label %do.end299, !dbg !17132

do.end299:                                        ; preds = %cond.end295
  %arraydecay300 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17135
  %80 = bitcast i32* %arraydecay300 to i8*, !dbg !17135
  %add.ptr301 = getelementptr i8, i8* %80, i64 4, !dbg !17135
  store i8* %add.ptr301, i8** %vport_elem, align 8, !dbg !17136
  br label %do.body302, !dbg !17137

do.body302:                                       ; preds = %do.end299
  call void @llvm.dbg.declare(metadata i32* %_v303, metadata !17138, metadata !DIExpression()), !dbg !17140
  %81 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17140
  %vport304 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %81, i32 0, i32 1, !dbg !17140
  %82 = load i32, i32* %vport304, align 8, !dbg !17140
  store i32 %82, i32* %_v303, align 4, !dbg !17140
  br label %do.body305, !dbg !17140

do.body305:                                       ; preds = %do.body302
  br label %do.end306, !dbg !17141

do.end306:                                        ; preds = %do.body305
  %83 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %84 = bitcast i8* %83 to i32*, !dbg !17140
  %add.ptr307 = getelementptr i32, i32* %84, i64 0, !dbg !17140
  %85 = load i32, i32* %add.ptr307, align 4, !dbg !17140
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !17140
  br i1 %86, label %cond.true308, label %cond.false324, !dbg !17140

cond.true308:                                     ; preds = %do.end306
  %87 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %88 = bitcast i8* %87 to i32*, !dbg !17140
  %add.ptr309 = getelementptr i32, i32* %88, i64 0, !dbg !17140
  %89 = load i32, i32* %add.ptr309, align 4, !dbg !17140
  %and310 = and i32 %89, 255, !dbg !17140
  %shl311 = shl i32 %and310, 24, !dbg !17140
  %90 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %91 = bitcast i8* %90 to i32*, !dbg !17140
  %add.ptr312 = getelementptr i32, i32* %91, i64 0, !dbg !17140
  %92 = load i32, i32* %add.ptr312, align 4, !dbg !17140
  %and313 = and i32 %92, 65280, !dbg !17140
  %shl314 = shl i32 %and313, 8, !dbg !17140
  %or315 = or i32 %shl311, %shl314, !dbg !17140
  %93 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %94 = bitcast i8* %93 to i32*, !dbg !17140
  %add.ptr316 = getelementptr i32, i32* %94, i64 0, !dbg !17140
  %95 = load i32, i32* %add.ptr316, align 4, !dbg !17140
  %and317 = and i32 %95, 16711680, !dbg !17140
  %shr318 = lshr i32 %and317, 8, !dbg !17140
  %or319 = or i32 %or315, %shr318, !dbg !17140
  %96 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %97 = bitcast i8* %96 to i32*, !dbg !17140
  %add.ptr320 = getelementptr i32, i32* %97, i64 0, !dbg !17140
  %98 = load i32, i32* %add.ptr320, align 4, !dbg !17140
  %and321 = and i32 %98, -16777216, !dbg !17140
  %shr322 = lshr i32 %and321, 24, !dbg !17140
  %or323 = or i32 %or319, %shr322, !dbg !17140
  br label %cond.end327, !dbg !17140

cond.false324:                                    ; preds = %do.end306
  %99 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %100 = bitcast i8* %99 to i32*, !dbg !17140
  %add.ptr325 = getelementptr i32, i32* %100, i64 0, !dbg !17140
  %101 = load i32, i32* %add.ptr325, align 4, !dbg !17140
  %call326 = call i32 @__fswab32(i32 %101) #10, !dbg !17140
  br label %cond.end327, !dbg !17140

cond.end327:                                      ; preds = %cond.false324, %cond.true308
  %cond328 = phi i32 [ %or323, %cond.true308 ], [ %call326, %cond.false324 ], !dbg !17140
  %and329 = and i32 %cond328, -65536, !dbg !17140
  %102 = load i32, i32* %_v303, align 4, !dbg !17140
  %and330 = and i32 %102, 65535, !dbg !17140
  %shl331 = shl i32 %and330, 0, !dbg !17140
  %or332 = or i32 %and329, %shl331, !dbg !17140
  %103 = call i1 @llvm.is.constant.i32(i32 %or332), !dbg !17140
  br i1 %103, label %cond.true333, label %cond.false449, !dbg !17140

cond.true333:                                     ; preds = %cond.end327
  %104 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %105 = bitcast i8* %104 to i32*, !dbg !17140
  %add.ptr334 = getelementptr i32, i32* %105, i64 0, !dbg !17140
  %106 = load i32, i32* %add.ptr334, align 4, !dbg !17140
  %107 = call i1 @llvm.is.constant.i32(i32 %106), !dbg !17140
  br i1 %107, label %cond.true335, label %cond.false351, !dbg !17140

cond.true335:                                     ; preds = %cond.true333
  %108 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %109 = bitcast i8* %108 to i32*, !dbg !17140
  %add.ptr336 = getelementptr i32, i32* %109, i64 0, !dbg !17140
  %110 = load i32, i32* %add.ptr336, align 4, !dbg !17140
  %and337 = and i32 %110, 255, !dbg !17140
  %shl338 = shl i32 %and337, 24, !dbg !17140
  %111 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %112 = bitcast i8* %111 to i32*, !dbg !17140
  %add.ptr339 = getelementptr i32, i32* %112, i64 0, !dbg !17140
  %113 = load i32, i32* %add.ptr339, align 4, !dbg !17140
  %and340 = and i32 %113, 65280, !dbg !17140
  %shl341 = shl i32 %and340, 8, !dbg !17140
  %or342 = or i32 %shl338, %shl341, !dbg !17140
  %114 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %115 = bitcast i8* %114 to i32*, !dbg !17140
  %add.ptr343 = getelementptr i32, i32* %115, i64 0, !dbg !17140
  %116 = load i32, i32* %add.ptr343, align 4, !dbg !17140
  %and344 = and i32 %116, 16711680, !dbg !17140
  %shr345 = lshr i32 %and344, 8, !dbg !17140
  %or346 = or i32 %or342, %shr345, !dbg !17140
  %117 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %118 = bitcast i8* %117 to i32*, !dbg !17140
  %add.ptr347 = getelementptr i32, i32* %118, i64 0, !dbg !17140
  %119 = load i32, i32* %add.ptr347, align 4, !dbg !17140
  %and348 = and i32 %119, -16777216, !dbg !17140
  %shr349 = lshr i32 %and348, 24, !dbg !17140
  %or350 = or i32 %or346, %shr349, !dbg !17140
  br label %cond.end354, !dbg !17140

cond.false351:                                    ; preds = %cond.true333
  %120 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %121 = bitcast i8* %120 to i32*, !dbg !17140
  %add.ptr352 = getelementptr i32, i32* %121, i64 0, !dbg !17140
  %122 = load i32, i32* %add.ptr352, align 4, !dbg !17140
  %call353 = call i32 @__fswab32(i32 %122) #10, !dbg !17140
  br label %cond.end354, !dbg !17140

cond.end354:                                      ; preds = %cond.false351, %cond.true335
  %cond355 = phi i32 [ %or350, %cond.true335 ], [ %call353, %cond.false351 ], !dbg !17140
  %and356 = and i32 %cond355, -65536, !dbg !17140
  %123 = load i32, i32* %_v303, align 4, !dbg !17140
  %and357 = and i32 %123, 65535, !dbg !17140
  %shl358 = shl i32 %and357, 0, !dbg !17140
  %or359 = or i32 %and356, %shl358, !dbg !17140
  %and360 = and i32 %or359, 255, !dbg !17140
  %shl361 = shl i32 %and360, 24, !dbg !17140
  %124 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %125 = bitcast i8* %124 to i32*, !dbg !17140
  %add.ptr362 = getelementptr i32, i32* %125, i64 0, !dbg !17140
  %126 = load i32, i32* %add.ptr362, align 4, !dbg !17140
  %127 = call i1 @llvm.is.constant.i32(i32 %126), !dbg !17140
  br i1 %127, label %cond.true363, label %cond.false379, !dbg !17140

cond.true363:                                     ; preds = %cond.end354
  %128 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %129 = bitcast i8* %128 to i32*, !dbg !17140
  %add.ptr364 = getelementptr i32, i32* %129, i64 0, !dbg !17140
  %130 = load i32, i32* %add.ptr364, align 4, !dbg !17140
  %and365 = and i32 %130, 255, !dbg !17140
  %shl366 = shl i32 %and365, 24, !dbg !17140
  %131 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %132 = bitcast i8* %131 to i32*, !dbg !17140
  %add.ptr367 = getelementptr i32, i32* %132, i64 0, !dbg !17140
  %133 = load i32, i32* %add.ptr367, align 4, !dbg !17140
  %and368 = and i32 %133, 65280, !dbg !17140
  %shl369 = shl i32 %and368, 8, !dbg !17140
  %or370 = or i32 %shl366, %shl369, !dbg !17140
  %134 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %135 = bitcast i8* %134 to i32*, !dbg !17140
  %add.ptr371 = getelementptr i32, i32* %135, i64 0, !dbg !17140
  %136 = load i32, i32* %add.ptr371, align 4, !dbg !17140
  %and372 = and i32 %136, 16711680, !dbg !17140
  %shr373 = lshr i32 %and372, 8, !dbg !17140
  %or374 = or i32 %or370, %shr373, !dbg !17140
  %137 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %138 = bitcast i8* %137 to i32*, !dbg !17140
  %add.ptr375 = getelementptr i32, i32* %138, i64 0, !dbg !17140
  %139 = load i32, i32* %add.ptr375, align 4, !dbg !17140
  %and376 = and i32 %139, -16777216, !dbg !17140
  %shr377 = lshr i32 %and376, 24, !dbg !17140
  %or378 = or i32 %or374, %shr377, !dbg !17140
  br label %cond.end382, !dbg !17140

cond.false379:                                    ; preds = %cond.end354
  %140 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %141 = bitcast i8* %140 to i32*, !dbg !17140
  %add.ptr380 = getelementptr i32, i32* %141, i64 0, !dbg !17140
  %142 = load i32, i32* %add.ptr380, align 4, !dbg !17140
  %call381 = call i32 @__fswab32(i32 %142) #10, !dbg !17140
  br label %cond.end382, !dbg !17140

cond.end382:                                      ; preds = %cond.false379, %cond.true363
  %cond383 = phi i32 [ %or378, %cond.true363 ], [ %call381, %cond.false379 ], !dbg !17140
  %and384 = and i32 %cond383, -65536, !dbg !17140
  %143 = load i32, i32* %_v303, align 4, !dbg !17140
  %and385 = and i32 %143, 65535, !dbg !17140
  %shl386 = shl i32 %and385, 0, !dbg !17140
  %or387 = or i32 %and384, %shl386, !dbg !17140
  %and388 = and i32 %or387, 65280, !dbg !17140
  %shl389 = shl i32 %and388, 8, !dbg !17140
  %or390 = or i32 %shl361, %shl389, !dbg !17140
  %144 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %145 = bitcast i8* %144 to i32*, !dbg !17140
  %add.ptr391 = getelementptr i32, i32* %145, i64 0, !dbg !17140
  %146 = load i32, i32* %add.ptr391, align 4, !dbg !17140
  %147 = call i1 @llvm.is.constant.i32(i32 %146), !dbg !17140
  br i1 %147, label %cond.true392, label %cond.false408, !dbg !17140

cond.true392:                                     ; preds = %cond.end382
  %148 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %149 = bitcast i8* %148 to i32*, !dbg !17140
  %add.ptr393 = getelementptr i32, i32* %149, i64 0, !dbg !17140
  %150 = load i32, i32* %add.ptr393, align 4, !dbg !17140
  %and394 = and i32 %150, 255, !dbg !17140
  %shl395 = shl i32 %and394, 24, !dbg !17140
  %151 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %152 = bitcast i8* %151 to i32*, !dbg !17140
  %add.ptr396 = getelementptr i32, i32* %152, i64 0, !dbg !17140
  %153 = load i32, i32* %add.ptr396, align 4, !dbg !17140
  %and397 = and i32 %153, 65280, !dbg !17140
  %shl398 = shl i32 %and397, 8, !dbg !17140
  %or399 = or i32 %shl395, %shl398, !dbg !17140
  %154 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %155 = bitcast i8* %154 to i32*, !dbg !17140
  %add.ptr400 = getelementptr i32, i32* %155, i64 0, !dbg !17140
  %156 = load i32, i32* %add.ptr400, align 4, !dbg !17140
  %and401 = and i32 %156, 16711680, !dbg !17140
  %shr402 = lshr i32 %and401, 8, !dbg !17140
  %or403 = or i32 %or399, %shr402, !dbg !17140
  %157 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %158 = bitcast i8* %157 to i32*, !dbg !17140
  %add.ptr404 = getelementptr i32, i32* %158, i64 0, !dbg !17140
  %159 = load i32, i32* %add.ptr404, align 4, !dbg !17140
  %and405 = and i32 %159, -16777216, !dbg !17140
  %shr406 = lshr i32 %and405, 24, !dbg !17140
  %or407 = or i32 %or403, %shr406, !dbg !17140
  br label %cond.end411, !dbg !17140

cond.false408:                                    ; preds = %cond.end382
  %160 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %161 = bitcast i8* %160 to i32*, !dbg !17140
  %add.ptr409 = getelementptr i32, i32* %161, i64 0, !dbg !17140
  %162 = load i32, i32* %add.ptr409, align 4, !dbg !17140
  %call410 = call i32 @__fswab32(i32 %162) #10, !dbg !17140
  br label %cond.end411, !dbg !17140

cond.end411:                                      ; preds = %cond.false408, %cond.true392
  %cond412 = phi i32 [ %or407, %cond.true392 ], [ %call410, %cond.false408 ], !dbg !17140
  %and413 = and i32 %cond412, -65536, !dbg !17140
  %163 = load i32, i32* %_v303, align 4, !dbg !17140
  %and414 = and i32 %163, 65535, !dbg !17140
  %shl415 = shl i32 %and414, 0, !dbg !17140
  %or416 = or i32 %and413, %shl415, !dbg !17140
  %and417 = and i32 %or416, 16711680, !dbg !17140
  %shr418 = lshr i32 %and417, 8, !dbg !17140
  %or419 = or i32 %or390, %shr418, !dbg !17140
  %164 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %165 = bitcast i8* %164 to i32*, !dbg !17140
  %add.ptr420 = getelementptr i32, i32* %165, i64 0, !dbg !17140
  %166 = load i32, i32* %add.ptr420, align 4, !dbg !17140
  %167 = call i1 @llvm.is.constant.i32(i32 %166), !dbg !17140
  br i1 %167, label %cond.true421, label %cond.false437, !dbg !17140

cond.true421:                                     ; preds = %cond.end411
  %168 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %169 = bitcast i8* %168 to i32*, !dbg !17140
  %add.ptr422 = getelementptr i32, i32* %169, i64 0, !dbg !17140
  %170 = load i32, i32* %add.ptr422, align 4, !dbg !17140
  %and423 = and i32 %170, 255, !dbg !17140
  %shl424 = shl i32 %and423, 24, !dbg !17140
  %171 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %172 = bitcast i8* %171 to i32*, !dbg !17140
  %add.ptr425 = getelementptr i32, i32* %172, i64 0, !dbg !17140
  %173 = load i32, i32* %add.ptr425, align 4, !dbg !17140
  %and426 = and i32 %173, 65280, !dbg !17140
  %shl427 = shl i32 %and426, 8, !dbg !17140
  %or428 = or i32 %shl424, %shl427, !dbg !17140
  %174 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %175 = bitcast i8* %174 to i32*, !dbg !17140
  %add.ptr429 = getelementptr i32, i32* %175, i64 0, !dbg !17140
  %176 = load i32, i32* %add.ptr429, align 4, !dbg !17140
  %and430 = and i32 %176, 16711680, !dbg !17140
  %shr431 = lshr i32 %and430, 8, !dbg !17140
  %or432 = or i32 %or428, %shr431, !dbg !17140
  %177 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %178 = bitcast i8* %177 to i32*, !dbg !17140
  %add.ptr433 = getelementptr i32, i32* %178, i64 0, !dbg !17140
  %179 = load i32, i32* %add.ptr433, align 4, !dbg !17140
  %and434 = and i32 %179, -16777216, !dbg !17140
  %shr435 = lshr i32 %and434, 24, !dbg !17140
  %or436 = or i32 %or432, %shr435, !dbg !17140
  br label %cond.end440, !dbg !17140

cond.false437:                                    ; preds = %cond.end411
  %180 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %181 = bitcast i8* %180 to i32*, !dbg !17140
  %add.ptr438 = getelementptr i32, i32* %181, i64 0, !dbg !17140
  %182 = load i32, i32* %add.ptr438, align 4, !dbg !17140
  %call439 = call i32 @__fswab32(i32 %182) #10, !dbg !17140
  br label %cond.end440, !dbg !17140

cond.end440:                                      ; preds = %cond.false437, %cond.true421
  %cond441 = phi i32 [ %or436, %cond.true421 ], [ %call439, %cond.false437 ], !dbg !17140
  %and442 = and i32 %cond441, -65536, !dbg !17140
  %183 = load i32, i32* %_v303, align 4, !dbg !17140
  %and443 = and i32 %183, 65535, !dbg !17140
  %shl444 = shl i32 %and443, 0, !dbg !17140
  %or445 = or i32 %and442, %shl444, !dbg !17140
  %and446 = and i32 %or445, -16777216, !dbg !17140
  %shr447 = lshr i32 %and446, 24, !dbg !17140
  %or448 = or i32 %or419, %shr447, !dbg !17140
  br label %cond.end477, !dbg !17140

cond.false449:                                    ; preds = %cond.end327
  %184 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %185 = bitcast i8* %184 to i32*, !dbg !17140
  %add.ptr450 = getelementptr i32, i32* %185, i64 0, !dbg !17140
  %186 = load i32, i32* %add.ptr450, align 4, !dbg !17140
  %187 = call i1 @llvm.is.constant.i32(i32 %186), !dbg !17140
  br i1 %187, label %cond.true451, label %cond.false467, !dbg !17140

cond.true451:                                     ; preds = %cond.false449
  %188 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %189 = bitcast i8* %188 to i32*, !dbg !17140
  %add.ptr452 = getelementptr i32, i32* %189, i64 0, !dbg !17140
  %190 = load i32, i32* %add.ptr452, align 4, !dbg !17140
  %and453 = and i32 %190, 255, !dbg !17140
  %shl454 = shl i32 %and453, 24, !dbg !17140
  %191 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %192 = bitcast i8* %191 to i32*, !dbg !17140
  %add.ptr455 = getelementptr i32, i32* %192, i64 0, !dbg !17140
  %193 = load i32, i32* %add.ptr455, align 4, !dbg !17140
  %and456 = and i32 %193, 65280, !dbg !17140
  %shl457 = shl i32 %and456, 8, !dbg !17140
  %or458 = or i32 %shl454, %shl457, !dbg !17140
  %194 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %195 = bitcast i8* %194 to i32*, !dbg !17140
  %add.ptr459 = getelementptr i32, i32* %195, i64 0, !dbg !17140
  %196 = load i32, i32* %add.ptr459, align 4, !dbg !17140
  %and460 = and i32 %196, 16711680, !dbg !17140
  %shr461 = lshr i32 %and460, 8, !dbg !17140
  %or462 = or i32 %or458, %shr461, !dbg !17140
  %197 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %198 = bitcast i8* %197 to i32*, !dbg !17140
  %add.ptr463 = getelementptr i32, i32* %198, i64 0, !dbg !17140
  %199 = load i32, i32* %add.ptr463, align 4, !dbg !17140
  %and464 = and i32 %199, -16777216, !dbg !17140
  %shr465 = lshr i32 %and464, 24, !dbg !17140
  %or466 = or i32 %or462, %shr465, !dbg !17140
  br label %cond.end470, !dbg !17140

cond.false467:                                    ; preds = %cond.false449
  %200 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %201 = bitcast i8* %200 to i32*, !dbg !17140
  %add.ptr468 = getelementptr i32, i32* %201, i64 0, !dbg !17140
  %202 = load i32, i32* %add.ptr468, align 4, !dbg !17140
  %call469 = call i32 @__fswab32(i32 %202) #10, !dbg !17140
  br label %cond.end470, !dbg !17140

cond.end470:                                      ; preds = %cond.false467, %cond.true451
  %cond471 = phi i32 [ %or466, %cond.true451 ], [ %call469, %cond.false467 ], !dbg !17140
  %and472 = and i32 %cond471, -65536, !dbg !17140
  %203 = load i32, i32* %_v303, align 4, !dbg !17140
  %and473 = and i32 %203, 65535, !dbg !17140
  %shl474 = shl i32 %and473, 0, !dbg !17140
  %or475 = or i32 %and472, %shl474, !dbg !17140
  %call476 = call i32 @__fswab32(i32 %or475) #10, !dbg !17140
  br label %cond.end477, !dbg !17140

cond.end477:                                      ; preds = %cond.end470, %cond.end440
  %cond478 = phi i32 [ %or448, %cond.end440 ], [ %call476, %cond.end470 ], !dbg !17140
  %204 = load i8*, i8** %vport_elem, align 8, !dbg !17140
  %205 = bitcast i8* %204 to i32*, !dbg !17140
  %add.ptr479 = getelementptr i32, i32* %205, i64 0, !dbg !17140
  store i32 %cond478, i32* %add.ptr479, align 4, !dbg !17140
  br label %do.end480, !dbg !17140

do.end480:                                        ; preds = %cond.end477
  br label %do.body481, !dbg !17143

do.body481:                                       ; preds = %do.end480
  call void @llvm.dbg.declare(metadata i32* %_v482, metadata !17144, metadata !DIExpression()), !dbg !17146
  %206 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17146
  %qos483 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %206, i32 0, i32 12, !dbg !17146
  %root_tsar_id = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos483, i32 0, i32 1, !dbg !17146
  %207 = load i32, i32* %root_tsar_id, align 4, !dbg !17146
  store i32 %207, i32* %_v482, align 4, !dbg !17146
  br label %do.body484, !dbg !17146

do.body484:                                       ; preds = %do.body481
  br label %do.end485, !dbg !17147

do.end485:                                        ; preds = %do.body484
  %arraydecay486 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr487 = getelementptr i32, i32* %arraydecay486, i64 2, !dbg !17146
  %208 = load i32, i32* %add.ptr487, align 4, !dbg !17146
  %209 = call i1 @llvm.is.constant.i32(i32 %208), !dbg !17146
  br i1 %209, label %cond.true488, label %cond.false508, !dbg !17146

cond.true488:                                     ; preds = %do.end485
  %arraydecay489 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr490 = getelementptr i32, i32* %arraydecay489, i64 2, !dbg !17146
  %210 = load i32, i32* %add.ptr490, align 4, !dbg !17146
  %and491 = and i32 %210, 255, !dbg !17146
  %shl492 = shl i32 %and491, 24, !dbg !17146
  %arraydecay493 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr494 = getelementptr i32, i32* %arraydecay493, i64 2, !dbg !17146
  %211 = load i32, i32* %add.ptr494, align 4, !dbg !17146
  %and495 = and i32 %211, 65280, !dbg !17146
  %shl496 = shl i32 %and495, 8, !dbg !17146
  %or497 = or i32 %shl492, %shl496, !dbg !17146
  %arraydecay498 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr499 = getelementptr i32, i32* %arraydecay498, i64 2, !dbg !17146
  %212 = load i32, i32* %add.ptr499, align 4, !dbg !17146
  %and500 = and i32 %212, 16711680, !dbg !17146
  %shr501 = lshr i32 %and500, 8, !dbg !17146
  %or502 = or i32 %or497, %shr501, !dbg !17146
  %arraydecay503 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr504 = getelementptr i32, i32* %arraydecay503, i64 2, !dbg !17146
  %213 = load i32, i32* %add.ptr504, align 4, !dbg !17146
  %and505 = and i32 %213, -16777216, !dbg !17146
  %shr506 = lshr i32 %and505, 24, !dbg !17146
  %or507 = or i32 %or502, %shr506, !dbg !17146
  br label %cond.end512, !dbg !17146

cond.false508:                                    ; preds = %do.end485
  %arraydecay509 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr510 = getelementptr i32, i32* %arraydecay509, i64 2, !dbg !17146
  %214 = load i32, i32* %add.ptr510, align 4, !dbg !17146
  %call511 = call i32 @__fswab32(i32 %214) #10, !dbg !17146
  br label %cond.end512, !dbg !17146

cond.end512:                                      ; preds = %cond.false508, %cond.true488
  %cond513 = phi i32 [ %or507, %cond.true488 ], [ %call511, %cond.false508 ], !dbg !17146
  %and514 = and i32 %cond513, 0, !dbg !17146
  %215 = load i32, i32* %_v482, align 4, !dbg !17146
  %shl515 = shl i32 %215, 0, !dbg !17146
  %or516 = or i32 %and514, %shl515, !dbg !17146
  %216 = call i1 @llvm.is.constant.i32(i32 %or516), !dbg !17146
  br i1 %216, label %cond.true517, label %cond.false653, !dbg !17146

cond.true517:                                     ; preds = %cond.end512
  %arraydecay518 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr519 = getelementptr i32, i32* %arraydecay518, i64 2, !dbg !17146
  %217 = load i32, i32* %add.ptr519, align 4, !dbg !17146
  %218 = call i1 @llvm.is.constant.i32(i32 %217), !dbg !17146
  br i1 %218, label %cond.true520, label %cond.false540, !dbg !17146

cond.true520:                                     ; preds = %cond.true517
  %arraydecay521 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr522 = getelementptr i32, i32* %arraydecay521, i64 2, !dbg !17146
  %219 = load i32, i32* %add.ptr522, align 4, !dbg !17146
  %and523 = and i32 %219, 255, !dbg !17146
  %shl524 = shl i32 %and523, 24, !dbg !17146
  %arraydecay525 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr526 = getelementptr i32, i32* %arraydecay525, i64 2, !dbg !17146
  %220 = load i32, i32* %add.ptr526, align 4, !dbg !17146
  %and527 = and i32 %220, 65280, !dbg !17146
  %shl528 = shl i32 %and527, 8, !dbg !17146
  %or529 = or i32 %shl524, %shl528, !dbg !17146
  %arraydecay530 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr531 = getelementptr i32, i32* %arraydecay530, i64 2, !dbg !17146
  %221 = load i32, i32* %add.ptr531, align 4, !dbg !17146
  %and532 = and i32 %221, 16711680, !dbg !17146
  %shr533 = lshr i32 %and532, 8, !dbg !17146
  %or534 = or i32 %or529, %shr533, !dbg !17146
  %arraydecay535 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr536 = getelementptr i32, i32* %arraydecay535, i64 2, !dbg !17146
  %222 = load i32, i32* %add.ptr536, align 4, !dbg !17146
  %and537 = and i32 %222, -16777216, !dbg !17146
  %shr538 = lshr i32 %and537, 24, !dbg !17146
  %or539 = or i32 %or534, %shr538, !dbg !17146
  br label %cond.end544, !dbg !17146

cond.false540:                                    ; preds = %cond.true517
  %arraydecay541 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr542 = getelementptr i32, i32* %arraydecay541, i64 2, !dbg !17146
  %223 = load i32, i32* %add.ptr542, align 4, !dbg !17146
  %call543 = call i32 @__fswab32(i32 %223) #10, !dbg !17146
  br label %cond.end544, !dbg !17146

cond.end544:                                      ; preds = %cond.false540, %cond.true520
  %cond545 = phi i32 [ %or539, %cond.true520 ], [ %call543, %cond.false540 ], !dbg !17146
  %and546 = and i32 %cond545, 0, !dbg !17146
  %224 = load i32, i32* %_v482, align 4, !dbg !17146
  %shl547 = shl i32 %224, 0, !dbg !17146
  %or548 = or i32 %and546, %shl547, !dbg !17146
  %and549 = and i32 %or548, 255, !dbg !17146
  %shl550 = shl i32 %and549, 24, !dbg !17146
  %arraydecay551 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr552 = getelementptr i32, i32* %arraydecay551, i64 2, !dbg !17146
  %225 = load i32, i32* %add.ptr552, align 4, !dbg !17146
  %226 = call i1 @llvm.is.constant.i32(i32 %225), !dbg !17146
  br i1 %226, label %cond.true553, label %cond.false573, !dbg !17146

cond.true553:                                     ; preds = %cond.end544
  %arraydecay554 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr555 = getelementptr i32, i32* %arraydecay554, i64 2, !dbg !17146
  %227 = load i32, i32* %add.ptr555, align 4, !dbg !17146
  %and556 = and i32 %227, 255, !dbg !17146
  %shl557 = shl i32 %and556, 24, !dbg !17146
  %arraydecay558 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr559 = getelementptr i32, i32* %arraydecay558, i64 2, !dbg !17146
  %228 = load i32, i32* %add.ptr559, align 4, !dbg !17146
  %and560 = and i32 %228, 65280, !dbg !17146
  %shl561 = shl i32 %and560, 8, !dbg !17146
  %or562 = or i32 %shl557, %shl561, !dbg !17146
  %arraydecay563 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr564 = getelementptr i32, i32* %arraydecay563, i64 2, !dbg !17146
  %229 = load i32, i32* %add.ptr564, align 4, !dbg !17146
  %and565 = and i32 %229, 16711680, !dbg !17146
  %shr566 = lshr i32 %and565, 8, !dbg !17146
  %or567 = or i32 %or562, %shr566, !dbg !17146
  %arraydecay568 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr569 = getelementptr i32, i32* %arraydecay568, i64 2, !dbg !17146
  %230 = load i32, i32* %add.ptr569, align 4, !dbg !17146
  %and570 = and i32 %230, -16777216, !dbg !17146
  %shr571 = lshr i32 %and570, 24, !dbg !17146
  %or572 = or i32 %or567, %shr571, !dbg !17146
  br label %cond.end577, !dbg !17146

cond.false573:                                    ; preds = %cond.end544
  %arraydecay574 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr575 = getelementptr i32, i32* %arraydecay574, i64 2, !dbg !17146
  %231 = load i32, i32* %add.ptr575, align 4, !dbg !17146
  %call576 = call i32 @__fswab32(i32 %231) #10, !dbg !17146
  br label %cond.end577, !dbg !17146

cond.end577:                                      ; preds = %cond.false573, %cond.true553
  %cond578 = phi i32 [ %or572, %cond.true553 ], [ %call576, %cond.false573 ], !dbg !17146
  %and579 = and i32 %cond578, 0, !dbg !17146
  %232 = load i32, i32* %_v482, align 4, !dbg !17146
  %shl580 = shl i32 %232, 0, !dbg !17146
  %or581 = or i32 %and579, %shl580, !dbg !17146
  %and582 = and i32 %or581, 65280, !dbg !17146
  %shl583 = shl i32 %and582, 8, !dbg !17146
  %or584 = or i32 %shl550, %shl583, !dbg !17146
  %arraydecay585 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr586 = getelementptr i32, i32* %arraydecay585, i64 2, !dbg !17146
  %233 = load i32, i32* %add.ptr586, align 4, !dbg !17146
  %234 = call i1 @llvm.is.constant.i32(i32 %233), !dbg !17146
  br i1 %234, label %cond.true587, label %cond.false607, !dbg !17146

cond.true587:                                     ; preds = %cond.end577
  %arraydecay588 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr589 = getelementptr i32, i32* %arraydecay588, i64 2, !dbg !17146
  %235 = load i32, i32* %add.ptr589, align 4, !dbg !17146
  %and590 = and i32 %235, 255, !dbg !17146
  %shl591 = shl i32 %and590, 24, !dbg !17146
  %arraydecay592 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr593 = getelementptr i32, i32* %arraydecay592, i64 2, !dbg !17146
  %236 = load i32, i32* %add.ptr593, align 4, !dbg !17146
  %and594 = and i32 %236, 65280, !dbg !17146
  %shl595 = shl i32 %and594, 8, !dbg !17146
  %or596 = or i32 %shl591, %shl595, !dbg !17146
  %arraydecay597 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 2, !dbg !17146
  %237 = load i32, i32* %add.ptr598, align 4, !dbg !17146
  %and599 = and i32 %237, 16711680, !dbg !17146
  %shr600 = lshr i32 %and599, 8, !dbg !17146
  %or601 = or i32 %or596, %shr600, !dbg !17146
  %arraydecay602 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr603 = getelementptr i32, i32* %arraydecay602, i64 2, !dbg !17146
  %238 = load i32, i32* %add.ptr603, align 4, !dbg !17146
  %and604 = and i32 %238, -16777216, !dbg !17146
  %shr605 = lshr i32 %and604, 24, !dbg !17146
  %or606 = or i32 %or601, %shr605, !dbg !17146
  br label %cond.end611, !dbg !17146

cond.false607:                                    ; preds = %cond.end577
  %arraydecay608 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr609 = getelementptr i32, i32* %arraydecay608, i64 2, !dbg !17146
  %239 = load i32, i32* %add.ptr609, align 4, !dbg !17146
  %call610 = call i32 @__fswab32(i32 %239) #10, !dbg !17146
  br label %cond.end611, !dbg !17146

cond.end611:                                      ; preds = %cond.false607, %cond.true587
  %cond612 = phi i32 [ %or606, %cond.true587 ], [ %call610, %cond.false607 ], !dbg !17146
  %and613 = and i32 %cond612, 0, !dbg !17146
  %240 = load i32, i32* %_v482, align 4, !dbg !17146
  %shl614 = shl i32 %240, 0, !dbg !17146
  %or615 = or i32 %and613, %shl614, !dbg !17146
  %and616 = and i32 %or615, 16711680, !dbg !17146
  %shr617 = lshr i32 %and616, 8, !dbg !17146
  %or618 = or i32 %or584, %shr617, !dbg !17146
  %arraydecay619 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr620 = getelementptr i32, i32* %arraydecay619, i64 2, !dbg !17146
  %241 = load i32, i32* %add.ptr620, align 4, !dbg !17146
  %242 = call i1 @llvm.is.constant.i32(i32 %241), !dbg !17146
  br i1 %242, label %cond.true621, label %cond.false641, !dbg !17146

cond.true621:                                     ; preds = %cond.end611
  %arraydecay622 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr623 = getelementptr i32, i32* %arraydecay622, i64 2, !dbg !17146
  %243 = load i32, i32* %add.ptr623, align 4, !dbg !17146
  %and624 = and i32 %243, 255, !dbg !17146
  %shl625 = shl i32 %and624, 24, !dbg !17146
  %arraydecay626 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr627 = getelementptr i32, i32* %arraydecay626, i64 2, !dbg !17146
  %244 = load i32, i32* %add.ptr627, align 4, !dbg !17146
  %and628 = and i32 %244, 65280, !dbg !17146
  %shl629 = shl i32 %and628, 8, !dbg !17146
  %or630 = or i32 %shl625, %shl629, !dbg !17146
  %arraydecay631 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr632 = getelementptr i32, i32* %arraydecay631, i64 2, !dbg !17146
  %245 = load i32, i32* %add.ptr632, align 4, !dbg !17146
  %and633 = and i32 %245, 16711680, !dbg !17146
  %shr634 = lshr i32 %and633, 8, !dbg !17146
  %or635 = or i32 %or630, %shr634, !dbg !17146
  %arraydecay636 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr637 = getelementptr i32, i32* %arraydecay636, i64 2, !dbg !17146
  %246 = load i32, i32* %add.ptr637, align 4, !dbg !17146
  %and638 = and i32 %246, -16777216, !dbg !17146
  %shr639 = lshr i32 %and638, 24, !dbg !17146
  %or640 = or i32 %or635, %shr639, !dbg !17146
  br label %cond.end645, !dbg !17146

cond.false641:                                    ; preds = %cond.end611
  %arraydecay642 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr643 = getelementptr i32, i32* %arraydecay642, i64 2, !dbg !17146
  %247 = load i32, i32* %add.ptr643, align 4, !dbg !17146
  %call644 = call i32 @__fswab32(i32 %247) #10, !dbg !17146
  br label %cond.end645, !dbg !17146

cond.end645:                                      ; preds = %cond.false641, %cond.true621
  %cond646 = phi i32 [ %or640, %cond.true621 ], [ %call644, %cond.false641 ], !dbg !17146
  %and647 = and i32 %cond646, 0, !dbg !17146
  %248 = load i32, i32* %_v482, align 4, !dbg !17146
  %shl648 = shl i32 %248, 0, !dbg !17146
  %or649 = or i32 %and647, %shl648, !dbg !17146
  %and650 = and i32 %or649, -16777216, !dbg !17146
  %shr651 = lshr i32 %and650, 24, !dbg !17146
  %or652 = or i32 %or618, %shr651, !dbg !17146
  br label %cond.end686, !dbg !17146

cond.false653:                                    ; preds = %cond.end512
  %arraydecay654 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr655 = getelementptr i32, i32* %arraydecay654, i64 2, !dbg !17146
  %249 = load i32, i32* %add.ptr655, align 4, !dbg !17146
  %250 = call i1 @llvm.is.constant.i32(i32 %249), !dbg !17146
  br i1 %250, label %cond.true656, label %cond.false676, !dbg !17146

cond.true656:                                     ; preds = %cond.false653
  %arraydecay657 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr658 = getelementptr i32, i32* %arraydecay657, i64 2, !dbg !17146
  %251 = load i32, i32* %add.ptr658, align 4, !dbg !17146
  %and659 = and i32 %251, 255, !dbg !17146
  %shl660 = shl i32 %and659, 24, !dbg !17146
  %arraydecay661 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr662 = getelementptr i32, i32* %arraydecay661, i64 2, !dbg !17146
  %252 = load i32, i32* %add.ptr662, align 4, !dbg !17146
  %and663 = and i32 %252, 65280, !dbg !17146
  %shl664 = shl i32 %and663, 8, !dbg !17146
  %or665 = or i32 %shl660, %shl664, !dbg !17146
  %arraydecay666 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr667 = getelementptr i32, i32* %arraydecay666, i64 2, !dbg !17146
  %253 = load i32, i32* %add.ptr667, align 4, !dbg !17146
  %and668 = and i32 %253, 16711680, !dbg !17146
  %shr669 = lshr i32 %and668, 8, !dbg !17146
  %or670 = or i32 %or665, %shr669, !dbg !17146
  %arraydecay671 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr672 = getelementptr i32, i32* %arraydecay671, i64 2, !dbg !17146
  %254 = load i32, i32* %add.ptr672, align 4, !dbg !17146
  %and673 = and i32 %254, -16777216, !dbg !17146
  %shr674 = lshr i32 %and673, 24, !dbg !17146
  %or675 = or i32 %or670, %shr674, !dbg !17146
  br label %cond.end680, !dbg !17146

cond.false676:                                    ; preds = %cond.false653
  %arraydecay677 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr678 = getelementptr i32, i32* %arraydecay677, i64 2, !dbg !17146
  %255 = load i32, i32* %add.ptr678, align 4, !dbg !17146
  %call679 = call i32 @__fswab32(i32 %255) #10, !dbg !17146
  br label %cond.end680, !dbg !17146

cond.end680:                                      ; preds = %cond.false676, %cond.true656
  %cond681 = phi i32 [ %or675, %cond.true656 ], [ %call679, %cond.false676 ], !dbg !17146
  %and682 = and i32 %cond681, 0, !dbg !17146
  %256 = load i32, i32* %_v482, align 4, !dbg !17146
  %shl683 = shl i32 %256, 0, !dbg !17146
  %or684 = or i32 %and682, %shl683, !dbg !17146
  %call685 = call i32 @__fswab32(i32 %or684) #10, !dbg !17146
  br label %cond.end686, !dbg !17146

cond.end686:                                      ; preds = %cond.end680, %cond.end645
  %cond687 = phi i32 [ %or652, %cond.end645 ], [ %call685, %cond.end680 ], !dbg !17146
  %arraydecay688 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17146
  %add.ptr689 = getelementptr i32, i32* %arraydecay688, i64 2, !dbg !17146
  store i32 %cond687, i32* %add.ptr689, align 4, !dbg !17146
  br label %do.end690, !dbg !17146

do.end690:                                        ; preds = %cond.end686
  br label %do.body691, !dbg !17149

do.body691:                                       ; preds = %do.end690
  call void @llvm.dbg.declare(metadata i32* %_v692, metadata !17150, metadata !DIExpression()), !dbg !17152
  %257 = load i32, i32* %max_rate.addr, align 4, !dbg !17152
  store i32 %257, i32* %_v692, align 4, !dbg !17152
  br label %do.body693, !dbg !17152

do.body693:                                       ; preds = %do.body691
  br label %do.end694, !dbg !17153

do.end694:                                        ; preds = %do.body693
  %arraydecay695 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr696 = getelementptr i32, i32* %arraydecay695, i64 6, !dbg !17152
  %258 = load i32, i32* %add.ptr696, align 4, !dbg !17152
  %259 = call i1 @llvm.is.constant.i32(i32 %258), !dbg !17152
  br i1 %259, label %cond.true697, label %cond.false717, !dbg !17152

cond.true697:                                     ; preds = %do.end694
  %arraydecay698 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr699 = getelementptr i32, i32* %arraydecay698, i64 6, !dbg !17152
  %260 = load i32, i32* %add.ptr699, align 4, !dbg !17152
  %and700 = and i32 %260, 255, !dbg !17152
  %shl701 = shl i32 %and700, 24, !dbg !17152
  %arraydecay702 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr703 = getelementptr i32, i32* %arraydecay702, i64 6, !dbg !17152
  %261 = load i32, i32* %add.ptr703, align 4, !dbg !17152
  %and704 = and i32 %261, 65280, !dbg !17152
  %shl705 = shl i32 %and704, 8, !dbg !17152
  %or706 = or i32 %shl701, %shl705, !dbg !17152
  %arraydecay707 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr708 = getelementptr i32, i32* %arraydecay707, i64 6, !dbg !17152
  %262 = load i32, i32* %add.ptr708, align 4, !dbg !17152
  %and709 = and i32 %262, 16711680, !dbg !17152
  %shr710 = lshr i32 %and709, 8, !dbg !17152
  %or711 = or i32 %or706, %shr710, !dbg !17152
  %arraydecay712 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr713 = getelementptr i32, i32* %arraydecay712, i64 6, !dbg !17152
  %263 = load i32, i32* %add.ptr713, align 4, !dbg !17152
  %and714 = and i32 %263, -16777216, !dbg !17152
  %shr715 = lshr i32 %and714, 24, !dbg !17152
  %or716 = or i32 %or711, %shr715, !dbg !17152
  br label %cond.end721, !dbg !17152

cond.false717:                                    ; preds = %do.end694
  %arraydecay718 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr719 = getelementptr i32, i32* %arraydecay718, i64 6, !dbg !17152
  %264 = load i32, i32* %add.ptr719, align 4, !dbg !17152
  %call720 = call i32 @__fswab32(i32 %264) #10, !dbg !17152
  br label %cond.end721, !dbg !17152

cond.end721:                                      ; preds = %cond.false717, %cond.true697
  %cond722 = phi i32 [ %or716, %cond.true697 ], [ %call720, %cond.false717 ], !dbg !17152
  %and723 = and i32 %cond722, 0, !dbg !17152
  %265 = load i32, i32* %_v692, align 4, !dbg !17152
  %shl724 = shl i32 %265, 0, !dbg !17152
  %or725 = or i32 %and723, %shl724, !dbg !17152
  %266 = call i1 @llvm.is.constant.i32(i32 %or725), !dbg !17152
  br i1 %266, label %cond.true726, label %cond.false862, !dbg !17152

cond.true726:                                     ; preds = %cond.end721
  %arraydecay727 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr728 = getelementptr i32, i32* %arraydecay727, i64 6, !dbg !17152
  %267 = load i32, i32* %add.ptr728, align 4, !dbg !17152
  %268 = call i1 @llvm.is.constant.i32(i32 %267), !dbg !17152
  br i1 %268, label %cond.true729, label %cond.false749, !dbg !17152

cond.true729:                                     ; preds = %cond.true726
  %arraydecay730 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr731 = getelementptr i32, i32* %arraydecay730, i64 6, !dbg !17152
  %269 = load i32, i32* %add.ptr731, align 4, !dbg !17152
  %and732 = and i32 %269, 255, !dbg !17152
  %shl733 = shl i32 %and732, 24, !dbg !17152
  %arraydecay734 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr735 = getelementptr i32, i32* %arraydecay734, i64 6, !dbg !17152
  %270 = load i32, i32* %add.ptr735, align 4, !dbg !17152
  %and736 = and i32 %270, 65280, !dbg !17152
  %shl737 = shl i32 %and736, 8, !dbg !17152
  %or738 = or i32 %shl733, %shl737, !dbg !17152
  %arraydecay739 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr740 = getelementptr i32, i32* %arraydecay739, i64 6, !dbg !17152
  %271 = load i32, i32* %add.ptr740, align 4, !dbg !17152
  %and741 = and i32 %271, 16711680, !dbg !17152
  %shr742 = lshr i32 %and741, 8, !dbg !17152
  %or743 = or i32 %or738, %shr742, !dbg !17152
  %arraydecay744 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr745 = getelementptr i32, i32* %arraydecay744, i64 6, !dbg !17152
  %272 = load i32, i32* %add.ptr745, align 4, !dbg !17152
  %and746 = and i32 %272, -16777216, !dbg !17152
  %shr747 = lshr i32 %and746, 24, !dbg !17152
  %or748 = or i32 %or743, %shr747, !dbg !17152
  br label %cond.end753, !dbg !17152

cond.false749:                                    ; preds = %cond.true726
  %arraydecay750 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr751 = getelementptr i32, i32* %arraydecay750, i64 6, !dbg !17152
  %273 = load i32, i32* %add.ptr751, align 4, !dbg !17152
  %call752 = call i32 @__fswab32(i32 %273) #10, !dbg !17152
  br label %cond.end753, !dbg !17152

cond.end753:                                      ; preds = %cond.false749, %cond.true729
  %cond754 = phi i32 [ %or748, %cond.true729 ], [ %call752, %cond.false749 ], !dbg !17152
  %and755 = and i32 %cond754, 0, !dbg !17152
  %274 = load i32, i32* %_v692, align 4, !dbg !17152
  %shl756 = shl i32 %274, 0, !dbg !17152
  %or757 = or i32 %and755, %shl756, !dbg !17152
  %and758 = and i32 %or757, 255, !dbg !17152
  %shl759 = shl i32 %and758, 24, !dbg !17152
  %arraydecay760 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr761 = getelementptr i32, i32* %arraydecay760, i64 6, !dbg !17152
  %275 = load i32, i32* %add.ptr761, align 4, !dbg !17152
  %276 = call i1 @llvm.is.constant.i32(i32 %275), !dbg !17152
  br i1 %276, label %cond.true762, label %cond.false782, !dbg !17152

cond.true762:                                     ; preds = %cond.end753
  %arraydecay763 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr764 = getelementptr i32, i32* %arraydecay763, i64 6, !dbg !17152
  %277 = load i32, i32* %add.ptr764, align 4, !dbg !17152
  %and765 = and i32 %277, 255, !dbg !17152
  %shl766 = shl i32 %and765, 24, !dbg !17152
  %arraydecay767 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr768 = getelementptr i32, i32* %arraydecay767, i64 6, !dbg !17152
  %278 = load i32, i32* %add.ptr768, align 4, !dbg !17152
  %and769 = and i32 %278, 65280, !dbg !17152
  %shl770 = shl i32 %and769, 8, !dbg !17152
  %or771 = or i32 %shl766, %shl770, !dbg !17152
  %arraydecay772 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr773 = getelementptr i32, i32* %arraydecay772, i64 6, !dbg !17152
  %279 = load i32, i32* %add.ptr773, align 4, !dbg !17152
  %and774 = and i32 %279, 16711680, !dbg !17152
  %shr775 = lshr i32 %and774, 8, !dbg !17152
  %or776 = or i32 %or771, %shr775, !dbg !17152
  %arraydecay777 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr778 = getelementptr i32, i32* %arraydecay777, i64 6, !dbg !17152
  %280 = load i32, i32* %add.ptr778, align 4, !dbg !17152
  %and779 = and i32 %280, -16777216, !dbg !17152
  %shr780 = lshr i32 %and779, 24, !dbg !17152
  %or781 = or i32 %or776, %shr780, !dbg !17152
  br label %cond.end786, !dbg !17152

cond.false782:                                    ; preds = %cond.end753
  %arraydecay783 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr784 = getelementptr i32, i32* %arraydecay783, i64 6, !dbg !17152
  %281 = load i32, i32* %add.ptr784, align 4, !dbg !17152
  %call785 = call i32 @__fswab32(i32 %281) #10, !dbg !17152
  br label %cond.end786, !dbg !17152

cond.end786:                                      ; preds = %cond.false782, %cond.true762
  %cond787 = phi i32 [ %or781, %cond.true762 ], [ %call785, %cond.false782 ], !dbg !17152
  %and788 = and i32 %cond787, 0, !dbg !17152
  %282 = load i32, i32* %_v692, align 4, !dbg !17152
  %shl789 = shl i32 %282, 0, !dbg !17152
  %or790 = or i32 %and788, %shl789, !dbg !17152
  %and791 = and i32 %or790, 65280, !dbg !17152
  %shl792 = shl i32 %and791, 8, !dbg !17152
  %or793 = or i32 %shl759, %shl792, !dbg !17152
  %arraydecay794 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr795 = getelementptr i32, i32* %arraydecay794, i64 6, !dbg !17152
  %283 = load i32, i32* %add.ptr795, align 4, !dbg !17152
  %284 = call i1 @llvm.is.constant.i32(i32 %283), !dbg !17152
  br i1 %284, label %cond.true796, label %cond.false816, !dbg !17152

cond.true796:                                     ; preds = %cond.end786
  %arraydecay797 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr798 = getelementptr i32, i32* %arraydecay797, i64 6, !dbg !17152
  %285 = load i32, i32* %add.ptr798, align 4, !dbg !17152
  %and799 = and i32 %285, 255, !dbg !17152
  %shl800 = shl i32 %and799, 24, !dbg !17152
  %arraydecay801 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr802 = getelementptr i32, i32* %arraydecay801, i64 6, !dbg !17152
  %286 = load i32, i32* %add.ptr802, align 4, !dbg !17152
  %and803 = and i32 %286, 65280, !dbg !17152
  %shl804 = shl i32 %and803, 8, !dbg !17152
  %or805 = or i32 %shl800, %shl804, !dbg !17152
  %arraydecay806 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr807 = getelementptr i32, i32* %arraydecay806, i64 6, !dbg !17152
  %287 = load i32, i32* %add.ptr807, align 4, !dbg !17152
  %and808 = and i32 %287, 16711680, !dbg !17152
  %shr809 = lshr i32 %and808, 8, !dbg !17152
  %or810 = or i32 %or805, %shr809, !dbg !17152
  %arraydecay811 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr812 = getelementptr i32, i32* %arraydecay811, i64 6, !dbg !17152
  %288 = load i32, i32* %add.ptr812, align 4, !dbg !17152
  %and813 = and i32 %288, -16777216, !dbg !17152
  %shr814 = lshr i32 %and813, 24, !dbg !17152
  %or815 = or i32 %or810, %shr814, !dbg !17152
  br label %cond.end820, !dbg !17152

cond.false816:                                    ; preds = %cond.end786
  %arraydecay817 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr818 = getelementptr i32, i32* %arraydecay817, i64 6, !dbg !17152
  %289 = load i32, i32* %add.ptr818, align 4, !dbg !17152
  %call819 = call i32 @__fswab32(i32 %289) #10, !dbg !17152
  br label %cond.end820, !dbg !17152

cond.end820:                                      ; preds = %cond.false816, %cond.true796
  %cond821 = phi i32 [ %or815, %cond.true796 ], [ %call819, %cond.false816 ], !dbg !17152
  %and822 = and i32 %cond821, 0, !dbg !17152
  %290 = load i32, i32* %_v692, align 4, !dbg !17152
  %shl823 = shl i32 %290, 0, !dbg !17152
  %or824 = or i32 %and822, %shl823, !dbg !17152
  %and825 = and i32 %or824, 16711680, !dbg !17152
  %shr826 = lshr i32 %and825, 8, !dbg !17152
  %or827 = or i32 %or793, %shr826, !dbg !17152
  %arraydecay828 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr829 = getelementptr i32, i32* %arraydecay828, i64 6, !dbg !17152
  %291 = load i32, i32* %add.ptr829, align 4, !dbg !17152
  %292 = call i1 @llvm.is.constant.i32(i32 %291), !dbg !17152
  br i1 %292, label %cond.true830, label %cond.false850, !dbg !17152

cond.true830:                                     ; preds = %cond.end820
  %arraydecay831 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr832 = getelementptr i32, i32* %arraydecay831, i64 6, !dbg !17152
  %293 = load i32, i32* %add.ptr832, align 4, !dbg !17152
  %and833 = and i32 %293, 255, !dbg !17152
  %shl834 = shl i32 %and833, 24, !dbg !17152
  %arraydecay835 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr836 = getelementptr i32, i32* %arraydecay835, i64 6, !dbg !17152
  %294 = load i32, i32* %add.ptr836, align 4, !dbg !17152
  %and837 = and i32 %294, 65280, !dbg !17152
  %shl838 = shl i32 %and837, 8, !dbg !17152
  %or839 = or i32 %shl834, %shl838, !dbg !17152
  %arraydecay840 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr841 = getelementptr i32, i32* %arraydecay840, i64 6, !dbg !17152
  %295 = load i32, i32* %add.ptr841, align 4, !dbg !17152
  %and842 = and i32 %295, 16711680, !dbg !17152
  %shr843 = lshr i32 %and842, 8, !dbg !17152
  %or844 = or i32 %or839, %shr843, !dbg !17152
  %arraydecay845 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr846 = getelementptr i32, i32* %arraydecay845, i64 6, !dbg !17152
  %296 = load i32, i32* %add.ptr846, align 4, !dbg !17152
  %and847 = and i32 %296, -16777216, !dbg !17152
  %shr848 = lshr i32 %and847, 24, !dbg !17152
  %or849 = or i32 %or844, %shr848, !dbg !17152
  br label %cond.end854, !dbg !17152

cond.false850:                                    ; preds = %cond.end820
  %arraydecay851 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr852 = getelementptr i32, i32* %arraydecay851, i64 6, !dbg !17152
  %297 = load i32, i32* %add.ptr852, align 4, !dbg !17152
  %call853 = call i32 @__fswab32(i32 %297) #10, !dbg !17152
  br label %cond.end854, !dbg !17152

cond.end854:                                      ; preds = %cond.false850, %cond.true830
  %cond855 = phi i32 [ %or849, %cond.true830 ], [ %call853, %cond.false850 ], !dbg !17152
  %and856 = and i32 %cond855, 0, !dbg !17152
  %298 = load i32, i32* %_v692, align 4, !dbg !17152
  %shl857 = shl i32 %298, 0, !dbg !17152
  %or858 = or i32 %and856, %shl857, !dbg !17152
  %and859 = and i32 %or858, -16777216, !dbg !17152
  %shr860 = lshr i32 %and859, 24, !dbg !17152
  %or861 = or i32 %or827, %shr860, !dbg !17152
  br label %cond.end895, !dbg !17152

cond.false862:                                    ; preds = %cond.end721
  %arraydecay863 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr864 = getelementptr i32, i32* %arraydecay863, i64 6, !dbg !17152
  %299 = load i32, i32* %add.ptr864, align 4, !dbg !17152
  %300 = call i1 @llvm.is.constant.i32(i32 %299), !dbg !17152
  br i1 %300, label %cond.true865, label %cond.false885, !dbg !17152

cond.true865:                                     ; preds = %cond.false862
  %arraydecay866 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr867 = getelementptr i32, i32* %arraydecay866, i64 6, !dbg !17152
  %301 = load i32, i32* %add.ptr867, align 4, !dbg !17152
  %and868 = and i32 %301, 255, !dbg !17152
  %shl869 = shl i32 %and868, 24, !dbg !17152
  %arraydecay870 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr871 = getelementptr i32, i32* %arraydecay870, i64 6, !dbg !17152
  %302 = load i32, i32* %add.ptr871, align 4, !dbg !17152
  %and872 = and i32 %302, 65280, !dbg !17152
  %shl873 = shl i32 %and872, 8, !dbg !17152
  %or874 = or i32 %shl869, %shl873, !dbg !17152
  %arraydecay875 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr876 = getelementptr i32, i32* %arraydecay875, i64 6, !dbg !17152
  %303 = load i32, i32* %add.ptr876, align 4, !dbg !17152
  %and877 = and i32 %303, 16711680, !dbg !17152
  %shr878 = lshr i32 %and877, 8, !dbg !17152
  %or879 = or i32 %or874, %shr878, !dbg !17152
  %arraydecay880 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr881 = getelementptr i32, i32* %arraydecay880, i64 6, !dbg !17152
  %304 = load i32, i32* %add.ptr881, align 4, !dbg !17152
  %and882 = and i32 %304, -16777216, !dbg !17152
  %shr883 = lshr i32 %and882, 24, !dbg !17152
  %or884 = or i32 %or879, %shr883, !dbg !17152
  br label %cond.end889, !dbg !17152

cond.false885:                                    ; preds = %cond.false862
  %arraydecay886 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr887 = getelementptr i32, i32* %arraydecay886, i64 6, !dbg !17152
  %305 = load i32, i32* %add.ptr887, align 4, !dbg !17152
  %call888 = call i32 @__fswab32(i32 %305) #10, !dbg !17152
  br label %cond.end889, !dbg !17152

cond.end889:                                      ; preds = %cond.false885, %cond.true865
  %cond890 = phi i32 [ %or884, %cond.true865 ], [ %call888, %cond.false885 ], !dbg !17152
  %and891 = and i32 %cond890, 0, !dbg !17152
  %306 = load i32, i32* %_v692, align 4, !dbg !17152
  %shl892 = shl i32 %306, 0, !dbg !17152
  %or893 = or i32 %and891, %shl892, !dbg !17152
  %call894 = call i32 @__fswab32(i32 %or893) #10, !dbg !17152
  br label %cond.end895, !dbg !17152

cond.end895:                                      ; preds = %cond.end889, %cond.end854
  %cond896 = phi i32 [ %or861, %cond.end854 ], [ %call894, %cond.end889 ], !dbg !17152
  %arraydecay897 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17152
  %add.ptr898 = getelementptr i32, i32* %arraydecay897, i64 6, !dbg !17152
  store i32 %cond896, i32* %add.ptr898, align 4, !dbg !17152
  br label %do.end899, !dbg !17152

do.end899:                                        ; preds = %cond.end895
  br label %do.body900, !dbg !17155

do.body900:                                       ; preds = %do.end899
  call void @llvm.dbg.declare(metadata i32* %_v901, metadata !17156, metadata !DIExpression()), !dbg !17158
  %307 = load i32, i32* %bw_share.addr, align 4, !dbg !17158
  store i32 %307, i32* %_v901, align 4, !dbg !17158
  br label %do.body902, !dbg !17158

do.body902:                                       ; preds = %do.body900
  br label %do.end903, !dbg !17159

do.end903:                                        ; preds = %do.body902
  %arraydecay904 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr905 = getelementptr i32, i32* %arraydecay904, i64 5, !dbg !17158
  %308 = load i32, i32* %add.ptr905, align 4, !dbg !17158
  %309 = call i1 @llvm.is.constant.i32(i32 %308), !dbg !17158
  br i1 %309, label %cond.true906, label %cond.false926, !dbg !17158

cond.true906:                                     ; preds = %do.end903
  %arraydecay907 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr908 = getelementptr i32, i32* %arraydecay907, i64 5, !dbg !17158
  %310 = load i32, i32* %add.ptr908, align 4, !dbg !17158
  %and909 = and i32 %310, 255, !dbg !17158
  %shl910 = shl i32 %and909, 24, !dbg !17158
  %arraydecay911 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr912 = getelementptr i32, i32* %arraydecay911, i64 5, !dbg !17158
  %311 = load i32, i32* %add.ptr912, align 4, !dbg !17158
  %and913 = and i32 %311, 65280, !dbg !17158
  %shl914 = shl i32 %and913, 8, !dbg !17158
  %or915 = or i32 %shl910, %shl914, !dbg !17158
  %arraydecay916 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr917 = getelementptr i32, i32* %arraydecay916, i64 5, !dbg !17158
  %312 = load i32, i32* %add.ptr917, align 4, !dbg !17158
  %and918 = and i32 %312, 16711680, !dbg !17158
  %shr919 = lshr i32 %and918, 8, !dbg !17158
  %or920 = or i32 %or915, %shr919, !dbg !17158
  %arraydecay921 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr922 = getelementptr i32, i32* %arraydecay921, i64 5, !dbg !17158
  %313 = load i32, i32* %add.ptr922, align 4, !dbg !17158
  %and923 = and i32 %313, -16777216, !dbg !17158
  %shr924 = lshr i32 %and923, 24, !dbg !17158
  %or925 = or i32 %or920, %shr924, !dbg !17158
  br label %cond.end930, !dbg !17158

cond.false926:                                    ; preds = %do.end903
  %arraydecay927 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr928 = getelementptr i32, i32* %arraydecay927, i64 5, !dbg !17158
  %314 = load i32, i32* %add.ptr928, align 4, !dbg !17158
  %call929 = call i32 @__fswab32(i32 %314) #10, !dbg !17158
  br label %cond.end930, !dbg !17158

cond.end930:                                      ; preds = %cond.false926, %cond.true906
  %cond931 = phi i32 [ %or925, %cond.true906 ], [ %call929, %cond.false926 ], !dbg !17158
  %and932 = and i32 %cond931, 0, !dbg !17158
  %315 = load i32, i32* %_v901, align 4, !dbg !17158
  %shl933 = shl i32 %315, 0, !dbg !17158
  %or934 = or i32 %and932, %shl933, !dbg !17158
  %316 = call i1 @llvm.is.constant.i32(i32 %or934), !dbg !17158
  br i1 %316, label %cond.true935, label %cond.false1071, !dbg !17158

cond.true935:                                     ; preds = %cond.end930
  %arraydecay936 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr937 = getelementptr i32, i32* %arraydecay936, i64 5, !dbg !17158
  %317 = load i32, i32* %add.ptr937, align 4, !dbg !17158
  %318 = call i1 @llvm.is.constant.i32(i32 %317), !dbg !17158
  br i1 %318, label %cond.true938, label %cond.false958, !dbg !17158

cond.true938:                                     ; preds = %cond.true935
  %arraydecay939 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr940 = getelementptr i32, i32* %arraydecay939, i64 5, !dbg !17158
  %319 = load i32, i32* %add.ptr940, align 4, !dbg !17158
  %and941 = and i32 %319, 255, !dbg !17158
  %shl942 = shl i32 %and941, 24, !dbg !17158
  %arraydecay943 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr944 = getelementptr i32, i32* %arraydecay943, i64 5, !dbg !17158
  %320 = load i32, i32* %add.ptr944, align 4, !dbg !17158
  %and945 = and i32 %320, 65280, !dbg !17158
  %shl946 = shl i32 %and945, 8, !dbg !17158
  %or947 = or i32 %shl942, %shl946, !dbg !17158
  %arraydecay948 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr949 = getelementptr i32, i32* %arraydecay948, i64 5, !dbg !17158
  %321 = load i32, i32* %add.ptr949, align 4, !dbg !17158
  %and950 = and i32 %321, 16711680, !dbg !17158
  %shr951 = lshr i32 %and950, 8, !dbg !17158
  %or952 = or i32 %or947, %shr951, !dbg !17158
  %arraydecay953 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr954 = getelementptr i32, i32* %arraydecay953, i64 5, !dbg !17158
  %322 = load i32, i32* %add.ptr954, align 4, !dbg !17158
  %and955 = and i32 %322, -16777216, !dbg !17158
  %shr956 = lshr i32 %and955, 24, !dbg !17158
  %or957 = or i32 %or952, %shr956, !dbg !17158
  br label %cond.end962, !dbg !17158

cond.false958:                                    ; preds = %cond.true935
  %arraydecay959 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr960 = getelementptr i32, i32* %arraydecay959, i64 5, !dbg !17158
  %323 = load i32, i32* %add.ptr960, align 4, !dbg !17158
  %call961 = call i32 @__fswab32(i32 %323) #10, !dbg !17158
  br label %cond.end962, !dbg !17158

cond.end962:                                      ; preds = %cond.false958, %cond.true938
  %cond963 = phi i32 [ %or957, %cond.true938 ], [ %call961, %cond.false958 ], !dbg !17158
  %and964 = and i32 %cond963, 0, !dbg !17158
  %324 = load i32, i32* %_v901, align 4, !dbg !17158
  %shl965 = shl i32 %324, 0, !dbg !17158
  %or966 = or i32 %and964, %shl965, !dbg !17158
  %and967 = and i32 %or966, 255, !dbg !17158
  %shl968 = shl i32 %and967, 24, !dbg !17158
  %arraydecay969 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr970 = getelementptr i32, i32* %arraydecay969, i64 5, !dbg !17158
  %325 = load i32, i32* %add.ptr970, align 4, !dbg !17158
  %326 = call i1 @llvm.is.constant.i32(i32 %325), !dbg !17158
  br i1 %326, label %cond.true971, label %cond.false991, !dbg !17158

cond.true971:                                     ; preds = %cond.end962
  %arraydecay972 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr973 = getelementptr i32, i32* %arraydecay972, i64 5, !dbg !17158
  %327 = load i32, i32* %add.ptr973, align 4, !dbg !17158
  %and974 = and i32 %327, 255, !dbg !17158
  %shl975 = shl i32 %and974, 24, !dbg !17158
  %arraydecay976 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr977 = getelementptr i32, i32* %arraydecay976, i64 5, !dbg !17158
  %328 = load i32, i32* %add.ptr977, align 4, !dbg !17158
  %and978 = and i32 %328, 65280, !dbg !17158
  %shl979 = shl i32 %and978, 8, !dbg !17158
  %or980 = or i32 %shl975, %shl979, !dbg !17158
  %arraydecay981 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr982 = getelementptr i32, i32* %arraydecay981, i64 5, !dbg !17158
  %329 = load i32, i32* %add.ptr982, align 4, !dbg !17158
  %and983 = and i32 %329, 16711680, !dbg !17158
  %shr984 = lshr i32 %and983, 8, !dbg !17158
  %or985 = or i32 %or980, %shr984, !dbg !17158
  %arraydecay986 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr987 = getelementptr i32, i32* %arraydecay986, i64 5, !dbg !17158
  %330 = load i32, i32* %add.ptr987, align 4, !dbg !17158
  %and988 = and i32 %330, -16777216, !dbg !17158
  %shr989 = lshr i32 %and988, 24, !dbg !17158
  %or990 = or i32 %or985, %shr989, !dbg !17158
  br label %cond.end995, !dbg !17158

cond.false991:                                    ; preds = %cond.end962
  %arraydecay992 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr993 = getelementptr i32, i32* %arraydecay992, i64 5, !dbg !17158
  %331 = load i32, i32* %add.ptr993, align 4, !dbg !17158
  %call994 = call i32 @__fswab32(i32 %331) #10, !dbg !17158
  br label %cond.end995, !dbg !17158

cond.end995:                                      ; preds = %cond.false991, %cond.true971
  %cond996 = phi i32 [ %or990, %cond.true971 ], [ %call994, %cond.false991 ], !dbg !17158
  %and997 = and i32 %cond996, 0, !dbg !17158
  %332 = load i32, i32* %_v901, align 4, !dbg !17158
  %shl998 = shl i32 %332, 0, !dbg !17158
  %or999 = or i32 %and997, %shl998, !dbg !17158
  %and1000 = and i32 %or999, 65280, !dbg !17158
  %shl1001 = shl i32 %and1000, 8, !dbg !17158
  %or1002 = or i32 %shl968, %shl1001, !dbg !17158
  %arraydecay1003 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1004 = getelementptr i32, i32* %arraydecay1003, i64 5, !dbg !17158
  %333 = load i32, i32* %add.ptr1004, align 4, !dbg !17158
  %334 = call i1 @llvm.is.constant.i32(i32 %333), !dbg !17158
  br i1 %334, label %cond.true1005, label %cond.false1025, !dbg !17158

cond.true1005:                                    ; preds = %cond.end995
  %arraydecay1006 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1007 = getelementptr i32, i32* %arraydecay1006, i64 5, !dbg !17158
  %335 = load i32, i32* %add.ptr1007, align 4, !dbg !17158
  %and1008 = and i32 %335, 255, !dbg !17158
  %shl1009 = shl i32 %and1008, 24, !dbg !17158
  %arraydecay1010 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1011 = getelementptr i32, i32* %arraydecay1010, i64 5, !dbg !17158
  %336 = load i32, i32* %add.ptr1011, align 4, !dbg !17158
  %and1012 = and i32 %336, 65280, !dbg !17158
  %shl1013 = shl i32 %and1012, 8, !dbg !17158
  %or1014 = or i32 %shl1009, %shl1013, !dbg !17158
  %arraydecay1015 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1016 = getelementptr i32, i32* %arraydecay1015, i64 5, !dbg !17158
  %337 = load i32, i32* %add.ptr1016, align 4, !dbg !17158
  %and1017 = and i32 %337, 16711680, !dbg !17158
  %shr1018 = lshr i32 %and1017, 8, !dbg !17158
  %or1019 = or i32 %or1014, %shr1018, !dbg !17158
  %arraydecay1020 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1021 = getelementptr i32, i32* %arraydecay1020, i64 5, !dbg !17158
  %338 = load i32, i32* %add.ptr1021, align 4, !dbg !17158
  %and1022 = and i32 %338, -16777216, !dbg !17158
  %shr1023 = lshr i32 %and1022, 24, !dbg !17158
  %or1024 = or i32 %or1019, %shr1023, !dbg !17158
  br label %cond.end1029, !dbg !17158

cond.false1025:                                   ; preds = %cond.end995
  %arraydecay1026 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1027 = getelementptr i32, i32* %arraydecay1026, i64 5, !dbg !17158
  %339 = load i32, i32* %add.ptr1027, align 4, !dbg !17158
  %call1028 = call i32 @__fswab32(i32 %339) #10, !dbg !17158
  br label %cond.end1029, !dbg !17158

cond.end1029:                                     ; preds = %cond.false1025, %cond.true1005
  %cond1030 = phi i32 [ %or1024, %cond.true1005 ], [ %call1028, %cond.false1025 ], !dbg !17158
  %and1031 = and i32 %cond1030, 0, !dbg !17158
  %340 = load i32, i32* %_v901, align 4, !dbg !17158
  %shl1032 = shl i32 %340, 0, !dbg !17158
  %or1033 = or i32 %and1031, %shl1032, !dbg !17158
  %and1034 = and i32 %or1033, 16711680, !dbg !17158
  %shr1035 = lshr i32 %and1034, 8, !dbg !17158
  %or1036 = or i32 %or1002, %shr1035, !dbg !17158
  %arraydecay1037 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1038 = getelementptr i32, i32* %arraydecay1037, i64 5, !dbg !17158
  %341 = load i32, i32* %add.ptr1038, align 4, !dbg !17158
  %342 = call i1 @llvm.is.constant.i32(i32 %341), !dbg !17158
  br i1 %342, label %cond.true1039, label %cond.false1059, !dbg !17158

cond.true1039:                                    ; preds = %cond.end1029
  %arraydecay1040 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1041 = getelementptr i32, i32* %arraydecay1040, i64 5, !dbg !17158
  %343 = load i32, i32* %add.ptr1041, align 4, !dbg !17158
  %and1042 = and i32 %343, 255, !dbg !17158
  %shl1043 = shl i32 %and1042, 24, !dbg !17158
  %arraydecay1044 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1045 = getelementptr i32, i32* %arraydecay1044, i64 5, !dbg !17158
  %344 = load i32, i32* %add.ptr1045, align 4, !dbg !17158
  %and1046 = and i32 %344, 65280, !dbg !17158
  %shl1047 = shl i32 %and1046, 8, !dbg !17158
  %or1048 = or i32 %shl1043, %shl1047, !dbg !17158
  %arraydecay1049 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1050 = getelementptr i32, i32* %arraydecay1049, i64 5, !dbg !17158
  %345 = load i32, i32* %add.ptr1050, align 4, !dbg !17158
  %and1051 = and i32 %345, 16711680, !dbg !17158
  %shr1052 = lshr i32 %and1051, 8, !dbg !17158
  %or1053 = or i32 %or1048, %shr1052, !dbg !17158
  %arraydecay1054 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1055 = getelementptr i32, i32* %arraydecay1054, i64 5, !dbg !17158
  %346 = load i32, i32* %add.ptr1055, align 4, !dbg !17158
  %and1056 = and i32 %346, -16777216, !dbg !17158
  %shr1057 = lshr i32 %and1056, 24, !dbg !17158
  %or1058 = or i32 %or1053, %shr1057, !dbg !17158
  br label %cond.end1063, !dbg !17158

cond.false1059:                                   ; preds = %cond.end1029
  %arraydecay1060 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1061 = getelementptr i32, i32* %arraydecay1060, i64 5, !dbg !17158
  %347 = load i32, i32* %add.ptr1061, align 4, !dbg !17158
  %call1062 = call i32 @__fswab32(i32 %347) #10, !dbg !17158
  br label %cond.end1063, !dbg !17158

cond.end1063:                                     ; preds = %cond.false1059, %cond.true1039
  %cond1064 = phi i32 [ %or1058, %cond.true1039 ], [ %call1062, %cond.false1059 ], !dbg !17158
  %and1065 = and i32 %cond1064, 0, !dbg !17158
  %348 = load i32, i32* %_v901, align 4, !dbg !17158
  %shl1066 = shl i32 %348, 0, !dbg !17158
  %or1067 = or i32 %and1065, %shl1066, !dbg !17158
  %and1068 = and i32 %or1067, -16777216, !dbg !17158
  %shr1069 = lshr i32 %and1068, 24, !dbg !17158
  %or1070 = or i32 %or1036, %shr1069, !dbg !17158
  br label %cond.end1104, !dbg !17158

cond.false1071:                                   ; preds = %cond.end930
  %arraydecay1072 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1073 = getelementptr i32, i32* %arraydecay1072, i64 5, !dbg !17158
  %349 = load i32, i32* %add.ptr1073, align 4, !dbg !17158
  %350 = call i1 @llvm.is.constant.i32(i32 %349), !dbg !17158
  br i1 %350, label %cond.true1074, label %cond.false1094, !dbg !17158

cond.true1074:                                    ; preds = %cond.false1071
  %arraydecay1075 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1076 = getelementptr i32, i32* %arraydecay1075, i64 5, !dbg !17158
  %351 = load i32, i32* %add.ptr1076, align 4, !dbg !17158
  %and1077 = and i32 %351, 255, !dbg !17158
  %shl1078 = shl i32 %and1077, 24, !dbg !17158
  %arraydecay1079 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1080 = getelementptr i32, i32* %arraydecay1079, i64 5, !dbg !17158
  %352 = load i32, i32* %add.ptr1080, align 4, !dbg !17158
  %and1081 = and i32 %352, 65280, !dbg !17158
  %shl1082 = shl i32 %and1081, 8, !dbg !17158
  %or1083 = or i32 %shl1078, %shl1082, !dbg !17158
  %arraydecay1084 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1085 = getelementptr i32, i32* %arraydecay1084, i64 5, !dbg !17158
  %353 = load i32, i32* %add.ptr1085, align 4, !dbg !17158
  %and1086 = and i32 %353, 16711680, !dbg !17158
  %shr1087 = lshr i32 %and1086, 8, !dbg !17158
  %or1088 = or i32 %or1083, %shr1087, !dbg !17158
  %arraydecay1089 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1090 = getelementptr i32, i32* %arraydecay1089, i64 5, !dbg !17158
  %354 = load i32, i32* %add.ptr1090, align 4, !dbg !17158
  %and1091 = and i32 %354, -16777216, !dbg !17158
  %shr1092 = lshr i32 %and1091, 24, !dbg !17158
  %or1093 = or i32 %or1088, %shr1092, !dbg !17158
  br label %cond.end1098, !dbg !17158

cond.false1094:                                   ; preds = %cond.false1071
  %arraydecay1095 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1096 = getelementptr i32, i32* %arraydecay1095, i64 5, !dbg !17158
  %355 = load i32, i32* %add.ptr1096, align 4, !dbg !17158
  %call1097 = call i32 @__fswab32(i32 %355) #10, !dbg !17158
  br label %cond.end1098, !dbg !17158

cond.end1098:                                     ; preds = %cond.false1094, %cond.true1074
  %cond1099 = phi i32 [ %or1093, %cond.true1074 ], [ %call1097, %cond.false1094 ], !dbg !17158
  %and1100 = and i32 %cond1099, 0, !dbg !17158
  %356 = load i32, i32* %_v901, align 4, !dbg !17158
  %shl1101 = shl i32 %356, 0, !dbg !17158
  %or1102 = or i32 %and1100, %shl1101, !dbg !17158
  %call1103 = call i32 @__fswab32(i32 %or1102) #10, !dbg !17158
  br label %cond.end1104, !dbg !17158

cond.end1104:                                     ; preds = %cond.end1098, %cond.end1063
  %cond1105 = phi i32 [ %or1070, %cond.end1063 ], [ %call1103, %cond.end1098 ], !dbg !17158
  %arraydecay1106 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17158
  %add.ptr1107 = getelementptr i32, i32* %arraydecay1106, i64 5, !dbg !17158
  store i32 %cond1105, i32* %add.ptr1107, align 4, !dbg !17158
  br label %do.end1108, !dbg !17158

do.end1108:                                       ; preds = %cond.end1104
  %357 = load i32, i32* %bitmask, align 4, !dbg !17161
  %or1109 = or i32 %357, 2, !dbg !17161
  store i32 %or1109, i32* %bitmask, align 4, !dbg !17161
  %358 = load i32, i32* %bitmask, align 4, !dbg !17162
  %or1110 = or i32 %358, 1, !dbg !17162
  store i32 %or1110, i32* %bitmask, align 4, !dbg !17162
  %359 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17163
  %arraydecay1111 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17164
  %360 = bitcast i32* %arraydecay1111 to i8*, !dbg !17164
  %361 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17165
  %qos1112 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %361, i32 0, i32 12, !dbg !17166
  %esw_tsar_ix = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos1112, i32 0, i32 1, !dbg !17167
  %362 = load i32, i32* %esw_tsar_ix, align 4, !dbg !17167
  %363 = load i32, i32* %bitmask, align 4, !dbg !17168
  %call1113 = call i32 @mlx5_modify_scheduling_element_cmd(%struct.mlx5_core_dev* %359, i8 zeroext 2, i8* %360, i32 %362, i32 %363) #8, !dbg !17169
  store i32 %call1113, i32* %err, align 4, !dbg !17170
  %364 = load i32, i32* %err, align 4, !dbg !17171
  %tobool1114 = icmp ne i32 %364, 0, !dbg !17171
  br i1 %tobool1114, label %if.then1115, label %if.end1118, !dbg !17173

if.then1115:                                      ; preds = %do.end1108
  %365 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17174
  %dev1116 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %365, i32 0, i32 0, !dbg !17174
  %366 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1116, align 8, !dbg !17174
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %366, i32 0, i32 0, !dbg !17174
  %367 = load %struct.device*, %struct.device** %device, align 8, !dbg !17174
  %368 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17174
  %vport1117 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %368, i32 0, i32 1, !dbg !17174
  %369 = load i32, i32* %vport1117, align 8, !dbg !17174
  %370 = load i32, i32* %err, align 4, !dbg !17174
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %367, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.49, i64 0, i64 0), i32 %369, i32 %370) #11, !dbg !17174
  %371 = load i32, i32* %err, align 4, !dbg !17176
  store i32 %371, i32* %retval, align 4, !dbg !17177
  br label %return, !dbg !17177

if.end1118:                                       ; preds = %do.end1108
  store i32 0, i32* %retval, align 4, !dbg !17178
  br label %return, !dbg !17178

return:                                           ; preds = %if.end1118, %if.then1115, %if.then86, %if.then
  %372 = load i32, i32* %retval, align 4, !dbg !17179
  ret i32 %372, !dbg !17179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_get_vport_stats(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num, %struct.ifla_vf_stats* %vf_stats) #0 !dbg !17180 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %vf_stats.addr = alloca %struct.ifla_vf_stats*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %outlen = alloca i32, align 4
  %in = alloca [8 x i32], align 16
  %stats = alloca %struct.mlx5_vport_drop_stats, align 8
  %err = alloca i32, align 4
  %out = alloca i32*, align 8
  %_v = alloca i32, align 4
  %_v210 = alloca i32, align 4
  %_v425 = alloca i32, align 4
  %_v641 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17183, metadata !DIExpression()), !dbg !17184
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !17185, metadata !DIExpression()), !dbg !17186
  store %struct.ifla_vf_stats* %vf_stats, %struct.ifla_vf_stats** %vf_stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifla_vf_stats** %vf_stats.addr, metadata !17187, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !17189, metadata !DIExpression()), !dbg !17190
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17191
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !17192
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !17193
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %vport, align 8, !dbg !17190
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !17194, metadata !DIExpression()), !dbg !17195
  store i32 528, i32* %outlen, align 4, !dbg !17195
  call void @llvm.dbg.declare(metadata [8 x i32]* %in, metadata !17196, metadata !DIExpression()), !dbg !17198
  %2 = bitcast [8 x i32]* %in to i8*, !dbg !17198
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 32, i1 false), !dbg !17198
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_drop_stats* %stats, metadata !17199, metadata !DIExpression()), !dbg !17204
  %3 = bitcast %struct.mlx5_vport_drop_stats* %stats to i8*, !dbg !17204
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false), !dbg !17204
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17205, metadata !DIExpression()), !dbg !17206
  store i32 0, i32* %err, align 4, !dbg !17206
  call void @llvm.dbg.declare(metadata i32** %out, metadata !17207, metadata !DIExpression()), !dbg !17208
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !17209
  %5 = bitcast %struct.mlx5_vport* %4 to i8*, !dbg !17209
  %call1 = call zeroext i1 @IS_ERR(i8* %5) #8, !dbg !17211
  br i1 %call1, label %if.then, label %if.end, !dbg !17212

if.then:                                          ; preds = %entry
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !17213
  %7 = bitcast %struct.mlx5_vport* %6 to i8*, !dbg !17213
  %call2 = call i64 @PTR_ERR(i8* %7) #8, !dbg !17214
  %conv = trunc i64 %call2 to i32, !dbg !17214
  store i32 %conv, i32* %retval, align 4, !dbg !17215
  br label %return, !dbg !17215

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %outlen, align 4, !dbg !17216
  %conv3 = sext i32 %8 to i64, !dbg !17216
  %call4 = call i8* @kvzalloc(i64 %conv3, i32 3264) #8, !dbg !17217
  %9 = bitcast i8* %call4 to i32*, !dbg !17217
  store i32* %9, i32** %out, align 8, !dbg !17218
  %10 = load i32*, i32** %out, align 8, !dbg !17219
  %tobool = icmp ne i32* %10, null, !dbg !17219
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !17221

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !17222
  br label %return, !dbg !17222

if.end6:                                          ; preds = %if.end
  br label %do.body, !dbg !17223

do.body:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !17224, metadata !DIExpression()), !dbg !17226
  store i32 1904, i32* %_v, align 4, !dbg !17226
  br label %do.body7, !dbg !17226

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !17227

do.end:                                           ; preds = %do.body7
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !17226
  %11 = load i32, i32* %add.ptr, align 4, !dbg !17226
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !17226
  br i1 %12, label %cond.true, label %cond.false, !dbg !17226

cond.true:                                        ; preds = %do.end
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 0, !dbg !17226
  %13 = load i32, i32* %add.ptr9, align 4, !dbg !17226
  %and = and i32 %13, 255, !dbg !17226
  %shl = shl i32 %and, 24, !dbg !17226
  %arraydecay10 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 0, !dbg !17226
  %14 = load i32, i32* %add.ptr11, align 4, !dbg !17226
  %and12 = and i32 %14, 65280, !dbg !17226
  %shl13 = shl i32 %and12, 8, !dbg !17226
  %or = or i32 %shl, %shl13, !dbg !17226
  %arraydecay14 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr15 = getelementptr i32, i32* %arraydecay14, i64 0, !dbg !17226
  %15 = load i32, i32* %add.ptr15, align 4, !dbg !17226
  %and16 = and i32 %15, 16711680, !dbg !17226
  %shr = lshr i32 %and16, 8, !dbg !17226
  %or17 = or i32 %or, %shr, !dbg !17226
  %arraydecay18 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr19 = getelementptr i32, i32* %arraydecay18, i64 0, !dbg !17226
  %16 = load i32, i32* %add.ptr19, align 4, !dbg !17226
  %and20 = and i32 %16, -16777216, !dbg !17226
  %shr21 = lshr i32 %and20, 24, !dbg !17226
  %or22 = or i32 %or17, %shr21, !dbg !17226
  br label %cond.end, !dbg !17226

cond.false:                                       ; preds = %do.end
  %arraydecay23 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 0, !dbg !17226
  %17 = load i32, i32* %add.ptr24, align 4, !dbg !17226
  %call25 = call i32 @__fswab32(i32 %17) #10, !dbg !17226
  br label %cond.end, !dbg !17226

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or22, %cond.true ], [ %call25, %cond.false ], !dbg !17226
  %and26 = and i32 %cond, 65535, !dbg !17226
  %18 = load i32, i32* %_v, align 4, !dbg !17226
  %and27 = and i32 %18, 65535, !dbg !17226
  %shl28 = shl i32 %and27, 16, !dbg !17226
  %or29 = or i32 %and26, %shl28, !dbg !17226
  %19 = call i1 @llvm.is.constant.i32(i32 %or29), !dbg !17226
  br i1 %19, label %cond.true30, label %cond.false170, !dbg !17226

cond.true30:                                      ; preds = %cond.end
  %arraydecay31 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !17226
  %20 = load i32, i32* %add.ptr32, align 4, !dbg !17226
  %21 = call i1 @llvm.is.constant.i32(i32 %20), !dbg !17226
  br i1 %21, label %cond.true33, label %cond.false53, !dbg !17226

cond.true33:                                      ; preds = %cond.true30
  %arraydecay34 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr35 = getelementptr i32, i32* %arraydecay34, i64 0, !dbg !17226
  %22 = load i32, i32* %add.ptr35, align 4, !dbg !17226
  %and36 = and i32 %22, 255, !dbg !17226
  %shl37 = shl i32 %and36, 24, !dbg !17226
  %arraydecay38 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 0, !dbg !17226
  %23 = load i32, i32* %add.ptr39, align 4, !dbg !17226
  %and40 = and i32 %23, 65280, !dbg !17226
  %shl41 = shl i32 %and40, 8, !dbg !17226
  %or42 = or i32 %shl37, %shl41, !dbg !17226
  %arraydecay43 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr44 = getelementptr i32, i32* %arraydecay43, i64 0, !dbg !17226
  %24 = load i32, i32* %add.ptr44, align 4, !dbg !17226
  %and45 = and i32 %24, 16711680, !dbg !17226
  %shr46 = lshr i32 %and45, 8, !dbg !17226
  %or47 = or i32 %or42, %shr46, !dbg !17226
  %arraydecay48 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr49 = getelementptr i32, i32* %arraydecay48, i64 0, !dbg !17226
  %25 = load i32, i32* %add.ptr49, align 4, !dbg !17226
  %and50 = and i32 %25, -16777216, !dbg !17226
  %shr51 = lshr i32 %and50, 24, !dbg !17226
  %or52 = or i32 %or47, %shr51, !dbg !17226
  br label %cond.end57, !dbg !17226

cond.false53:                                     ; preds = %cond.true30
  %arraydecay54 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 0, !dbg !17226
  %26 = load i32, i32* %add.ptr55, align 4, !dbg !17226
  %call56 = call i32 @__fswab32(i32 %26) #10, !dbg !17226
  br label %cond.end57, !dbg !17226

cond.end57:                                       ; preds = %cond.false53, %cond.true33
  %cond58 = phi i32 [ %or52, %cond.true33 ], [ %call56, %cond.false53 ], !dbg !17226
  %and59 = and i32 %cond58, 65535, !dbg !17226
  %27 = load i32, i32* %_v, align 4, !dbg !17226
  %and60 = and i32 %27, 65535, !dbg !17226
  %shl61 = shl i32 %and60, 16, !dbg !17226
  %or62 = or i32 %and59, %shl61, !dbg !17226
  %and63 = and i32 %or62, 255, !dbg !17226
  %shl64 = shl i32 %and63, 24, !dbg !17226
  %arraydecay65 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 0, !dbg !17226
  %28 = load i32, i32* %add.ptr66, align 4, !dbg !17226
  %29 = call i1 @llvm.is.constant.i32(i32 %28), !dbg !17226
  br i1 %29, label %cond.true67, label %cond.false87, !dbg !17226

cond.true67:                                      ; preds = %cond.end57
  %arraydecay68 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr69 = getelementptr i32, i32* %arraydecay68, i64 0, !dbg !17226
  %30 = load i32, i32* %add.ptr69, align 4, !dbg !17226
  %and70 = and i32 %30, 255, !dbg !17226
  %shl71 = shl i32 %and70, 24, !dbg !17226
  %arraydecay72 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr73 = getelementptr i32, i32* %arraydecay72, i64 0, !dbg !17226
  %31 = load i32, i32* %add.ptr73, align 4, !dbg !17226
  %and74 = and i32 %31, 65280, !dbg !17226
  %shl75 = shl i32 %and74, 8, !dbg !17226
  %or76 = or i32 %shl71, %shl75, !dbg !17226
  %arraydecay77 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !17226
  %32 = load i32, i32* %add.ptr78, align 4, !dbg !17226
  %and79 = and i32 %32, 16711680, !dbg !17226
  %shr80 = lshr i32 %and79, 8, !dbg !17226
  %or81 = or i32 %or76, %shr80, !dbg !17226
  %arraydecay82 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr83 = getelementptr i32, i32* %arraydecay82, i64 0, !dbg !17226
  %33 = load i32, i32* %add.ptr83, align 4, !dbg !17226
  %and84 = and i32 %33, -16777216, !dbg !17226
  %shr85 = lshr i32 %and84, 24, !dbg !17226
  %or86 = or i32 %or81, %shr85, !dbg !17226
  br label %cond.end91, !dbg !17226

cond.false87:                                     ; preds = %cond.end57
  %arraydecay88 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr89 = getelementptr i32, i32* %arraydecay88, i64 0, !dbg !17226
  %34 = load i32, i32* %add.ptr89, align 4, !dbg !17226
  %call90 = call i32 @__fswab32(i32 %34) #10, !dbg !17226
  br label %cond.end91, !dbg !17226

cond.end91:                                       ; preds = %cond.false87, %cond.true67
  %cond92 = phi i32 [ %or86, %cond.true67 ], [ %call90, %cond.false87 ], !dbg !17226
  %and93 = and i32 %cond92, 65535, !dbg !17226
  %35 = load i32, i32* %_v, align 4, !dbg !17226
  %and94 = and i32 %35, 65535, !dbg !17226
  %shl95 = shl i32 %and94, 16, !dbg !17226
  %or96 = or i32 %and93, %shl95, !dbg !17226
  %and97 = and i32 %or96, 65280, !dbg !17226
  %shl98 = shl i32 %and97, 8, !dbg !17226
  %or99 = or i32 %shl64, %shl98, !dbg !17226
  %arraydecay100 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !17226
  %36 = load i32, i32* %add.ptr101, align 4, !dbg !17226
  %37 = call i1 @llvm.is.constant.i32(i32 %36), !dbg !17226
  br i1 %37, label %cond.true102, label %cond.false122, !dbg !17226

cond.true102:                                     ; preds = %cond.end91
  %arraydecay103 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr104 = getelementptr i32, i32* %arraydecay103, i64 0, !dbg !17226
  %38 = load i32, i32* %add.ptr104, align 4, !dbg !17226
  %and105 = and i32 %38, 255, !dbg !17226
  %shl106 = shl i32 %and105, 24, !dbg !17226
  %arraydecay107 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr108 = getelementptr i32, i32* %arraydecay107, i64 0, !dbg !17226
  %39 = load i32, i32* %add.ptr108, align 4, !dbg !17226
  %and109 = and i32 %39, 65280, !dbg !17226
  %shl110 = shl i32 %and109, 8, !dbg !17226
  %or111 = or i32 %shl106, %shl110, !dbg !17226
  %arraydecay112 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr113 = getelementptr i32, i32* %arraydecay112, i64 0, !dbg !17226
  %40 = load i32, i32* %add.ptr113, align 4, !dbg !17226
  %and114 = and i32 %40, 16711680, !dbg !17226
  %shr115 = lshr i32 %and114, 8, !dbg !17226
  %or116 = or i32 %or111, %shr115, !dbg !17226
  %arraydecay117 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr118 = getelementptr i32, i32* %arraydecay117, i64 0, !dbg !17226
  %41 = load i32, i32* %add.ptr118, align 4, !dbg !17226
  %and119 = and i32 %41, -16777216, !dbg !17226
  %shr120 = lshr i32 %and119, 24, !dbg !17226
  %or121 = or i32 %or116, %shr120, !dbg !17226
  br label %cond.end126, !dbg !17226

cond.false122:                                    ; preds = %cond.end91
  %arraydecay123 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr124 = getelementptr i32, i32* %arraydecay123, i64 0, !dbg !17226
  %42 = load i32, i32* %add.ptr124, align 4, !dbg !17226
  %call125 = call i32 @__fswab32(i32 %42) #10, !dbg !17226
  br label %cond.end126, !dbg !17226

cond.end126:                                      ; preds = %cond.false122, %cond.true102
  %cond127 = phi i32 [ %or121, %cond.true102 ], [ %call125, %cond.false122 ], !dbg !17226
  %and128 = and i32 %cond127, 65535, !dbg !17226
  %43 = load i32, i32* %_v, align 4, !dbg !17226
  %and129 = and i32 %43, 65535, !dbg !17226
  %shl130 = shl i32 %and129, 16, !dbg !17226
  %or131 = or i32 %and128, %shl130, !dbg !17226
  %and132 = and i32 %or131, 16711680, !dbg !17226
  %shr133 = lshr i32 %and132, 8, !dbg !17226
  %or134 = or i32 %or99, %shr133, !dbg !17226
  %arraydecay135 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 0, !dbg !17226
  %44 = load i32, i32* %add.ptr136, align 4, !dbg !17226
  %45 = call i1 @llvm.is.constant.i32(i32 %44), !dbg !17226
  br i1 %45, label %cond.true137, label %cond.false157, !dbg !17226

cond.true137:                                     ; preds = %cond.end126
  %arraydecay138 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr139 = getelementptr i32, i32* %arraydecay138, i64 0, !dbg !17226
  %46 = load i32, i32* %add.ptr139, align 4, !dbg !17226
  %and140 = and i32 %46, 255, !dbg !17226
  %shl141 = shl i32 %and140, 24, !dbg !17226
  %arraydecay142 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 0, !dbg !17226
  %47 = load i32, i32* %add.ptr143, align 4, !dbg !17226
  %and144 = and i32 %47, 65280, !dbg !17226
  %shl145 = shl i32 %and144, 8, !dbg !17226
  %or146 = or i32 %shl141, %shl145, !dbg !17226
  %arraydecay147 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr148 = getelementptr i32, i32* %arraydecay147, i64 0, !dbg !17226
  %48 = load i32, i32* %add.ptr148, align 4, !dbg !17226
  %and149 = and i32 %48, 16711680, !dbg !17226
  %shr150 = lshr i32 %and149, 8, !dbg !17226
  %or151 = or i32 %or146, %shr150, !dbg !17226
  %arraydecay152 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr153 = getelementptr i32, i32* %arraydecay152, i64 0, !dbg !17226
  %49 = load i32, i32* %add.ptr153, align 4, !dbg !17226
  %and154 = and i32 %49, -16777216, !dbg !17226
  %shr155 = lshr i32 %and154, 24, !dbg !17226
  %or156 = or i32 %or151, %shr155, !dbg !17226
  br label %cond.end161, !dbg !17226

cond.false157:                                    ; preds = %cond.end126
  %arraydecay158 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr159 = getelementptr i32, i32* %arraydecay158, i64 0, !dbg !17226
  %50 = load i32, i32* %add.ptr159, align 4, !dbg !17226
  %call160 = call i32 @__fswab32(i32 %50) #10, !dbg !17226
  br label %cond.end161, !dbg !17226

cond.end161:                                      ; preds = %cond.false157, %cond.true137
  %cond162 = phi i32 [ %or156, %cond.true137 ], [ %call160, %cond.false157 ], !dbg !17226
  %and163 = and i32 %cond162, 65535, !dbg !17226
  %51 = load i32, i32* %_v, align 4, !dbg !17226
  %and164 = and i32 %51, 65535, !dbg !17226
  %shl165 = shl i32 %and164, 16, !dbg !17226
  %or166 = or i32 %and163, %shl165, !dbg !17226
  %and167 = and i32 %or166, -16777216, !dbg !17226
  %shr168 = lshr i32 %and167, 24, !dbg !17226
  %or169 = or i32 %or134, %shr168, !dbg !17226
  br label %cond.end204, !dbg !17226

cond.false170:                                    ; preds = %cond.end
  %arraydecay171 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !17226
  %52 = load i32, i32* %add.ptr172, align 4, !dbg !17226
  %53 = call i1 @llvm.is.constant.i32(i32 %52), !dbg !17226
  br i1 %53, label %cond.true173, label %cond.false193, !dbg !17226

cond.true173:                                     ; preds = %cond.false170
  %arraydecay174 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr175 = getelementptr i32, i32* %arraydecay174, i64 0, !dbg !17226
  %54 = load i32, i32* %add.ptr175, align 4, !dbg !17226
  %and176 = and i32 %54, 255, !dbg !17226
  %shl177 = shl i32 %and176, 24, !dbg !17226
  %arraydecay178 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr179 = getelementptr i32, i32* %arraydecay178, i64 0, !dbg !17226
  %55 = load i32, i32* %add.ptr179, align 4, !dbg !17226
  %and180 = and i32 %55, 65280, !dbg !17226
  %shl181 = shl i32 %and180, 8, !dbg !17226
  %or182 = or i32 %shl177, %shl181, !dbg !17226
  %arraydecay183 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr184 = getelementptr i32, i32* %arraydecay183, i64 0, !dbg !17226
  %56 = load i32, i32* %add.ptr184, align 4, !dbg !17226
  %and185 = and i32 %56, 16711680, !dbg !17226
  %shr186 = lshr i32 %and185, 8, !dbg !17226
  %or187 = or i32 %or182, %shr186, !dbg !17226
  %arraydecay188 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr189 = getelementptr i32, i32* %arraydecay188, i64 0, !dbg !17226
  %57 = load i32, i32* %add.ptr189, align 4, !dbg !17226
  %and190 = and i32 %57, -16777216, !dbg !17226
  %shr191 = lshr i32 %and190, 24, !dbg !17226
  %or192 = or i32 %or187, %shr191, !dbg !17226
  br label %cond.end197, !dbg !17226

cond.false193:                                    ; preds = %cond.false170
  %arraydecay194 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr195 = getelementptr i32, i32* %arraydecay194, i64 0, !dbg !17226
  %58 = load i32, i32* %add.ptr195, align 4, !dbg !17226
  %call196 = call i32 @__fswab32(i32 %58) #10, !dbg !17226
  br label %cond.end197, !dbg !17226

cond.end197:                                      ; preds = %cond.false193, %cond.true173
  %cond198 = phi i32 [ %or192, %cond.true173 ], [ %call196, %cond.false193 ], !dbg !17226
  %and199 = and i32 %cond198, 65535, !dbg !17226
  %59 = load i32, i32* %_v, align 4, !dbg !17226
  %and200 = and i32 %59, 65535, !dbg !17226
  %shl201 = shl i32 %and200, 16, !dbg !17226
  %or202 = or i32 %and199, %shl201, !dbg !17226
  %call203 = call i32 @__fswab32(i32 %or202) #10, !dbg !17226
  br label %cond.end204, !dbg !17226

cond.end204:                                      ; preds = %cond.end197, %cond.end161
  %cond205 = phi i32 [ %or169, %cond.end161 ], [ %call203, %cond.end197 ], !dbg !17226
  %arraydecay206 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17226
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 0, !dbg !17226
  store i32 %cond205, i32* %add.ptr207, align 4, !dbg !17226
  br label %do.end208, !dbg !17226

do.end208:                                        ; preds = %cond.end204
  br label %do.body209, !dbg !17229

do.body209:                                       ; preds = %do.end208
  call void @llvm.dbg.declare(metadata i32* %_v210, metadata !17230, metadata !DIExpression()), !dbg !17232
  store i32 0, i32* %_v210, align 4, !dbg !17232
  br label %do.body211, !dbg !17232

do.body211:                                       ; preds = %do.body209
  br label %do.end212, !dbg !17233

do.end212:                                        ; preds = %do.body211
  %arraydecay213 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 1, !dbg !17232
  %60 = load i32, i32* %add.ptr214, align 4, !dbg !17232
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !17232
  br i1 %61, label %cond.true215, label %cond.false235, !dbg !17232

cond.true215:                                     ; preds = %do.end212
  %arraydecay216 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr217 = getelementptr i32, i32* %arraydecay216, i64 1, !dbg !17232
  %62 = load i32, i32* %add.ptr217, align 4, !dbg !17232
  %and218 = and i32 %62, 255, !dbg !17232
  %shl219 = shl i32 %and218, 24, !dbg !17232
  %arraydecay220 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr221 = getelementptr i32, i32* %arraydecay220, i64 1, !dbg !17232
  %63 = load i32, i32* %add.ptr221, align 4, !dbg !17232
  %and222 = and i32 %63, 65280, !dbg !17232
  %shl223 = shl i32 %and222, 8, !dbg !17232
  %or224 = or i32 %shl219, %shl223, !dbg !17232
  %arraydecay225 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr226 = getelementptr i32, i32* %arraydecay225, i64 1, !dbg !17232
  %64 = load i32, i32* %add.ptr226, align 4, !dbg !17232
  %and227 = and i32 %64, 16711680, !dbg !17232
  %shr228 = lshr i32 %and227, 8, !dbg !17232
  %or229 = or i32 %or224, %shr228, !dbg !17232
  %arraydecay230 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr231 = getelementptr i32, i32* %arraydecay230, i64 1, !dbg !17232
  %65 = load i32, i32* %add.ptr231, align 4, !dbg !17232
  %and232 = and i32 %65, -16777216, !dbg !17232
  %shr233 = lshr i32 %and232, 24, !dbg !17232
  %or234 = or i32 %or229, %shr233, !dbg !17232
  br label %cond.end239, !dbg !17232

cond.false235:                                    ; preds = %do.end212
  %arraydecay236 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr237 = getelementptr i32, i32* %arraydecay236, i64 1, !dbg !17232
  %66 = load i32, i32* %add.ptr237, align 4, !dbg !17232
  %call238 = call i32 @__fswab32(i32 %66) #10, !dbg !17232
  br label %cond.end239, !dbg !17232

cond.end239:                                      ; preds = %cond.false235, %cond.true215
  %cond240 = phi i32 [ %or234, %cond.true215 ], [ %call238, %cond.false235 ], !dbg !17232
  %and241 = and i32 %cond240, -65536, !dbg !17232
  %67 = load i32, i32* %_v210, align 4, !dbg !17232
  %and242 = and i32 %67, 65535, !dbg !17232
  %shl243 = shl i32 %and242, 0, !dbg !17232
  %or244 = or i32 %and241, %shl243, !dbg !17232
  %68 = call i1 @llvm.is.constant.i32(i32 %or244), !dbg !17232
  br i1 %68, label %cond.true245, label %cond.false385, !dbg !17232

cond.true245:                                     ; preds = %cond.end239
  %arraydecay246 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 1, !dbg !17232
  %69 = load i32, i32* %add.ptr247, align 4, !dbg !17232
  %70 = call i1 @llvm.is.constant.i32(i32 %69), !dbg !17232
  br i1 %70, label %cond.true248, label %cond.false268, !dbg !17232

cond.true248:                                     ; preds = %cond.true245
  %arraydecay249 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr250 = getelementptr i32, i32* %arraydecay249, i64 1, !dbg !17232
  %71 = load i32, i32* %add.ptr250, align 4, !dbg !17232
  %and251 = and i32 %71, 255, !dbg !17232
  %shl252 = shl i32 %and251, 24, !dbg !17232
  %arraydecay253 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr254 = getelementptr i32, i32* %arraydecay253, i64 1, !dbg !17232
  %72 = load i32, i32* %add.ptr254, align 4, !dbg !17232
  %and255 = and i32 %72, 65280, !dbg !17232
  %shl256 = shl i32 %and255, 8, !dbg !17232
  %or257 = or i32 %shl252, %shl256, !dbg !17232
  %arraydecay258 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr259 = getelementptr i32, i32* %arraydecay258, i64 1, !dbg !17232
  %73 = load i32, i32* %add.ptr259, align 4, !dbg !17232
  %and260 = and i32 %73, 16711680, !dbg !17232
  %shr261 = lshr i32 %and260, 8, !dbg !17232
  %or262 = or i32 %or257, %shr261, !dbg !17232
  %arraydecay263 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr264 = getelementptr i32, i32* %arraydecay263, i64 1, !dbg !17232
  %74 = load i32, i32* %add.ptr264, align 4, !dbg !17232
  %and265 = and i32 %74, -16777216, !dbg !17232
  %shr266 = lshr i32 %and265, 24, !dbg !17232
  %or267 = or i32 %or262, %shr266, !dbg !17232
  br label %cond.end272, !dbg !17232

cond.false268:                                    ; preds = %cond.true245
  %arraydecay269 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr270 = getelementptr i32, i32* %arraydecay269, i64 1, !dbg !17232
  %75 = load i32, i32* %add.ptr270, align 4, !dbg !17232
  %call271 = call i32 @__fswab32(i32 %75) #10, !dbg !17232
  br label %cond.end272, !dbg !17232

cond.end272:                                      ; preds = %cond.false268, %cond.true248
  %cond273 = phi i32 [ %or267, %cond.true248 ], [ %call271, %cond.false268 ], !dbg !17232
  %and274 = and i32 %cond273, -65536, !dbg !17232
  %76 = load i32, i32* %_v210, align 4, !dbg !17232
  %and275 = and i32 %76, 65535, !dbg !17232
  %shl276 = shl i32 %and275, 0, !dbg !17232
  %or277 = or i32 %and274, %shl276, !dbg !17232
  %and278 = and i32 %or277, 255, !dbg !17232
  %shl279 = shl i32 %and278, 24, !dbg !17232
  %arraydecay280 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 1, !dbg !17232
  %77 = load i32, i32* %add.ptr281, align 4, !dbg !17232
  %78 = call i1 @llvm.is.constant.i32(i32 %77), !dbg !17232
  br i1 %78, label %cond.true282, label %cond.false302, !dbg !17232

cond.true282:                                     ; preds = %cond.end272
  %arraydecay283 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr284 = getelementptr i32, i32* %arraydecay283, i64 1, !dbg !17232
  %79 = load i32, i32* %add.ptr284, align 4, !dbg !17232
  %and285 = and i32 %79, 255, !dbg !17232
  %shl286 = shl i32 %and285, 24, !dbg !17232
  %arraydecay287 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr288 = getelementptr i32, i32* %arraydecay287, i64 1, !dbg !17232
  %80 = load i32, i32* %add.ptr288, align 4, !dbg !17232
  %and289 = and i32 %80, 65280, !dbg !17232
  %shl290 = shl i32 %and289, 8, !dbg !17232
  %or291 = or i32 %shl286, %shl290, !dbg !17232
  %arraydecay292 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr293 = getelementptr i32, i32* %arraydecay292, i64 1, !dbg !17232
  %81 = load i32, i32* %add.ptr293, align 4, !dbg !17232
  %and294 = and i32 %81, 16711680, !dbg !17232
  %shr295 = lshr i32 %and294, 8, !dbg !17232
  %or296 = or i32 %or291, %shr295, !dbg !17232
  %arraydecay297 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr298 = getelementptr i32, i32* %arraydecay297, i64 1, !dbg !17232
  %82 = load i32, i32* %add.ptr298, align 4, !dbg !17232
  %and299 = and i32 %82, -16777216, !dbg !17232
  %shr300 = lshr i32 %and299, 24, !dbg !17232
  %or301 = or i32 %or296, %shr300, !dbg !17232
  br label %cond.end306, !dbg !17232

cond.false302:                                    ; preds = %cond.end272
  %arraydecay303 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr304 = getelementptr i32, i32* %arraydecay303, i64 1, !dbg !17232
  %83 = load i32, i32* %add.ptr304, align 4, !dbg !17232
  %call305 = call i32 @__fswab32(i32 %83) #10, !dbg !17232
  br label %cond.end306, !dbg !17232

cond.end306:                                      ; preds = %cond.false302, %cond.true282
  %cond307 = phi i32 [ %or301, %cond.true282 ], [ %call305, %cond.false302 ], !dbg !17232
  %and308 = and i32 %cond307, -65536, !dbg !17232
  %84 = load i32, i32* %_v210, align 4, !dbg !17232
  %and309 = and i32 %84, 65535, !dbg !17232
  %shl310 = shl i32 %and309, 0, !dbg !17232
  %or311 = or i32 %and308, %shl310, !dbg !17232
  %and312 = and i32 %or311, 65280, !dbg !17232
  %shl313 = shl i32 %and312, 8, !dbg !17232
  %or314 = or i32 %shl279, %shl313, !dbg !17232
  %arraydecay315 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 1, !dbg !17232
  %85 = load i32, i32* %add.ptr316, align 4, !dbg !17232
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !17232
  br i1 %86, label %cond.true317, label %cond.false337, !dbg !17232

cond.true317:                                     ; preds = %cond.end306
  %arraydecay318 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr319 = getelementptr i32, i32* %arraydecay318, i64 1, !dbg !17232
  %87 = load i32, i32* %add.ptr319, align 4, !dbg !17232
  %and320 = and i32 %87, 255, !dbg !17232
  %shl321 = shl i32 %and320, 24, !dbg !17232
  %arraydecay322 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr323 = getelementptr i32, i32* %arraydecay322, i64 1, !dbg !17232
  %88 = load i32, i32* %add.ptr323, align 4, !dbg !17232
  %and324 = and i32 %88, 65280, !dbg !17232
  %shl325 = shl i32 %and324, 8, !dbg !17232
  %or326 = or i32 %shl321, %shl325, !dbg !17232
  %arraydecay327 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr328 = getelementptr i32, i32* %arraydecay327, i64 1, !dbg !17232
  %89 = load i32, i32* %add.ptr328, align 4, !dbg !17232
  %and329 = and i32 %89, 16711680, !dbg !17232
  %shr330 = lshr i32 %and329, 8, !dbg !17232
  %or331 = or i32 %or326, %shr330, !dbg !17232
  %arraydecay332 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr333 = getelementptr i32, i32* %arraydecay332, i64 1, !dbg !17232
  %90 = load i32, i32* %add.ptr333, align 4, !dbg !17232
  %and334 = and i32 %90, -16777216, !dbg !17232
  %shr335 = lshr i32 %and334, 24, !dbg !17232
  %or336 = or i32 %or331, %shr335, !dbg !17232
  br label %cond.end341, !dbg !17232

cond.false337:                                    ; preds = %cond.end306
  %arraydecay338 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr339 = getelementptr i32, i32* %arraydecay338, i64 1, !dbg !17232
  %91 = load i32, i32* %add.ptr339, align 4, !dbg !17232
  %call340 = call i32 @__fswab32(i32 %91) #10, !dbg !17232
  br label %cond.end341, !dbg !17232

cond.end341:                                      ; preds = %cond.false337, %cond.true317
  %cond342 = phi i32 [ %or336, %cond.true317 ], [ %call340, %cond.false337 ], !dbg !17232
  %and343 = and i32 %cond342, -65536, !dbg !17232
  %92 = load i32, i32* %_v210, align 4, !dbg !17232
  %and344 = and i32 %92, 65535, !dbg !17232
  %shl345 = shl i32 %and344, 0, !dbg !17232
  %or346 = or i32 %and343, %shl345, !dbg !17232
  %and347 = and i32 %or346, 16711680, !dbg !17232
  %shr348 = lshr i32 %and347, 8, !dbg !17232
  %or349 = or i32 %or314, %shr348, !dbg !17232
  %arraydecay350 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr351 = getelementptr i32, i32* %arraydecay350, i64 1, !dbg !17232
  %93 = load i32, i32* %add.ptr351, align 4, !dbg !17232
  %94 = call i1 @llvm.is.constant.i32(i32 %93), !dbg !17232
  br i1 %94, label %cond.true352, label %cond.false372, !dbg !17232

cond.true352:                                     ; preds = %cond.end341
  %arraydecay353 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr354 = getelementptr i32, i32* %arraydecay353, i64 1, !dbg !17232
  %95 = load i32, i32* %add.ptr354, align 4, !dbg !17232
  %and355 = and i32 %95, 255, !dbg !17232
  %shl356 = shl i32 %and355, 24, !dbg !17232
  %arraydecay357 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr358 = getelementptr i32, i32* %arraydecay357, i64 1, !dbg !17232
  %96 = load i32, i32* %add.ptr358, align 4, !dbg !17232
  %and359 = and i32 %96, 65280, !dbg !17232
  %shl360 = shl i32 %and359, 8, !dbg !17232
  %or361 = or i32 %shl356, %shl360, !dbg !17232
  %arraydecay362 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr363 = getelementptr i32, i32* %arraydecay362, i64 1, !dbg !17232
  %97 = load i32, i32* %add.ptr363, align 4, !dbg !17232
  %and364 = and i32 %97, 16711680, !dbg !17232
  %shr365 = lshr i32 %and364, 8, !dbg !17232
  %or366 = or i32 %or361, %shr365, !dbg !17232
  %arraydecay367 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr368 = getelementptr i32, i32* %arraydecay367, i64 1, !dbg !17232
  %98 = load i32, i32* %add.ptr368, align 4, !dbg !17232
  %and369 = and i32 %98, -16777216, !dbg !17232
  %shr370 = lshr i32 %and369, 24, !dbg !17232
  %or371 = or i32 %or366, %shr370, !dbg !17232
  br label %cond.end376, !dbg !17232

cond.false372:                                    ; preds = %cond.end341
  %arraydecay373 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr374 = getelementptr i32, i32* %arraydecay373, i64 1, !dbg !17232
  %99 = load i32, i32* %add.ptr374, align 4, !dbg !17232
  %call375 = call i32 @__fswab32(i32 %99) #10, !dbg !17232
  br label %cond.end376, !dbg !17232

cond.end376:                                      ; preds = %cond.false372, %cond.true352
  %cond377 = phi i32 [ %or371, %cond.true352 ], [ %call375, %cond.false372 ], !dbg !17232
  %and378 = and i32 %cond377, -65536, !dbg !17232
  %100 = load i32, i32* %_v210, align 4, !dbg !17232
  %and379 = and i32 %100, 65535, !dbg !17232
  %shl380 = shl i32 %and379, 0, !dbg !17232
  %or381 = or i32 %and378, %shl380, !dbg !17232
  %and382 = and i32 %or381, -16777216, !dbg !17232
  %shr383 = lshr i32 %and382, 24, !dbg !17232
  %or384 = or i32 %or349, %shr383, !dbg !17232
  br label %cond.end419, !dbg !17232

cond.false385:                                    ; preds = %cond.end239
  %arraydecay386 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 1, !dbg !17232
  %101 = load i32, i32* %add.ptr387, align 4, !dbg !17232
  %102 = call i1 @llvm.is.constant.i32(i32 %101), !dbg !17232
  br i1 %102, label %cond.true388, label %cond.false408, !dbg !17232

cond.true388:                                     ; preds = %cond.false385
  %arraydecay389 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr390 = getelementptr i32, i32* %arraydecay389, i64 1, !dbg !17232
  %103 = load i32, i32* %add.ptr390, align 4, !dbg !17232
  %and391 = and i32 %103, 255, !dbg !17232
  %shl392 = shl i32 %and391, 24, !dbg !17232
  %arraydecay393 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr394 = getelementptr i32, i32* %arraydecay393, i64 1, !dbg !17232
  %104 = load i32, i32* %add.ptr394, align 4, !dbg !17232
  %and395 = and i32 %104, 65280, !dbg !17232
  %shl396 = shl i32 %and395, 8, !dbg !17232
  %or397 = or i32 %shl392, %shl396, !dbg !17232
  %arraydecay398 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr399 = getelementptr i32, i32* %arraydecay398, i64 1, !dbg !17232
  %105 = load i32, i32* %add.ptr399, align 4, !dbg !17232
  %and400 = and i32 %105, 16711680, !dbg !17232
  %shr401 = lshr i32 %and400, 8, !dbg !17232
  %or402 = or i32 %or397, %shr401, !dbg !17232
  %arraydecay403 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr404 = getelementptr i32, i32* %arraydecay403, i64 1, !dbg !17232
  %106 = load i32, i32* %add.ptr404, align 4, !dbg !17232
  %and405 = and i32 %106, -16777216, !dbg !17232
  %shr406 = lshr i32 %and405, 24, !dbg !17232
  %or407 = or i32 %or402, %shr406, !dbg !17232
  br label %cond.end412, !dbg !17232

cond.false408:                                    ; preds = %cond.false385
  %arraydecay409 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr410 = getelementptr i32, i32* %arraydecay409, i64 1, !dbg !17232
  %107 = load i32, i32* %add.ptr410, align 4, !dbg !17232
  %call411 = call i32 @__fswab32(i32 %107) #10, !dbg !17232
  br label %cond.end412, !dbg !17232

cond.end412:                                      ; preds = %cond.false408, %cond.true388
  %cond413 = phi i32 [ %or407, %cond.true388 ], [ %call411, %cond.false408 ], !dbg !17232
  %and414 = and i32 %cond413, -65536, !dbg !17232
  %108 = load i32, i32* %_v210, align 4, !dbg !17232
  %and415 = and i32 %108, 65535, !dbg !17232
  %shl416 = shl i32 %and415, 0, !dbg !17232
  %or417 = or i32 %and414, %shl416, !dbg !17232
  %call418 = call i32 @__fswab32(i32 %or417) #10, !dbg !17232
  br label %cond.end419, !dbg !17232

cond.end419:                                      ; preds = %cond.end412, %cond.end376
  %cond420 = phi i32 [ %or384, %cond.end376 ], [ %call418, %cond.end412 ], !dbg !17232
  %arraydecay421 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17232
  %add.ptr422 = getelementptr i32, i32* %arraydecay421, i64 1, !dbg !17232
  store i32 %cond420, i32* %add.ptr422, align 4, !dbg !17232
  br label %do.end423, !dbg !17232

do.end423:                                        ; preds = %cond.end419
  br label %do.body424, !dbg !17235

do.body424:                                       ; preds = %do.end423
  call void @llvm.dbg.declare(metadata i32* %_v425, metadata !17236, metadata !DIExpression()), !dbg !17238
  %109 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !17238
  %vport426 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %109, i32 0, i32 1, !dbg !17238
  %110 = load i32, i32* %vport426, align 8, !dbg !17238
  store i32 %110, i32* %_v425, align 4, !dbg !17238
  br label %do.body427, !dbg !17238

do.body427:                                       ; preds = %do.body424
  br label %do.end428, !dbg !17239

do.end428:                                        ; preds = %do.body427
  %arraydecay429 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr430 = getelementptr i32, i32* %arraydecay429, i64 2, !dbg !17238
  %111 = load i32, i32* %add.ptr430, align 4, !dbg !17238
  %112 = call i1 @llvm.is.constant.i32(i32 %111), !dbg !17238
  br i1 %112, label %cond.true431, label %cond.false451, !dbg !17238

cond.true431:                                     ; preds = %do.end428
  %arraydecay432 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr433 = getelementptr i32, i32* %arraydecay432, i64 2, !dbg !17238
  %113 = load i32, i32* %add.ptr433, align 4, !dbg !17238
  %and434 = and i32 %113, 255, !dbg !17238
  %shl435 = shl i32 %and434, 24, !dbg !17238
  %arraydecay436 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr437 = getelementptr i32, i32* %arraydecay436, i64 2, !dbg !17238
  %114 = load i32, i32* %add.ptr437, align 4, !dbg !17238
  %and438 = and i32 %114, 65280, !dbg !17238
  %shl439 = shl i32 %and438, 8, !dbg !17238
  %or440 = or i32 %shl435, %shl439, !dbg !17238
  %arraydecay441 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr442 = getelementptr i32, i32* %arraydecay441, i64 2, !dbg !17238
  %115 = load i32, i32* %add.ptr442, align 4, !dbg !17238
  %and443 = and i32 %115, 16711680, !dbg !17238
  %shr444 = lshr i32 %and443, 8, !dbg !17238
  %or445 = or i32 %or440, %shr444, !dbg !17238
  %arraydecay446 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr447 = getelementptr i32, i32* %arraydecay446, i64 2, !dbg !17238
  %116 = load i32, i32* %add.ptr447, align 4, !dbg !17238
  %and448 = and i32 %116, -16777216, !dbg !17238
  %shr449 = lshr i32 %and448, 24, !dbg !17238
  %or450 = or i32 %or445, %shr449, !dbg !17238
  br label %cond.end455, !dbg !17238

cond.false451:                                    ; preds = %do.end428
  %arraydecay452 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr453 = getelementptr i32, i32* %arraydecay452, i64 2, !dbg !17238
  %117 = load i32, i32* %add.ptr453, align 4, !dbg !17238
  %call454 = call i32 @__fswab32(i32 %117) #10, !dbg !17238
  br label %cond.end455, !dbg !17238

cond.end455:                                      ; preds = %cond.false451, %cond.true431
  %cond456 = phi i32 [ %or450, %cond.true431 ], [ %call454, %cond.false451 ], !dbg !17238
  %and457 = and i32 %cond456, -65536, !dbg !17238
  %118 = load i32, i32* %_v425, align 4, !dbg !17238
  %and458 = and i32 %118, 65535, !dbg !17238
  %shl459 = shl i32 %and458, 0, !dbg !17238
  %or460 = or i32 %and457, %shl459, !dbg !17238
  %119 = call i1 @llvm.is.constant.i32(i32 %or460), !dbg !17238
  br i1 %119, label %cond.true461, label %cond.false601, !dbg !17238

cond.true461:                                     ; preds = %cond.end455
  %arraydecay462 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr463 = getelementptr i32, i32* %arraydecay462, i64 2, !dbg !17238
  %120 = load i32, i32* %add.ptr463, align 4, !dbg !17238
  %121 = call i1 @llvm.is.constant.i32(i32 %120), !dbg !17238
  br i1 %121, label %cond.true464, label %cond.false484, !dbg !17238

cond.true464:                                     ; preds = %cond.true461
  %arraydecay465 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr466 = getelementptr i32, i32* %arraydecay465, i64 2, !dbg !17238
  %122 = load i32, i32* %add.ptr466, align 4, !dbg !17238
  %and467 = and i32 %122, 255, !dbg !17238
  %shl468 = shl i32 %and467, 24, !dbg !17238
  %arraydecay469 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr470 = getelementptr i32, i32* %arraydecay469, i64 2, !dbg !17238
  %123 = load i32, i32* %add.ptr470, align 4, !dbg !17238
  %and471 = and i32 %123, 65280, !dbg !17238
  %shl472 = shl i32 %and471, 8, !dbg !17238
  %or473 = or i32 %shl468, %shl472, !dbg !17238
  %arraydecay474 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr475 = getelementptr i32, i32* %arraydecay474, i64 2, !dbg !17238
  %124 = load i32, i32* %add.ptr475, align 4, !dbg !17238
  %and476 = and i32 %124, 16711680, !dbg !17238
  %shr477 = lshr i32 %and476, 8, !dbg !17238
  %or478 = or i32 %or473, %shr477, !dbg !17238
  %arraydecay479 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr480 = getelementptr i32, i32* %arraydecay479, i64 2, !dbg !17238
  %125 = load i32, i32* %add.ptr480, align 4, !dbg !17238
  %and481 = and i32 %125, -16777216, !dbg !17238
  %shr482 = lshr i32 %and481, 24, !dbg !17238
  %or483 = or i32 %or478, %shr482, !dbg !17238
  br label %cond.end488, !dbg !17238

cond.false484:                                    ; preds = %cond.true461
  %arraydecay485 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr486 = getelementptr i32, i32* %arraydecay485, i64 2, !dbg !17238
  %126 = load i32, i32* %add.ptr486, align 4, !dbg !17238
  %call487 = call i32 @__fswab32(i32 %126) #10, !dbg !17238
  br label %cond.end488, !dbg !17238

cond.end488:                                      ; preds = %cond.false484, %cond.true464
  %cond489 = phi i32 [ %or483, %cond.true464 ], [ %call487, %cond.false484 ], !dbg !17238
  %and490 = and i32 %cond489, -65536, !dbg !17238
  %127 = load i32, i32* %_v425, align 4, !dbg !17238
  %and491 = and i32 %127, 65535, !dbg !17238
  %shl492 = shl i32 %and491, 0, !dbg !17238
  %or493 = or i32 %and490, %shl492, !dbg !17238
  %and494 = and i32 %or493, 255, !dbg !17238
  %shl495 = shl i32 %and494, 24, !dbg !17238
  %arraydecay496 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr497 = getelementptr i32, i32* %arraydecay496, i64 2, !dbg !17238
  %128 = load i32, i32* %add.ptr497, align 4, !dbg !17238
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !17238
  br i1 %129, label %cond.true498, label %cond.false518, !dbg !17238

cond.true498:                                     ; preds = %cond.end488
  %arraydecay499 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr500 = getelementptr i32, i32* %arraydecay499, i64 2, !dbg !17238
  %130 = load i32, i32* %add.ptr500, align 4, !dbg !17238
  %and501 = and i32 %130, 255, !dbg !17238
  %shl502 = shl i32 %and501, 24, !dbg !17238
  %arraydecay503 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr504 = getelementptr i32, i32* %arraydecay503, i64 2, !dbg !17238
  %131 = load i32, i32* %add.ptr504, align 4, !dbg !17238
  %and505 = and i32 %131, 65280, !dbg !17238
  %shl506 = shl i32 %and505, 8, !dbg !17238
  %or507 = or i32 %shl502, %shl506, !dbg !17238
  %arraydecay508 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr509 = getelementptr i32, i32* %arraydecay508, i64 2, !dbg !17238
  %132 = load i32, i32* %add.ptr509, align 4, !dbg !17238
  %and510 = and i32 %132, 16711680, !dbg !17238
  %shr511 = lshr i32 %and510, 8, !dbg !17238
  %or512 = or i32 %or507, %shr511, !dbg !17238
  %arraydecay513 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr514 = getelementptr i32, i32* %arraydecay513, i64 2, !dbg !17238
  %133 = load i32, i32* %add.ptr514, align 4, !dbg !17238
  %and515 = and i32 %133, -16777216, !dbg !17238
  %shr516 = lshr i32 %and515, 24, !dbg !17238
  %or517 = or i32 %or512, %shr516, !dbg !17238
  br label %cond.end522, !dbg !17238

cond.false518:                                    ; preds = %cond.end488
  %arraydecay519 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr520 = getelementptr i32, i32* %arraydecay519, i64 2, !dbg !17238
  %134 = load i32, i32* %add.ptr520, align 4, !dbg !17238
  %call521 = call i32 @__fswab32(i32 %134) #10, !dbg !17238
  br label %cond.end522, !dbg !17238

cond.end522:                                      ; preds = %cond.false518, %cond.true498
  %cond523 = phi i32 [ %or517, %cond.true498 ], [ %call521, %cond.false518 ], !dbg !17238
  %and524 = and i32 %cond523, -65536, !dbg !17238
  %135 = load i32, i32* %_v425, align 4, !dbg !17238
  %and525 = and i32 %135, 65535, !dbg !17238
  %shl526 = shl i32 %and525, 0, !dbg !17238
  %or527 = or i32 %and524, %shl526, !dbg !17238
  %and528 = and i32 %or527, 65280, !dbg !17238
  %shl529 = shl i32 %and528, 8, !dbg !17238
  %or530 = or i32 %shl495, %shl529, !dbg !17238
  %arraydecay531 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr532 = getelementptr i32, i32* %arraydecay531, i64 2, !dbg !17238
  %136 = load i32, i32* %add.ptr532, align 4, !dbg !17238
  %137 = call i1 @llvm.is.constant.i32(i32 %136), !dbg !17238
  br i1 %137, label %cond.true533, label %cond.false553, !dbg !17238

cond.true533:                                     ; preds = %cond.end522
  %arraydecay534 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr535 = getelementptr i32, i32* %arraydecay534, i64 2, !dbg !17238
  %138 = load i32, i32* %add.ptr535, align 4, !dbg !17238
  %and536 = and i32 %138, 255, !dbg !17238
  %shl537 = shl i32 %and536, 24, !dbg !17238
  %arraydecay538 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr539 = getelementptr i32, i32* %arraydecay538, i64 2, !dbg !17238
  %139 = load i32, i32* %add.ptr539, align 4, !dbg !17238
  %and540 = and i32 %139, 65280, !dbg !17238
  %shl541 = shl i32 %and540, 8, !dbg !17238
  %or542 = or i32 %shl537, %shl541, !dbg !17238
  %arraydecay543 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr544 = getelementptr i32, i32* %arraydecay543, i64 2, !dbg !17238
  %140 = load i32, i32* %add.ptr544, align 4, !dbg !17238
  %and545 = and i32 %140, 16711680, !dbg !17238
  %shr546 = lshr i32 %and545, 8, !dbg !17238
  %or547 = or i32 %or542, %shr546, !dbg !17238
  %arraydecay548 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr549 = getelementptr i32, i32* %arraydecay548, i64 2, !dbg !17238
  %141 = load i32, i32* %add.ptr549, align 4, !dbg !17238
  %and550 = and i32 %141, -16777216, !dbg !17238
  %shr551 = lshr i32 %and550, 24, !dbg !17238
  %or552 = or i32 %or547, %shr551, !dbg !17238
  br label %cond.end557, !dbg !17238

cond.false553:                                    ; preds = %cond.end522
  %arraydecay554 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr555 = getelementptr i32, i32* %arraydecay554, i64 2, !dbg !17238
  %142 = load i32, i32* %add.ptr555, align 4, !dbg !17238
  %call556 = call i32 @__fswab32(i32 %142) #10, !dbg !17238
  br label %cond.end557, !dbg !17238

cond.end557:                                      ; preds = %cond.false553, %cond.true533
  %cond558 = phi i32 [ %or552, %cond.true533 ], [ %call556, %cond.false553 ], !dbg !17238
  %and559 = and i32 %cond558, -65536, !dbg !17238
  %143 = load i32, i32* %_v425, align 4, !dbg !17238
  %and560 = and i32 %143, 65535, !dbg !17238
  %shl561 = shl i32 %and560, 0, !dbg !17238
  %or562 = or i32 %and559, %shl561, !dbg !17238
  %and563 = and i32 %or562, 16711680, !dbg !17238
  %shr564 = lshr i32 %and563, 8, !dbg !17238
  %or565 = or i32 %or530, %shr564, !dbg !17238
  %arraydecay566 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr567 = getelementptr i32, i32* %arraydecay566, i64 2, !dbg !17238
  %144 = load i32, i32* %add.ptr567, align 4, !dbg !17238
  %145 = call i1 @llvm.is.constant.i32(i32 %144), !dbg !17238
  br i1 %145, label %cond.true568, label %cond.false588, !dbg !17238

cond.true568:                                     ; preds = %cond.end557
  %arraydecay569 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr570 = getelementptr i32, i32* %arraydecay569, i64 2, !dbg !17238
  %146 = load i32, i32* %add.ptr570, align 4, !dbg !17238
  %and571 = and i32 %146, 255, !dbg !17238
  %shl572 = shl i32 %and571, 24, !dbg !17238
  %arraydecay573 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr574 = getelementptr i32, i32* %arraydecay573, i64 2, !dbg !17238
  %147 = load i32, i32* %add.ptr574, align 4, !dbg !17238
  %and575 = and i32 %147, 65280, !dbg !17238
  %shl576 = shl i32 %and575, 8, !dbg !17238
  %or577 = or i32 %shl572, %shl576, !dbg !17238
  %arraydecay578 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr579 = getelementptr i32, i32* %arraydecay578, i64 2, !dbg !17238
  %148 = load i32, i32* %add.ptr579, align 4, !dbg !17238
  %and580 = and i32 %148, 16711680, !dbg !17238
  %shr581 = lshr i32 %and580, 8, !dbg !17238
  %or582 = or i32 %or577, %shr581, !dbg !17238
  %arraydecay583 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr584 = getelementptr i32, i32* %arraydecay583, i64 2, !dbg !17238
  %149 = load i32, i32* %add.ptr584, align 4, !dbg !17238
  %and585 = and i32 %149, -16777216, !dbg !17238
  %shr586 = lshr i32 %and585, 24, !dbg !17238
  %or587 = or i32 %or582, %shr586, !dbg !17238
  br label %cond.end592, !dbg !17238

cond.false588:                                    ; preds = %cond.end557
  %arraydecay589 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr590 = getelementptr i32, i32* %arraydecay589, i64 2, !dbg !17238
  %150 = load i32, i32* %add.ptr590, align 4, !dbg !17238
  %call591 = call i32 @__fswab32(i32 %150) #10, !dbg !17238
  br label %cond.end592, !dbg !17238

cond.end592:                                      ; preds = %cond.false588, %cond.true568
  %cond593 = phi i32 [ %or587, %cond.true568 ], [ %call591, %cond.false588 ], !dbg !17238
  %and594 = and i32 %cond593, -65536, !dbg !17238
  %151 = load i32, i32* %_v425, align 4, !dbg !17238
  %and595 = and i32 %151, 65535, !dbg !17238
  %shl596 = shl i32 %and595, 0, !dbg !17238
  %or597 = or i32 %and594, %shl596, !dbg !17238
  %and598 = and i32 %or597, -16777216, !dbg !17238
  %shr599 = lshr i32 %and598, 24, !dbg !17238
  %or600 = or i32 %or565, %shr599, !dbg !17238
  br label %cond.end635, !dbg !17238

cond.false601:                                    ; preds = %cond.end455
  %arraydecay602 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr603 = getelementptr i32, i32* %arraydecay602, i64 2, !dbg !17238
  %152 = load i32, i32* %add.ptr603, align 4, !dbg !17238
  %153 = call i1 @llvm.is.constant.i32(i32 %152), !dbg !17238
  br i1 %153, label %cond.true604, label %cond.false624, !dbg !17238

cond.true604:                                     ; preds = %cond.false601
  %arraydecay605 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr606 = getelementptr i32, i32* %arraydecay605, i64 2, !dbg !17238
  %154 = load i32, i32* %add.ptr606, align 4, !dbg !17238
  %and607 = and i32 %154, 255, !dbg !17238
  %shl608 = shl i32 %and607, 24, !dbg !17238
  %arraydecay609 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr610 = getelementptr i32, i32* %arraydecay609, i64 2, !dbg !17238
  %155 = load i32, i32* %add.ptr610, align 4, !dbg !17238
  %and611 = and i32 %155, 65280, !dbg !17238
  %shl612 = shl i32 %and611, 8, !dbg !17238
  %or613 = or i32 %shl608, %shl612, !dbg !17238
  %arraydecay614 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr615 = getelementptr i32, i32* %arraydecay614, i64 2, !dbg !17238
  %156 = load i32, i32* %add.ptr615, align 4, !dbg !17238
  %and616 = and i32 %156, 16711680, !dbg !17238
  %shr617 = lshr i32 %and616, 8, !dbg !17238
  %or618 = or i32 %or613, %shr617, !dbg !17238
  %arraydecay619 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr620 = getelementptr i32, i32* %arraydecay619, i64 2, !dbg !17238
  %157 = load i32, i32* %add.ptr620, align 4, !dbg !17238
  %and621 = and i32 %157, -16777216, !dbg !17238
  %shr622 = lshr i32 %and621, 24, !dbg !17238
  %or623 = or i32 %or618, %shr622, !dbg !17238
  br label %cond.end628, !dbg !17238

cond.false624:                                    ; preds = %cond.false601
  %arraydecay625 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr626 = getelementptr i32, i32* %arraydecay625, i64 2, !dbg !17238
  %158 = load i32, i32* %add.ptr626, align 4, !dbg !17238
  %call627 = call i32 @__fswab32(i32 %158) #10, !dbg !17238
  br label %cond.end628, !dbg !17238

cond.end628:                                      ; preds = %cond.false624, %cond.true604
  %cond629 = phi i32 [ %or623, %cond.true604 ], [ %call627, %cond.false624 ], !dbg !17238
  %and630 = and i32 %cond629, -65536, !dbg !17238
  %159 = load i32, i32* %_v425, align 4, !dbg !17238
  %and631 = and i32 %159, 65535, !dbg !17238
  %shl632 = shl i32 %and631, 0, !dbg !17238
  %or633 = or i32 %and630, %shl632, !dbg !17238
  %call634 = call i32 @__fswab32(i32 %or633) #10, !dbg !17238
  br label %cond.end635, !dbg !17238

cond.end635:                                      ; preds = %cond.end628, %cond.end592
  %cond636 = phi i32 [ %or600, %cond.end592 ], [ %call634, %cond.end628 ], !dbg !17238
  %arraydecay637 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17238
  %add.ptr638 = getelementptr i32, i32* %arraydecay637, i64 2, !dbg !17238
  store i32 %cond636, i32* %add.ptr638, align 4, !dbg !17238
  br label %do.end639, !dbg !17238

do.end639:                                        ; preds = %cond.end635
  br label %do.body640, !dbg !17241

do.body640:                                       ; preds = %do.end639
  call void @llvm.dbg.declare(metadata i32* %_v641, metadata !17242, metadata !DIExpression()), !dbg !17244
  store i32 1, i32* %_v641, align 4, !dbg !17244
  br label %do.body642, !dbg !17244

do.body642:                                       ; preds = %do.body640
  br label %do.end643, !dbg !17245

do.end643:                                        ; preds = %do.body642
  %arraydecay644 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr645 = getelementptr i32, i32* %arraydecay644, i64 2, !dbg !17244
  %160 = load i32, i32* %add.ptr645, align 4, !dbg !17244
  %161 = call i1 @llvm.is.constant.i32(i32 %160), !dbg !17244
  br i1 %161, label %cond.true646, label %cond.false666, !dbg !17244

cond.true646:                                     ; preds = %do.end643
  %arraydecay647 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr648 = getelementptr i32, i32* %arraydecay647, i64 2, !dbg !17244
  %162 = load i32, i32* %add.ptr648, align 4, !dbg !17244
  %and649 = and i32 %162, 255, !dbg !17244
  %shl650 = shl i32 %and649, 24, !dbg !17244
  %arraydecay651 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr652 = getelementptr i32, i32* %arraydecay651, i64 2, !dbg !17244
  %163 = load i32, i32* %add.ptr652, align 4, !dbg !17244
  %and653 = and i32 %163, 65280, !dbg !17244
  %shl654 = shl i32 %and653, 8, !dbg !17244
  %or655 = or i32 %shl650, %shl654, !dbg !17244
  %arraydecay656 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr657 = getelementptr i32, i32* %arraydecay656, i64 2, !dbg !17244
  %164 = load i32, i32* %add.ptr657, align 4, !dbg !17244
  %and658 = and i32 %164, 16711680, !dbg !17244
  %shr659 = lshr i32 %and658, 8, !dbg !17244
  %or660 = or i32 %or655, %shr659, !dbg !17244
  %arraydecay661 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr662 = getelementptr i32, i32* %arraydecay661, i64 2, !dbg !17244
  %165 = load i32, i32* %add.ptr662, align 4, !dbg !17244
  %and663 = and i32 %165, -16777216, !dbg !17244
  %shr664 = lshr i32 %and663, 24, !dbg !17244
  %or665 = or i32 %or660, %shr664, !dbg !17244
  br label %cond.end670, !dbg !17244

cond.false666:                                    ; preds = %do.end643
  %arraydecay667 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr668 = getelementptr i32, i32* %arraydecay667, i64 2, !dbg !17244
  %166 = load i32, i32* %add.ptr668, align 4, !dbg !17244
  %call669 = call i32 @__fswab32(i32 %166) #10, !dbg !17244
  br label %cond.end670, !dbg !17244

cond.end670:                                      ; preds = %cond.false666, %cond.true646
  %cond671 = phi i32 [ %or665, %cond.true646 ], [ %call669, %cond.false666 ], !dbg !17244
  %and672 = and i32 %cond671, 2147483647, !dbg !17244
  %167 = load i32, i32* %_v641, align 4, !dbg !17244
  %and673 = and i32 %167, 1, !dbg !17244
  %shl674 = shl i32 %and673, 31, !dbg !17244
  %or675 = or i32 %and672, %shl674, !dbg !17244
  %168 = call i1 @llvm.is.constant.i32(i32 %or675), !dbg !17244
  br i1 %168, label %cond.true676, label %cond.false816, !dbg !17244

cond.true676:                                     ; preds = %cond.end670
  %arraydecay677 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr678 = getelementptr i32, i32* %arraydecay677, i64 2, !dbg !17244
  %169 = load i32, i32* %add.ptr678, align 4, !dbg !17244
  %170 = call i1 @llvm.is.constant.i32(i32 %169), !dbg !17244
  br i1 %170, label %cond.true679, label %cond.false699, !dbg !17244

cond.true679:                                     ; preds = %cond.true676
  %arraydecay680 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr681 = getelementptr i32, i32* %arraydecay680, i64 2, !dbg !17244
  %171 = load i32, i32* %add.ptr681, align 4, !dbg !17244
  %and682 = and i32 %171, 255, !dbg !17244
  %shl683 = shl i32 %and682, 24, !dbg !17244
  %arraydecay684 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr685 = getelementptr i32, i32* %arraydecay684, i64 2, !dbg !17244
  %172 = load i32, i32* %add.ptr685, align 4, !dbg !17244
  %and686 = and i32 %172, 65280, !dbg !17244
  %shl687 = shl i32 %and686, 8, !dbg !17244
  %or688 = or i32 %shl683, %shl687, !dbg !17244
  %arraydecay689 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr690 = getelementptr i32, i32* %arraydecay689, i64 2, !dbg !17244
  %173 = load i32, i32* %add.ptr690, align 4, !dbg !17244
  %and691 = and i32 %173, 16711680, !dbg !17244
  %shr692 = lshr i32 %and691, 8, !dbg !17244
  %or693 = or i32 %or688, %shr692, !dbg !17244
  %arraydecay694 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr695 = getelementptr i32, i32* %arraydecay694, i64 2, !dbg !17244
  %174 = load i32, i32* %add.ptr695, align 4, !dbg !17244
  %and696 = and i32 %174, -16777216, !dbg !17244
  %shr697 = lshr i32 %and696, 24, !dbg !17244
  %or698 = or i32 %or693, %shr697, !dbg !17244
  br label %cond.end703, !dbg !17244

cond.false699:                                    ; preds = %cond.true676
  %arraydecay700 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr701 = getelementptr i32, i32* %arraydecay700, i64 2, !dbg !17244
  %175 = load i32, i32* %add.ptr701, align 4, !dbg !17244
  %call702 = call i32 @__fswab32(i32 %175) #10, !dbg !17244
  br label %cond.end703, !dbg !17244

cond.end703:                                      ; preds = %cond.false699, %cond.true679
  %cond704 = phi i32 [ %or698, %cond.true679 ], [ %call702, %cond.false699 ], !dbg !17244
  %and705 = and i32 %cond704, 2147483647, !dbg !17244
  %176 = load i32, i32* %_v641, align 4, !dbg !17244
  %and706 = and i32 %176, 1, !dbg !17244
  %shl707 = shl i32 %and706, 31, !dbg !17244
  %or708 = or i32 %and705, %shl707, !dbg !17244
  %and709 = and i32 %or708, 255, !dbg !17244
  %shl710 = shl i32 %and709, 24, !dbg !17244
  %arraydecay711 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr712 = getelementptr i32, i32* %arraydecay711, i64 2, !dbg !17244
  %177 = load i32, i32* %add.ptr712, align 4, !dbg !17244
  %178 = call i1 @llvm.is.constant.i32(i32 %177), !dbg !17244
  br i1 %178, label %cond.true713, label %cond.false733, !dbg !17244

cond.true713:                                     ; preds = %cond.end703
  %arraydecay714 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr715 = getelementptr i32, i32* %arraydecay714, i64 2, !dbg !17244
  %179 = load i32, i32* %add.ptr715, align 4, !dbg !17244
  %and716 = and i32 %179, 255, !dbg !17244
  %shl717 = shl i32 %and716, 24, !dbg !17244
  %arraydecay718 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr719 = getelementptr i32, i32* %arraydecay718, i64 2, !dbg !17244
  %180 = load i32, i32* %add.ptr719, align 4, !dbg !17244
  %and720 = and i32 %180, 65280, !dbg !17244
  %shl721 = shl i32 %and720, 8, !dbg !17244
  %or722 = or i32 %shl717, %shl721, !dbg !17244
  %arraydecay723 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr724 = getelementptr i32, i32* %arraydecay723, i64 2, !dbg !17244
  %181 = load i32, i32* %add.ptr724, align 4, !dbg !17244
  %and725 = and i32 %181, 16711680, !dbg !17244
  %shr726 = lshr i32 %and725, 8, !dbg !17244
  %or727 = or i32 %or722, %shr726, !dbg !17244
  %arraydecay728 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr729 = getelementptr i32, i32* %arraydecay728, i64 2, !dbg !17244
  %182 = load i32, i32* %add.ptr729, align 4, !dbg !17244
  %and730 = and i32 %182, -16777216, !dbg !17244
  %shr731 = lshr i32 %and730, 24, !dbg !17244
  %or732 = or i32 %or727, %shr731, !dbg !17244
  br label %cond.end737, !dbg !17244

cond.false733:                                    ; preds = %cond.end703
  %arraydecay734 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr735 = getelementptr i32, i32* %arraydecay734, i64 2, !dbg !17244
  %183 = load i32, i32* %add.ptr735, align 4, !dbg !17244
  %call736 = call i32 @__fswab32(i32 %183) #10, !dbg !17244
  br label %cond.end737, !dbg !17244

cond.end737:                                      ; preds = %cond.false733, %cond.true713
  %cond738 = phi i32 [ %or732, %cond.true713 ], [ %call736, %cond.false733 ], !dbg !17244
  %and739 = and i32 %cond738, 2147483647, !dbg !17244
  %184 = load i32, i32* %_v641, align 4, !dbg !17244
  %and740 = and i32 %184, 1, !dbg !17244
  %shl741 = shl i32 %and740, 31, !dbg !17244
  %or742 = or i32 %and739, %shl741, !dbg !17244
  %and743 = and i32 %or742, 65280, !dbg !17244
  %shl744 = shl i32 %and743, 8, !dbg !17244
  %or745 = or i32 %shl710, %shl744, !dbg !17244
  %arraydecay746 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr747 = getelementptr i32, i32* %arraydecay746, i64 2, !dbg !17244
  %185 = load i32, i32* %add.ptr747, align 4, !dbg !17244
  %186 = call i1 @llvm.is.constant.i32(i32 %185), !dbg !17244
  br i1 %186, label %cond.true748, label %cond.false768, !dbg !17244

cond.true748:                                     ; preds = %cond.end737
  %arraydecay749 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr750 = getelementptr i32, i32* %arraydecay749, i64 2, !dbg !17244
  %187 = load i32, i32* %add.ptr750, align 4, !dbg !17244
  %and751 = and i32 %187, 255, !dbg !17244
  %shl752 = shl i32 %and751, 24, !dbg !17244
  %arraydecay753 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr754 = getelementptr i32, i32* %arraydecay753, i64 2, !dbg !17244
  %188 = load i32, i32* %add.ptr754, align 4, !dbg !17244
  %and755 = and i32 %188, 65280, !dbg !17244
  %shl756 = shl i32 %and755, 8, !dbg !17244
  %or757 = or i32 %shl752, %shl756, !dbg !17244
  %arraydecay758 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr759 = getelementptr i32, i32* %arraydecay758, i64 2, !dbg !17244
  %189 = load i32, i32* %add.ptr759, align 4, !dbg !17244
  %and760 = and i32 %189, 16711680, !dbg !17244
  %shr761 = lshr i32 %and760, 8, !dbg !17244
  %or762 = or i32 %or757, %shr761, !dbg !17244
  %arraydecay763 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr764 = getelementptr i32, i32* %arraydecay763, i64 2, !dbg !17244
  %190 = load i32, i32* %add.ptr764, align 4, !dbg !17244
  %and765 = and i32 %190, -16777216, !dbg !17244
  %shr766 = lshr i32 %and765, 24, !dbg !17244
  %or767 = or i32 %or762, %shr766, !dbg !17244
  br label %cond.end772, !dbg !17244

cond.false768:                                    ; preds = %cond.end737
  %arraydecay769 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr770 = getelementptr i32, i32* %arraydecay769, i64 2, !dbg !17244
  %191 = load i32, i32* %add.ptr770, align 4, !dbg !17244
  %call771 = call i32 @__fswab32(i32 %191) #10, !dbg !17244
  br label %cond.end772, !dbg !17244

cond.end772:                                      ; preds = %cond.false768, %cond.true748
  %cond773 = phi i32 [ %or767, %cond.true748 ], [ %call771, %cond.false768 ], !dbg !17244
  %and774 = and i32 %cond773, 2147483647, !dbg !17244
  %192 = load i32, i32* %_v641, align 4, !dbg !17244
  %and775 = and i32 %192, 1, !dbg !17244
  %shl776 = shl i32 %and775, 31, !dbg !17244
  %or777 = or i32 %and774, %shl776, !dbg !17244
  %and778 = and i32 %or777, 16711680, !dbg !17244
  %shr779 = lshr i32 %and778, 8, !dbg !17244
  %or780 = or i32 %or745, %shr779, !dbg !17244
  %arraydecay781 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr782 = getelementptr i32, i32* %arraydecay781, i64 2, !dbg !17244
  %193 = load i32, i32* %add.ptr782, align 4, !dbg !17244
  %194 = call i1 @llvm.is.constant.i32(i32 %193), !dbg !17244
  br i1 %194, label %cond.true783, label %cond.false803, !dbg !17244

cond.true783:                                     ; preds = %cond.end772
  %arraydecay784 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr785 = getelementptr i32, i32* %arraydecay784, i64 2, !dbg !17244
  %195 = load i32, i32* %add.ptr785, align 4, !dbg !17244
  %and786 = and i32 %195, 255, !dbg !17244
  %shl787 = shl i32 %and786, 24, !dbg !17244
  %arraydecay788 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr789 = getelementptr i32, i32* %arraydecay788, i64 2, !dbg !17244
  %196 = load i32, i32* %add.ptr789, align 4, !dbg !17244
  %and790 = and i32 %196, 65280, !dbg !17244
  %shl791 = shl i32 %and790, 8, !dbg !17244
  %or792 = or i32 %shl787, %shl791, !dbg !17244
  %arraydecay793 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr794 = getelementptr i32, i32* %arraydecay793, i64 2, !dbg !17244
  %197 = load i32, i32* %add.ptr794, align 4, !dbg !17244
  %and795 = and i32 %197, 16711680, !dbg !17244
  %shr796 = lshr i32 %and795, 8, !dbg !17244
  %or797 = or i32 %or792, %shr796, !dbg !17244
  %arraydecay798 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr799 = getelementptr i32, i32* %arraydecay798, i64 2, !dbg !17244
  %198 = load i32, i32* %add.ptr799, align 4, !dbg !17244
  %and800 = and i32 %198, -16777216, !dbg !17244
  %shr801 = lshr i32 %and800, 24, !dbg !17244
  %or802 = or i32 %or797, %shr801, !dbg !17244
  br label %cond.end807, !dbg !17244

cond.false803:                                    ; preds = %cond.end772
  %arraydecay804 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr805 = getelementptr i32, i32* %arraydecay804, i64 2, !dbg !17244
  %199 = load i32, i32* %add.ptr805, align 4, !dbg !17244
  %call806 = call i32 @__fswab32(i32 %199) #10, !dbg !17244
  br label %cond.end807, !dbg !17244

cond.end807:                                      ; preds = %cond.false803, %cond.true783
  %cond808 = phi i32 [ %or802, %cond.true783 ], [ %call806, %cond.false803 ], !dbg !17244
  %and809 = and i32 %cond808, 2147483647, !dbg !17244
  %200 = load i32, i32* %_v641, align 4, !dbg !17244
  %and810 = and i32 %200, 1, !dbg !17244
  %shl811 = shl i32 %and810, 31, !dbg !17244
  %or812 = or i32 %and809, %shl811, !dbg !17244
  %and813 = and i32 %or812, -16777216, !dbg !17244
  %shr814 = lshr i32 %and813, 24, !dbg !17244
  %or815 = or i32 %or780, %shr814, !dbg !17244
  br label %cond.end850, !dbg !17244

cond.false816:                                    ; preds = %cond.end670
  %arraydecay817 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr818 = getelementptr i32, i32* %arraydecay817, i64 2, !dbg !17244
  %201 = load i32, i32* %add.ptr818, align 4, !dbg !17244
  %202 = call i1 @llvm.is.constant.i32(i32 %201), !dbg !17244
  br i1 %202, label %cond.true819, label %cond.false839, !dbg !17244

cond.true819:                                     ; preds = %cond.false816
  %arraydecay820 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr821 = getelementptr i32, i32* %arraydecay820, i64 2, !dbg !17244
  %203 = load i32, i32* %add.ptr821, align 4, !dbg !17244
  %and822 = and i32 %203, 255, !dbg !17244
  %shl823 = shl i32 %and822, 24, !dbg !17244
  %arraydecay824 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr825 = getelementptr i32, i32* %arraydecay824, i64 2, !dbg !17244
  %204 = load i32, i32* %add.ptr825, align 4, !dbg !17244
  %and826 = and i32 %204, 65280, !dbg !17244
  %shl827 = shl i32 %and826, 8, !dbg !17244
  %or828 = or i32 %shl823, %shl827, !dbg !17244
  %arraydecay829 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr830 = getelementptr i32, i32* %arraydecay829, i64 2, !dbg !17244
  %205 = load i32, i32* %add.ptr830, align 4, !dbg !17244
  %and831 = and i32 %205, 16711680, !dbg !17244
  %shr832 = lshr i32 %and831, 8, !dbg !17244
  %or833 = or i32 %or828, %shr832, !dbg !17244
  %arraydecay834 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr835 = getelementptr i32, i32* %arraydecay834, i64 2, !dbg !17244
  %206 = load i32, i32* %add.ptr835, align 4, !dbg !17244
  %and836 = and i32 %206, -16777216, !dbg !17244
  %shr837 = lshr i32 %and836, 24, !dbg !17244
  %or838 = or i32 %or833, %shr837, !dbg !17244
  br label %cond.end843, !dbg !17244

cond.false839:                                    ; preds = %cond.false816
  %arraydecay840 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr841 = getelementptr i32, i32* %arraydecay840, i64 2, !dbg !17244
  %207 = load i32, i32* %add.ptr841, align 4, !dbg !17244
  %call842 = call i32 @__fswab32(i32 %207) #10, !dbg !17244
  br label %cond.end843, !dbg !17244

cond.end843:                                      ; preds = %cond.false839, %cond.true819
  %cond844 = phi i32 [ %or838, %cond.true819 ], [ %call842, %cond.false839 ], !dbg !17244
  %and845 = and i32 %cond844, 2147483647, !dbg !17244
  %208 = load i32, i32* %_v641, align 4, !dbg !17244
  %and846 = and i32 %208, 1, !dbg !17244
  %shl847 = shl i32 %and846, 31, !dbg !17244
  %or848 = or i32 %and845, %shl847, !dbg !17244
  %call849 = call i32 @__fswab32(i32 %or848) #10, !dbg !17244
  br label %cond.end850, !dbg !17244

cond.end850:                                      ; preds = %cond.end843, %cond.end807
  %cond851 = phi i32 [ %or815, %cond.end807 ], [ %call849, %cond.end843 ], !dbg !17244
  %arraydecay852 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17244
  %add.ptr853 = getelementptr i32, i32* %arraydecay852, i64 2, !dbg !17244
  store i32 %cond851, i32* %add.ptr853, align 4, !dbg !17244
  br label %do.end854, !dbg !17244

do.end854:                                        ; preds = %cond.end850
  %209 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17247
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %209, i32 0, i32 0, !dbg !17247
  %210 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17247
  %arraydecay855 = getelementptr inbounds [8 x i32], [8 x i32]* %in, i64 0, i64 0, !dbg !17247
  %211 = bitcast i32* %arraydecay855 to i8*, !dbg !17247
  %212 = load i32*, i32** %out, align 8, !dbg !17247
  %213 = bitcast i32* %212 to i8*, !dbg !17247
  %call856 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %210, i8* %211, i32 32, i8* %213, i32 528) #8, !dbg !17247
  store i32 %call856, i32* %tmp, align 4, !dbg !17249
  %214 = load i32, i32* %tmp, align 4, !dbg !17247
  store i32 %214, i32* %err, align 4, !dbg !17250
  %215 = load i32, i32* %err, align 4, !dbg !17251
  %tobool857 = icmp ne i32 %215, 0, !dbg !17251
  br i1 %tobool857, label %if.then858, label %if.end859, !dbg !17253

if.then858:                                       ; preds = %do.end854
  br label %free_out, !dbg !17254

if.end859:                                        ; preds = %do.end854
  %216 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17255
  %217 = bitcast %struct.ifla_vf_stats* %216 to i8*, !dbg !17256
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 64, i1 false), !dbg !17256
  %218 = load i32*, i32** %out, align 8, !dbg !17257
  %219 = bitcast i32* %218 to i64*, !dbg !17257
  %add.ptr860 = getelementptr i64, i64* %219, i64 18, !dbg !17257
  %220 = load i64, i64* %add.ptr860, align 8, !dbg !17257
  %221 = call i1 @llvm.is.constant.i64(i64 %220), !dbg !17257
  br i1 %221, label %cond.true861, label %cond.false893, !dbg !17257

cond.true861:                                     ; preds = %if.end859
  %222 = load i32*, i32** %out, align 8, !dbg !17257
  %223 = bitcast i32* %222 to i64*, !dbg !17257
  %add.ptr862 = getelementptr i64, i64* %223, i64 18, !dbg !17257
  %224 = load i64, i64* %add.ptr862, align 8, !dbg !17257
  %and863 = and i64 %224, 255, !dbg !17257
  %shl864 = shl i64 %and863, 56, !dbg !17257
  %225 = load i32*, i32** %out, align 8, !dbg !17257
  %226 = bitcast i32* %225 to i64*, !dbg !17257
  %add.ptr865 = getelementptr i64, i64* %226, i64 18, !dbg !17257
  %227 = load i64, i64* %add.ptr865, align 8, !dbg !17257
  %and866 = and i64 %227, 65280, !dbg !17257
  %shl867 = shl i64 %and866, 40, !dbg !17257
  %or868 = or i64 %shl864, %shl867, !dbg !17257
  %228 = load i32*, i32** %out, align 8, !dbg !17257
  %229 = bitcast i32* %228 to i64*, !dbg !17257
  %add.ptr869 = getelementptr i64, i64* %229, i64 18, !dbg !17257
  %230 = load i64, i64* %add.ptr869, align 8, !dbg !17257
  %and870 = and i64 %230, 16711680, !dbg !17257
  %shl871 = shl i64 %and870, 24, !dbg !17257
  %or872 = or i64 %or868, %shl871, !dbg !17257
  %231 = load i32*, i32** %out, align 8, !dbg !17257
  %232 = bitcast i32* %231 to i64*, !dbg !17257
  %add.ptr873 = getelementptr i64, i64* %232, i64 18, !dbg !17257
  %233 = load i64, i64* %add.ptr873, align 8, !dbg !17257
  %and874 = and i64 %233, 4278190080, !dbg !17257
  %shl875 = shl i64 %and874, 8, !dbg !17257
  %or876 = or i64 %or872, %shl875, !dbg !17257
  %234 = load i32*, i32** %out, align 8, !dbg !17257
  %235 = bitcast i32* %234 to i64*, !dbg !17257
  %add.ptr877 = getelementptr i64, i64* %235, i64 18, !dbg !17257
  %236 = load i64, i64* %add.ptr877, align 8, !dbg !17257
  %and878 = and i64 %236, 1095216660480, !dbg !17257
  %shr879 = lshr i64 %and878, 8, !dbg !17257
  %or880 = or i64 %or876, %shr879, !dbg !17257
  %237 = load i32*, i32** %out, align 8, !dbg !17257
  %238 = bitcast i32* %237 to i64*, !dbg !17257
  %add.ptr881 = getelementptr i64, i64* %238, i64 18, !dbg !17257
  %239 = load i64, i64* %add.ptr881, align 8, !dbg !17257
  %and882 = and i64 %239, 280375465082880, !dbg !17257
  %shr883 = lshr i64 %and882, 24, !dbg !17257
  %or884 = or i64 %or880, %shr883, !dbg !17257
  %240 = load i32*, i32** %out, align 8, !dbg !17257
  %241 = bitcast i32* %240 to i64*, !dbg !17257
  %add.ptr885 = getelementptr i64, i64* %241, i64 18, !dbg !17257
  %242 = load i64, i64* %add.ptr885, align 8, !dbg !17257
  %and886 = and i64 %242, 71776119061217280, !dbg !17257
  %shr887 = lshr i64 %and886, 40, !dbg !17257
  %or888 = or i64 %or884, %shr887, !dbg !17257
  %243 = load i32*, i32** %out, align 8, !dbg !17257
  %244 = bitcast i32* %243 to i64*, !dbg !17257
  %add.ptr889 = getelementptr i64, i64* %244, i64 18, !dbg !17257
  %245 = load i64, i64* %add.ptr889, align 8, !dbg !17257
  %and890 = and i64 %245, -72057594037927936, !dbg !17257
  %shr891 = lshr i64 %and890, 56, !dbg !17257
  %or892 = or i64 %or888, %shr891, !dbg !17257
  br label %cond.end896, !dbg !17257

cond.false893:                                    ; preds = %if.end859
  %246 = load i32*, i32** %out, align 8, !dbg !17257
  %247 = bitcast i32* %246 to i64*, !dbg !17257
  %add.ptr894 = getelementptr i64, i64* %247, i64 18, !dbg !17257
  %248 = load i64, i64* %add.ptr894, align 8, !dbg !17257
  %call895 = call i64 @__fswab64(i64 %248) #10, !dbg !17257
  br label %cond.end896, !dbg !17257

cond.end896:                                      ; preds = %cond.false893, %cond.true861
  %cond897 = phi i64 [ %or892, %cond.true861 ], [ %call895, %cond.false893 ], !dbg !17257
  %249 = load i32*, i32** %out, align 8, !dbg !17258
  %250 = bitcast i32* %249 to i64*, !dbg !17258
  %add.ptr898 = getelementptr i64, i64* %250, i64 6, !dbg !17258
  %251 = load i64, i64* %add.ptr898, align 8, !dbg !17258
  %252 = call i1 @llvm.is.constant.i64(i64 %251), !dbg !17258
  br i1 %252, label %cond.true899, label %cond.false931, !dbg !17258

cond.true899:                                     ; preds = %cond.end896
  %253 = load i32*, i32** %out, align 8, !dbg !17258
  %254 = bitcast i32* %253 to i64*, !dbg !17258
  %add.ptr900 = getelementptr i64, i64* %254, i64 6, !dbg !17258
  %255 = load i64, i64* %add.ptr900, align 8, !dbg !17258
  %and901 = and i64 %255, 255, !dbg !17258
  %shl902 = shl i64 %and901, 56, !dbg !17258
  %256 = load i32*, i32** %out, align 8, !dbg !17258
  %257 = bitcast i32* %256 to i64*, !dbg !17258
  %add.ptr903 = getelementptr i64, i64* %257, i64 6, !dbg !17258
  %258 = load i64, i64* %add.ptr903, align 8, !dbg !17258
  %and904 = and i64 %258, 65280, !dbg !17258
  %shl905 = shl i64 %and904, 40, !dbg !17258
  %or906 = or i64 %shl902, %shl905, !dbg !17258
  %259 = load i32*, i32** %out, align 8, !dbg !17258
  %260 = bitcast i32* %259 to i64*, !dbg !17258
  %add.ptr907 = getelementptr i64, i64* %260, i64 6, !dbg !17258
  %261 = load i64, i64* %add.ptr907, align 8, !dbg !17258
  %and908 = and i64 %261, 16711680, !dbg !17258
  %shl909 = shl i64 %and908, 24, !dbg !17258
  %or910 = or i64 %or906, %shl909, !dbg !17258
  %262 = load i32*, i32** %out, align 8, !dbg !17258
  %263 = bitcast i32* %262 to i64*, !dbg !17258
  %add.ptr911 = getelementptr i64, i64* %263, i64 6, !dbg !17258
  %264 = load i64, i64* %add.ptr911, align 8, !dbg !17258
  %and912 = and i64 %264, 4278190080, !dbg !17258
  %shl913 = shl i64 %and912, 8, !dbg !17258
  %or914 = or i64 %or910, %shl913, !dbg !17258
  %265 = load i32*, i32** %out, align 8, !dbg !17258
  %266 = bitcast i32* %265 to i64*, !dbg !17258
  %add.ptr915 = getelementptr i64, i64* %266, i64 6, !dbg !17258
  %267 = load i64, i64* %add.ptr915, align 8, !dbg !17258
  %and916 = and i64 %267, 1095216660480, !dbg !17258
  %shr917 = lshr i64 %and916, 8, !dbg !17258
  %or918 = or i64 %or914, %shr917, !dbg !17258
  %268 = load i32*, i32** %out, align 8, !dbg !17258
  %269 = bitcast i32* %268 to i64*, !dbg !17258
  %add.ptr919 = getelementptr i64, i64* %269, i64 6, !dbg !17258
  %270 = load i64, i64* %add.ptr919, align 8, !dbg !17258
  %and920 = and i64 %270, 280375465082880, !dbg !17258
  %shr921 = lshr i64 %and920, 24, !dbg !17258
  %or922 = or i64 %or918, %shr921, !dbg !17258
  %271 = load i32*, i32** %out, align 8, !dbg !17258
  %272 = bitcast i32* %271 to i64*, !dbg !17258
  %add.ptr923 = getelementptr i64, i64* %272, i64 6, !dbg !17258
  %273 = load i64, i64* %add.ptr923, align 8, !dbg !17258
  %and924 = and i64 %273, 71776119061217280, !dbg !17258
  %shr925 = lshr i64 %and924, 40, !dbg !17258
  %or926 = or i64 %or922, %shr925, !dbg !17258
  %274 = load i32*, i32** %out, align 8, !dbg !17258
  %275 = bitcast i32* %274 to i64*, !dbg !17258
  %add.ptr927 = getelementptr i64, i64* %275, i64 6, !dbg !17258
  %276 = load i64, i64* %add.ptr927, align 8, !dbg !17258
  %and928 = and i64 %276, -72057594037927936, !dbg !17258
  %shr929 = lshr i64 %and928, 56, !dbg !17258
  %or930 = or i64 %or926, %shr929, !dbg !17258
  br label %cond.end934, !dbg !17258

cond.false931:                                    ; preds = %cond.end896
  %277 = load i32*, i32** %out, align 8, !dbg !17258
  %278 = bitcast i32* %277 to i64*, !dbg !17258
  %add.ptr932 = getelementptr i64, i64* %278, i64 6, !dbg !17258
  %279 = load i64, i64* %add.ptr932, align 8, !dbg !17258
  %call933 = call i64 @__fswab64(i64 %279) #10, !dbg !17258
  br label %cond.end934, !dbg !17258

cond.end934:                                      ; preds = %cond.false931, %cond.true899
  %cond935 = phi i64 [ %or930, %cond.true899 ], [ %call933, %cond.false931 ], !dbg !17258
  %add = add i64 %cond897, %cond935, !dbg !17259
  %280 = load i32*, i32** %out, align 8, !dbg !17260
  %281 = bitcast i32* %280 to i64*, !dbg !17260
  %add.ptr936 = getelementptr i64, i64* %281, i64 22, !dbg !17260
  %282 = load i64, i64* %add.ptr936, align 8, !dbg !17260
  %283 = call i1 @llvm.is.constant.i64(i64 %282), !dbg !17260
  br i1 %283, label %cond.true937, label %cond.false969, !dbg !17260

cond.true937:                                     ; preds = %cond.end934
  %284 = load i32*, i32** %out, align 8, !dbg !17260
  %285 = bitcast i32* %284 to i64*, !dbg !17260
  %add.ptr938 = getelementptr i64, i64* %285, i64 22, !dbg !17260
  %286 = load i64, i64* %add.ptr938, align 8, !dbg !17260
  %and939 = and i64 %286, 255, !dbg !17260
  %shl940 = shl i64 %and939, 56, !dbg !17260
  %287 = load i32*, i32** %out, align 8, !dbg !17260
  %288 = bitcast i32* %287 to i64*, !dbg !17260
  %add.ptr941 = getelementptr i64, i64* %288, i64 22, !dbg !17260
  %289 = load i64, i64* %add.ptr941, align 8, !dbg !17260
  %and942 = and i64 %289, 65280, !dbg !17260
  %shl943 = shl i64 %and942, 40, !dbg !17260
  %or944 = or i64 %shl940, %shl943, !dbg !17260
  %290 = load i32*, i32** %out, align 8, !dbg !17260
  %291 = bitcast i32* %290 to i64*, !dbg !17260
  %add.ptr945 = getelementptr i64, i64* %291, i64 22, !dbg !17260
  %292 = load i64, i64* %add.ptr945, align 8, !dbg !17260
  %and946 = and i64 %292, 16711680, !dbg !17260
  %shl947 = shl i64 %and946, 24, !dbg !17260
  %or948 = or i64 %or944, %shl947, !dbg !17260
  %293 = load i32*, i32** %out, align 8, !dbg !17260
  %294 = bitcast i32* %293 to i64*, !dbg !17260
  %add.ptr949 = getelementptr i64, i64* %294, i64 22, !dbg !17260
  %295 = load i64, i64* %add.ptr949, align 8, !dbg !17260
  %and950 = and i64 %295, 4278190080, !dbg !17260
  %shl951 = shl i64 %and950, 8, !dbg !17260
  %or952 = or i64 %or948, %shl951, !dbg !17260
  %296 = load i32*, i32** %out, align 8, !dbg !17260
  %297 = bitcast i32* %296 to i64*, !dbg !17260
  %add.ptr953 = getelementptr i64, i64* %297, i64 22, !dbg !17260
  %298 = load i64, i64* %add.ptr953, align 8, !dbg !17260
  %and954 = and i64 %298, 1095216660480, !dbg !17260
  %shr955 = lshr i64 %and954, 8, !dbg !17260
  %or956 = or i64 %or952, %shr955, !dbg !17260
  %299 = load i32*, i32** %out, align 8, !dbg !17260
  %300 = bitcast i32* %299 to i64*, !dbg !17260
  %add.ptr957 = getelementptr i64, i64* %300, i64 22, !dbg !17260
  %301 = load i64, i64* %add.ptr957, align 8, !dbg !17260
  %and958 = and i64 %301, 280375465082880, !dbg !17260
  %shr959 = lshr i64 %and958, 24, !dbg !17260
  %or960 = or i64 %or956, %shr959, !dbg !17260
  %302 = load i32*, i32** %out, align 8, !dbg !17260
  %303 = bitcast i32* %302 to i64*, !dbg !17260
  %add.ptr961 = getelementptr i64, i64* %303, i64 22, !dbg !17260
  %304 = load i64, i64* %add.ptr961, align 8, !dbg !17260
  %and962 = and i64 %304, 71776119061217280, !dbg !17260
  %shr963 = lshr i64 %and962, 40, !dbg !17260
  %or964 = or i64 %or960, %shr963, !dbg !17260
  %305 = load i32*, i32** %out, align 8, !dbg !17260
  %306 = bitcast i32* %305 to i64*, !dbg !17260
  %add.ptr965 = getelementptr i64, i64* %306, i64 22, !dbg !17260
  %307 = load i64, i64* %add.ptr965, align 8, !dbg !17260
  %and966 = and i64 %307, -72057594037927936, !dbg !17260
  %shr967 = lshr i64 %and966, 56, !dbg !17260
  %or968 = or i64 %or964, %shr967, !dbg !17260
  br label %cond.end972, !dbg !17260

cond.false969:                                    ; preds = %cond.end934
  %308 = load i32*, i32** %out, align 8, !dbg !17260
  %309 = bitcast i32* %308 to i64*, !dbg !17260
  %add.ptr970 = getelementptr i64, i64* %309, i64 22, !dbg !17260
  %310 = load i64, i64* %add.ptr970, align 8, !dbg !17260
  %call971 = call i64 @__fswab64(i64 %310) #10, !dbg !17260
  br label %cond.end972, !dbg !17260

cond.end972:                                      ; preds = %cond.false969, %cond.true937
  %cond973 = phi i64 [ %or968, %cond.true937 ], [ %call971, %cond.false969 ], !dbg !17260
  %add974 = add i64 %add, %cond973, !dbg !17261
  %311 = load i32*, i32** %out, align 8, !dbg !17262
  %312 = bitcast i32* %311 to i64*, !dbg !17262
  %add.ptr975 = getelementptr i64, i64* %312, i64 10, !dbg !17262
  %313 = load i64, i64* %add.ptr975, align 8, !dbg !17262
  %314 = call i1 @llvm.is.constant.i64(i64 %313), !dbg !17262
  br i1 %314, label %cond.true976, label %cond.false1008, !dbg !17262

cond.true976:                                     ; preds = %cond.end972
  %315 = load i32*, i32** %out, align 8, !dbg !17262
  %316 = bitcast i32* %315 to i64*, !dbg !17262
  %add.ptr977 = getelementptr i64, i64* %316, i64 10, !dbg !17262
  %317 = load i64, i64* %add.ptr977, align 8, !dbg !17262
  %and978 = and i64 %317, 255, !dbg !17262
  %shl979 = shl i64 %and978, 56, !dbg !17262
  %318 = load i32*, i32** %out, align 8, !dbg !17262
  %319 = bitcast i32* %318 to i64*, !dbg !17262
  %add.ptr980 = getelementptr i64, i64* %319, i64 10, !dbg !17262
  %320 = load i64, i64* %add.ptr980, align 8, !dbg !17262
  %and981 = and i64 %320, 65280, !dbg !17262
  %shl982 = shl i64 %and981, 40, !dbg !17262
  %or983 = or i64 %shl979, %shl982, !dbg !17262
  %321 = load i32*, i32** %out, align 8, !dbg !17262
  %322 = bitcast i32* %321 to i64*, !dbg !17262
  %add.ptr984 = getelementptr i64, i64* %322, i64 10, !dbg !17262
  %323 = load i64, i64* %add.ptr984, align 8, !dbg !17262
  %and985 = and i64 %323, 16711680, !dbg !17262
  %shl986 = shl i64 %and985, 24, !dbg !17262
  %or987 = or i64 %or983, %shl986, !dbg !17262
  %324 = load i32*, i32** %out, align 8, !dbg !17262
  %325 = bitcast i32* %324 to i64*, !dbg !17262
  %add.ptr988 = getelementptr i64, i64* %325, i64 10, !dbg !17262
  %326 = load i64, i64* %add.ptr988, align 8, !dbg !17262
  %and989 = and i64 %326, 4278190080, !dbg !17262
  %shl990 = shl i64 %and989, 8, !dbg !17262
  %or991 = or i64 %or987, %shl990, !dbg !17262
  %327 = load i32*, i32** %out, align 8, !dbg !17262
  %328 = bitcast i32* %327 to i64*, !dbg !17262
  %add.ptr992 = getelementptr i64, i64* %328, i64 10, !dbg !17262
  %329 = load i64, i64* %add.ptr992, align 8, !dbg !17262
  %and993 = and i64 %329, 1095216660480, !dbg !17262
  %shr994 = lshr i64 %and993, 8, !dbg !17262
  %or995 = or i64 %or991, %shr994, !dbg !17262
  %330 = load i32*, i32** %out, align 8, !dbg !17262
  %331 = bitcast i32* %330 to i64*, !dbg !17262
  %add.ptr996 = getelementptr i64, i64* %331, i64 10, !dbg !17262
  %332 = load i64, i64* %add.ptr996, align 8, !dbg !17262
  %and997 = and i64 %332, 280375465082880, !dbg !17262
  %shr998 = lshr i64 %and997, 24, !dbg !17262
  %or999 = or i64 %or995, %shr998, !dbg !17262
  %333 = load i32*, i32** %out, align 8, !dbg !17262
  %334 = bitcast i32* %333 to i64*, !dbg !17262
  %add.ptr1000 = getelementptr i64, i64* %334, i64 10, !dbg !17262
  %335 = load i64, i64* %add.ptr1000, align 8, !dbg !17262
  %and1001 = and i64 %335, 71776119061217280, !dbg !17262
  %shr1002 = lshr i64 %and1001, 40, !dbg !17262
  %or1003 = or i64 %or999, %shr1002, !dbg !17262
  %336 = load i32*, i32** %out, align 8, !dbg !17262
  %337 = bitcast i32* %336 to i64*, !dbg !17262
  %add.ptr1004 = getelementptr i64, i64* %337, i64 10, !dbg !17262
  %338 = load i64, i64* %add.ptr1004, align 8, !dbg !17262
  %and1005 = and i64 %338, -72057594037927936, !dbg !17262
  %shr1006 = lshr i64 %and1005, 56, !dbg !17262
  %or1007 = or i64 %or1003, %shr1006, !dbg !17262
  br label %cond.end1011, !dbg !17262

cond.false1008:                                   ; preds = %cond.end972
  %339 = load i32*, i32** %out, align 8, !dbg !17262
  %340 = bitcast i32* %339 to i64*, !dbg !17262
  %add.ptr1009 = getelementptr i64, i64* %340, i64 10, !dbg !17262
  %341 = load i64, i64* %add.ptr1009, align 8, !dbg !17262
  %call1010 = call i64 @__fswab64(i64 %341) #10, !dbg !17262
  br label %cond.end1011, !dbg !17262

cond.end1011:                                     ; preds = %cond.false1008, %cond.true976
  %cond1012 = phi i64 [ %or1007, %cond.true976 ], [ %call1010, %cond.false1008 ], !dbg !17262
  %add1013 = add i64 %add974, %cond1012, !dbg !17263
  %342 = load i32*, i32** %out, align 8, !dbg !17264
  %343 = bitcast i32* %342 to i64*, !dbg !17264
  %add.ptr1014 = getelementptr i64, i64* %343, i64 14, !dbg !17264
  %344 = load i64, i64* %add.ptr1014, align 8, !dbg !17264
  %345 = call i1 @llvm.is.constant.i64(i64 %344), !dbg !17264
  br i1 %345, label %cond.true1015, label %cond.false1047, !dbg !17264

cond.true1015:                                    ; preds = %cond.end1011
  %346 = load i32*, i32** %out, align 8, !dbg !17264
  %347 = bitcast i32* %346 to i64*, !dbg !17264
  %add.ptr1016 = getelementptr i64, i64* %347, i64 14, !dbg !17264
  %348 = load i64, i64* %add.ptr1016, align 8, !dbg !17264
  %and1017 = and i64 %348, 255, !dbg !17264
  %shl1018 = shl i64 %and1017, 56, !dbg !17264
  %349 = load i32*, i32** %out, align 8, !dbg !17264
  %350 = bitcast i32* %349 to i64*, !dbg !17264
  %add.ptr1019 = getelementptr i64, i64* %350, i64 14, !dbg !17264
  %351 = load i64, i64* %add.ptr1019, align 8, !dbg !17264
  %and1020 = and i64 %351, 65280, !dbg !17264
  %shl1021 = shl i64 %and1020, 40, !dbg !17264
  %or1022 = or i64 %shl1018, %shl1021, !dbg !17264
  %352 = load i32*, i32** %out, align 8, !dbg !17264
  %353 = bitcast i32* %352 to i64*, !dbg !17264
  %add.ptr1023 = getelementptr i64, i64* %353, i64 14, !dbg !17264
  %354 = load i64, i64* %add.ptr1023, align 8, !dbg !17264
  %and1024 = and i64 %354, 16711680, !dbg !17264
  %shl1025 = shl i64 %and1024, 24, !dbg !17264
  %or1026 = or i64 %or1022, %shl1025, !dbg !17264
  %355 = load i32*, i32** %out, align 8, !dbg !17264
  %356 = bitcast i32* %355 to i64*, !dbg !17264
  %add.ptr1027 = getelementptr i64, i64* %356, i64 14, !dbg !17264
  %357 = load i64, i64* %add.ptr1027, align 8, !dbg !17264
  %and1028 = and i64 %357, 4278190080, !dbg !17264
  %shl1029 = shl i64 %and1028, 8, !dbg !17264
  %or1030 = or i64 %or1026, %shl1029, !dbg !17264
  %358 = load i32*, i32** %out, align 8, !dbg !17264
  %359 = bitcast i32* %358 to i64*, !dbg !17264
  %add.ptr1031 = getelementptr i64, i64* %359, i64 14, !dbg !17264
  %360 = load i64, i64* %add.ptr1031, align 8, !dbg !17264
  %and1032 = and i64 %360, 1095216660480, !dbg !17264
  %shr1033 = lshr i64 %and1032, 8, !dbg !17264
  %or1034 = or i64 %or1030, %shr1033, !dbg !17264
  %361 = load i32*, i32** %out, align 8, !dbg !17264
  %362 = bitcast i32* %361 to i64*, !dbg !17264
  %add.ptr1035 = getelementptr i64, i64* %362, i64 14, !dbg !17264
  %363 = load i64, i64* %add.ptr1035, align 8, !dbg !17264
  %and1036 = and i64 %363, 280375465082880, !dbg !17264
  %shr1037 = lshr i64 %and1036, 24, !dbg !17264
  %or1038 = or i64 %or1034, %shr1037, !dbg !17264
  %364 = load i32*, i32** %out, align 8, !dbg !17264
  %365 = bitcast i32* %364 to i64*, !dbg !17264
  %add.ptr1039 = getelementptr i64, i64* %365, i64 14, !dbg !17264
  %366 = load i64, i64* %add.ptr1039, align 8, !dbg !17264
  %and1040 = and i64 %366, 71776119061217280, !dbg !17264
  %shr1041 = lshr i64 %and1040, 40, !dbg !17264
  %or1042 = or i64 %or1038, %shr1041, !dbg !17264
  %367 = load i32*, i32** %out, align 8, !dbg !17264
  %368 = bitcast i32* %367 to i64*, !dbg !17264
  %add.ptr1043 = getelementptr i64, i64* %368, i64 14, !dbg !17264
  %369 = load i64, i64* %add.ptr1043, align 8, !dbg !17264
  %and1044 = and i64 %369, -72057594037927936, !dbg !17264
  %shr1045 = lshr i64 %and1044, 56, !dbg !17264
  %or1046 = or i64 %or1042, %shr1045, !dbg !17264
  br label %cond.end1050, !dbg !17264

cond.false1047:                                   ; preds = %cond.end1011
  %370 = load i32*, i32** %out, align 8, !dbg !17264
  %371 = bitcast i32* %370 to i64*, !dbg !17264
  %add.ptr1048 = getelementptr i64, i64* %371, i64 14, !dbg !17264
  %372 = load i64, i64* %add.ptr1048, align 8, !dbg !17264
  %call1049 = call i64 @__fswab64(i64 %372) #10, !dbg !17264
  br label %cond.end1050, !dbg !17264

cond.end1050:                                     ; preds = %cond.false1047, %cond.true1015
  %cond1051 = phi i64 [ %or1046, %cond.true1015 ], [ %call1049, %cond.false1047 ], !dbg !17264
  %add1052 = add i64 %add1013, %cond1051, !dbg !17265
  %373 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17266
  %rx_packets = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %373, i32 0, i32 0, !dbg !17267
  store i64 %add1052, i64* %rx_packets, align 8, !dbg !17268
  %374 = load i32*, i32** %out, align 8, !dbg !17269
  %375 = bitcast i32* %374 to i64*, !dbg !17269
  %add.ptr1053 = getelementptr i64, i64* %375, i64 19, !dbg !17269
  %376 = load i64, i64* %add.ptr1053, align 8, !dbg !17269
  %377 = call i1 @llvm.is.constant.i64(i64 %376), !dbg !17269
  br i1 %377, label %cond.true1054, label %cond.false1086, !dbg !17269

cond.true1054:                                    ; preds = %cond.end1050
  %378 = load i32*, i32** %out, align 8, !dbg !17269
  %379 = bitcast i32* %378 to i64*, !dbg !17269
  %add.ptr1055 = getelementptr i64, i64* %379, i64 19, !dbg !17269
  %380 = load i64, i64* %add.ptr1055, align 8, !dbg !17269
  %and1056 = and i64 %380, 255, !dbg !17269
  %shl1057 = shl i64 %and1056, 56, !dbg !17269
  %381 = load i32*, i32** %out, align 8, !dbg !17269
  %382 = bitcast i32* %381 to i64*, !dbg !17269
  %add.ptr1058 = getelementptr i64, i64* %382, i64 19, !dbg !17269
  %383 = load i64, i64* %add.ptr1058, align 8, !dbg !17269
  %and1059 = and i64 %383, 65280, !dbg !17269
  %shl1060 = shl i64 %and1059, 40, !dbg !17269
  %or1061 = or i64 %shl1057, %shl1060, !dbg !17269
  %384 = load i32*, i32** %out, align 8, !dbg !17269
  %385 = bitcast i32* %384 to i64*, !dbg !17269
  %add.ptr1062 = getelementptr i64, i64* %385, i64 19, !dbg !17269
  %386 = load i64, i64* %add.ptr1062, align 8, !dbg !17269
  %and1063 = and i64 %386, 16711680, !dbg !17269
  %shl1064 = shl i64 %and1063, 24, !dbg !17269
  %or1065 = or i64 %or1061, %shl1064, !dbg !17269
  %387 = load i32*, i32** %out, align 8, !dbg !17269
  %388 = bitcast i32* %387 to i64*, !dbg !17269
  %add.ptr1066 = getelementptr i64, i64* %388, i64 19, !dbg !17269
  %389 = load i64, i64* %add.ptr1066, align 8, !dbg !17269
  %and1067 = and i64 %389, 4278190080, !dbg !17269
  %shl1068 = shl i64 %and1067, 8, !dbg !17269
  %or1069 = or i64 %or1065, %shl1068, !dbg !17269
  %390 = load i32*, i32** %out, align 8, !dbg !17269
  %391 = bitcast i32* %390 to i64*, !dbg !17269
  %add.ptr1070 = getelementptr i64, i64* %391, i64 19, !dbg !17269
  %392 = load i64, i64* %add.ptr1070, align 8, !dbg !17269
  %and1071 = and i64 %392, 1095216660480, !dbg !17269
  %shr1072 = lshr i64 %and1071, 8, !dbg !17269
  %or1073 = or i64 %or1069, %shr1072, !dbg !17269
  %393 = load i32*, i32** %out, align 8, !dbg !17269
  %394 = bitcast i32* %393 to i64*, !dbg !17269
  %add.ptr1074 = getelementptr i64, i64* %394, i64 19, !dbg !17269
  %395 = load i64, i64* %add.ptr1074, align 8, !dbg !17269
  %and1075 = and i64 %395, 280375465082880, !dbg !17269
  %shr1076 = lshr i64 %and1075, 24, !dbg !17269
  %or1077 = or i64 %or1073, %shr1076, !dbg !17269
  %396 = load i32*, i32** %out, align 8, !dbg !17269
  %397 = bitcast i32* %396 to i64*, !dbg !17269
  %add.ptr1078 = getelementptr i64, i64* %397, i64 19, !dbg !17269
  %398 = load i64, i64* %add.ptr1078, align 8, !dbg !17269
  %and1079 = and i64 %398, 71776119061217280, !dbg !17269
  %shr1080 = lshr i64 %and1079, 40, !dbg !17269
  %or1081 = or i64 %or1077, %shr1080, !dbg !17269
  %399 = load i32*, i32** %out, align 8, !dbg !17269
  %400 = bitcast i32* %399 to i64*, !dbg !17269
  %add.ptr1082 = getelementptr i64, i64* %400, i64 19, !dbg !17269
  %401 = load i64, i64* %add.ptr1082, align 8, !dbg !17269
  %and1083 = and i64 %401, -72057594037927936, !dbg !17269
  %shr1084 = lshr i64 %and1083, 56, !dbg !17269
  %or1085 = or i64 %or1081, %shr1084, !dbg !17269
  br label %cond.end1089, !dbg !17269

cond.false1086:                                   ; preds = %cond.end1050
  %402 = load i32*, i32** %out, align 8, !dbg !17269
  %403 = bitcast i32* %402 to i64*, !dbg !17269
  %add.ptr1087 = getelementptr i64, i64* %403, i64 19, !dbg !17269
  %404 = load i64, i64* %add.ptr1087, align 8, !dbg !17269
  %call1088 = call i64 @__fswab64(i64 %404) #10, !dbg !17269
  br label %cond.end1089, !dbg !17269

cond.end1089:                                     ; preds = %cond.false1086, %cond.true1054
  %cond1090 = phi i64 [ %or1085, %cond.true1054 ], [ %call1088, %cond.false1086 ], !dbg !17269
  %405 = load i32*, i32** %out, align 8, !dbg !17270
  %406 = bitcast i32* %405 to i64*, !dbg !17270
  %add.ptr1091 = getelementptr i64, i64* %406, i64 7, !dbg !17270
  %407 = load i64, i64* %add.ptr1091, align 8, !dbg !17270
  %408 = call i1 @llvm.is.constant.i64(i64 %407), !dbg !17270
  br i1 %408, label %cond.true1092, label %cond.false1124, !dbg !17270

cond.true1092:                                    ; preds = %cond.end1089
  %409 = load i32*, i32** %out, align 8, !dbg !17270
  %410 = bitcast i32* %409 to i64*, !dbg !17270
  %add.ptr1093 = getelementptr i64, i64* %410, i64 7, !dbg !17270
  %411 = load i64, i64* %add.ptr1093, align 8, !dbg !17270
  %and1094 = and i64 %411, 255, !dbg !17270
  %shl1095 = shl i64 %and1094, 56, !dbg !17270
  %412 = load i32*, i32** %out, align 8, !dbg !17270
  %413 = bitcast i32* %412 to i64*, !dbg !17270
  %add.ptr1096 = getelementptr i64, i64* %413, i64 7, !dbg !17270
  %414 = load i64, i64* %add.ptr1096, align 8, !dbg !17270
  %and1097 = and i64 %414, 65280, !dbg !17270
  %shl1098 = shl i64 %and1097, 40, !dbg !17270
  %or1099 = or i64 %shl1095, %shl1098, !dbg !17270
  %415 = load i32*, i32** %out, align 8, !dbg !17270
  %416 = bitcast i32* %415 to i64*, !dbg !17270
  %add.ptr1100 = getelementptr i64, i64* %416, i64 7, !dbg !17270
  %417 = load i64, i64* %add.ptr1100, align 8, !dbg !17270
  %and1101 = and i64 %417, 16711680, !dbg !17270
  %shl1102 = shl i64 %and1101, 24, !dbg !17270
  %or1103 = or i64 %or1099, %shl1102, !dbg !17270
  %418 = load i32*, i32** %out, align 8, !dbg !17270
  %419 = bitcast i32* %418 to i64*, !dbg !17270
  %add.ptr1104 = getelementptr i64, i64* %419, i64 7, !dbg !17270
  %420 = load i64, i64* %add.ptr1104, align 8, !dbg !17270
  %and1105 = and i64 %420, 4278190080, !dbg !17270
  %shl1106 = shl i64 %and1105, 8, !dbg !17270
  %or1107 = or i64 %or1103, %shl1106, !dbg !17270
  %421 = load i32*, i32** %out, align 8, !dbg !17270
  %422 = bitcast i32* %421 to i64*, !dbg !17270
  %add.ptr1108 = getelementptr i64, i64* %422, i64 7, !dbg !17270
  %423 = load i64, i64* %add.ptr1108, align 8, !dbg !17270
  %and1109 = and i64 %423, 1095216660480, !dbg !17270
  %shr1110 = lshr i64 %and1109, 8, !dbg !17270
  %or1111 = or i64 %or1107, %shr1110, !dbg !17270
  %424 = load i32*, i32** %out, align 8, !dbg !17270
  %425 = bitcast i32* %424 to i64*, !dbg !17270
  %add.ptr1112 = getelementptr i64, i64* %425, i64 7, !dbg !17270
  %426 = load i64, i64* %add.ptr1112, align 8, !dbg !17270
  %and1113 = and i64 %426, 280375465082880, !dbg !17270
  %shr1114 = lshr i64 %and1113, 24, !dbg !17270
  %or1115 = or i64 %or1111, %shr1114, !dbg !17270
  %427 = load i32*, i32** %out, align 8, !dbg !17270
  %428 = bitcast i32* %427 to i64*, !dbg !17270
  %add.ptr1116 = getelementptr i64, i64* %428, i64 7, !dbg !17270
  %429 = load i64, i64* %add.ptr1116, align 8, !dbg !17270
  %and1117 = and i64 %429, 71776119061217280, !dbg !17270
  %shr1118 = lshr i64 %and1117, 40, !dbg !17270
  %or1119 = or i64 %or1115, %shr1118, !dbg !17270
  %430 = load i32*, i32** %out, align 8, !dbg !17270
  %431 = bitcast i32* %430 to i64*, !dbg !17270
  %add.ptr1120 = getelementptr i64, i64* %431, i64 7, !dbg !17270
  %432 = load i64, i64* %add.ptr1120, align 8, !dbg !17270
  %and1121 = and i64 %432, -72057594037927936, !dbg !17270
  %shr1122 = lshr i64 %and1121, 56, !dbg !17270
  %or1123 = or i64 %or1119, %shr1122, !dbg !17270
  br label %cond.end1127, !dbg !17270

cond.false1124:                                   ; preds = %cond.end1089
  %433 = load i32*, i32** %out, align 8, !dbg !17270
  %434 = bitcast i32* %433 to i64*, !dbg !17270
  %add.ptr1125 = getelementptr i64, i64* %434, i64 7, !dbg !17270
  %435 = load i64, i64* %add.ptr1125, align 8, !dbg !17270
  %call1126 = call i64 @__fswab64(i64 %435) #10, !dbg !17270
  br label %cond.end1127, !dbg !17270

cond.end1127:                                     ; preds = %cond.false1124, %cond.true1092
  %cond1128 = phi i64 [ %or1123, %cond.true1092 ], [ %call1126, %cond.false1124 ], !dbg !17270
  %add1129 = add i64 %cond1090, %cond1128, !dbg !17271
  %436 = load i32*, i32** %out, align 8, !dbg !17272
  %437 = bitcast i32* %436 to i64*, !dbg !17272
  %add.ptr1130 = getelementptr i64, i64* %437, i64 23, !dbg !17272
  %438 = load i64, i64* %add.ptr1130, align 8, !dbg !17272
  %439 = call i1 @llvm.is.constant.i64(i64 %438), !dbg !17272
  br i1 %439, label %cond.true1131, label %cond.false1163, !dbg !17272

cond.true1131:                                    ; preds = %cond.end1127
  %440 = load i32*, i32** %out, align 8, !dbg !17272
  %441 = bitcast i32* %440 to i64*, !dbg !17272
  %add.ptr1132 = getelementptr i64, i64* %441, i64 23, !dbg !17272
  %442 = load i64, i64* %add.ptr1132, align 8, !dbg !17272
  %and1133 = and i64 %442, 255, !dbg !17272
  %shl1134 = shl i64 %and1133, 56, !dbg !17272
  %443 = load i32*, i32** %out, align 8, !dbg !17272
  %444 = bitcast i32* %443 to i64*, !dbg !17272
  %add.ptr1135 = getelementptr i64, i64* %444, i64 23, !dbg !17272
  %445 = load i64, i64* %add.ptr1135, align 8, !dbg !17272
  %and1136 = and i64 %445, 65280, !dbg !17272
  %shl1137 = shl i64 %and1136, 40, !dbg !17272
  %or1138 = or i64 %shl1134, %shl1137, !dbg !17272
  %446 = load i32*, i32** %out, align 8, !dbg !17272
  %447 = bitcast i32* %446 to i64*, !dbg !17272
  %add.ptr1139 = getelementptr i64, i64* %447, i64 23, !dbg !17272
  %448 = load i64, i64* %add.ptr1139, align 8, !dbg !17272
  %and1140 = and i64 %448, 16711680, !dbg !17272
  %shl1141 = shl i64 %and1140, 24, !dbg !17272
  %or1142 = or i64 %or1138, %shl1141, !dbg !17272
  %449 = load i32*, i32** %out, align 8, !dbg !17272
  %450 = bitcast i32* %449 to i64*, !dbg !17272
  %add.ptr1143 = getelementptr i64, i64* %450, i64 23, !dbg !17272
  %451 = load i64, i64* %add.ptr1143, align 8, !dbg !17272
  %and1144 = and i64 %451, 4278190080, !dbg !17272
  %shl1145 = shl i64 %and1144, 8, !dbg !17272
  %or1146 = or i64 %or1142, %shl1145, !dbg !17272
  %452 = load i32*, i32** %out, align 8, !dbg !17272
  %453 = bitcast i32* %452 to i64*, !dbg !17272
  %add.ptr1147 = getelementptr i64, i64* %453, i64 23, !dbg !17272
  %454 = load i64, i64* %add.ptr1147, align 8, !dbg !17272
  %and1148 = and i64 %454, 1095216660480, !dbg !17272
  %shr1149 = lshr i64 %and1148, 8, !dbg !17272
  %or1150 = or i64 %or1146, %shr1149, !dbg !17272
  %455 = load i32*, i32** %out, align 8, !dbg !17272
  %456 = bitcast i32* %455 to i64*, !dbg !17272
  %add.ptr1151 = getelementptr i64, i64* %456, i64 23, !dbg !17272
  %457 = load i64, i64* %add.ptr1151, align 8, !dbg !17272
  %and1152 = and i64 %457, 280375465082880, !dbg !17272
  %shr1153 = lshr i64 %and1152, 24, !dbg !17272
  %or1154 = or i64 %or1150, %shr1153, !dbg !17272
  %458 = load i32*, i32** %out, align 8, !dbg !17272
  %459 = bitcast i32* %458 to i64*, !dbg !17272
  %add.ptr1155 = getelementptr i64, i64* %459, i64 23, !dbg !17272
  %460 = load i64, i64* %add.ptr1155, align 8, !dbg !17272
  %and1156 = and i64 %460, 71776119061217280, !dbg !17272
  %shr1157 = lshr i64 %and1156, 40, !dbg !17272
  %or1158 = or i64 %or1154, %shr1157, !dbg !17272
  %461 = load i32*, i32** %out, align 8, !dbg !17272
  %462 = bitcast i32* %461 to i64*, !dbg !17272
  %add.ptr1159 = getelementptr i64, i64* %462, i64 23, !dbg !17272
  %463 = load i64, i64* %add.ptr1159, align 8, !dbg !17272
  %and1160 = and i64 %463, -72057594037927936, !dbg !17272
  %shr1161 = lshr i64 %and1160, 56, !dbg !17272
  %or1162 = or i64 %or1158, %shr1161, !dbg !17272
  br label %cond.end1166, !dbg !17272

cond.false1163:                                   ; preds = %cond.end1127
  %464 = load i32*, i32** %out, align 8, !dbg !17272
  %465 = bitcast i32* %464 to i64*, !dbg !17272
  %add.ptr1164 = getelementptr i64, i64* %465, i64 23, !dbg !17272
  %466 = load i64, i64* %add.ptr1164, align 8, !dbg !17272
  %call1165 = call i64 @__fswab64(i64 %466) #10, !dbg !17272
  br label %cond.end1166, !dbg !17272

cond.end1166:                                     ; preds = %cond.false1163, %cond.true1131
  %cond1167 = phi i64 [ %or1162, %cond.true1131 ], [ %call1165, %cond.false1163 ], !dbg !17272
  %add1168 = add i64 %add1129, %cond1167, !dbg !17273
  %467 = load i32*, i32** %out, align 8, !dbg !17274
  %468 = bitcast i32* %467 to i64*, !dbg !17274
  %add.ptr1169 = getelementptr i64, i64* %468, i64 11, !dbg !17274
  %469 = load i64, i64* %add.ptr1169, align 8, !dbg !17274
  %470 = call i1 @llvm.is.constant.i64(i64 %469), !dbg !17274
  br i1 %470, label %cond.true1170, label %cond.false1202, !dbg !17274

cond.true1170:                                    ; preds = %cond.end1166
  %471 = load i32*, i32** %out, align 8, !dbg !17274
  %472 = bitcast i32* %471 to i64*, !dbg !17274
  %add.ptr1171 = getelementptr i64, i64* %472, i64 11, !dbg !17274
  %473 = load i64, i64* %add.ptr1171, align 8, !dbg !17274
  %and1172 = and i64 %473, 255, !dbg !17274
  %shl1173 = shl i64 %and1172, 56, !dbg !17274
  %474 = load i32*, i32** %out, align 8, !dbg !17274
  %475 = bitcast i32* %474 to i64*, !dbg !17274
  %add.ptr1174 = getelementptr i64, i64* %475, i64 11, !dbg !17274
  %476 = load i64, i64* %add.ptr1174, align 8, !dbg !17274
  %and1175 = and i64 %476, 65280, !dbg !17274
  %shl1176 = shl i64 %and1175, 40, !dbg !17274
  %or1177 = or i64 %shl1173, %shl1176, !dbg !17274
  %477 = load i32*, i32** %out, align 8, !dbg !17274
  %478 = bitcast i32* %477 to i64*, !dbg !17274
  %add.ptr1178 = getelementptr i64, i64* %478, i64 11, !dbg !17274
  %479 = load i64, i64* %add.ptr1178, align 8, !dbg !17274
  %and1179 = and i64 %479, 16711680, !dbg !17274
  %shl1180 = shl i64 %and1179, 24, !dbg !17274
  %or1181 = or i64 %or1177, %shl1180, !dbg !17274
  %480 = load i32*, i32** %out, align 8, !dbg !17274
  %481 = bitcast i32* %480 to i64*, !dbg !17274
  %add.ptr1182 = getelementptr i64, i64* %481, i64 11, !dbg !17274
  %482 = load i64, i64* %add.ptr1182, align 8, !dbg !17274
  %and1183 = and i64 %482, 4278190080, !dbg !17274
  %shl1184 = shl i64 %and1183, 8, !dbg !17274
  %or1185 = or i64 %or1181, %shl1184, !dbg !17274
  %483 = load i32*, i32** %out, align 8, !dbg !17274
  %484 = bitcast i32* %483 to i64*, !dbg !17274
  %add.ptr1186 = getelementptr i64, i64* %484, i64 11, !dbg !17274
  %485 = load i64, i64* %add.ptr1186, align 8, !dbg !17274
  %and1187 = and i64 %485, 1095216660480, !dbg !17274
  %shr1188 = lshr i64 %and1187, 8, !dbg !17274
  %or1189 = or i64 %or1185, %shr1188, !dbg !17274
  %486 = load i32*, i32** %out, align 8, !dbg !17274
  %487 = bitcast i32* %486 to i64*, !dbg !17274
  %add.ptr1190 = getelementptr i64, i64* %487, i64 11, !dbg !17274
  %488 = load i64, i64* %add.ptr1190, align 8, !dbg !17274
  %and1191 = and i64 %488, 280375465082880, !dbg !17274
  %shr1192 = lshr i64 %and1191, 24, !dbg !17274
  %or1193 = or i64 %or1189, %shr1192, !dbg !17274
  %489 = load i32*, i32** %out, align 8, !dbg !17274
  %490 = bitcast i32* %489 to i64*, !dbg !17274
  %add.ptr1194 = getelementptr i64, i64* %490, i64 11, !dbg !17274
  %491 = load i64, i64* %add.ptr1194, align 8, !dbg !17274
  %and1195 = and i64 %491, 71776119061217280, !dbg !17274
  %shr1196 = lshr i64 %and1195, 40, !dbg !17274
  %or1197 = or i64 %or1193, %shr1196, !dbg !17274
  %492 = load i32*, i32** %out, align 8, !dbg !17274
  %493 = bitcast i32* %492 to i64*, !dbg !17274
  %add.ptr1198 = getelementptr i64, i64* %493, i64 11, !dbg !17274
  %494 = load i64, i64* %add.ptr1198, align 8, !dbg !17274
  %and1199 = and i64 %494, -72057594037927936, !dbg !17274
  %shr1200 = lshr i64 %and1199, 56, !dbg !17274
  %or1201 = or i64 %or1197, %shr1200, !dbg !17274
  br label %cond.end1205, !dbg !17274

cond.false1202:                                   ; preds = %cond.end1166
  %495 = load i32*, i32** %out, align 8, !dbg !17274
  %496 = bitcast i32* %495 to i64*, !dbg !17274
  %add.ptr1203 = getelementptr i64, i64* %496, i64 11, !dbg !17274
  %497 = load i64, i64* %add.ptr1203, align 8, !dbg !17274
  %call1204 = call i64 @__fswab64(i64 %497) #10, !dbg !17274
  br label %cond.end1205, !dbg !17274

cond.end1205:                                     ; preds = %cond.false1202, %cond.true1170
  %cond1206 = phi i64 [ %or1201, %cond.true1170 ], [ %call1204, %cond.false1202 ], !dbg !17274
  %add1207 = add i64 %add1168, %cond1206, !dbg !17275
  %498 = load i32*, i32** %out, align 8, !dbg !17276
  %499 = bitcast i32* %498 to i64*, !dbg !17276
  %add.ptr1208 = getelementptr i64, i64* %499, i64 15, !dbg !17276
  %500 = load i64, i64* %add.ptr1208, align 8, !dbg !17276
  %501 = call i1 @llvm.is.constant.i64(i64 %500), !dbg !17276
  br i1 %501, label %cond.true1209, label %cond.false1241, !dbg !17276

cond.true1209:                                    ; preds = %cond.end1205
  %502 = load i32*, i32** %out, align 8, !dbg !17276
  %503 = bitcast i32* %502 to i64*, !dbg !17276
  %add.ptr1210 = getelementptr i64, i64* %503, i64 15, !dbg !17276
  %504 = load i64, i64* %add.ptr1210, align 8, !dbg !17276
  %and1211 = and i64 %504, 255, !dbg !17276
  %shl1212 = shl i64 %and1211, 56, !dbg !17276
  %505 = load i32*, i32** %out, align 8, !dbg !17276
  %506 = bitcast i32* %505 to i64*, !dbg !17276
  %add.ptr1213 = getelementptr i64, i64* %506, i64 15, !dbg !17276
  %507 = load i64, i64* %add.ptr1213, align 8, !dbg !17276
  %and1214 = and i64 %507, 65280, !dbg !17276
  %shl1215 = shl i64 %and1214, 40, !dbg !17276
  %or1216 = or i64 %shl1212, %shl1215, !dbg !17276
  %508 = load i32*, i32** %out, align 8, !dbg !17276
  %509 = bitcast i32* %508 to i64*, !dbg !17276
  %add.ptr1217 = getelementptr i64, i64* %509, i64 15, !dbg !17276
  %510 = load i64, i64* %add.ptr1217, align 8, !dbg !17276
  %and1218 = and i64 %510, 16711680, !dbg !17276
  %shl1219 = shl i64 %and1218, 24, !dbg !17276
  %or1220 = or i64 %or1216, %shl1219, !dbg !17276
  %511 = load i32*, i32** %out, align 8, !dbg !17276
  %512 = bitcast i32* %511 to i64*, !dbg !17276
  %add.ptr1221 = getelementptr i64, i64* %512, i64 15, !dbg !17276
  %513 = load i64, i64* %add.ptr1221, align 8, !dbg !17276
  %and1222 = and i64 %513, 4278190080, !dbg !17276
  %shl1223 = shl i64 %and1222, 8, !dbg !17276
  %or1224 = or i64 %or1220, %shl1223, !dbg !17276
  %514 = load i32*, i32** %out, align 8, !dbg !17276
  %515 = bitcast i32* %514 to i64*, !dbg !17276
  %add.ptr1225 = getelementptr i64, i64* %515, i64 15, !dbg !17276
  %516 = load i64, i64* %add.ptr1225, align 8, !dbg !17276
  %and1226 = and i64 %516, 1095216660480, !dbg !17276
  %shr1227 = lshr i64 %and1226, 8, !dbg !17276
  %or1228 = or i64 %or1224, %shr1227, !dbg !17276
  %517 = load i32*, i32** %out, align 8, !dbg !17276
  %518 = bitcast i32* %517 to i64*, !dbg !17276
  %add.ptr1229 = getelementptr i64, i64* %518, i64 15, !dbg !17276
  %519 = load i64, i64* %add.ptr1229, align 8, !dbg !17276
  %and1230 = and i64 %519, 280375465082880, !dbg !17276
  %shr1231 = lshr i64 %and1230, 24, !dbg !17276
  %or1232 = or i64 %or1228, %shr1231, !dbg !17276
  %520 = load i32*, i32** %out, align 8, !dbg !17276
  %521 = bitcast i32* %520 to i64*, !dbg !17276
  %add.ptr1233 = getelementptr i64, i64* %521, i64 15, !dbg !17276
  %522 = load i64, i64* %add.ptr1233, align 8, !dbg !17276
  %and1234 = and i64 %522, 71776119061217280, !dbg !17276
  %shr1235 = lshr i64 %and1234, 40, !dbg !17276
  %or1236 = or i64 %or1232, %shr1235, !dbg !17276
  %523 = load i32*, i32** %out, align 8, !dbg !17276
  %524 = bitcast i32* %523 to i64*, !dbg !17276
  %add.ptr1237 = getelementptr i64, i64* %524, i64 15, !dbg !17276
  %525 = load i64, i64* %add.ptr1237, align 8, !dbg !17276
  %and1238 = and i64 %525, -72057594037927936, !dbg !17276
  %shr1239 = lshr i64 %and1238, 56, !dbg !17276
  %or1240 = or i64 %or1236, %shr1239, !dbg !17276
  br label %cond.end1244, !dbg !17276

cond.false1241:                                   ; preds = %cond.end1205
  %526 = load i32*, i32** %out, align 8, !dbg !17276
  %527 = bitcast i32* %526 to i64*, !dbg !17276
  %add.ptr1242 = getelementptr i64, i64* %527, i64 15, !dbg !17276
  %528 = load i64, i64* %add.ptr1242, align 8, !dbg !17276
  %call1243 = call i64 @__fswab64(i64 %528) #10, !dbg !17276
  br label %cond.end1244, !dbg !17276

cond.end1244:                                     ; preds = %cond.false1241, %cond.true1209
  %cond1245 = phi i64 [ %or1240, %cond.true1209 ], [ %call1243, %cond.false1241 ], !dbg !17276
  %add1246 = add i64 %add1207, %cond1245, !dbg !17277
  %529 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17278
  %rx_bytes = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %529, i32 0, i32 2, !dbg !17279
  store i64 %add1246, i64* %rx_bytes, align 8, !dbg !17280
  %530 = load i32*, i32** %out, align 8, !dbg !17281
  %531 = bitcast i32* %530 to i64*, !dbg !17281
  %add.ptr1247 = getelementptr i64, i64* %531, i64 20, !dbg !17281
  %532 = load i64, i64* %add.ptr1247, align 8, !dbg !17281
  %533 = call i1 @llvm.is.constant.i64(i64 %532), !dbg !17281
  br i1 %533, label %cond.true1248, label %cond.false1280, !dbg !17281

cond.true1248:                                    ; preds = %cond.end1244
  %534 = load i32*, i32** %out, align 8, !dbg !17281
  %535 = bitcast i32* %534 to i64*, !dbg !17281
  %add.ptr1249 = getelementptr i64, i64* %535, i64 20, !dbg !17281
  %536 = load i64, i64* %add.ptr1249, align 8, !dbg !17281
  %and1250 = and i64 %536, 255, !dbg !17281
  %shl1251 = shl i64 %and1250, 56, !dbg !17281
  %537 = load i32*, i32** %out, align 8, !dbg !17281
  %538 = bitcast i32* %537 to i64*, !dbg !17281
  %add.ptr1252 = getelementptr i64, i64* %538, i64 20, !dbg !17281
  %539 = load i64, i64* %add.ptr1252, align 8, !dbg !17281
  %and1253 = and i64 %539, 65280, !dbg !17281
  %shl1254 = shl i64 %and1253, 40, !dbg !17281
  %or1255 = or i64 %shl1251, %shl1254, !dbg !17281
  %540 = load i32*, i32** %out, align 8, !dbg !17281
  %541 = bitcast i32* %540 to i64*, !dbg !17281
  %add.ptr1256 = getelementptr i64, i64* %541, i64 20, !dbg !17281
  %542 = load i64, i64* %add.ptr1256, align 8, !dbg !17281
  %and1257 = and i64 %542, 16711680, !dbg !17281
  %shl1258 = shl i64 %and1257, 24, !dbg !17281
  %or1259 = or i64 %or1255, %shl1258, !dbg !17281
  %543 = load i32*, i32** %out, align 8, !dbg !17281
  %544 = bitcast i32* %543 to i64*, !dbg !17281
  %add.ptr1260 = getelementptr i64, i64* %544, i64 20, !dbg !17281
  %545 = load i64, i64* %add.ptr1260, align 8, !dbg !17281
  %and1261 = and i64 %545, 4278190080, !dbg !17281
  %shl1262 = shl i64 %and1261, 8, !dbg !17281
  %or1263 = or i64 %or1259, %shl1262, !dbg !17281
  %546 = load i32*, i32** %out, align 8, !dbg !17281
  %547 = bitcast i32* %546 to i64*, !dbg !17281
  %add.ptr1264 = getelementptr i64, i64* %547, i64 20, !dbg !17281
  %548 = load i64, i64* %add.ptr1264, align 8, !dbg !17281
  %and1265 = and i64 %548, 1095216660480, !dbg !17281
  %shr1266 = lshr i64 %and1265, 8, !dbg !17281
  %or1267 = or i64 %or1263, %shr1266, !dbg !17281
  %549 = load i32*, i32** %out, align 8, !dbg !17281
  %550 = bitcast i32* %549 to i64*, !dbg !17281
  %add.ptr1268 = getelementptr i64, i64* %550, i64 20, !dbg !17281
  %551 = load i64, i64* %add.ptr1268, align 8, !dbg !17281
  %and1269 = and i64 %551, 280375465082880, !dbg !17281
  %shr1270 = lshr i64 %and1269, 24, !dbg !17281
  %or1271 = or i64 %or1267, %shr1270, !dbg !17281
  %552 = load i32*, i32** %out, align 8, !dbg !17281
  %553 = bitcast i32* %552 to i64*, !dbg !17281
  %add.ptr1272 = getelementptr i64, i64* %553, i64 20, !dbg !17281
  %554 = load i64, i64* %add.ptr1272, align 8, !dbg !17281
  %and1273 = and i64 %554, 71776119061217280, !dbg !17281
  %shr1274 = lshr i64 %and1273, 40, !dbg !17281
  %or1275 = or i64 %or1271, %shr1274, !dbg !17281
  %555 = load i32*, i32** %out, align 8, !dbg !17281
  %556 = bitcast i32* %555 to i64*, !dbg !17281
  %add.ptr1276 = getelementptr i64, i64* %556, i64 20, !dbg !17281
  %557 = load i64, i64* %add.ptr1276, align 8, !dbg !17281
  %and1277 = and i64 %557, -72057594037927936, !dbg !17281
  %shr1278 = lshr i64 %and1277, 56, !dbg !17281
  %or1279 = or i64 %or1275, %shr1278, !dbg !17281
  br label %cond.end1283, !dbg !17281

cond.false1280:                                   ; preds = %cond.end1244
  %558 = load i32*, i32** %out, align 8, !dbg !17281
  %559 = bitcast i32* %558 to i64*, !dbg !17281
  %add.ptr1281 = getelementptr i64, i64* %559, i64 20, !dbg !17281
  %560 = load i64, i64* %add.ptr1281, align 8, !dbg !17281
  %call1282 = call i64 @__fswab64(i64 %560) #10, !dbg !17281
  br label %cond.end1283, !dbg !17281

cond.end1283:                                     ; preds = %cond.false1280, %cond.true1248
  %cond1284 = phi i64 [ %or1279, %cond.true1248 ], [ %call1282, %cond.false1280 ], !dbg !17281
  %561 = load i32*, i32** %out, align 8, !dbg !17282
  %562 = bitcast i32* %561 to i64*, !dbg !17282
  %add.ptr1285 = getelementptr i64, i64* %562, i64 8, !dbg !17282
  %563 = load i64, i64* %add.ptr1285, align 8, !dbg !17282
  %564 = call i1 @llvm.is.constant.i64(i64 %563), !dbg !17282
  br i1 %564, label %cond.true1286, label %cond.false1318, !dbg !17282

cond.true1286:                                    ; preds = %cond.end1283
  %565 = load i32*, i32** %out, align 8, !dbg !17282
  %566 = bitcast i32* %565 to i64*, !dbg !17282
  %add.ptr1287 = getelementptr i64, i64* %566, i64 8, !dbg !17282
  %567 = load i64, i64* %add.ptr1287, align 8, !dbg !17282
  %and1288 = and i64 %567, 255, !dbg !17282
  %shl1289 = shl i64 %and1288, 56, !dbg !17282
  %568 = load i32*, i32** %out, align 8, !dbg !17282
  %569 = bitcast i32* %568 to i64*, !dbg !17282
  %add.ptr1290 = getelementptr i64, i64* %569, i64 8, !dbg !17282
  %570 = load i64, i64* %add.ptr1290, align 8, !dbg !17282
  %and1291 = and i64 %570, 65280, !dbg !17282
  %shl1292 = shl i64 %and1291, 40, !dbg !17282
  %or1293 = or i64 %shl1289, %shl1292, !dbg !17282
  %571 = load i32*, i32** %out, align 8, !dbg !17282
  %572 = bitcast i32* %571 to i64*, !dbg !17282
  %add.ptr1294 = getelementptr i64, i64* %572, i64 8, !dbg !17282
  %573 = load i64, i64* %add.ptr1294, align 8, !dbg !17282
  %and1295 = and i64 %573, 16711680, !dbg !17282
  %shl1296 = shl i64 %and1295, 24, !dbg !17282
  %or1297 = or i64 %or1293, %shl1296, !dbg !17282
  %574 = load i32*, i32** %out, align 8, !dbg !17282
  %575 = bitcast i32* %574 to i64*, !dbg !17282
  %add.ptr1298 = getelementptr i64, i64* %575, i64 8, !dbg !17282
  %576 = load i64, i64* %add.ptr1298, align 8, !dbg !17282
  %and1299 = and i64 %576, 4278190080, !dbg !17282
  %shl1300 = shl i64 %and1299, 8, !dbg !17282
  %or1301 = or i64 %or1297, %shl1300, !dbg !17282
  %577 = load i32*, i32** %out, align 8, !dbg !17282
  %578 = bitcast i32* %577 to i64*, !dbg !17282
  %add.ptr1302 = getelementptr i64, i64* %578, i64 8, !dbg !17282
  %579 = load i64, i64* %add.ptr1302, align 8, !dbg !17282
  %and1303 = and i64 %579, 1095216660480, !dbg !17282
  %shr1304 = lshr i64 %and1303, 8, !dbg !17282
  %or1305 = or i64 %or1301, %shr1304, !dbg !17282
  %580 = load i32*, i32** %out, align 8, !dbg !17282
  %581 = bitcast i32* %580 to i64*, !dbg !17282
  %add.ptr1306 = getelementptr i64, i64* %581, i64 8, !dbg !17282
  %582 = load i64, i64* %add.ptr1306, align 8, !dbg !17282
  %and1307 = and i64 %582, 280375465082880, !dbg !17282
  %shr1308 = lshr i64 %and1307, 24, !dbg !17282
  %or1309 = or i64 %or1305, %shr1308, !dbg !17282
  %583 = load i32*, i32** %out, align 8, !dbg !17282
  %584 = bitcast i32* %583 to i64*, !dbg !17282
  %add.ptr1310 = getelementptr i64, i64* %584, i64 8, !dbg !17282
  %585 = load i64, i64* %add.ptr1310, align 8, !dbg !17282
  %and1311 = and i64 %585, 71776119061217280, !dbg !17282
  %shr1312 = lshr i64 %and1311, 40, !dbg !17282
  %or1313 = or i64 %or1309, %shr1312, !dbg !17282
  %586 = load i32*, i32** %out, align 8, !dbg !17282
  %587 = bitcast i32* %586 to i64*, !dbg !17282
  %add.ptr1314 = getelementptr i64, i64* %587, i64 8, !dbg !17282
  %588 = load i64, i64* %add.ptr1314, align 8, !dbg !17282
  %and1315 = and i64 %588, -72057594037927936, !dbg !17282
  %shr1316 = lshr i64 %and1315, 56, !dbg !17282
  %or1317 = or i64 %or1313, %shr1316, !dbg !17282
  br label %cond.end1321, !dbg !17282

cond.false1318:                                   ; preds = %cond.end1283
  %589 = load i32*, i32** %out, align 8, !dbg !17282
  %590 = bitcast i32* %589 to i64*, !dbg !17282
  %add.ptr1319 = getelementptr i64, i64* %590, i64 8, !dbg !17282
  %591 = load i64, i64* %add.ptr1319, align 8, !dbg !17282
  %call1320 = call i64 @__fswab64(i64 %591) #10, !dbg !17282
  br label %cond.end1321, !dbg !17282

cond.end1321:                                     ; preds = %cond.false1318, %cond.true1286
  %cond1322 = phi i64 [ %or1317, %cond.true1286 ], [ %call1320, %cond.false1318 ], !dbg !17282
  %add1323 = add i64 %cond1284, %cond1322, !dbg !17283
  %592 = load i32*, i32** %out, align 8, !dbg !17284
  %593 = bitcast i32* %592 to i64*, !dbg !17284
  %add.ptr1324 = getelementptr i64, i64* %593, i64 24, !dbg !17284
  %594 = load i64, i64* %add.ptr1324, align 8, !dbg !17284
  %595 = call i1 @llvm.is.constant.i64(i64 %594), !dbg !17284
  br i1 %595, label %cond.true1325, label %cond.false1357, !dbg !17284

cond.true1325:                                    ; preds = %cond.end1321
  %596 = load i32*, i32** %out, align 8, !dbg !17284
  %597 = bitcast i32* %596 to i64*, !dbg !17284
  %add.ptr1326 = getelementptr i64, i64* %597, i64 24, !dbg !17284
  %598 = load i64, i64* %add.ptr1326, align 8, !dbg !17284
  %and1327 = and i64 %598, 255, !dbg !17284
  %shl1328 = shl i64 %and1327, 56, !dbg !17284
  %599 = load i32*, i32** %out, align 8, !dbg !17284
  %600 = bitcast i32* %599 to i64*, !dbg !17284
  %add.ptr1329 = getelementptr i64, i64* %600, i64 24, !dbg !17284
  %601 = load i64, i64* %add.ptr1329, align 8, !dbg !17284
  %and1330 = and i64 %601, 65280, !dbg !17284
  %shl1331 = shl i64 %and1330, 40, !dbg !17284
  %or1332 = or i64 %shl1328, %shl1331, !dbg !17284
  %602 = load i32*, i32** %out, align 8, !dbg !17284
  %603 = bitcast i32* %602 to i64*, !dbg !17284
  %add.ptr1333 = getelementptr i64, i64* %603, i64 24, !dbg !17284
  %604 = load i64, i64* %add.ptr1333, align 8, !dbg !17284
  %and1334 = and i64 %604, 16711680, !dbg !17284
  %shl1335 = shl i64 %and1334, 24, !dbg !17284
  %or1336 = or i64 %or1332, %shl1335, !dbg !17284
  %605 = load i32*, i32** %out, align 8, !dbg !17284
  %606 = bitcast i32* %605 to i64*, !dbg !17284
  %add.ptr1337 = getelementptr i64, i64* %606, i64 24, !dbg !17284
  %607 = load i64, i64* %add.ptr1337, align 8, !dbg !17284
  %and1338 = and i64 %607, 4278190080, !dbg !17284
  %shl1339 = shl i64 %and1338, 8, !dbg !17284
  %or1340 = or i64 %or1336, %shl1339, !dbg !17284
  %608 = load i32*, i32** %out, align 8, !dbg !17284
  %609 = bitcast i32* %608 to i64*, !dbg !17284
  %add.ptr1341 = getelementptr i64, i64* %609, i64 24, !dbg !17284
  %610 = load i64, i64* %add.ptr1341, align 8, !dbg !17284
  %and1342 = and i64 %610, 1095216660480, !dbg !17284
  %shr1343 = lshr i64 %and1342, 8, !dbg !17284
  %or1344 = or i64 %or1340, %shr1343, !dbg !17284
  %611 = load i32*, i32** %out, align 8, !dbg !17284
  %612 = bitcast i32* %611 to i64*, !dbg !17284
  %add.ptr1345 = getelementptr i64, i64* %612, i64 24, !dbg !17284
  %613 = load i64, i64* %add.ptr1345, align 8, !dbg !17284
  %and1346 = and i64 %613, 280375465082880, !dbg !17284
  %shr1347 = lshr i64 %and1346, 24, !dbg !17284
  %or1348 = or i64 %or1344, %shr1347, !dbg !17284
  %614 = load i32*, i32** %out, align 8, !dbg !17284
  %615 = bitcast i32* %614 to i64*, !dbg !17284
  %add.ptr1349 = getelementptr i64, i64* %615, i64 24, !dbg !17284
  %616 = load i64, i64* %add.ptr1349, align 8, !dbg !17284
  %and1350 = and i64 %616, 71776119061217280, !dbg !17284
  %shr1351 = lshr i64 %and1350, 40, !dbg !17284
  %or1352 = or i64 %or1348, %shr1351, !dbg !17284
  %617 = load i32*, i32** %out, align 8, !dbg !17284
  %618 = bitcast i32* %617 to i64*, !dbg !17284
  %add.ptr1353 = getelementptr i64, i64* %618, i64 24, !dbg !17284
  %619 = load i64, i64* %add.ptr1353, align 8, !dbg !17284
  %and1354 = and i64 %619, -72057594037927936, !dbg !17284
  %shr1355 = lshr i64 %and1354, 56, !dbg !17284
  %or1356 = or i64 %or1352, %shr1355, !dbg !17284
  br label %cond.end1360, !dbg !17284

cond.false1357:                                   ; preds = %cond.end1321
  %620 = load i32*, i32** %out, align 8, !dbg !17284
  %621 = bitcast i32* %620 to i64*, !dbg !17284
  %add.ptr1358 = getelementptr i64, i64* %621, i64 24, !dbg !17284
  %622 = load i64, i64* %add.ptr1358, align 8, !dbg !17284
  %call1359 = call i64 @__fswab64(i64 %622) #10, !dbg !17284
  br label %cond.end1360, !dbg !17284

cond.end1360:                                     ; preds = %cond.false1357, %cond.true1325
  %cond1361 = phi i64 [ %or1356, %cond.true1325 ], [ %call1359, %cond.false1357 ], !dbg !17284
  %add1362 = add i64 %add1323, %cond1361, !dbg !17285
  %623 = load i32*, i32** %out, align 8, !dbg !17286
  %624 = bitcast i32* %623 to i64*, !dbg !17286
  %add.ptr1363 = getelementptr i64, i64* %624, i64 12, !dbg !17286
  %625 = load i64, i64* %add.ptr1363, align 8, !dbg !17286
  %626 = call i1 @llvm.is.constant.i64(i64 %625), !dbg !17286
  br i1 %626, label %cond.true1364, label %cond.false1396, !dbg !17286

cond.true1364:                                    ; preds = %cond.end1360
  %627 = load i32*, i32** %out, align 8, !dbg !17286
  %628 = bitcast i32* %627 to i64*, !dbg !17286
  %add.ptr1365 = getelementptr i64, i64* %628, i64 12, !dbg !17286
  %629 = load i64, i64* %add.ptr1365, align 8, !dbg !17286
  %and1366 = and i64 %629, 255, !dbg !17286
  %shl1367 = shl i64 %and1366, 56, !dbg !17286
  %630 = load i32*, i32** %out, align 8, !dbg !17286
  %631 = bitcast i32* %630 to i64*, !dbg !17286
  %add.ptr1368 = getelementptr i64, i64* %631, i64 12, !dbg !17286
  %632 = load i64, i64* %add.ptr1368, align 8, !dbg !17286
  %and1369 = and i64 %632, 65280, !dbg !17286
  %shl1370 = shl i64 %and1369, 40, !dbg !17286
  %or1371 = or i64 %shl1367, %shl1370, !dbg !17286
  %633 = load i32*, i32** %out, align 8, !dbg !17286
  %634 = bitcast i32* %633 to i64*, !dbg !17286
  %add.ptr1372 = getelementptr i64, i64* %634, i64 12, !dbg !17286
  %635 = load i64, i64* %add.ptr1372, align 8, !dbg !17286
  %and1373 = and i64 %635, 16711680, !dbg !17286
  %shl1374 = shl i64 %and1373, 24, !dbg !17286
  %or1375 = or i64 %or1371, %shl1374, !dbg !17286
  %636 = load i32*, i32** %out, align 8, !dbg !17286
  %637 = bitcast i32* %636 to i64*, !dbg !17286
  %add.ptr1376 = getelementptr i64, i64* %637, i64 12, !dbg !17286
  %638 = load i64, i64* %add.ptr1376, align 8, !dbg !17286
  %and1377 = and i64 %638, 4278190080, !dbg !17286
  %shl1378 = shl i64 %and1377, 8, !dbg !17286
  %or1379 = or i64 %or1375, %shl1378, !dbg !17286
  %639 = load i32*, i32** %out, align 8, !dbg !17286
  %640 = bitcast i32* %639 to i64*, !dbg !17286
  %add.ptr1380 = getelementptr i64, i64* %640, i64 12, !dbg !17286
  %641 = load i64, i64* %add.ptr1380, align 8, !dbg !17286
  %and1381 = and i64 %641, 1095216660480, !dbg !17286
  %shr1382 = lshr i64 %and1381, 8, !dbg !17286
  %or1383 = or i64 %or1379, %shr1382, !dbg !17286
  %642 = load i32*, i32** %out, align 8, !dbg !17286
  %643 = bitcast i32* %642 to i64*, !dbg !17286
  %add.ptr1384 = getelementptr i64, i64* %643, i64 12, !dbg !17286
  %644 = load i64, i64* %add.ptr1384, align 8, !dbg !17286
  %and1385 = and i64 %644, 280375465082880, !dbg !17286
  %shr1386 = lshr i64 %and1385, 24, !dbg !17286
  %or1387 = or i64 %or1383, %shr1386, !dbg !17286
  %645 = load i32*, i32** %out, align 8, !dbg !17286
  %646 = bitcast i32* %645 to i64*, !dbg !17286
  %add.ptr1388 = getelementptr i64, i64* %646, i64 12, !dbg !17286
  %647 = load i64, i64* %add.ptr1388, align 8, !dbg !17286
  %and1389 = and i64 %647, 71776119061217280, !dbg !17286
  %shr1390 = lshr i64 %and1389, 40, !dbg !17286
  %or1391 = or i64 %or1387, %shr1390, !dbg !17286
  %648 = load i32*, i32** %out, align 8, !dbg !17286
  %649 = bitcast i32* %648 to i64*, !dbg !17286
  %add.ptr1392 = getelementptr i64, i64* %649, i64 12, !dbg !17286
  %650 = load i64, i64* %add.ptr1392, align 8, !dbg !17286
  %and1393 = and i64 %650, -72057594037927936, !dbg !17286
  %shr1394 = lshr i64 %and1393, 56, !dbg !17286
  %or1395 = or i64 %or1391, %shr1394, !dbg !17286
  br label %cond.end1399, !dbg !17286

cond.false1396:                                   ; preds = %cond.end1360
  %651 = load i32*, i32** %out, align 8, !dbg !17286
  %652 = bitcast i32* %651 to i64*, !dbg !17286
  %add.ptr1397 = getelementptr i64, i64* %652, i64 12, !dbg !17286
  %653 = load i64, i64* %add.ptr1397, align 8, !dbg !17286
  %call1398 = call i64 @__fswab64(i64 %653) #10, !dbg !17286
  br label %cond.end1399, !dbg !17286

cond.end1399:                                     ; preds = %cond.false1396, %cond.true1364
  %cond1400 = phi i64 [ %or1395, %cond.true1364 ], [ %call1398, %cond.false1396 ], !dbg !17286
  %add1401 = add i64 %add1362, %cond1400, !dbg !17287
  %654 = load i32*, i32** %out, align 8, !dbg !17288
  %655 = bitcast i32* %654 to i64*, !dbg !17288
  %add.ptr1402 = getelementptr i64, i64* %655, i64 16, !dbg !17288
  %656 = load i64, i64* %add.ptr1402, align 8, !dbg !17288
  %657 = call i1 @llvm.is.constant.i64(i64 %656), !dbg !17288
  br i1 %657, label %cond.true1403, label %cond.false1435, !dbg !17288

cond.true1403:                                    ; preds = %cond.end1399
  %658 = load i32*, i32** %out, align 8, !dbg !17288
  %659 = bitcast i32* %658 to i64*, !dbg !17288
  %add.ptr1404 = getelementptr i64, i64* %659, i64 16, !dbg !17288
  %660 = load i64, i64* %add.ptr1404, align 8, !dbg !17288
  %and1405 = and i64 %660, 255, !dbg !17288
  %shl1406 = shl i64 %and1405, 56, !dbg !17288
  %661 = load i32*, i32** %out, align 8, !dbg !17288
  %662 = bitcast i32* %661 to i64*, !dbg !17288
  %add.ptr1407 = getelementptr i64, i64* %662, i64 16, !dbg !17288
  %663 = load i64, i64* %add.ptr1407, align 8, !dbg !17288
  %and1408 = and i64 %663, 65280, !dbg !17288
  %shl1409 = shl i64 %and1408, 40, !dbg !17288
  %or1410 = or i64 %shl1406, %shl1409, !dbg !17288
  %664 = load i32*, i32** %out, align 8, !dbg !17288
  %665 = bitcast i32* %664 to i64*, !dbg !17288
  %add.ptr1411 = getelementptr i64, i64* %665, i64 16, !dbg !17288
  %666 = load i64, i64* %add.ptr1411, align 8, !dbg !17288
  %and1412 = and i64 %666, 16711680, !dbg !17288
  %shl1413 = shl i64 %and1412, 24, !dbg !17288
  %or1414 = or i64 %or1410, %shl1413, !dbg !17288
  %667 = load i32*, i32** %out, align 8, !dbg !17288
  %668 = bitcast i32* %667 to i64*, !dbg !17288
  %add.ptr1415 = getelementptr i64, i64* %668, i64 16, !dbg !17288
  %669 = load i64, i64* %add.ptr1415, align 8, !dbg !17288
  %and1416 = and i64 %669, 4278190080, !dbg !17288
  %shl1417 = shl i64 %and1416, 8, !dbg !17288
  %or1418 = or i64 %or1414, %shl1417, !dbg !17288
  %670 = load i32*, i32** %out, align 8, !dbg !17288
  %671 = bitcast i32* %670 to i64*, !dbg !17288
  %add.ptr1419 = getelementptr i64, i64* %671, i64 16, !dbg !17288
  %672 = load i64, i64* %add.ptr1419, align 8, !dbg !17288
  %and1420 = and i64 %672, 1095216660480, !dbg !17288
  %shr1421 = lshr i64 %and1420, 8, !dbg !17288
  %or1422 = or i64 %or1418, %shr1421, !dbg !17288
  %673 = load i32*, i32** %out, align 8, !dbg !17288
  %674 = bitcast i32* %673 to i64*, !dbg !17288
  %add.ptr1423 = getelementptr i64, i64* %674, i64 16, !dbg !17288
  %675 = load i64, i64* %add.ptr1423, align 8, !dbg !17288
  %and1424 = and i64 %675, 280375465082880, !dbg !17288
  %shr1425 = lshr i64 %and1424, 24, !dbg !17288
  %or1426 = or i64 %or1422, %shr1425, !dbg !17288
  %676 = load i32*, i32** %out, align 8, !dbg !17288
  %677 = bitcast i32* %676 to i64*, !dbg !17288
  %add.ptr1427 = getelementptr i64, i64* %677, i64 16, !dbg !17288
  %678 = load i64, i64* %add.ptr1427, align 8, !dbg !17288
  %and1428 = and i64 %678, 71776119061217280, !dbg !17288
  %shr1429 = lshr i64 %and1428, 40, !dbg !17288
  %or1430 = or i64 %or1426, %shr1429, !dbg !17288
  %679 = load i32*, i32** %out, align 8, !dbg !17288
  %680 = bitcast i32* %679 to i64*, !dbg !17288
  %add.ptr1431 = getelementptr i64, i64* %680, i64 16, !dbg !17288
  %681 = load i64, i64* %add.ptr1431, align 8, !dbg !17288
  %and1432 = and i64 %681, -72057594037927936, !dbg !17288
  %shr1433 = lshr i64 %and1432, 56, !dbg !17288
  %or1434 = or i64 %or1430, %shr1433, !dbg !17288
  br label %cond.end1438, !dbg !17288

cond.false1435:                                   ; preds = %cond.end1399
  %682 = load i32*, i32** %out, align 8, !dbg !17288
  %683 = bitcast i32* %682 to i64*, !dbg !17288
  %add.ptr1436 = getelementptr i64, i64* %683, i64 16, !dbg !17288
  %684 = load i64, i64* %add.ptr1436, align 8, !dbg !17288
  %call1437 = call i64 @__fswab64(i64 %684) #10, !dbg !17288
  br label %cond.end1438, !dbg !17288

cond.end1438:                                     ; preds = %cond.false1435, %cond.true1403
  %cond1439 = phi i64 [ %or1434, %cond.true1403 ], [ %call1437, %cond.false1435 ], !dbg !17288
  %add1440 = add i64 %add1401, %cond1439, !dbg !17289
  %685 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17290
  %tx_packets = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %685, i32 0, i32 1, !dbg !17291
  store i64 %add1440, i64* %tx_packets, align 8, !dbg !17292
  %686 = load i32*, i32** %out, align 8, !dbg !17293
  %687 = bitcast i32* %686 to i64*, !dbg !17293
  %add.ptr1441 = getelementptr i64, i64* %687, i64 21, !dbg !17293
  %688 = load i64, i64* %add.ptr1441, align 8, !dbg !17293
  %689 = call i1 @llvm.is.constant.i64(i64 %688), !dbg !17293
  br i1 %689, label %cond.true1442, label %cond.false1474, !dbg !17293

cond.true1442:                                    ; preds = %cond.end1438
  %690 = load i32*, i32** %out, align 8, !dbg !17293
  %691 = bitcast i32* %690 to i64*, !dbg !17293
  %add.ptr1443 = getelementptr i64, i64* %691, i64 21, !dbg !17293
  %692 = load i64, i64* %add.ptr1443, align 8, !dbg !17293
  %and1444 = and i64 %692, 255, !dbg !17293
  %shl1445 = shl i64 %and1444, 56, !dbg !17293
  %693 = load i32*, i32** %out, align 8, !dbg !17293
  %694 = bitcast i32* %693 to i64*, !dbg !17293
  %add.ptr1446 = getelementptr i64, i64* %694, i64 21, !dbg !17293
  %695 = load i64, i64* %add.ptr1446, align 8, !dbg !17293
  %and1447 = and i64 %695, 65280, !dbg !17293
  %shl1448 = shl i64 %and1447, 40, !dbg !17293
  %or1449 = or i64 %shl1445, %shl1448, !dbg !17293
  %696 = load i32*, i32** %out, align 8, !dbg !17293
  %697 = bitcast i32* %696 to i64*, !dbg !17293
  %add.ptr1450 = getelementptr i64, i64* %697, i64 21, !dbg !17293
  %698 = load i64, i64* %add.ptr1450, align 8, !dbg !17293
  %and1451 = and i64 %698, 16711680, !dbg !17293
  %shl1452 = shl i64 %and1451, 24, !dbg !17293
  %or1453 = or i64 %or1449, %shl1452, !dbg !17293
  %699 = load i32*, i32** %out, align 8, !dbg !17293
  %700 = bitcast i32* %699 to i64*, !dbg !17293
  %add.ptr1454 = getelementptr i64, i64* %700, i64 21, !dbg !17293
  %701 = load i64, i64* %add.ptr1454, align 8, !dbg !17293
  %and1455 = and i64 %701, 4278190080, !dbg !17293
  %shl1456 = shl i64 %and1455, 8, !dbg !17293
  %or1457 = or i64 %or1453, %shl1456, !dbg !17293
  %702 = load i32*, i32** %out, align 8, !dbg !17293
  %703 = bitcast i32* %702 to i64*, !dbg !17293
  %add.ptr1458 = getelementptr i64, i64* %703, i64 21, !dbg !17293
  %704 = load i64, i64* %add.ptr1458, align 8, !dbg !17293
  %and1459 = and i64 %704, 1095216660480, !dbg !17293
  %shr1460 = lshr i64 %and1459, 8, !dbg !17293
  %or1461 = or i64 %or1457, %shr1460, !dbg !17293
  %705 = load i32*, i32** %out, align 8, !dbg !17293
  %706 = bitcast i32* %705 to i64*, !dbg !17293
  %add.ptr1462 = getelementptr i64, i64* %706, i64 21, !dbg !17293
  %707 = load i64, i64* %add.ptr1462, align 8, !dbg !17293
  %and1463 = and i64 %707, 280375465082880, !dbg !17293
  %shr1464 = lshr i64 %and1463, 24, !dbg !17293
  %or1465 = or i64 %or1461, %shr1464, !dbg !17293
  %708 = load i32*, i32** %out, align 8, !dbg !17293
  %709 = bitcast i32* %708 to i64*, !dbg !17293
  %add.ptr1466 = getelementptr i64, i64* %709, i64 21, !dbg !17293
  %710 = load i64, i64* %add.ptr1466, align 8, !dbg !17293
  %and1467 = and i64 %710, 71776119061217280, !dbg !17293
  %shr1468 = lshr i64 %and1467, 40, !dbg !17293
  %or1469 = or i64 %or1465, %shr1468, !dbg !17293
  %711 = load i32*, i32** %out, align 8, !dbg !17293
  %712 = bitcast i32* %711 to i64*, !dbg !17293
  %add.ptr1470 = getelementptr i64, i64* %712, i64 21, !dbg !17293
  %713 = load i64, i64* %add.ptr1470, align 8, !dbg !17293
  %and1471 = and i64 %713, -72057594037927936, !dbg !17293
  %shr1472 = lshr i64 %and1471, 56, !dbg !17293
  %or1473 = or i64 %or1469, %shr1472, !dbg !17293
  br label %cond.end1477, !dbg !17293

cond.false1474:                                   ; preds = %cond.end1438
  %714 = load i32*, i32** %out, align 8, !dbg !17293
  %715 = bitcast i32* %714 to i64*, !dbg !17293
  %add.ptr1475 = getelementptr i64, i64* %715, i64 21, !dbg !17293
  %716 = load i64, i64* %add.ptr1475, align 8, !dbg !17293
  %call1476 = call i64 @__fswab64(i64 %716) #10, !dbg !17293
  br label %cond.end1477, !dbg !17293

cond.end1477:                                     ; preds = %cond.false1474, %cond.true1442
  %cond1478 = phi i64 [ %or1473, %cond.true1442 ], [ %call1476, %cond.false1474 ], !dbg !17293
  %717 = load i32*, i32** %out, align 8, !dbg !17294
  %718 = bitcast i32* %717 to i64*, !dbg !17294
  %add.ptr1479 = getelementptr i64, i64* %718, i64 9, !dbg !17294
  %719 = load i64, i64* %add.ptr1479, align 8, !dbg !17294
  %720 = call i1 @llvm.is.constant.i64(i64 %719), !dbg !17294
  br i1 %720, label %cond.true1480, label %cond.false1512, !dbg !17294

cond.true1480:                                    ; preds = %cond.end1477
  %721 = load i32*, i32** %out, align 8, !dbg !17294
  %722 = bitcast i32* %721 to i64*, !dbg !17294
  %add.ptr1481 = getelementptr i64, i64* %722, i64 9, !dbg !17294
  %723 = load i64, i64* %add.ptr1481, align 8, !dbg !17294
  %and1482 = and i64 %723, 255, !dbg !17294
  %shl1483 = shl i64 %and1482, 56, !dbg !17294
  %724 = load i32*, i32** %out, align 8, !dbg !17294
  %725 = bitcast i32* %724 to i64*, !dbg !17294
  %add.ptr1484 = getelementptr i64, i64* %725, i64 9, !dbg !17294
  %726 = load i64, i64* %add.ptr1484, align 8, !dbg !17294
  %and1485 = and i64 %726, 65280, !dbg !17294
  %shl1486 = shl i64 %and1485, 40, !dbg !17294
  %or1487 = or i64 %shl1483, %shl1486, !dbg !17294
  %727 = load i32*, i32** %out, align 8, !dbg !17294
  %728 = bitcast i32* %727 to i64*, !dbg !17294
  %add.ptr1488 = getelementptr i64, i64* %728, i64 9, !dbg !17294
  %729 = load i64, i64* %add.ptr1488, align 8, !dbg !17294
  %and1489 = and i64 %729, 16711680, !dbg !17294
  %shl1490 = shl i64 %and1489, 24, !dbg !17294
  %or1491 = or i64 %or1487, %shl1490, !dbg !17294
  %730 = load i32*, i32** %out, align 8, !dbg !17294
  %731 = bitcast i32* %730 to i64*, !dbg !17294
  %add.ptr1492 = getelementptr i64, i64* %731, i64 9, !dbg !17294
  %732 = load i64, i64* %add.ptr1492, align 8, !dbg !17294
  %and1493 = and i64 %732, 4278190080, !dbg !17294
  %shl1494 = shl i64 %and1493, 8, !dbg !17294
  %or1495 = or i64 %or1491, %shl1494, !dbg !17294
  %733 = load i32*, i32** %out, align 8, !dbg !17294
  %734 = bitcast i32* %733 to i64*, !dbg !17294
  %add.ptr1496 = getelementptr i64, i64* %734, i64 9, !dbg !17294
  %735 = load i64, i64* %add.ptr1496, align 8, !dbg !17294
  %and1497 = and i64 %735, 1095216660480, !dbg !17294
  %shr1498 = lshr i64 %and1497, 8, !dbg !17294
  %or1499 = or i64 %or1495, %shr1498, !dbg !17294
  %736 = load i32*, i32** %out, align 8, !dbg !17294
  %737 = bitcast i32* %736 to i64*, !dbg !17294
  %add.ptr1500 = getelementptr i64, i64* %737, i64 9, !dbg !17294
  %738 = load i64, i64* %add.ptr1500, align 8, !dbg !17294
  %and1501 = and i64 %738, 280375465082880, !dbg !17294
  %shr1502 = lshr i64 %and1501, 24, !dbg !17294
  %or1503 = or i64 %or1499, %shr1502, !dbg !17294
  %739 = load i32*, i32** %out, align 8, !dbg !17294
  %740 = bitcast i32* %739 to i64*, !dbg !17294
  %add.ptr1504 = getelementptr i64, i64* %740, i64 9, !dbg !17294
  %741 = load i64, i64* %add.ptr1504, align 8, !dbg !17294
  %and1505 = and i64 %741, 71776119061217280, !dbg !17294
  %shr1506 = lshr i64 %and1505, 40, !dbg !17294
  %or1507 = or i64 %or1503, %shr1506, !dbg !17294
  %742 = load i32*, i32** %out, align 8, !dbg !17294
  %743 = bitcast i32* %742 to i64*, !dbg !17294
  %add.ptr1508 = getelementptr i64, i64* %743, i64 9, !dbg !17294
  %744 = load i64, i64* %add.ptr1508, align 8, !dbg !17294
  %and1509 = and i64 %744, -72057594037927936, !dbg !17294
  %shr1510 = lshr i64 %and1509, 56, !dbg !17294
  %or1511 = or i64 %or1507, %shr1510, !dbg !17294
  br label %cond.end1515, !dbg !17294

cond.false1512:                                   ; preds = %cond.end1477
  %745 = load i32*, i32** %out, align 8, !dbg !17294
  %746 = bitcast i32* %745 to i64*, !dbg !17294
  %add.ptr1513 = getelementptr i64, i64* %746, i64 9, !dbg !17294
  %747 = load i64, i64* %add.ptr1513, align 8, !dbg !17294
  %call1514 = call i64 @__fswab64(i64 %747) #10, !dbg !17294
  br label %cond.end1515, !dbg !17294

cond.end1515:                                     ; preds = %cond.false1512, %cond.true1480
  %cond1516 = phi i64 [ %or1511, %cond.true1480 ], [ %call1514, %cond.false1512 ], !dbg !17294
  %add1517 = add i64 %cond1478, %cond1516, !dbg !17295
  %748 = load i32*, i32** %out, align 8, !dbg !17296
  %749 = bitcast i32* %748 to i64*, !dbg !17296
  %add.ptr1518 = getelementptr i64, i64* %749, i64 25, !dbg !17296
  %750 = load i64, i64* %add.ptr1518, align 8, !dbg !17296
  %751 = call i1 @llvm.is.constant.i64(i64 %750), !dbg !17296
  br i1 %751, label %cond.true1519, label %cond.false1551, !dbg !17296

cond.true1519:                                    ; preds = %cond.end1515
  %752 = load i32*, i32** %out, align 8, !dbg !17296
  %753 = bitcast i32* %752 to i64*, !dbg !17296
  %add.ptr1520 = getelementptr i64, i64* %753, i64 25, !dbg !17296
  %754 = load i64, i64* %add.ptr1520, align 8, !dbg !17296
  %and1521 = and i64 %754, 255, !dbg !17296
  %shl1522 = shl i64 %and1521, 56, !dbg !17296
  %755 = load i32*, i32** %out, align 8, !dbg !17296
  %756 = bitcast i32* %755 to i64*, !dbg !17296
  %add.ptr1523 = getelementptr i64, i64* %756, i64 25, !dbg !17296
  %757 = load i64, i64* %add.ptr1523, align 8, !dbg !17296
  %and1524 = and i64 %757, 65280, !dbg !17296
  %shl1525 = shl i64 %and1524, 40, !dbg !17296
  %or1526 = or i64 %shl1522, %shl1525, !dbg !17296
  %758 = load i32*, i32** %out, align 8, !dbg !17296
  %759 = bitcast i32* %758 to i64*, !dbg !17296
  %add.ptr1527 = getelementptr i64, i64* %759, i64 25, !dbg !17296
  %760 = load i64, i64* %add.ptr1527, align 8, !dbg !17296
  %and1528 = and i64 %760, 16711680, !dbg !17296
  %shl1529 = shl i64 %and1528, 24, !dbg !17296
  %or1530 = or i64 %or1526, %shl1529, !dbg !17296
  %761 = load i32*, i32** %out, align 8, !dbg !17296
  %762 = bitcast i32* %761 to i64*, !dbg !17296
  %add.ptr1531 = getelementptr i64, i64* %762, i64 25, !dbg !17296
  %763 = load i64, i64* %add.ptr1531, align 8, !dbg !17296
  %and1532 = and i64 %763, 4278190080, !dbg !17296
  %shl1533 = shl i64 %and1532, 8, !dbg !17296
  %or1534 = or i64 %or1530, %shl1533, !dbg !17296
  %764 = load i32*, i32** %out, align 8, !dbg !17296
  %765 = bitcast i32* %764 to i64*, !dbg !17296
  %add.ptr1535 = getelementptr i64, i64* %765, i64 25, !dbg !17296
  %766 = load i64, i64* %add.ptr1535, align 8, !dbg !17296
  %and1536 = and i64 %766, 1095216660480, !dbg !17296
  %shr1537 = lshr i64 %and1536, 8, !dbg !17296
  %or1538 = or i64 %or1534, %shr1537, !dbg !17296
  %767 = load i32*, i32** %out, align 8, !dbg !17296
  %768 = bitcast i32* %767 to i64*, !dbg !17296
  %add.ptr1539 = getelementptr i64, i64* %768, i64 25, !dbg !17296
  %769 = load i64, i64* %add.ptr1539, align 8, !dbg !17296
  %and1540 = and i64 %769, 280375465082880, !dbg !17296
  %shr1541 = lshr i64 %and1540, 24, !dbg !17296
  %or1542 = or i64 %or1538, %shr1541, !dbg !17296
  %770 = load i32*, i32** %out, align 8, !dbg !17296
  %771 = bitcast i32* %770 to i64*, !dbg !17296
  %add.ptr1543 = getelementptr i64, i64* %771, i64 25, !dbg !17296
  %772 = load i64, i64* %add.ptr1543, align 8, !dbg !17296
  %and1544 = and i64 %772, 71776119061217280, !dbg !17296
  %shr1545 = lshr i64 %and1544, 40, !dbg !17296
  %or1546 = or i64 %or1542, %shr1545, !dbg !17296
  %773 = load i32*, i32** %out, align 8, !dbg !17296
  %774 = bitcast i32* %773 to i64*, !dbg !17296
  %add.ptr1547 = getelementptr i64, i64* %774, i64 25, !dbg !17296
  %775 = load i64, i64* %add.ptr1547, align 8, !dbg !17296
  %and1548 = and i64 %775, -72057594037927936, !dbg !17296
  %shr1549 = lshr i64 %and1548, 56, !dbg !17296
  %or1550 = or i64 %or1546, %shr1549, !dbg !17296
  br label %cond.end1554, !dbg !17296

cond.false1551:                                   ; preds = %cond.end1515
  %776 = load i32*, i32** %out, align 8, !dbg !17296
  %777 = bitcast i32* %776 to i64*, !dbg !17296
  %add.ptr1552 = getelementptr i64, i64* %777, i64 25, !dbg !17296
  %778 = load i64, i64* %add.ptr1552, align 8, !dbg !17296
  %call1553 = call i64 @__fswab64(i64 %778) #10, !dbg !17296
  br label %cond.end1554, !dbg !17296

cond.end1554:                                     ; preds = %cond.false1551, %cond.true1519
  %cond1555 = phi i64 [ %or1550, %cond.true1519 ], [ %call1553, %cond.false1551 ], !dbg !17296
  %add1556 = add i64 %add1517, %cond1555, !dbg !17297
  %779 = load i32*, i32** %out, align 8, !dbg !17298
  %780 = bitcast i32* %779 to i64*, !dbg !17298
  %add.ptr1557 = getelementptr i64, i64* %780, i64 13, !dbg !17298
  %781 = load i64, i64* %add.ptr1557, align 8, !dbg !17298
  %782 = call i1 @llvm.is.constant.i64(i64 %781), !dbg !17298
  br i1 %782, label %cond.true1558, label %cond.false1590, !dbg !17298

cond.true1558:                                    ; preds = %cond.end1554
  %783 = load i32*, i32** %out, align 8, !dbg !17298
  %784 = bitcast i32* %783 to i64*, !dbg !17298
  %add.ptr1559 = getelementptr i64, i64* %784, i64 13, !dbg !17298
  %785 = load i64, i64* %add.ptr1559, align 8, !dbg !17298
  %and1560 = and i64 %785, 255, !dbg !17298
  %shl1561 = shl i64 %and1560, 56, !dbg !17298
  %786 = load i32*, i32** %out, align 8, !dbg !17298
  %787 = bitcast i32* %786 to i64*, !dbg !17298
  %add.ptr1562 = getelementptr i64, i64* %787, i64 13, !dbg !17298
  %788 = load i64, i64* %add.ptr1562, align 8, !dbg !17298
  %and1563 = and i64 %788, 65280, !dbg !17298
  %shl1564 = shl i64 %and1563, 40, !dbg !17298
  %or1565 = or i64 %shl1561, %shl1564, !dbg !17298
  %789 = load i32*, i32** %out, align 8, !dbg !17298
  %790 = bitcast i32* %789 to i64*, !dbg !17298
  %add.ptr1566 = getelementptr i64, i64* %790, i64 13, !dbg !17298
  %791 = load i64, i64* %add.ptr1566, align 8, !dbg !17298
  %and1567 = and i64 %791, 16711680, !dbg !17298
  %shl1568 = shl i64 %and1567, 24, !dbg !17298
  %or1569 = or i64 %or1565, %shl1568, !dbg !17298
  %792 = load i32*, i32** %out, align 8, !dbg !17298
  %793 = bitcast i32* %792 to i64*, !dbg !17298
  %add.ptr1570 = getelementptr i64, i64* %793, i64 13, !dbg !17298
  %794 = load i64, i64* %add.ptr1570, align 8, !dbg !17298
  %and1571 = and i64 %794, 4278190080, !dbg !17298
  %shl1572 = shl i64 %and1571, 8, !dbg !17298
  %or1573 = or i64 %or1569, %shl1572, !dbg !17298
  %795 = load i32*, i32** %out, align 8, !dbg !17298
  %796 = bitcast i32* %795 to i64*, !dbg !17298
  %add.ptr1574 = getelementptr i64, i64* %796, i64 13, !dbg !17298
  %797 = load i64, i64* %add.ptr1574, align 8, !dbg !17298
  %and1575 = and i64 %797, 1095216660480, !dbg !17298
  %shr1576 = lshr i64 %and1575, 8, !dbg !17298
  %or1577 = or i64 %or1573, %shr1576, !dbg !17298
  %798 = load i32*, i32** %out, align 8, !dbg !17298
  %799 = bitcast i32* %798 to i64*, !dbg !17298
  %add.ptr1578 = getelementptr i64, i64* %799, i64 13, !dbg !17298
  %800 = load i64, i64* %add.ptr1578, align 8, !dbg !17298
  %and1579 = and i64 %800, 280375465082880, !dbg !17298
  %shr1580 = lshr i64 %and1579, 24, !dbg !17298
  %or1581 = or i64 %or1577, %shr1580, !dbg !17298
  %801 = load i32*, i32** %out, align 8, !dbg !17298
  %802 = bitcast i32* %801 to i64*, !dbg !17298
  %add.ptr1582 = getelementptr i64, i64* %802, i64 13, !dbg !17298
  %803 = load i64, i64* %add.ptr1582, align 8, !dbg !17298
  %and1583 = and i64 %803, 71776119061217280, !dbg !17298
  %shr1584 = lshr i64 %and1583, 40, !dbg !17298
  %or1585 = or i64 %or1581, %shr1584, !dbg !17298
  %804 = load i32*, i32** %out, align 8, !dbg !17298
  %805 = bitcast i32* %804 to i64*, !dbg !17298
  %add.ptr1586 = getelementptr i64, i64* %805, i64 13, !dbg !17298
  %806 = load i64, i64* %add.ptr1586, align 8, !dbg !17298
  %and1587 = and i64 %806, -72057594037927936, !dbg !17298
  %shr1588 = lshr i64 %and1587, 56, !dbg !17298
  %or1589 = or i64 %or1585, %shr1588, !dbg !17298
  br label %cond.end1593, !dbg !17298

cond.false1590:                                   ; preds = %cond.end1554
  %807 = load i32*, i32** %out, align 8, !dbg !17298
  %808 = bitcast i32* %807 to i64*, !dbg !17298
  %add.ptr1591 = getelementptr i64, i64* %808, i64 13, !dbg !17298
  %809 = load i64, i64* %add.ptr1591, align 8, !dbg !17298
  %call1592 = call i64 @__fswab64(i64 %809) #10, !dbg !17298
  br label %cond.end1593, !dbg !17298

cond.end1593:                                     ; preds = %cond.false1590, %cond.true1558
  %cond1594 = phi i64 [ %or1589, %cond.true1558 ], [ %call1592, %cond.false1590 ], !dbg !17298
  %add1595 = add i64 %add1556, %cond1594, !dbg !17299
  %810 = load i32*, i32** %out, align 8, !dbg !17300
  %811 = bitcast i32* %810 to i64*, !dbg !17300
  %add.ptr1596 = getelementptr i64, i64* %811, i64 17, !dbg !17300
  %812 = load i64, i64* %add.ptr1596, align 8, !dbg !17300
  %813 = call i1 @llvm.is.constant.i64(i64 %812), !dbg !17300
  br i1 %813, label %cond.true1597, label %cond.false1629, !dbg !17300

cond.true1597:                                    ; preds = %cond.end1593
  %814 = load i32*, i32** %out, align 8, !dbg !17300
  %815 = bitcast i32* %814 to i64*, !dbg !17300
  %add.ptr1598 = getelementptr i64, i64* %815, i64 17, !dbg !17300
  %816 = load i64, i64* %add.ptr1598, align 8, !dbg !17300
  %and1599 = and i64 %816, 255, !dbg !17300
  %shl1600 = shl i64 %and1599, 56, !dbg !17300
  %817 = load i32*, i32** %out, align 8, !dbg !17300
  %818 = bitcast i32* %817 to i64*, !dbg !17300
  %add.ptr1601 = getelementptr i64, i64* %818, i64 17, !dbg !17300
  %819 = load i64, i64* %add.ptr1601, align 8, !dbg !17300
  %and1602 = and i64 %819, 65280, !dbg !17300
  %shl1603 = shl i64 %and1602, 40, !dbg !17300
  %or1604 = or i64 %shl1600, %shl1603, !dbg !17300
  %820 = load i32*, i32** %out, align 8, !dbg !17300
  %821 = bitcast i32* %820 to i64*, !dbg !17300
  %add.ptr1605 = getelementptr i64, i64* %821, i64 17, !dbg !17300
  %822 = load i64, i64* %add.ptr1605, align 8, !dbg !17300
  %and1606 = and i64 %822, 16711680, !dbg !17300
  %shl1607 = shl i64 %and1606, 24, !dbg !17300
  %or1608 = or i64 %or1604, %shl1607, !dbg !17300
  %823 = load i32*, i32** %out, align 8, !dbg !17300
  %824 = bitcast i32* %823 to i64*, !dbg !17300
  %add.ptr1609 = getelementptr i64, i64* %824, i64 17, !dbg !17300
  %825 = load i64, i64* %add.ptr1609, align 8, !dbg !17300
  %and1610 = and i64 %825, 4278190080, !dbg !17300
  %shl1611 = shl i64 %and1610, 8, !dbg !17300
  %or1612 = or i64 %or1608, %shl1611, !dbg !17300
  %826 = load i32*, i32** %out, align 8, !dbg !17300
  %827 = bitcast i32* %826 to i64*, !dbg !17300
  %add.ptr1613 = getelementptr i64, i64* %827, i64 17, !dbg !17300
  %828 = load i64, i64* %add.ptr1613, align 8, !dbg !17300
  %and1614 = and i64 %828, 1095216660480, !dbg !17300
  %shr1615 = lshr i64 %and1614, 8, !dbg !17300
  %or1616 = or i64 %or1612, %shr1615, !dbg !17300
  %829 = load i32*, i32** %out, align 8, !dbg !17300
  %830 = bitcast i32* %829 to i64*, !dbg !17300
  %add.ptr1617 = getelementptr i64, i64* %830, i64 17, !dbg !17300
  %831 = load i64, i64* %add.ptr1617, align 8, !dbg !17300
  %and1618 = and i64 %831, 280375465082880, !dbg !17300
  %shr1619 = lshr i64 %and1618, 24, !dbg !17300
  %or1620 = or i64 %or1616, %shr1619, !dbg !17300
  %832 = load i32*, i32** %out, align 8, !dbg !17300
  %833 = bitcast i32* %832 to i64*, !dbg !17300
  %add.ptr1621 = getelementptr i64, i64* %833, i64 17, !dbg !17300
  %834 = load i64, i64* %add.ptr1621, align 8, !dbg !17300
  %and1622 = and i64 %834, 71776119061217280, !dbg !17300
  %shr1623 = lshr i64 %and1622, 40, !dbg !17300
  %or1624 = or i64 %or1620, %shr1623, !dbg !17300
  %835 = load i32*, i32** %out, align 8, !dbg !17300
  %836 = bitcast i32* %835 to i64*, !dbg !17300
  %add.ptr1625 = getelementptr i64, i64* %836, i64 17, !dbg !17300
  %837 = load i64, i64* %add.ptr1625, align 8, !dbg !17300
  %and1626 = and i64 %837, -72057594037927936, !dbg !17300
  %shr1627 = lshr i64 %and1626, 56, !dbg !17300
  %or1628 = or i64 %or1624, %shr1627, !dbg !17300
  br label %cond.end1632, !dbg !17300

cond.false1629:                                   ; preds = %cond.end1593
  %838 = load i32*, i32** %out, align 8, !dbg !17300
  %839 = bitcast i32* %838 to i64*, !dbg !17300
  %add.ptr1630 = getelementptr i64, i64* %839, i64 17, !dbg !17300
  %840 = load i64, i64* %add.ptr1630, align 8, !dbg !17300
  %call1631 = call i64 @__fswab64(i64 %840) #10, !dbg !17300
  br label %cond.end1632, !dbg !17300

cond.end1632:                                     ; preds = %cond.false1629, %cond.true1597
  %cond1633 = phi i64 [ %or1628, %cond.true1597 ], [ %call1631, %cond.false1629 ], !dbg !17300
  %add1634 = add i64 %add1595, %cond1633, !dbg !17301
  %841 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17302
  %tx_bytes = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %841, i32 0, i32 3, !dbg !17303
  store i64 %add1634, i64* %tx_bytes, align 8, !dbg !17304
  %842 = load i32*, i32** %out, align 8, !dbg !17305
  %843 = bitcast i32* %842 to i64*, !dbg !17305
  %add.ptr1635 = getelementptr i64, i64* %843, i64 22, !dbg !17305
  %844 = load i64, i64* %add.ptr1635, align 8, !dbg !17305
  %845 = call i1 @llvm.is.constant.i64(i64 %844), !dbg !17305
  br i1 %845, label %cond.true1636, label %cond.false1668, !dbg !17305

cond.true1636:                                    ; preds = %cond.end1632
  %846 = load i32*, i32** %out, align 8, !dbg !17305
  %847 = bitcast i32* %846 to i64*, !dbg !17305
  %add.ptr1637 = getelementptr i64, i64* %847, i64 22, !dbg !17305
  %848 = load i64, i64* %add.ptr1637, align 8, !dbg !17305
  %and1638 = and i64 %848, 255, !dbg !17305
  %shl1639 = shl i64 %and1638, 56, !dbg !17305
  %849 = load i32*, i32** %out, align 8, !dbg !17305
  %850 = bitcast i32* %849 to i64*, !dbg !17305
  %add.ptr1640 = getelementptr i64, i64* %850, i64 22, !dbg !17305
  %851 = load i64, i64* %add.ptr1640, align 8, !dbg !17305
  %and1641 = and i64 %851, 65280, !dbg !17305
  %shl1642 = shl i64 %and1641, 40, !dbg !17305
  %or1643 = or i64 %shl1639, %shl1642, !dbg !17305
  %852 = load i32*, i32** %out, align 8, !dbg !17305
  %853 = bitcast i32* %852 to i64*, !dbg !17305
  %add.ptr1644 = getelementptr i64, i64* %853, i64 22, !dbg !17305
  %854 = load i64, i64* %add.ptr1644, align 8, !dbg !17305
  %and1645 = and i64 %854, 16711680, !dbg !17305
  %shl1646 = shl i64 %and1645, 24, !dbg !17305
  %or1647 = or i64 %or1643, %shl1646, !dbg !17305
  %855 = load i32*, i32** %out, align 8, !dbg !17305
  %856 = bitcast i32* %855 to i64*, !dbg !17305
  %add.ptr1648 = getelementptr i64, i64* %856, i64 22, !dbg !17305
  %857 = load i64, i64* %add.ptr1648, align 8, !dbg !17305
  %and1649 = and i64 %857, 4278190080, !dbg !17305
  %shl1650 = shl i64 %and1649, 8, !dbg !17305
  %or1651 = or i64 %or1647, %shl1650, !dbg !17305
  %858 = load i32*, i32** %out, align 8, !dbg !17305
  %859 = bitcast i32* %858 to i64*, !dbg !17305
  %add.ptr1652 = getelementptr i64, i64* %859, i64 22, !dbg !17305
  %860 = load i64, i64* %add.ptr1652, align 8, !dbg !17305
  %and1653 = and i64 %860, 1095216660480, !dbg !17305
  %shr1654 = lshr i64 %and1653, 8, !dbg !17305
  %or1655 = or i64 %or1651, %shr1654, !dbg !17305
  %861 = load i32*, i32** %out, align 8, !dbg !17305
  %862 = bitcast i32* %861 to i64*, !dbg !17305
  %add.ptr1656 = getelementptr i64, i64* %862, i64 22, !dbg !17305
  %863 = load i64, i64* %add.ptr1656, align 8, !dbg !17305
  %and1657 = and i64 %863, 280375465082880, !dbg !17305
  %shr1658 = lshr i64 %and1657, 24, !dbg !17305
  %or1659 = or i64 %or1655, %shr1658, !dbg !17305
  %864 = load i32*, i32** %out, align 8, !dbg !17305
  %865 = bitcast i32* %864 to i64*, !dbg !17305
  %add.ptr1660 = getelementptr i64, i64* %865, i64 22, !dbg !17305
  %866 = load i64, i64* %add.ptr1660, align 8, !dbg !17305
  %and1661 = and i64 %866, 71776119061217280, !dbg !17305
  %shr1662 = lshr i64 %and1661, 40, !dbg !17305
  %or1663 = or i64 %or1659, %shr1662, !dbg !17305
  %867 = load i32*, i32** %out, align 8, !dbg !17305
  %868 = bitcast i32* %867 to i64*, !dbg !17305
  %add.ptr1664 = getelementptr i64, i64* %868, i64 22, !dbg !17305
  %869 = load i64, i64* %add.ptr1664, align 8, !dbg !17305
  %and1665 = and i64 %869, -72057594037927936, !dbg !17305
  %shr1666 = lshr i64 %and1665, 56, !dbg !17305
  %or1667 = or i64 %or1663, %shr1666, !dbg !17305
  br label %cond.end1671, !dbg !17305

cond.false1668:                                   ; preds = %cond.end1632
  %870 = load i32*, i32** %out, align 8, !dbg !17305
  %871 = bitcast i32* %870 to i64*, !dbg !17305
  %add.ptr1669 = getelementptr i64, i64* %871, i64 22, !dbg !17305
  %872 = load i64, i64* %add.ptr1669, align 8, !dbg !17305
  %call1670 = call i64 @__fswab64(i64 %872) #10, !dbg !17305
  br label %cond.end1671, !dbg !17305

cond.end1671:                                     ; preds = %cond.false1668, %cond.true1636
  %cond1672 = phi i64 [ %or1667, %cond.true1636 ], [ %call1670, %cond.false1668 ], !dbg !17305
  %873 = load i32*, i32** %out, align 8, !dbg !17306
  %874 = bitcast i32* %873 to i64*, !dbg !17306
  %add.ptr1673 = getelementptr i64, i64* %874, i64 10, !dbg !17306
  %875 = load i64, i64* %add.ptr1673, align 8, !dbg !17306
  %876 = call i1 @llvm.is.constant.i64(i64 %875), !dbg !17306
  br i1 %876, label %cond.true1674, label %cond.false1706, !dbg !17306

cond.true1674:                                    ; preds = %cond.end1671
  %877 = load i32*, i32** %out, align 8, !dbg !17306
  %878 = bitcast i32* %877 to i64*, !dbg !17306
  %add.ptr1675 = getelementptr i64, i64* %878, i64 10, !dbg !17306
  %879 = load i64, i64* %add.ptr1675, align 8, !dbg !17306
  %and1676 = and i64 %879, 255, !dbg !17306
  %shl1677 = shl i64 %and1676, 56, !dbg !17306
  %880 = load i32*, i32** %out, align 8, !dbg !17306
  %881 = bitcast i32* %880 to i64*, !dbg !17306
  %add.ptr1678 = getelementptr i64, i64* %881, i64 10, !dbg !17306
  %882 = load i64, i64* %add.ptr1678, align 8, !dbg !17306
  %and1679 = and i64 %882, 65280, !dbg !17306
  %shl1680 = shl i64 %and1679, 40, !dbg !17306
  %or1681 = or i64 %shl1677, %shl1680, !dbg !17306
  %883 = load i32*, i32** %out, align 8, !dbg !17306
  %884 = bitcast i32* %883 to i64*, !dbg !17306
  %add.ptr1682 = getelementptr i64, i64* %884, i64 10, !dbg !17306
  %885 = load i64, i64* %add.ptr1682, align 8, !dbg !17306
  %and1683 = and i64 %885, 16711680, !dbg !17306
  %shl1684 = shl i64 %and1683, 24, !dbg !17306
  %or1685 = or i64 %or1681, %shl1684, !dbg !17306
  %886 = load i32*, i32** %out, align 8, !dbg !17306
  %887 = bitcast i32* %886 to i64*, !dbg !17306
  %add.ptr1686 = getelementptr i64, i64* %887, i64 10, !dbg !17306
  %888 = load i64, i64* %add.ptr1686, align 8, !dbg !17306
  %and1687 = and i64 %888, 4278190080, !dbg !17306
  %shl1688 = shl i64 %and1687, 8, !dbg !17306
  %or1689 = or i64 %or1685, %shl1688, !dbg !17306
  %889 = load i32*, i32** %out, align 8, !dbg !17306
  %890 = bitcast i32* %889 to i64*, !dbg !17306
  %add.ptr1690 = getelementptr i64, i64* %890, i64 10, !dbg !17306
  %891 = load i64, i64* %add.ptr1690, align 8, !dbg !17306
  %and1691 = and i64 %891, 1095216660480, !dbg !17306
  %shr1692 = lshr i64 %and1691, 8, !dbg !17306
  %or1693 = or i64 %or1689, %shr1692, !dbg !17306
  %892 = load i32*, i32** %out, align 8, !dbg !17306
  %893 = bitcast i32* %892 to i64*, !dbg !17306
  %add.ptr1694 = getelementptr i64, i64* %893, i64 10, !dbg !17306
  %894 = load i64, i64* %add.ptr1694, align 8, !dbg !17306
  %and1695 = and i64 %894, 280375465082880, !dbg !17306
  %shr1696 = lshr i64 %and1695, 24, !dbg !17306
  %or1697 = or i64 %or1693, %shr1696, !dbg !17306
  %895 = load i32*, i32** %out, align 8, !dbg !17306
  %896 = bitcast i32* %895 to i64*, !dbg !17306
  %add.ptr1698 = getelementptr i64, i64* %896, i64 10, !dbg !17306
  %897 = load i64, i64* %add.ptr1698, align 8, !dbg !17306
  %and1699 = and i64 %897, 71776119061217280, !dbg !17306
  %shr1700 = lshr i64 %and1699, 40, !dbg !17306
  %or1701 = or i64 %or1697, %shr1700, !dbg !17306
  %898 = load i32*, i32** %out, align 8, !dbg !17306
  %899 = bitcast i32* %898 to i64*, !dbg !17306
  %add.ptr1702 = getelementptr i64, i64* %899, i64 10, !dbg !17306
  %900 = load i64, i64* %add.ptr1702, align 8, !dbg !17306
  %and1703 = and i64 %900, -72057594037927936, !dbg !17306
  %shr1704 = lshr i64 %and1703, 56, !dbg !17306
  %or1705 = or i64 %or1701, %shr1704, !dbg !17306
  br label %cond.end1709, !dbg !17306

cond.false1706:                                   ; preds = %cond.end1671
  %901 = load i32*, i32** %out, align 8, !dbg !17306
  %902 = bitcast i32* %901 to i64*, !dbg !17306
  %add.ptr1707 = getelementptr i64, i64* %902, i64 10, !dbg !17306
  %903 = load i64, i64* %add.ptr1707, align 8, !dbg !17306
  %call1708 = call i64 @__fswab64(i64 %903) #10, !dbg !17306
  br label %cond.end1709, !dbg !17306

cond.end1709:                                     ; preds = %cond.false1706, %cond.true1674
  %cond1710 = phi i64 [ %or1705, %cond.true1674 ], [ %call1708, %cond.false1706 ], !dbg !17306
  %add1711 = add i64 %cond1672, %cond1710, !dbg !17307
  %904 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17308
  %multicast = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %904, i32 0, i32 5, !dbg !17309
  store i64 %add1711, i64* %multicast, align 8, !dbg !17310
  %905 = load i32*, i32** %out, align 8, !dbg !17311
  %906 = bitcast i32* %905 to i64*, !dbg !17311
  %add.ptr1712 = getelementptr i64, i64* %906, i64 14, !dbg !17311
  %907 = load i64, i64* %add.ptr1712, align 8, !dbg !17311
  %908 = call i1 @llvm.is.constant.i64(i64 %907), !dbg !17311
  br i1 %908, label %cond.true1713, label %cond.false1745, !dbg !17311

cond.true1713:                                    ; preds = %cond.end1709
  %909 = load i32*, i32** %out, align 8, !dbg !17311
  %910 = bitcast i32* %909 to i64*, !dbg !17311
  %add.ptr1714 = getelementptr i64, i64* %910, i64 14, !dbg !17311
  %911 = load i64, i64* %add.ptr1714, align 8, !dbg !17311
  %and1715 = and i64 %911, 255, !dbg !17311
  %shl1716 = shl i64 %and1715, 56, !dbg !17311
  %912 = load i32*, i32** %out, align 8, !dbg !17311
  %913 = bitcast i32* %912 to i64*, !dbg !17311
  %add.ptr1717 = getelementptr i64, i64* %913, i64 14, !dbg !17311
  %914 = load i64, i64* %add.ptr1717, align 8, !dbg !17311
  %and1718 = and i64 %914, 65280, !dbg !17311
  %shl1719 = shl i64 %and1718, 40, !dbg !17311
  %or1720 = or i64 %shl1716, %shl1719, !dbg !17311
  %915 = load i32*, i32** %out, align 8, !dbg !17311
  %916 = bitcast i32* %915 to i64*, !dbg !17311
  %add.ptr1721 = getelementptr i64, i64* %916, i64 14, !dbg !17311
  %917 = load i64, i64* %add.ptr1721, align 8, !dbg !17311
  %and1722 = and i64 %917, 16711680, !dbg !17311
  %shl1723 = shl i64 %and1722, 24, !dbg !17311
  %or1724 = or i64 %or1720, %shl1723, !dbg !17311
  %918 = load i32*, i32** %out, align 8, !dbg !17311
  %919 = bitcast i32* %918 to i64*, !dbg !17311
  %add.ptr1725 = getelementptr i64, i64* %919, i64 14, !dbg !17311
  %920 = load i64, i64* %add.ptr1725, align 8, !dbg !17311
  %and1726 = and i64 %920, 4278190080, !dbg !17311
  %shl1727 = shl i64 %and1726, 8, !dbg !17311
  %or1728 = or i64 %or1724, %shl1727, !dbg !17311
  %921 = load i32*, i32** %out, align 8, !dbg !17311
  %922 = bitcast i32* %921 to i64*, !dbg !17311
  %add.ptr1729 = getelementptr i64, i64* %922, i64 14, !dbg !17311
  %923 = load i64, i64* %add.ptr1729, align 8, !dbg !17311
  %and1730 = and i64 %923, 1095216660480, !dbg !17311
  %shr1731 = lshr i64 %and1730, 8, !dbg !17311
  %or1732 = or i64 %or1728, %shr1731, !dbg !17311
  %924 = load i32*, i32** %out, align 8, !dbg !17311
  %925 = bitcast i32* %924 to i64*, !dbg !17311
  %add.ptr1733 = getelementptr i64, i64* %925, i64 14, !dbg !17311
  %926 = load i64, i64* %add.ptr1733, align 8, !dbg !17311
  %and1734 = and i64 %926, 280375465082880, !dbg !17311
  %shr1735 = lshr i64 %and1734, 24, !dbg !17311
  %or1736 = or i64 %or1732, %shr1735, !dbg !17311
  %927 = load i32*, i32** %out, align 8, !dbg !17311
  %928 = bitcast i32* %927 to i64*, !dbg !17311
  %add.ptr1737 = getelementptr i64, i64* %928, i64 14, !dbg !17311
  %929 = load i64, i64* %add.ptr1737, align 8, !dbg !17311
  %and1738 = and i64 %929, 71776119061217280, !dbg !17311
  %shr1739 = lshr i64 %and1738, 40, !dbg !17311
  %or1740 = or i64 %or1736, %shr1739, !dbg !17311
  %930 = load i32*, i32** %out, align 8, !dbg !17311
  %931 = bitcast i32* %930 to i64*, !dbg !17311
  %add.ptr1741 = getelementptr i64, i64* %931, i64 14, !dbg !17311
  %932 = load i64, i64* %add.ptr1741, align 8, !dbg !17311
  %and1742 = and i64 %932, -72057594037927936, !dbg !17311
  %shr1743 = lshr i64 %and1742, 56, !dbg !17311
  %or1744 = or i64 %or1740, %shr1743, !dbg !17311
  br label %cond.end1748, !dbg !17311

cond.false1745:                                   ; preds = %cond.end1709
  %933 = load i32*, i32** %out, align 8, !dbg !17311
  %934 = bitcast i32* %933 to i64*, !dbg !17311
  %add.ptr1746 = getelementptr i64, i64* %934, i64 14, !dbg !17311
  %935 = load i64, i64* %add.ptr1746, align 8, !dbg !17311
  %call1747 = call i64 @__fswab64(i64 %935) #10, !dbg !17311
  br label %cond.end1748, !dbg !17311

cond.end1748:                                     ; preds = %cond.false1745, %cond.true1713
  %cond1749 = phi i64 [ %or1744, %cond.true1713 ], [ %call1747, %cond.false1745 ], !dbg !17311
  %936 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17312
  %broadcast = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %936, i32 0, i32 4, !dbg !17313
  store i64 %cond1749, i64* %broadcast, align 8, !dbg !17314
  %937 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17315
  %dev1750 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %937, i32 0, i32 0, !dbg !17316
  %938 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1750, align 8, !dbg !17316
  %939 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !17317
  %call1751 = call i32 @mlx5_eswitch_query_vport_drop_stats(%struct.mlx5_core_dev* %938, %struct.mlx5_vport* %939, %struct.mlx5_vport_drop_stats* %stats) #8, !dbg !17318
  store i32 %call1751, i32* %err, align 4, !dbg !17319
  %940 = load i32, i32* %err, align 4, !dbg !17320
  %tobool1752 = icmp ne i32 %940, 0, !dbg !17320
  br i1 %tobool1752, label %if.then1753, label %if.end1754, !dbg !17322

if.then1753:                                      ; preds = %cond.end1748
  br label %free_out, !dbg !17323

if.end1754:                                       ; preds = %cond.end1748
  %rx_dropped = getelementptr inbounds %struct.mlx5_vport_drop_stats, %struct.mlx5_vport_drop_stats* %stats, i32 0, i32 0, !dbg !17324
  %941 = load i64, i64* %rx_dropped, align 8, !dbg !17324
  %942 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17325
  %rx_dropped1755 = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %942, i32 0, i32 6, !dbg !17326
  store i64 %941, i64* %rx_dropped1755, align 8, !dbg !17327
  %tx_dropped = getelementptr inbounds %struct.mlx5_vport_drop_stats, %struct.mlx5_vport_drop_stats* %stats, i32 0, i32 1, !dbg !17328
  %943 = load i64, i64* %tx_dropped, align 8, !dbg !17328
  %944 = load %struct.ifla_vf_stats*, %struct.ifla_vf_stats** %vf_stats.addr, align 8, !dbg !17329
  %tx_dropped1756 = getelementptr inbounds %struct.ifla_vf_stats, %struct.ifla_vf_stats* %944, i32 0, i32 7, !dbg !17330
  store i64 %943, i64* %tx_dropped1756, align 8, !dbg !17331
  br label %free_out, !dbg !17329

free_out:                                         ; preds = %if.end1754, %if.then1753, %if.then858
  call void @llvm.dbg.label(metadata !17332), !dbg !17333
  %945 = load i32*, i32** %out, align 8, !dbg !17334
  %946 = bitcast i32* %945 to i8*, !dbg !17334
  call void @kvfree(i8* %946) #8, !dbg !17335
  %947 = load i32, i32* %err, align 4, !dbg !17336
  store i32 %947, i32* %retval, align 4, !dbg !17337
  br label %return, !dbg !17337

return:                                           ; preds = %free_out, %if.then5, %if.then
  %948 = load i32, i32* %retval, align 4, !dbg !17338
  ret i32 %948, !dbg !17338
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__fswab64(i64 %val) #3 !dbg !17339 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !17342, metadata !DIExpression()), !dbg !17343
  %0 = load i64, i64* %val.addr, align 8, !dbg !17344
  %call = call i64 @__arch_swab64(i64 %0) #10, !dbg !17345
  ret i64 %call, !dbg !17346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_query_vport_drop_stats(%struct.mlx5_core_dev* %dev, %struct.mlx5_vport* %vport, %struct.mlx5_vport_drop_stats* %stats) #0 !dbg !17347 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %stats.addr = alloca %struct.mlx5_vport_drop_stats*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %rx_discard_vport_down = alloca i64, align 8
  %tx_discard_vport_down = alloca i64, align 8
  %bytes = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !17351, metadata !DIExpression()), !dbg !17352
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17353, metadata !DIExpression()), !dbg !17354
  store %struct.mlx5_vport_drop_stats* %stats, %struct.mlx5_vport_drop_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_drop_stats** %stats.addr, metadata !17355, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !17357, metadata !DIExpression()), !dbg !17358
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17359
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 17, !dbg !17360
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !17361
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !17361
  store %struct.mlx5_eswitch* %1, %struct.mlx5_eswitch** %esw, align 8, !dbg !17358
  call void @llvm.dbg.declare(metadata i64* %rx_discard_vport_down, metadata !17362, metadata !DIExpression()), !dbg !17363
  call void @llvm.dbg.declare(metadata i64* %tx_discard_vport_down, metadata !17364, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !17366, metadata !DIExpression()), !dbg !17367
  store i64 0, i64* %bytes, align 8, !dbg !17367
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17368, metadata !DIExpression()), !dbg !17369
  store i32 0, i32* %err, align 4, !dbg !17369
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17370
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 14, !dbg !17372
  %3 = load i32, i32* %mode, align 8, !dbg !17372
  %cmp = icmp ne i32 %3, 1, !dbg !17373
  br i1 %cmp, label %if.then, label %if.end, !dbg !17374

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17375
  br label %return, !dbg !17375

if.end:                                           ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17376
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 10, !dbg !17377
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !17378
  %5 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17379
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %5, i32 0, i32 13, !dbg !17381
  %6 = load i8, i8* %enabled, align 4, !dbg !17381
  %tobool = trunc i8 %6 to i1, !dbg !17381
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !17382

if.then1:                                         ; preds = %if.end
  br label %unlock, !dbg !17383

if.end2:                                          ; preds = %if.end
  %7 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17384
  %egress = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %7, i32 0, i32 8, !dbg !17386
  %8 = getelementptr inbounds %struct.vport_egress, %struct.vport_egress* %egress, i32 0, i32 3, !dbg !17387
  %legacy = bitcast %union.anon.159* %8 to %struct.anon.160*, !dbg !17387
  %drop_counter = getelementptr inbounds %struct.anon.160, %struct.anon.160* %legacy, i32 0, i32 2, !dbg !17388
  %9 = load %struct.mlx5_fc*, %struct.mlx5_fc** %drop_counter, align 8, !dbg !17388
  %10 = bitcast %struct.mlx5_fc* %9 to i8*, !dbg !17384
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %10) #8, !dbg !17389
  br i1 %call, label %if.end8, label %if.then3, !dbg !17390

if.then3:                                         ; preds = %if.end2
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17391
  %12 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17392
  %egress4 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %12, i32 0, i32 8, !dbg !17393
  %13 = getelementptr inbounds %struct.vport_egress, %struct.vport_egress* %egress4, i32 0, i32 3, !dbg !17394
  %legacy5 = bitcast %union.anon.159* %13 to %struct.anon.160*, !dbg !17394
  %drop_counter6 = getelementptr inbounds %struct.anon.160, %struct.anon.160* %legacy5, i32 0, i32 2, !dbg !17395
  %14 = load %struct.mlx5_fc*, %struct.mlx5_fc** %drop_counter6, align 8, !dbg !17395
  %15 = load %struct.mlx5_vport_drop_stats*, %struct.mlx5_vport_drop_stats** %stats.addr, align 8, !dbg !17396
  %rx_dropped = getelementptr inbounds %struct.mlx5_vport_drop_stats, %struct.mlx5_vport_drop_stats* %15, i32 0, i32 0, !dbg !17397
  %call7 = call i32 @mlx5_fc_query(%struct.mlx5_core_dev* %11, %struct.mlx5_fc* %14, i64* %rx_dropped, i64* %bytes) #8, !dbg !17398
  br label %if.end8, !dbg !17398

if.end8:                                          ; preds = %if.then3, %if.end2
  %16 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17399
  %ingress = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %16, i32 0, i32 7, !dbg !17401
  %legacy9 = getelementptr inbounds %struct.vport_ingress, %struct.vport_ingress* %ingress, i32 0, i32 2, !dbg !17402
  %drop_counter10 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %legacy9, i32 0, i32 5, !dbg !17403
  %17 = load %struct.mlx5_fc*, %struct.mlx5_fc** %drop_counter10, align 8, !dbg !17403
  %tobool11 = icmp ne %struct.mlx5_fc* %17, null, !dbg !17399
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !17404

if.then12:                                        ; preds = %if.end8
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17405
  %19 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17406
  %ingress13 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %19, i32 0, i32 7, !dbg !17407
  %legacy14 = getelementptr inbounds %struct.vport_ingress, %struct.vport_ingress* %ingress13, i32 0, i32 2, !dbg !17408
  %drop_counter15 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %legacy14, i32 0, i32 5, !dbg !17409
  %20 = load %struct.mlx5_fc*, %struct.mlx5_fc** %drop_counter15, align 8, !dbg !17409
  %21 = load %struct.mlx5_vport_drop_stats*, %struct.mlx5_vport_drop_stats** %stats.addr, align 8, !dbg !17410
  %tx_dropped = getelementptr inbounds %struct.mlx5_vport_drop_stats, %struct.mlx5_vport_drop_stats* %21, i32 0, i32 1, !dbg !17411
  %call16 = call i32 @mlx5_fc_query(%struct.mlx5_core_dev* %18, %struct.mlx5_fc* %20, i64* %tx_dropped, i64* %bytes) #8, !dbg !17412
  br label %if.end17, !dbg !17412

if.end17:                                         ; preds = %if.then12, %if.end8
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17413
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !17413
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17413
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !17413
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17413
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 26, !dbg !17413
  %23 = load i32, i32* %add.ptr, align 4, !dbg !17413
  %24 = call i1 @llvm.is.constant.i32(i32 %23), !dbg !17413
  br i1 %24, label %cond.true, label %cond.false, !dbg !17413

cond.true:                                        ; preds = %if.end17
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17413
  %caps18 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %25, i32 0, i32 9, !dbg !17413
  %hca_cur19 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps18, i32 0, i32 0, !dbg !17413
  %arrayidx20 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur19, i64 0, i64 0, !dbg !17413
  %arraydecay21 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx20, i64 0, i64 0, !dbg !17413
  %add.ptr22 = getelementptr i32, i32* %arraydecay21, i64 26, !dbg !17413
  %26 = load i32, i32* %add.ptr22, align 4, !dbg !17413
  %and = and i32 %26, 255, !dbg !17413
  %shl = shl i32 %and, 24, !dbg !17413
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17413
  %caps23 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !17413
  %hca_cur24 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps23, i32 0, i32 0, !dbg !17413
  %arrayidx25 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur24, i64 0, i64 0, !dbg !17413
  %arraydecay26 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx25, i64 0, i64 0, !dbg !17413
  %add.ptr27 = getelementptr i32, i32* %arraydecay26, i64 26, !dbg !17413
  %28 = load i32, i32* %add.ptr27, align 4, !dbg !17413
  %and28 = and i32 %28, 65280, !dbg !17413
  %shl29 = shl i32 %and28, 8, !dbg !17413
  %or = or i32 %shl, %shl29, !dbg !17413
  %29 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17413
  %caps30 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %29, i32 0, i32 9, !dbg !17413
  %hca_cur31 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps30, i32 0, i32 0, !dbg !17413
  %arrayidx32 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur31, i64 0, i64 0, !dbg !17413
  %arraydecay33 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx32, i64 0, i64 0, !dbg !17413
  %add.ptr34 = getelementptr i32, i32* %arraydecay33, i64 26, !dbg !17413
  %30 = load i32, i32* %add.ptr34, align 4, !dbg !17413
  %and35 = and i32 %30, 16711680, !dbg !17413
  %shr = lshr i32 %and35, 8, !dbg !17413
  %or36 = or i32 %or, %shr, !dbg !17413
  %31 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17413
  %caps37 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %31, i32 0, i32 9, !dbg !17413
  %hca_cur38 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps37, i32 0, i32 0, !dbg !17413
  %arrayidx39 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur38, i64 0, i64 0, !dbg !17413
  %arraydecay40 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx39, i64 0, i64 0, !dbg !17413
  %add.ptr41 = getelementptr i32, i32* %arraydecay40, i64 26, !dbg !17413
  %32 = load i32, i32* %add.ptr41, align 4, !dbg !17413
  %and42 = and i32 %32, -16777216, !dbg !17413
  %shr43 = lshr i32 %and42, 24, !dbg !17413
  %or44 = or i32 %or36, %shr43, !dbg !17413
  br label %cond.end, !dbg !17413

cond.false:                                       ; preds = %if.end17
  %33 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17413
  %caps45 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %33, i32 0, i32 9, !dbg !17413
  %hca_cur46 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps45, i32 0, i32 0, !dbg !17413
  %arrayidx47 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur46, i64 0, i64 0, !dbg !17413
  %arraydecay48 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx47, i64 0, i64 0, !dbg !17413
  %add.ptr49 = getelementptr i32, i32* %arraydecay48, i64 26, !dbg !17413
  %34 = load i32, i32* %add.ptr49, align 4, !dbg !17413
  %call50 = call i32 @__fswab32(i32 %34) #10, !dbg !17413
  br label %cond.end, !dbg !17413

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or44, %cond.true ], [ %call50, %cond.false ], !dbg !17413
  %shr51 = lshr i32 %cond, 30, !dbg !17413
  %and52 = and i32 %shr51, 1, !dbg !17413
  %tobool53 = icmp ne i32 %and52, 0, !dbg !17413
  br i1 %tobool53, label %if.end104, label %land.lhs.true, !dbg !17415

land.lhs.true:                                    ; preds = %cond.end
  %35 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17416
  %caps54 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %35, i32 0, i32 9, !dbg !17416
  %hca_cur55 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps54, i32 0, i32 0, !dbg !17416
  %arrayidx56 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur55, i64 0, i64 0, !dbg !17416
  %arraydecay57 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx56, i64 0, i64 0, !dbg !17416
  %add.ptr58 = getelementptr i32, i32* %arraydecay57, i64 26, !dbg !17416
  %36 = load i32, i32* %add.ptr58, align 4, !dbg !17416
  %37 = call i1 @llvm.is.constant.i32(i32 %36), !dbg !17416
  br i1 %37, label %cond.true59, label %cond.false91, !dbg !17416

cond.true59:                                      ; preds = %land.lhs.true
  %38 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17416
  %caps60 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %38, i32 0, i32 9, !dbg !17416
  %hca_cur61 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps60, i32 0, i32 0, !dbg !17416
  %arrayidx62 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur61, i64 0, i64 0, !dbg !17416
  %arraydecay63 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx62, i64 0, i64 0, !dbg !17416
  %add.ptr64 = getelementptr i32, i32* %arraydecay63, i64 26, !dbg !17416
  %39 = load i32, i32* %add.ptr64, align 4, !dbg !17416
  %and65 = and i32 %39, 255, !dbg !17416
  %shl66 = shl i32 %and65, 24, !dbg !17416
  %40 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17416
  %caps67 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %40, i32 0, i32 9, !dbg !17416
  %hca_cur68 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps67, i32 0, i32 0, !dbg !17416
  %arrayidx69 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur68, i64 0, i64 0, !dbg !17416
  %arraydecay70 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx69, i64 0, i64 0, !dbg !17416
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 26, !dbg !17416
  %41 = load i32, i32* %add.ptr71, align 4, !dbg !17416
  %and72 = and i32 %41, 65280, !dbg !17416
  %shl73 = shl i32 %and72, 8, !dbg !17416
  %or74 = or i32 %shl66, %shl73, !dbg !17416
  %42 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17416
  %caps75 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %42, i32 0, i32 9, !dbg !17416
  %hca_cur76 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps75, i32 0, i32 0, !dbg !17416
  %arrayidx77 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur76, i64 0, i64 0, !dbg !17416
  %arraydecay78 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx77, i64 0, i64 0, !dbg !17416
  %add.ptr79 = getelementptr i32, i32* %arraydecay78, i64 26, !dbg !17416
  %43 = load i32, i32* %add.ptr79, align 4, !dbg !17416
  %and80 = and i32 %43, 16711680, !dbg !17416
  %shr81 = lshr i32 %and80, 8, !dbg !17416
  %or82 = or i32 %or74, %shr81, !dbg !17416
  %44 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17416
  %caps83 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %44, i32 0, i32 9, !dbg !17416
  %hca_cur84 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps83, i32 0, i32 0, !dbg !17416
  %arrayidx85 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur84, i64 0, i64 0, !dbg !17416
  %arraydecay86 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx85, i64 0, i64 0, !dbg !17416
  %add.ptr87 = getelementptr i32, i32* %arraydecay86, i64 26, !dbg !17416
  %45 = load i32, i32* %add.ptr87, align 4, !dbg !17416
  %and88 = and i32 %45, -16777216, !dbg !17416
  %shr89 = lshr i32 %and88, 24, !dbg !17416
  %or90 = or i32 %or82, %shr89, !dbg !17416
  br label %cond.end98, !dbg !17416

cond.false91:                                     ; preds = %land.lhs.true
  %46 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17416
  %caps92 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %46, i32 0, i32 9, !dbg !17416
  %hca_cur93 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps92, i32 0, i32 0, !dbg !17416
  %arrayidx94 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur93, i64 0, i64 0, !dbg !17416
  %arraydecay95 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx94, i64 0, i64 0, !dbg !17416
  %add.ptr96 = getelementptr i32, i32* %arraydecay95, i64 26, !dbg !17416
  %47 = load i32, i32* %add.ptr96, align 4, !dbg !17416
  %call97 = call i32 @__fswab32(i32 %47) #10, !dbg !17416
  br label %cond.end98, !dbg !17416

cond.end98:                                       ; preds = %cond.false91, %cond.true59
  %cond99 = phi i32 [ %or90, %cond.true59 ], [ %call97, %cond.false91 ], !dbg !17416
  %shr100 = lshr i32 %cond99, 29, !dbg !17416
  %and101 = and i32 %shr100, 1, !dbg !17416
  %tobool102 = icmp ne i32 %and101, 0, !dbg !17416
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !17417

if.then103:                                       ; preds = %cond.end98
  br label %unlock, !dbg !17418

if.end104:                                        ; preds = %cond.end98, %cond.end
  %48 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17419
  %49 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17420
  %vport105 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %49, i32 0, i32 1, !dbg !17421
  %50 = load i32, i32* %vport105, align 8, !dbg !17421
  %conv = trunc i32 %50 to i16, !dbg !17420
  %call106 = call i32 @mlx5_query_vport_down_stats(%struct.mlx5_core_dev* %48, i16 zeroext %conv, i8 zeroext 1, i64* %rx_discard_vport_down, i64* %tx_discard_vport_down) #8, !dbg !17422
  store i32 %call106, i32* %err, align 4, !dbg !17423
  %51 = load i32, i32* %err, align 4, !dbg !17424
  %tobool107 = icmp ne i32 %51, 0, !dbg !17424
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !17426

if.then108:                                       ; preds = %if.end104
  br label %unlock, !dbg !17427

if.end109:                                        ; preds = %if.end104
  %52 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17428
  %caps110 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %52, i32 0, i32 9, !dbg !17428
  %hca_cur111 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps110, i32 0, i32 0, !dbg !17428
  %arrayidx112 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur111, i64 0, i64 0, !dbg !17428
  %arraydecay113 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx112, i64 0, i64 0, !dbg !17428
  %add.ptr114 = getelementptr i32, i32* %arraydecay113, i64 26, !dbg !17428
  %53 = load i32, i32* %add.ptr114, align 4, !dbg !17428
  %54 = call i1 @llvm.is.constant.i32(i32 %53), !dbg !17428
  br i1 %54, label %cond.true115, label %cond.false147, !dbg !17428

cond.true115:                                     ; preds = %if.end109
  %55 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17428
  %caps116 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %55, i32 0, i32 9, !dbg !17428
  %hca_cur117 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps116, i32 0, i32 0, !dbg !17428
  %arrayidx118 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur117, i64 0, i64 0, !dbg !17428
  %arraydecay119 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx118, i64 0, i64 0, !dbg !17428
  %add.ptr120 = getelementptr i32, i32* %arraydecay119, i64 26, !dbg !17428
  %56 = load i32, i32* %add.ptr120, align 4, !dbg !17428
  %and121 = and i32 %56, 255, !dbg !17428
  %shl122 = shl i32 %and121, 24, !dbg !17428
  %57 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17428
  %caps123 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %57, i32 0, i32 9, !dbg !17428
  %hca_cur124 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps123, i32 0, i32 0, !dbg !17428
  %arrayidx125 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur124, i64 0, i64 0, !dbg !17428
  %arraydecay126 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx125, i64 0, i64 0, !dbg !17428
  %add.ptr127 = getelementptr i32, i32* %arraydecay126, i64 26, !dbg !17428
  %58 = load i32, i32* %add.ptr127, align 4, !dbg !17428
  %and128 = and i32 %58, 65280, !dbg !17428
  %shl129 = shl i32 %and128, 8, !dbg !17428
  %or130 = or i32 %shl122, %shl129, !dbg !17428
  %59 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17428
  %caps131 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %59, i32 0, i32 9, !dbg !17428
  %hca_cur132 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps131, i32 0, i32 0, !dbg !17428
  %arrayidx133 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur132, i64 0, i64 0, !dbg !17428
  %arraydecay134 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx133, i64 0, i64 0, !dbg !17428
  %add.ptr135 = getelementptr i32, i32* %arraydecay134, i64 26, !dbg !17428
  %60 = load i32, i32* %add.ptr135, align 4, !dbg !17428
  %and136 = and i32 %60, 16711680, !dbg !17428
  %shr137 = lshr i32 %and136, 8, !dbg !17428
  %or138 = or i32 %or130, %shr137, !dbg !17428
  %61 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17428
  %caps139 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %61, i32 0, i32 9, !dbg !17428
  %hca_cur140 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps139, i32 0, i32 0, !dbg !17428
  %arrayidx141 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur140, i64 0, i64 0, !dbg !17428
  %arraydecay142 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx141, i64 0, i64 0, !dbg !17428
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 26, !dbg !17428
  %62 = load i32, i32* %add.ptr143, align 4, !dbg !17428
  %and144 = and i32 %62, -16777216, !dbg !17428
  %shr145 = lshr i32 %and144, 24, !dbg !17428
  %or146 = or i32 %or138, %shr145, !dbg !17428
  br label %cond.end154, !dbg !17428

cond.false147:                                    ; preds = %if.end109
  %63 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17428
  %caps148 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %63, i32 0, i32 9, !dbg !17428
  %hca_cur149 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps148, i32 0, i32 0, !dbg !17428
  %arrayidx150 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur149, i64 0, i64 0, !dbg !17428
  %arraydecay151 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx150, i64 0, i64 0, !dbg !17428
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 26, !dbg !17428
  %64 = load i32, i32* %add.ptr152, align 4, !dbg !17428
  %call153 = call i32 @__fswab32(i32 %64) #10, !dbg !17428
  br label %cond.end154, !dbg !17428

cond.end154:                                      ; preds = %cond.false147, %cond.true115
  %cond155 = phi i32 [ %or146, %cond.true115 ], [ %call153, %cond.false147 ], !dbg !17428
  %shr156 = lshr i32 %cond155, 30, !dbg !17428
  %and157 = and i32 %shr156, 1, !dbg !17428
  %tobool158 = icmp ne i32 %and157, 0, !dbg !17428
  br i1 %tobool158, label %if.then159, label %if.end161, !dbg !17430

if.then159:                                       ; preds = %cond.end154
  %65 = load i64, i64* %rx_discard_vport_down, align 8, !dbg !17431
  %66 = load %struct.mlx5_vport_drop_stats*, %struct.mlx5_vport_drop_stats** %stats.addr, align 8, !dbg !17432
  %rx_dropped160 = getelementptr inbounds %struct.mlx5_vport_drop_stats, %struct.mlx5_vport_drop_stats* %66, i32 0, i32 0, !dbg !17433
  %67 = load i64, i64* %rx_dropped160, align 8, !dbg !17434
  %add = add i64 %67, %65, !dbg !17434
  store i64 %add, i64* %rx_dropped160, align 8, !dbg !17434
  br label %if.end161, !dbg !17432

if.end161:                                        ; preds = %if.then159, %cond.end154
  %68 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17435
  %caps162 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %68, i32 0, i32 9, !dbg !17435
  %hca_cur163 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps162, i32 0, i32 0, !dbg !17435
  %arrayidx164 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur163, i64 0, i64 0, !dbg !17435
  %arraydecay165 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx164, i64 0, i64 0, !dbg !17435
  %add.ptr166 = getelementptr i32, i32* %arraydecay165, i64 26, !dbg !17435
  %69 = load i32, i32* %add.ptr166, align 4, !dbg !17435
  %70 = call i1 @llvm.is.constant.i32(i32 %69), !dbg !17435
  br i1 %70, label %cond.true167, label %cond.false199, !dbg !17435

cond.true167:                                     ; preds = %if.end161
  %71 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17435
  %caps168 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %71, i32 0, i32 9, !dbg !17435
  %hca_cur169 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps168, i32 0, i32 0, !dbg !17435
  %arrayidx170 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur169, i64 0, i64 0, !dbg !17435
  %arraydecay171 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx170, i64 0, i64 0, !dbg !17435
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 26, !dbg !17435
  %72 = load i32, i32* %add.ptr172, align 4, !dbg !17435
  %and173 = and i32 %72, 255, !dbg !17435
  %shl174 = shl i32 %and173, 24, !dbg !17435
  %73 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17435
  %caps175 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %73, i32 0, i32 9, !dbg !17435
  %hca_cur176 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps175, i32 0, i32 0, !dbg !17435
  %arrayidx177 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur176, i64 0, i64 0, !dbg !17435
  %arraydecay178 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx177, i64 0, i64 0, !dbg !17435
  %add.ptr179 = getelementptr i32, i32* %arraydecay178, i64 26, !dbg !17435
  %74 = load i32, i32* %add.ptr179, align 4, !dbg !17435
  %and180 = and i32 %74, 65280, !dbg !17435
  %shl181 = shl i32 %and180, 8, !dbg !17435
  %or182 = or i32 %shl174, %shl181, !dbg !17435
  %75 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17435
  %caps183 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %75, i32 0, i32 9, !dbg !17435
  %hca_cur184 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps183, i32 0, i32 0, !dbg !17435
  %arrayidx185 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur184, i64 0, i64 0, !dbg !17435
  %arraydecay186 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx185, i64 0, i64 0, !dbg !17435
  %add.ptr187 = getelementptr i32, i32* %arraydecay186, i64 26, !dbg !17435
  %76 = load i32, i32* %add.ptr187, align 4, !dbg !17435
  %and188 = and i32 %76, 16711680, !dbg !17435
  %shr189 = lshr i32 %and188, 8, !dbg !17435
  %or190 = or i32 %or182, %shr189, !dbg !17435
  %77 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17435
  %caps191 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %77, i32 0, i32 9, !dbg !17435
  %hca_cur192 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps191, i32 0, i32 0, !dbg !17435
  %arrayidx193 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur192, i64 0, i64 0, !dbg !17435
  %arraydecay194 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx193, i64 0, i64 0, !dbg !17435
  %add.ptr195 = getelementptr i32, i32* %arraydecay194, i64 26, !dbg !17435
  %78 = load i32, i32* %add.ptr195, align 4, !dbg !17435
  %and196 = and i32 %78, -16777216, !dbg !17435
  %shr197 = lshr i32 %and196, 24, !dbg !17435
  %or198 = or i32 %or190, %shr197, !dbg !17435
  br label %cond.end206, !dbg !17435

cond.false199:                                    ; preds = %if.end161
  %79 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17435
  %caps200 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %79, i32 0, i32 9, !dbg !17435
  %hca_cur201 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps200, i32 0, i32 0, !dbg !17435
  %arrayidx202 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur201, i64 0, i64 0, !dbg !17435
  %arraydecay203 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx202, i64 0, i64 0, !dbg !17435
  %add.ptr204 = getelementptr i32, i32* %arraydecay203, i64 26, !dbg !17435
  %80 = load i32, i32* %add.ptr204, align 4, !dbg !17435
  %call205 = call i32 @__fswab32(i32 %80) #10, !dbg !17435
  br label %cond.end206, !dbg !17435

cond.end206:                                      ; preds = %cond.false199, %cond.true167
  %cond207 = phi i32 [ %or198, %cond.true167 ], [ %call205, %cond.false199 ], !dbg !17435
  %shr208 = lshr i32 %cond207, 29, !dbg !17435
  %and209 = and i32 %shr208, 1, !dbg !17435
  %tobool210 = icmp ne i32 %and209, 0, !dbg !17435
  br i1 %tobool210, label %if.then211, label %if.end214, !dbg !17437

if.then211:                                       ; preds = %cond.end206
  %81 = load i64, i64* %tx_discard_vport_down, align 8, !dbg !17438
  %82 = load %struct.mlx5_vport_drop_stats*, %struct.mlx5_vport_drop_stats** %stats.addr, align 8, !dbg !17439
  %tx_dropped212 = getelementptr inbounds %struct.mlx5_vport_drop_stats, %struct.mlx5_vport_drop_stats* %82, i32 0, i32 1, !dbg !17440
  %83 = load i64, i64* %tx_dropped212, align 8, !dbg !17441
  %add213 = add i64 %83, %81, !dbg !17441
  store i64 %add213, i64* %tx_dropped212, align 8, !dbg !17441
  br label %if.end214, !dbg !17439

if.end214:                                        ; preds = %if.then211, %cond.end206
  br label %unlock, !dbg !17435

unlock:                                           ; preds = %if.end214, %if.then108, %if.then103, %if.then1
  call void @llvm.dbg.label(metadata !17442), !dbg !17443
  %84 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17444
  %state_lock215 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %84, i32 0, i32 10, !dbg !17445
  call void @mutex_unlock(%struct.mutex* %state_lock215) #8, !dbg !17446
  %85 = load i32, i32* %err, align 4, !dbg !17447
  store i32 %85, i32* %retval, align 4, !dbg !17448
  br label %return, !dbg !17448

return:                                           ; preds = %unlock, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !17449
  ret i32 %86, !dbg !17449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @mlx5_eswitch_mode(%struct.mlx5_eswitch* %esw) #0 !dbg !17450 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17453, metadata !DIExpression()), !dbg !17454
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17455
  %tobool = icmp ne %struct.mlx5_eswitch* %0, null, !dbg !17455
  br i1 %tobool, label %land.lhs.true, label %cond.false42, !dbg !17455

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17455
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !17455
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17455
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !17455
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17455
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !17455
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17455
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !17455
  %3 = load i32, i32* %add.ptr, align 4, !dbg !17455
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !17455
  br i1 %4, label %cond.true, label %cond.false, !dbg !17455

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17455
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !17455
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17455
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !17455
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !17455
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !17455
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !17455
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !17455
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !17455
  %and = and i32 %7, 255, !dbg !17455
  %shl = shl i32 %and, 24, !dbg !17455
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17455
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !17455
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !17455
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !17455
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !17455
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 0, !dbg !17455
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !17455
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 13, !dbg !17455
  %10 = load i32, i32* %add.ptr12, align 4, !dbg !17455
  %and13 = and i32 %10, 65280, !dbg !17455
  %shl14 = shl i32 %and13, 8, !dbg !17455
  %or = or i32 %shl, %shl14, !dbg !17455
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17455
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !17455
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !17455
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !17455
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !17455
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 0, !dbg !17455
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !17455
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 13, !dbg !17455
  %13 = load i32, i32* %add.ptr20, align 4, !dbg !17455
  %and21 = and i32 %13, 16711680, !dbg !17455
  %shr = lshr i32 %and21, 8, !dbg !17455
  %or22 = or i32 %or, %shr, !dbg !17455
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17455
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !17455
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !17455
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !17455
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !17455
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 0, !dbg !17455
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !17455
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 13, !dbg !17455
  %16 = load i32, i32* %add.ptr28, align 4, !dbg !17455
  %and29 = and i32 %16, -16777216, !dbg !17455
  %shr30 = lshr i32 %and29, 24, !dbg !17455
  %or31 = or i32 %or22, %shr30, !dbg !17455
  br label %cond.end, !dbg !17455

cond.false:                                       ; preds = %land.lhs.true
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17455
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !17455
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !17455
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !17455
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !17455
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 0, !dbg !17455
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !17455
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 13, !dbg !17455
  %19 = load i32, i32* %add.ptr37, align 4, !dbg !17455
  %call = call i32 @__fswab32(i32 %19) #10, !dbg !17455
  br label %cond.end, !dbg !17455

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !17455
  %shr38 = lshr i32 %cond, 24, !dbg !17455
  %and39 = and i32 %shr38, 1, !dbg !17455
  %tobool40 = icmp ne i32 %and39, 0, !dbg !17455
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !17455

cond.true41:                                      ; preds = %cond.end
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17456
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 14, !dbg !17457
  %21 = load i32, i32* %mode, align 8, !dbg !17457
  br label %cond.end43, !dbg !17455

cond.false42:                                     ; preds = %cond.end, %entry
  br label %cond.end43, !dbg !17455

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi i32 [ %21, %cond.true41 ], [ 0, %cond.false42 ], !dbg !17455
  %conv = trunc i32 %cond44 to i8, !dbg !17455
  ret i8 %conv, !dbg !17458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_get_encap_mode(%struct.mlx5_core_dev* %dev) #0 !dbg !17459 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !17462, metadata !DIExpression()), !dbg !17463
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !17464, metadata !DIExpression()), !dbg !17465
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17466
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 17, !dbg !17467
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !17468
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !17468
  store %struct.mlx5_eswitch* %1, %struct.mlx5_eswitch** %esw, align 8, !dbg !17469
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17470
  %tobool = icmp ne %struct.mlx5_eswitch* %2, null, !dbg !17470
  br i1 %tobool, label %land.lhs.true, label %cond.false43, !dbg !17470

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17470
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !17470
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17470
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !17470
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17470
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !17470
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17470
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !17470
  %5 = load i32, i32* %add.ptr, align 4, !dbg !17470
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !17470
  br i1 %6, label %cond.true, label %cond.false, !dbg !17470

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17470
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !17470
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !17470
  %caps3 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !17470
  %hca_cur4 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps3, i32 0, i32 0, !dbg !17470
  %arrayidx5 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur4, i64 0, i64 0, !dbg !17470
  %arraydecay6 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx5, i64 0, i64 0, !dbg !17470
  %add.ptr7 = getelementptr i32, i32* %arraydecay6, i64 13, !dbg !17470
  %9 = load i32, i32* %add.ptr7, align 4, !dbg !17470
  %and = and i32 %9, 255, !dbg !17470
  %shl = shl i32 %and, 24, !dbg !17470
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17470
  %dev8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !17470
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev8, align 8, !dbg !17470
  %caps9 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !17470
  %hca_cur10 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps9, i32 0, i32 0, !dbg !17470
  %arrayidx11 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur10, i64 0, i64 0, !dbg !17470
  %arraydecay12 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx11, i64 0, i64 0, !dbg !17470
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 13, !dbg !17470
  %12 = load i32, i32* %add.ptr13, align 4, !dbg !17470
  %and14 = and i32 %12, 65280, !dbg !17470
  %shl15 = shl i32 %and14, 8, !dbg !17470
  %or = or i32 %shl, %shl15, !dbg !17470
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17470
  %dev16 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !17470
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev16, align 8, !dbg !17470
  %caps17 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !17470
  %hca_cur18 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps17, i32 0, i32 0, !dbg !17470
  %arrayidx19 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur18, i64 0, i64 0, !dbg !17470
  %arraydecay20 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx19, i64 0, i64 0, !dbg !17470
  %add.ptr21 = getelementptr i32, i32* %arraydecay20, i64 13, !dbg !17470
  %15 = load i32, i32* %add.ptr21, align 4, !dbg !17470
  %and22 = and i32 %15, 16711680, !dbg !17470
  %shr = lshr i32 %and22, 8, !dbg !17470
  %or23 = or i32 %or, %shr, !dbg !17470
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17470
  %dev24 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !17470
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev24, align 8, !dbg !17470
  %caps25 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !17470
  %hca_cur26 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps25, i32 0, i32 0, !dbg !17470
  %arrayidx27 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur26, i64 0, i64 0, !dbg !17470
  %arraydecay28 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx27, i64 0, i64 0, !dbg !17470
  %add.ptr29 = getelementptr i32, i32* %arraydecay28, i64 13, !dbg !17470
  %18 = load i32, i32* %add.ptr29, align 4, !dbg !17470
  %and30 = and i32 %18, -16777216, !dbg !17470
  %shr31 = lshr i32 %and30, 24, !dbg !17470
  %or32 = or i32 %or23, %shr31, !dbg !17470
  br label %cond.end, !dbg !17470

cond.false:                                       ; preds = %land.lhs.true
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17470
  %dev33 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !17470
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev33, align 8, !dbg !17470
  %caps34 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !17470
  %hca_cur35 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps34, i32 0, i32 0, !dbg !17470
  %arrayidx36 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur35, i64 0, i64 0, !dbg !17470
  %arraydecay37 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx36, i64 0, i64 0, !dbg !17470
  %add.ptr38 = getelementptr i32, i32* %arraydecay37, i64 13, !dbg !17470
  %21 = load i32, i32* %add.ptr38, align 4, !dbg !17470
  %call = call i32 @__fswab32(i32 %21) #10, !dbg !17470
  br label %cond.end, !dbg !17470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or32, %cond.true ], [ %call, %cond.false ], !dbg !17470
  %shr39 = lshr i32 %cond, 24, !dbg !17470
  %and40 = and i32 %shr39, 1, !dbg !17470
  %tobool41 = icmp ne i32 %and40, 0, !dbg !17470
  br i1 %tobool41, label %cond.true42, label %cond.false43, !dbg !17470

cond.true42:                                      ; preds = %cond.end
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17471
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 13, !dbg !17472
  %encap = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 18, !dbg !17473
  %23 = load i32, i32* %encap, align 8, !dbg !17473
  br label %cond.end44, !dbg !17470

cond.false43:                                     ; preds = %cond.end, %entry
  br label %cond.end44, !dbg !17470

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond45 = phi i32 [ %23, %cond.true42 ], [ 0, %cond.false43 ], !dbg !17470
  ret i32 %cond45, !dbg !17474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlx5_esw_lag_prereq(%struct.mlx5_core_dev* %dev0, %struct.mlx5_core_dev* %dev1) #0 !dbg !17475 {
entry:
  %retval = alloca i1, align 1
  %dev0.addr = alloca %struct.mlx5_core_dev*, align 8
  %dev1.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev0, %struct.mlx5_core_dev** %dev0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev0.addr, metadata !17478, metadata !DIExpression()), !dbg !17479
  store %struct.mlx5_core_dev* %dev1, %struct.mlx5_core_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev1.addr, metadata !17480, metadata !DIExpression()), !dbg !17481
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev0.addr, align 8, !dbg !17482
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 17, !dbg !17484
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !17485
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !17485
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 14, !dbg !17486
  %2 = load i32, i32* %mode, align 8, !dbg !17486
  %cmp = icmp eq i32 %2, 0, !dbg !17487
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !17488

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1.addr, align 8, !dbg !17489
  %priv1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 17, !dbg !17490
  %eswitch2 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv1, i32 0, i32 26, !dbg !17491
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch2, align 8, !dbg !17491
  %mode3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 14, !dbg !17492
  %5 = load i32, i32* %mode3, align 8, !dbg !17492
  %cmp4 = icmp eq i32 %5, 0, !dbg !17493
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !17494

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev0.addr, align 8, !dbg !17495
  %priv5 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 17, !dbg !17496
  %eswitch6 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv5, i32 0, i32 26, !dbg !17497
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch6, align 8, !dbg !17497
  %mode7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 14, !dbg !17498
  %8 = load i32, i32* %mode7, align 8, !dbg !17498
  %cmp8 = icmp eq i32 %8, 2, !dbg !17499
  br i1 %cmp8, label %land.lhs.true9, label %if.end, !dbg !17500

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1.addr, align 8, !dbg !17501
  %priv10 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 17, !dbg !17502
  %eswitch11 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv10, i32 0, i32 26, !dbg !17503
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch11, align 8, !dbg !17503
  %mode12 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 14, !dbg !17504
  %11 = load i32, i32* %mode12, align 8, !dbg !17504
  %cmp13 = icmp eq i32 %11, 2, !dbg !17505
  br i1 %cmp13, label %if.then, label %if.end, !dbg !17506

if.then:                                          ; preds = %land.lhs.true9, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !17507
  br label %return, !dbg !17507

if.end:                                           ; preds = %land.lhs.true9, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !17508
  br label %return, !dbg !17508

return:                                           ; preds = %if.end, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !17509
  ret i1 %12, !dbg !17509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlx5_esw_multipath_prereq(%struct.mlx5_core_dev* %dev0, %struct.mlx5_core_dev* %dev1) #0 !dbg !17510 {
entry:
  %dev0.addr = alloca %struct.mlx5_core_dev*, align 8
  %dev1.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev0, %struct.mlx5_core_dev** %dev0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev0.addr, metadata !17511, metadata !DIExpression()), !dbg !17512
  store %struct.mlx5_core_dev* %dev1, %struct.mlx5_core_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev1.addr, metadata !17513, metadata !DIExpression()), !dbg !17514
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev0.addr, align 8, !dbg !17515
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 17, !dbg !17516
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !17517
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !17517
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 14, !dbg !17518
  %2 = load i32, i32* %mode, align 8, !dbg !17518
  %cmp = icmp eq i32 %2, 2, !dbg !17519
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17520

land.rhs:                                         ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1.addr, align 8, !dbg !17521
  %priv1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 17, !dbg !17522
  %eswitch2 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv1, i32 0, i32 26, !dbg !17523
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch2, align 8, !dbg !17523
  %mode3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 14, !dbg !17524
  %5 = load i32, i32* %mode3, align 8, !dbg !17524
  %cmp4 = icmp eq i32 %5, 2, !dbg !17525
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !17526
  ret i1 %6, !dbg !17527
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #3 !dbg !17528 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17530, metadata !DIExpression()), !dbg !17531
  %0 = load i32, i32* %val.addr, align 4, !dbg !17532
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #13, !dbg !17533, !srcloc !17534
  store i32 %1, i32* %val.addr, align 4, !dbg !17533
  %2 = load i32, i32* %val.addr, align 4, !dbg !17535
  ret i32 %2, !dbg !17536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %esw) #0 !dbg !17537 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17538, metadata !DIExpression()), !dbg !17539
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17540
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 8, !dbg !17541
  %1 = load i32, i32* %total_vports, align 4, !dbg !17541
  %sub = sub i32 %1, 2, !dbg !17542
  ret i32 %sub, !dbg !17543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_uplink_idx(%struct.mlx5_eswitch* %esw) #0 !dbg !17544 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17545, metadata !DIExpression()), !dbg !17546
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17547
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 8, !dbg !17548
  %1 = load i32, i32* %total_vports, align 4, !dbg !17548
  %sub = sub i32 %1, 1, !dbg !17549
  ret i32 %sub, !dbg !17550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kvmalloc(i64 %size, i32 %flags) #0 !dbg !17551 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !17552, metadata !DIExpression()), !dbg !17553
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17554, metadata !DIExpression()), !dbg !17555
  %0 = load i64, i64* %size.addr, align 8, !dbg !17556
  %1 = load i32, i32* %flags.addr, align 4, !dbg !17557
  %call = call i8* @kvmalloc_node(i64 %0, i32 %1, i32 -1) #8, !dbg !17558
  ret i8* %call, !dbg !17559
}

; Function Attrs: noredzone
declare dso_local i8* @kvmalloc_node(i64, i32, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_vport_setup(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !17560 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %vport_num = alloca i16, align 2
  %flags = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17563, metadata !DIExpression()), !dbg !17564
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17565, metadata !DIExpression()), !dbg !17566
  call void @llvm.dbg.declare(metadata i16* %vport_num, metadata !17567, metadata !DIExpression()), !dbg !17568
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17569
  %vport1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %0, i32 0, i32 1, !dbg !17570
  %1 = load i32, i32* %vport1, align 8, !dbg !17570
  %conv = trunc i32 %1 to i16, !dbg !17569
  store i16 %conv, i16* %vport_num, align 2, !dbg !17568
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !17571, metadata !DIExpression()), !dbg !17572
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17573, metadata !DIExpression()), !dbg !17574
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17575
  %3 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17576
  %call = call i32 @esw_vport_setup_acl(%struct.mlx5_eswitch* %2, %struct.mlx5_vport* %3) #8, !dbg !17577
  store i32 %call, i32* %err, align 4, !dbg !17578
  %4 = load i32, i32* %err, align 4, !dbg !17579
  %tobool = icmp ne i32 %4, 0, !dbg !17579
  br i1 %tobool, label %if.then, label %if.end, !dbg !17581

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %err, align 4, !dbg !17582
  store i32 %5, i32* %retval, align 4, !dbg !17583
  br label %return, !dbg !17583

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17584
  %7 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17585
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17586
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %8, i32 0, i32 11, !dbg !17587
  %max_rate = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 6, !dbg !17588
  %9 = load i32, i32* %max_rate, align 8, !dbg !17588
  %10 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17589
  %qos = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %10, i32 0, i32 12, !dbg !17590
  %bw_share = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos, i32 0, i32 2, !dbg !17591
  %11 = load i32, i32* %bw_share, align 8, !dbg !17591
  %call2 = call i32 @esw_vport_enable_qos(%struct.mlx5_eswitch* %6, %struct.mlx5_vport* %7, i32 %9, i32 %11) #8, !dbg !17592
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17593
  %13 = load i16, i16* %vport_num, align 2, !dbg !17595
  %call3 = call zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %12, i16 zeroext %13) #8, !dbg !17596
  br i1 %call3, label %if.then4, label %if.end5, !dbg !17597

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !17598
  br label %return, !dbg !17598

if.end5:                                          ; preds = %if.end
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17599
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !17600
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17600
  %16 = load i16, i16* %vport_num, align 2, !dbg !17601
  %17 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17602
  %info6 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %17, i32 0, i32 11, !dbg !17603
  %link_state = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info6, i32 0, i32 4, !dbg !17604
  %18 = load i32, i32* %link_state, align 8, !dbg !17604
  %conv7 = trunc i32 %18 to i8, !dbg !17602
  %call8 = call i32 @mlx5_modify_vport_admin_state(%struct.mlx5_core_dev* %15, i8 zeroext 1, i16 zeroext %16, i8 zeroext 1, i8 zeroext %conv7) #8, !dbg !17605
  %19 = load i16, i16* %vport_num, align 2, !dbg !17606
  %tobool9 = icmp ne i16 %19, 0, !dbg !17606
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !17608

if.then10:                                        ; preds = %if.end5
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17609
  %dev11 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 0, !dbg !17611
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev11, align 8, !dbg !17611
  %22 = load i16, i16* %vport_num, align 2, !dbg !17612
  %23 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17613
  %info12 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %23, i32 0, i32 11, !dbg !17614
  %mac = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info12, i32 0, i32 0, !dbg !17615
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !17613
  %call13 = call i32 @mlx5_modify_nic_vport_mac_address(%struct.mlx5_core_dev* %21, i16 zeroext %22, i8* %arraydecay) #8, !dbg !17616
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17617
  %dev14 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 0, !dbg !17618
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev14, align 8, !dbg !17618
  %26 = load i16, i16* %vport_num, align 2, !dbg !17619
  %27 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17620
  %info15 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %27, i32 0, i32 11, !dbg !17621
  %node_guid = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info15, i32 0, i32 3, !dbg !17622
  %28 = load i64, i64* %node_guid, align 8, !dbg !17622
  %call16 = call i32 @mlx5_modify_nic_vport_node_guid(%struct.mlx5_core_dev* %25, i16 zeroext %26, i64 %28) #8, !dbg !17623
  br label %if.end17, !dbg !17624

if.end17:                                         ; preds = %if.then10, %if.end5
  %29 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17625
  %info18 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %29, i32 0, i32 11, !dbg !17626
  %vlan = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info18, i32 0, i32 1, !dbg !17627
  %30 = load i16, i16* %vlan, align 2, !dbg !17627
  %conv19 = zext i16 %30 to i32, !dbg !17625
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !17625
  br i1 %tobool20, label %lor.end, label %lor.rhs, !dbg !17628

lor.rhs:                                          ; preds = %if.end17
  %31 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17629
  %info21 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %31, i32 0, i32 11, !dbg !17630
  %qos22 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info21, i32 0, i32 2, !dbg !17631
  %32 = load i8, i8* %qos22, align 8, !dbg !17631
  %conv23 = zext i8 %32 to i32, !dbg !17629
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !17628
  br label %lor.end, !dbg !17628

lor.end:                                          ; preds = %lor.rhs, %if.end17
  %33 = phi i1 [ true, %if.end17 ], [ %tobool24, %lor.rhs ]
  %34 = zext i1 %33 to i64, !dbg !17632
  %cond = select i1 %33, i32 3, i32 0, !dbg !17632
  store i32 %cond, i32* %flags, align 4, !dbg !17633
  %35 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17634
  %dev25 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %35, i32 0, i32 0, !dbg !17635
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev25, align 8, !dbg !17635
  %37 = load i16, i16* %vport_num, align 2, !dbg !17636
  %38 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17637
  %info26 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %38, i32 0, i32 11, !dbg !17638
  %vlan27 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info26, i32 0, i32 1, !dbg !17639
  %39 = load i16, i16* %vlan27, align 2, !dbg !17639
  %40 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17640
  %info28 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %40, i32 0, i32 11, !dbg !17641
  %qos29 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info28, i32 0, i32 2, !dbg !17642
  %41 = load i8, i8* %qos29, align 8, !dbg !17642
  %42 = load i32, i32* %flags, align 4, !dbg !17643
  %conv30 = trunc i32 %42 to i8, !dbg !17643
  %call31 = call i32 @modify_esw_vport_cvlan(%struct.mlx5_core_dev* %36, i16 zeroext %37, i16 zeroext %39, i8 zeroext %41, i8 zeroext %conv30) #8, !dbg !17644
  store i32 0, i32* %retval, align 4, !dbg !17645
  br label %return, !dbg !17645

return:                                           ; preds = %lor.end, %if.then4, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !17646
  ret i32 %43, !dbg !17646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !17647 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17648, metadata !DIExpression()), !dbg !17649
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !17650, metadata !DIExpression()), !dbg !17651
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17652
  %manager_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 15, !dbg !17653
  %1 = load i16, i16* %manager_vport, align 4, !dbg !17653
  %conv = zext i16 %1 to i32, !dbg !17652
  %2 = load i16, i16* %vport_num.addr, align 2, !dbg !17654
  %conv1 = zext i16 %2 to i32, !dbg !17654
  %cmp = icmp eq i32 %conv, %conv1, !dbg !17655
  ret i1 %cmp, !dbg !17656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_core_is_ecpf(%struct.mlx5_core_dev* %dev) #0 !dbg !17657 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !17660, metadata !DIExpression()), !dbg !17661
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17662
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !17663
  %embedded_cpu = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 6, !dbg !17664
  %1 = load i8, i8* %embedded_cpu, align 8, !dbg !17664
  %tobool = icmp ne i8 %1, 0, !dbg !17662
  ret i1 %tobool, !dbg !17665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_vport_setup_acl(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !17666 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17667, metadata !DIExpression()), !dbg !17668
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17669, metadata !DIExpression()), !dbg !17670
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17671
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !17673
  %1 = load i32, i32* %mode, align 8, !dbg !17673
  %cmp = icmp eq i32 %1, 1, !dbg !17674
  br i1 %cmp, label %if.then, label %if.else, !dbg !17675

if.then:                                          ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17676
  %3 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17677
  %call = call i32 @esw_vport_create_legacy_acl_tables(%struct.mlx5_eswitch* %2, %struct.mlx5_vport* %3) #8, !dbg !17678
  store i32 %call, i32* %retval, align 4, !dbg !17679
  br label %return, !dbg !17679

if.else:                                          ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17680
  %5 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17681
  %call1 = call i32 @esw_vport_create_offloads_acl_tables(%struct.mlx5_eswitch* %4, %struct.mlx5_vport* %5) #8, !dbg !17682
  store i32 %call1, i32* %retval, align 4, !dbg !17683
  br label %return, !dbg !17683

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !17684
  ret i32 %6, !dbg !17684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_vport_enable_qos(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport, i32 %initial_max_rate, i32 %initial_bw_share) #0 !dbg !17685 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %initial_max_rate.addr = alloca i32, align 4
  %initial_bw_share.addr = alloca i32, align 4
  %sched_ctx = alloca [16 x i32], align 16
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %vport_elem = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v307 = alloca i32, align 4
  %_v486 = alloca i32, align 4
  %_v696 = alloca i32, align 4
  %_v905 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17686, metadata !DIExpression()), !dbg !17687
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17688, metadata !DIExpression()), !dbg !17689
  store i32 %initial_max_rate, i32* %initial_max_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initial_max_rate.addr, metadata !17690, metadata !DIExpression()), !dbg !17691
  store i32 %initial_bw_share, i32* %initial_bw_share.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initial_bw_share.addr, metadata !17692, metadata !DIExpression()), !dbg !17693
  call void @llvm.dbg.declare(metadata [16 x i32]* %sched_ctx, metadata !17694, metadata !DIExpression()), !dbg !17695
  %0 = bitcast [16 x i32]* %sched_ctx to i8*, !dbg !17695
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 64, i1 false), !dbg !17695
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !17696, metadata !DIExpression()), !dbg !17697
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17698
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !17699
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17699
  store %struct.mlx5_core_dev* %2, %struct.mlx5_core_dev** %dev, align 8, !dbg !17697
  call void @llvm.dbg.declare(metadata i8** %vport_elem, metadata !17700, metadata !DIExpression()), !dbg !17701
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17702, metadata !DIExpression()), !dbg !17703
  store i32 0, i32* %err, align 4, !dbg !17703
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17704
  %qos = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 12, !dbg !17706
  %enabled = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos, i32 0, i32 0, !dbg !17707
  %4 = load i8, i8* %enabled, align 8, !dbg !17707
  %tobool = trunc i8 %4 to i1, !dbg !17707
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !17708

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17709
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !17709
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17709
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !17709
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17709
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 16, !dbg !17709
  %6 = load i32, i32* %add.ptr, align 4, !dbg !17709
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !17709
  br i1 %7, label %cond.true, label %cond.false, !dbg !17709

cond.true:                                        ; preds = %lor.lhs.false
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17709
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !17709
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !17709
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !17709
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !17709
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 16, !dbg !17709
  %9 = load i32, i32* %add.ptr6, align 4, !dbg !17709
  %and = and i32 %9, 255, !dbg !17709
  %shl = shl i32 %and, 24, !dbg !17709
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17709
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !17709
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !17709
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !17709
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !17709
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 16, !dbg !17709
  %11 = load i32, i32* %add.ptr11, align 4, !dbg !17709
  %and12 = and i32 %11, 65280, !dbg !17709
  %shl13 = shl i32 %and12, 8, !dbg !17709
  %or = or i32 %shl, %shl13, !dbg !17709
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17709
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !17709
  %hca_cur15 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps14, i32 0, i32 0, !dbg !17709
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !17709
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !17709
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 16, !dbg !17709
  %13 = load i32, i32* %add.ptr18, align 4, !dbg !17709
  %and19 = and i32 %13, 16711680, !dbg !17709
  %shr = lshr i32 %and19, 8, !dbg !17709
  %or20 = or i32 %or, %shr, !dbg !17709
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17709
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !17709
  %hca_cur22 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps21, i32 0, i32 0, !dbg !17709
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !17709
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !17709
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 16, !dbg !17709
  %15 = load i32, i32* %add.ptr25, align 4, !dbg !17709
  %and26 = and i32 %15, -16777216, !dbg !17709
  %shr27 = lshr i32 %and26, 24, !dbg !17709
  %or28 = or i32 %or20, %shr27, !dbg !17709
  br label %cond.end, !dbg !17709

cond.false:                                       ; preds = %lor.lhs.false
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17709
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !17709
  %hca_cur30 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps29, i32 0, i32 0, !dbg !17709
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !17709
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !17709
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 16, !dbg !17709
  %17 = load i32, i32* %add.ptr33, align 4, !dbg !17709
  %call = call i32 @__fswab32(i32 %17) #10, !dbg !17709
  br label %cond.end, !dbg !17709

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call, %cond.false ], !dbg !17709
  %shr34 = lshr i32 %cond, 4, !dbg !17709
  %and35 = and i32 %shr34, 1, !dbg !17709
  %tobool36 = icmp ne i32 %and35, 0, !dbg !17709
  br i1 %tobool36, label %lor.lhs.false37, label %if.then, !dbg !17710

lor.lhs.false37:                                  ; preds = %cond.end
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17711
  %caps38 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !17711
  %hca_cur39 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps38, i32 0, i32 0, !dbg !17711
  %arrayidx40 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur39, i64 0, i64 12, !dbg !17711
  %arraydecay41 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx40, i64 0, i64 0, !dbg !17711
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 0, !dbg !17711
  %19 = load i32, i32* %add.ptr42, align 4, !dbg !17711
  %20 = call i1 @llvm.is.constant.i32(i32 %19), !dbg !17711
  br i1 %20, label %cond.true43, label %cond.false75, !dbg !17711

cond.true43:                                      ; preds = %lor.lhs.false37
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17711
  %caps44 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !17711
  %hca_cur45 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps44, i32 0, i32 0, !dbg !17711
  %arrayidx46 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur45, i64 0, i64 12, !dbg !17711
  %arraydecay47 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx46, i64 0, i64 0, !dbg !17711
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 0, !dbg !17711
  %22 = load i32, i32* %add.ptr48, align 4, !dbg !17711
  %and49 = and i32 %22, 255, !dbg !17711
  %shl50 = shl i32 %and49, 24, !dbg !17711
  %23 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17711
  %caps51 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %23, i32 0, i32 9, !dbg !17711
  %hca_cur52 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps51, i32 0, i32 0, !dbg !17711
  %arrayidx53 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur52, i64 0, i64 12, !dbg !17711
  %arraydecay54 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx53, i64 0, i64 0, !dbg !17711
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 0, !dbg !17711
  %24 = load i32, i32* %add.ptr55, align 4, !dbg !17711
  %and56 = and i32 %24, 65280, !dbg !17711
  %shl57 = shl i32 %and56, 8, !dbg !17711
  %or58 = or i32 %shl50, %shl57, !dbg !17711
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17711
  %caps59 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %25, i32 0, i32 9, !dbg !17711
  %hca_cur60 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps59, i32 0, i32 0, !dbg !17711
  %arrayidx61 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur60, i64 0, i64 12, !dbg !17711
  %arraydecay62 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx61, i64 0, i64 0, !dbg !17711
  %add.ptr63 = getelementptr i32, i32* %arraydecay62, i64 0, !dbg !17711
  %26 = load i32, i32* %add.ptr63, align 4, !dbg !17711
  %and64 = and i32 %26, 16711680, !dbg !17711
  %shr65 = lshr i32 %and64, 8, !dbg !17711
  %or66 = or i32 %or58, %shr65, !dbg !17711
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17711
  %caps67 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !17711
  %hca_cur68 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps67, i32 0, i32 0, !dbg !17711
  %arrayidx69 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur68, i64 0, i64 12, !dbg !17711
  %arraydecay70 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx69, i64 0, i64 0, !dbg !17711
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 0, !dbg !17711
  %28 = load i32, i32* %add.ptr71, align 4, !dbg !17711
  %and72 = and i32 %28, -16777216, !dbg !17711
  %shr73 = lshr i32 %and72, 24, !dbg !17711
  %or74 = or i32 %or66, %shr73, !dbg !17711
  br label %cond.end82, !dbg !17711

cond.false75:                                     ; preds = %lor.lhs.false37
  %29 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17711
  %caps76 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %29, i32 0, i32 9, !dbg !17711
  %hca_cur77 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps76, i32 0, i32 0, !dbg !17711
  %arrayidx78 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur77, i64 0, i64 12, !dbg !17711
  %arraydecay79 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx78, i64 0, i64 0, !dbg !17711
  %add.ptr80 = getelementptr i32, i32* %arraydecay79, i64 0, !dbg !17711
  %30 = load i32, i32* %add.ptr80, align 4, !dbg !17711
  %call81 = call i32 @__fswab32(i32 %30) #10, !dbg !17711
  br label %cond.end82, !dbg !17711

cond.end82:                                       ; preds = %cond.false75, %cond.true43
  %cond83 = phi i32 [ %or74, %cond.true43 ], [ %call81, %cond.false75 ], !dbg !17711
  %shr84 = lshr i32 %cond83, 30, !dbg !17711
  %and85 = and i32 %shr84, 1, !dbg !17711
  %tobool86 = icmp ne i32 %and85, 0, !dbg !17711
  br i1 %tobool86, label %if.end, label %if.then, !dbg !17712

if.then:                                          ; preds = %cond.end82, %cond.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !17713
  br label %return, !dbg !17713

if.end:                                           ; preds = %cond.end82
  %31 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17714
  %qos87 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %31, i32 0, i32 12, !dbg !17716
  %enabled88 = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos87, i32 0, i32 0, !dbg !17717
  %32 = load i8, i8* %enabled88, align 8, !dbg !17717
  %tobool89 = trunc i8 %32 to i1, !dbg !17717
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !17718

if.then90:                                        ; preds = %if.end
  store i32 -17, i32* %retval, align 4, !dbg !17719
  br label %return, !dbg !17719

if.end91:                                         ; preds = %if.end
  br label %do.body, !dbg !17720

do.body:                                          ; preds = %if.end91
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !17721, metadata !DIExpression()), !dbg !17723
  store i32 1, i32* %_v, align 4, !dbg !17723
  br label %do.body92, !dbg !17723

do.body92:                                        ; preds = %do.body
  br label %do.end, !dbg !17724

do.end:                                           ; preds = %do.body92
  %arraydecay93 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 0, !dbg !17723
  %33 = load i32, i32* %add.ptr94, align 4, !dbg !17723
  %34 = call i1 @llvm.is.constant.i32(i32 %33), !dbg !17723
  br i1 %34, label %cond.true95, label %cond.false115, !dbg !17723

cond.true95:                                      ; preds = %do.end
  %arraydecay96 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !17723
  %35 = load i32, i32* %add.ptr97, align 4, !dbg !17723
  %and98 = and i32 %35, 255, !dbg !17723
  %shl99 = shl i32 %and98, 24, !dbg !17723
  %arraydecay100 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !17723
  %36 = load i32, i32* %add.ptr101, align 4, !dbg !17723
  %and102 = and i32 %36, 65280, !dbg !17723
  %shl103 = shl i32 %and102, 8, !dbg !17723
  %or104 = or i32 %shl99, %shl103, !dbg !17723
  %arraydecay105 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 0, !dbg !17723
  %37 = load i32, i32* %add.ptr106, align 4, !dbg !17723
  %and107 = and i32 %37, 16711680, !dbg !17723
  %shr108 = lshr i32 %and107, 8, !dbg !17723
  %or109 = or i32 %or104, %shr108, !dbg !17723
  %arraydecay110 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 0, !dbg !17723
  %38 = load i32, i32* %add.ptr111, align 4, !dbg !17723
  %and112 = and i32 %38, -16777216, !dbg !17723
  %shr113 = lshr i32 %and112, 24, !dbg !17723
  %or114 = or i32 %or109, %shr113, !dbg !17723
  br label %cond.end119, !dbg !17723

cond.false115:                                    ; preds = %do.end
  %arraydecay116 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 0, !dbg !17723
  %39 = load i32, i32* %add.ptr117, align 4, !dbg !17723
  %call118 = call i32 @__fswab32(i32 %39) #10, !dbg !17723
  br label %cond.end119, !dbg !17723

cond.end119:                                      ; preds = %cond.false115, %cond.true95
  %cond120 = phi i32 [ %or114, %cond.true95 ], [ %call118, %cond.false115 ], !dbg !17723
  %and121 = and i32 %cond120, 16777215, !dbg !17723
  %40 = load i32, i32* %_v, align 4, !dbg !17723
  %and122 = and i32 %40, 255, !dbg !17723
  %shl123 = shl i32 %and122, 24, !dbg !17723
  %or124 = or i32 %and121, %shl123, !dbg !17723
  %41 = call i1 @llvm.is.constant.i32(i32 %or124), !dbg !17723
  br i1 %41, label %cond.true125, label %cond.false265, !dbg !17723

cond.true125:                                     ; preds = %cond.end119
  %arraydecay126 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr127 = getelementptr i32, i32* %arraydecay126, i64 0, !dbg !17723
  %42 = load i32, i32* %add.ptr127, align 4, !dbg !17723
  %43 = call i1 @llvm.is.constant.i32(i32 %42), !dbg !17723
  br i1 %43, label %cond.true128, label %cond.false148, !dbg !17723

cond.true128:                                     ; preds = %cond.true125
  %arraydecay129 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr130 = getelementptr i32, i32* %arraydecay129, i64 0, !dbg !17723
  %44 = load i32, i32* %add.ptr130, align 4, !dbg !17723
  %and131 = and i32 %44, 255, !dbg !17723
  %shl132 = shl i32 %and131, 24, !dbg !17723
  %arraydecay133 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr134 = getelementptr i32, i32* %arraydecay133, i64 0, !dbg !17723
  %45 = load i32, i32* %add.ptr134, align 4, !dbg !17723
  %and135 = and i32 %45, 65280, !dbg !17723
  %shl136 = shl i32 %and135, 8, !dbg !17723
  %or137 = or i32 %shl132, %shl136, !dbg !17723
  %arraydecay138 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr139 = getelementptr i32, i32* %arraydecay138, i64 0, !dbg !17723
  %46 = load i32, i32* %add.ptr139, align 4, !dbg !17723
  %and140 = and i32 %46, 16711680, !dbg !17723
  %shr141 = lshr i32 %and140, 8, !dbg !17723
  %or142 = or i32 %or137, %shr141, !dbg !17723
  %arraydecay143 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr144 = getelementptr i32, i32* %arraydecay143, i64 0, !dbg !17723
  %47 = load i32, i32* %add.ptr144, align 4, !dbg !17723
  %and145 = and i32 %47, -16777216, !dbg !17723
  %shr146 = lshr i32 %and145, 24, !dbg !17723
  %or147 = or i32 %or142, %shr146, !dbg !17723
  br label %cond.end152, !dbg !17723

cond.false148:                                    ; preds = %cond.true125
  %arraydecay149 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr150 = getelementptr i32, i32* %arraydecay149, i64 0, !dbg !17723
  %48 = load i32, i32* %add.ptr150, align 4, !dbg !17723
  %call151 = call i32 @__fswab32(i32 %48) #10, !dbg !17723
  br label %cond.end152, !dbg !17723

cond.end152:                                      ; preds = %cond.false148, %cond.true128
  %cond153 = phi i32 [ %or147, %cond.true128 ], [ %call151, %cond.false148 ], !dbg !17723
  %and154 = and i32 %cond153, 16777215, !dbg !17723
  %49 = load i32, i32* %_v, align 4, !dbg !17723
  %and155 = and i32 %49, 255, !dbg !17723
  %shl156 = shl i32 %and155, 24, !dbg !17723
  %or157 = or i32 %and154, %shl156, !dbg !17723
  %and158 = and i32 %or157, 255, !dbg !17723
  %shl159 = shl i32 %and158, 24, !dbg !17723
  %arraydecay160 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr161 = getelementptr i32, i32* %arraydecay160, i64 0, !dbg !17723
  %50 = load i32, i32* %add.ptr161, align 4, !dbg !17723
  %51 = call i1 @llvm.is.constant.i32(i32 %50), !dbg !17723
  br i1 %51, label %cond.true162, label %cond.false182, !dbg !17723

cond.true162:                                     ; preds = %cond.end152
  %arraydecay163 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr164 = getelementptr i32, i32* %arraydecay163, i64 0, !dbg !17723
  %52 = load i32, i32* %add.ptr164, align 4, !dbg !17723
  %and165 = and i32 %52, 255, !dbg !17723
  %shl166 = shl i32 %and165, 24, !dbg !17723
  %arraydecay167 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 0, !dbg !17723
  %53 = load i32, i32* %add.ptr168, align 4, !dbg !17723
  %and169 = and i32 %53, 65280, !dbg !17723
  %shl170 = shl i32 %and169, 8, !dbg !17723
  %or171 = or i32 %shl166, %shl170, !dbg !17723
  %arraydecay172 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr173 = getelementptr i32, i32* %arraydecay172, i64 0, !dbg !17723
  %54 = load i32, i32* %add.ptr173, align 4, !dbg !17723
  %and174 = and i32 %54, 16711680, !dbg !17723
  %shr175 = lshr i32 %and174, 8, !dbg !17723
  %or176 = or i32 %or171, %shr175, !dbg !17723
  %arraydecay177 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr178 = getelementptr i32, i32* %arraydecay177, i64 0, !dbg !17723
  %55 = load i32, i32* %add.ptr178, align 4, !dbg !17723
  %and179 = and i32 %55, -16777216, !dbg !17723
  %shr180 = lshr i32 %and179, 24, !dbg !17723
  %or181 = or i32 %or176, %shr180, !dbg !17723
  br label %cond.end186, !dbg !17723

cond.false182:                                    ; preds = %cond.end152
  %arraydecay183 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr184 = getelementptr i32, i32* %arraydecay183, i64 0, !dbg !17723
  %56 = load i32, i32* %add.ptr184, align 4, !dbg !17723
  %call185 = call i32 @__fswab32(i32 %56) #10, !dbg !17723
  br label %cond.end186, !dbg !17723

cond.end186:                                      ; preds = %cond.false182, %cond.true162
  %cond187 = phi i32 [ %or181, %cond.true162 ], [ %call185, %cond.false182 ], !dbg !17723
  %and188 = and i32 %cond187, 16777215, !dbg !17723
  %57 = load i32, i32* %_v, align 4, !dbg !17723
  %and189 = and i32 %57, 255, !dbg !17723
  %shl190 = shl i32 %and189, 24, !dbg !17723
  %or191 = or i32 %and188, %shl190, !dbg !17723
  %and192 = and i32 %or191, 65280, !dbg !17723
  %shl193 = shl i32 %and192, 8, !dbg !17723
  %or194 = or i32 %shl159, %shl193, !dbg !17723
  %arraydecay195 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr196 = getelementptr i32, i32* %arraydecay195, i64 0, !dbg !17723
  %58 = load i32, i32* %add.ptr196, align 4, !dbg !17723
  %59 = call i1 @llvm.is.constant.i32(i32 %58), !dbg !17723
  br i1 %59, label %cond.true197, label %cond.false217, !dbg !17723

cond.true197:                                     ; preds = %cond.end186
  %arraydecay198 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr199 = getelementptr i32, i32* %arraydecay198, i64 0, !dbg !17723
  %60 = load i32, i32* %add.ptr199, align 4, !dbg !17723
  %and200 = and i32 %60, 255, !dbg !17723
  %shl201 = shl i32 %and200, 24, !dbg !17723
  %arraydecay202 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr203 = getelementptr i32, i32* %arraydecay202, i64 0, !dbg !17723
  %61 = load i32, i32* %add.ptr203, align 4, !dbg !17723
  %and204 = and i32 %61, 65280, !dbg !17723
  %shl205 = shl i32 %and204, 8, !dbg !17723
  %or206 = or i32 %shl201, %shl205, !dbg !17723
  %arraydecay207 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr208 = getelementptr i32, i32* %arraydecay207, i64 0, !dbg !17723
  %62 = load i32, i32* %add.ptr208, align 4, !dbg !17723
  %and209 = and i32 %62, 16711680, !dbg !17723
  %shr210 = lshr i32 %and209, 8, !dbg !17723
  %or211 = or i32 %or206, %shr210, !dbg !17723
  %arraydecay212 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr213 = getelementptr i32, i32* %arraydecay212, i64 0, !dbg !17723
  %63 = load i32, i32* %add.ptr213, align 4, !dbg !17723
  %and214 = and i32 %63, -16777216, !dbg !17723
  %shr215 = lshr i32 %and214, 24, !dbg !17723
  %or216 = or i32 %or211, %shr215, !dbg !17723
  br label %cond.end221, !dbg !17723

cond.false217:                                    ; preds = %cond.end186
  %arraydecay218 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr219 = getelementptr i32, i32* %arraydecay218, i64 0, !dbg !17723
  %64 = load i32, i32* %add.ptr219, align 4, !dbg !17723
  %call220 = call i32 @__fswab32(i32 %64) #10, !dbg !17723
  br label %cond.end221, !dbg !17723

cond.end221:                                      ; preds = %cond.false217, %cond.true197
  %cond222 = phi i32 [ %or216, %cond.true197 ], [ %call220, %cond.false217 ], !dbg !17723
  %and223 = and i32 %cond222, 16777215, !dbg !17723
  %65 = load i32, i32* %_v, align 4, !dbg !17723
  %and224 = and i32 %65, 255, !dbg !17723
  %shl225 = shl i32 %and224, 24, !dbg !17723
  %or226 = or i32 %and223, %shl225, !dbg !17723
  %and227 = and i32 %or226, 16711680, !dbg !17723
  %shr228 = lshr i32 %and227, 8, !dbg !17723
  %or229 = or i32 %or194, %shr228, !dbg !17723
  %arraydecay230 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr231 = getelementptr i32, i32* %arraydecay230, i64 0, !dbg !17723
  %66 = load i32, i32* %add.ptr231, align 4, !dbg !17723
  %67 = call i1 @llvm.is.constant.i32(i32 %66), !dbg !17723
  br i1 %67, label %cond.true232, label %cond.false252, !dbg !17723

cond.true232:                                     ; preds = %cond.end221
  %arraydecay233 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr234 = getelementptr i32, i32* %arraydecay233, i64 0, !dbg !17723
  %68 = load i32, i32* %add.ptr234, align 4, !dbg !17723
  %and235 = and i32 %68, 255, !dbg !17723
  %shl236 = shl i32 %and235, 24, !dbg !17723
  %arraydecay237 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr238 = getelementptr i32, i32* %arraydecay237, i64 0, !dbg !17723
  %69 = load i32, i32* %add.ptr238, align 4, !dbg !17723
  %and239 = and i32 %69, 65280, !dbg !17723
  %shl240 = shl i32 %and239, 8, !dbg !17723
  %or241 = or i32 %shl236, %shl240, !dbg !17723
  %arraydecay242 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 0, !dbg !17723
  %70 = load i32, i32* %add.ptr243, align 4, !dbg !17723
  %and244 = and i32 %70, 16711680, !dbg !17723
  %shr245 = lshr i32 %and244, 8, !dbg !17723
  %or246 = or i32 %or241, %shr245, !dbg !17723
  %arraydecay247 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr248 = getelementptr i32, i32* %arraydecay247, i64 0, !dbg !17723
  %71 = load i32, i32* %add.ptr248, align 4, !dbg !17723
  %and249 = and i32 %71, -16777216, !dbg !17723
  %shr250 = lshr i32 %and249, 24, !dbg !17723
  %or251 = or i32 %or246, %shr250, !dbg !17723
  br label %cond.end256, !dbg !17723

cond.false252:                                    ; preds = %cond.end221
  %arraydecay253 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr254 = getelementptr i32, i32* %arraydecay253, i64 0, !dbg !17723
  %72 = load i32, i32* %add.ptr254, align 4, !dbg !17723
  %call255 = call i32 @__fswab32(i32 %72) #10, !dbg !17723
  br label %cond.end256, !dbg !17723

cond.end256:                                      ; preds = %cond.false252, %cond.true232
  %cond257 = phi i32 [ %or251, %cond.true232 ], [ %call255, %cond.false252 ], !dbg !17723
  %and258 = and i32 %cond257, 16777215, !dbg !17723
  %73 = load i32, i32* %_v, align 4, !dbg !17723
  %and259 = and i32 %73, 255, !dbg !17723
  %shl260 = shl i32 %and259, 24, !dbg !17723
  %or261 = or i32 %and258, %shl260, !dbg !17723
  %and262 = and i32 %or261, -16777216, !dbg !17723
  %shr263 = lshr i32 %and262, 24, !dbg !17723
  %or264 = or i32 %or229, %shr263, !dbg !17723
  br label %cond.end299, !dbg !17723

cond.false265:                                    ; preds = %cond.end119
  %arraydecay266 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr267 = getelementptr i32, i32* %arraydecay266, i64 0, !dbg !17723
  %74 = load i32, i32* %add.ptr267, align 4, !dbg !17723
  %75 = call i1 @llvm.is.constant.i32(i32 %74), !dbg !17723
  br i1 %75, label %cond.true268, label %cond.false288, !dbg !17723

cond.true268:                                     ; preds = %cond.false265
  %arraydecay269 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr270 = getelementptr i32, i32* %arraydecay269, i64 0, !dbg !17723
  %76 = load i32, i32* %add.ptr270, align 4, !dbg !17723
  %and271 = and i32 %76, 255, !dbg !17723
  %shl272 = shl i32 %and271, 24, !dbg !17723
  %arraydecay273 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 0, !dbg !17723
  %77 = load i32, i32* %add.ptr274, align 4, !dbg !17723
  %and275 = and i32 %77, 65280, !dbg !17723
  %shl276 = shl i32 %and275, 8, !dbg !17723
  %or277 = or i32 %shl272, %shl276, !dbg !17723
  %arraydecay278 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr279 = getelementptr i32, i32* %arraydecay278, i64 0, !dbg !17723
  %78 = load i32, i32* %add.ptr279, align 4, !dbg !17723
  %and280 = and i32 %78, 16711680, !dbg !17723
  %shr281 = lshr i32 %and280, 8, !dbg !17723
  %or282 = or i32 %or277, %shr281, !dbg !17723
  %arraydecay283 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr284 = getelementptr i32, i32* %arraydecay283, i64 0, !dbg !17723
  %79 = load i32, i32* %add.ptr284, align 4, !dbg !17723
  %and285 = and i32 %79, -16777216, !dbg !17723
  %shr286 = lshr i32 %and285, 24, !dbg !17723
  %or287 = or i32 %or282, %shr286, !dbg !17723
  br label %cond.end292, !dbg !17723

cond.false288:                                    ; preds = %cond.false265
  %arraydecay289 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr290 = getelementptr i32, i32* %arraydecay289, i64 0, !dbg !17723
  %80 = load i32, i32* %add.ptr290, align 4, !dbg !17723
  %call291 = call i32 @__fswab32(i32 %80) #10, !dbg !17723
  br label %cond.end292, !dbg !17723

cond.end292:                                      ; preds = %cond.false288, %cond.true268
  %cond293 = phi i32 [ %or287, %cond.true268 ], [ %call291, %cond.false288 ], !dbg !17723
  %and294 = and i32 %cond293, 16777215, !dbg !17723
  %81 = load i32, i32* %_v, align 4, !dbg !17723
  %and295 = and i32 %81, 255, !dbg !17723
  %shl296 = shl i32 %and295, 24, !dbg !17723
  %or297 = or i32 %and294, %shl296, !dbg !17723
  %call298 = call i32 @__fswab32(i32 %or297) #10, !dbg !17723
  br label %cond.end299, !dbg !17723

cond.end299:                                      ; preds = %cond.end292, %cond.end256
  %cond300 = phi i32 [ %or264, %cond.end256 ], [ %call298, %cond.end292 ], !dbg !17723
  %arraydecay301 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17723
  %add.ptr302 = getelementptr i32, i32* %arraydecay301, i64 0, !dbg !17723
  store i32 %cond300, i32* %add.ptr302, align 4, !dbg !17723
  br label %do.end303, !dbg !17723

do.end303:                                        ; preds = %cond.end299
  %arraydecay304 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17726
  %82 = bitcast i32* %arraydecay304 to i8*, !dbg !17726
  %add.ptr305 = getelementptr i8, i8* %82, i64 4, !dbg !17726
  store i8* %add.ptr305, i8** %vport_elem, align 8, !dbg !17727
  br label %do.body306, !dbg !17728

do.body306:                                       ; preds = %do.end303
  call void @llvm.dbg.declare(metadata i32* %_v307, metadata !17729, metadata !DIExpression()), !dbg !17731
  %83 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17731
  %vport308 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %83, i32 0, i32 1, !dbg !17731
  %84 = load i32, i32* %vport308, align 8, !dbg !17731
  store i32 %84, i32* %_v307, align 4, !dbg !17731
  br label %do.body309, !dbg !17731

do.body309:                                       ; preds = %do.body306
  br label %do.end310, !dbg !17732

do.end310:                                        ; preds = %do.body309
  %85 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %86 = bitcast i8* %85 to i32*, !dbg !17731
  %add.ptr311 = getelementptr i32, i32* %86, i64 0, !dbg !17731
  %87 = load i32, i32* %add.ptr311, align 4, !dbg !17731
  %88 = call i1 @llvm.is.constant.i32(i32 %87), !dbg !17731
  br i1 %88, label %cond.true312, label %cond.false328, !dbg !17731

cond.true312:                                     ; preds = %do.end310
  %89 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %90 = bitcast i8* %89 to i32*, !dbg !17731
  %add.ptr313 = getelementptr i32, i32* %90, i64 0, !dbg !17731
  %91 = load i32, i32* %add.ptr313, align 4, !dbg !17731
  %and314 = and i32 %91, 255, !dbg !17731
  %shl315 = shl i32 %and314, 24, !dbg !17731
  %92 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %93 = bitcast i8* %92 to i32*, !dbg !17731
  %add.ptr316 = getelementptr i32, i32* %93, i64 0, !dbg !17731
  %94 = load i32, i32* %add.ptr316, align 4, !dbg !17731
  %and317 = and i32 %94, 65280, !dbg !17731
  %shl318 = shl i32 %and317, 8, !dbg !17731
  %or319 = or i32 %shl315, %shl318, !dbg !17731
  %95 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %96 = bitcast i8* %95 to i32*, !dbg !17731
  %add.ptr320 = getelementptr i32, i32* %96, i64 0, !dbg !17731
  %97 = load i32, i32* %add.ptr320, align 4, !dbg !17731
  %and321 = and i32 %97, 16711680, !dbg !17731
  %shr322 = lshr i32 %and321, 8, !dbg !17731
  %or323 = or i32 %or319, %shr322, !dbg !17731
  %98 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %99 = bitcast i8* %98 to i32*, !dbg !17731
  %add.ptr324 = getelementptr i32, i32* %99, i64 0, !dbg !17731
  %100 = load i32, i32* %add.ptr324, align 4, !dbg !17731
  %and325 = and i32 %100, -16777216, !dbg !17731
  %shr326 = lshr i32 %and325, 24, !dbg !17731
  %or327 = or i32 %or323, %shr326, !dbg !17731
  br label %cond.end331, !dbg !17731

cond.false328:                                    ; preds = %do.end310
  %101 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %102 = bitcast i8* %101 to i32*, !dbg !17731
  %add.ptr329 = getelementptr i32, i32* %102, i64 0, !dbg !17731
  %103 = load i32, i32* %add.ptr329, align 4, !dbg !17731
  %call330 = call i32 @__fswab32(i32 %103) #10, !dbg !17731
  br label %cond.end331, !dbg !17731

cond.end331:                                      ; preds = %cond.false328, %cond.true312
  %cond332 = phi i32 [ %or327, %cond.true312 ], [ %call330, %cond.false328 ], !dbg !17731
  %and333 = and i32 %cond332, -65536, !dbg !17731
  %104 = load i32, i32* %_v307, align 4, !dbg !17731
  %and334 = and i32 %104, 65535, !dbg !17731
  %shl335 = shl i32 %and334, 0, !dbg !17731
  %or336 = or i32 %and333, %shl335, !dbg !17731
  %105 = call i1 @llvm.is.constant.i32(i32 %or336), !dbg !17731
  br i1 %105, label %cond.true337, label %cond.false453, !dbg !17731

cond.true337:                                     ; preds = %cond.end331
  %106 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %107 = bitcast i8* %106 to i32*, !dbg !17731
  %add.ptr338 = getelementptr i32, i32* %107, i64 0, !dbg !17731
  %108 = load i32, i32* %add.ptr338, align 4, !dbg !17731
  %109 = call i1 @llvm.is.constant.i32(i32 %108), !dbg !17731
  br i1 %109, label %cond.true339, label %cond.false355, !dbg !17731

cond.true339:                                     ; preds = %cond.true337
  %110 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %111 = bitcast i8* %110 to i32*, !dbg !17731
  %add.ptr340 = getelementptr i32, i32* %111, i64 0, !dbg !17731
  %112 = load i32, i32* %add.ptr340, align 4, !dbg !17731
  %and341 = and i32 %112, 255, !dbg !17731
  %shl342 = shl i32 %and341, 24, !dbg !17731
  %113 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %114 = bitcast i8* %113 to i32*, !dbg !17731
  %add.ptr343 = getelementptr i32, i32* %114, i64 0, !dbg !17731
  %115 = load i32, i32* %add.ptr343, align 4, !dbg !17731
  %and344 = and i32 %115, 65280, !dbg !17731
  %shl345 = shl i32 %and344, 8, !dbg !17731
  %or346 = or i32 %shl342, %shl345, !dbg !17731
  %116 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %117 = bitcast i8* %116 to i32*, !dbg !17731
  %add.ptr347 = getelementptr i32, i32* %117, i64 0, !dbg !17731
  %118 = load i32, i32* %add.ptr347, align 4, !dbg !17731
  %and348 = and i32 %118, 16711680, !dbg !17731
  %shr349 = lshr i32 %and348, 8, !dbg !17731
  %or350 = or i32 %or346, %shr349, !dbg !17731
  %119 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %120 = bitcast i8* %119 to i32*, !dbg !17731
  %add.ptr351 = getelementptr i32, i32* %120, i64 0, !dbg !17731
  %121 = load i32, i32* %add.ptr351, align 4, !dbg !17731
  %and352 = and i32 %121, -16777216, !dbg !17731
  %shr353 = lshr i32 %and352, 24, !dbg !17731
  %or354 = or i32 %or350, %shr353, !dbg !17731
  br label %cond.end358, !dbg !17731

cond.false355:                                    ; preds = %cond.true337
  %122 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %123 = bitcast i8* %122 to i32*, !dbg !17731
  %add.ptr356 = getelementptr i32, i32* %123, i64 0, !dbg !17731
  %124 = load i32, i32* %add.ptr356, align 4, !dbg !17731
  %call357 = call i32 @__fswab32(i32 %124) #10, !dbg !17731
  br label %cond.end358, !dbg !17731

cond.end358:                                      ; preds = %cond.false355, %cond.true339
  %cond359 = phi i32 [ %or354, %cond.true339 ], [ %call357, %cond.false355 ], !dbg !17731
  %and360 = and i32 %cond359, -65536, !dbg !17731
  %125 = load i32, i32* %_v307, align 4, !dbg !17731
  %and361 = and i32 %125, 65535, !dbg !17731
  %shl362 = shl i32 %and361, 0, !dbg !17731
  %or363 = or i32 %and360, %shl362, !dbg !17731
  %and364 = and i32 %or363, 255, !dbg !17731
  %shl365 = shl i32 %and364, 24, !dbg !17731
  %126 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %127 = bitcast i8* %126 to i32*, !dbg !17731
  %add.ptr366 = getelementptr i32, i32* %127, i64 0, !dbg !17731
  %128 = load i32, i32* %add.ptr366, align 4, !dbg !17731
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !17731
  br i1 %129, label %cond.true367, label %cond.false383, !dbg !17731

cond.true367:                                     ; preds = %cond.end358
  %130 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %131 = bitcast i8* %130 to i32*, !dbg !17731
  %add.ptr368 = getelementptr i32, i32* %131, i64 0, !dbg !17731
  %132 = load i32, i32* %add.ptr368, align 4, !dbg !17731
  %and369 = and i32 %132, 255, !dbg !17731
  %shl370 = shl i32 %and369, 24, !dbg !17731
  %133 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %134 = bitcast i8* %133 to i32*, !dbg !17731
  %add.ptr371 = getelementptr i32, i32* %134, i64 0, !dbg !17731
  %135 = load i32, i32* %add.ptr371, align 4, !dbg !17731
  %and372 = and i32 %135, 65280, !dbg !17731
  %shl373 = shl i32 %and372, 8, !dbg !17731
  %or374 = or i32 %shl370, %shl373, !dbg !17731
  %136 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %137 = bitcast i8* %136 to i32*, !dbg !17731
  %add.ptr375 = getelementptr i32, i32* %137, i64 0, !dbg !17731
  %138 = load i32, i32* %add.ptr375, align 4, !dbg !17731
  %and376 = and i32 %138, 16711680, !dbg !17731
  %shr377 = lshr i32 %and376, 8, !dbg !17731
  %or378 = or i32 %or374, %shr377, !dbg !17731
  %139 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %140 = bitcast i8* %139 to i32*, !dbg !17731
  %add.ptr379 = getelementptr i32, i32* %140, i64 0, !dbg !17731
  %141 = load i32, i32* %add.ptr379, align 4, !dbg !17731
  %and380 = and i32 %141, -16777216, !dbg !17731
  %shr381 = lshr i32 %and380, 24, !dbg !17731
  %or382 = or i32 %or378, %shr381, !dbg !17731
  br label %cond.end386, !dbg !17731

cond.false383:                                    ; preds = %cond.end358
  %142 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %143 = bitcast i8* %142 to i32*, !dbg !17731
  %add.ptr384 = getelementptr i32, i32* %143, i64 0, !dbg !17731
  %144 = load i32, i32* %add.ptr384, align 4, !dbg !17731
  %call385 = call i32 @__fswab32(i32 %144) #10, !dbg !17731
  br label %cond.end386, !dbg !17731

cond.end386:                                      ; preds = %cond.false383, %cond.true367
  %cond387 = phi i32 [ %or382, %cond.true367 ], [ %call385, %cond.false383 ], !dbg !17731
  %and388 = and i32 %cond387, -65536, !dbg !17731
  %145 = load i32, i32* %_v307, align 4, !dbg !17731
  %and389 = and i32 %145, 65535, !dbg !17731
  %shl390 = shl i32 %and389, 0, !dbg !17731
  %or391 = or i32 %and388, %shl390, !dbg !17731
  %and392 = and i32 %or391, 65280, !dbg !17731
  %shl393 = shl i32 %and392, 8, !dbg !17731
  %or394 = or i32 %shl365, %shl393, !dbg !17731
  %146 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %147 = bitcast i8* %146 to i32*, !dbg !17731
  %add.ptr395 = getelementptr i32, i32* %147, i64 0, !dbg !17731
  %148 = load i32, i32* %add.ptr395, align 4, !dbg !17731
  %149 = call i1 @llvm.is.constant.i32(i32 %148), !dbg !17731
  br i1 %149, label %cond.true396, label %cond.false412, !dbg !17731

cond.true396:                                     ; preds = %cond.end386
  %150 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %151 = bitcast i8* %150 to i32*, !dbg !17731
  %add.ptr397 = getelementptr i32, i32* %151, i64 0, !dbg !17731
  %152 = load i32, i32* %add.ptr397, align 4, !dbg !17731
  %and398 = and i32 %152, 255, !dbg !17731
  %shl399 = shl i32 %and398, 24, !dbg !17731
  %153 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %154 = bitcast i8* %153 to i32*, !dbg !17731
  %add.ptr400 = getelementptr i32, i32* %154, i64 0, !dbg !17731
  %155 = load i32, i32* %add.ptr400, align 4, !dbg !17731
  %and401 = and i32 %155, 65280, !dbg !17731
  %shl402 = shl i32 %and401, 8, !dbg !17731
  %or403 = or i32 %shl399, %shl402, !dbg !17731
  %156 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %157 = bitcast i8* %156 to i32*, !dbg !17731
  %add.ptr404 = getelementptr i32, i32* %157, i64 0, !dbg !17731
  %158 = load i32, i32* %add.ptr404, align 4, !dbg !17731
  %and405 = and i32 %158, 16711680, !dbg !17731
  %shr406 = lshr i32 %and405, 8, !dbg !17731
  %or407 = or i32 %or403, %shr406, !dbg !17731
  %159 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %160 = bitcast i8* %159 to i32*, !dbg !17731
  %add.ptr408 = getelementptr i32, i32* %160, i64 0, !dbg !17731
  %161 = load i32, i32* %add.ptr408, align 4, !dbg !17731
  %and409 = and i32 %161, -16777216, !dbg !17731
  %shr410 = lshr i32 %and409, 24, !dbg !17731
  %or411 = or i32 %or407, %shr410, !dbg !17731
  br label %cond.end415, !dbg !17731

cond.false412:                                    ; preds = %cond.end386
  %162 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %163 = bitcast i8* %162 to i32*, !dbg !17731
  %add.ptr413 = getelementptr i32, i32* %163, i64 0, !dbg !17731
  %164 = load i32, i32* %add.ptr413, align 4, !dbg !17731
  %call414 = call i32 @__fswab32(i32 %164) #10, !dbg !17731
  br label %cond.end415, !dbg !17731

cond.end415:                                      ; preds = %cond.false412, %cond.true396
  %cond416 = phi i32 [ %or411, %cond.true396 ], [ %call414, %cond.false412 ], !dbg !17731
  %and417 = and i32 %cond416, -65536, !dbg !17731
  %165 = load i32, i32* %_v307, align 4, !dbg !17731
  %and418 = and i32 %165, 65535, !dbg !17731
  %shl419 = shl i32 %and418, 0, !dbg !17731
  %or420 = or i32 %and417, %shl419, !dbg !17731
  %and421 = and i32 %or420, 16711680, !dbg !17731
  %shr422 = lshr i32 %and421, 8, !dbg !17731
  %or423 = or i32 %or394, %shr422, !dbg !17731
  %166 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %167 = bitcast i8* %166 to i32*, !dbg !17731
  %add.ptr424 = getelementptr i32, i32* %167, i64 0, !dbg !17731
  %168 = load i32, i32* %add.ptr424, align 4, !dbg !17731
  %169 = call i1 @llvm.is.constant.i32(i32 %168), !dbg !17731
  br i1 %169, label %cond.true425, label %cond.false441, !dbg !17731

cond.true425:                                     ; preds = %cond.end415
  %170 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %171 = bitcast i8* %170 to i32*, !dbg !17731
  %add.ptr426 = getelementptr i32, i32* %171, i64 0, !dbg !17731
  %172 = load i32, i32* %add.ptr426, align 4, !dbg !17731
  %and427 = and i32 %172, 255, !dbg !17731
  %shl428 = shl i32 %and427, 24, !dbg !17731
  %173 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %174 = bitcast i8* %173 to i32*, !dbg !17731
  %add.ptr429 = getelementptr i32, i32* %174, i64 0, !dbg !17731
  %175 = load i32, i32* %add.ptr429, align 4, !dbg !17731
  %and430 = and i32 %175, 65280, !dbg !17731
  %shl431 = shl i32 %and430, 8, !dbg !17731
  %or432 = or i32 %shl428, %shl431, !dbg !17731
  %176 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %177 = bitcast i8* %176 to i32*, !dbg !17731
  %add.ptr433 = getelementptr i32, i32* %177, i64 0, !dbg !17731
  %178 = load i32, i32* %add.ptr433, align 4, !dbg !17731
  %and434 = and i32 %178, 16711680, !dbg !17731
  %shr435 = lshr i32 %and434, 8, !dbg !17731
  %or436 = or i32 %or432, %shr435, !dbg !17731
  %179 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %180 = bitcast i8* %179 to i32*, !dbg !17731
  %add.ptr437 = getelementptr i32, i32* %180, i64 0, !dbg !17731
  %181 = load i32, i32* %add.ptr437, align 4, !dbg !17731
  %and438 = and i32 %181, -16777216, !dbg !17731
  %shr439 = lshr i32 %and438, 24, !dbg !17731
  %or440 = or i32 %or436, %shr439, !dbg !17731
  br label %cond.end444, !dbg !17731

cond.false441:                                    ; preds = %cond.end415
  %182 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %183 = bitcast i8* %182 to i32*, !dbg !17731
  %add.ptr442 = getelementptr i32, i32* %183, i64 0, !dbg !17731
  %184 = load i32, i32* %add.ptr442, align 4, !dbg !17731
  %call443 = call i32 @__fswab32(i32 %184) #10, !dbg !17731
  br label %cond.end444, !dbg !17731

cond.end444:                                      ; preds = %cond.false441, %cond.true425
  %cond445 = phi i32 [ %or440, %cond.true425 ], [ %call443, %cond.false441 ], !dbg !17731
  %and446 = and i32 %cond445, -65536, !dbg !17731
  %185 = load i32, i32* %_v307, align 4, !dbg !17731
  %and447 = and i32 %185, 65535, !dbg !17731
  %shl448 = shl i32 %and447, 0, !dbg !17731
  %or449 = or i32 %and446, %shl448, !dbg !17731
  %and450 = and i32 %or449, -16777216, !dbg !17731
  %shr451 = lshr i32 %and450, 24, !dbg !17731
  %or452 = or i32 %or423, %shr451, !dbg !17731
  br label %cond.end481, !dbg !17731

cond.false453:                                    ; preds = %cond.end331
  %186 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %187 = bitcast i8* %186 to i32*, !dbg !17731
  %add.ptr454 = getelementptr i32, i32* %187, i64 0, !dbg !17731
  %188 = load i32, i32* %add.ptr454, align 4, !dbg !17731
  %189 = call i1 @llvm.is.constant.i32(i32 %188), !dbg !17731
  br i1 %189, label %cond.true455, label %cond.false471, !dbg !17731

cond.true455:                                     ; preds = %cond.false453
  %190 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %191 = bitcast i8* %190 to i32*, !dbg !17731
  %add.ptr456 = getelementptr i32, i32* %191, i64 0, !dbg !17731
  %192 = load i32, i32* %add.ptr456, align 4, !dbg !17731
  %and457 = and i32 %192, 255, !dbg !17731
  %shl458 = shl i32 %and457, 24, !dbg !17731
  %193 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %194 = bitcast i8* %193 to i32*, !dbg !17731
  %add.ptr459 = getelementptr i32, i32* %194, i64 0, !dbg !17731
  %195 = load i32, i32* %add.ptr459, align 4, !dbg !17731
  %and460 = and i32 %195, 65280, !dbg !17731
  %shl461 = shl i32 %and460, 8, !dbg !17731
  %or462 = or i32 %shl458, %shl461, !dbg !17731
  %196 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %197 = bitcast i8* %196 to i32*, !dbg !17731
  %add.ptr463 = getelementptr i32, i32* %197, i64 0, !dbg !17731
  %198 = load i32, i32* %add.ptr463, align 4, !dbg !17731
  %and464 = and i32 %198, 16711680, !dbg !17731
  %shr465 = lshr i32 %and464, 8, !dbg !17731
  %or466 = or i32 %or462, %shr465, !dbg !17731
  %199 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %200 = bitcast i8* %199 to i32*, !dbg !17731
  %add.ptr467 = getelementptr i32, i32* %200, i64 0, !dbg !17731
  %201 = load i32, i32* %add.ptr467, align 4, !dbg !17731
  %and468 = and i32 %201, -16777216, !dbg !17731
  %shr469 = lshr i32 %and468, 24, !dbg !17731
  %or470 = or i32 %or466, %shr469, !dbg !17731
  br label %cond.end474, !dbg !17731

cond.false471:                                    ; preds = %cond.false453
  %202 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %203 = bitcast i8* %202 to i32*, !dbg !17731
  %add.ptr472 = getelementptr i32, i32* %203, i64 0, !dbg !17731
  %204 = load i32, i32* %add.ptr472, align 4, !dbg !17731
  %call473 = call i32 @__fswab32(i32 %204) #10, !dbg !17731
  br label %cond.end474, !dbg !17731

cond.end474:                                      ; preds = %cond.false471, %cond.true455
  %cond475 = phi i32 [ %or470, %cond.true455 ], [ %call473, %cond.false471 ], !dbg !17731
  %and476 = and i32 %cond475, -65536, !dbg !17731
  %205 = load i32, i32* %_v307, align 4, !dbg !17731
  %and477 = and i32 %205, 65535, !dbg !17731
  %shl478 = shl i32 %and477, 0, !dbg !17731
  %or479 = or i32 %and476, %shl478, !dbg !17731
  %call480 = call i32 @__fswab32(i32 %or479) #10, !dbg !17731
  br label %cond.end481, !dbg !17731

cond.end481:                                      ; preds = %cond.end474, %cond.end444
  %cond482 = phi i32 [ %or452, %cond.end444 ], [ %call480, %cond.end474 ], !dbg !17731
  %206 = load i8*, i8** %vport_elem, align 8, !dbg !17731
  %207 = bitcast i8* %206 to i32*, !dbg !17731
  %add.ptr483 = getelementptr i32, i32* %207, i64 0, !dbg !17731
  store i32 %cond482, i32* %add.ptr483, align 4, !dbg !17731
  br label %do.end484, !dbg !17731

do.end484:                                        ; preds = %cond.end481
  br label %do.body485, !dbg !17734

do.body485:                                       ; preds = %do.end484
  call void @llvm.dbg.declare(metadata i32* %_v486, metadata !17735, metadata !DIExpression()), !dbg !17737
  %208 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17737
  %qos487 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %208, i32 0, i32 12, !dbg !17737
  %root_tsar_id = getelementptr inbounds %struct.anon.164, %struct.anon.164* %qos487, i32 0, i32 1, !dbg !17737
  %209 = load i32, i32* %root_tsar_id, align 4, !dbg !17737
  store i32 %209, i32* %_v486, align 4, !dbg !17737
  br label %do.body488, !dbg !17737

do.body488:                                       ; preds = %do.body485
  br label %do.end489, !dbg !17738

do.end489:                                        ; preds = %do.body488
  %arraydecay490 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr491 = getelementptr i32, i32* %arraydecay490, i64 2, !dbg !17737
  %210 = load i32, i32* %add.ptr491, align 4, !dbg !17737
  %211 = call i1 @llvm.is.constant.i32(i32 %210), !dbg !17737
  br i1 %211, label %cond.true492, label %cond.false512, !dbg !17737

cond.true492:                                     ; preds = %do.end489
  %arraydecay493 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr494 = getelementptr i32, i32* %arraydecay493, i64 2, !dbg !17737
  %212 = load i32, i32* %add.ptr494, align 4, !dbg !17737
  %and495 = and i32 %212, 255, !dbg !17737
  %shl496 = shl i32 %and495, 24, !dbg !17737
  %arraydecay497 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr498 = getelementptr i32, i32* %arraydecay497, i64 2, !dbg !17737
  %213 = load i32, i32* %add.ptr498, align 4, !dbg !17737
  %and499 = and i32 %213, 65280, !dbg !17737
  %shl500 = shl i32 %and499, 8, !dbg !17737
  %or501 = or i32 %shl496, %shl500, !dbg !17737
  %arraydecay502 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr503 = getelementptr i32, i32* %arraydecay502, i64 2, !dbg !17737
  %214 = load i32, i32* %add.ptr503, align 4, !dbg !17737
  %and504 = and i32 %214, 16711680, !dbg !17737
  %shr505 = lshr i32 %and504, 8, !dbg !17737
  %or506 = or i32 %or501, %shr505, !dbg !17737
  %arraydecay507 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr508 = getelementptr i32, i32* %arraydecay507, i64 2, !dbg !17737
  %215 = load i32, i32* %add.ptr508, align 4, !dbg !17737
  %and509 = and i32 %215, -16777216, !dbg !17737
  %shr510 = lshr i32 %and509, 24, !dbg !17737
  %or511 = or i32 %or506, %shr510, !dbg !17737
  br label %cond.end516, !dbg !17737

cond.false512:                                    ; preds = %do.end489
  %arraydecay513 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr514 = getelementptr i32, i32* %arraydecay513, i64 2, !dbg !17737
  %216 = load i32, i32* %add.ptr514, align 4, !dbg !17737
  %call515 = call i32 @__fswab32(i32 %216) #10, !dbg !17737
  br label %cond.end516, !dbg !17737

cond.end516:                                      ; preds = %cond.false512, %cond.true492
  %cond517 = phi i32 [ %or511, %cond.true492 ], [ %call515, %cond.false512 ], !dbg !17737
  %and518 = and i32 %cond517, 0, !dbg !17737
  %217 = load i32, i32* %_v486, align 4, !dbg !17737
  %shl519 = shl i32 %217, 0, !dbg !17737
  %or520 = or i32 %and518, %shl519, !dbg !17737
  %218 = call i1 @llvm.is.constant.i32(i32 %or520), !dbg !17737
  br i1 %218, label %cond.true521, label %cond.false657, !dbg !17737

cond.true521:                                     ; preds = %cond.end516
  %arraydecay522 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr523 = getelementptr i32, i32* %arraydecay522, i64 2, !dbg !17737
  %219 = load i32, i32* %add.ptr523, align 4, !dbg !17737
  %220 = call i1 @llvm.is.constant.i32(i32 %219), !dbg !17737
  br i1 %220, label %cond.true524, label %cond.false544, !dbg !17737

cond.true524:                                     ; preds = %cond.true521
  %arraydecay525 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr526 = getelementptr i32, i32* %arraydecay525, i64 2, !dbg !17737
  %221 = load i32, i32* %add.ptr526, align 4, !dbg !17737
  %and527 = and i32 %221, 255, !dbg !17737
  %shl528 = shl i32 %and527, 24, !dbg !17737
  %arraydecay529 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr530 = getelementptr i32, i32* %arraydecay529, i64 2, !dbg !17737
  %222 = load i32, i32* %add.ptr530, align 4, !dbg !17737
  %and531 = and i32 %222, 65280, !dbg !17737
  %shl532 = shl i32 %and531, 8, !dbg !17737
  %or533 = or i32 %shl528, %shl532, !dbg !17737
  %arraydecay534 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr535 = getelementptr i32, i32* %arraydecay534, i64 2, !dbg !17737
  %223 = load i32, i32* %add.ptr535, align 4, !dbg !17737
  %and536 = and i32 %223, 16711680, !dbg !17737
  %shr537 = lshr i32 %and536, 8, !dbg !17737
  %or538 = or i32 %or533, %shr537, !dbg !17737
  %arraydecay539 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr540 = getelementptr i32, i32* %arraydecay539, i64 2, !dbg !17737
  %224 = load i32, i32* %add.ptr540, align 4, !dbg !17737
  %and541 = and i32 %224, -16777216, !dbg !17737
  %shr542 = lshr i32 %and541, 24, !dbg !17737
  %or543 = or i32 %or538, %shr542, !dbg !17737
  br label %cond.end548, !dbg !17737

cond.false544:                                    ; preds = %cond.true521
  %arraydecay545 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr546 = getelementptr i32, i32* %arraydecay545, i64 2, !dbg !17737
  %225 = load i32, i32* %add.ptr546, align 4, !dbg !17737
  %call547 = call i32 @__fswab32(i32 %225) #10, !dbg !17737
  br label %cond.end548, !dbg !17737

cond.end548:                                      ; preds = %cond.false544, %cond.true524
  %cond549 = phi i32 [ %or543, %cond.true524 ], [ %call547, %cond.false544 ], !dbg !17737
  %and550 = and i32 %cond549, 0, !dbg !17737
  %226 = load i32, i32* %_v486, align 4, !dbg !17737
  %shl551 = shl i32 %226, 0, !dbg !17737
  %or552 = or i32 %and550, %shl551, !dbg !17737
  %and553 = and i32 %or552, 255, !dbg !17737
  %shl554 = shl i32 %and553, 24, !dbg !17737
  %arraydecay555 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr556 = getelementptr i32, i32* %arraydecay555, i64 2, !dbg !17737
  %227 = load i32, i32* %add.ptr556, align 4, !dbg !17737
  %228 = call i1 @llvm.is.constant.i32(i32 %227), !dbg !17737
  br i1 %228, label %cond.true557, label %cond.false577, !dbg !17737

cond.true557:                                     ; preds = %cond.end548
  %arraydecay558 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr559 = getelementptr i32, i32* %arraydecay558, i64 2, !dbg !17737
  %229 = load i32, i32* %add.ptr559, align 4, !dbg !17737
  %and560 = and i32 %229, 255, !dbg !17737
  %shl561 = shl i32 %and560, 24, !dbg !17737
  %arraydecay562 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr563 = getelementptr i32, i32* %arraydecay562, i64 2, !dbg !17737
  %230 = load i32, i32* %add.ptr563, align 4, !dbg !17737
  %and564 = and i32 %230, 65280, !dbg !17737
  %shl565 = shl i32 %and564, 8, !dbg !17737
  %or566 = or i32 %shl561, %shl565, !dbg !17737
  %arraydecay567 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr568 = getelementptr i32, i32* %arraydecay567, i64 2, !dbg !17737
  %231 = load i32, i32* %add.ptr568, align 4, !dbg !17737
  %and569 = and i32 %231, 16711680, !dbg !17737
  %shr570 = lshr i32 %and569, 8, !dbg !17737
  %or571 = or i32 %or566, %shr570, !dbg !17737
  %arraydecay572 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr573 = getelementptr i32, i32* %arraydecay572, i64 2, !dbg !17737
  %232 = load i32, i32* %add.ptr573, align 4, !dbg !17737
  %and574 = and i32 %232, -16777216, !dbg !17737
  %shr575 = lshr i32 %and574, 24, !dbg !17737
  %or576 = or i32 %or571, %shr575, !dbg !17737
  br label %cond.end581, !dbg !17737

cond.false577:                                    ; preds = %cond.end548
  %arraydecay578 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr579 = getelementptr i32, i32* %arraydecay578, i64 2, !dbg !17737
  %233 = load i32, i32* %add.ptr579, align 4, !dbg !17737
  %call580 = call i32 @__fswab32(i32 %233) #10, !dbg !17737
  br label %cond.end581, !dbg !17737

cond.end581:                                      ; preds = %cond.false577, %cond.true557
  %cond582 = phi i32 [ %or576, %cond.true557 ], [ %call580, %cond.false577 ], !dbg !17737
  %and583 = and i32 %cond582, 0, !dbg !17737
  %234 = load i32, i32* %_v486, align 4, !dbg !17737
  %shl584 = shl i32 %234, 0, !dbg !17737
  %or585 = or i32 %and583, %shl584, !dbg !17737
  %and586 = and i32 %or585, 65280, !dbg !17737
  %shl587 = shl i32 %and586, 8, !dbg !17737
  %or588 = or i32 %shl554, %shl587, !dbg !17737
  %arraydecay589 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr590 = getelementptr i32, i32* %arraydecay589, i64 2, !dbg !17737
  %235 = load i32, i32* %add.ptr590, align 4, !dbg !17737
  %236 = call i1 @llvm.is.constant.i32(i32 %235), !dbg !17737
  br i1 %236, label %cond.true591, label %cond.false611, !dbg !17737

cond.true591:                                     ; preds = %cond.end581
  %arraydecay592 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr593 = getelementptr i32, i32* %arraydecay592, i64 2, !dbg !17737
  %237 = load i32, i32* %add.ptr593, align 4, !dbg !17737
  %and594 = and i32 %237, 255, !dbg !17737
  %shl595 = shl i32 %and594, 24, !dbg !17737
  %arraydecay596 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr597 = getelementptr i32, i32* %arraydecay596, i64 2, !dbg !17737
  %238 = load i32, i32* %add.ptr597, align 4, !dbg !17737
  %and598 = and i32 %238, 65280, !dbg !17737
  %shl599 = shl i32 %and598, 8, !dbg !17737
  %or600 = or i32 %shl595, %shl599, !dbg !17737
  %arraydecay601 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr602 = getelementptr i32, i32* %arraydecay601, i64 2, !dbg !17737
  %239 = load i32, i32* %add.ptr602, align 4, !dbg !17737
  %and603 = and i32 %239, 16711680, !dbg !17737
  %shr604 = lshr i32 %and603, 8, !dbg !17737
  %or605 = or i32 %or600, %shr604, !dbg !17737
  %arraydecay606 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr607 = getelementptr i32, i32* %arraydecay606, i64 2, !dbg !17737
  %240 = load i32, i32* %add.ptr607, align 4, !dbg !17737
  %and608 = and i32 %240, -16777216, !dbg !17737
  %shr609 = lshr i32 %and608, 24, !dbg !17737
  %or610 = or i32 %or605, %shr609, !dbg !17737
  br label %cond.end615, !dbg !17737

cond.false611:                                    ; preds = %cond.end581
  %arraydecay612 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr613 = getelementptr i32, i32* %arraydecay612, i64 2, !dbg !17737
  %241 = load i32, i32* %add.ptr613, align 4, !dbg !17737
  %call614 = call i32 @__fswab32(i32 %241) #10, !dbg !17737
  br label %cond.end615, !dbg !17737

cond.end615:                                      ; preds = %cond.false611, %cond.true591
  %cond616 = phi i32 [ %or610, %cond.true591 ], [ %call614, %cond.false611 ], !dbg !17737
  %and617 = and i32 %cond616, 0, !dbg !17737
  %242 = load i32, i32* %_v486, align 4, !dbg !17737
  %shl618 = shl i32 %242, 0, !dbg !17737
  %or619 = or i32 %and617, %shl618, !dbg !17737
  %and620 = and i32 %or619, 16711680, !dbg !17737
  %shr621 = lshr i32 %and620, 8, !dbg !17737
  %or622 = or i32 %or588, %shr621, !dbg !17737
  %arraydecay623 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr624 = getelementptr i32, i32* %arraydecay623, i64 2, !dbg !17737
  %243 = load i32, i32* %add.ptr624, align 4, !dbg !17737
  %244 = call i1 @llvm.is.constant.i32(i32 %243), !dbg !17737
  br i1 %244, label %cond.true625, label %cond.false645, !dbg !17737

cond.true625:                                     ; preds = %cond.end615
  %arraydecay626 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr627 = getelementptr i32, i32* %arraydecay626, i64 2, !dbg !17737
  %245 = load i32, i32* %add.ptr627, align 4, !dbg !17737
  %and628 = and i32 %245, 255, !dbg !17737
  %shl629 = shl i32 %and628, 24, !dbg !17737
  %arraydecay630 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr631 = getelementptr i32, i32* %arraydecay630, i64 2, !dbg !17737
  %246 = load i32, i32* %add.ptr631, align 4, !dbg !17737
  %and632 = and i32 %246, 65280, !dbg !17737
  %shl633 = shl i32 %and632, 8, !dbg !17737
  %or634 = or i32 %shl629, %shl633, !dbg !17737
  %arraydecay635 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr636 = getelementptr i32, i32* %arraydecay635, i64 2, !dbg !17737
  %247 = load i32, i32* %add.ptr636, align 4, !dbg !17737
  %and637 = and i32 %247, 16711680, !dbg !17737
  %shr638 = lshr i32 %and637, 8, !dbg !17737
  %or639 = or i32 %or634, %shr638, !dbg !17737
  %arraydecay640 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr641 = getelementptr i32, i32* %arraydecay640, i64 2, !dbg !17737
  %248 = load i32, i32* %add.ptr641, align 4, !dbg !17737
  %and642 = and i32 %248, -16777216, !dbg !17737
  %shr643 = lshr i32 %and642, 24, !dbg !17737
  %or644 = or i32 %or639, %shr643, !dbg !17737
  br label %cond.end649, !dbg !17737

cond.false645:                                    ; preds = %cond.end615
  %arraydecay646 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr647 = getelementptr i32, i32* %arraydecay646, i64 2, !dbg !17737
  %249 = load i32, i32* %add.ptr647, align 4, !dbg !17737
  %call648 = call i32 @__fswab32(i32 %249) #10, !dbg !17737
  br label %cond.end649, !dbg !17737

cond.end649:                                      ; preds = %cond.false645, %cond.true625
  %cond650 = phi i32 [ %or644, %cond.true625 ], [ %call648, %cond.false645 ], !dbg !17737
  %and651 = and i32 %cond650, 0, !dbg !17737
  %250 = load i32, i32* %_v486, align 4, !dbg !17737
  %shl652 = shl i32 %250, 0, !dbg !17737
  %or653 = or i32 %and651, %shl652, !dbg !17737
  %and654 = and i32 %or653, -16777216, !dbg !17737
  %shr655 = lshr i32 %and654, 24, !dbg !17737
  %or656 = or i32 %or622, %shr655, !dbg !17737
  br label %cond.end690, !dbg !17737

cond.false657:                                    ; preds = %cond.end516
  %arraydecay658 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr659 = getelementptr i32, i32* %arraydecay658, i64 2, !dbg !17737
  %251 = load i32, i32* %add.ptr659, align 4, !dbg !17737
  %252 = call i1 @llvm.is.constant.i32(i32 %251), !dbg !17737
  br i1 %252, label %cond.true660, label %cond.false680, !dbg !17737

cond.true660:                                     ; preds = %cond.false657
  %arraydecay661 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr662 = getelementptr i32, i32* %arraydecay661, i64 2, !dbg !17737
  %253 = load i32, i32* %add.ptr662, align 4, !dbg !17737
  %and663 = and i32 %253, 255, !dbg !17737
  %shl664 = shl i32 %and663, 24, !dbg !17737
  %arraydecay665 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr666 = getelementptr i32, i32* %arraydecay665, i64 2, !dbg !17737
  %254 = load i32, i32* %add.ptr666, align 4, !dbg !17737
  %and667 = and i32 %254, 65280, !dbg !17737
  %shl668 = shl i32 %and667, 8, !dbg !17737
  %or669 = or i32 %shl664, %shl668, !dbg !17737
  %arraydecay670 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr671 = getelementptr i32, i32* %arraydecay670, i64 2, !dbg !17737
  %255 = load i32, i32* %add.ptr671, align 4, !dbg !17737
  %and672 = and i32 %255, 16711680, !dbg !17737
  %shr673 = lshr i32 %and672, 8, !dbg !17737
  %or674 = or i32 %or669, %shr673, !dbg !17737
  %arraydecay675 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr676 = getelementptr i32, i32* %arraydecay675, i64 2, !dbg !17737
  %256 = load i32, i32* %add.ptr676, align 4, !dbg !17737
  %and677 = and i32 %256, -16777216, !dbg !17737
  %shr678 = lshr i32 %and677, 24, !dbg !17737
  %or679 = or i32 %or674, %shr678, !dbg !17737
  br label %cond.end684, !dbg !17737

cond.false680:                                    ; preds = %cond.false657
  %arraydecay681 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr682 = getelementptr i32, i32* %arraydecay681, i64 2, !dbg !17737
  %257 = load i32, i32* %add.ptr682, align 4, !dbg !17737
  %call683 = call i32 @__fswab32(i32 %257) #10, !dbg !17737
  br label %cond.end684, !dbg !17737

cond.end684:                                      ; preds = %cond.false680, %cond.true660
  %cond685 = phi i32 [ %or679, %cond.true660 ], [ %call683, %cond.false680 ], !dbg !17737
  %and686 = and i32 %cond685, 0, !dbg !17737
  %258 = load i32, i32* %_v486, align 4, !dbg !17737
  %shl687 = shl i32 %258, 0, !dbg !17737
  %or688 = or i32 %and686, %shl687, !dbg !17737
  %call689 = call i32 @__fswab32(i32 %or688) #10, !dbg !17737
  br label %cond.end690, !dbg !17737

cond.end690:                                      ; preds = %cond.end684, %cond.end649
  %cond691 = phi i32 [ %or656, %cond.end649 ], [ %call689, %cond.end684 ], !dbg !17737
  %arraydecay692 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17737
  %add.ptr693 = getelementptr i32, i32* %arraydecay692, i64 2, !dbg !17737
  store i32 %cond691, i32* %add.ptr693, align 4, !dbg !17737
  br label %do.end694, !dbg !17737

do.end694:                                        ; preds = %cond.end690
  br label %do.body695, !dbg !17740

do.body695:                                       ; preds = %do.end694
  call void @llvm.dbg.declare(metadata i32* %_v696, metadata !17741, metadata !DIExpression()), !dbg !17743
  %259 = load i32, i32* %initial_max_rate.addr, align 4, !dbg !17743
  store i32 %259, i32* %_v696, align 4, !dbg !17743
  br label %do.body697, !dbg !17743

do.body697:                                       ; preds = %do.body695
  br label %do.end698, !dbg !17744

do.end698:                                        ; preds = %do.body697
  %arraydecay699 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr700 = getelementptr i32, i32* %arraydecay699, i64 6, !dbg !17743
  %260 = load i32, i32* %add.ptr700, align 4, !dbg !17743
  %261 = call i1 @llvm.is.constant.i32(i32 %260), !dbg !17743
  br i1 %261, label %cond.true701, label %cond.false721, !dbg !17743

cond.true701:                                     ; preds = %do.end698
  %arraydecay702 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr703 = getelementptr i32, i32* %arraydecay702, i64 6, !dbg !17743
  %262 = load i32, i32* %add.ptr703, align 4, !dbg !17743
  %and704 = and i32 %262, 255, !dbg !17743
  %shl705 = shl i32 %and704, 24, !dbg !17743
  %arraydecay706 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr707 = getelementptr i32, i32* %arraydecay706, i64 6, !dbg !17743
  %263 = load i32, i32* %add.ptr707, align 4, !dbg !17743
  %and708 = and i32 %263, 65280, !dbg !17743
  %shl709 = shl i32 %and708, 8, !dbg !17743
  %or710 = or i32 %shl705, %shl709, !dbg !17743
  %arraydecay711 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr712 = getelementptr i32, i32* %arraydecay711, i64 6, !dbg !17743
  %264 = load i32, i32* %add.ptr712, align 4, !dbg !17743
  %and713 = and i32 %264, 16711680, !dbg !17743
  %shr714 = lshr i32 %and713, 8, !dbg !17743
  %or715 = or i32 %or710, %shr714, !dbg !17743
  %arraydecay716 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr717 = getelementptr i32, i32* %arraydecay716, i64 6, !dbg !17743
  %265 = load i32, i32* %add.ptr717, align 4, !dbg !17743
  %and718 = and i32 %265, -16777216, !dbg !17743
  %shr719 = lshr i32 %and718, 24, !dbg !17743
  %or720 = or i32 %or715, %shr719, !dbg !17743
  br label %cond.end725, !dbg !17743

cond.false721:                                    ; preds = %do.end698
  %arraydecay722 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr723 = getelementptr i32, i32* %arraydecay722, i64 6, !dbg !17743
  %266 = load i32, i32* %add.ptr723, align 4, !dbg !17743
  %call724 = call i32 @__fswab32(i32 %266) #10, !dbg !17743
  br label %cond.end725, !dbg !17743

cond.end725:                                      ; preds = %cond.false721, %cond.true701
  %cond726 = phi i32 [ %or720, %cond.true701 ], [ %call724, %cond.false721 ], !dbg !17743
  %and727 = and i32 %cond726, 0, !dbg !17743
  %267 = load i32, i32* %_v696, align 4, !dbg !17743
  %shl728 = shl i32 %267, 0, !dbg !17743
  %or729 = or i32 %and727, %shl728, !dbg !17743
  %268 = call i1 @llvm.is.constant.i32(i32 %or729), !dbg !17743
  br i1 %268, label %cond.true730, label %cond.false866, !dbg !17743

cond.true730:                                     ; preds = %cond.end725
  %arraydecay731 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr732 = getelementptr i32, i32* %arraydecay731, i64 6, !dbg !17743
  %269 = load i32, i32* %add.ptr732, align 4, !dbg !17743
  %270 = call i1 @llvm.is.constant.i32(i32 %269), !dbg !17743
  br i1 %270, label %cond.true733, label %cond.false753, !dbg !17743

cond.true733:                                     ; preds = %cond.true730
  %arraydecay734 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr735 = getelementptr i32, i32* %arraydecay734, i64 6, !dbg !17743
  %271 = load i32, i32* %add.ptr735, align 4, !dbg !17743
  %and736 = and i32 %271, 255, !dbg !17743
  %shl737 = shl i32 %and736, 24, !dbg !17743
  %arraydecay738 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr739 = getelementptr i32, i32* %arraydecay738, i64 6, !dbg !17743
  %272 = load i32, i32* %add.ptr739, align 4, !dbg !17743
  %and740 = and i32 %272, 65280, !dbg !17743
  %shl741 = shl i32 %and740, 8, !dbg !17743
  %or742 = or i32 %shl737, %shl741, !dbg !17743
  %arraydecay743 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr744 = getelementptr i32, i32* %arraydecay743, i64 6, !dbg !17743
  %273 = load i32, i32* %add.ptr744, align 4, !dbg !17743
  %and745 = and i32 %273, 16711680, !dbg !17743
  %shr746 = lshr i32 %and745, 8, !dbg !17743
  %or747 = or i32 %or742, %shr746, !dbg !17743
  %arraydecay748 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr749 = getelementptr i32, i32* %arraydecay748, i64 6, !dbg !17743
  %274 = load i32, i32* %add.ptr749, align 4, !dbg !17743
  %and750 = and i32 %274, -16777216, !dbg !17743
  %shr751 = lshr i32 %and750, 24, !dbg !17743
  %or752 = or i32 %or747, %shr751, !dbg !17743
  br label %cond.end757, !dbg !17743

cond.false753:                                    ; preds = %cond.true730
  %arraydecay754 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr755 = getelementptr i32, i32* %arraydecay754, i64 6, !dbg !17743
  %275 = load i32, i32* %add.ptr755, align 4, !dbg !17743
  %call756 = call i32 @__fswab32(i32 %275) #10, !dbg !17743
  br label %cond.end757, !dbg !17743

cond.end757:                                      ; preds = %cond.false753, %cond.true733
  %cond758 = phi i32 [ %or752, %cond.true733 ], [ %call756, %cond.false753 ], !dbg !17743
  %and759 = and i32 %cond758, 0, !dbg !17743
  %276 = load i32, i32* %_v696, align 4, !dbg !17743
  %shl760 = shl i32 %276, 0, !dbg !17743
  %or761 = or i32 %and759, %shl760, !dbg !17743
  %and762 = and i32 %or761, 255, !dbg !17743
  %shl763 = shl i32 %and762, 24, !dbg !17743
  %arraydecay764 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr765 = getelementptr i32, i32* %arraydecay764, i64 6, !dbg !17743
  %277 = load i32, i32* %add.ptr765, align 4, !dbg !17743
  %278 = call i1 @llvm.is.constant.i32(i32 %277), !dbg !17743
  br i1 %278, label %cond.true766, label %cond.false786, !dbg !17743

cond.true766:                                     ; preds = %cond.end757
  %arraydecay767 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr768 = getelementptr i32, i32* %arraydecay767, i64 6, !dbg !17743
  %279 = load i32, i32* %add.ptr768, align 4, !dbg !17743
  %and769 = and i32 %279, 255, !dbg !17743
  %shl770 = shl i32 %and769, 24, !dbg !17743
  %arraydecay771 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr772 = getelementptr i32, i32* %arraydecay771, i64 6, !dbg !17743
  %280 = load i32, i32* %add.ptr772, align 4, !dbg !17743
  %and773 = and i32 %280, 65280, !dbg !17743
  %shl774 = shl i32 %and773, 8, !dbg !17743
  %or775 = or i32 %shl770, %shl774, !dbg !17743
  %arraydecay776 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr777 = getelementptr i32, i32* %arraydecay776, i64 6, !dbg !17743
  %281 = load i32, i32* %add.ptr777, align 4, !dbg !17743
  %and778 = and i32 %281, 16711680, !dbg !17743
  %shr779 = lshr i32 %and778, 8, !dbg !17743
  %or780 = or i32 %or775, %shr779, !dbg !17743
  %arraydecay781 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr782 = getelementptr i32, i32* %arraydecay781, i64 6, !dbg !17743
  %282 = load i32, i32* %add.ptr782, align 4, !dbg !17743
  %and783 = and i32 %282, -16777216, !dbg !17743
  %shr784 = lshr i32 %and783, 24, !dbg !17743
  %or785 = or i32 %or780, %shr784, !dbg !17743
  br label %cond.end790, !dbg !17743

cond.false786:                                    ; preds = %cond.end757
  %arraydecay787 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr788 = getelementptr i32, i32* %arraydecay787, i64 6, !dbg !17743
  %283 = load i32, i32* %add.ptr788, align 4, !dbg !17743
  %call789 = call i32 @__fswab32(i32 %283) #10, !dbg !17743
  br label %cond.end790, !dbg !17743

cond.end790:                                      ; preds = %cond.false786, %cond.true766
  %cond791 = phi i32 [ %or785, %cond.true766 ], [ %call789, %cond.false786 ], !dbg !17743
  %and792 = and i32 %cond791, 0, !dbg !17743
  %284 = load i32, i32* %_v696, align 4, !dbg !17743
  %shl793 = shl i32 %284, 0, !dbg !17743
  %or794 = or i32 %and792, %shl793, !dbg !17743
  %and795 = and i32 %or794, 65280, !dbg !17743
  %shl796 = shl i32 %and795, 8, !dbg !17743
  %or797 = or i32 %shl763, %shl796, !dbg !17743
  %arraydecay798 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr799 = getelementptr i32, i32* %arraydecay798, i64 6, !dbg !17743
  %285 = load i32, i32* %add.ptr799, align 4, !dbg !17743
  %286 = call i1 @llvm.is.constant.i32(i32 %285), !dbg !17743
  br i1 %286, label %cond.true800, label %cond.false820, !dbg !17743

cond.true800:                                     ; preds = %cond.end790
  %arraydecay801 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr802 = getelementptr i32, i32* %arraydecay801, i64 6, !dbg !17743
  %287 = load i32, i32* %add.ptr802, align 4, !dbg !17743
  %and803 = and i32 %287, 255, !dbg !17743
  %shl804 = shl i32 %and803, 24, !dbg !17743
  %arraydecay805 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr806 = getelementptr i32, i32* %arraydecay805, i64 6, !dbg !17743
  %288 = load i32, i32* %add.ptr806, align 4, !dbg !17743
  %and807 = and i32 %288, 65280, !dbg !17743
  %shl808 = shl i32 %and807, 8, !dbg !17743
  %or809 = or i32 %shl804, %shl808, !dbg !17743
  %arraydecay810 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr811 = getelementptr i32, i32* %arraydecay810, i64 6, !dbg !17743
  %289 = load i32, i32* %add.ptr811, align 4, !dbg !17743
  %and812 = and i32 %289, 16711680, !dbg !17743
  %shr813 = lshr i32 %and812, 8, !dbg !17743
  %or814 = or i32 %or809, %shr813, !dbg !17743
  %arraydecay815 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr816 = getelementptr i32, i32* %arraydecay815, i64 6, !dbg !17743
  %290 = load i32, i32* %add.ptr816, align 4, !dbg !17743
  %and817 = and i32 %290, -16777216, !dbg !17743
  %shr818 = lshr i32 %and817, 24, !dbg !17743
  %or819 = or i32 %or814, %shr818, !dbg !17743
  br label %cond.end824, !dbg !17743

cond.false820:                                    ; preds = %cond.end790
  %arraydecay821 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr822 = getelementptr i32, i32* %arraydecay821, i64 6, !dbg !17743
  %291 = load i32, i32* %add.ptr822, align 4, !dbg !17743
  %call823 = call i32 @__fswab32(i32 %291) #10, !dbg !17743
  br label %cond.end824, !dbg !17743

cond.end824:                                      ; preds = %cond.false820, %cond.true800
  %cond825 = phi i32 [ %or819, %cond.true800 ], [ %call823, %cond.false820 ], !dbg !17743
  %and826 = and i32 %cond825, 0, !dbg !17743
  %292 = load i32, i32* %_v696, align 4, !dbg !17743
  %shl827 = shl i32 %292, 0, !dbg !17743
  %or828 = or i32 %and826, %shl827, !dbg !17743
  %and829 = and i32 %or828, 16711680, !dbg !17743
  %shr830 = lshr i32 %and829, 8, !dbg !17743
  %or831 = or i32 %or797, %shr830, !dbg !17743
  %arraydecay832 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr833 = getelementptr i32, i32* %arraydecay832, i64 6, !dbg !17743
  %293 = load i32, i32* %add.ptr833, align 4, !dbg !17743
  %294 = call i1 @llvm.is.constant.i32(i32 %293), !dbg !17743
  br i1 %294, label %cond.true834, label %cond.false854, !dbg !17743

cond.true834:                                     ; preds = %cond.end824
  %arraydecay835 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr836 = getelementptr i32, i32* %arraydecay835, i64 6, !dbg !17743
  %295 = load i32, i32* %add.ptr836, align 4, !dbg !17743
  %and837 = and i32 %295, 255, !dbg !17743
  %shl838 = shl i32 %and837, 24, !dbg !17743
  %arraydecay839 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr840 = getelementptr i32, i32* %arraydecay839, i64 6, !dbg !17743
  %296 = load i32, i32* %add.ptr840, align 4, !dbg !17743
  %and841 = and i32 %296, 65280, !dbg !17743
  %shl842 = shl i32 %and841, 8, !dbg !17743
  %or843 = or i32 %shl838, %shl842, !dbg !17743
  %arraydecay844 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr845 = getelementptr i32, i32* %arraydecay844, i64 6, !dbg !17743
  %297 = load i32, i32* %add.ptr845, align 4, !dbg !17743
  %and846 = and i32 %297, 16711680, !dbg !17743
  %shr847 = lshr i32 %and846, 8, !dbg !17743
  %or848 = or i32 %or843, %shr847, !dbg !17743
  %arraydecay849 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr850 = getelementptr i32, i32* %arraydecay849, i64 6, !dbg !17743
  %298 = load i32, i32* %add.ptr850, align 4, !dbg !17743
  %and851 = and i32 %298, -16777216, !dbg !17743
  %shr852 = lshr i32 %and851, 24, !dbg !17743
  %or853 = or i32 %or848, %shr852, !dbg !17743
  br label %cond.end858, !dbg !17743

cond.false854:                                    ; preds = %cond.end824
  %arraydecay855 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr856 = getelementptr i32, i32* %arraydecay855, i64 6, !dbg !17743
  %299 = load i32, i32* %add.ptr856, align 4, !dbg !17743
  %call857 = call i32 @__fswab32(i32 %299) #10, !dbg !17743
  br label %cond.end858, !dbg !17743

cond.end858:                                      ; preds = %cond.false854, %cond.true834
  %cond859 = phi i32 [ %or853, %cond.true834 ], [ %call857, %cond.false854 ], !dbg !17743
  %and860 = and i32 %cond859, 0, !dbg !17743
  %300 = load i32, i32* %_v696, align 4, !dbg !17743
  %shl861 = shl i32 %300, 0, !dbg !17743
  %or862 = or i32 %and860, %shl861, !dbg !17743
  %and863 = and i32 %or862, -16777216, !dbg !17743
  %shr864 = lshr i32 %and863, 24, !dbg !17743
  %or865 = or i32 %or831, %shr864, !dbg !17743
  br label %cond.end899, !dbg !17743

cond.false866:                                    ; preds = %cond.end725
  %arraydecay867 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr868 = getelementptr i32, i32* %arraydecay867, i64 6, !dbg !17743
  %301 = load i32, i32* %add.ptr868, align 4, !dbg !17743
  %302 = call i1 @llvm.is.constant.i32(i32 %301), !dbg !17743
  br i1 %302, label %cond.true869, label %cond.false889, !dbg !17743

cond.true869:                                     ; preds = %cond.false866
  %arraydecay870 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr871 = getelementptr i32, i32* %arraydecay870, i64 6, !dbg !17743
  %303 = load i32, i32* %add.ptr871, align 4, !dbg !17743
  %and872 = and i32 %303, 255, !dbg !17743
  %shl873 = shl i32 %and872, 24, !dbg !17743
  %arraydecay874 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr875 = getelementptr i32, i32* %arraydecay874, i64 6, !dbg !17743
  %304 = load i32, i32* %add.ptr875, align 4, !dbg !17743
  %and876 = and i32 %304, 65280, !dbg !17743
  %shl877 = shl i32 %and876, 8, !dbg !17743
  %or878 = or i32 %shl873, %shl877, !dbg !17743
  %arraydecay879 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr880 = getelementptr i32, i32* %arraydecay879, i64 6, !dbg !17743
  %305 = load i32, i32* %add.ptr880, align 4, !dbg !17743
  %and881 = and i32 %305, 16711680, !dbg !17743
  %shr882 = lshr i32 %and881, 8, !dbg !17743
  %or883 = or i32 %or878, %shr882, !dbg !17743
  %arraydecay884 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr885 = getelementptr i32, i32* %arraydecay884, i64 6, !dbg !17743
  %306 = load i32, i32* %add.ptr885, align 4, !dbg !17743
  %and886 = and i32 %306, -16777216, !dbg !17743
  %shr887 = lshr i32 %and886, 24, !dbg !17743
  %or888 = or i32 %or883, %shr887, !dbg !17743
  br label %cond.end893, !dbg !17743

cond.false889:                                    ; preds = %cond.false866
  %arraydecay890 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr891 = getelementptr i32, i32* %arraydecay890, i64 6, !dbg !17743
  %307 = load i32, i32* %add.ptr891, align 4, !dbg !17743
  %call892 = call i32 @__fswab32(i32 %307) #10, !dbg !17743
  br label %cond.end893, !dbg !17743

cond.end893:                                      ; preds = %cond.false889, %cond.true869
  %cond894 = phi i32 [ %or888, %cond.true869 ], [ %call892, %cond.false889 ], !dbg !17743
  %and895 = and i32 %cond894, 0, !dbg !17743
  %308 = load i32, i32* %_v696, align 4, !dbg !17743
  %shl896 = shl i32 %308, 0, !dbg !17743
  %or897 = or i32 %and895, %shl896, !dbg !17743
  %call898 = call i32 @__fswab32(i32 %or897) #10, !dbg !17743
  br label %cond.end899, !dbg !17743

cond.end899:                                      ; preds = %cond.end893, %cond.end858
  %cond900 = phi i32 [ %or865, %cond.end858 ], [ %call898, %cond.end893 ], !dbg !17743
  %arraydecay901 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17743
  %add.ptr902 = getelementptr i32, i32* %arraydecay901, i64 6, !dbg !17743
  store i32 %cond900, i32* %add.ptr902, align 4, !dbg !17743
  br label %do.end903, !dbg !17743

do.end903:                                        ; preds = %cond.end899
  br label %do.body904, !dbg !17746

do.body904:                                       ; preds = %do.end903
  call void @llvm.dbg.declare(metadata i32* %_v905, metadata !17747, metadata !DIExpression()), !dbg !17749
  %309 = load i32, i32* %initial_bw_share.addr, align 4, !dbg !17749
  store i32 %309, i32* %_v905, align 4, !dbg !17749
  br label %do.body906, !dbg !17749

do.body906:                                       ; preds = %do.body904
  br label %do.end907, !dbg !17750

do.end907:                                        ; preds = %do.body906
  %arraydecay908 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr909 = getelementptr i32, i32* %arraydecay908, i64 5, !dbg !17749
  %310 = load i32, i32* %add.ptr909, align 4, !dbg !17749
  %311 = call i1 @llvm.is.constant.i32(i32 %310), !dbg !17749
  br i1 %311, label %cond.true910, label %cond.false930, !dbg !17749

cond.true910:                                     ; preds = %do.end907
  %arraydecay911 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr912 = getelementptr i32, i32* %arraydecay911, i64 5, !dbg !17749
  %312 = load i32, i32* %add.ptr912, align 4, !dbg !17749
  %and913 = and i32 %312, 255, !dbg !17749
  %shl914 = shl i32 %and913, 24, !dbg !17749
  %arraydecay915 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr916 = getelementptr i32, i32* %arraydecay915, i64 5, !dbg !17749
  %313 = load i32, i32* %add.ptr916, align 4, !dbg !17749
  %and917 = and i32 %313, 65280, !dbg !17749
  %shl918 = shl i32 %and917, 8, !dbg !17749
  %or919 = or i32 %shl914, %shl918, !dbg !17749
  %arraydecay920 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr921 = getelementptr i32, i32* %arraydecay920, i64 5, !dbg !17749
  %314 = load i32, i32* %add.ptr921, align 4, !dbg !17749
  %and922 = and i32 %314, 16711680, !dbg !17749
  %shr923 = lshr i32 %and922, 8, !dbg !17749
  %or924 = or i32 %or919, %shr923, !dbg !17749
  %arraydecay925 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr926 = getelementptr i32, i32* %arraydecay925, i64 5, !dbg !17749
  %315 = load i32, i32* %add.ptr926, align 4, !dbg !17749
  %and927 = and i32 %315, -16777216, !dbg !17749
  %shr928 = lshr i32 %and927, 24, !dbg !17749
  %or929 = or i32 %or924, %shr928, !dbg !17749
  br label %cond.end934, !dbg !17749

cond.false930:                                    ; preds = %do.end907
  %arraydecay931 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr932 = getelementptr i32, i32* %arraydecay931, i64 5, !dbg !17749
  %316 = load i32, i32* %add.ptr932, align 4, !dbg !17749
  %call933 = call i32 @__fswab32(i32 %316) #10, !dbg !17749
  br label %cond.end934, !dbg !17749

cond.end934:                                      ; preds = %cond.false930, %cond.true910
  %cond935 = phi i32 [ %or929, %cond.true910 ], [ %call933, %cond.false930 ], !dbg !17749
  %and936 = and i32 %cond935, 0, !dbg !17749
  %317 = load i32, i32* %_v905, align 4, !dbg !17749
  %shl937 = shl i32 %317, 0, !dbg !17749
  %or938 = or i32 %and936, %shl937, !dbg !17749
  %318 = call i1 @llvm.is.constant.i32(i32 %or938), !dbg !17749
  br i1 %318, label %cond.true939, label %cond.false1075, !dbg !17749

cond.true939:                                     ; preds = %cond.end934
  %arraydecay940 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr941 = getelementptr i32, i32* %arraydecay940, i64 5, !dbg !17749
  %319 = load i32, i32* %add.ptr941, align 4, !dbg !17749
  %320 = call i1 @llvm.is.constant.i32(i32 %319), !dbg !17749
  br i1 %320, label %cond.true942, label %cond.false962, !dbg !17749

cond.true942:                                     ; preds = %cond.true939
  %arraydecay943 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr944 = getelementptr i32, i32* %arraydecay943, i64 5, !dbg !17749
  %321 = load i32, i32* %add.ptr944, align 4, !dbg !17749
  %and945 = and i32 %321, 255, !dbg !17749
  %shl946 = shl i32 %and945, 24, !dbg !17749
  %arraydecay947 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr948 = getelementptr i32, i32* %arraydecay947, i64 5, !dbg !17749
  %322 = load i32, i32* %add.ptr948, align 4, !dbg !17749
  %and949 = and i32 %322, 65280, !dbg !17749
  %shl950 = shl i32 %and949, 8, !dbg !17749
  %or951 = or i32 %shl946, %shl950, !dbg !17749
  %arraydecay952 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr953 = getelementptr i32, i32* %arraydecay952, i64 5, !dbg !17749
  %323 = load i32, i32* %add.ptr953, align 4, !dbg !17749
  %and954 = and i32 %323, 16711680, !dbg !17749
  %shr955 = lshr i32 %and954, 8, !dbg !17749
  %or956 = or i32 %or951, %shr955, !dbg !17749
  %arraydecay957 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr958 = getelementptr i32, i32* %arraydecay957, i64 5, !dbg !17749
  %324 = load i32, i32* %add.ptr958, align 4, !dbg !17749
  %and959 = and i32 %324, -16777216, !dbg !17749
  %shr960 = lshr i32 %and959, 24, !dbg !17749
  %or961 = or i32 %or956, %shr960, !dbg !17749
  br label %cond.end966, !dbg !17749

cond.false962:                                    ; preds = %cond.true939
  %arraydecay963 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr964 = getelementptr i32, i32* %arraydecay963, i64 5, !dbg !17749
  %325 = load i32, i32* %add.ptr964, align 4, !dbg !17749
  %call965 = call i32 @__fswab32(i32 %325) #10, !dbg !17749
  br label %cond.end966, !dbg !17749

cond.end966:                                      ; preds = %cond.false962, %cond.true942
  %cond967 = phi i32 [ %or961, %cond.true942 ], [ %call965, %cond.false962 ], !dbg !17749
  %and968 = and i32 %cond967, 0, !dbg !17749
  %326 = load i32, i32* %_v905, align 4, !dbg !17749
  %shl969 = shl i32 %326, 0, !dbg !17749
  %or970 = or i32 %and968, %shl969, !dbg !17749
  %and971 = and i32 %or970, 255, !dbg !17749
  %shl972 = shl i32 %and971, 24, !dbg !17749
  %arraydecay973 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr974 = getelementptr i32, i32* %arraydecay973, i64 5, !dbg !17749
  %327 = load i32, i32* %add.ptr974, align 4, !dbg !17749
  %328 = call i1 @llvm.is.constant.i32(i32 %327), !dbg !17749
  br i1 %328, label %cond.true975, label %cond.false995, !dbg !17749

cond.true975:                                     ; preds = %cond.end966
  %arraydecay976 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr977 = getelementptr i32, i32* %arraydecay976, i64 5, !dbg !17749
  %329 = load i32, i32* %add.ptr977, align 4, !dbg !17749
  %and978 = and i32 %329, 255, !dbg !17749
  %shl979 = shl i32 %and978, 24, !dbg !17749
  %arraydecay980 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr981 = getelementptr i32, i32* %arraydecay980, i64 5, !dbg !17749
  %330 = load i32, i32* %add.ptr981, align 4, !dbg !17749
  %and982 = and i32 %330, 65280, !dbg !17749
  %shl983 = shl i32 %and982, 8, !dbg !17749
  %or984 = or i32 %shl979, %shl983, !dbg !17749
  %arraydecay985 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr986 = getelementptr i32, i32* %arraydecay985, i64 5, !dbg !17749
  %331 = load i32, i32* %add.ptr986, align 4, !dbg !17749
  %and987 = and i32 %331, 16711680, !dbg !17749
  %shr988 = lshr i32 %and987, 8, !dbg !17749
  %or989 = or i32 %or984, %shr988, !dbg !17749
  %arraydecay990 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr991 = getelementptr i32, i32* %arraydecay990, i64 5, !dbg !17749
  %332 = load i32, i32* %add.ptr991, align 4, !dbg !17749
  %and992 = and i32 %332, -16777216, !dbg !17749
  %shr993 = lshr i32 %and992, 24, !dbg !17749
  %or994 = or i32 %or989, %shr993, !dbg !17749
  br label %cond.end999, !dbg !17749

cond.false995:                                    ; preds = %cond.end966
  %arraydecay996 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr997 = getelementptr i32, i32* %arraydecay996, i64 5, !dbg !17749
  %333 = load i32, i32* %add.ptr997, align 4, !dbg !17749
  %call998 = call i32 @__fswab32(i32 %333) #10, !dbg !17749
  br label %cond.end999, !dbg !17749

cond.end999:                                      ; preds = %cond.false995, %cond.true975
  %cond1000 = phi i32 [ %or994, %cond.true975 ], [ %call998, %cond.false995 ], !dbg !17749
  %and1001 = and i32 %cond1000, 0, !dbg !17749
  %334 = load i32, i32* %_v905, align 4, !dbg !17749
  %shl1002 = shl i32 %334, 0, !dbg !17749
  %or1003 = or i32 %and1001, %shl1002, !dbg !17749
  %and1004 = and i32 %or1003, 65280, !dbg !17749
  %shl1005 = shl i32 %and1004, 8, !dbg !17749
  %or1006 = or i32 %shl972, %shl1005, !dbg !17749
  %arraydecay1007 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1008 = getelementptr i32, i32* %arraydecay1007, i64 5, !dbg !17749
  %335 = load i32, i32* %add.ptr1008, align 4, !dbg !17749
  %336 = call i1 @llvm.is.constant.i32(i32 %335), !dbg !17749
  br i1 %336, label %cond.true1009, label %cond.false1029, !dbg !17749

cond.true1009:                                    ; preds = %cond.end999
  %arraydecay1010 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1011 = getelementptr i32, i32* %arraydecay1010, i64 5, !dbg !17749
  %337 = load i32, i32* %add.ptr1011, align 4, !dbg !17749
  %and1012 = and i32 %337, 255, !dbg !17749
  %shl1013 = shl i32 %and1012, 24, !dbg !17749
  %arraydecay1014 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1015 = getelementptr i32, i32* %arraydecay1014, i64 5, !dbg !17749
  %338 = load i32, i32* %add.ptr1015, align 4, !dbg !17749
  %and1016 = and i32 %338, 65280, !dbg !17749
  %shl1017 = shl i32 %and1016, 8, !dbg !17749
  %or1018 = or i32 %shl1013, %shl1017, !dbg !17749
  %arraydecay1019 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1020 = getelementptr i32, i32* %arraydecay1019, i64 5, !dbg !17749
  %339 = load i32, i32* %add.ptr1020, align 4, !dbg !17749
  %and1021 = and i32 %339, 16711680, !dbg !17749
  %shr1022 = lshr i32 %and1021, 8, !dbg !17749
  %or1023 = or i32 %or1018, %shr1022, !dbg !17749
  %arraydecay1024 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1025 = getelementptr i32, i32* %arraydecay1024, i64 5, !dbg !17749
  %340 = load i32, i32* %add.ptr1025, align 4, !dbg !17749
  %and1026 = and i32 %340, -16777216, !dbg !17749
  %shr1027 = lshr i32 %and1026, 24, !dbg !17749
  %or1028 = or i32 %or1023, %shr1027, !dbg !17749
  br label %cond.end1033, !dbg !17749

cond.false1029:                                   ; preds = %cond.end999
  %arraydecay1030 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1031 = getelementptr i32, i32* %arraydecay1030, i64 5, !dbg !17749
  %341 = load i32, i32* %add.ptr1031, align 4, !dbg !17749
  %call1032 = call i32 @__fswab32(i32 %341) #10, !dbg !17749
  br label %cond.end1033, !dbg !17749

cond.end1033:                                     ; preds = %cond.false1029, %cond.true1009
  %cond1034 = phi i32 [ %or1028, %cond.true1009 ], [ %call1032, %cond.false1029 ], !dbg !17749
  %and1035 = and i32 %cond1034, 0, !dbg !17749
  %342 = load i32, i32* %_v905, align 4, !dbg !17749
  %shl1036 = shl i32 %342, 0, !dbg !17749
  %or1037 = or i32 %and1035, %shl1036, !dbg !17749
  %and1038 = and i32 %or1037, 16711680, !dbg !17749
  %shr1039 = lshr i32 %and1038, 8, !dbg !17749
  %or1040 = or i32 %or1006, %shr1039, !dbg !17749
  %arraydecay1041 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1042 = getelementptr i32, i32* %arraydecay1041, i64 5, !dbg !17749
  %343 = load i32, i32* %add.ptr1042, align 4, !dbg !17749
  %344 = call i1 @llvm.is.constant.i32(i32 %343), !dbg !17749
  br i1 %344, label %cond.true1043, label %cond.false1063, !dbg !17749

cond.true1043:                                    ; preds = %cond.end1033
  %arraydecay1044 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1045 = getelementptr i32, i32* %arraydecay1044, i64 5, !dbg !17749
  %345 = load i32, i32* %add.ptr1045, align 4, !dbg !17749
  %and1046 = and i32 %345, 255, !dbg !17749
  %shl1047 = shl i32 %and1046, 24, !dbg !17749
  %arraydecay1048 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1049 = getelementptr i32, i32* %arraydecay1048, i64 5, !dbg !17749
  %346 = load i32, i32* %add.ptr1049, align 4, !dbg !17749
  %and1050 = and i32 %346, 65280, !dbg !17749
  %shl1051 = shl i32 %and1050, 8, !dbg !17749
  %or1052 = or i32 %shl1047, %shl1051, !dbg !17749
  %arraydecay1053 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1054 = getelementptr i32, i32* %arraydecay1053, i64 5, !dbg !17749
  %347 = load i32, i32* %add.ptr1054, align 4, !dbg !17749
  %and1055 = and i32 %347, 16711680, !dbg !17749
  %shr1056 = lshr i32 %and1055, 8, !dbg !17749
  %or1057 = or i32 %or1052, %shr1056, !dbg !17749
  %arraydecay1058 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1059 = getelementptr i32, i32* %arraydecay1058, i64 5, !dbg !17749
  %348 = load i32, i32* %add.ptr1059, align 4, !dbg !17749
  %and1060 = and i32 %348, -16777216, !dbg !17749
  %shr1061 = lshr i32 %and1060, 24, !dbg !17749
  %or1062 = or i32 %or1057, %shr1061, !dbg !17749
  br label %cond.end1067, !dbg !17749

cond.false1063:                                   ; preds = %cond.end1033
  %arraydecay1064 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1065 = getelementptr i32, i32* %arraydecay1064, i64 5, !dbg !17749
  %349 = load i32, i32* %add.ptr1065, align 4, !dbg !17749
  %call1066 = call i32 @__fswab32(i32 %349) #10, !dbg !17749
  br label %cond.end1067, !dbg !17749

cond.end1067:                                     ; preds = %cond.false1063, %cond.true1043
  %cond1068 = phi i32 [ %or1062, %cond.true1043 ], [ %call1066, %cond.false1063 ], !dbg !17749
  %and1069 = and i32 %cond1068, 0, !dbg !17749
  %350 = load i32, i32* %_v905, align 4, !dbg !17749
  %shl1070 = shl i32 %350, 0, !dbg !17749
  %or1071 = or i32 %and1069, %shl1070, !dbg !17749
  %and1072 = and i32 %or1071, -16777216, !dbg !17749
  %shr1073 = lshr i32 %and1072, 24, !dbg !17749
  %or1074 = or i32 %or1040, %shr1073, !dbg !17749
  br label %cond.end1108, !dbg !17749

cond.false1075:                                   ; preds = %cond.end934
  %arraydecay1076 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1077 = getelementptr i32, i32* %arraydecay1076, i64 5, !dbg !17749
  %351 = load i32, i32* %add.ptr1077, align 4, !dbg !17749
  %352 = call i1 @llvm.is.constant.i32(i32 %351), !dbg !17749
  br i1 %352, label %cond.true1078, label %cond.false1098, !dbg !17749

cond.true1078:                                    ; preds = %cond.false1075
  %arraydecay1079 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1080 = getelementptr i32, i32* %arraydecay1079, i64 5, !dbg !17749
  %353 = load i32, i32* %add.ptr1080, align 4, !dbg !17749
  %and1081 = and i32 %353, 255, !dbg !17749
  %shl1082 = shl i32 %and1081, 24, !dbg !17749
  %arraydecay1083 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1084 = getelementptr i32, i32* %arraydecay1083, i64 5, !dbg !17749
  %354 = load i32, i32* %add.ptr1084, align 4, !dbg !17749
  %and1085 = and i32 %354, 65280, !dbg !17749
  %shl1086 = shl i32 %and1085, 8, !dbg !17749
  %or1087 = or i32 %shl1082, %shl1086, !dbg !17749
  %arraydecay1088 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1089 = getelementptr i32, i32* %arraydecay1088, i64 5, !dbg !17749
  %355 = load i32, i32* %add.ptr1089, align 4, !dbg !17749
  %and1090 = and i32 %355, 16711680, !dbg !17749
  %shr1091 = lshr i32 %and1090, 8, !dbg !17749
  %or1092 = or i32 %or1087, %shr1091, !dbg !17749
  %arraydecay1093 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1094 = getelementptr i32, i32* %arraydecay1093, i64 5, !dbg !17749
  %356 = load i32, i32* %add.ptr1094, align 4, !dbg !17749
  %and1095 = and i32 %356, -16777216, !dbg !17749
  %shr1096 = lshr i32 %and1095, 24, !dbg !17749
  %or1097 = or i32 %or1092, %shr1096, !dbg !17749
  br label %cond.end1102, !dbg !17749

cond.false1098:                                   ; preds = %cond.false1075
  %arraydecay1099 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1100 = getelementptr i32, i32* %arraydecay1099, i64 5, !dbg !17749
  %357 = load i32, i32* %add.ptr1100, align 4, !dbg !17749
  %call1101 = call i32 @__fswab32(i32 %357) #10, !dbg !17749
  br label %cond.end1102, !dbg !17749

cond.end1102:                                     ; preds = %cond.false1098, %cond.true1078
  %cond1103 = phi i32 [ %or1097, %cond.true1078 ], [ %call1101, %cond.false1098 ], !dbg !17749
  %and1104 = and i32 %cond1103, 0, !dbg !17749
  %358 = load i32, i32* %_v905, align 4, !dbg !17749
  %shl1105 = shl i32 %358, 0, !dbg !17749
  %or1106 = or i32 %and1104, %shl1105, !dbg !17749
  %call1107 = call i32 @__fswab32(i32 %or1106) #10, !dbg !17749
  br label %cond.end1108, !dbg !17749

cond.end1108:                                     ; preds = %cond.end1102, %cond.end1067
  %cond1109 = phi i32 [ %or1074, %cond.end1067 ], [ %call1107, %cond.end1102 ], !dbg !17749
  %arraydecay1110 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17749
  %add.ptr1111 = getelementptr i32, i32* %arraydecay1110, i64 5, !dbg !17749
  store i32 %cond1109, i32* %add.ptr1111, align 4, !dbg !17749
  br label %do.end1112, !dbg !17749

do.end1112:                                       ; preds = %cond.end1108
  %359 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17752
  %arraydecay1113 = getelementptr inbounds [16 x i32], [16 x i32]* %sched_ctx, i64 0, i64 0, !dbg !17753
  %360 = bitcast i32* %arraydecay1113 to i8*, !dbg !17753
  %361 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17754
  %qos1114 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %361, i32 0, i32 12, !dbg !17755
  %esw_tsar_ix = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos1114, i32 0, i32 1, !dbg !17756
  %call1115 = call i32 @mlx5_create_scheduling_element_cmd(%struct.mlx5_core_dev* %359, i8 zeroext 2, i8* %360, i32* %esw_tsar_ix) #8, !dbg !17757
  store i32 %call1115, i32* %err, align 4, !dbg !17758
  %362 = load i32, i32* %err, align 4, !dbg !17759
  %tobool1116 = icmp ne i32 %362, 0, !dbg !17759
  br i1 %tobool1116, label %if.then1117, label %if.end1120, !dbg !17761

if.then1117:                                      ; preds = %do.end1112
  %363 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17762
  %dev1118 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %363, i32 0, i32 0, !dbg !17762
  %364 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1118, align 8, !dbg !17762
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %364, i32 0, i32 0, !dbg !17762
  %365 = load %struct.device*, %struct.device** %device, align 8, !dbg !17762
  %366 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17762
  %vport1119 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %366, i32 0, i32 1, !dbg !17762
  %367 = load i32, i32* %vport1119, align 8, !dbg !17762
  %368 = load i32, i32* %err, align 4, !dbg !17762
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %365, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.26, i64 0, i64 0), i32 %367, i32 %368) #11, !dbg !17762
  %369 = load i32, i32* %err, align 4, !dbg !17764
  store i32 %369, i32* %retval, align 4, !dbg !17765
  br label %return, !dbg !17765

if.end1120:                                       ; preds = %do.end1112
  %370 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17766
  %qos1121 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %370, i32 0, i32 12, !dbg !17767
  %enabled1122 = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos1121, i32 0, i32 0, !dbg !17768
  store i8 1, i8* %enabled1122, align 8, !dbg !17769
  store i32 0, i32* %retval, align 4, !dbg !17770
  br label %return, !dbg !17770

return:                                           ; preds = %if.end1120, %if.then1117, %if.then90, %if.then
  %371 = load i32, i32* %retval, align 4, !dbg !17771
  ret i32 %371, !dbg !17771
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_modify_nic_vport_mac_address(%struct.mlx5_core_dev*, i16 zeroext, i8*) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_modify_nic_vport_node_guid(%struct.mlx5_core_dev*, i16 zeroext, i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_vport_create_legacy_acl_tables(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !17772 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %ret = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17773, metadata !DIExpression()), !dbg !17774
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17775, metadata !DIExpression()), !dbg !17776
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17777, metadata !DIExpression()), !dbg !17778
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17779
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17781
  %vport1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %1, i32 0, i32 1, !dbg !17782
  %2 = load i32, i32* %vport1, align 8, !dbg !17782
  %conv = trunc i32 %2 to i16, !dbg !17781
  %call = call zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %0, i16 zeroext %conv) #8, !dbg !17783
  br i1 %call, label %if.then, label %if.end, !dbg !17784

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17785
  br label %return, !dbg !17785

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17786
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17787
  %call2 = call i32 @esw_acl_ingress_lgcy_setup(%struct.mlx5_eswitch* %3, %struct.mlx5_vport* %4) #8, !dbg !17788
  store i32 %call2, i32* %ret, align 4, !dbg !17789
  %5 = load i32, i32* %ret, align 4, !dbg !17790
  %tobool = icmp ne i32 %5, 0, !dbg !17790
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !17792

if.then3:                                         ; preds = %if.end
  br label %ingress_err, !dbg !17793

if.end4:                                          ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17794
  %7 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17795
  %call5 = call i32 @esw_acl_egress_lgcy_setup(%struct.mlx5_eswitch* %6, %struct.mlx5_vport* %7) #8, !dbg !17796
  store i32 %call5, i32* %ret, align 4, !dbg !17797
  %8 = load i32, i32* %ret, align 4, !dbg !17798
  %tobool6 = icmp ne i32 %8, 0, !dbg !17798
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !17800

if.then7:                                         ; preds = %if.end4
  br label %egress_err, !dbg !17801

if.end8:                                          ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !17802
  br label %return, !dbg !17802

egress_err:                                       ; preds = %if.then7
  call void @llvm.dbg.label(metadata !17803), !dbg !17804
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17805
  %10 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17806
  call void @esw_acl_ingress_lgcy_cleanup(%struct.mlx5_eswitch* %9, %struct.mlx5_vport* %10) #8, !dbg !17807
  br label %ingress_err, !dbg !17807

ingress_err:                                      ; preds = %egress_err, %if.then3
  call void @llvm.dbg.label(metadata !17808), !dbg !17809
  %11 = load i32, i32* %ret, align 4, !dbg !17810
  store i32 %11, i32* %retval, align 4, !dbg !17811
  br label %return, !dbg !17811

return:                                           ; preds = %ingress_err, %if.end8, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !17812
  ret i32 %12, !dbg !17812
}

; Function Attrs: noredzone
declare dso_local i32 @esw_vport_create_offloads_acl_tables(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noredzone
declare dso_local void @esw_acl_ingress_lgcy_cleanup(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_create_scheduling_element_cmd(%struct.mlx5_core_dev*, i8 zeroext, i8*, i32*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @arm_vport_context_events_cmd(%struct.mlx5_core_dev* %dev, i16 zeroext %vport, i32 %events_mask) #0 !dbg !17813 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %events_mask.addr = alloca i32, align 4
  %in = alloca [128 x i32], align 16
  %nic_vport_ctx = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v203 = alloca i32, align 4
  %_v418 = alloca i32, align 4
  %_v633 = alloca i32, align 4
  %_v850 = alloca i32, align 4
  %_v1029 = alloca i32, align 4
  %_v1210 = alloca i32, align 4
  %_v1392 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp1570 = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !17816, metadata !DIExpression()), !dbg !17817
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !17818, metadata !DIExpression()), !dbg !17819
  store i32 %events_mask, i32* %events_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %events_mask.addr, metadata !17820, metadata !DIExpression()), !dbg !17821
  call void @llvm.dbg.declare(metadata [128 x i32]* %in, metadata !17822, metadata !DIExpression()), !dbg !17823
  %0 = bitcast [128 x i32]* %in to i8*, !dbg !17823
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 512, i1 false), !dbg !17823
  call void @llvm.dbg.declare(metadata i8** %nic_vport_ctx, metadata !17824, metadata !DIExpression()), !dbg !17825
  br label %do.body, !dbg !17826

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !17827, metadata !DIExpression()), !dbg !17829
  store i32 1877, i32* %_v, align 4, !dbg !17829
  br label %do.body1, !dbg !17829

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !17830

do.end:                                           ; preds = %do.body1
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !17829
  %1 = load i32, i32* %add.ptr, align 4, !dbg !17829
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !17829
  br i1 %2, label %cond.true, label %cond.false, !dbg !17829

cond.true:                                        ; preds = %do.end
  %arraydecay2 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 0, !dbg !17829
  %3 = load i32, i32* %add.ptr3, align 4, !dbg !17829
  %and = and i32 %3, 255, !dbg !17829
  %shl = shl i32 %and, 24, !dbg !17829
  %arraydecay4 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !17829
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !17829
  %and6 = and i32 %4, 65280, !dbg !17829
  %shl7 = shl i32 %and6, 8, !dbg !17829
  %or = or i32 %shl, %shl7, !dbg !17829
  %arraydecay8 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 0, !dbg !17829
  %5 = load i32, i32* %add.ptr9, align 4, !dbg !17829
  %and10 = and i32 %5, 16711680, !dbg !17829
  %shr = lshr i32 %and10, 8, !dbg !17829
  %or11 = or i32 %or, %shr, !dbg !17829
  %arraydecay12 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 0, !dbg !17829
  %6 = load i32, i32* %add.ptr13, align 4, !dbg !17829
  %and14 = and i32 %6, -16777216, !dbg !17829
  %shr15 = lshr i32 %and14, 24, !dbg !17829
  %or16 = or i32 %or11, %shr15, !dbg !17829
  br label %cond.end, !dbg !17829

cond.false:                                       ; preds = %do.end
  %arraydecay17 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 0, !dbg !17829
  %7 = load i32, i32* %add.ptr18, align 4, !dbg !17829
  %call = call i32 @__fswab32(i32 %7) #10, !dbg !17829
  br label %cond.end, !dbg !17829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call, %cond.false ], !dbg !17829
  %and19 = and i32 %cond, 65535, !dbg !17829
  %8 = load i32, i32* %_v, align 4, !dbg !17829
  %and20 = and i32 %8, 65535, !dbg !17829
  %shl21 = shl i32 %and20, 16, !dbg !17829
  %or22 = or i32 %and19, %shl21, !dbg !17829
  %9 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !17829
  br i1 %9, label %cond.true23, label %cond.false163, !dbg !17829

cond.true23:                                      ; preds = %cond.end
  %arraydecay24 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 0, !dbg !17829
  %10 = load i32, i32* %add.ptr25, align 4, !dbg !17829
  %11 = call i1 @llvm.is.constant.i32(i32 %10), !dbg !17829
  br i1 %11, label %cond.true26, label %cond.false46, !dbg !17829

cond.true26:                                      ; preds = %cond.true23
  %arraydecay27 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !17829
  %12 = load i32, i32* %add.ptr28, align 4, !dbg !17829
  %and29 = and i32 %12, 255, !dbg !17829
  %shl30 = shl i32 %and29, 24, !dbg !17829
  %arraydecay31 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !17829
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !17829
  %and33 = and i32 %13, 65280, !dbg !17829
  %shl34 = shl i32 %and33, 8, !dbg !17829
  %or35 = or i32 %shl30, %shl34, !dbg !17829
  %arraydecay36 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !17829
  %14 = load i32, i32* %add.ptr37, align 4, !dbg !17829
  %and38 = and i32 %14, 16711680, !dbg !17829
  %shr39 = lshr i32 %and38, 8, !dbg !17829
  %or40 = or i32 %or35, %shr39, !dbg !17829
  %arraydecay41 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 0, !dbg !17829
  %15 = load i32, i32* %add.ptr42, align 4, !dbg !17829
  %and43 = and i32 %15, -16777216, !dbg !17829
  %shr44 = lshr i32 %and43, 24, !dbg !17829
  %or45 = or i32 %or40, %shr44, !dbg !17829
  br label %cond.end50, !dbg !17829

cond.false46:                                     ; preds = %cond.true23
  %arraydecay47 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 0, !dbg !17829
  %16 = load i32, i32* %add.ptr48, align 4, !dbg !17829
  %call49 = call i32 @__fswab32(i32 %16) #10, !dbg !17829
  br label %cond.end50, !dbg !17829

cond.end50:                                       ; preds = %cond.false46, %cond.true26
  %cond51 = phi i32 [ %or45, %cond.true26 ], [ %call49, %cond.false46 ], !dbg !17829
  %and52 = and i32 %cond51, 65535, !dbg !17829
  %17 = load i32, i32* %_v, align 4, !dbg !17829
  %and53 = and i32 %17, 65535, !dbg !17829
  %shl54 = shl i32 %and53, 16, !dbg !17829
  %or55 = or i32 %and52, %shl54, !dbg !17829
  %and56 = and i32 %or55, 255, !dbg !17829
  %shl57 = shl i32 %and56, 24, !dbg !17829
  %arraydecay58 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr59 = getelementptr i32, i32* %arraydecay58, i64 0, !dbg !17829
  %18 = load i32, i32* %add.ptr59, align 4, !dbg !17829
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !17829
  br i1 %19, label %cond.true60, label %cond.false80, !dbg !17829

cond.true60:                                      ; preds = %cond.end50
  %arraydecay61 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr62 = getelementptr i32, i32* %arraydecay61, i64 0, !dbg !17829
  %20 = load i32, i32* %add.ptr62, align 4, !dbg !17829
  %and63 = and i32 %20, 255, !dbg !17829
  %shl64 = shl i32 %and63, 24, !dbg !17829
  %arraydecay65 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 0, !dbg !17829
  %21 = load i32, i32* %add.ptr66, align 4, !dbg !17829
  %and67 = and i32 %21, 65280, !dbg !17829
  %shl68 = shl i32 %and67, 8, !dbg !17829
  %or69 = or i32 %shl64, %shl68, !dbg !17829
  %arraydecay70 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 0, !dbg !17829
  %22 = load i32, i32* %add.ptr71, align 4, !dbg !17829
  %and72 = and i32 %22, 16711680, !dbg !17829
  %shr73 = lshr i32 %and72, 8, !dbg !17829
  %or74 = or i32 %or69, %shr73, !dbg !17829
  %arraydecay75 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr76 = getelementptr i32, i32* %arraydecay75, i64 0, !dbg !17829
  %23 = load i32, i32* %add.ptr76, align 4, !dbg !17829
  %and77 = and i32 %23, -16777216, !dbg !17829
  %shr78 = lshr i32 %and77, 24, !dbg !17829
  %or79 = or i32 %or74, %shr78, !dbg !17829
  br label %cond.end84, !dbg !17829

cond.false80:                                     ; preds = %cond.end50
  %arraydecay81 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr82 = getelementptr i32, i32* %arraydecay81, i64 0, !dbg !17829
  %24 = load i32, i32* %add.ptr82, align 4, !dbg !17829
  %call83 = call i32 @__fswab32(i32 %24) #10, !dbg !17829
  br label %cond.end84, !dbg !17829

cond.end84:                                       ; preds = %cond.false80, %cond.true60
  %cond85 = phi i32 [ %or79, %cond.true60 ], [ %call83, %cond.false80 ], !dbg !17829
  %and86 = and i32 %cond85, 65535, !dbg !17829
  %25 = load i32, i32* %_v, align 4, !dbg !17829
  %and87 = and i32 %25, 65535, !dbg !17829
  %shl88 = shl i32 %and87, 16, !dbg !17829
  %or89 = or i32 %and86, %shl88, !dbg !17829
  %and90 = and i32 %or89, 65280, !dbg !17829
  %shl91 = shl i32 %and90, 8, !dbg !17829
  %or92 = or i32 %shl57, %shl91, !dbg !17829
  %arraydecay93 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 0, !dbg !17829
  %26 = load i32, i32* %add.ptr94, align 4, !dbg !17829
  %27 = call i1 @llvm.is.constant.i32(i32 %26), !dbg !17829
  br i1 %27, label %cond.true95, label %cond.false115, !dbg !17829

cond.true95:                                      ; preds = %cond.end84
  %arraydecay96 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !17829
  %28 = load i32, i32* %add.ptr97, align 4, !dbg !17829
  %and98 = and i32 %28, 255, !dbg !17829
  %shl99 = shl i32 %and98, 24, !dbg !17829
  %arraydecay100 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !17829
  %29 = load i32, i32* %add.ptr101, align 4, !dbg !17829
  %and102 = and i32 %29, 65280, !dbg !17829
  %shl103 = shl i32 %and102, 8, !dbg !17829
  %or104 = or i32 %shl99, %shl103, !dbg !17829
  %arraydecay105 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 0, !dbg !17829
  %30 = load i32, i32* %add.ptr106, align 4, !dbg !17829
  %and107 = and i32 %30, 16711680, !dbg !17829
  %shr108 = lshr i32 %and107, 8, !dbg !17829
  %or109 = or i32 %or104, %shr108, !dbg !17829
  %arraydecay110 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 0, !dbg !17829
  %31 = load i32, i32* %add.ptr111, align 4, !dbg !17829
  %and112 = and i32 %31, -16777216, !dbg !17829
  %shr113 = lshr i32 %and112, 24, !dbg !17829
  %or114 = or i32 %or109, %shr113, !dbg !17829
  br label %cond.end119, !dbg !17829

cond.false115:                                    ; preds = %cond.end84
  %arraydecay116 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 0, !dbg !17829
  %32 = load i32, i32* %add.ptr117, align 4, !dbg !17829
  %call118 = call i32 @__fswab32(i32 %32) #10, !dbg !17829
  br label %cond.end119, !dbg !17829

cond.end119:                                      ; preds = %cond.false115, %cond.true95
  %cond120 = phi i32 [ %or114, %cond.true95 ], [ %call118, %cond.false115 ], !dbg !17829
  %and121 = and i32 %cond120, 65535, !dbg !17829
  %33 = load i32, i32* %_v, align 4, !dbg !17829
  %and122 = and i32 %33, 65535, !dbg !17829
  %shl123 = shl i32 %and122, 16, !dbg !17829
  %or124 = or i32 %and121, %shl123, !dbg !17829
  %and125 = and i32 %or124, 16711680, !dbg !17829
  %shr126 = lshr i32 %and125, 8, !dbg !17829
  %or127 = or i32 %or92, %shr126, !dbg !17829
  %arraydecay128 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 0, !dbg !17829
  %34 = load i32, i32* %add.ptr129, align 4, !dbg !17829
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !17829
  br i1 %35, label %cond.true130, label %cond.false150, !dbg !17829

cond.true130:                                     ; preds = %cond.end119
  %arraydecay131 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr132 = getelementptr i32, i32* %arraydecay131, i64 0, !dbg !17829
  %36 = load i32, i32* %add.ptr132, align 4, !dbg !17829
  %and133 = and i32 %36, 255, !dbg !17829
  %shl134 = shl i32 %and133, 24, !dbg !17829
  %arraydecay135 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 0, !dbg !17829
  %37 = load i32, i32* %add.ptr136, align 4, !dbg !17829
  %and137 = and i32 %37, 65280, !dbg !17829
  %shl138 = shl i32 %and137, 8, !dbg !17829
  %or139 = or i32 %shl134, %shl138, !dbg !17829
  %arraydecay140 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr141 = getelementptr i32, i32* %arraydecay140, i64 0, !dbg !17829
  %38 = load i32, i32* %add.ptr141, align 4, !dbg !17829
  %and142 = and i32 %38, 16711680, !dbg !17829
  %shr143 = lshr i32 %and142, 8, !dbg !17829
  %or144 = or i32 %or139, %shr143, !dbg !17829
  %arraydecay145 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 0, !dbg !17829
  %39 = load i32, i32* %add.ptr146, align 4, !dbg !17829
  %and147 = and i32 %39, -16777216, !dbg !17829
  %shr148 = lshr i32 %and147, 24, !dbg !17829
  %or149 = or i32 %or144, %shr148, !dbg !17829
  br label %cond.end154, !dbg !17829

cond.false150:                                    ; preds = %cond.end119
  %arraydecay151 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 0, !dbg !17829
  %40 = load i32, i32* %add.ptr152, align 4, !dbg !17829
  %call153 = call i32 @__fswab32(i32 %40) #10, !dbg !17829
  br label %cond.end154, !dbg !17829

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !17829
  %and156 = and i32 %cond155, 65535, !dbg !17829
  %41 = load i32, i32* %_v, align 4, !dbg !17829
  %and157 = and i32 %41, 65535, !dbg !17829
  %shl158 = shl i32 %and157, 16, !dbg !17829
  %or159 = or i32 %and156, %shl158, !dbg !17829
  %and160 = and i32 %or159, -16777216, !dbg !17829
  %shr161 = lshr i32 %and160, 24, !dbg !17829
  %or162 = or i32 %or127, %shr161, !dbg !17829
  br label %cond.end197, !dbg !17829

cond.false163:                                    ; preds = %cond.end
  %arraydecay164 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 0, !dbg !17829
  %42 = load i32, i32* %add.ptr165, align 4, !dbg !17829
  %43 = call i1 @llvm.is.constant.i32(i32 %42), !dbg !17829
  br i1 %43, label %cond.true166, label %cond.false186, !dbg !17829

cond.true166:                                     ; preds = %cond.false163
  %arraydecay167 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 0, !dbg !17829
  %44 = load i32, i32* %add.ptr168, align 4, !dbg !17829
  %and169 = and i32 %44, 255, !dbg !17829
  %shl170 = shl i32 %and169, 24, !dbg !17829
  %arraydecay171 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !17829
  %45 = load i32, i32* %add.ptr172, align 4, !dbg !17829
  %and173 = and i32 %45, 65280, !dbg !17829
  %shl174 = shl i32 %and173, 8, !dbg !17829
  %or175 = or i32 %shl170, %shl174, !dbg !17829
  %arraydecay176 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 0, !dbg !17829
  %46 = load i32, i32* %add.ptr177, align 4, !dbg !17829
  %and178 = and i32 %46, 16711680, !dbg !17829
  %shr179 = lshr i32 %and178, 8, !dbg !17829
  %or180 = or i32 %or175, %shr179, !dbg !17829
  %arraydecay181 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 0, !dbg !17829
  %47 = load i32, i32* %add.ptr182, align 4, !dbg !17829
  %and183 = and i32 %47, -16777216, !dbg !17829
  %shr184 = lshr i32 %and183, 24, !dbg !17829
  %or185 = or i32 %or180, %shr184, !dbg !17829
  br label %cond.end190, !dbg !17829

cond.false186:                                    ; preds = %cond.false163
  %arraydecay187 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr188 = getelementptr i32, i32* %arraydecay187, i64 0, !dbg !17829
  %48 = load i32, i32* %add.ptr188, align 4, !dbg !17829
  %call189 = call i32 @__fswab32(i32 %48) #10, !dbg !17829
  br label %cond.end190, !dbg !17829

cond.end190:                                      ; preds = %cond.false186, %cond.true166
  %cond191 = phi i32 [ %or185, %cond.true166 ], [ %call189, %cond.false186 ], !dbg !17829
  %and192 = and i32 %cond191, 65535, !dbg !17829
  %49 = load i32, i32* %_v, align 4, !dbg !17829
  %and193 = and i32 %49, 65535, !dbg !17829
  %shl194 = shl i32 %and193, 16, !dbg !17829
  %or195 = or i32 %and192, %shl194, !dbg !17829
  %call196 = call i32 @__fswab32(i32 %or195) #10, !dbg !17829
  br label %cond.end197, !dbg !17829

cond.end197:                                      ; preds = %cond.end190, %cond.end154
  %cond198 = phi i32 [ %or162, %cond.end154 ], [ %call196, %cond.end190 ], !dbg !17829
  %arraydecay199 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17829
  %add.ptr200 = getelementptr i32, i32* %arraydecay199, i64 0, !dbg !17829
  store i32 %cond198, i32* %add.ptr200, align 4, !dbg !17829
  br label %do.end201, !dbg !17829

do.end201:                                        ; preds = %cond.end197
  br label %do.body202, !dbg !17832

do.body202:                                       ; preds = %do.end201
  call void @llvm.dbg.declare(metadata i32* %_v203, metadata !17833, metadata !DIExpression()), !dbg !17835
  store i32 1, i32* %_v203, align 4, !dbg !17835
  br label %do.body204, !dbg !17835

do.body204:                                       ; preds = %do.body202
  br label %do.end205, !dbg !17836

do.end205:                                        ; preds = %do.body204
  %arraydecay206 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 3, !dbg !17835
  %50 = load i32, i32* %add.ptr207, align 4, !dbg !17835
  %51 = call i1 @llvm.is.constant.i32(i32 %50), !dbg !17835
  br i1 %51, label %cond.true208, label %cond.false228, !dbg !17835

cond.true208:                                     ; preds = %do.end205
  %arraydecay209 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 3, !dbg !17835
  %52 = load i32, i32* %add.ptr210, align 4, !dbg !17835
  %and211 = and i32 %52, 255, !dbg !17835
  %shl212 = shl i32 %and211, 24, !dbg !17835
  %arraydecay213 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 3, !dbg !17835
  %53 = load i32, i32* %add.ptr214, align 4, !dbg !17835
  %and215 = and i32 %53, 65280, !dbg !17835
  %shl216 = shl i32 %and215, 8, !dbg !17835
  %or217 = or i32 %shl212, %shl216, !dbg !17835
  %arraydecay218 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr219 = getelementptr i32, i32* %arraydecay218, i64 3, !dbg !17835
  %54 = load i32, i32* %add.ptr219, align 4, !dbg !17835
  %and220 = and i32 %54, 16711680, !dbg !17835
  %shr221 = lshr i32 %and220, 8, !dbg !17835
  %or222 = or i32 %or217, %shr221, !dbg !17835
  %arraydecay223 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr224 = getelementptr i32, i32* %arraydecay223, i64 3, !dbg !17835
  %55 = load i32, i32* %add.ptr224, align 4, !dbg !17835
  %and225 = and i32 %55, -16777216, !dbg !17835
  %shr226 = lshr i32 %and225, 24, !dbg !17835
  %or227 = or i32 %or222, %shr226, !dbg !17835
  br label %cond.end232, !dbg !17835

cond.false228:                                    ; preds = %do.end205
  %arraydecay229 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 3, !dbg !17835
  %56 = load i32, i32* %add.ptr230, align 4, !dbg !17835
  %call231 = call i32 @__fswab32(i32 %56) #10, !dbg !17835
  br label %cond.end232, !dbg !17835

cond.end232:                                      ; preds = %cond.false228, %cond.true208
  %cond233 = phi i32 [ %or227, %cond.true208 ], [ %call231, %cond.false228 ], !dbg !17835
  %and234 = and i32 %cond233, -33, !dbg !17835
  %57 = load i32, i32* %_v203, align 4, !dbg !17835
  %and235 = and i32 %57, 1, !dbg !17835
  %shl236 = shl i32 %and235, 5, !dbg !17835
  %or237 = or i32 %and234, %shl236, !dbg !17835
  %58 = call i1 @llvm.is.constant.i32(i32 %or237), !dbg !17835
  br i1 %58, label %cond.true238, label %cond.false378, !dbg !17835

cond.true238:                                     ; preds = %cond.end232
  %arraydecay239 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr240 = getelementptr i32, i32* %arraydecay239, i64 3, !dbg !17835
  %59 = load i32, i32* %add.ptr240, align 4, !dbg !17835
  %60 = call i1 @llvm.is.constant.i32(i32 %59), !dbg !17835
  br i1 %60, label %cond.true241, label %cond.false261, !dbg !17835

cond.true241:                                     ; preds = %cond.true238
  %arraydecay242 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 3, !dbg !17835
  %61 = load i32, i32* %add.ptr243, align 4, !dbg !17835
  %and244 = and i32 %61, 255, !dbg !17835
  %shl245 = shl i32 %and244, 24, !dbg !17835
  %arraydecay246 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 3, !dbg !17835
  %62 = load i32, i32* %add.ptr247, align 4, !dbg !17835
  %and248 = and i32 %62, 65280, !dbg !17835
  %shl249 = shl i32 %and248, 8, !dbg !17835
  %or250 = or i32 %shl245, %shl249, !dbg !17835
  %arraydecay251 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr252 = getelementptr i32, i32* %arraydecay251, i64 3, !dbg !17835
  %63 = load i32, i32* %add.ptr252, align 4, !dbg !17835
  %and253 = and i32 %63, 16711680, !dbg !17835
  %shr254 = lshr i32 %and253, 8, !dbg !17835
  %or255 = or i32 %or250, %shr254, !dbg !17835
  %arraydecay256 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr257 = getelementptr i32, i32* %arraydecay256, i64 3, !dbg !17835
  %64 = load i32, i32* %add.ptr257, align 4, !dbg !17835
  %and258 = and i32 %64, -16777216, !dbg !17835
  %shr259 = lshr i32 %and258, 24, !dbg !17835
  %or260 = or i32 %or255, %shr259, !dbg !17835
  br label %cond.end265, !dbg !17835

cond.false261:                                    ; preds = %cond.true238
  %arraydecay262 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr263 = getelementptr i32, i32* %arraydecay262, i64 3, !dbg !17835
  %65 = load i32, i32* %add.ptr263, align 4, !dbg !17835
  %call264 = call i32 @__fswab32(i32 %65) #10, !dbg !17835
  br label %cond.end265, !dbg !17835

cond.end265:                                      ; preds = %cond.false261, %cond.true241
  %cond266 = phi i32 [ %or260, %cond.true241 ], [ %call264, %cond.false261 ], !dbg !17835
  %and267 = and i32 %cond266, -33, !dbg !17835
  %66 = load i32, i32* %_v203, align 4, !dbg !17835
  %and268 = and i32 %66, 1, !dbg !17835
  %shl269 = shl i32 %and268, 5, !dbg !17835
  %or270 = or i32 %and267, %shl269, !dbg !17835
  %and271 = and i32 %or270, 255, !dbg !17835
  %shl272 = shl i32 %and271, 24, !dbg !17835
  %arraydecay273 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 3, !dbg !17835
  %67 = load i32, i32* %add.ptr274, align 4, !dbg !17835
  %68 = call i1 @llvm.is.constant.i32(i32 %67), !dbg !17835
  br i1 %68, label %cond.true275, label %cond.false295, !dbg !17835

cond.true275:                                     ; preds = %cond.end265
  %arraydecay276 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr277 = getelementptr i32, i32* %arraydecay276, i64 3, !dbg !17835
  %69 = load i32, i32* %add.ptr277, align 4, !dbg !17835
  %and278 = and i32 %69, 255, !dbg !17835
  %shl279 = shl i32 %and278, 24, !dbg !17835
  %arraydecay280 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 3, !dbg !17835
  %70 = load i32, i32* %add.ptr281, align 4, !dbg !17835
  %and282 = and i32 %70, 65280, !dbg !17835
  %shl283 = shl i32 %and282, 8, !dbg !17835
  %or284 = or i32 %shl279, %shl283, !dbg !17835
  %arraydecay285 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 3, !dbg !17835
  %71 = load i32, i32* %add.ptr286, align 4, !dbg !17835
  %and287 = and i32 %71, 16711680, !dbg !17835
  %shr288 = lshr i32 %and287, 8, !dbg !17835
  %or289 = or i32 %or284, %shr288, !dbg !17835
  %arraydecay290 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr291 = getelementptr i32, i32* %arraydecay290, i64 3, !dbg !17835
  %72 = load i32, i32* %add.ptr291, align 4, !dbg !17835
  %and292 = and i32 %72, -16777216, !dbg !17835
  %shr293 = lshr i32 %and292, 24, !dbg !17835
  %or294 = or i32 %or289, %shr293, !dbg !17835
  br label %cond.end299, !dbg !17835

cond.false295:                                    ; preds = %cond.end265
  %arraydecay296 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr297 = getelementptr i32, i32* %arraydecay296, i64 3, !dbg !17835
  %73 = load i32, i32* %add.ptr297, align 4, !dbg !17835
  %call298 = call i32 @__fswab32(i32 %73) #10, !dbg !17835
  br label %cond.end299, !dbg !17835

cond.end299:                                      ; preds = %cond.false295, %cond.true275
  %cond300 = phi i32 [ %or294, %cond.true275 ], [ %call298, %cond.false295 ], !dbg !17835
  %and301 = and i32 %cond300, -33, !dbg !17835
  %74 = load i32, i32* %_v203, align 4, !dbg !17835
  %and302 = and i32 %74, 1, !dbg !17835
  %shl303 = shl i32 %and302, 5, !dbg !17835
  %or304 = or i32 %and301, %shl303, !dbg !17835
  %and305 = and i32 %or304, 65280, !dbg !17835
  %shl306 = shl i32 %and305, 8, !dbg !17835
  %or307 = or i32 %shl272, %shl306, !dbg !17835
  %arraydecay308 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr309 = getelementptr i32, i32* %arraydecay308, i64 3, !dbg !17835
  %75 = load i32, i32* %add.ptr309, align 4, !dbg !17835
  %76 = call i1 @llvm.is.constant.i32(i32 %75), !dbg !17835
  br i1 %76, label %cond.true310, label %cond.false330, !dbg !17835

cond.true310:                                     ; preds = %cond.end299
  %arraydecay311 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr312 = getelementptr i32, i32* %arraydecay311, i64 3, !dbg !17835
  %77 = load i32, i32* %add.ptr312, align 4, !dbg !17835
  %and313 = and i32 %77, 255, !dbg !17835
  %shl314 = shl i32 %and313, 24, !dbg !17835
  %arraydecay315 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 3, !dbg !17835
  %78 = load i32, i32* %add.ptr316, align 4, !dbg !17835
  %and317 = and i32 %78, 65280, !dbg !17835
  %shl318 = shl i32 %and317, 8, !dbg !17835
  %or319 = or i32 %shl314, %shl318, !dbg !17835
  %arraydecay320 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr321 = getelementptr i32, i32* %arraydecay320, i64 3, !dbg !17835
  %79 = load i32, i32* %add.ptr321, align 4, !dbg !17835
  %and322 = and i32 %79, 16711680, !dbg !17835
  %shr323 = lshr i32 %and322, 8, !dbg !17835
  %or324 = or i32 %or319, %shr323, !dbg !17835
  %arraydecay325 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr326 = getelementptr i32, i32* %arraydecay325, i64 3, !dbg !17835
  %80 = load i32, i32* %add.ptr326, align 4, !dbg !17835
  %and327 = and i32 %80, -16777216, !dbg !17835
  %shr328 = lshr i32 %and327, 24, !dbg !17835
  %or329 = or i32 %or324, %shr328, !dbg !17835
  br label %cond.end334, !dbg !17835

cond.false330:                                    ; preds = %cond.end299
  %arraydecay331 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr332 = getelementptr i32, i32* %arraydecay331, i64 3, !dbg !17835
  %81 = load i32, i32* %add.ptr332, align 4, !dbg !17835
  %call333 = call i32 @__fswab32(i32 %81) #10, !dbg !17835
  br label %cond.end334, !dbg !17835

cond.end334:                                      ; preds = %cond.false330, %cond.true310
  %cond335 = phi i32 [ %or329, %cond.true310 ], [ %call333, %cond.false330 ], !dbg !17835
  %and336 = and i32 %cond335, -33, !dbg !17835
  %82 = load i32, i32* %_v203, align 4, !dbg !17835
  %and337 = and i32 %82, 1, !dbg !17835
  %shl338 = shl i32 %and337, 5, !dbg !17835
  %or339 = or i32 %and336, %shl338, !dbg !17835
  %and340 = and i32 %or339, 16711680, !dbg !17835
  %shr341 = lshr i32 %and340, 8, !dbg !17835
  %or342 = or i32 %or307, %shr341, !dbg !17835
  %arraydecay343 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr344 = getelementptr i32, i32* %arraydecay343, i64 3, !dbg !17835
  %83 = load i32, i32* %add.ptr344, align 4, !dbg !17835
  %84 = call i1 @llvm.is.constant.i32(i32 %83), !dbg !17835
  br i1 %84, label %cond.true345, label %cond.false365, !dbg !17835

cond.true345:                                     ; preds = %cond.end334
  %arraydecay346 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr347 = getelementptr i32, i32* %arraydecay346, i64 3, !dbg !17835
  %85 = load i32, i32* %add.ptr347, align 4, !dbg !17835
  %and348 = and i32 %85, 255, !dbg !17835
  %shl349 = shl i32 %and348, 24, !dbg !17835
  %arraydecay350 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr351 = getelementptr i32, i32* %arraydecay350, i64 3, !dbg !17835
  %86 = load i32, i32* %add.ptr351, align 4, !dbg !17835
  %and352 = and i32 %86, 65280, !dbg !17835
  %shl353 = shl i32 %and352, 8, !dbg !17835
  %or354 = or i32 %shl349, %shl353, !dbg !17835
  %arraydecay355 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr356 = getelementptr i32, i32* %arraydecay355, i64 3, !dbg !17835
  %87 = load i32, i32* %add.ptr356, align 4, !dbg !17835
  %and357 = and i32 %87, 16711680, !dbg !17835
  %shr358 = lshr i32 %and357, 8, !dbg !17835
  %or359 = or i32 %or354, %shr358, !dbg !17835
  %arraydecay360 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr361 = getelementptr i32, i32* %arraydecay360, i64 3, !dbg !17835
  %88 = load i32, i32* %add.ptr361, align 4, !dbg !17835
  %and362 = and i32 %88, -16777216, !dbg !17835
  %shr363 = lshr i32 %and362, 24, !dbg !17835
  %or364 = or i32 %or359, %shr363, !dbg !17835
  br label %cond.end369, !dbg !17835

cond.false365:                                    ; preds = %cond.end334
  %arraydecay366 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr367 = getelementptr i32, i32* %arraydecay366, i64 3, !dbg !17835
  %89 = load i32, i32* %add.ptr367, align 4, !dbg !17835
  %call368 = call i32 @__fswab32(i32 %89) #10, !dbg !17835
  br label %cond.end369, !dbg !17835

cond.end369:                                      ; preds = %cond.false365, %cond.true345
  %cond370 = phi i32 [ %or364, %cond.true345 ], [ %call368, %cond.false365 ], !dbg !17835
  %and371 = and i32 %cond370, -33, !dbg !17835
  %90 = load i32, i32* %_v203, align 4, !dbg !17835
  %and372 = and i32 %90, 1, !dbg !17835
  %shl373 = shl i32 %and372, 5, !dbg !17835
  %or374 = or i32 %and371, %shl373, !dbg !17835
  %and375 = and i32 %or374, -16777216, !dbg !17835
  %shr376 = lshr i32 %and375, 24, !dbg !17835
  %or377 = or i32 %or342, %shr376, !dbg !17835
  br label %cond.end412, !dbg !17835

cond.false378:                                    ; preds = %cond.end232
  %arraydecay379 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr380 = getelementptr i32, i32* %arraydecay379, i64 3, !dbg !17835
  %91 = load i32, i32* %add.ptr380, align 4, !dbg !17835
  %92 = call i1 @llvm.is.constant.i32(i32 %91), !dbg !17835
  br i1 %92, label %cond.true381, label %cond.false401, !dbg !17835

cond.true381:                                     ; preds = %cond.false378
  %arraydecay382 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 3, !dbg !17835
  %93 = load i32, i32* %add.ptr383, align 4, !dbg !17835
  %and384 = and i32 %93, 255, !dbg !17835
  %shl385 = shl i32 %and384, 24, !dbg !17835
  %arraydecay386 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 3, !dbg !17835
  %94 = load i32, i32* %add.ptr387, align 4, !dbg !17835
  %and388 = and i32 %94, 65280, !dbg !17835
  %shl389 = shl i32 %and388, 8, !dbg !17835
  %or390 = or i32 %shl385, %shl389, !dbg !17835
  %arraydecay391 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr392 = getelementptr i32, i32* %arraydecay391, i64 3, !dbg !17835
  %95 = load i32, i32* %add.ptr392, align 4, !dbg !17835
  %and393 = and i32 %95, 16711680, !dbg !17835
  %shr394 = lshr i32 %and393, 8, !dbg !17835
  %or395 = or i32 %or390, %shr394, !dbg !17835
  %arraydecay396 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 3, !dbg !17835
  %96 = load i32, i32* %add.ptr397, align 4, !dbg !17835
  %and398 = and i32 %96, -16777216, !dbg !17835
  %shr399 = lshr i32 %and398, 24, !dbg !17835
  %or400 = or i32 %or395, %shr399, !dbg !17835
  br label %cond.end405, !dbg !17835

cond.false401:                                    ; preds = %cond.false378
  %arraydecay402 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr403 = getelementptr i32, i32* %arraydecay402, i64 3, !dbg !17835
  %97 = load i32, i32* %add.ptr403, align 4, !dbg !17835
  %call404 = call i32 @__fswab32(i32 %97) #10, !dbg !17835
  br label %cond.end405, !dbg !17835

cond.end405:                                      ; preds = %cond.false401, %cond.true381
  %cond406 = phi i32 [ %or400, %cond.true381 ], [ %call404, %cond.false401 ], !dbg !17835
  %and407 = and i32 %cond406, -33, !dbg !17835
  %98 = load i32, i32* %_v203, align 4, !dbg !17835
  %and408 = and i32 %98, 1, !dbg !17835
  %shl409 = shl i32 %and408, 5, !dbg !17835
  %or410 = or i32 %and407, %shl409, !dbg !17835
  %call411 = call i32 @__fswab32(i32 %or410) #10, !dbg !17835
  br label %cond.end412, !dbg !17835

cond.end412:                                      ; preds = %cond.end405, %cond.end369
  %cond413 = phi i32 [ %or377, %cond.end369 ], [ %call411, %cond.end405 ], !dbg !17835
  %arraydecay414 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17835
  %add.ptr415 = getelementptr i32, i32* %arraydecay414, i64 3, !dbg !17835
  store i32 %cond413, i32* %add.ptr415, align 4, !dbg !17835
  br label %do.end416, !dbg !17835

do.end416:                                        ; preds = %cond.end412
  br label %do.body417, !dbg !17838

do.body417:                                       ; preds = %do.end416
  call void @llvm.dbg.declare(metadata i32* %_v418, metadata !17839, metadata !DIExpression()), !dbg !17841
  %99 = load i16, i16* %vport.addr, align 2, !dbg !17841
  %conv = zext i16 %99 to i32, !dbg !17841
  store i32 %conv, i32* %_v418, align 4, !dbg !17841
  br label %do.body419, !dbg !17841

do.body419:                                       ; preds = %do.body417
  br label %do.end420, !dbg !17842

do.end420:                                        ; preds = %do.body419
  %arraydecay421 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr422 = getelementptr i32, i32* %arraydecay421, i64 2, !dbg !17841
  %100 = load i32, i32* %add.ptr422, align 4, !dbg !17841
  %101 = call i1 @llvm.is.constant.i32(i32 %100), !dbg !17841
  br i1 %101, label %cond.true423, label %cond.false443, !dbg !17841

cond.true423:                                     ; preds = %do.end420
  %arraydecay424 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr425 = getelementptr i32, i32* %arraydecay424, i64 2, !dbg !17841
  %102 = load i32, i32* %add.ptr425, align 4, !dbg !17841
  %and426 = and i32 %102, 255, !dbg !17841
  %shl427 = shl i32 %and426, 24, !dbg !17841
  %arraydecay428 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr429 = getelementptr i32, i32* %arraydecay428, i64 2, !dbg !17841
  %103 = load i32, i32* %add.ptr429, align 4, !dbg !17841
  %and430 = and i32 %103, 65280, !dbg !17841
  %shl431 = shl i32 %and430, 8, !dbg !17841
  %or432 = or i32 %shl427, %shl431, !dbg !17841
  %arraydecay433 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr434 = getelementptr i32, i32* %arraydecay433, i64 2, !dbg !17841
  %104 = load i32, i32* %add.ptr434, align 4, !dbg !17841
  %and435 = and i32 %104, 16711680, !dbg !17841
  %shr436 = lshr i32 %and435, 8, !dbg !17841
  %or437 = or i32 %or432, %shr436, !dbg !17841
  %arraydecay438 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr439 = getelementptr i32, i32* %arraydecay438, i64 2, !dbg !17841
  %105 = load i32, i32* %add.ptr439, align 4, !dbg !17841
  %and440 = and i32 %105, -16777216, !dbg !17841
  %shr441 = lshr i32 %and440, 24, !dbg !17841
  %or442 = or i32 %or437, %shr441, !dbg !17841
  br label %cond.end447, !dbg !17841

cond.false443:                                    ; preds = %do.end420
  %arraydecay444 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr445 = getelementptr i32, i32* %arraydecay444, i64 2, !dbg !17841
  %106 = load i32, i32* %add.ptr445, align 4, !dbg !17841
  %call446 = call i32 @__fswab32(i32 %106) #10, !dbg !17841
  br label %cond.end447, !dbg !17841

cond.end447:                                      ; preds = %cond.false443, %cond.true423
  %cond448 = phi i32 [ %or442, %cond.true423 ], [ %call446, %cond.false443 ], !dbg !17841
  %and449 = and i32 %cond448, -65536, !dbg !17841
  %107 = load i32, i32* %_v418, align 4, !dbg !17841
  %and450 = and i32 %107, 65535, !dbg !17841
  %shl451 = shl i32 %and450, 0, !dbg !17841
  %or452 = or i32 %and449, %shl451, !dbg !17841
  %108 = call i1 @llvm.is.constant.i32(i32 %or452), !dbg !17841
  br i1 %108, label %cond.true453, label %cond.false593, !dbg !17841

cond.true453:                                     ; preds = %cond.end447
  %arraydecay454 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr455 = getelementptr i32, i32* %arraydecay454, i64 2, !dbg !17841
  %109 = load i32, i32* %add.ptr455, align 4, !dbg !17841
  %110 = call i1 @llvm.is.constant.i32(i32 %109), !dbg !17841
  br i1 %110, label %cond.true456, label %cond.false476, !dbg !17841

cond.true456:                                     ; preds = %cond.true453
  %arraydecay457 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr458 = getelementptr i32, i32* %arraydecay457, i64 2, !dbg !17841
  %111 = load i32, i32* %add.ptr458, align 4, !dbg !17841
  %and459 = and i32 %111, 255, !dbg !17841
  %shl460 = shl i32 %and459, 24, !dbg !17841
  %arraydecay461 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr462 = getelementptr i32, i32* %arraydecay461, i64 2, !dbg !17841
  %112 = load i32, i32* %add.ptr462, align 4, !dbg !17841
  %and463 = and i32 %112, 65280, !dbg !17841
  %shl464 = shl i32 %and463, 8, !dbg !17841
  %or465 = or i32 %shl460, %shl464, !dbg !17841
  %arraydecay466 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr467 = getelementptr i32, i32* %arraydecay466, i64 2, !dbg !17841
  %113 = load i32, i32* %add.ptr467, align 4, !dbg !17841
  %and468 = and i32 %113, 16711680, !dbg !17841
  %shr469 = lshr i32 %and468, 8, !dbg !17841
  %or470 = or i32 %or465, %shr469, !dbg !17841
  %arraydecay471 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr472 = getelementptr i32, i32* %arraydecay471, i64 2, !dbg !17841
  %114 = load i32, i32* %add.ptr472, align 4, !dbg !17841
  %and473 = and i32 %114, -16777216, !dbg !17841
  %shr474 = lshr i32 %and473, 24, !dbg !17841
  %or475 = or i32 %or470, %shr474, !dbg !17841
  br label %cond.end480, !dbg !17841

cond.false476:                                    ; preds = %cond.true453
  %arraydecay477 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr478 = getelementptr i32, i32* %arraydecay477, i64 2, !dbg !17841
  %115 = load i32, i32* %add.ptr478, align 4, !dbg !17841
  %call479 = call i32 @__fswab32(i32 %115) #10, !dbg !17841
  br label %cond.end480, !dbg !17841

cond.end480:                                      ; preds = %cond.false476, %cond.true456
  %cond481 = phi i32 [ %or475, %cond.true456 ], [ %call479, %cond.false476 ], !dbg !17841
  %and482 = and i32 %cond481, -65536, !dbg !17841
  %116 = load i32, i32* %_v418, align 4, !dbg !17841
  %and483 = and i32 %116, 65535, !dbg !17841
  %shl484 = shl i32 %and483, 0, !dbg !17841
  %or485 = or i32 %and482, %shl484, !dbg !17841
  %and486 = and i32 %or485, 255, !dbg !17841
  %shl487 = shl i32 %and486, 24, !dbg !17841
  %arraydecay488 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr489 = getelementptr i32, i32* %arraydecay488, i64 2, !dbg !17841
  %117 = load i32, i32* %add.ptr489, align 4, !dbg !17841
  %118 = call i1 @llvm.is.constant.i32(i32 %117), !dbg !17841
  br i1 %118, label %cond.true490, label %cond.false510, !dbg !17841

cond.true490:                                     ; preds = %cond.end480
  %arraydecay491 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr492 = getelementptr i32, i32* %arraydecay491, i64 2, !dbg !17841
  %119 = load i32, i32* %add.ptr492, align 4, !dbg !17841
  %and493 = and i32 %119, 255, !dbg !17841
  %shl494 = shl i32 %and493, 24, !dbg !17841
  %arraydecay495 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr496 = getelementptr i32, i32* %arraydecay495, i64 2, !dbg !17841
  %120 = load i32, i32* %add.ptr496, align 4, !dbg !17841
  %and497 = and i32 %120, 65280, !dbg !17841
  %shl498 = shl i32 %and497, 8, !dbg !17841
  %or499 = or i32 %shl494, %shl498, !dbg !17841
  %arraydecay500 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr501 = getelementptr i32, i32* %arraydecay500, i64 2, !dbg !17841
  %121 = load i32, i32* %add.ptr501, align 4, !dbg !17841
  %and502 = and i32 %121, 16711680, !dbg !17841
  %shr503 = lshr i32 %and502, 8, !dbg !17841
  %or504 = or i32 %or499, %shr503, !dbg !17841
  %arraydecay505 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr506 = getelementptr i32, i32* %arraydecay505, i64 2, !dbg !17841
  %122 = load i32, i32* %add.ptr506, align 4, !dbg !17841
  %and507 = and i32 %122, -16777216, !dbg !17841
  %shr508 = lshr i32 %and507, 24, !dbg !17841
  %or509 = or i32 %or504, %shr508, !dbg !17841
  br label %cond.end514, !dbg !17841

cond.false510:                                    ; preds = %cond.end480
  %arraydecay511 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr512 = getelementptr i32, i32* %arraydecay511, i64 2, !dbg !17841
  %123 = load i32, i32* %add.ptr512, align 4, !dbg !17841
  %call513 = call i32 @__fswab32(i32 %123) #10, !dbg !17841
  br label %cond.end514, !dbg !17841

cond.end514:                                      ; preds = %cond.false510, %cond.true490
  %cond515 = phi i32 [ %or509, %cond.true490 ], [ %call513, %cond.false510 ], !dbg !17841
  %and516 = and i32 %cond515, -65536, !dbg !17841
  %124 = load i32, i32* %_v418, align 4, !dbg !17841
  %and517 = and i32 %124, 65535, !dbg !17841
  %shl518 = shl i32 %and517, 0, !dbg !17841
  %or519 = or i32 %and516, %shl518, !dbg !17841
  %and520 = and i32 %or519, 65280, !dbg !17841
  %shl521 = shl i32 %and520, 8, !dbg !17841
  %or522 = or i32 %shl487, %shl521, !dbg !17841
  %arraydecay523 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr524 = getelementptr i32, i32* %arraydecay523, i64 2, !dbg !17841
  %125 = load i32, i32* %add.ptr524, align 4, !dbg !17841
  %126 = call i1 @llvm.is.constant.i32(i32 %125), !dbg !17841
  br i1 %126, label %cond.true525, label %cond.false545, !dbg !17841

cond.true525:                                     ; preds = %cond.end514
  %arraydecay526 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr527 = getelementptr i32, i32* %arraydecay526, i64 2, !dbg !17841
  %127 = load i32, i32* %add.ptr527, align 4, !dbg !17841
  %and528 = and i32 %127, 255, !dbg !17841
  %shl529 = shl i32 %and528, 24, !dbg !17841
  %arraydecay530 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr531 = getelementptr i32, i32* %arraydecay530, i64 2, !dbg !17841
  %128 = load i32, i32* %add.ptr531, align 4, !dbg !17841
  %and532 = and i32 %128, 65280, !dbg !17841
  %shl533 = shl i32 %and532, 8, !dbg !17841
  %or534 = or i32 %shl529, %shl533, !dbg !17841
  %arraydecay535 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr536 = getelementptr i32, i32* %arraydecay535, i64 2, !dbg !17841
  %129 = load i32, i32* %add.ptr536, align 4, !dbg !17841
  %and537 = and i32 %129, 16711680, !dbg !17841
  %shr538 = lshr i32 %and537, 8, !dbg !17841
  %or539 = or i32 %or534, %shr538, !dbg !17841
  %arraydecay540 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr541 = getelementptr i32, i32* %arraydecay540, i64 2, !dbg !17841
  %130 = load i32, i32* %add.ptr541, align 4, !dbg !17841
  %and542 = and i32 %130, -16777216, !dbg !17841
  %shr543 = lshr i32 %and542, 24, !dbg !17841
  %or544 = or i32 %or539, %shr543, !dbg !17841
  br label %cond.end549, !dbg !17841

cond.false545:                                    ; preds = %cond.end514
  %arraydecay546 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr547 = getelementptr i32, i32* %arraydecay546, i64 2, !dbg !17841
  %131 = load i32, i32* %add.ptr547, align 4, !dbg !17841
  %call548 = call i32 @__fswab32(i32 %131) #10, !dbg !17841
  br label %cond.end549, !dbg !17841

cond.end549:                                      ; preds = %cond.false545, %cond.true525
  %cond550 = phi i32 [ %or544, %cond.true525 ], [ %call548, %cond.false545 ], !dbg !17841
  %and551 = and i32 %cond550, -65536, !dbg !17841
  %132 = load i32, i32* %_v418, align 4, !dbg !17841
  %and552 = and i32 %132, 65535, !dbg !17841
  %shl553 = shl i32 %and552, 0, !dbg !17841
  %or554 = or i32 %and551, %shl553, !dbg !17841
  %and555 = and i32 %or554, 16711680, !dbg !17841
  %shr556 = lshr i32 %and555, 8, !dbg !17841
  %or557 = or i32 %or522, %shr556, !dbg !17841
  %arraydecay558 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr559 = getelementptr i32, i32* %arraydecay558, i64 2, !dbg !17841
  %133 = load i32, i32* %add.ptr559, align 4, !dbg !17841
  %134 = call i1 @llvm.is.constant.i32(i32 %133), !dbg !17841
  br i1 %134, label %cond.true560, label %cond.false580, !dbg !17841

cond.true560:                                     ; preds = %cond.end549
  %arraydecay561 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr562 = getelementptr i32, i32* %arraydecay561, i64 2, !dbg !17841
  %135 = load i32, i32* %add.ptr562, align 4, !dbg !17841
  %and563 = and i32 %135, 255, !dbg !17841
  %shl564 = shl i32 %and563, 24, !dbg !17841
  %arraydecay565 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr566 = getelementptr i32, i32* %arraydecay565, i64 2, !dbg !17841
  %136 = load i32, i32* %add.ptr566, align 4, !dbg !17841
  %and567 = and i32 %136, 65280, !dbg !17841
  %shl568 = shl i32 %and567, 8, !dbg !17841
  %or569 = or i32 %shl564, %shl568, !dbg !17841
  %arraydecay570 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr571 = getelementptr i32, i32* %arraydecay570, i64 2, !dbg !17841
  %137 = load i32, i32* %add.ptr571, align 4, !dbg !17841
  %and572 = and i32 %137, 16711680, !dbg !17841
  %shr573 = lshr i32 %and572, 8, !dbg !17841
  %or574 = or i32 %or569, %shr573, !dbg !17841
  %arraydecay575 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr576 = getelementptr i32, i32* %arraydecay575, i64 2, !dbg !17841
  %138 = load i32, i32* %add.ptr576, align 4, !dbg !17841
  %and577 = and i32 %138, -16777216, !dbg !17841
  %shr578 = lshr i32 %and577, 24, !dbg !17841
  %or579 = or i32 %or574, %shr578, !dbg !17841
  br label %cond.end584, !dbg !17841

cond.false580:                                    ; preds = %cond.end549
  %arraydecay581 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 2, !dbg !17841
  %139 = load i32, i32* %add.ptr582, align 4, !dbg !17841
  %call583 = call i32 @__fswab32(i32 %139) #10, !dbg !17841
  br label %cond.end584, !dbg !17841

cond.end584:                                      ; preds = %cond.false580, %cond.true560
  %cond585 = phi i32 [ %or579, %cond.true560 ], [ %call583, %cond.false580 ], !dbg !17841
  %and586 = and i32 %cond585, -65536, !dbg !17841
  %140 = load i32, i32* %_v418, align 4, !dbg !17841
  %and587 = and i32 %140, 65535, !dbg !17841
  %shl588 = shl i32 %and587, 0, !dbg !17841
  %or589 = or i32 %and586, %shl588, !dbg !17841
  %and590 = and i32 %or589, -16777216, !dbg !17841
  %shr591 = lshr i32 %and590, 24, !dbg !17841
  %or592 = or i32 %or557, %shr591, !dbg !17841
  br label %cond.end627, !dbg !17841

cond.false593:                                    ; preds = %cond.end447
  %arraydecay594 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr595 = getelementptr i32, i32* %arraydecay594, i64 2, !dbg !17841
  %141 = load i32, i32* %add.ptr595, align 4, !dbg !17841
  %142 = call i1 @llvm.is.constant.i32(i32 %141), !dbg !17841
  br i1 %142, label %cond.true596, label %cond.false616, !dbg !17841

cond.true596:                                     ; preds = %cond.false593
  %arraydecay597 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 2, !dbg !17841
  %143 = load i32, i32* %add.ptr598, align 4, !dbg !17841
  %and599 = and i32 %143, 255, !dbg !17841
  %shl600 = shl i32 %and599, 24, !dbg !17841
  %arraydecay601 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr602 = getelementptr i32, i32* %arraydecay601, i64 2, !dbg !17841
  %144 = load i32, i32* %add.ptr602, align 4, !dbg !17841
  %and603 = and i32 %144, 65280, !dbg !17841
  %shl604 = shl i32 %and603, 8, !dbg !17841
  %or605 = or i32 %shl600, %shl604, !dbg !17841
  %arraydecay606 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr607 = getelementptr i32, i32* %arraydecay606, i64 2, !dbg !17841
  %145 = load i32, i32* %add.ptr607, align 4, !dbg !17841
  %and608 = and i32 %145, 16711680, !dbg !17841
  %shr609 = lshr i32 %and608, 8, !dbg !17841
  %or610 = or i32 %or605, %shr609, !dbg !17841
  %arraydecay611 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr612 = getelementptr i32, i32* %arraydecay611, i64 2, !dbg !17841
  %146 = load i32, i32* %add.ptr612, align 4, !dbg !17841
  %and613 = and i32 %146, -16777216, !dbg !17841
  %shr614 = lshr i32 %and613, 24, !dbg !17841
  %or615 = or i32 %or610, %shr614, !dbg !17841
  br label %cond.end620, !dbg !17841

cond.false616:                                    ; preds = %cond.false593
  %arraydecay617 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr618 = getelementptr i32, i32* %arraydecay617, i64 2, !dbg !17841
  %147 = load i32, i32* %add.ptr618, align 4, !dbg !17841
  %call619 = call i32 @__fswab32(i32 %147) #10, !dbg !17841
  br label %cond.end620, !dbg !17841

cond.end620:                                      ; preds = %cond.false616, %cond.true596
  %cond621 = phi i32 [ %or615, %cond.true596 ], [ %call619, %cond.false616 ], !dbg !17841
  %and622 = and i32 %cond621, -65536, !dbg !17841
  %148 = load i32, i32* %_v418, align 4, !dbg !17841
  %and623 = and i32 %148, 65535, !dbg !17841
  %shl624 = shl i32 %and623, 0, !dbg !17841
  %or625 = or i32 %and622, %shl624, !dbg !17841
  %call626 = call i32 @__fswab32(i32 %or625) #10, !dbg !17841
  br label %cond.end627, !dbg !17841

cond.end627:                                      ; preds = %cond.end620, %cond.end584
  %cond628 = phi i32 [ %or592, %cond.end584 ], [ %call626, %cond.end620 ], !dbg !17841
  %arraydecay629 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17841
  %add.ptr630 = getelementptr i32, i32* %arraydecay629, i64 2, !dbg !17841
  store i32 %cond628, i32* %add.ptr630, align 4, !dbg !17841
  br label %do.end631, !dbg !17841

do.end631:                                        ; preds = %cond.end627
  br label %do.body632, !dbg !17844

do.body632:                                       ; preds = %do.end631
  call void @llvm.dbg.declare(metadata i32* %_v633, metadata !17845, metadata !DIExpression()), !dbg !17847
  store i32 1, i32* %_v633, align 4, !dbg !17847
  br label %do.body634, !dbg !17847

do.body634:                                       ; preds = %do.body632
  br label %do.end635, !dbg !17848

do.end635:                                        ; preds = %do.body634
  %arraydecay636 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr637 = getelementptr i32, i32* %arraydecay636, i64 2, !dbg !17847
  %149 = load i32, i32* %add.ptr637, align 4, !dbg !17847
  %150 = call i1 @llvm.is.constant.i32(i32 %149), !dbg !17847
  br i1 %150, label %cond.true638, label %cond.false658, !dbg !17847

cond.true638:                                     ; preds = %do.end635
  %arraydecay639 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr640 = getelementptr i32, i32* %arraydecay639, i64 2, !dbg !17847
  %151 = load i32, i32* %add.ptr640, align 4, !dbg !17847
  %and641 = and i32 %151, 255, !dbg !17847
  %shl642 = shl i32 %and641, 24, !dbg !17847
  %arraydecay643 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr644 = getelementptr i32, i32* %arraydecay643, i64 2, !dbg !17847
  %152 = load i32, i32* %add.ptr644, align 4, !dbg !17847
  %and645 = and i32 %152, 65280, !dbg !17847
  %shl646 = shl i32 %and645, 8, !dbg !17847
  %or647 = or i32 %shl642, %shl646, !dbg !17847
  %arraydecay648 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr649 = getelementptr i32, i32* %arraydecay648, i64 2, !dbg !17847
  %153 = load i32, i32* %add.ptr649, align 4, !dbg !17847
  %and650 = and i32 %153, 16711680, !dbg !17847
  %shr651 = lshr i32 %and650, 8, !dbg !17847
  %or652 = or i32 %or647, %shr651, !dbg !17847
  %arraydecay653 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr654 = getelementptr i32, i32* %arraydecay653, i64 2, !dbg !17847
  %154 = load i32, i32* %add.ptr654, align 4, !dbg !17847
  %and655 = and i32 %154, -16777216, !dbg !17847
  %shr656 = lshr i32 %and655, 24, !dbg !17847
  %or657 = or i32 %or652, %shr656, !dbg !17847
  br label %cond.end662, !dbg !17847

cond.false658:                                    ; preds = %do.end635
  %arraydecay659 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr660 = getelementptr i32, i32* %arraydecay659, i64 2, !dbg !17847
  %155 = load i32, i32* %add.ptr660, align 4, !dbg !17847
  %call661 = call i32 @__fswab32(i32 %155) #10, !dbg !17847
  br label %cond.end662, !dbg !17847

cond.end662:                                      ; preds = %cond.false658, %cond.true638
  %cond663 = phi i32 [ %or657, %cond.true638 ], [ %call661, %cond.false658 ], !dbg !17847
  %and664 = and i32 %cond663, 2147483647, !dbg !17847
  %156 = load i32, i32* %_v633, align 4, !dbg !17847
  %and665 = and i32 %156, 1, !dbg !17847
  %shl666 = shl i32 %and665, 31, !dbg !17847
  %or667 = or i32 %and664, %shl666, !dbg !17847
  %157 = call i1 @llvm.is.constant.i32(i32 %or667), !dbg !17847
  br i1 %157, label %cond.true668, label %cond.false808, !dbg !17847

cond.true668:                                     ; preds = %cond.end662
  %arraydecay669 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr670 = getelementptr i32, i32* %arraydecay669, i64 2, !dbg !17847
  %158 = load i32, i32* %add.ptr670, align 4, !dbg !17847
  %159 = call i1 @llvm.is.constant.i32(i32 %158), !dbg !17847
  br i1 %159, label %cond.true671, label %cond.false691, !dbg !17847

cond.true671:                                     ; preds = %cond.true668
  %arraydecay672 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr673 = getelementptr i32, i32* %arraydecay672, i64 2, !dbg !17847
  %160 = load i32, i32* %add.ptr673, align 4, !dbg !17847
  %and674 = and i32 %160, 255, !dbg !17847
  %shl675 = shl i32 %and674, 24, !dbg !17847
  %arraydecay676 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr677 = getelementptr i32, i32* %arraydecay676, i64 2, !dbg !17847
  %161 = load i32, i32* %add.ptr677, align 4, !dbg !17847
  %and678 = and i32 %161, 65280, !dbg !17847
  %shl679 = shl i32 %and678, 8, !dbg !17847
  %or680 = or i32 %shl675, %shl679, !dbg !17847
  %arraydecay681 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr682 = getelementptr i32, i32* %arraydecay681, i64 2, !dbg !17847
  %162 = load i32, i32* %add.ptr682, align 4, !dbg !17847
  %and683 = and i32 %162, 16711680, !dbg !17847
  %shr684 = lshr i32 %and683, 8, !dbg !17847
  %or685 = or i32 %or680, %shr684, !dbg !17847
  %arraydecay686 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr687 = getelementptr i32, i32* %arraydecay686, i64 2, !dbg !17847
  %163 = load i32, i32* %add.ptr687, align 4, !dbg !17847
  %and688 = and i32 %163, -16777216, !dbg !17847
  %shr689 = lshr i32 %and688, 24, !dbg !17847
  %or690 = or i32 %or685, %shr689, !dbg !17847
  br label %cond.end695, !dbg !17847

cond.false691:                                    ; preds = %cond.true668
  %arraydecay692 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr693 = getelementptr i32, i32* %arraydecay692, i64 2, !dbg !17847
  %164 = load i32, i32* %add.ptr693, align 4, !dbg !17847
  %call694 = call i32 @__fswab32(i32 %164) #10, !dbg !17847
  br label %cond.end695, !dbg !17847

cond.end695:                                      ; preds = %cond.false691, %cond.true671
  %cond696 = phi i32 [ %or690, %cond.true671 ], [ %call694, %cond.false691 ], !dbg !17847
  %and697 = and i32 %cond696, 2147483647, !dbg !17847
  %165 = load i32, i32* %_v633, align 4, !dbg !17847
  %and698 = and i32 %165, 1, !dbg !17847
  %shl699 = shl i32 %and698, 31, !dbg !17847
  %or700 = or i32 %and697, %shl699, !dbg !17847
  %and701 = and i32 %or700, 255, !dbg !17847
  %shl702 = shl i32 %and701, 24, !dbg !17847
  %arraydecay703 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr704 = getelementptr i32, i32* %arraydecay703, i64 2, !dbg !17847
  %166 = load i32, i32* %add.ptr704, align 4, !dbg !17847
  %167 = call i1 @llvm.is.constant.i32(i32 %166), !dbg !17847
  br i1 %167, label %cond.true705, label %cond.false725, !dbg !17847

cond.true705:                                     ; preds = %cond.end695
  %arraydecay706 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr707 = getelementptr i32, i32* %arraydecay706, i64 2, !dbg !17847
  %168 = load i32, i32* %add.ptr707, align 4, !dbg !17847
  %and708 = and i32 %168, 255, !dbg !17847
  %shl709 = shl i32 %and708, 24, !dbg !17847
  %arraydecay710 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr711 = getelementptr i32, i32* %arraydecay710, i64 2, !dbg !17847
  %169 = load i32, i32* %add.ptr711, align 4, !dbg !17847
  %and712 = and i32 %169, 65280, !dbg !17847
  %shl713 = shl i32 %and712, 8, !dbg !17847
  %or714 = or i32 %shl709, %shl713, !dbg !17847
  %arraydecay715 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr716 = getelementptr i32, i32* %arraydecay715, i64 2, !dbg !17847
  %170 = load i32, i32* %add.ptr716, align 4, !dbg !17847
  %and717 = and i32 %170, 16711680, !dbg !17847
  %shr718 = lshr i32 %and717, 8, !dbg !17847
  %or719 = or i32 %or714, %shr718, !dbg !17847
  %arraydecay720 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr721 = getelementptr i32, i32* %arraydecay720, i64 2, !dbg !17847
  %171 = load i32, i32* %add.ptr721, align 4, !dbg !17847
  %and722 = and i32 %171, -16777216, !dbg !17847
  %shr723 = lshr i32 %and722, 24, !dbg !17847
  %or724 = or i32 %or719, %shr723, !dbg !17847
  br label %cond.end729, !dbg !17847

cond.false725:                                    ; preds = %cond.end695
  %arraydecay726 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr727 = getelementptr i32, i32* %arraydecay726, i64 2, !dbg !17847
  %172 = load i32, i32* %add.ptr727, align 4, !dbg !17847
  %call728 = call i32 @__fswab32(i32 %172) #10, !dbg !17847
  br label %cond.end729, !dbg !17847

cond.end729:                                      ; preds = %cond.false725, %cond.true705
  %cond730 = phi i32 [ %or724, %cond.true705 ], [ %call728, %cond.false725 ], !dbg !17847
  %and731 = and i32 %cond730, 2147483647, !dbg !17847
  %173 = load i32, i32* %_v633, align 4, !dbg !17847
  %and732 = and i32 %173, 1, !dbg !17847
  %shl733 = shl i32 %and732, 31, !dbg !17847
  %or734 = or i32 %and731, %shl733, !dbg !17847
  %and735 = and i32 %or734, 65280, !dbg !17847
  %shl736 = shl i32 %and735, 8, !dbg !17847
  %or737 = or i32 %shl702, %shl736, !dbg !17847
  %arraydecay738 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr739 = getelementptr i32, i32* %arraydecay738, i64 2, !dbg !17847
  %174 = load i32, i32* %add.ptr739, align 4, !dbg !17847
  %175 = call i1 @llvm.is.constant.i32(i32 %174), !dbg !17847
  br i1 %175, label %cond.true740, label %cond.false760, !dbg !17847

cond.true740:                                     ; preds = %cond.end729
  %arraydecay741 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr742 = getelementptr i32, i32* %arraydecay741, i64 2, !dbg !17847
  %176 = load i32, i32* %add.ptr742, align 4, !dbg !17847
  %and743 = and i32 %176, 255, !dbg !17847
  %shl744 = shl i32 %and743, 24, !dbg !17847
  %arraydecay745 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr746 = getelementptr i32, i32* %arraydecay745, i64 2, !dbg !17847
  %177 = load i32, i32* %add.ptr746, align 4, !dbg !17847
  %and747 = and i32 %177, 65280, !dbg !17847
  %shl748 = shl i32 %and747, 8, !dbg !17847
  %or749 = or i32 %shl744, %shl748, !dbg !17847
  %arraydecay750 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr751 = getelementptr i32, i32* %arraydecay750, i64 2, !dbg !17847
  %178 = load i32, i32* %add.ptr751, align 4, !dbg !17847
  %and752 = and i32 %178, 16711680, !dbg !17847
  %shr753 = lshr i32 %and752, 8, !dbg !17847
  %or754 = or i32 %or749, %shr753, !dbg !17847
  %arraydecay755 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr756 = getelementptr i32, i32* %arraydecay755, i64 2, !dbg !17847
  %179 = load i32, i32* %add.ptr756, align 4, !dbg !17847
  %and757 = and i32 %179, -16777216, !dbg !17847
  %shr758 = lshr i32 %and757, 24, !dbg !17847
  %or759 = or i32 %or754, %shr758, !dbg !17847
  br label %cond.end764, !dbg !17847

cond.false760:                                    ; preds = %cond.end729
  %arraydecay761 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr762 = getelementptr i32, i32* %arraydecay761, i64 2, !dbg !17847
  %180 = load i32, i32* %add.ptr762, align 4, !dbg !17847
  %call763 = call i32 @__fswab32(i32 %180) #10, !dbg !17847
  br label %cond.end764, !dbg !17847

cond.end764:                                      ; preds = %cond.false760, %cond.true740
  %cond765 = phi i32 [ %or759, %cond.true740 ], [ %call763, %cond.false760 ], !dbg !17847
  %and766 = and i32 %cond765, 2147483647, !dbg !17847
  %181 = load i32, i32* %_v633, align 4, !dbg !17847
  %and767 = and i32 %181, 1, !dbg !17847
  %shl768 = shl i32 %and767, 31, !dbg !17847
  %or769 = or i32 %and766, %shl768, !dbg !17847
  %and770 = and i32 %or769, 16711680, !dbg !17847
  %shr771 = lshr i32 %and770, 8, !dbg !17847
  %or772 = or i32 %or737, %shr771, !dbg !17847
  %arraydecay773 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr774 = getelementptr i32, i32* %arraydecay773, i64 2, !dbg !17847
  %182 = load i32, i32* %add.ptr774, align 4, !dbg !17847
  %183 = call i1 @llvm.is.constant.i32(i32 %182), !dbg !17847
  br i1 %183, label %cond.true775, label %cond.false795, !dbg !17847

cond.true775:                                     ; preds = %cond.end764
  %arraydecay776 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr777 = getelementptr i32, i32* %arraydecay776, i64 2, !dbg !17847
  %184 = load i32, i32* %add.ptr777, align 4, !dbg !17847
  %and778 = and i32 %184, 255, !dbg !17847
  %shl779 = shl i32 %and778, 24, !dbg !17847
  %arraydecay780 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr781 = getelementptr i32, i32* %arraydecay780, i64 2, !dbg !17847
  %185 = load i32, i32* %add.ptr781, align 4, !dbg !17847
  %and782 = and i32 %185, 65280, !dbg !17847
  %shl783 = shl i32 %and782, 8, !dbg !17847
  %or784 = or i32 %shl779, %shl783, !dbg !17847
  %arraydecay785 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr786 = getelementptr i32, i32* %arraydecay785, i64 2, !dbg !17847
  %186 = load i32, i32* %add.ptr786, align 4, !dbg !17847
  %and787 = and i32 %186, 16711680, !dbg !17847
  %shr788 = lshr i32 %and787, 8, !dbg !17847
  %or789 = or i32 %or784, %shr788, !dbg !17847
  %arraydecay790 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr791 = getelementptr i32, i32* %arraydecay790, i64 2, !dbg !17847
  %187 = load i32, i32* %add.ptr791, align 4, !dbg !17847
  %and792 = and i32 %187, -16777216, !dbg !17847
  %shr793 = lshr i32 %and792, 24, !dbg !17847
  %or794 = or i32 %or789, %shr793, !dbg !17847
  br label %cond.end799, !dbg !17847

cond.false795:                                    ; preds = %cond.end764
  %arraydecay796 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr797 = getelementptr i32, i32* %arraydecay796, i64 2, !dbg !17847
  %188 = load i32, i32* %add.ptr797, align 4, !dbg !17847
  %call798 = call i32 @__fswab32(i32 %188) #10, !dbg !17847
  br label %cond.end799, !dbg !17847

cond.end799:                                      ; preds = %cond.false795, %cond.true775
  %cond800 = phi i32 [ %or794, %cond.true775 ], [ %call798, %cond.false795 ], !dbg !17847
  %and801 = and i32 %cond800, 2147483647, !dbg !17847
  %189 = load i32, i32* %_v633, align 4, !dbg !17847
  %and802 = and i32 %189, 1, !dbg !17847
  %shl803 = shl i32 %and802, 31, !dbg !17847
  %or804 = or i32 %and801, %shl803, !dbg !17847
  %and805 = and i32 %or804, -16777216, !dbg !17847
  %shr806 = lshr i32 %and805, 24, !dbg !17847
  %or807 = or i32 %or772, %shr806, !dbg !17847
  br label %cond.end842, !dbg !17847

cond.false808:                                    ; preds = %cond.end662
  %arraydecay809 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr810 = getelementptr i32, i32* %arraydecay809, i64 2, !dbg !17847
  %190 = load i32, i32* %add.ptr810, align 4, !dbg !17847
  %191 = call i1 @llvm.is.constant.i32(i32 %190), !dbg !17847
  br i1 %191, label %cond.true811, label %cond.false831, !dbg !17847

cond.true811:                                     ; preds = %cond.false808
  %arraydecay812 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr813 = getelementptr i32, i32* %arraydecay812, i64 2, !dbg !17847
  %192 = load i32, i32* %add.ptr813, align 4, !dbg !17847
  %and814 = and i32 %192, 255, !dbg !17847
  %shl815 = shl i32 %and814, 24, !dbg !17847
  %arraydecay816 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr817 = getelementptr i32, i32* %arraydecay816, i64 2, !dbg !17847
  %193 = load i32, i32* %add.ptr817, align 4, !dbg !17847
  %and818 = and i32 %193, 65280, !dbg !17847
  %shl819 = shl i32 %and818, 8, !dbg !17847
  %or820 = or i32 %shl815, %shl819, !dbg !17847
  %arraydecay821 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr822 = getelementptr i32, i32* %arraydecay821, i64 2, !dbg !17847
  %194 = load i32, i32* %add.ptr822, align 4, !dbg !17847
  %and823 = and i32 %194, 16711680, !dbg !17847
  %shr824 = lshr i32 %and823, 8, !dbg !17847
  %or825 = or i32 %or820, %shr824, !dbg !17847
  %arraydecay826 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr827 = getelementptr i32, i32* %arraydecay826, i64 2, !dbg !17847
  %195 = load i32, i32* %add.ptr827, align 4, !dbg !17847
  %and828 = and i32 %195, -16777216, !dbg !17847
  %shr829 = lshr i32 %and828, 24, !dbg !17847
  %or830 = or i32 %or825, %shr829, !dbg !17847
  br label %cond.end835, !dbg !17847

cond.false831:                                    ; preds = %cond.false808
  %arraydecay832 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr833 = getelementptr i32, i32* %arraydecay832, i64 2, !dbg !17847
  %196 = load i32, i32* %add.ptr833, align 4, !dbg !17847
  %call834 = call i32 @__fswab32(i32 %196) #10, !dbg !17847
  br label %cond.end835, !dbg !17847

cond.end835:                                      ; preds = %cond.false831, %cond.true811
  %cond836 = phi i32 [ %or830, %cond.true811 ], [ %call834, %cond.false831 ], !dbg !17847
  %and837 = and i32 %cond836, 2147483647, !dbg !17847
  %197 = load i32, i32* %_v633, align 4, !dbg !17847
  %and838 = and i32 %197, 1, !dbg !17847
  %shl839 = shl i32 %and838, 31, !dbg !17847
  %or840 = or i32 %and837, %shl839, !dbg !17847
  %call841 = call i32 @__fswab32(i32 %or840) #10, !dbg !17847
  br label %cond.end842, !dbg !17847

cond.end842:                                      ; preds = %cond.end835, %cond.end799
  %cond843 = phi i32 [ %or807, %cond.end799 ], [ %call841, %cond.end835 ], !dbg !17847
  %arraydecay844 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17847
  %add.ptr845 = getelementptr i32, i32* %arraydecay844, i64 2, !dbg !17847
  store i32 %cond843, i32* %add.ptr845, align 4, !dbg !17847
  br label %do.end846, !dbg !17847

do.end846:                                        ; preds = %cond.end842
  %arraydecay847 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17850
  %198 = bitcast i32* %arraydecay847 to i8*, !dbg !17850
  %add.ptr848 = getelementptr i8, i8* %198, i64 256, !dbg !17850
  store i8* %add.ptr848, i8** %nic_vport_ctx, align 8, !dbg !17851
  br label %do.body849, !dbg !17852

do.body849:                                       ; preds = %do.end846
  call void @llvm.dbg.declare(metadata i32* %_v850, metadata !17853, metadata !DIExpression()), !dbg !17855
  store i32 1, i32* %_v850, align 4, !dbg !17855
  br label %do.body851, !dbg !17855

do.body851:                                       ; preds = %do.body849
  br label %do.end852, !dbg !17856

do.end852:                                        ; preds = %do.body851
  %199 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %200 = bitcast i8* %199 to i32*, !dbg !17855
  %add.ptr853 = getelementptr i32, i32* %200, i64 1, !dbg !17855
  %201 = load i32, i32* %add.ptr853, align 4, !dbg !17855
  %202 = call i1 @llvm.is.constant.i32(i32 %201), !dbg !17855
  br i1 %202, label %cond.true854, label %cond.false870, !dbg !17855

cond.true854:                                     ; preds = %do.end852
  %203 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %204 = bitcast i8* %203 to i32*, !dbg !17855
  %add.ptr855 = getelementptr i32, i32* %204, i64 1, !dbg !17855
  %205 = load i32, i32* %add.ptr855, align 4, !dbg !17855
  %and856 = and i32 %205, 255, !dbg !17855
  %shl857 = shl i32 %and856, 24, !dbg !17855
  %206 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %207 = bitcast i8* %206 to i32*, !dbg !17855
  %add.ptr858 = getelementptr i32, i32* %207, i64 1, !dbg !17855
  %208 = load i32, i32* %add.ptr858, align 4, !dbg !17855
  %and859 = and i32 %208, 65280, !dbg !17855
  %shl860 = shl i32 %and859, 8, !dbg !17855
  %or861 = or i32 %shl857, %shl860, !dbg !17855
  %209 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %210 = bitcast i8* %209 to i32*, !dbg !17855
  %add.ptr862 = getelementptr i32, i32* %210, i64 1, !dbg !17855
  %211 = load i32, i32* %add.ptr862, align 4, !dbg !17855
  %and863 = and i32 %211, 16711680, !dbg !17855
  %shr864 = lshr i32 %and863, 8, !dbg !17855
  %or865 = or i32 %or861, %shr864, !dbg !17855
  %212 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %213 = bitcast i8* %212 to i32*, !dbg !17855
  %add.ptr866 = getelementptr i32, i32* %213, i64 1, !dbg !17855
  %214 = load i32, i32* %add.ptr866, align 4, !dbg !17855
  %and867 = and i32 %214, -16777216, !dbg !17855
  %shr868 = lshr i32 %and867, 24, !dbg !17855
  %or869 = or i32 %or865, %shr868, !dbg !17855
  br label %cond.end873, !dbg !17855

cond.false870:                                    ; preds = %do.end852
  %215 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %216 = bitcast i8* %215 to i32*, !dbg !17855
  %add.ptr871 = getelementptr i32, i32* %216, i64 1, !dbg !17855
  %217 = load i32, i32* %add.ptr871, align 4, !dbg !17855
  %call872 = call i32 @__fswab32(i32 %217) #10, !dbg !17855
  br label %cond.end873, !dbg !17855

cond.end873:                                      ; preds = %cond.false870, %cond.true854
  %cond874 = phi i32 [ %or869, %cond.true854 ], [ %call872, %cond.false870 ], !dbg !17855
  %and875 = and i32 %cond874, 2147483647, !dbg !17855
  %218 = load i32, i32* %_v850, align 4, !dbg !17855
  %and876 = and i32 %218, 1, !dbg !17855
  %shl877 = shl i32 %and876, 31, !dbg !17855
  %or878 = or i32 %and875, %shl877, !dbg !17855
  %219 = call i1 @llvm.is.constant.i32(i32 %or878), !dbg !17855
  br i1 %219, label %cond.true879, label %cond.false995, !dbg !17855

cond.true879:                                     ; preds = %cond.end873
  %220 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %221 = bitcast i8* %220 to i32*, !dbg !17855
  %add.ptr880 = getelementptr i32, i32* %221, i64 1, !dbg !17855
  %222 = load i32, i32* %add.ptr880, align 4, !dbg !17855
  %223 = call i1 @llvm.is.constant.i32(i32 %222), !dbg !17855
  br i1 %223, label %cond.true881, label %cond.false897, !dbg !17855

cond.true881:                                     ; preds = %cond.true879
  %224 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %225 = bitcast i8* %224 to i32*, !dbg !17855
  %add.ptr882 = getelementptr i32, i32* %225, i64 1, !dbg !17855
  %226 = load i32, i32* %add.ptr882, align 4, !dbg !17855
  %and883 = and i32 %226, 255, !dbg !17855
  %shl884 = shl i32 %and883, 24, !dbg !17855
  %227 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %228 = bitcast i8* %227 to i32*, !dbg !17855
  %add.ptr885 = getelementptr i32, i32* %228, i64 1, !dbg !17855
  %229 = load i32, i32* %add.ptr885, align 4, !dbg !17855
  %and886 = and i32 %229, 65280, !dbg !17855
  %shl887 = shl i32 %and886, 8, !dbg !17855
  %or888 = or i32 %shl884, %shl887, !dbg !17855
  %230 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %231 = bitcast i8* %230 to i32*, !dbg !17855
  %add.ptr889 = getelementptr i32, i32* %231, i64 1, !dbg !17855
  %232 = load i32, i32* %add.ptr889, align 4, !dbg !17855
  %and890 = and i32 %232, 16711680, !dbg !17855
  %shr891 = lshr i32 %and890, 8, !dbg !17855
  %or892 = or i32 %or888, %shr891, !dbg !17855
  %233 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %234 = bitcast i8* %233 to i32*, !dbg !17855
  %add.ptr893 = getelementptr i32, i32* %234, i64 1, !dbg !17855
  %235 = load i32, i32* %add.ptr893, align 4, !dbg !17855
  %and894 = and i32 %235, -16777216, !dbg !17855
  %shr895 = lshr i32 %and894, 24, !dbg !17855
  %or896 = or i32 %or892, %shr895, !dbg !17855
  br label %cond.end900, !dbg !17855

cond.false897:                                    ; preds = %cond.true879
  %236 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %237 = bitcast i8* %236 to i32*, !dbg !17855
  %add.ptr898 = getelementptr i32, i32* %237, i64 1, !dbg !17855
  %238 = load i32, i32* %add.ptr898, align 4, !dbg !17855
  %call899 = call i32 @__fswab32(i32 %238) #10, !dbg !17855
  br label %cond.end900, !dbg !17855

cond.end900:                                      ; preds = %cond.false897, %cond.true881
  %cond901 = phi i32 [ %or896, %cond.true881 ], [ %call899, %cond.false897 ], !dbg !17855
  %and902 = and i32 %cond901, 2147483647, !dbg !17855
  %239 = load i32, i32* %_v850, align 4, !dbg !17855
  %and903 = and i32 %239, 1, !dbg !17855
  %shl904 = shl i32 %and903, 31, !dbg !17855
  %or905 = or i32 %and902, %shl904, !dbg !17855
  %and906 = and i32 %or905, 255, !dbg !17855
  %shl907 = shl i32 %and906, 24, !dbg !17855
  %240 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %241 = bitcast i8* %240 to i32*, !dbg !17855
  %add.ptr908 = getelementptr i32, i32* %241, i64 1, !dbg !17855
  %242 = load i32, i32* %add.ptr908, align 4, !dbg !17855
  %243 = call i1 @llvm.is.constant.i32(i32 %242), !dbg !17855
  br i1 %243, label %cond.true909, label %cond.false925, !dbg !17855

cond.true909:                                     ; preds = %cond.end900
  %244 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %245 = bitcast i8* %244 to i32*, !dbg !17855
  %add.ptr910 = getelementptr i32, i32* %245, i64 1, !dbg !17855
  %246 = load i32, i32* %add.ptr910, align 4, !dbg !17855
  %and911 = and i32 %246, 255, !dbg !17855
  %shl912 = shl i32 %and911, 24, !dbg !17855
  %247 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %248 = bitcast i8* %247 to i32*, !dbg !17855
  %add.ptr913 = getelementptr i32, i32* %248, i64 1, !dbg !17855
  %249 = load i32, i32* %add.ptr913, align 4, !dbg !17855
  %and914 = and i32 %249, 65280, !dbg !17855
  %shl915 = shl i32 %and914, 8, !dbg !17855
  %or916 = or i32 %shl912, %shl915, !dbg !17855
  %250 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %251 = bitcast i8* %250 to i32*, !dbg !17855
  %add.ptr917 = getelementptr i32, i32* %251, i64 1, !dbg !17855
  %252 = load i32, i32* %add.ptr917, align 4, !dbg !17855
  %and918 = and i32 %252, 16711680, !dbg !17855
  %shr919 = lshr i32 %and918, 8, !dbg !17855
  %or920 = or i32 %or916, %shr919, !dbg !17855
  %253 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %254 = bitcast i8* %253 to i32*, !dbg !17855
  %add.ptr921 = getelementptr i32, i32* %254, i64 1, !dbg !17855
  %255 = load i32, i32* %add.ptr921, align 4, !dbg !17855
  %and922 = and i32 %255, -16777216, !dbg !17855
  %shr923 = lshr i32 %and922, 24, !dbg !17855
  %or924 = or i32 %or920, %shr923, !dbg !17855
  br label %cond.end928, !dbg !17855

cond.false925:                                    ; preds = %cond.end900
  %256 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %257 = bitcast i8* %256 to i32*, !dbg !17855
  %add.ptr926 = getelementptr i32, i32* %257, i64 1, !dbg !17855
  %258 = load i32, i32* %add.ptr926, align 4, !dbg !17855
  %call927 = call i32 @__fswab32(i32 %258) #10, !dbg !17855
  br label %cond.end928, !dbg !17855

cond.end928:                                      ; preds = %cond.false925, %cond.true909
  %cond929 = phi i32 [ %or924, %cond.true909 ], [ %call927, %cond.false925 ], !dbg !17855
  %and930 = and i32 %cond929, 2147483647, !dbg !17855
  %259 = load i32, i32* %_v850, align 4, !dbg !17855
  %and931 = and i32 %259, 1, !dbg !17855
  %shl932 = shl i32 %and931, 31, !dbg !17855
  %or933 = or i32 %and930, %shl932, !dbg !17855
  %and934 = and i32 %or933, 65280, !dbg !17855
  %shl935 = shl i32 %and934, 8, !dbg !17855
  %or936 = or i32 %shl907, %shl935, !dbg !17855
  %260 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %261 = bitcast i8* %260 to i32*, !dbg !17855
  %add.ptr937 = getelementptr i32, i32* %261, i64 1, !dbg !17855
  %262 = load i32, i32* %add.ptr937, align 4, !dbg !17855
  %263 = call i1 @llvm.is.constant.i32(i32 %262), !dbg !17855
  br i1 %263, label %cond.true938, label %cond.false954, !dbg !17855

cond.true938:                                     ; preds = %cond.end928
  %264 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %265 = bitcast i8* %264 to i32*, !dbg !17855
  %add.ptr939 = getelementptr i32, i32* %265, i64 1, !dbg !17855
  %266 = load i32, i32* %add.ptr939, align 4, !dbg !17855
  %and940 = and i32 %266, 255, !dbg !17855
  %shl941 = shl i32 %and940, 24, !dbg !17855
  %267 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %268 = bitcast i8* %267 to i32*, !dbg !17855
  %add.ptr942 = getelementptr i32, i32* %268, i64 1, !dbg !17855
  %269 = load i32, i32* %add.ptr942, align 4, !dbg !17855
  %and943 = and i32 %269, 65280, !dbg !17855
  %shl944 = shl i32 %and943, 8, !dbg !17855
  %or945 = or i32 %shl941, %shl944, !dbg !17855
  %270 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %271 = bitcast i8* %270 to i32*, !dbg !17855
  %add.ptr946 = getelementptr i32, i32* %271, i64 1, !dbg !17855
  %272 = load i32, i32* %add.ptr946, align 4, !dbg !17855
  %and947 = and i32 %272, 16711680, !dbg !17855
  %shr948 = lshr i32 %and947, 8, !dbg !17855
  %or949 = or i32 %or945, %shr948, !dbg !17855
  %273 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %274 = bitcast i8* %273 to i32*, !dbg !17855
  %add.ptr950 = getelementptr i32, i32* %274, i64 1, !dbg !17855
  %275 = load i32, i32* %add.ptr950, align 4, !dbg !17855
  %and951 = and i32 %275, -16777216, !dbg !17855
  %shr952 = lshr i32 %and951, 24, !dbg !17855
  %or953 = or i32 %or949, %shr952, !dbg !17855
  br label %cond.end957, !dbg !17855

cond.false954:                                    ; preds = %cond.end928
  %276 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %277 = bitcast i8* %276 to i32*, !dbg !17855
  %add.ptr955 = getelementptr i32, i32* %277, i64 1, !dbg !17855
  %278 = load i32, i32* %add.ptr955, align 4, !dbg !17855
  %call956 = call i32 @__fswab32(i32 %278) #10, !dbg !17855
  br label %cond.end957, !dbg !17855

cond.end957:                                      ; preds = %cond.false954, %cond.true938
  %cond958 = phi i32 [ %or953, %cond.true938 ], [ %call956, %cond.false954 ], !dbg !17855
  %and959 = and i32 %cond958, 2147483647, !dbg !17855
  %279 = load i32, i32* %_v850, align 4, !dbg !17855
  %and960 = and i32 %279, 1, !dbg !17855
  %shl961 = shl i32 %and960, 31, !dbg !17855
  %or962 = or i32 %and959, %shl961, !dbg !17855
  %and963 = and i32 %or962, 16711680, !dbg !17855
  %shr964 = lshr i32 %and963, 8, !dbg !17855
  %or965 = or i32 %or936, %shr964, !dbg !17855
  %280 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %281 = bitcast i8* %280 to i32*, !dbg !17855
  %add.ptr966 = getelementptr i32, i32* %281, i64 1, !dbg !17855
  %282 = load i32, i32* %add.ptr966, align 4, !dbg !17855
  %283 = call i1 @llvm.is.constant.i32(i32 %282), !dbg !17855
  br i1 %283, label %cond.true967, label %cond.false983, !dbg !17855

cond.true967:                                     ; preds = %cond.end957
  %284 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %285 = bitcast i8* %284 to i32*, !dbg !17855
  %add.ptr968 = getelementptr i32, i32* %285, i64 1, !dbg !17855
  %286 = load i32, i32* %add.ptr968, align 4, !dbg !17855
  %and969 = and i32 %286, 255, !dbg !17855
  %shl970 = shl i32 %and969, 24, !dbg !17855
  %287 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %288 = bitcast i8* %287 to i32*, !dbg !17855
  %add.ptr971 = getelementptr i32, i32* %288, i64 1, !dbg !17855
  %289 = load i32, i32* %add.ptr971, align 4, !dbg !17855
  %and972 = and i32 %289, 65280, !dbg !17855
  %shl973 = shl i32 %and972, 8, !dbg !17855
  %or974 = or i32 %shl970, %shl973, !dbg !17855
  %290 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %291 = bitcast i8* %290 to i32*, !dbg !17855
  %add.ptr975 = getelementptr i32, i32* %291, i64 1, !dbg !17855
  %292 = load i32, i32* %add.ptr975, align 4, !dbg !17855
  %and976 = and i32 %292, 16711680, !dbg !17855
  %shr977 = lshr i32 %and976, 8, !dbg !17855
  %or978 = or i32 %or974, %shr977, !dbg !17855
  %293 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %294 = bitcast i8* %293 to i32*, !dbg !17855
  %add.ptr979 = getelementptr i32, i32* %294, i64 1, !dbg !17855
  %295 = load i32, i32* %add.ptr979, align 4, !dbg !17855
  %and980 = and i32 %295, -16777216, !dbg !17855
  %shr981 = lshr i32 %and980, 24, !dbg !17855
  %or982 = or i32 %or978, %shr981, !dbg !17855
  br label %cond.end986, !dbg !17855

cond.false983:                                    ; preds = %cond.end957
  %296 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %297 = bitcast i8* %296 to i32*, !dbg !17855
  %add.ptr984 = getelementptr i32, i32* %297, i64 1, !dbg !17855
  %298 = load i32, i32* %add.ptr984, align 4, !dbg !17855
  %call985 = call i32 @__fswab32(i32 %298) #10, !dbg !17855
  br label %cond.end986, !dbg !17855

cond.end986:                                      ; preds = %cond.false983, %cond.true967
  %cond987 = phi i32 [ %or982, %cond.true967 ], [ %call985, %cond.false983 ], !dbg !17855
  %and988 = and i32 %cond987, 2147483647, !dbg !17855
  %299 = load i32, i32* %_v850, align 4, !dbg !17855
  %and989 = and i32 %299, 1, !dbg !17855
  %shl990 = shl i32 %and989, 31, !dbg !17855
  %or991 = or i32 %and988, %shl990, !dbg !17855
  %and992 = and i32 %or991, -16777216, !dbg !17855
  %shr993 = lshr i32 %and992, 24, !dbg !17855
  %or994 = or i32 %or965, %shr993, !dbg !17855
  br label %cond.end1023, !dbg !17855

cond.false995:                                    ; preds = %cond.end873
  %300 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %301 = bitcast i8* %300 to i32*, !dbg !17855
  %add.ptr996 = getelementptr i32, i32* %301, i64 1, !dbg !17855
  %302 = load i32, i32* %add.ptr996, align 4, !dbg !17855
  %303 = call i1 @llvm.is.constant.i32(i32 %302), !dbg !17855
  br i1 %303, label %cond.true997, label %cond.false1013, !dbg !17855

cond.true997:                                     ; preds = %cond.false995
  %304 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %305 = bitcast i8* %304 to i32*, !dbg !17855
  %add.ptr998 = getelementptr i32, i32* %305, i64 1, !dbg !17855
  %306 = load i32, i32* %add.ptr998, align 4, !dbg !17855
  %and999 = and i32 %306, 255, !dbg !17855
  %shl1000 = shl i32 %and999, 24, !dbg !17855
  %307 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %308 = bitcast i8* %307 to i32*, !dbg !17855
  %add.ptr1001 = getelementptr i32, i32* %308, i64 1, !dbg !17855
  %309 = load i32, i32* %add.ptr1001, align 4, !dbg !17855
  %and1002 = and i32 %309, 65280, !dbg !17855
  %shl1003 = shl i32 %and1002, 8, !dbg !17855
  %or1004 = or i32 %shl1000, %shl1003, !dbg !17855
  %310 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %311 = bitcast i8* %310 to i32*, !dbg !17855
  %add.ptr1005 = getelementptr i32, i32* %311, i64 1, !dbg !17855
  %312 = load i32, i32* %add.ptr1005, align 4, !dbg !17855
  %and1006 = and i32 %312, 16711680, !dbg !17855
  %shr1007 = lshr i32 %and1006, 8, !dbg !17855
  %or1008 = or i32 %or1004, %shr1007, !dbg !17855
  %313 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %314 = bitcast i8* %313 to i32*, !dbg !17855
  %add.ptr1009 = getelementptr i32, i32* %314, i64 1, !dbg !17855
  %315 = load i32, i32* %add.ptr1009, align 4, !dbg !17855
  %and1010 = and i32 %315, -16777216, !dbg !17855
  %shr1011 = lshr i32 %and1010, 24, !dbg !17855
  %or1012 = or i32 %or1008, %shr1011, !dbg !17855
  br label %cond.end1016, !dbg !17855

cond.false1013:                                   ; preds = %cond.false995
  %316 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %317 = bitcast i8* %316 to i32*, !dbg !17855
  %add.ptr1014 = getelementptr i32, i32* %317, i64 1, !dbg !17855
  %318 = load i32, i32* %add.ptr1014, align 4, !dbg !17855
  %call1015 = call i32 @__fswab32(i32 %318) #10, !dbg !17855
  br label %cond.end1016, !dbg !17855

cond.end1016:                                     ; preds = %cond.false1013, %cond.true997
  %cond1017 = phi i32 [ %or1012, %cond.true997 ], [ %call1015, %cond.false1013 ], !dbg !17855
  %and1018 = and i32 %cond1017, 2147483647, !dbg !17855
  %319 = load i32, i32* %_v850, align 4, !dbg !17855
  %and1019 = and i32 %319, 1, !dbg !17855
  %shl1020 = shl i32 %and1019, 31, !dbg !17855
  %or1021 = or i32 %and1018, %shl1020, !dbg !17855
  %call1022 = call i32 @__fswab32(i32 %or1021) #10, !dbg !17855
  br label %cond.end1023, !dbg !17855

cond.end1023:                                     ; preds = %cond.end1016, %cond.end986
  %cond1024 = phi i32 [ %or994, %cond.end986 ], [ %call1022, %cond.end1016 ], !dbg !17855
  %320 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17855
  %321 = bitcast i8* %320 to i32*, !dbg !17855
  %add.ptr1025 = getelementptr i32, i32* %321, i64 1, !dbg !17855
  store i32 %cond1024, i32* %add.ptr1025, align 4, !dbg !17855
  br label %do.end1026, !dbg !17855

do.end1026:                                       ; preds = %cond.end1023
  %322 = load i32, i32* %events_mask.addr, align 4, !dbg !17858
  %and1027 = and i32 %322, 1, !dbg !17860
  %tobool = icmp ne i32 %and1027, 0, !dbg !17860
  br i1 %tobool, label %if.then, label %if.end, !dbg !17861

if.then:                                          ; preds = %do.end1026
  br label %do.body1028, !dbg !17862

do.body1028:                                      ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_v1029, metadata !17863, metadata !DIExpression()), !dbg !17865
  store i32 1, i32* %_v1029, align 4, !dbg !17865
  br label %do.body1030, !dbg !17865

do.body1030:                                      ; preds = %do.body1028
  br label %do.end1031, !dbg !17866

do.end1031:                                       ; preds = %do.body1030
  %323 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %324 = bitcast i8* %323 to i32*, !dbg !17865
  %add.ptr1032 = getelementptr i32, i32* %324, i64 1, !dbg !17865
  %325 = load i32, i32* %add.ptr1032, align 4, !dbg !17865
  %326 = call i1 @llvm.is.constant.i32(i32 %325), !dbg !17865
  br i1 %326, label %cond.true1033, label %cond.false1049, !dbg !17865

cond.true1033:                                    ; preds = %do.end1031
  %327 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %328 = bitcast i8* %327 to i32*, !dbg !17865
  %add.ptr1034 = getelementptr i32, i32* %328, i64 1, !dbg !17865
  %329 = load i32, i32* %add.ptr1034, align 4, !dbg !17865
  %and1035 = and i32 %329, 255, !dbg !17865
  %shl1036 = shl i32 %and1035, 24, !dbg !17865
  %330 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %331 = bitcast i8* %330 to i32*, !dbg !17865
  %add.ptr1037 = getelementptr i32, i32* %331, i64 1, !dbg !17865
  %332 = load i32, i32* %add.ptr1037, align 4, !dbg !17865
  %and1038 = and i32 %332, 65280, !dbg !17865
  %shl1039 = shl i32 %and1038, 8, !dbg !17865
  %or1040 = or i32 %shl1036, %shl1039, !dbg !17865
  %333 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %334 = bitcast i8* %333 to i32*, !dbg !17865
  %add.ptr1041 = getelementptr i32, i32* %334, i64 1, !dbg !17865
  %335 = load i32, i32* %add.ptr1041, align 4, !dbg !17865
  %and1042 = and i32 %335, 16711680, !dbg !17865
  %shr1043 = lshr i32 %and1042, 8, !dbg !17865
  %or1044 = or i32 %or1040, %shr1043, !dbg !17865
  %336 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %337 = bitcast i8* %336 to i32*, !dbg !17865
  %add.ptr1045 = getelementptr i32, i32* %337, i64 1, !dbg !17865
  %338 = load i32, i32* %add.ptr1045, align 4, !dbg !17865
  %and1046 = and i32 %338, -16777216, !dbg !17865
  %shr1047 = lshr i32 %and1046, 24, !dbg !17865
  %or1048 = or i32 %or1044, %shr1047, !dbg !17865
  br label %cond.end1052, !dbg !17865

cond.false1049:                                   ; preds = %do.end1031
  %339 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %340 = bitcast i8* %339 to i32*, !dbg !17865
  %add.ptr1050 = getelementptr i32, i32* %340, i64 1, !dbg !17865
  %341 = load i32, i32* %add.ptr1050, align 4, !dbg !17865
  %call1051 = call i32 @__fswab32(i32 %341) #10, !dbg !17865
  br label %cond.end1052, !dbg !17865

cond.end1052:                                     ; preds = %cond.false1049, %cond.true1033
  %cond1053 = phi i32 [ %or1048, %cond.true1033 ], [ %call1051, %cond.false1049 ], !dbg !17865
  %and1054 = and i32 %cond1053, -2, !dbg !17865
  %342 = load i32, i32* %_v1029, align 4, !dbg !17865
  %and1055 = and i32 %342, 1, !dbg !17865
  %shl1056 = shl i32 %and1055, 0, !dbg !17865
  %or1057 = or i32 %and1054, %shl1056, !dbg !17865
  %343 = call i1 @llvm.is.constant.i32(i32 %or1057), !dbg !17865
  br i1 %343, label %cond.true1058, label %cond.false1174, !dbg !17865

cond.true1058:                                    ; preds = %cond.end1052
  %344 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %345 = bitcast i8* %344 to i32*, !dbg !17865
  %add.ptr1059 = getelementptr i32, i32* %345, i64 1, !dbg !17865
  %346 = load i32, i32* %add.ptr1059, align 4, !dbg !17865
  %347 = call i1 @llvm.is.constant.i32(i32 %346), !dbg !17865
  br i1 %347, label %cond.true1060, label %cond.false1076, !dbg !17865

cond.true1060:                                    ; preds = %cond.true1058
  %348 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %349 = bitcast i8* %348 to i32*, !dbg !17865
  %add.ptr1061 = getelementptr i32, i32* %349, i64 1, !dbg !17865
  %350 = load i32, i32* %add.ptr1061, align 4, !dbg !17865
  %and1062 = and i32 %350, 255, !dbg !17865
  %shl1063 = shl i32 %and1062, 24, !dbg !17865
  %351 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %352 = bitcast i8* %351 to i32*, !dbg !17865
  %add.ptr1064 = getelementptr i32, i32* %352, i64 1, !dbg !17865
  %353 = load i32, i32* %add.ptr1064, align 4, !dbg !17865
  %and1065 = and i32 %353, 65280, !dbg !17865
  %shl1066 = shl i32 %and1065, 8, !dbg !17865
  %or1067 = or i32 %shl1063, %shl1066, !dbg !17865
  %354 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %355 = bitcast i8* %354 to i32*, !dbg !17865
  %add.ptr1068 = getelementptr i32, i32* %355, i64 1, !dbg !17865
  %356 = load i32, i32* %add.ptr1068, align 4, !dbg !17865
  %and1069 = and i32 %356, 16711680, !dbg !17865
  %shr1070 = lshr i32 %and1069, 8, !dbg !17865
  %or1071 = or i32 %or1067, %shr1070, !dbg !17865
  %357 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %358 = bitcast i8* %357 to i32*, !dbg !17865
  %add.ptr1072 = getelementptr i32, i32* %358, i64 1, !dbg !17865
  %359 = load i32, i32* %add.ptr1072, align 4, !dbg !17865
  %and1073 = and i32 %359, -16777216, !dbg !17865
  %shr1074 = lshr i32 %and1073, 24, !dbg !17865
  %or1075 = or i32 %or1071, %shr1074, !dbg !17865
  br label %cond.end1079, !dbg !17865

cond.false1076:                                   ; preds = %cond.true1058
  %360 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %361 = bitcast i8* %360 to i32*, !dbg !17865
  %add.ptr1077 = getelementptr i32, i32* %361, i64 1, !dbg !17865
  %362 = load i32, i32* %add.ptr1077, align 4, !dbg !17865
  %call1078 = call i32 @__fswab32(i32 %362) #10, !dbg !17865
  br label %cond.end1079, !dbg !17865

cond.end1079:                                     ; preds = %cond.false1076, %cond.true1060
  %cond1080 = phi i32 [ %or1075, %cond.true1060 ], [ %call1078, %cond.false1076 ], !dbg !17865
  %and1081 = and i32 %cond1080, -2, !dbg !17865
  %363 = load i32, i32* %_v1029, align 4, !dbg !17865
  %and1082 = and i32 %363, 1, !dbg !17865
  %shl1083 = shl i32 %and1082, 0, !dbg !17865
  %or1084 = or i32 %and1081, %shl1083, !dbg !17865
  %and1085 = and i32 %or1084, 255, !dbg !17865
  %shl1086 = shl i32 %and1085, 24, !dbg !17865
  %364 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %365 = bitcast i8* %364 to i32*, !dbg !17865
  %add.ptr1087 = getelementptr i32, i32* %365, i64 1, !dbg !17865
  %366 = load i32, i32* %add.ptr1087, align 4, !dbg !17865
  %367 = call i1 @llvm.is.constant.i32(i32 %366), !dbg !17865
  br i1 %367, label %cond.true1088, label %cond.false1104, !dbg !17865

cond.true1088:                                    ; preds = %cond.end1079
  %368 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %369 = bitcast i8* %368 to i32*, !dbg !17865
  %add.ptr1089 = getelementptr i32, i32* %369, i64 1, !dbg !17865
  %370 = load i32, i32* %add.ptr1089, align 4, !dbg !17865
  %and1090 = and i32 %370, 255, !dbg !17865
  %shl1091 = shl i32 %and1090, 24, !dbg !17865
  %371 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %372 = bitcast i8* %371 to i32*, !dbg !17865
  %add.ptr1092 = getelementptr i32, i32* %372, i64 1, !dbg !17865
  %373 = load i32, i32* %add.ptr1092, align 4, !dbg !17865
  %and1093 = and i32 %373, 65280, !dbg !17865
  %shl1094 = shl i32 %and1093, 8, !dbg !17865
  %or1095 = or i32 %shl1091, %shl1094, !dbg !17865
  %374 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %375 = bitcast i8* %374 to i32*, !dbg !17865
  %add.ptr1096 = getelementptr i32, i32* %375, i64 1, !dbg !17865
  %376 = load i32, i32* %add.ptr1096, align 4, !dbg !17865
  %and1097 = and i32 %376, 16711680, !dbg !17865
  %shr1098 = lshr i32 %and1097, 8, !dbg !17865
  %or1099 = or i32 %or1095, %shr1098, !dbg !17865
  %377 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %378 = bitcast i8* %377 to i32*, !dbg !17865
  %add.ptr1100 = getelementptr i32, i32* %378, i64 1, !dbg !17865
  %379 = load i32, i32* %add.ptr1100, align 4, !dbg !17865
  %and1101 = and i32 %379, -16777216, !dbg !17865
  %shr1102 = lshr i32 %and1101, 24, !dbg !17865
  %or1103 = or i32 %or1099, %shr1102, !dbg !17865
  br label %cond.end1107, !dbg !17865

cond.false1104:                                   ; preds = %cond.end1079
  %380 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %381 = bitcast i8* %380 to i32*, !dbg !17865
  %add.ptr1105 = getelementptr i32, i32* %381, i64 1, !dbg !17865
  %382 = load i32, i32* %add.ptr1105, align 4, !dbg !17865
  %call1106 = call i32 @__fswab32(i32 %382) #10, !dbg !17865
  br label %cond.end1107, !dbg !17865

cond.end1107:                                     ; preds = %cond.false1104, %cond.true1088
  %cond1108 = phi i32 [ %or1103, %cond.true1088 ], [ %call1106, %cond.false1104 ], !dbg !17865
  %and1109 = and i32 %cond1108, -2, !dbg !17865
  %383 = load i32, i32* %_v1029, align 4, !dbg !17865
  %and1110 = and i32 %383, 1, !dbg !17865
  %shl1111 = shl i32 %and1110, 0, !dbg !17865
  %or1112 = or i32 %and1109, %shl1111, !dbg !17865
  %and1113 = and i32 %or1112, 65280, !dbg !17865
  %shl1114 = shl i32 %and1113, 8, !dbg !17865
  %or1115 = or i32 %shl1086, %shl1114, !dbg !17865
  %384 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %385 = bitcast i8* %384 to i32*, !dbg !17865
  %add.ptr1116 = getelementptr i32, i32* %385, i64 1, !dbg !17865
  %386 = load i32, i32* %add.ptr1116, align 4, !dbg !17865
  %387 = call i1 @llvm.is.constant.i32(i32 %386), !dbg !17865
  br i1 %387, label %cond.true1117, label %cond.false1133, !dbg !17865

cond.true1117:                                    ; preds = %cond.end1107
  %388 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %389 = bitcast i8* %388 to i32*, !dbg !17865
  %add.ptr1118 = getelementptr i32, i32* %389, i64 1, !dbg !17865
  %390 = load i32, i32* %add.ptr1118, align 4, !dbg !17865
  %and1119 = and i32 %390, 255, !dbg !17865
  %shl1120 = shl i32 %and1119, 24, !dbg !17865
  %391 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %392 = bitcast i8* %391 to i32*, !dbg !17865
  %add.ptr1121 = getelementptr i32, i32* %392, i64 1, !dbg !17865
  %393 = load i32, i32* %add.ptr1121, align 4, !dbg !17865
  %and1122 = and i32 %393, 65280, !dbg !17865
  %shl1123 = shl i32 %and1122, 8, !dbg !17865
  %or1124 = or i32 %shl1120, %shl1123, !dbg !17865
  %394 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %395 = bitcast i8* %394 to i32*, !dbg !17865
  %add.ptr1125 = getelementptr i32, i32* %395, i64 1, !dbg !17865
  %396 = load i32, i32* %add.ptr1125, align 4, !dbg !17865
  %and1126 = and i32 %396, 16711680, !dbg !17865
  %shr1127 = lshr i32 %and1126, 8, !dbg !17865
  %or1128 = or i32 %or1124, %shr1127, !dbg !17865
  %397 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %398 = bitcast i8* %397 to i32*, !dbg !17865
  %add.ptr1129 = getelementptr i32, i32* %398, i64 1, !dbg !17865
  %399 = load i32, i32* %add.ptr1129, align 4, !dbg !17865
  %and1130 = and i32 %399, -16777216, !dbg !17865
  %shr1131 = lshr i32 %and1130, 24, !dbg !17865
  %or1132 = or i32 %or1128, %shr1131, !dbg !17865
  br label %cond.end1136, !dbg !17865

cond.false1133:                                   ; preds = %cond.end1107
  %400 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %401 = bitcast i8* %400 to i32*, !dbg !17865
  %add.ptr1134 = getelementptr i32, i32* %401, i64 1, !dbg !17865
  %402 = load i32, i32* %add.ptr1134, align 4, !dbg !17865
  %call1135 = call i32 @__fswab32(i32 %402) #10, !dbg !17865
  br label %cond.end1136, !dbg !17865

cond.end1136:                                     ; preds = %cond.false1133, %cond.true1117
  %cond1137 = phi i32 [ %or1132, %cond.true1117 ], [ %call1135, %cond.false1133 ], !dbg !17865
  %and1138 = and i32 %cond1137, -2, !dbg !17865
  %403 = load i32, i32* %_v1029, align 4, !dbg !17865
  %and1139 = and i32 %403, 1, !dbg !17865
  %shl1140 = shl i32 %and1139, 0, !dbg !17865
  %or1141 = or i32 %and1138, %shl1140, !dbg !17865
  %and1142 = and i32 %or1141, 16711680, !dbg !17865
  %shr1143 = lshr i32 %and1142, 8, !dbg !17865
  %or1144 = or i32 %or1115, %shr1143, !dbg !17865
  %404 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %405 = bitcast i8* %404 to i32*, !dbg !17865
  %add.ptr1145 = getelementptr i32, i32* %405, i64 1, !dbg !17865
  %406 = load i32, i32* %add.ptr1145, align 4, !dbg !17865
  %407 = call i1 @llvm.is.constant.i32(i32 %406), !dbg !17865
  br i1 %407, label %cond.true1146, label %cond.false1162, !dbg !17865

cond.true1146:                                    ; preds = %cond.end1136
  %408 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %409 = bitcast i8* %408 to i32*, !dbg !17865
  %add.ptr1147 = getelementptr i32, i32* %409, i64 1, !dbg !17865
  %410 = load i32, i32* %add.ptr1147, align 4, !dbg !17865
  %and1148 = and i32 %410, 255, !dbg !17865
  %shl1149 = shl i32 %and1148, 24, !dbg !17865
  %411 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %412 = bitcast i8* %411 to i32*, !dbg !17865
  %add.ptr1150 = getelementptr i32, i32* %412, i64 1, !dbg !17865
  %413 = load i32, i32* %add.ptr1150, align 4, !dbg !17865
  %and1151 = and i32 %413, 65280, !dbg !17865
  %shl1152 = shl i32 %and1151, 8, !dbg !17865
  %or1153 = or i32 %shl1149, %shl1152, !dbg !17865
  %414 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %415 = bitcast i8* %414 to i32*, !dbg !17865
  %add.ptr1154 = getelementptr i32, i32* %415, i64 1, !dbg !17865
  %416 = load i32, i32* %add.ptr1154, align 4, !dbg !17865
  %and1155 = and i32 %416, 16711680, !dbg !17865
  %shr1156 = lshr i32 %and1155, 8, !dbg !17865
  %or1157 = or i32 %or1153, %shr1156, !dbg !17865
  %417 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %418 = bitcast i8* %417 to i32*, !dbg !17865
  %add.ptr1158 = getelementptr i32, i32* %418, i64 1, !dbg !17865
  %419 = load i32, i32* %add.ptr1158, align 4, !dbg !17865
  %and1159 = and i32 %419, -16777216, !dbg !17865
  %shr1160 = lshr i32 %and1159, 24, !dbg !17865
  %or1161 = or i32 %or1157, %shr1160, !dbg !17865
  br label %cond.end1165, !dbg !17865

cond.false1162:                                   ; preds = %cond.end1136
  %420 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %421 = bitcast i8* %420 to i32*, !dbg !17865
  %add.ptr1163 = getelementptr i32, i32* %421, i64 1, !dbg !17865
  %422 = load i32, i32* %add.ptr1163, align 4, !dbg !17865
  %call1164 = call i32 @__fswab32(i32 %422) #10, !dbg !17865
  br label %cond.end1165, !dbg !17865

cond.end1165:                                     ; preds = %cond.false1162, %cond.true1146
  %cond1166 = phi i32 [ %or1161, %cond.true1146 ], [ %call1164, %cond.false1162 ], !dbg !17865
  %and1167 = and i32 %cond1166, -2, !dbg !17865
  %423 = load i32, i32* %_v1029, align 4, !dbg !17865
  %and1168 = and i32 %423, 1, !dbg !17865
  %shl1169 = shl i32 %and1168, 0, !dbg !17865
  %or1170 = or i32 %and1167, %shl1169, !dbg !17865
  %and1171 = and i32 %or1170, -16777216, !dbg !17865
  %shr1172 = lshr i32 %and1171, 24, !dbg !17865
  %or1173 = or i32 %or1144, %shr1172, !dbg !17865
  br label %cond.end1202, !dbg !17865

cond.false1174:                                   ; preds = %cond.end1052
  %424 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %425 = bitcast i8* %424 to i32*, !dbg !17865
  %add.ptr1175 = getelementptr i32, i32* %425, i64 1, !dbg !17865
  %426 = load i32, i32* %add.ptr1175, align 4, !dbg !17865
  %427 = call i1 @llvm.is.constant.i32(i32 %426), !dbg !17865
  br i1 %427, label %cond.true1176, label %cond.false1192, !dbg !17865

cond.true1176:                                    ; preds = %cond.false1174
  %428 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %429 = bitcast i8* %428 to i32*, !dbg !17865
  %add.ptr1177 = getelementptr i32, i32* %429, i64 1, !dbg !17865
  %430 = load i32, i32* %add.ptr1177, align 4, !dbg !17865
  %and1178 = and i32 %430, 255, !dbg !17865
  %shl1179 = shl i32 %and1178, 24, !dbg !17865
  %431 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %432 = bitcast i8* %431 to i32*, !dbg !17865
  %add.ptr1180 = getelementptr i32, i32* %432, i64 1, !dbg !17865
  %433 = load i32, i32* %add.ptr1180, align 4, !dbg !17865
  %and1181 = and i32 %433, 65280, !dbg !17865
  %shl1182 = shl i32 %and1181, 8, !dbg !17865
  %or1183 = or i32 %shl1179, %shl1182, !dbg !17865
  %434 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %435 = bitcast i8* %434 to i32*, !dbg !17865
  %add.ptr1184 = getelementptr i32, i32* %435, i64 1, !dbg !17865
  %436 = load i32, i32* %add.ptr1184, align 4, !dbg !17865
  %and1185 = and i32 %436, 16711680, !dbg !17865
  %shr1186 = lshr i32 %and1185, 8, !dbg !17865
  %or1187 = or i32 %or1183, %shr1186, !dbg !17865
  %437 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %438 = bitcast i8* %437 to i32*, !dbg !17865
  %add.ptr1188 = getelementptr i32, i32* %438, i64 1, !dbg !17865
  %439 = load i32, i32* %add.ptr1188, align 4, !dbg !17865
  %and1189 = and i32 %439, -16777216, !dbg !17865
  %shr1190 = lshr i32 %and1189, 24, !dbg !17865
  %or1191 = or i32 %or1187, %shr1190, !dbg !17865
  br label %cond.end1195, !dbg !17865

cond.false1192:                                   ; preds = %cond.false1174
  %440 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %441 = bitcast i8* %440 to i32*, !dbg !17865
  %add.ptr1193 = getelementptr i32, i32* %441, i64 1, !dbg !17865
  %442 = load i32, i32* %add.ptr1193, align 4, !dbg !17865
  %call1194 = call i32 @__fswab32(i32 %442) #10, !dbg !17865
  br label %cond.end1195, !dbg !17865

cond.end1195:                                     ; preds = %cond.false1192, %cond.true1176
  %cond1196 = phi i32 [ %or1191, %cond.true1176 ], [ %call1194, %cond.false1192 ], !dbg !17865
  %and1197 = and i32 %cond1196, -2, !dbg !17865
  %443 = load i32, i32* %_v1029, align 4, !dbg !17865
  %and1198 = and i32 %443, 1, !dbg !17865
  %shl1199 = shl i32 %and1198, 0, !dbg !17865
  %or1200 = or i32 %and1197, %shl1199, !dbg !17865
  %call1201 = call i32 @__fswab32(i32 %or1200) #10, !dbg !17865
  br label %cond.end1202, !dbg !17865

cond.end1202:                                     ; preds = %cond.end1195, %cond.end1165
  %cond1203 = phi i32 [ %or1173, %cond.end1165 ], [ %call1201, %cond.end1195 ], !dbg !17865
  %444 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17865
  %445 = bitcast i8* %444 to i32*, !dbg !17865
  %add.ptr1204 = getelementptr i32, i32* %445, i64 1, !dbg !17865
  store i32 %cond1203, i32* %add.ptr1204, align 4, !dbg !17865
  br label %do.end1205, !dbg !17865

do.end1205:                                       ; preds = %cond.end1202
  br label %if.end, !dbg !17865

if.end:                                           ; preds = %do.end1205, %do.end1026
  %446 = load i32, i32* %events_mask.addr, align 4, !dbg !17868
  %and1206 = and i32 %446, 2, !dbg !17870
  %tobool1207 = icmp ne i32 %and1206, 0, !dbg !17870
  br i1 %tobool1207, label %if.then1208, label %if.end1387, !dbg !17871

if.then1208:                                      ; preds = %if.end
  br label %do.body1209, !dbg !17872

do.body1209:                                      ; preds = %if.then1208
  call void @llvm.dbg.declare(metadata i32* %_v1210, metadata !17873, metadata !DIExpression()), !dbg !17875
  store i32 1, i32* %_v1210, align 4, !dbg !17875
  br label %do.body1211, !dbg !17875

do.body1211:                                      ; preds = %do.body1209
  br label %do.end1212, !dbg !17876

do.end1212:                                       ; preds = %do.body1211
  %447 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %448 = bitcast i8* %447 to i32*, !dbg !17875
  %add.ptr1213 = getelementptr i32, i32* %448, i64 1, !dbg !17875
  %449 = load i32, i32* %add.ptr1213, align 4, !dbg !17875
  %450 = call i1 @llvm.is.constant.i32(i32 %449), !dbg !17875
  br i1 %450, label %cond.true1214, label %cond.false1230, !dbg !17875

cond.true1214:                                    ; preds = %do.end1212
  %451 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %452 = bitcast i8* %451 to i32*, !dbg !17875
  %add.ptr1215 = getelementptr i32, i32* %452, i64 1, !dbg !17875
  %453 = load i32, i32* %add.ptr1215, align 4, !dbg !17875
  %and1216 = and i32 %453, 255, !dbg !17875
  %shl1217 = shl i32 %and1216, 24, !dbg !17875
  %454 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %455 = bitcast i8* %454 to i32*, !dbg !17875
  %add.ptr1218 = getelementptr i32, i32* %455, i64 1, !dbg !17875
  %456 = load i32, i32* %add.ptr1218, align 4, !dbg !17875
  %and1219 = and i32 %456, 65280, !dbg !17875
  %shl1220 = shl i32 %and1219, 8, !dbg !17875
  %or1221 = or i32 %shl1217, %shl1220, !dbg !17875
  %457 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %458 = bitcast i8* %457 to i32*, !dbg !17875
  %add.ptr1222 = getelementptr i32, i32* %458, i64 1, !dbg !17875
  %459 = load i32, i32* %add.ptr1222, align 4, !dbg !17875
  %and1223 = and i32 %459, 16711680, !dbg !17875
  %shr1224 = lshr i32 %and1223, 8, !dbg !17875
  %or1225 = or i32 %or1221, %shr1224, !dbg !17875
  %460 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %461 = bitcast i8* %460 to i32*, !dbg !17875
  %add.ptr1226 = getelementptr i32, i32* %461, i64 1, !dbg !17875
  %462 = load i32, i32* %add.ptr1226, align 4, !dbg !17875
  %and1227 = and i32 %462, -16777216, !dbg !17875
  %shr1228 = lshr i32 %and1227, 24, !dbg !17875
  %or1229 = or i32 %or1225, %shr1228, !dbg !17875
  br label %cond.end1233, !dbg !17875

cond.false1230:                                   ; preds = %do.end1212
  %463 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %464 = bitcast i8* %463 to i32*, !dbg !17875
  %add.ptr1231 = getelementptr i32, i32* %464, i64 1, !dbg !17875
  %465 = load i32, i32* %add.ptr1231, align 4, !dbg !17875
  %call1232 = call i32 @__fswab32(i32 %465) #10, !dbg !17875
  br label %cond.end1233, !dbg !17875

cond.end1233:                                     ; preds = %cond.false1230, %cond.true1214
  %cond1234 = phi i32 [ %or1229, %cond.true1214 ], [ %call1232, %cond.false1230 ], !dbg !17875
  %and1235 = and i32 %cond1234, -3, !dbg !17875
  %466 = load i32, i32* %_v1210, align 4, !dbg !17875
  %and1236 = and i32 %466, 1, !dbg !17875
  %shl1237 = shl i32 %and1236, 1, !dbg !17875
  %or1238 = or i32 %and1235, %shl1237, !dbg !17875
  %467 = call i1 @llvm.is.constant.i32(i32 %or1238), !dbg !17875
  br i1 %467, label %cond.true1239, label %cond.false1355, !dbg !17875

cond.true1239:                                    ; preds = %cond.end1233
  %468 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %469 = bitcast i8* %468 to i32*, !dbg !17875
  %add.ptr1240 = getelementptr i32, i32* %469, i64 1, !dbg !17875
  %470 = load i32, i32* %add.ptr1240, align 4, !dbg !17875
  %471 = call i1 @llvm.is.constant.i32(i32 %470), !dbg !17875
  br i1 %471, label %cond.true1241, label %cond.false1257, !dbg !17875

cond.true1241:                                    ; preds = %cond.true1239
  %472 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %473 = bitcast i8* %472 to i32*, !dbg !17875
  %add.ptr1242 = getelementptr i32, i32* %473, i64 1, !dbg !17875
  %474 = load i32, i32* %add.ptr1242, align 4, !dbg !17875
  %and1243 = and i32 %474, 255, !dbg !17875
  %shl1244 = shl i32 %and1243, 24, !dbg !17875
  %475 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %476 = bitcast i8* %475 to i32*, !dbg !17875
  %add.ptr1245 = getelementptr i32, i32* %476, i64 1, !dbg !17875
  %477 = load i32, i32* %add.ptr1245, align 4, !dbg !17875
  %and1246 = and i32 %477, 65280, !dbg !17875
  %shl1247 = shl i32 %and1246, 8, !dbg !17875
  %or1248 = or i32 %shl1244, %shl1247, !dbg !17875
  %478 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %479 = bitcast i8* %478 to i32*, !dbg !17875
  %add.ptr1249 = getelementptr i32, i32* %479, i64 1, !dbg !17875
  %480 = load i32, i32* %add.ptr1249, align 4, !dbg !17875
  %and1250 = and i32 %480, 16711680, !dbg !17875
  %shr1251 = lshr i32 %and1250, 8, !dbg !17875
  %or1252 = or i32 %or1248, %shr1251, !dbg !17875
  %481 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %482 = bitcast i8* %481 to i32*, !dbg !17875
  %add.ptr1253 = getelementptr i32, i32* %482, i64 1, !dbg !17875
  %483 = load i32, i32* %add.ptr1253, align 4, !dbg !17875
  %and1254 = and i32 %483, -16777216, !dbg !17875
  %shr1255 = lshr i32 %and1254, 24, !dbg !17875
  %or1256 = or i32 %or1252, %shr1255, !dbg !17875
  br label %cond.end1260, !dbg !17875

cond.false1257:                                   ; preds = %cond.true1239
  %484 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %485 = bitcast i8* %484 to i32*, !dbg !17875
  %add.ptr1258 = getelementptr i32, i32* %485, i64 1, !dbg !17875
  %486 = load i32, i32* %add.ptr1258, align 4, !dbg !17875
  %call1259 = call i32 @__fswab32(i32 %486) #10, !dbg !17875
  br label %cond.end1260, !dbg !17875

cond.end1260:                                     ; preds = %cond.false1257, %cond.true1241
  %cond1261 = phi i32 [ %or1256, %cond.true1241 ], [ %call1259, %cond.false1257 ], !dbg !17875
  %and1262 = and i32 %cond1261, -3, !dbg !17875
  %487 = load i32, i32* %_v1210, align 4, !dbg !17875
  %and1263 = and i32 %487, 1, !dbg !17875
  %shl1264 = shl i32 %and1263, 1, !dbg !17875
  %or1265 = or i32 %and1262, %shl1264, !dbg !17875
  %and1266 = and i32 %or1265, 255, !dbg !17875
  %shl1267 = shl i32 %and1266, 24, !dbg !17875
  %488 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %489 = bitcast i8* %488 to i32*, !dbg !17875
  %add.ptr1268 = getelementptr i32, i32* %489, i64 1, !dbg !17875
  %490 = load i32, i32* %add.ptr1268, align 4, !dbg !17875
  %491 = call i1 @llvm.is.constant.i32(i32 %490), !dbg !17875
  br i1 %491, label %cond.true1269, label %cond.false1285, !dbg !17875

cond.true1269:                                    ; preds = %cond.end1260
  %492 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %493 = bitcast i8* %492 to i32*, !dbg !17875
  %add.ptr1270 = getelementptr i32, i32* %493, i64 1, !dbg !17875
  %494 = load i32, i32* %add.ptr1270, align 4, !dbg !17875
  %and1271 = and i32 %494, 255, !dbg !17875
  %shl1272 = shl i32 %and1271, 24, !dbg !17875
  %495 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %496 = bitcast i8* %495 to i32*, !dbg !17875
  %add.ptr1273 = getelementptr i32, i32* %496, i64 1, !dbg !17875
  %497 = load i32, i32* %add.ptr1273, align 4, !dbg !17875
  %and1274 = and i32 %497, 65280, !dbg !17875
  %shl1275 = shl i32 %and1274, 8, !dbg !17875
  %or1276 = or i32 %shl1272, %shl1275, !dbg !17875
  %498 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %499 = bitcast i8* %498 to i32*, !dbg !17875
  %add.ptr1277 = getelementptr i32, i32* %499, i64 1, !dbg !17875
  %500 = load i32, i32* %add.ptr1277, align 4, !dbg !17875
  %and1278 = and i32 %500, 16711680, !dbg !17875
  %shr1279 = lshr i32 %and1278, 8, !dbg !17875
  %or1280 = or i32 %or1276, %shr1279, !dbg !17875
  %501 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %502 = bitcast i8* %501 to i32*, !dbg !17875
  %add.ptr1281 = getelementptr i32, i32* %502, i64 1, !dbg !17875
  %503 = load i32, i32* %add.ptr1281, align 4, !dbg !17875
  %and1282 = and i32 %503, -16777216, !dbg !17875
  %shr1283 = lshr i32 %and1282, 24, !dbg !17875
  %or1284 = or i32 %or1280, %shr1283, !dbg !17875
  br label %cond.end1288, !dbg !17875

cond.false1285:                                   ; preds = %cond.end1260
  %504 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %505 = bitcast i8* %504 to i32*, !dbg !17875
  %add.ptr1286 = getelementptr i32, i32* %505, i64 1, !dbg !17875
  %506 = load i32, i32* %add.ptr1286, align 4, !dbg !17875
  %call1287 = call i32 @__fswab32(i32 %506) #10, !dbg !17875
  br label %cond.end1288, !dbg !17875

cond.end1288:                                     ; preds = %cond.false1285, %cond.true1269
  %cond1289 = phi i32 [ %or1284, %cond.true1269 ], [ %call1287, %cond.false1285 ], !dbg !17875
  %and1290 = and i32 %cond1289, -3, !dbg !17875
  %507 = load i32, i32* %_v1210, align 4, !dbg !17875
  %and1291 = and i32 %507, 1, !dbg !17875
  %shl1292 = shl i32 %and1291, 1, !dbg !17875
  %or1293 = or i32 %and1290, %shl1292, !dbg !17875
  %and1294 = and i32 %or1293, 65280, !dbg !17875
  %shl1295 = shl i32 %and1294, 8, !dbg !17875
  %or1296 = or i32 %shl1267, %shl1295, !dbg !17875
  %508 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %509 = bitcast i8* %508 to i32*, !dbg !17875
  %add.ptr1297 = getelementptr i32, i32* %509, i64 1, !dbg !17875
  %510 = load i32, i32* %add.ptr1297, align 4, !dbg !17875
  %511 = call i1 @llvm.is.constant.i32(i32 %510), !dbg !17875
  br i1 %511, label %cond.true1298, label %cond.false1314, !dbg !17875

cond.true1298:                                    ; preds = %cond.end1288
  %512 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %513 = bitcast i8* %512 to i32*, !dbg !17875
  %add.ptr1299 = getelementptr i32, i32* %513, i64 1, !dbg !17875
  %514 = load i32, i32* %add.ptr1299, align 4, !dbg !17875
  %and1300 = and i32 %514, 255, !dbg !17875
  %shl1301 = shl i32 %and1300, 24, !dbg !17875
  %515 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %516 = bitcast i8* %515 to i32*, !dbg !17875
  %add.ptr1302 = getelementptr i32, i32* %516, i64 1, !dbg !17875
  %517 = load i32, i32* %add.ptr1302, align 4, !dbg !17875
  %and1303 = and i32 %517, 65280, !dbg !17875
  %shl1304 = shl i32 %and1303, 8, !dbg !17875
  %or1305 = or i32 %shl1301, %shl1304, !dbg !17875
  %518 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %519 = bitcast i8* %518 to i32*, !dbg !17875
  %add.ptr1306 = getelementptr i32, i32* %519, i64 1, !dbg !17875
  %520 = load i32, i32* %add.ptr1306, align 4, !dbg !17875
  %and1307 = and i32 %520, 16711680, !dbg !17875
  %shr1308 = lshr i32 %and1307, 8, !dbg !17875
  %or1309 = or i32 %or1305, %shr1308, !dbg !17875
  %521 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %522 = bitcast i8* %521 to i32*, !dbg !17875
  %add.ptr1310 = getelementptr i32, i32* %522, i64 1, !dbg !17875
  %523 = load i32, i32* %add.ptr1310, align 4, !dbg !17875
  %and1311 = and i32 %523, -16777216, !dbg !17875
  %shr1312 = lshr i32 %and1311, 24, !dbg !17875
  %or1313 = or i32 %or1309, %shr1312, !dbg !17875
  br label %cond.end1317, !dbg !17875

cond.false1314:                                   ; preds = %cond.end1288
  %524 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %525 = bitcast i8* %524 to i32*, !dbg !17875
  %add.ptr1315 = getelementptr i32, i32* %525, i64 1, !dbg !17875
  %526 = load i32, i32* %add.ptr1315, align 4, !dbg !17875
  %call1316 = call i32 @__fswab32(i32 %526) #10, !dbg !17875
  br label %cond.end1317, !dbg !17875

cond.end1317:                                     ; preds = %cond.false1314, %cond.true1298
  %cond1318 = phi i32 [ %or1313, %cond.true1298 ], [ %call1316, %cond.false1314 ], !dbg !17875
  %and1319 = and i32 %cond1318, -3, !dbg !17875
  %527 = load i32, i32* %_v1210, align 4, !dbg !17875
  %and1320 = and i32 %527, 1, !dbg !17875
  %shl1321 = shl i32 %and1320, 1, !dbg !17875
  %or1322 = or i32 %and1319, %shl1321, !dbg !17875
  %and1323 = and i32 %or1322, 16711680, !dbg !17875
  %shr1324 = lshr i32 %and1323, 8, !dbg !17875
  %or1325 = or i32 %or1296, %shr1324, !dbg !17875
  %528 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %529 = bitcast i8* %528 to i32*, !dbg !17875
  %add.ptr1326 = getelementptr i32, i32* %529, i64 1, !dbg !17875
  %530 = load i32, i32* %add.ptr1326, align 4, !dbg !17875
  %531 = call i1 @llvm.is.constant.i32(i32 %530), !dbg !17875
  br i1 %531, label %cond.true1327, label %cond.false1343, !dbg !17875

cond.true1327:                                    ; preds = %cond.end1317
  %532 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %533 = bitcast i8* %532 to i32*, !dbg !17875
  %add.ptr1328 = getelementptr i32, i32* %533, i64 1, !dbg !17875
  %534 = load i32, i32* %add.ptr1328, align 4, !dbg !17875
  %and1329 = and i32 %534, 255, !dbg !17875
  %shl1330 = shl i32 %and1329, 24, !dbg !17875
  %535 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %536 = bitcast i8* %535 to i32*, !dbg !17875
  %add.ptr1331 = getelementptr i32, i32* %536, i64 1, !dbg !17875
  %537 = load i32, i32* %add.ptr1331, align 4, !dbg !17875
  %and1332 = and i32 %537, 65280, !dbg !17875
  %shl1333 = shl i32 %and1332, 8, !dbg !17875
  %or1334 = or i32 %shl1330, %shl1333, !dbg !17875
  %538 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %539 = bitcast i8* %538 to i32*, !dbg !17875
  %add.ptr1335 = getelementptr i32, i32* %539, i64 1, !dbg !17875
  %540 = load i32, i32* %add.ptr1335, align 4, !dbg !17875
  %and1336 = and i32 %540, 16711680, !dbg !17875
  %shr1337 = lshr i32 %and1336, 8, !dbg !17875
  %or1338 = or i32 %or1334, %shr1337, !dbg !17875
  %541 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %542 = bitcast i8* %541 to i32*, !dbg !17875
  %add.ptr1339 = getelementptr i32, i32* %542, i64 1, !dbg !17875
  %543 = load i32, i32* %add.ptr1339, align 4, !dbg !17875
  %and1340 = and i32 %543, -16777216, !dbg !17875
  %shr1341 = lshr i32 %and1340, 24, !dbg !17875
  %or1342 = or i32 %or1338, %shr1341, !dbg !17875
  br label %cond.end1346, !dbg !17875

cond.false1343:                                   ; preds = %cond.end1317
  %544 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %545 = bitcast i8* %544 to i32*, !dbg !17875
  %add.ptr1344 = getelementptr i32, i32* %545, i64 1, !dbg !17875
  %546 = load i32, i32* %add.ptr1344, align 4, !dbg !17875
  %call1345 = call i32 @__fswab32(i32 %546) #10, !dbg !17875
  br label %cond.end1346, !dbg !17875

cond.end1346:                                     ; preds = %cond.false1343, %cond.true1327
  %cond1347 = phi i32 [ %or1342, %cond.true1327 ], [ %call1345, %cond.false1343 ], !dbg !17875
  %and1348 = and i32 %cond1347, -3, !dbg !17875
  %547 = load i32, i32* %_v1210, align 4, !dbg !17875
  %and1349 = and i32 %547, 1, !dbg !17875
  %shl1350 = shl i32 %and1349, 1, !dbg !17875
  %or1351 = or i32 %and1348, %shl1350, !dbg !17875
  %and1352 = and i32 %or1351, -16777216, !dbg !17875
  %shr1353 = lshr i32 %and1352, 24, !dbg !17875
  %or1354 = or i32 %or1325, %shr1353, !dbg !17875
  br label %cond.end1383, !dbg !17875

cond.false1355:                                   ; preds = %cond.end1233
  %548 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %549 = bitcast i8* %548 to i32*, !dbg !17875
  %add.ptr1356 = getelementptr i32, i32* %549, i64 1, !dbg !17875
  %550 = load i32, i32* %add.ptr1356, align 4, !dbg !17875
  %551 = call i1 @llvm.is.constant.i32(i32 %550), !dbg !17875
  br i1 %551, label %cond.true1357, label %cond.false1373, !dbg !17875

cond.true1357:                                    ; preds = %cond.false1355
  %552 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %553 = bitcast i8* %552 to i32*, !dbg !17875
  %add.ptr1358 = getelementptr i32, i32* %553, i64 1, !dbg !17875
  %554 = load i32, i32* %add.ptr1358, align 4, !dbg !17875
  %and1359 = and i32 %554, 255, !dbg !17875
  %shl1360 = shl i32 %and1359, 24, !dbg !17875
  %555 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %556 = bitcast i8* %555 to i32*, !dbg !17875
  %add.ptr1361 = getelementptr i32, i32* %556, i64 1, !dbg !17875
  %557 = load i32, i32* %add.ptr1361, align 4, !dbg !17875
  %and1362 = and i32 %557, 65280, !dbg !17875
  %shl1363 = shl i32 %and1362, 8, !dbg !17875
  %or1364 = or i32 %shl1360, %shl1363, !dbg !17875
  %558 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %559 = bitcast i8* %558 to i32*, !dbg !17875
  %add.ptr1365 = getelementptr i32, i32* %559, i64 1, !dbg !17875
  %560 = load i32, i32* %add.ptr1365, align 4, !dbg !17875
  %and1366 = and i32 %560, 16711680, !dbg !17875
  %shr1367 = lshr i32 %and1366, 8, !dbg !17875
  %or1368 = or i32 %or1364, %shr1367, !dbg !17875
  %561 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %562 = bitcast i8* %561 to i32*, !dbg !17875
  %add.ptr1369 = getelementptr i32, i32* %562, i64 1, !dbg !17875
  %563 = load i32, i32* %add.ptr1369, align 4, !dbg !17875
  %and1370 = and i32 %563, -16777216, !dbg !17875
  %shr1371 = lshr i32 %and1370, 24, !dbg !17875
  %or1372 = or i32 %or1368, %shr1371, !dbg !17875
  br label %cond.end1376, !dbg !17875

cond.false1373:                                   ; preds = %cond.false1355
  %564 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %565 = bitcast i8* %564 to i32*, !dbg !17875
  %add.ptr1374 = getelementptr i32, i32* %565, i64 1, !dbg !17875
  %566 = load i32, i32* %add.ptr1374, align 4, !dbg !17875
  %call1375 = call i32 @__fswab32(i32 %566) #10, !dbg !17875
  br label %cond.end1376, !dbg !17875

cond.end1376:                                     ; preds = %cond.false1373, %cond.true1357
  %cond1377 = phi i32 [ %or1372, %cond.true1357 ], [ %call1375, %cond.false1373 ], !dbg !17875
  %and1378 = and i32 %cond1377, -3, !dbg !17875
  %567 = load i32, i32* %_v1210, align 4, !dbg !17875
  %and1379 = and i32 %567, 1, !dbg !17875
  %shl1380 = shl i32 %and1379, 1, !dbg !17875
  %or1381 = or i32 %and1378, %shl1380, !dbg !17875
  %call1382 = call i32 @__fswab32(i32 %or1381) #10, !dbg !17875
  br label %cond.end1383, !dbg !17875

cond.end1383:                                     ; preds = %cond.end1376, %cond.end1346
  %cond1384 = phi i32 [ %or1354, %cond.end1346 ], [ %call1382, %cond.end1376 ], !dbg !17875
  %568 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17875
  %569 = bitcast i8* %568 to i32*, !dbg !17875
  %add.ptr1385 = getelementptr i32, i32* %569, i64 1, !dbg !17875
  store i32 %cond1384, i32* %add.ptr1385, align 4, !dbg !17875
  br label %do.end1386, !dbg !17875

do.end1386:                                       ; preds = %cond.end1383
  br label %if.end1387, !dbg !17875

if.end1387:                                       ; preds = %do.end1386, %if.end
  %570 = load i32, i32* %events_mask.addr, align 4, !dbg !17878
  %and1388 = and i32 %570, 8, !dbg !17880
  %tobool1389 = icmp ne i32 %and1388, 0, !dbg !17880
  br i1 %tobool1389, label %if.then1390, label %if.end1569, !dbg !17881

if.then1390:                                      ; preds = %if.end1387
  br label %do.body1391, !dbg !17882

do.body1391:                                      ; preds = %if.then1390
  call void @llvm.dbg.declare(metadata i32* %_v1392, metadata !17883, metadata !DIExpression()), !dbg !17885
  store i32 1, i32* %_v1392, align 4, !dbg !17885
  br label %do.body1393, !dbg !17885

do.body1393:                                      ; preds = %do.body1391
  br label %do.end1394, !dbg !17886

do.end1394:                                       ; preds = %do.body1393
  %571 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %572 = bitcast i8* %571 to i32*, !dbg !17885
  %add.ptr1395 = getelementptr i32, i32* %572, i64 1, !dbg !17885
  %573 = load i32, i32* %add.ptr1395, align 4, !dbg !17885
  %574 = call i1 @llvm.is.constant.i32(i32 %573), !dbg !17885
  br i1 %574, label %cond.true1396, label %cond.false1412, !dbg !17885

cond.true1396:                                    ; preds = %do.end1394
  %575 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %576 = bitcast i8* %575 to i32*, !dbg !17885
  %add.ptr1397 = getelementptr i32, i32* %576, i64 1, !dbg !17885
  %577 = load i32, i32* %add.ptr1397, align 4, !dbg !17885
  %and1398 = and i32 %577, 255, !dbg !17885
  %shl1399 = shl i32 %and1398, 24, !dbg !17885
  %578 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %579 = bitcast i8* %578 to i32*, !dbg !17885
  %add.ptr1400 = getelementptr i32, i32* %579, i64 1, !dbg !17885
  %580 = load i32, i32* %add.ptr1400, align 4, !dbg !17885
  %and1401 = and i32 %580, 65280, !dbg !17885
  %shl1402 = shl i32 %and1401, 8, !dbg !17885
  %or1403 = or i32 %shl1399, %shl1402, !dbg !17885
  %581 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %582 = bitcast i8* %581 to i32*, !dbg !17885
  %add.ptr1404 = getelementptr i32, i32* %582, i64 1, !dbg !17885
  %583 = load i32, i32* %add.ptr1404, align 4, !dbg !17885
  %and1405 = and i32 %583, 16711680, !dbg !17885
  %shr1406 = lshr i32 %and1405, 8, !dbg !17885
  %or1407 = or i32 %or1403, %shr1406, !dbg !17885
  %584 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %585 = bitcast i8* %584 to i32*, !dbg !17885
  %add.ptr1408 = getelementptr i32, i32* %585, i64 1, !dbg !17885
  %586 = load i32, i32* %add.ptr1408, align 4, !dbg !17885
  %and1409 = and i32 %586, -16777216, !dbg !17885
  %shr1410 = lshr i32 %and1409, 24, !dbg !17885
  %or1411 = or i32 %or1407, %shr1410, !dbg !17885
  br label %cond.end1415, !dbg !17885

cond.false1412:                                   ; preds = %do.end1394
  %587 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %588 = bitcast i8* %587 to i32*, !dbg !17885
  %add.ptr1413 = getelementptr i32, i32* %588, i64 1, !dbg !17885
  %589 = load i32, i32* %add.ptr1413, align 4, !dbg !17885
  %call1414 = call i32 @__fswab32(i32 %589) #10, !dbg !17885
  br label %cond.end1415, !dbg !17885

cond.end1415:                                     ; preds = %cond.false1412, %cond.true1396
  %cond1416 = phi i32 [ %or1411, %cond.true1396 ], [ %call1414, %cond.false1412 ], !dbg !17885
  %and1417 = and i32 %cond1416, -9, !dbg !17885
  %590 = load i32, i32* %_v1392, align 4, !dbg !17885
  %and1418 = and i32 %590, 1, !dbg !17885
  %shl1419 = shl i32 %and1418, 3, !dbg !17885
  %or1420 = or i32 %and1417, %shl1419, !dbg !17885
  %591 = call i1 @llvm.is.constant.i32(i32 %or1420), !dbg !17885
  br i1 %591, label %cond.true1421, label %cond.false1537, !dbg !17885

cond.true1421:                                    ; preds = %cond.end1415
  %592 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %593 = bitcast i8* %592 to i32*, !dbg !17885
  %add.ptr1422 = getelementptr i32, i32* %593, i64 1, !dbg !17885
  %594 = load i32, i32* %add.ptr1422, align 4, !dbg !17885
  %595 = call i1 @llvm.is.constant.i32(i32 %594), !dbg !17885
  br i1 %595, label %cond.true1423, label %cond.false1439, !dbg !17885

cond.true1423:                                    ; preds = %cond.true1421
  %596 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %597 = bitcast i8* %596 to i32*, !dbg !17885
  %add.ptr1424 = getelementptr i32, i32* %597, i64 1, !dbg !17885
  %598 = load i32, i32* %add.ptr1424, align 4, !dbg !17885
  %and1425 = and i32 %598, 255, !dbg !17885
  %shl1426 = shl i32 %and1425, 24, !dbg !17885
  %599 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %600 = bitcast i8* %599 to i32*, !dbg !17885
  %add.ptr1427 = getelementptr i32, i32* %600, i64 1, !dbg !17885
  %601 = load i32, i32* %add.ptr1427, align 4, !dbg !17885
  %and1428 = and i32 %601, 65280, !dbg !17885
  %shl1429 = shl i32 %and1428, 8, !dbg !17885
  %or1430 = or i32 %shl1426, %shl1429, !dbg !17885
  %602 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %603 = bitcast i8* %602 to i32*, !dbg !17885
  %add.ptr1431 = getelementptr i32, i32* %603, i64 1, !dbg !17885
  %604 = load i32, i32* %add.ptr1431, align 4, !dbg !17885
  %and1432 = and i32 %604, 16711680, !dbg !17885
  %shr1433 = lshr i32 %and1432, 8, !dbg !17885
  %or1434 = or i32 %or1430, %shr1433, !dbg !17885
  %605 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %606 = bitcast i8* %605 to i32*, !dbg !17885
  %add.ptr1435 = getelementptr i32, i32* %606, i64 1, !dbg !17885
  %607 = load i32, i32* %add.ptr1435, align 4, !dbg !17885
  %and1436 = and i32 %607, -16777216, !dbg !17885
  %shr1437 = lshr i32 %and1436, 24, !dbg !17885
  %or1438 = or i32 %or1434, %shr1437, !dbg !17885
  br label %cond.end1442, !dbg !17885

cond.false1439:                                   ; preds = %cond.true1421
  %608 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %609 = bitcast i8* %608 to i32*, !dbg !17885
  %add.ptr1440 = getelementptr i32, i32* %609, i64 1, !dbg !17885
  %610 = load i32, i32* %add.ptr1440, align 4, !dbg !17885
  %call1441 = call i32 @__fswab32(i32 %610) #10, !dbg !17885
  br label %cond.end1442, !dbg !17885

cond.end1442:                                     ; preds = %cond.false1439, %cond.true1423
  %cond1443 = phi i32 [ %or1438, %cond.true1423 ], [ %call1441, %cond.false1439 ], !dbg !17885
  %and1444 = and i32 %cond1443, -9, !dbg !17885
  %611 = load i32, i32* %_v1392, align 4, !dbg !17885
  %and1445 = and i32 %611, 1, !dbg !17885
  %shl1446 = shl i32 %and1445, 3, !dbg !17885
  %or1447 = or i32 %and1444, %shl1446, !dbg !17885
  %and1448 = and i32 %or1447, 255, !dbg !17885
  %shl1449 = shl i32 %and1448, 24, !dbg !17885
  %612 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %613 = bitcast i8* %612 to i32*, !dbg !17885
  %add.ptr1450 = getelementptr i32, i32* %613, i64 1, !dbg !17885
  %614 = load i32, i32* %add.ptr1450, align 4, !dbg !17885
  %615 = call i1 @llvm.is.constant.i32(i32 %614), !dbg !17885
  br i1 %615, label %cond.true1451, label %cond.false1467, !dbg !17885

cond.true1451:                                    ; preds = %cond.end1442
  %616 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %617 = bitcast i8* %616 to i32*, !dbg !17885
  %add.ptr1452 = getelementptr i32, i32* %617, i64 1, !dbg !17885
  %618 = load i32, i32* %add.ptr1452, align 4, !dbg !17885
  %and1453 = and i32 %618, 255, !dbg !17885
  %shl1454 = shl i32 %and1453, 24, !dbg !17885
  %619 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %620 = bitcast i8* %619 to i32*, !dbg !17885
  %add.ptr1455 = getelementptr i32, i32* %620, i64 1, !dbg !17885
  %621 = load i32, i32* %add.ptr1455, align 4, !dbg !17885
  %and1456 = and i32 %621, 65280, !dbg !17885
  %shl1457 = shl i32 %and1456, 8, !dbg !17885
  %or1458 = or i32 %shl1454, %shl1457, !dbg !17885
  %622 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %623 = bitcast i8* %622 to i32*, !dbg !17885
  %add.ptr1459 = getelementptr i32, i32* %623, i64 1, !dbg !17885
  %624 = load i32, i32* %add.ptr1459, align 4, !dbg !17885
  %and1460 = and i32 %624, 16711680, !dbg !17885
  %shr1461 = lshr i32 %and1460, 8, !dbg !17885
  %or1462 = or i32 %or1458, %shr1461, !dbg !17885
  %625 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %626 = bitcast i8* %625 to i32*, !dbg !17885
  %add.ptr1463 = getelementptr i32, i32* %626, i64 1, !dbg !17885
  %627 = load i32, i32* %add.ptr1463, align 4, !dbg !17885
  %and1464 = and i32 %627, -16777216, !dbg !17885
  %shr1465 = lshr i32 %and1464, 24, !dbg !17885
  %or1466 = or i32 %or1462, %shr1465, !dbg !17885
  br label %cond.end1470, !dbg !17885

cond.false1467:                                   ; preds = %cond.end1442
  %628 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %629 = bitcast i8* %628 to i32*, !dbg !17885
  %add.ptr1468 = getelementptr i32, i32* %629, i64 1, !dbg !17885
  %630 = load i32, i32* %add.ptr1468, align 4, !dbg !17885
  %call1469 = call i32 @__fswab32(i32 %630) #10, !dbg !17885
  br label %cond.end1470, !dbg !17885

cond.end1470:                                     ; preds = %cond.false1467, %cond.true1451
  %cond1471 = phi i32 [ %or1466, %cond.true1451 ], [ %call1469, %cond.false1467 ], !dbg !17885
  %and1472 = and i32 %cond1471, -9, !dbg !17885
  %631 = load i32, i32* %_v1392, align 4, !dbg !17885
  %and1473 = and i32 %631, 1, !dbg !17885
  %shl1474 = shl i32 %and1473, 3, !dbg !17885
  %or1475 = or i32 %and1472, %shl1474, !dbg !17885
  %and1476 = and i32 %or1475, 65280, !dbg !17885
  %shl1477 = shl i32 %and1476, 8, !dbg !17885
  %or1478 = or i32 %shl1449, %shl1477, !dbg !17885
  %632 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %633 = bitcast i8* %632 to i32*, !dbg !17885
  %add.ptr1479 = getelementptr i32, i32* %633, i64 1, !dbg !17885
  %634 = load i32, i32* %add.ptr1479, align 4, !dbg !17885
  %635 = call i1 @llvm.is.constant.i32(i32 %634), !dbg !17885
  br i1 %635, label %cond.true1480, label %cond.false1496, !dbg !17885

cond.true1480:                                    ; preds = %cond.end1470
  %636 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %637 = bitcast i8* %636 to i32*, !dbg !17885
  %add.ptr1481 = getelementptr i32, i32* %637, i64 1, !dbg !17885
  %638 = load i32, i32* %add.ptr1481, align 4, !dbg !17885
  %and1482 = and i32 %638, 255, !dbg !17885
  %shl1483 = shl i32 %and1482, 24, !dbg !17885
  %639 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %640 = bitcast i8* %639 to i32*, !dbg !17885
  %add.ptr1484 = getelementptr i32, i32* %640, i64 1, !dbg !17885
  %641 = load i32, i32* %add.ptr1484, align 4, !dbg !17885
  %and1485 = and i32 %641, 65280, !dbg !17885
  %shl1486 = shl i32 %and1485, 8, !dbg !17885
  %or1487 = or i32 %shl1483, %shl1486, !dbg !17885
  %642 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %643 = bitcast i8* %642 to i32*, !dbg !17885
  %add.ptr1488 = getelementptr i32, i32* %643, i64 1, !dbg !17885
  %644 = load i32, i32* %add.ptr1488, align 4, !dbg !17885
  %and1489 = and i32 %644, 16711680, !dbg !17885
  %shr1490 = lshr i32 %and1489, 8, !dbg !17885
  %or1491 = or i32 %or1487, %shr1490, !dbg !17885
  %645 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %646 = bitcast i8* %645 to i32*, !dbg !17885
  %add.ptr1492 = getelementptr i32, i32* %646, i64 1, !dbg !17885
  %647 = load i32, i32* %add.ptr1492, align 4, !dbg !17885
  %and1493 = and i32 %647, -16777216, !dbg !17885
  %shr1494 = lshr i32 %and1493, 24, !dbg !17885
  %or1495 = or i32 %or1491, %shr1494, !dbg !17885
  br label %cond.end1499, !dbg !17885

cond.false1496:                                   ; preds = %cond.end1470
  %648 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %649 = bitcast i8* %648 to i32*, !dbg !17885
  %add.ptr1497 = getelementptr i32, i32* %649, i64 1, !dbg !17885
  %650 = load i32, i32* %add.ptr1497, align 4, !dbg !17885
  %call1498 = call i32 @__fswab32(i32 %650) #10, !dbg !17885
  br label %cond.end1499, !dbg !17885

cond.end1499:                                     ; preds = %cond.false1496, %cond.true1480
  %cond1500 = phi i32 [ %or1495, %cond.true1480 ], [ %call1498, %cond.false1496 ], !dbg !17885
  %and1501 = and i32 %cond1500, -9, !dbg !17885
  %651 = load i32, i32* %_v1392, align 4, !dbg !17885
  %and1502 = and i32 %651, 1, !dbg !17885
  %shl1503 = shl i32 %and1502, 3, !dbg !17885
  %or1504 = or i32 %and1501, %shl1503, !dbg !17885
  %and1505 = and i32 %or1504, 16711680, !dbg !17885
  %shr1506 = lshr i32 %and1505, 8, !dbg !17885
  %or1507 = or i32 %or1478, %shr1506, !dbg !17885
  %652 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %653 = bitcast i8* %652 to i32*, !dbg !17885
  %add.ptr1508 = getelementptr i32, i32* %653, i64 1, !dbg !17885
  %654 = load i32, i32* %add.ptr1508, align 4, !dbg !17885
  %655 = call i1 @llvm.is.constant.i32(i32 %654), !dbg !17885
  br i1 %655, label %cond.true1509, label %cond.false1525, !dbg !17885

cond.true1509:                                    ; preds = %cond.end1499
  %656 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %657 = bitcast i8* %656 to i32*, !dbg !17885
  %add.ptr1510 = getelementptr i32, i32* %657, i64 1, !dbg !17885
  %658 = load i32, i32* %add.ptr1510, align 4, !dbg !17885
  %and1511 = and i32 %658, 255, !dbg !17885
  %shl1512 = shl i32 %and1511, 24, !dbg !17885
  %659 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %660 = bitcast i8* %659 to i32*, !dbg !17885
  %add.ptr1513 = getelementptr i32, i32* %660, i64 1, !dbg !17885
  %661 = load i32, i32* %add.ptr1513, align 4, !dbg !17885
  %and1514 = and i32 %661, 65280, !dbg !17885
  %shl1515 = shl i32 %and1514, 8, !dbg !17885
  %or1516 = or i32 %shl1512, %shl1515, !dbg !17885
  %662 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %663 = bitcast i8* %662 to i32*, !dbg !17885
  %add.ptr1517 = getelementptr i32, i32* %663, i64 1, !dbg !17885
  %664 = load i32, i32* %add.ptr1517, align 4, !dbg !17885
  %and1518 = and i32 %664, 16711680, !dbg !17885
  %shr1519 = lshr i32 %and1518, 8, !dbg !17885
  %or1520 = or i32 %or1516, %shr1519, !dbg !17885
  %665 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %666 = bitcast i8* %665 to i32*, !dbg !17885
  %add.ptr1521 = getelementptr i32, i32* %666, i64 1, !dbg !17885
  %667 = load i32, i32* %add.ptr1521, align 4, !dbg !17885
  %and1522 = and i32 %667, -16777216, !dbg !17885
  %shr1523 = lshr i32 %and1522, 24, !dbg !17885
  %or1524 = or i32 %or1520, %shr1523, !dbg !17885
  br label %cond.end1528, !dbg !17885

cond.false1525:                                   ; preds = %cond.end1499
  %668 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %669 = bitcast i8* %668 to i32*, !dbg !17885
  %add.ptr1526 = getelementptr i32, i32* %669, i64 1, !dbg !17885
  %670 = load i32, i32* %add.ptr1526, align 4, !dbg !17885
  %call1527 = call i32 @__fswab32(i32 %670) #10, !dbg !17885
  br label %cond.end1528, !dbg !17885

cond.end1528:                                     ; preds = %cond.false1525, %cond.true1509
  %cond1529 = phi i32 [ %or1524, %cond.true1509 ], [ %call1527, %cond.false1525 ], !dbg !17885
  %and1530 = and i32 %cond1529, -9, !dbg !17885
  %671 = load i32, i32* %_v1392, align 4, !dbg !17885
  %and1531 = and i32 %671, 1, !dbg !17885
  %shl1532 = shl i32 %and1531, 3, !dbg !17885
  %or1533 = or i32 %and1530, %shl1532, !dbg !17885
  %and1534 = and i32 %or1533, -16777216, !dbg !17885
  %shr1535 = lshr i32 %and1534, 24, !dbg !17885
  %or1536 = or i32 %or1507, %shr1535, !dbg !17885
  br label %cond.end1565, !dbg !17885

cond.false1537:                                   ; preds = %cond.end1415
  %672 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %673 = bitcast i8* %672 to i32*, !dbg !17885
  %add.ptr1538 = getelementptr i32, i32* %673, i64 1, !dbg !17885
  %674 = load i32, i32* %add.ptr1538, align 4, !dbg !17885
  %675 = call i1 @llvm.is.constant.i32(i32 %674), !dbg !17885
  br i1 %675, label %cond.true1539, label %cond.false1555, !dbg !17885

cond.true1539:                                    ; preds = %cond.false1537
  %676 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %677 = bitcast i8* %676 to i32*, !dbg !17885
  %add.ptr1540 = getelementptr i32, i32* %677, i64 1, !dbg !17885
  %678 = load i32, i32* %add.ptr1540, align 4, !dbg !17885
  %and1541 = and i32 %678, 255, !dbg !17885
  %shl1542 = shl i32 %and1541, 24, !dbg !17885
  %679 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %680 = bitcast i8* %679 to i32*, !dbg !17885
  %add.ptr1543 = getelementptr i32, i32* %680, i64 1, !dbg !17885
  %681 = load i32, i32* %add.ptr1543, align 4, !dbg !17885
  %and1544 = and i32 %681, 65280, !dbg !17885
  %shl1545 = shl i32 %and1544, 8, !dbg !17885
  %or1546 = or i32 %shl1542, %shl1545, !dbg !17885
  %682 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %683 = bitcast i8* %682 to i32*, !dbg !17885
  %add.ptr1547 = getelementptr i32, i32* %683, i64 1, !dbg !17885
  %684 = load i32, i32* %add.ptr1547, align 4, !dbg !17885
  %and1548 = and i32 %684, 16711680, !dbg !17885
  %shr1549 = lshr i32 %and1548, 8, !dbg !17885
  %or1550 = or i32 %or1546, %shr1549, !dbg !17885
  %685 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %686 = bitcast i8* %685 to i32*, !dbg !17885
  %add.ptr1551 = getelementptr i32, i32* %686, i64 1, !dbg !17885
  %687 = load i32, i32* %add.ptr1551, align 4, !dbg !17885
  %and1552 = and i32 %687, -16777216, !dbg !17885
  %shr1553 = lshr i32 %and1552, 24, !dbg !17885
  %or1554 = or i32 %or1550, %shr1553, !dbg !17885
  br label %cond.end1558, !dbg !17885

cond.false1555:                                   ; preds = %cond.false1537
  %688 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %689 = bitcast i8* %688 to i32*, !dbg !17885
  %add.ptr1556 = getelementptr i32, i32* %689, i64 1, !dbg !17885
  %690 = load i32, i32* %add.ptr1556, align 4, !dbg !17885
  %call1557 = call i32 @__fswab32(i32 %690) #10, !dbg !17885
  br label %cond.end1558, !dbg !17885

cond.end1558:                                     ; preds = %cond.false1555, %cond.true1539
  %cond1559 = phi i32 [ %or1554, %cond.true1539 ], [ %call1557, %cond.false1555 ], !dbg !17885
  %and1560 = and i32 %cond1559, -9, !dbg !17885
  %691 = load i32, i32* %_v1392, align 4, !dbg !17885
  %and1561 = and i32 %691, 1, !dbg !17885
  %shl1562 = shl i32 %and1561, 3, !dbg !17885
  %or1563 = or i32 %and1560, %shl1562, !dbg !17885
  %call1564 = call i32 @__fswab32(i32 %or1563) #10, !dbg !17885
  br label %cond.end1565, !dbg !17885

cond.end1565:                                     ; preds = %cond.end1558, %cond.end1528
  %cond1566 = phi i32 [ %or1536, %cond.end1528 ], [ %call1564, %cond.end1558 ], !dbg !17885
  %692 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !17885
  %693 = bitcast i8* %692 to i32*, !dbg !17885
  %add.ptr1567 = getelementptr i32, i32* %693, i64 1, !dbg !17885
  store i32 %cond1566, i32* %add.ptr1567, align 4, !dbg !17885
  br label %do.end1568, !dbg !17885

do.end1568:                                       ; preds = %cond.end1565
  br label %if.end1569, !dbg !17885

if.end1569:                                       ; preds = %do.end1568, %if.end1387
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !17888, metadata !DIExpression()), !dbg !17890
  %694 = bitcast [4 x i32]* %_out to i8*, !dbg !17890
  call void @llvm.memset.p0i8.i64(i8* align 16 %694, i8 0, i64 16, i1 false), !dbg !17890
  %695 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !17891
  %arraydecay1571 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !17891
  %696 = bitcast i32* %arraydecay1571 to i8*, !dbg !17891
  %arraydecay1572 = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !17891
  %697 = bitcast i32* %arraydecay1572 to i8*, !dbg !17891
  %call1573 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %695, i8* %696, i32 512, i8* %697, i32 16) #8, !dbg !17891
  store i32 %call1573, i32* %tmp1570, align 4, !dbg !17890
  %698 = load i32, i32* %tmp1570, align 4, !dbg !17891
  store i32 %698, i32* %tmp, align 4, !dbg !17890
  %699 = load i32, i32* %tmp, align 4, !dbg !17890
  ret i32 %699, !dbg !17893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vport_cleanup(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !17894 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %vport_num = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17897, metadata !DIExpression()), !dbg !17898
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17899, metadata !DIExpression()), !dbg !17900
  call void @llvm.dbg.declare(metadata i16* %vport_num, metadata !17901, metadata !DIExpression()), !dbg !17902
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17903
  %vport1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %0, i32 0, i32 1, !dbg !17904
  %1 = load i32, i32* %vport1, align 8, !dbg !17904
  %conv = trunc i32 %1 to i16, !dbg !17903
  store i16 %conv, i16* %vport_num, align 2, !dbg !17902
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17905
  %3 = load i16, i16* %vport_num, align 2, !dbg !17907
  %call = call zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %2, i16 zeroext %3) #8, !dbg !17908
  br i1 %call, label %if.end, label %if.then, !dbg !17909

if.then:                                          ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17910
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !17911
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17911
  %6 = load i16, i16* %vport_num, align 2, !dbg !17912
  %call2 = call i32 @mlx5_modify_vport_admin_state(%struct.mlx5_core_dev* %5, i8 zeroext 1, i16 zeroext %6, i8 zeroext 1, i8 zeroext 0) #8, !dbg !17913
  br label %if.end, !dbg !17913

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17914
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17915
  call void @esw_vport_disable_qos(%struct.mlx5_eswitch* %7, %struct.mlx5_vport* %8) #8, !dbg !17916
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17917
  %10 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17918
  call void @esw_vport_cleanup_acl(%struct.mlx5_eswitch* %9, %struct.mlx5_vport* %10) #8, !dbg !17919
  ret void, !dbg !17920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vport_disable_qos(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !17921 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17922, metadata !DIExpression()), !dbg !17923
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17924, metadata !DIExpression()), !dbg !17925
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17926, metadata !DIExpression()), !dbg !17927
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17928
  %qos = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %0, i32 0, i32 12, !dbg !17930
  %enabled = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos, i32 0, i32 0, !dbg !17931
  %1 = load i8, i8* %enabled, align 8, !dbg !17931
  %tobool = trunc i8 %1 to i1, !dbg !17931
  br i1 %tobool, label %if.end, label %if.then, !dbg !17932

if.then:                                          ; preds = %entry
  br label %return, !dbg !17933

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17934
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !17935
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17935
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17936
  %qos1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %4, i32 0, i32 12, !dbg !17937
  %esw_tsar_ix = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos1, i32 0, i32 1, !dbg !17938
  %5 = load i32, i32* %esw_tsar_ix, align 4, !dbg !17938
  %call = call i32 @mlx5_destroy_scheduling_element_cmd(%struct.mlx5_core_dev* %3, i8 zeroext 2, i32 %5) #8, !dbg !17939
  store i32 %call, i32* %err, align 4, !dbg !17940
  %6 = load i32, i32* %err, align 4, !dbg !17941
  %tobool2 = icmp ne i32 %6, 0, !dbg !17941
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !17943

if.then3:                                         ; preds = %if.end
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17944
  %dev4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !17944
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev4, align 8, !dbg !17944
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 0, !dbg !17944
  %9 = load %struct.device*, %struct.device** %device, align 8, !dbg !17944
  %10 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17944
  %vport5 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %10, i32 0, i32 1, !dbg !17944
  %11 = load i32, i32* %vport5, align 8, !dbg !17944
  %12 = load i32, i32* %err, align 4, !dbg !17944
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.27, i64 0, i64 0), i32 %11, i32 %12) #11, !dbg !17944
  br label %if.end6, !dbg !17944

if.end6:                                          ; preds = %if.then3, %if.end
  %13 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17945
  %qos7 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %13, i32 0, i32 12, !dbg !17946
  %enabled8 = getelementptr inbounds %struct.anon.162, %struct.anon.162* %qos7, i32 0, i32 0, !dbg !17947
  store i8 0, i8* %enabled8, align 8, !dbg !17948
  br label %return, !dbg !17949

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !17949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vport_cleanup_acl(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !17950 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17951, metadata !DIExpression()), !dbg !17952
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17953, metadata !DIExpression()), !dbg !17954
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17955
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !17957
  %1 = load i32, i32* %mode, align 8, !dbg !17957
  %cmp = icmp eq i32 %1, 1, !dbg !17958
  br i1 %cmp, label %if.then, label %if.else, !dbg !17959

if.then:                                          ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17960
  %3 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17961
  call void @esw_vport_destroy_legacy_acl_tables(%struct.mlx5_eswitch* %2, %struct.mlx5_vport* %3) #8, !dbg !17962
  br label %if.end, !dbg !17962

if.else:                                          ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17963
  %5 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17964
  call void @esw_vport_destroy_offloads_acl_tables(%struct.mlx5_eswitch* %4, %struct.mlx5_vport* %5) #8, !dbg !17965
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !17966
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_destroy_scheduling_element_cmd(%struct.mlx5_core_dev*, i8 zeroext, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vport_destroy_legacy_acl_tables(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !17967 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17968, metadata !DIExpression()), !dbg !17969
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !17970, metadata !DIExpression()), !dbg !17971
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17972
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17974
  %vport1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %1, i32 0, i32 1, !dbg !17975
  %2 = load i32, i32* %vport1, align 8, !dbg !17975
  %conv = trunc i32 %2 to i16, !dbg !17974
  %call = call zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %0, i16 zeroext %conv) #8, !dbg !17976
  br i1 %call, label %if.then, label %if.end, !dbg !17977

if.then:                                          ; preds = %entry
  br label %return, !dbg !17978

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17979
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17980
  call void @esw_acl_egress_lgcy_cleanup(%struct.mlx5_eswitch* %3, %struct.mlx5_vport* %4) #8, !dbg !17981
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17982
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !17983
  call void @esw_acl_ingress_lgcy_cleanup(%struct.mlx5_eswitch* %5, %struct.mlx5_vport* %6) #8, !dbg !17984
  br label %return, !dbg !17985

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !17985
}

; Function Attrs: noredzone
declare dso_local void @esw_vport_destroy_offloads_acl_tables(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noredzone
declare dso_local void @esw_acl_egress_lgcy_cleanup(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devlink* @priv_to_devlink(i8* %priv) #0 !dbg !17986 {
entry:
  %priv.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devlink*, align 8
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !17989, metadata !DIExpression()), !dbg !17990
  br label %do.body, !dbg !17991

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !17992
  %tobool = icmp ne i8* %0, null, !dbg !17992
  %lnot = xor i1 %tobool, true, !dbg !17992
  %lnot1 = xor i1 %lnot, true, !dbg !17992
  %lnot2 = xor i1 %lnot1, true, !dbg !17992
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !17992
  %conv = sext i32 %lnot.ext to i64, !dbg !17992
  %tobool3 = icmp ne i64 %conv, 0, !dbg !17992
  br i1 %tobool3, label %if.then, label %if.end, !dbg !17995

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !17992

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !17996

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !17998

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !17996

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i32 1358, i32 0, i64 12) #9, !dbg !18000, !srcloc !18002
  br label %do.end7, !dbg !18000

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !17996

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 561) #9, !dbg !18003, !srcloc !18006
  unreachable, !dbg !18007

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !17996

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !17996

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !17995

do.end11:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18008, metadata !DIExpression()), !dbg !18010
  %1 = load i8*, i8** %priv.addr, align 8, !dbg !18010
  store i8* %1, i8** %__mptr, align 8, !dbg !18010
  br label %do.body12, !dbg !18010

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !18011

do.end13:                                         ; preds = %do.body12
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18010
  %add.ptr = getelementptr i8, i8* %2, i64 -352, !dbg !18010
  %3 = bitcast i8* %add.ptr to %struct.devlink*, !dbg !18010
  store %struct.devlink* %3, %struct.devlink** %tmp, align 8, !dbg !18011
  %4 = load %struct.devlink*, %struct.devlink** %tmp, align 8, !dbg !18010
  ret %struct.devlink* %4, !dbg !18013
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_param_driverinit_value_get(%struct.devlink*, i32, %union.devlink_param_value*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %dev) #0 !dbg !18014 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !18015, metadata !DIExpression()), !dbg !18016
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18017
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !18018
  %embedded_cpu = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 6, !dbg !18019
  %1 = load i8, i8* %embedded_cpu, align 8, !dbg !18019
  %conv = zext i8 %1 to i32, !dbg !18017
  %tobool = icmp ne i32 %conv, 0, !dbg !18017
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !18020

land.rhs:                                         ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18021
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !18021
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !18021
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !18021
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !18021
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !18021
  %3 = load i32, i32* %add.ptr, align 4, !dbg !18021
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !18021
  br i1 %4, label %cond.true, label %cond.false, !dbg !18021

cond.true:                                        ; preds = %land.rhs
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18021
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !18021
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !18021
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !18021
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !18021
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !18021
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !18021
  %and = and i32 %6, 255, !dbg !18021
  %shl = shl i32 %and, 24, !dbg !18021
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18021
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !18021
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !18021
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !18021
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !18021
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 13, !dbg !18021
  %8 = load i32, i32* %add.ptr11, align 4, !dbg !18021
  %and12 = and i32 %8, 65280, !dbg !18021
  %shl13 = shl i32 %and12, 8, !dbg !18021
  %or = or i32 %shl, %shl13, !dbg !18021
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18021
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !18021
  %hca_cur15 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps14, i32 0, i32 0, !dbg !18021
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !18021
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !18021
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 13, !dbg !18021
  %10 = load i32, i32* %add.ptr18, align 4, !dbg !18021
  %and19 = and i32 %10, 16711680, !dbg !18021
  %shr = lshr i32 %and19, 8, !dbg !18021
  %or20 = or i32 %or, %shr, !dbg !18021
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18021
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !18021
  %hca_cur22 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps21, i32 0, i32 0, !dbg !18021
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !18021
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !18021
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 13, !dbg !18021
  %12 = load i32, i32* %add.ptr25, align 4, !dbg !18021
  %and26 = and i32 %12, -16777216, !dbg !18021
  %shr27 = lshr i32 %and26, 24, !dbg !18021
  %or28 = or i32 %or20, %shr27, !dbg !18021
  br label %cond.end, !dbg !18021

cond.false:                                       ; preds = %land.rhs
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18021
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !18021
  %hca_cur30 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps29, i32 0, i32 0, !dbg !18021
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !18021
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !18021
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 13, !dbg !18021
  %14 = load i32, i32* %add.ptr33, align 4, !dbg !18021
  %call = call i32 @__fswab32(i32 %14) #10, !dbg !18021
  br label %cond.end, !dbg !18021

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call, %cond.false ], !dbg !18021
  %shr34 = lshr i32 %cond, 24, !dbg !18021
  %and35 = and i32 %shr34, 1, !dbg !18021
  %tobool36 = icmp ne i32 %and35, 0, !dbg !18020
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %15 = phi i1 [ false, %entry ], [ %tobool36, %cond.end ], !dbg !18022
  ret i1 %15, !dbg !18023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @element_type_supported(%struct.mlx5_eswitch* %esw, i32 %type) #0 !dbg !18024 {
entry:
  %retval = alloca i1, align 1
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %type.addr = alloca i32, align 4
  %dev = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18027, metadata !DIExpression()), !dbg !18028
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !18029, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !18031, metadata !DIExpression()), !dbg !18032
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18033
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !18034
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !18034
  store %struct.mlx5_core_dev* %1, %struct.mlx5_core_dev** %dev, align 8, !dbg !18032
  %2 = load i32, i32* %type.addr, align 4, !dbg !18035
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb37
    i32 2, label %sw.bb88
    i32 3, label %sw.bb139
  ], !dbg !18036

sw.bb:                                            ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18037
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !18037
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !18037
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 12, !dbg !18037
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !18037
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 5, !dbg !18037
  %4 = load i32, i32* %add.ptr, align 4, !dbg !18037
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !18037
  br i1 %5, label %cond.true, label %cond.false, !dbg !18037

cond.true:                                        ; preds = %sw.bb
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18037
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !18037
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !18037
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 12, !dbg !18037
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !18037
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 5, !dbg !18037
  %7 = load i32, i32* %add.ptr6, align 4, !dbg !18037
  %and = and i32 %7, 255, !dbg !18037
  %shl = shl i32 %and, 24, !dbg !18037
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18037
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !18037
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !18037
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 12, !dbg !18037
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !18037
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 5, !dbg !18037
  %9 = load i32, i32* %add.ptr11, align 4, !dbg !18037
  %and12 = and i32 %9, 65280, !dbg !18037
  %shl13 = shl i32 %and12, 8, !dbg !18037
  %or = or i32 %shl, %shl13, !dbg !18037
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18037
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !18037
  %hca_cur15 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps14, i32 0, i32 0, !dbg !18037
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 12, !dbg !18037
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !18037
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 5, !dbg !18037
  %11 = load i32, i32* %add.ptr18, align 4, !dbg !18037
  %and19 = and i32 %11, 16711680, !dbg !18037
  %shr = lshr i32 %and19, 8, !dbg !18037
  %or20 = or i32 %or, %shr, !dbg !18037
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18037
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !18037
  %hca_cur22 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps21, i32 0, i32 0, !dbg !18037
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 12, !dbg !18037
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !18037
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 5, !dbg !18037
  %13 = load i32, i32* %add.ptr25, align 4, !dbg !18037
  %and26 = and i32 %13, -16777216, !dbg !18037
  %shr27 = lshr i32 %and26, 24, !dbg !18037
  %or28 = or i32 %or20, %shr27, !dbg !18037
  br label %cond.end, !dbg !18037

cond.false:                                       ; preds = %sw.bb
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18037
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !18037
  %hca_cur30 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps29, i32 0, i32 0, !dbg !18037
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 12, !dbg !18037
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !18037
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 5, !dbg !18037
  %15 = load i32, i32* %add.ptr33, align 4, !dbg !18037
  %call = call i32 @__fswab32(i32 %15) #10, !dbg !18037
  br label %cond.end, !dbg !18037

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call, %cond.false ], !dbg !18037
  %shr34 = lshr i32 %cond, 16, !dbg !18037
  %and35 = and i32 %shr34, 65535, !dbg !18037
  %and36 = and i32 %and35, 1, !dbg !18039
  %tobool = icmp ne i32 %and36, 0, !dbg !18037
  store i1 %tobool, i1* %retval, align 1, !dbg !18040
  br label %return, !dbg !18040

sw.bb37:                                          ; preds = %entry
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18041
  %caps38 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !18041
  %hca_cur39 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps38, i32 0, i32 0, !dbg !18041
  %arrayidx40 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur39, i64 0, i64 12, !dbg !18041
  %arraydecay41 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx40, i64 0, i64 0, !dbg !18041
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 5, !dbg !18041
  %17 = load i32, i32* %add.ptr42, align 4, !dbg !18041
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !18041
  br i1 %18, label %cond.true43, label %cond.false75, !dbg !18041

cond.true43:                                      ; preds = %sw.bb37
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18041
  %caps44 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !18041
  %hca_cur45 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps44, i32 0, i32 0, !dbg !18041
  %arrayidx46 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur45, i64 0, i64 12, !dbg !18041
  %arraydecay47 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx46, i64 0, i64 0, !dbg !18041
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 5, !dbg !18041
  %20 = load i32, i32* %add.ptr48, align 4, !dbg !18041
  %and49 = and i32 %20, 255, !dbg !18041
  %shl50 = shl i32 %and49, 24, !dbg !18041
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18041
  %caps51 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !18041
  %hca_cur52 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps51, i32 0, i32 0, !dbg !18041
  %arrayidx53 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur52, i64 0, i64 12, !dbg !18041
  %arraydecay54 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx53, i64 0, i64 0, !dbg !18041
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 5, !dbg !18041
  %22 = load i32, i32* %add.ptr55, align 4, !dbg !18041
  %and56 = and i32 %22, 65280, !dbg !18041
  %shl57 = shl i32 %and56, 8, !dbg !18041
  %or58 = or i32 %shl50, %shl57, !dbg !18041
  %23 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18041
  %caps59 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %23, i32 0, i32 9, !dbg !18041
  %hca_cur60 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps59, i32 0, i32 0, !dbg !18041
  %arrayidx61 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur60, i64 0, i64 12, !dbg !18041
  %arraydecay62 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx61, i64 0, i64 0, !dbg !18041
  %add.ptr63 = getelementptr i32, i32* %arraydecay62, i64 5, !dbg !18041
  %24 = load i32, i32* %add.ptr63, align 4, !dbg !18041
  %and64 = and i32 %24, 16711680, !dbg !18041
  %shr65 = lshr i32 %and64, 8, !dbg !18041
  %or66 = or i32 %or58, %shr65, !dbg !18041
  %25 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18041
  %caps67 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %25, i32 0, i32 9, !dbg !18041
  %hca_cur68 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps67, i32 0, i32 0, !dbg !18041
  %arrayidx69 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur68, i64 0, i64 12, !dbg !18041
  %arraydecay70 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx69, i64 0, i64 0, !dbg !18041
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 5, !dbg !18041
  %26 = load i32, i32* %add.ptr71, align 4, !dbg !18041
  %and72 = and i32 %26, -16777216, !dbg !18041
  %shr73 = lshr i32 %and72, 24, !dbg !18041
  %or74 = or i32 %or66, %shr73, !dbg !18041
  br label %cond.end82, !dbg !18041

cond.false75:                                     ; preds = %sw.bb37
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18041
  %caps76 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !18041
  %hca_cur77 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps76, i32 0, i32 0, !dbg !18041
  %arrayidx78 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur77, i64 0, i64 12, !dbg !18041
  %arraydecay79 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx78, i64 0, i64 0, !dbg !18041
  %add.ptr80 = getelementptr i32, i32* %arraydecay79, i64 5, !dbg !18041
  %28 = load i32, i32* %add.ptr80, align 4, !dbg !18041
  %call81 = call i32 @__fswab32(i32 %28) #10, !dbg !18041
  br label %cond.end82, !dbg !18041

cond.end82:                                       ; preds = %cond.false75, %cond.true43
  %cond83 = phi i32 [ %or74, %cond.true43 ], [ %call81, %cond.false75 ], !dbg !18041
  %shr84 = lshr i32 %cond83, 16, !dbg !18041
  %and85 = and i32 %shr84, 65535, !dbg !18041
  %and86 = and i32 %and85, 2, !dbg !18042
  %tobool87 = icmp ne i32 %and86, 0, !dbg !18041
  store i1 %tobool87, i1* %retval, align 1, !dbg !18043
  br label %return, !dbg !18043

sw.bb88:                                          ; preds = %entry
  %29 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18044
  %caps89 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %29, i32 0, i32 9, !dbg !18044
  %hca_cur90 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps89, i32 0, i32 0, !dbg !18044
  %arrayidx91 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur90, i64 0, i64 12, !dbg !18044
  %arraydecay92 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx91, i64 0, i64 0, !dbg !18044
  %add.ptr93 = getelementptr i32, i32* %arraydecay92, i64 5, !dbg !18044
  %30 = load i32, i32* %add.ptr93, align 4, !dbg !18044
  %31 = call i1 @llvm.is.constant.i32(i32 %30), !dbg !18044
  br i1 %31, label %cond.true94, label %cond.false126, !dbg !18044

cond.true94:                                      ; preds = %sw.bb88
  %32 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18044
  %caps95 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %32, i32 0, i32 9, !dbg !18044
  %hca_cur96 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps95, i32 0, i32 0, !dbg !18044
  %arrayidx97 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur96, i64 0, i64 12, !dbg !18044
  %arraydecay98 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx97, i64 0, i64 0, !dbg !18044
  %add.ptr99 = getelementptr i32, i32* %arraydecay98, i64 5, !dbg !18044
  %33 = load i32, i32* %add.ptr99, align 4, !dbg !18044
  %and100 = and i32 %33, 255, !dbg !18044
  %shl101 = shl i32 %and100, 24, !dbg !18044
  %34 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18044
  %caps102 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %34, i32 0, i32 9, !dbg !18044
  %hca_cur103 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps102, i32 0, i32 0, !dbg !18044
  %arrayidx104 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur103, i64 0, i64 12, !dbg !18044
  %arraydecay105 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx104, i64 0, i64 0, !dbg !18044
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 5, !dbg !18044
  %35 = load i32, i32* %add.ptr106, align 4, !dbg !18044
  %and107 = and i32 %35, 65280, !dbg !18044
  %shl108 = shl i32 %and107, 8, !dbg !18044
  %or109 = or i32 %shl101, %shl108, !dbg !18044
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18044
  %caps110 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %36, i32 0, i32 9, !dbg !18044
  %hca_cur111 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps110, i32 0, i32 0, !dbg !18044
  %arrayidx112 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur111, i64 0, i64 12, !dbg !18044
  %arraydecay113 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx112, i64 0, i64 0, !dbg !18044
  %add.ptr114 = getelementptr i32, i32* %arraydecay113, i64 5, !dbg !18044
  %37 = load i32, i32* %add.ptr114, align 4, !dbg !18044
  %and115 = and i32 %37, 16711680, !dbg !18044
  %shr116 = lshr i32 %and115, 8, !dbg !18044
  %or117 = or i32 %or109, %shr116, !dbg !18044
  %38 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18044
  %caps118 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %38, i32 0, i32 9, !dbg !18044
  %hca_cur119 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps118, i32 0, i32 0, !dbg !18044
  %arrayidx120 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur119, i64 0, i64 12, !dbg !18044
  %arraydecay121 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx120, i64 0, i64 0, !dbg !18044
  %add.ptr122 = getelementptr i32, i32* %arraydecay121, i64 5, !dbg !18044
  %39 = load i32, i32* %add.ptr122, align 4, !dbg !18044
  %and123 = and i32 %39, -16777216, !dbg !18044
  %shr124 = lshr i32 %and123, 24, !dbg !18044
  %or125 = or i32 %or117, %shr124, !dbg !18044
  br label %cond.end133, !dbg !18044

cond.false126:                                    ; preds = %sw.bb88
  %40 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18044
  %caps127 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %40, i32 0, i32 9, !dbg !18044
  %hca_cur128 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps127, i32 0, i32 0, !dbg !18044
  %arrayidx129 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur128, i64 0, i64 12, !dbg !18044
  %arraydecay130 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx129, i64 0, i64 0, !dbg !18044
  %add.ptr131 = getelementptr i32, i32* %arraydecay130, i64 5, !dbg !18044
  %41 = load i32, i32* %add.ptr131, align 4, !dbg !18044
  %call132 = call i32 @__fswab32(i32 %41) #10, !dbg !18044
  br label %cond.end133, !dbg !18044

cond.end133:                                      ; preds = %cond.false126, %cond.true94
  %cond134 = phi i32 [ %or125, %cond.true94 ], [ %call132, %cond.false126 ], !dbg !18044
  %shr135 = lshr i32 %cond134, 16, !dbg !18044
  %and136 = and i32 %shr135, 65535, !dbg !18044
  %and137 = and i32 %and136, 4, !dbg !18045
  %tobool138 = icmp ne i32 %and137, 0, !dbg !18044
  store i1 %tobool138, i1* %retval, align 1, !dbg !18046
  br label %return, !dbg !18046

sw.bb139:                                         ; preds = %entry
  %42 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18047
  %caps140 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %42, i32 0, i32 9, !dbg !18047
  %hca_cur141 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps140, i32 0, i32 0, !dbg !18047
  %arrayidx142 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur141, i64 0, i64 12, !dbg !18047
  %arraydecay143 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx142, i64 0, i64 0, !dbg !18047
  %add.ptr144 = getelementptr i32, i32* %arraydecay143, i64 5, !dbg !18047
  %43 = load i32, i32* %add.ptr144, align 4, !dbg !18047
  %44 = call i1 @llvm.is.constant.i32(i32 %43), !dbg !18047
  br i1 %44, label %cond.true145, label %cond.false177, !dbg !18047

cond.true145:                                     ; preds = %sw.bb139
  %45 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18047
  %caps146 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %45, i32 0, i32 9, !dbg !18047
  %hca_cur147 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps146, i32 0, i32 0, !dbg !18047
  %arrayidx148 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur147, i64 0, i64 12, !dbg !18047
  %arraydecay149 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx148, i64 0, i64 0, !dbg !18047
  %add.ptr150 = getelementptr i32, i32* %arraydecay149, i64 5, !dbg !18047
  %46 = load i32, i32* %add.ptr150, align 4, !dbg !18047
  %and151 = and i32 %46, 255, !dbg !18047
  %shl152 = shl i32 %and151, 24, !dbg !18047
  %47 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18047
  %caps153 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %47, i32 0, i32 9, !dbg !18047
  %hca_cur154 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps153, i32 0, i32 0, !dbg !18047
  %arrayidx155 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur154, i64 0, i64 12, !dbg !18047
  %arraydecay156 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx155, i64 0, i64 0, !dbg !18047
  %add.ptr157 = getelementptr i32, i32* %arraydecay156, i64 5, !dbg !18047
  %48 = load i32, i32* %add.ptr157, align 4, !dbg !18047
  %and158 = and i32 %48, 65280, !dbg !18047
  %shl159 = shl i32 %and158, 8, !dbg !18047
  %or160 = or i32 %shl152, %shl159, !dbg !18047
  %49 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18047
  %caps161 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %49, i32 0, i32 9, !dbg !18047
  %hca_cur162 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps161, i32 0, i32 0, !dbg !18047
  %arrayidx163 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur162, i64 0, i64 12, !dbg !18047
  %arraydecay164 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx163, i64 0, i64 0, !dbg !18047
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 5, !dbg !18047
  %50 = load i32, i32* %add.ptr165, align 4, !dbg !18047
  %and166 = and i32 %50, 16711680, !dbg !18047
  %shr167 = lshr i32 %and166, 8, !dbg !18047
  %or168 = or i32 %or160, %shr167, !dbg !18047
  %51 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18047
  %caps169 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %51, i32 0, i32 9, !dbg !18047
  %hca_cur170 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps169, i32 0, i32 0, !dbg !18047
  %arrayidx171 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur170, i64 0, i64 12, !dbg !18047
  %arraydecay172 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx171, i64 0, i64 0, !dbg !18047
  %add.ptr173 = getelementptr i32, i32* %arraydecay172, i64 5, !dbg !18047
  %52 = load i32, i32* %add.ptr173, align 4, !dbg !18047
  %and174 = and i32 %52, -16777216, !dbg !18047
  %shr175 = lshr i32 %and174, 24, !dbg !18047
  %or176 = or i32 %or168, %shr175, !dbg !18047
  br label %cond.end184, !dbg !18047

cond.false177:                                    ; preds = %sw.bb139
  %53 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18047
  %caps178 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %53, i32 0, i32 9, !dbg !18047
  %hca_cur179 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps178, i32 0, i32 0, !dbg !18047
  %arrayidx180 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur179, i64 0, i64 12, !dbg !18047
  %arraydecay181 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx180, i64 0, i64 0, !dbg !18047
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 5, !dbg !18047
  %54 = load i32, i32* %add.ptr182, align 4, !dbg !18047
  %call183 = call i32 @__fswab32(i32 %54) #10, !dbg !18047
  br label %cond.end184, !dbg !18047

cond.end184:                                      ; preds = %cond.false177, %cond.true145
  %cond185 = phi i32 [ %or176, %cond.true145 ], [ %call183, %cond.false177 ], !dbg !18047
  %shr186 = lshr i32 %cond185, 16, !dbg !18047
  %and187 = and i32 %shr186, 65535, !dbg !18047
  %and188 = and i32 %and187, 8, !dbg !18048
  %tobool189 = icmp ne i32 %and188, 0, !dbg !18047
  store i1 %tobool189, i1* %retval, align 1, !dbg !18049
  br label %return, !dbg !18049

sw.epilog:                                        ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !18050
  br label %return, !dbg !18050

return:                                           ; preds = %sw.epilog, %cond.end184, %cond.end133, %cond.end82, %cond.end
  %55 = load i1, i1* %retval, align 1, !dbg !18051
  ret i1 %55, !dbg !18051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_legacy_table(%struct.mlx5_eswitch* %esw) #0 !dbg !18052 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18053, metadata !DIExpression()), !dbg !18054
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18055, metadata !DIExpression()), !dbg !18056
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18057
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !18058
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18059
  %legacy = bitcast %union.anon.154* %1 to %struct.legacy_fdb*, !dbg !18059
  %2 = bitcast %struct.legacy_fdb* %legacy to i8*, !dbg !18060
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !18060
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18061
  %call = call i32 @esw_create_legacy_vepa_table(%struct.mlx5_eswitch* %3) #8, !dbg !18062
  store i32 %call, i32* %err, align 4, !dbg !18063
  %4 = load i32, i32* %err, align 4, !dbg !18064
  %tobool = icmp ne i32 %4, 0, !dbg !18064
  br i1 %tobool, label %if.then, label %if.end, !dbg !18066

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %err, align 4, !dbg !18067
  store i32 %5, i32* %retval, align 4, !dbg !18068
  br label %return, !dbg !18068

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18069
  %call1 = call i32 @esw_create_legacy_fdb_table(%struct.mlx5_eswitch* %6) #8, !dbg !18070
  store i32 %call1, i32* %err, align 4, !dbg !18071
  %7 = load i32, i32* %err, align 4, !dbg !18072
  %tobool2 = icmp ne i32 %7, 0, !dbg !18072
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !18074

if.then3:                                         ; preds = %if.end
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18075
  call void @esw_destroy_legacy_vepa_table(%struct.mlx5_eswitch* %8) #8, !dbg !18076
  br label %if.end4, !dbg !18076

if.end4:                                          ; preds = %if.then3, %if.end
  %9 = load i32, i32* %err, align 4, !dbg !18077
  store i32 %9, i32* %retval, align 4, !dbg !18078
  br label %return, !dbg !18078

return:                                           ; preds = %if.end4, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !18079
  ret i32 %10, !dbg !18079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_legacy_table(%struct.mlx5_eswitch* %esw) #0 !dbg !18080 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18081, metadata !DIExpression()), !dbg !18082
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18083
  call void @esw_cleanup_vepa_rules(%struct.mlx5_eswitch* %0) #8, !dbg !18084
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18085
  call void @esw_destroy_legacy_fdb_table(%struct.mlx5_eswitch* %1) #8, !dbg !18086
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18087
  call void @esw_destroy_legacy_vepa_table(%struct.mlx5_eswitch* %2) #8, !dbg !18088
  ret void, !dbg !18089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_legacy_vepa_table(%struct.mlx5_eswitch* %esw) #0 !dbg !18090 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %ft_attr = alloca %struct.mlx5_flow_table_attr, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %root_ns = alloca %struct.mlx5_flow_namespace*, align 8
  %fdb = alloca %struct.mlx5_flow_table*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18091, metadata !DIExpression()), !dbg !18092
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table_attr* %ft_attr, metadata !18093, metadata !DIExpression()), !dbg !18106
  %0 = bitcast %struct.mlx5_flow_table_attr* %ft_attr to i8*, !dbg !18106
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !18106
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !18107, metadata !DIExpression()), !dbg !18108
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18109
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !18110
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !18110
  store %struct.mlx5_core_dev* %2, %struct.mlx5_core_dev** %dev, align 8, !dbg !18108
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_namespace** %root_ns, metadata !18111, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fdb, metadata !18113, metadata !DIExpression()), !dbg !18114
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18115, metadata !DIExpression()), !dbg !18116
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18117
  %call = call %struct.mlx5_flow_namespace* @mlx5_get_fdb_sub_ns(%struct.mlx5_core_dev* %3, i32 0) #8, !dbg !18118
  store %struct.mlx5_flow_namespace* %call, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18119
  %4 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18120
  %tobool = icmp ne %struct.mlx5_flow_namespace* %4, null, !dbg !18120
  br i1 %tobool, label %if.end, label %if.then, !dbg !18122

if.then:                                          ; preds = %entry
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18123
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 0, !dbg !18123
  %6 = load %struct.device*, %struct.device** %device, align 8, !dbg !18123
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %6, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0)) #11, !dbg !18123
  store i32 -95, i32* %retval, align 4, !dbg !18125
  br label %return, !dbg !18125

if.end:                                           ; preds = %entry
  %prio = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 0, !dbg !18126
  store i32 0, i32* %prio, align 8, !dbg !18127
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 1, !dbg !18128
  store i32 2, i32* %max_fte, align 4, !dbg !18129
  %autogroup = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 5, !dbg !18130
  %max_num_groups = getelementptr inbounds %struct.anon.192, %struct.anon.192* %autogroup, i32 0, i32 0, !dbg !18131
  store i32 2, i32* %max_num_groups, align 8, !dbg !18132
  %7 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18133
  %call2 = call %struct.mlx5_flow_table* @mlx5_create_auto_grouped_flow_table(%struct.mlx5_flow_namespace* %7, %struct.mlx5_flow_table_attr* %ft_attr) #8, !dbg !18134
  store %struct.mlx5_flow_table* %call2, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18135
  %8 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18136
  %9 = bitcast %struct.mlx5_flow_table* %8 to i8*, !dbg !18136
  %call3 = call zeroext i1 @IS_ERR(i8* %9) #8, !dbg !18138
  br i1 %call3, label %if.then4, label %if.end7, !dbg !18139

if.then4:                                         ; preds = %if.end
  %10 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18140
  %11 = bitcast %struct.mlx5_flow_table* %10 to i8*, !dbg !18140
  %call5 = call i64 @PTR_ERR(i8* %11) #8, !dbg !18142
  %conv = trunc i64 %call5 to i32, !dbg !18142
  store i32 %conv, i32* %err, align 4, !dbg !18143
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18144
  %device6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 0, !dbg !18144
  %13 = load %struct.device*, %struct.device** %device6, align 8, !dbg !18144
  %14 = load i32, i32* %err, align 4, !dbg !18144
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %13, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i32 %14) #11, !dbg !18144
  %15 = load i32, i32* %err, align 4, !dbg !18145
  store i32 %15, i32* %retval, align 4, !dbg !18146
  br label %return, !dbg !18146

if.end7:                                          ; preds = %if.end
  %16 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18147
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18148
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 2, !dbg !18149
  %18 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18150
  %legacy = bitcast %union.anon.154* %18 to %struct.legacy_fdb*, !dbg !18150
  %vepa_fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 4, !dbg !18151
  store %struct.mlx5_flow_table* %16, %struct.mlx5_flow_table** %vepa_fdb, align 8, !dbg !18152
  store i32 0, i32* %retval, align 4, !dbg !18153
  br label %return, !dbg !18153

return:                                           ; preds = %if.end7, %if.then4, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !18154
  ret i32 %19, !dbg !18154
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_legacy_fdb_table(%struct.mlx5_eswitch* %esw) #0 !dbg !18155 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %inlen = alloca i32, align 4
  %ft_attr = alloca %struct.mlx5_flow_table_attr, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %root_ns = alloca %struct.mlx5_flow_namespace*, align 8
  %fdb = alloca %struct.mlx5_flow_table*, align 8
  %g = alloca %struct.mlx5_flow_group*, align 8
  %match_criteria = alloca i8*, align 8
  %table_size = alloca i32, align 4
  %flow_group_in = alloca i32*, align 8
  %dmac = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v236 = alloca i32, align 4
  %_v408 = alloca i32, align 4
  %_v589 = alloca i32, align 4
  %_v767 = alloca i32, align 4
  %_v940 = alloca i32, align 4
  %_v1123 = alloca i32, align 4
  %_v1466 = alloca i32, align 4
  %_v1639 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18156, metadata !DIExpression()), !dbg !18157
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !18158, metadata !DIExpression()), !dbg !18159
  store i32 1024, i32* %inlen, align 4, !dbg !18159
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table_attr* %ft_attr, metadata !18160, metadata !DIExpression()), !dbg !18161
  %0 = bitcast %struct.mlx5_flow_table_attr* %ft_attr to i8*, !dbg !18161
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !18161
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !18162, metadata !DIExpression()), !dbg !18163
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18164
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !18165
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !18165
  store %struct.mlx5_core_dev* %2, %struct.mlx5_core_dev** %dev, align 8, !dbg !18163
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_namespace** %root_ns, metadata !18166, metadata !DIExpression()), !dbg !18167
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fdb, metadata !18168, metadata !DIExpression()), !dbg !18169
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_group** %g, metadata !18170, metadata !DIExpression()), !dbg !18171
  call void @llvm.dbg.declare(metadata i8** %match_criteria, metadata !18172, metadata !DIExpression()), !dbg !18173
  call void @llvm.dbg.declare(metadata i32* %table_size, metadata !18174, metadata !DIExpression()), !dbg !18175
  call void @llvm.dbg.declare(metadata i32** %flow_group_in, metadata !18176, metadata !DIExpression()), !dbg !18177
  call void @llvm.dbg.declare(metadata i8** %dmac, metadata !18178, metadata !DIExpression()), !dbg !18179
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18180, metadata !DIExpression()), !dbg !18181
  store i32 0, i32* %err, align 4, !dbg !18181
  br label %do.body, !dbg !18182

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !18183
  %conv = zext i32 %3 to i64, !dbg !18183
  %and = and i64 8, %conv, !dbg !18183
  %tobool = icmp ne i64 %and, 0, !dbg !18183
  br i1 %tobool, label %if.then, label %if.end, !dbg !18186

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !18183

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !18186

do.end:                                           ; preds = %if.end
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18187
  %call = call %struct.mlx5_flow_namespace* @mlx5_get_fdb_sub_ns(%struct.mlx5_core_dev* %4, i32 0) #8, !dbg !18188
  store %struct.mlx5_flow_namespace* %call, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18189
  %5 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18190
  %tobool2 = icmp ne %struct.mlx5_flow_namespace* %5, null, !dbg !18190
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !18192

if.then3:                                         ; preds = %do.end
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18193
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 0, !dbg !18193
  %7 = load %struct.device*, %struct.device** %device, align 8, !dbg !18193
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0)) #11, !dbg !18193
  store i32 -95, i32* %retval, align 4, !dbg !18195
  br label %return, !dbg !18195

if.end4:                                          ; preds = %do.end
  %8 = load i32, i32* %inlen, align 4, !dbg !18196
  %conv5 = sext i32 %8 to i64, !dbg !18196
  %call6 = call i8* @kvzalloc(i64 %conv5, i32 3264) #8, !dbg !18197
  %9 = bitcast i8* %call6 to i32*, !dbg !18197
  store i32* %9, i32** %flow_group_in, align 8, !dbg !18198
  %10 = load i32*, i32** %flow_group_in, align 8, !dbg !18199
  %tobool7 = icmp ne i32* %10, null, !dbg !18199
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !18201

if.then8:                                         ; preds = %if.end4
  store i32 -12, i32* %retval, align 4, !dbg !18202
  br label %return, !dbg !18202

if.end9:                                          ; preds = %if.end4
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18203
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !18203
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !18203
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 8, !dbg !18203
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !18203
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 17, !dbg !18203
  %12 = load i32, i32* %add.ptr, align 4, !dbg !18203
  %13 = call i1 @llvm.is.constant.i32(i32 %12), !dbg !18203
  br i1 %13, label %cond.true, label %cond.false, !dbg !18203

cond.true:                                        ; preds = %if.end9
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18203
  %caps10 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !18203
  %hca_cur11 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps10, i32 0, i32 0, !dbg !18203
  %arrayidx12 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur11, i64 0, i64 8, !dbg !18203
  %arraydecay13 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx12, i64 0, i64 0, !dbg !18203
  %add.ptr14 = getelementptr i32, i32* %arraydecay13, i64 17, !dbg !18203
  %15 = load i32, i32* %add.ptr14, align 4, !dbg !18203
  %and15 = and i32 %15, 255, !dbg !18203
  %shl = shl i32 %and15, 24, !dbg !18203
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18203
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !18203
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !18203
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 8, !dbg !18203
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !18203
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 17, !dbg !18203
  %17 = load i32, i32* %add.ptr20, align 4, !dbg !18203
  %and21 = and i32 %17, 65280, !dbg !18203
  %shl22 = shl i32 %and21, 8, !dbg !18203
  %or = or i32 %shl, %shl22, !dbg !18203
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18203
  %caps23 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !18203
  %hca_cur24 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps23, i32 0, i32 0, !dbg !18203
  %arrayidx25 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur24, i64 0, i64 8, !dbg !18203
  %arraydecay26 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx25, i64 0, i64 0, !dbg !18203
  %add.ptr27 = getelementptr i32, i32* %arraydecay26, i64 17, !dbg !18203
  %19 = load i32, i32* %add.ptr27, align 4, !dbg !18203
  %and28 = and i32 %19, 16711680, !dbg !18203
  %shr = lshr i32 %and28, 8, !dbg !18203
  %or29 = or i32 %or, %shr, !dbg !18203
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18203
  %caps30 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !18203
  %hca_cur31 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps30, i32 0, i32 0, !dbg !18203
  %arrayidx32 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur31, i64 0, i64 8, !dbg !18203
  %arraydecay33 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx32, i64 0, i64 0, !dbg !18203
  %add.ptr34 = getelementptr i32, i32* %arraydecay33, i64 17, !dbg !18203
  %21 = load i32, i32* %add.ptr34, align 4, !dbg !18203
  %and35 = and i32 %21, -16777216, !dbg !18203
  %shr36 = lshr i32 %and35, 24, !dbg !18203
  %or37 = or i32 %or29, %shr36, !dbg !18203
  br label %cond.end, !dbg !18203

cond.false:                                       ; preds = %if.end9
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18203
  %caps38 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !18203
  %hca_cur39 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps38, i32 0, i32 0, !dbg !18203
  %arrayidx40 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur39, i64 0, i64 8, !dbg !18203
  %arraydecay41 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx40, i64 0, i64 0, !dbg !18203
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 17, !dbg !18203
  %23 = load i32, i32* %add.ptr42, align 4, !dbg !18203
  %call43 = call i32 @__fswab32(i32 %23) #10, !dbg !18203
  br label %cond.end, !dbg !18203

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or37, %cond.true ], [ %call43, %cond.false ], !dbg !18203
  %shr44 = lshr i32 %cond, 24, !dbg !18203
  %and45 = and i32 %shr44, 63, !dbg !18203
  %sh_prom = zext i32 %and45 to i64, !dbg !18203
  %shl46 = shl i64 1, %sh_prom, !dbg !18203
  %conv47 = trunc i64 %shl46 to i32, !dbg !18203
  store i32 %conv47, i32* %table_size, align 4, !dbg !18204
  %24 = load i32, i32* %table_size, align 4, !dbg !18205
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 1, !dbg !18206
  store i32 %24, i32* %max_fte, align 4, !dbg !18207
  %prio = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 0, !dbg !18208
  store i32 1, i32* %prio, align 8, !dbg !18209
  %25 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18210
  %call48 = call %struct.mlx5_flow_table* @mlx5_create_flow_table(%struct.mlx5_flow_namespace* %25, %struct.mlx5_flow_table_attr* %ft_attr) #8, !dbg !18211
  store %struct.mlx5_flow_table* %call48, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18212
  %26 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18213
  %27 = bitcast %struct.mlx5_flow_table* %26 to i8*, !dbg !18213
  %call49 = call zeroext i1 @IS_ERR(i8* %27) #8, !dbg !18215
  br i1 %call49, label %if.then50, label %if.end54, !dbg !18216

if.then50:                                        ; preds = %cond.end
  %28 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18217
  %29 = bitcast %struct.mlx5_flow_table* %28 to i8*, !dbg !18217
  %call51 = call i64 @PTR_ERR(i8* %29) #8, !dbg !18219
  %conv52 = trunc i64 %call51 to i32, !dbg !18219
  store i32 %conv52, i32* %err, align 4, !dbg !18220
  %30 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18221
  %device53 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %30, i32 0, i32 0, !dbg !18221
  %31 = load %struct.device*, %struct.device** %device53, align 8, !dbg !18221
  %32 = load i32, i32* %err, align 4, !dbg !18221
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %31, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32, i64 0, i64 0), i32 %32) #11, !dbg !18221
  br label %out, !dbg !18222

if.end54:                                         ; preds = %cond.end
  %33 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18223
  %34 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18224
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %34, i32 0, i32 2, !dbg !18225
  %35 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18226
  %legacy = bitcast %union.anon.154* %35 to %struct.legacy_fdb*, !dbg !18226
  %fdb55 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 0, !dbg !18227
  store %struct.mlx5_flow_table* %33, %struct.mlx5_flow_table** %fdb55, align 8, !dbg !18228
  br label %do.body56, !dbg !18229

do.body56:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !18230, metadata !DIExpression()), !dbg !18232
  store i32 1, i32* %_v, align 4, !dbg !18232
  br label %do.body57, !dbg !18232

do.body57:                                        ; preds = %do.body56
  br label %do.end58, !dbg !18233

do.end58:                                         ; preds = %do.body57
  %36 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr59 = getelementptr i32, i32* %36, i64 15, !dbg !18232
  %37 = load i32, i32* %add.ptr59, align 4, !dbg !18232
  %38 = call i1 @llvm.is.constant.i32(i32 %37), !dbg !18232
  br i1 %38, label %cond.true60, label %cond.false76, !dbg !18232

cond.true60:                                      ; preds = %do.end58
  %39 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr61 = getelementptr i32, i32* %39, i64 15, !dbg !18232
  %40 = load i32, i32* %add.ptr61, align 4, !dbg !18232
  %and62 = and i32 %40, 255, !dbg !18232
  %shl63 = shl i32 %and62, 24, !dbg !18232
  %41 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr64 = getelementptr i32, i32* %41, i64 15, !dbg !18232
  %42 = load i32, i32* %add.ptr64, align 4, !dbg !18232
  %and65 = and i32 %42, 65280, !dbg !18232
  %shl66 = shl i32 %and65, 8, !dbg !18232
  %or67 = or i32 %shl63, %shl66, !dbg !18232
  %43 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr68 = getelementptr i32, i32* %43, i64 15, !dbg !18232
  %44 = load i32, i32* %add.ptr68, align 4, !dbg !18232
  %and69 = and i32 %44, 16711680, !dbg !18232
  %shr70 = lshr i32 %and69, 8, !dbg !18232
  %or71 = or i32 %or67, %shr70, !dbg !18232
  %45 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr72 = getelementptr i32, i32* %45, i64 15, !dbg !18232
  %46 = load i32, i32* %add.ptr72, align 4, !dbg !18232
  %and73 = and i32 %46, -16777216, !dbg !18232
  %shr74 = lshr i32 %and73, 24, !dbg !18232
  %or75 = or i32 %or71, %shr74, !dbg !18232
  br label %cond.end79, !dbg !18232

cond.false76:                                     ; preds = %do.end58
  %47 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr77 = getelementptr i32, i32* %47, i64 15, !dbg !18232
  %48 = load i32, i32* %add.ptr77, align 4, !dbg !18232
  %call78 = call i32 @__fswab32(i32 %48) #10, !dbg !18232
  br label %cond.end79, !dbg !18232

cond.end79:                                       ; preds = %cond.false76, %cond.true60
  %cond80 = phi i32 [ %or75, %cond.true60 ], [ %call78, %cond.false76 ], !dbg !18232
  %and81 = and i32 %cond80, -256, !dbg !18232
  %49 = load i32, i32* %_v, align 4, !dbg !18232
  %and82 = and i32 %49, 255, !dbg !18232
  %shl83 = shl i32 %and82, 0, !dbg !18232
  %or84 = or i32 %and81, %shl83, !dbg !18232
  %50 = call i1 @llvm.is.constant.i32(i32 %or84), !dbg !18232
  br i1 %50, label %cond.true85, label %cond.false201, !dbg !18232

cond.true85:                                      ; preds = %cond.end79
  %51 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr86 = getelementptr i32, i32* %51, i64 15, !dbg !18232
  %52 = load i32, i32* %add.ptr86, align 4, !dbg !18232
  %53 = call i1 @llvm.is.constant.i32(i32 %52), !dbg !18232
  br i1 %53, label %cond.true87, label %cond.false103, !dbg !18232

cond.true87:                                      ; preds = %cond.true85
  %54 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr88 = getelementptr i32, i32* %54, i64 15, !dbg !18232
  %55 = load i32, i32* %add.ptr88, align 4, !dbg !18232
  %and89 = and i32 %55, 255, !dbg !18232
  %shl90 = shl i32 %and89, 24, !dbg !18232
  %56 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr91 = getelementptr i32, i32* %56, i64 15, !dbg !18232
  %57 = load i32, i32* %add.ptr91, align 4, !dbg !18232
  %and92 = and i32 %57, 65280, !dbg !18232
  %shl93 = shl i32 %and92, 8, !dbg !18232
  %or94 = or i32 %shl90, %shl93, !dbg !18232
  %58 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr95 = getelementptr i32, i32* %58, i64 15, !dbg !18232
  %59 = load i32, i32* %add.ptr95, align 4, !dbg !18232
  %and96 = and i32 %59, 16711680, !dbg !18232
  %shr97 = lshr i32 %and96, 8, !dbg !18232
  %or98 = or i32 %or94, %shr97, !dbg !18232
  %60 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr99 = getelementptr i32, i32* %60, i64 15, !dbg !18232
  %61 = load i32, i32* %add.ptr99, align 4, !dbg !18232
  %and100 = and i32 %61, -16777216, !dbg !18232
  %shr101 = lshr i32 %and100, 24, !dbg !18232
  %or102 = or i32 %or98, %shr101, !dbg !18232
  br label %cond.end106, !dbg !18232

cond.false103:                                    ; preds = %cond.true85
  %62 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr104 = getelementptr i32, i32* %62, i64 15, !dbg !18232
  %63 = load i32, i32* %add.ptr104, align 4, !dbg !18232
  %call105 = call i32 @__fswab32(i32 %63) #10, !dbg !18232
  br label %cond.end106, !dbg !18232

cond.end106:                                      ; preds = %cond.false103, %cond.true87
  %cond107 = phi i32 [ %or102, %cond.true87 ], [ %call105, %cond.false103 ], !dbg !18232
  %and108 = and i32 %cond107, -256, !dbg !18232
  %64 = load i32, i32* %_v, align 4, !dbg !18232
  %and109 = and i32 %64, 255, !dbg !18232
  %shl110 = shl i32 %and109, 0, !dbg !18232
  %or111 = or i32 %and108, %shl110, !dbg !18232
  %and112 = and i32 %or111, 255, !dbg !18232
  %shl113 = shl i32 %and112, 24, !dbg !18232
  %65 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr114 = getelementptr i32, i32* %65, i64 15, !dbg !18232
  %66 = load i32, i32* %add.ptr114, align 4, !dbg !18232
  %67 = call i1 @llvm.is.constant.i32(i32 %66), !dbg !18232
  br i1 %67, label %cond.true115, label %cond.false131, !dbg !18232

cond.true115:                                     ; preds = %cond.end106
  %68 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr116 = getelementptr i32, i32* %68, i64 15, !dbg !18232
  %69 = load i32, i32* %add.ptr116, align 4, !dbg !18232
  %and117 = and i32 %69, 255, !dbg !18232
  %shl118 = shl i32 %and117, 24, !dbg !18232
  %70 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr119 = getelementptr i32, i32* %70, i64 15, !dbg !18232
  %71 = load i32, i32* %add.ptr119, align 4, !dbg !18232
  %and120 = and i32 %71, 65280, !dbg !18232
  %shl121 = shl i32 %and120, 8, !dbg !18232
  %or122 = or i32 %shl118, %shl121, !dbg !18232
  %72 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr123 = getelementptr i32, i32* %72, i64 15, !dbg !18232
  %73 = load i32, i32* %add.ptr123, align 4, !dbg !18232
  %and124 = and i32 %73, 16711680, !dbg !18232
  %shr125 = lshr i32 %and124, 8, !dbg !18232
  %or126 = or i32 %or122, %shr125, !dbg !18232
  %74 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr127 = getelementptr i32, i32* %74, i64 15, !dbg !18232
  %75 = load i32, i32* %add.ptr127, align 4, !dbg !18232
  %and128 = and i32 %75, -16777216, !dbg !18232
  %shr129 = lshr i32 %and128, 24, !dbg !18232
  %or130 = or i32 %or126, %shr129, !dbg !18232
  br label %cond.end134, !dbg !18232

cond.false131:                                    ; preds = %cond.end106
  %76 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr132 = getelementptr i32, i32* %76, i64 15, !dbg !18232
  %77 = load i32, i32* %add.ptr132, align 4, !dbg !18232
  %call133 = call i32 @__fswab32(i32 %77) #10, !dbg !18232
  br label %cond.end134, !dbg !18232

cond.end134:                                      ; preds = %cond.false131, %cond.true115
  %cond135 = phi i32 [ %or130, %cond.true115 ], [ %call133, %cond.false131 ], !dbg !18232
  %and136 = and i32 %cond135, -256, !dbg !18232
  %78 = load i32, i32* %_v, align 4, !dbg !18232
  %and137 = and i32 %78, 255, !dbg !18232
  %shl138 = shl i32 %and137, 0, !dbg !18232
  %or139 = or i32 %and136, %shl138, !dbg !18232
  %and140 = and i32 %or139, 65280, !dbg !18232
  %shl141 = shl i32 %and140, 8, !dbg !18232
  %or142 = or i32 %shl113, %shl141, !dbg !18232
  %79 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr143 = getelementptr i32, i32* %79, i64 15, !dbg !18232
  %80 = load i32, i32* %add.ptr143, align 4, !dbg !18232
  %81 = call i1 @llvm.is.constant.i32(i32 %80), !dbg !18232
  br i1 %81, label %cond.true144, label %cond.false160, !dbg !18232

cond.true144:                                     ; preds = %cond.end134
  %82 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr145 = getelementptr i32, i32* %82, i64 15, !dbg !18232
  %83 = load i32, i32* %add.ptr145, align 4, !dbg !18232
  %and146 = and i32 %83, 255, !dbg !18232
  %shl147 = shl i32 %and146, 24, !dbg !18232
  %84 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr148 = getelementptr i32, i32* %84, i64 15, !dbg !18232
  %85 = load i32, i32* %add.ptr148, align 4, !dbg !18232
  %and149 = and i32 %85, 65280, !dbg !18232
  %shl150 = shl i32 %and149, 8, !dbg !18232
  %or151 = or i32 %shl147, %shl150, !dbg !18232
  %86 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr152 = getelementptr i32, i32* %86, i64 15, !dbg !18232
  %87 = load i32, i32* %add.ptr152, align 4, !dbg !18232
  %and153 = and i32 %87, 16711680, !dbg !18232
  %shr154 = lshr i32 %and153, 8, !dbg !18232
  %or155 = or i32 %or151, %shr154, !dbg !18232
  %88 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr156 = getelementptr i32, i32* %88, i64 15, !dbg !18232
  %89 = load i32, i32* %add.ptr156, align 4, !dbg !18232
  %and157 = and i32 %89, -16777216, !dbg !18232
  %shr158 = lshr i32 %and157, 24, !dbg !18232
  %or159 = or i32 %or155, %shr158, !dbg !18232
  br label %cond.end163, !dbg !18232

cond.false160:                                    ; preds = %cond.end134
  %90 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr161 = getelementptr i32, i32* %90, i64 15, !dbg !18232
  %91 = load i32, i32* %add.ptr161, align 4, !dbg !18232
  %call162 = call i32 @__fswab32(i32 %91) #10, !dbg !18232
  br label %cond.end163, !dbg !18232

cond.end163:                                      ; preds = %cond.false160, %cond.true144
  %cond164 = phi i32 [ %or159, %cond.true144 ], [ %call162, %cond.false160 ], !dbg !18232
  %and165 = and i32 %cond164, -256, !dbg !18232
  %92 = load i32, i32* %_v, align 4, !dbg !18232
  %and166 = and i32 %92, 255, !dbg !18232
  %shl167 = shl i32 %and166, 0, !dbg !18232
  %or168 = or i32 %and165, %shl167, !dbg !18232
  %and169 = and i32 %or168, 16711680, !dbg !18232
  %shr170 = lshr i32 %and169, 8, !dbg !18232
  %or171 = or i32 %or142, %shr170, !dbg !18232
  %93 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr172 = getelementptr i32, i32* %93, i64 15, !dbg !18232
  %94 = load i32, i32* %add.ptr172, align 4, !dbg !18232
  %95 = call i1 @llvm.is.constant.i32(i32 %94), !dbg !18232
  br i1 %95, label %cond.true173, label %cond.false189, !dbg !18232

cond.true173:                                     ; preds = %cond.end163
  %96 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr174 = getelementptr i32, i32* %96, i64 15, !dbg !18232
  %97 = load i32, i32* %add.ptr174, align 4, !dbg !18232
  %and175 = and i32 %97, 255, !dbg !18232
  %shl176 = shl i32 %and175, 24, !dbg !18232
  %98 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr177 = getelementptr i32, i32* %98, i64 15, !dbg !18232
  %99 = load i32, i32* %add.ptr177, align 4, !dbg !18232
  %and178 = and i32 %99, 65280, !dbg !18232
  %shl179 = shl i32 %and178, 8, !dbg !18232
  %or180 = or i32 %shl176, %shl179, !dbg !18232
  %100 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr181 = getelementptr i32, i32* %100, i64 15, !dbg !18232
  %101 = load i32, i32* %add.ptr181, align 4, !dbg !18232
  %and182 = and i32 %101, 16711680, !dbg !18232
  %shr183 = lshr i32 %and182, 8, !dbg !18232
  %or184 = or i32 %or180, %shr183, !dbg !18232
  %102 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr185 = getelementptr i32, i32* %102, i64 15, !dbg !18232
  %103 = load i32, i32* %add.ptr185, align 4, !dbg !18232
  %and186 = and i32 %103, -16777216, !dbg !18232
  %shr187 = lshr i32 %and186, 24, !dbg !18232
  %or188 = or i32 %or184, %shr187, !dbg !18232
  br label %cond.end192, !dbg !18232

cond.false189:                                    ; preds = %cond.end163
  %104 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr190 = getelementptr i32, i32* %104, i64 15, !dbg !18232
  %105 = load i32, i32* %add.ptr190, align 4, !dbg !18232
  %call191 = call i32 @__fswab32(i32 %105) #10, !dbg !18232
  br label %cond.end192, !dbg !18232

cond.end192:                                      ; preds = %cond.false189, %cond.true173
  %cond193 = phi i32 [ %or188, %cond.true173 ], [ %call191, %cond.false189 ], !dbg !18232
  %and194 = and i32 %cond193, -256, !dbg !18232
  %106 = load i32, i32* %_v, align 4, !dbg !18232
  %and195 = and i32 %106, 255, !dbg !18232
  %shl196 = shl i32 %and195, 0, !dbg !18232
  %or197 = or i32 %and194, %shl196, !dbg !18232
  %and198 = and i32 %or197, -16777216, !dbg !18232
  %shr199 = lshr i32 %and198, 24, !dbg !18232
  %or200 = or i32 %or171, %shr199, !dbg !18232
  br label %cond.end229, !dbg !18232

cond.false201:                                    ; preds = %cond.end79
  %107 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr202 = getelementptr i32, i32* %107, i64 15, !dbg !18232
  %108 = load i32, i32* %add.ptr202, align 4, !dbg !18232
  %109 = call i1 @llvm.is.constant.i32(i32 %108), !dbg !18232
  br i1 %109, label %cond.true203, label %cond.false219, !dbg !18232

cond.true203:                                     ; preds = %cond.false201
  %110 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr204 = getelementptr i32, i32* %110, i64 15, !dbg !18232
  %111 = load i32, i32* %add.ptr204, align 4, !dbg !18232
  %and205 = and i32 %111, 255, !dbg !18232
  %shl206 = shl i32 %and205, 24, !dbg !18232
  %112 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr207 = getelementptr i32, i32* %112, i64 15, !dbg !18232
  %113 = load i32, i32* %add.ptr207, align 4, !dbg !18232
  %and208 = and i32 %113, 65280, !dbg !18232
  %shl209 = shl i32 %and208, 8, !dbg !18232
  %or210 = or i32 %shl206, %shl209, !dbg !18232
  %114 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr211 = getelementptr i32, i32* %114, i64 15, !dbg !18232
  %115 = load i32, i32* %add.ptr211, align 4, !dbg !18232
  %and212 = and i32 %115, 16711680, !dbg !18232
  %shr213 = lshr i32 %and212, 8, !dbg !18232
  %or214 = or i32 %or210, %shr213, !dbg !18232
  %116 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr215 = getelementptr i32, i32* %116, i64 15, !dbg !18232
  %117 = load i32, i32* %add.ptr215, align 4, !dbg !18232
  %and216 = and i32 %117, -16777216, !dbg !18232
  %shr217 = lshr i32 %and216, 24, !dbg !18232
  %or218 = or i32 %or214, %shr217, !dbg !18232
  br label %cond.end222, !dbg !18232

cond.false219:                                    ; preds = %cond.false201
  %118 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr220 = getelementptr i32, i32* %118, i64 15, !dbg !18232
  %119 = load i32, i32* %add.ptr220, align 4, !dbg !18232
  %call221 = call i32 @__fswab32(i32 %119) #10, !dbg !18232
  br label %cond.end222, !dbg !18232

cond.end222:                                      ; preds = %cond.false219, %cond.true203
  %cond223 = phi i32 [ %or218, %cond.true203 ], [ %call221, %cond.false219 ], !dbg !18232
  %and224 = and i32 %cond223, -256, !dbg !18232
  %120 = load i32, i32* %_v, align 4, !dbg !18232
  %and225 = and i32 %120, 255, !dbg !18232
  %shl226 = shl i32 %and225, 0, !dbg !18232
  %or227 = or i32 %and224, %shl226, !dbg !18232
  %call228 = call i32 @__fswab32(i32 %or227) #10, !dbg !18232
  br label %cond.end229, !dbg !18232

cond.end229:                                      ; preds = %cond.end222, %cond.end192
  %cond230 = phi i32 [ %or200, %cond.end192 ], [ %call228, %cond.end222 ], !dbg !18232
  %121 = load i32*, i32** %flow_group_in, align 8, !dbg !18232
  %add.ptr231 = getelementptr i32, i32* %121, i64 15, !dbg !18232
  store i32 %cond230, i32* %add.ptr231, align 4, !dbg !18232
  br label %do.end232, !dbg !18232

do.end232:                                        ; preds = %cond.end229
  %122 = load i32*, i32** %flow_group_in, align 8, !dbg !18235
  %123 = bitcast i32* %122 to i8*, !dbg !18235
  %add.ptr233 = getelementptr i8, i8* %123, i64 64, !dbg !18235
  store i8* %add.ptr233, i8** %match_criteria, align 8, !dbg !18236
  %124 = load i8*, i8** %match_criteria, align 8, !dbg !18237
  %add.ptr234 = getelementptr i8, i8* %124, i64 8, !dbg !18237
  store i8* %add.ptr234, i8** %dmac, align 8, !dbg !18238
  br label %do.body235, !dbg !18239

do.body235:                                       ; preds = %do.end232
  call void @llvm.dbg.declare(metadata i32* %_v236, metadata !18240, metadata !DIExpression()), !dbg !18242
  store i32 0, i32* %_v236, align 4, !dbg !18242
  br label %do.body237, !dbg !18242

do.body237:                                       ; preds = %do.body235
  br label %do.end238, !dbg !18243

do.end238:                                        ; preds = %do.body237
  %125 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr239 = getelementptr i32, i32* %125, i64 7, !dbg !18242
  %126 = load i32, i32* %add.ptr239, align 4, !dbg !18242
  %127 = call i1 @llvm.is.constant.i32(i32 %126), !dbg !18242
  br i1 %127, label %cond.true240, label %cond.false256, !dbg !18242

cond.true240:                                     ; preds = %do.end238
  %128 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr241 = getelementptr i32, i32* %128, i64 7, !dbg !18242
  %129 = load i32, i32* %add.ptr241, align 4, !dbg !18242
  %and242 = and i32 %129, 255, !dbg !18242
  %shl243 = shl i32 %and242, 24, !dbg !18242
  %130 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr244 = getelementptr i32, i32* %130, i64 7, !dbg !18242
  %131 = load i32, i32* %add.ptr244, align 4, !dbg !18242
  %and245 = and i32 %131, 65280, !dbg !18242
  %shl246 = shl i32 %and245, 8, !dbg !18242
  %or247 = or i32 %shl243, %shl246, !dbg !18242
  %132 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr248 = getelementptr i32, i32* %132, i64 7, !dbg !18242
  %133 = load i32, i32* %add.ptr248, align 4, !dbg !18242
  %and249 = and i32 %133, 16711680, !dbg !18242
  %shr250 = lshr i32 %and249, 8, !dbg !18242
  %or251 = or i32 %or247, %shr250, !dbg !18242
  %134 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr252 = getelementptr i32, i32* %134, i64 7, !dbg !18242
  %135 = load i32, i32* %add.ptr252, align 4, !dbg !18242
  %and253 = and i32 %135, -16777216, !dbg !18242
  %shr254 = lshr i32 %and253, 24, !dbg !18242
  %or255 = or i32 %or251, %shr254, !dbg !18242
  br label %cond.end259, !dbg !18242

cond.false256:                                    ; preds = %do.end238
  %136 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr257 = getelementptr i32, i32* %136, i64 7, !dbg !18242
  %137 = load i32, i32* %add.ptr257, align 4, !dbg !18242
  %call258 = call i32 @__fswab32(i32 %137) #10, !dbg !18242
  br label %cond.end259, !dbg !18242

cond.end259:                                      ; preds = %cond.false256, %cond.true240
  %cond260 = phi i32 [ %or255, %cond.true240 ], [ %call258, %cond.false256 ], !dbg !18242
  %and261 = and i32 %cond260, 0, !dbg !18242
  %138 = load i32, i32* %_v236, align 4, !dbg !18242
  %shl262 = shl i32 %138, 0, !dbg !18242
  %or263 = or i32 %and261, %shl262, !dbg !18242
  %139 = call i1 @llvm.is.constant.i32(i32 %or263), !dbg !18242
  br i1 %139, label %cond.true264, label %cond.false376, !dbg !18242

cond.true264:                                     ; preds = %cond.end259
  %140 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr265 = getelementptr i32, i32* %140, i64 7, !dbg !18242
  %141 = load i32, i32* %add.ptr265, align 4, !dbg !18242
  %142 = call i1 @llvm.is.constant.i32(i32 %141), !dbg !18242
  br i1 %142, label %cond.true266, label %cond.false282, !dbg !18242

cond.true266:                                     ; preds = %cond.true264
  %143 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr267 = getelementptr i32, i32* %143, i64 7, !dbg !18242
  %144 = load i32, i32* %add.ptr267, align 4, !dbg !18242
  %and268 = and i32 %144, 255, !dbg !18242
  %shl269 = shl i32 %and268, 24, !dbg !18242
  %145 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr270 = getelementptr i32, i32* %145, i64 7, !dbg !18242
  %146 = load i32, i32* %add.ptr270, align 4, !dbg !18242
  %and271 = and i32 %146, 65280, !dbg !18242
  %shl272 = shl i32 %and271, 8, !dbg !18242
  %or273 = or i32 %shl269, %shl272, !dbg !18242
  %147 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr274 = getelementptr i32, i32* %147, i64 7, !dbg !18242
  %148 = load i32, i32* %add.ptr274, align 4, !dbg !18242
  %and275 = and i32 %148, 16711680, !dbg !18242
  %shr276 = lshr i32 %and275, 8, !dbg !18242
  %or277 = or i32 %or273, %shr276, !dbg !18242
  %149 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr278 = getelementptr i32, i32* %149, i64 7, !dbg !18242
  %150 = load i32, i32* %add.ptr278, align 4, !dbg !18242
  %and279 = and i32 %150, -16777216, !dbg !18242
  %shr280 = lshr i32 %and279, 24, !dbg !18242
  %or281 = or i32 %or277, %shr280, !dbg !18242
  br label %cond.end285, !dbg !18242

cond.false282:                                    ; preds = %cond.true264
  %151 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr283 = getelementptr i32, i32* %151, i64 7, !dbg !18242
  %152 = load i32, i32* %add.ptr283, align 4, !dbg !18242
  %call284 = call i32 @__fswab32(i32 %152) #10, !dbg !18242
  br label %cond.end285, !dbg !18242

cond.end285:                                      ; preds = %cond.false282, %cond.true266
  %cond286 = phi i32 [ %or281, %cond.true266 ], [ %call284, %cond.false282 ], !dbg !18242
  %and287 = and i32 %cond286, 0, !dbg !18242
  %153 = load i32, i32* %_v236, align 4, !dbg !18242
  %shl288 = shl i32 %153, 0, !dbg !18242
  %or289 = or i32 %and287, %shl288, !dbg !18242
  %and290 = and i32 %or289, 255, !dbg !18242
  %shl291 = shl i32 %and290, 24, !dbg !18242
  %154 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr292 = getelementptr i32, i32* %154, i64 7, !dbg !18242
  %155 = load i32, i32* %add.ptr292, align 4, !dbg !18242
  %156 = call i1 @llvm.is.constant.i32(i32 %155), !dbg !18242
  br i1 %156, label %cond.true293, label %cond.false309, !dbg !18242

cond.true293:                                     ; preds = %cond.end285
  %157 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr294 = getelementptr i32, i32* %157, i64 7, !dbg !18242
  %158 = load i32, i32* %add.ptr294, align 4, !dbg !18242
  %and295 = and i32 %158, 255, !dbg !18242
  %shl296 = shl i32 %and295, 24, !dbg !18242
  %159 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr297 = getelementptr i32, i32* %159, i64 7, !dbg !18242
  %160 = load i32, i32* %add.ptr297, align 4, !dbg !18242
  %and298 = and i32 %160, 65280, !dbg !18242
  %shl299 = shl i32 %and298, 8, !dbg !18242
  %or300 = or i32 %shl296, %shl299, !dbg !18242
  %161 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr301 = getelementptr i32, i32* %161, i64 7, !dbg !18242
  %162 = load i32, i32* %add.ptr301, align 4, !dbg !18242
  %and302 = and i32 %162, 16711680, !dbg !18242
  %shr303 = lshr i32 %and302, 8, !dbg !18242
  %or304 = or i32 %or300, %shr303, !dbg !18242
  %163 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr305 = getelementptr i32, i32* %163, i64 7, !dbg !18242
  %164 = load i32, i32* %add.ptr305, align 4, !dbg !18242
  %and306 = and i32 %164, -16777216, !dbg !18242
  %shr307 = lshr i32 %and306, 24, !dbg !18242
  %or308 = or i32 %or304, %shr307, !dbg !18242
  br label %cond.end312, !dbg !18242

cond.false309:                                    ; preds = %cond.end285
  %165 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr310 = getelementptr i32, i32* %165, i64 7, !dbg !18242
  %166 = load i32, i32* %add.ptr310, align 4, !dbg !18242
  %call311 = call i32 @__fswab32(i32 %166) #10, !dbg !18242
  br label %cond.end312, !dbg !18242

cond.end312:                                      ; preds = %cond.false309, %cond.true293
  %cond313 = phi i32 [ %or308, %cond.true293 ], [ %call311, %cond.false309 ], !dbg !18242
  %and314 = and i32 %cond313, 0, !dbg !18242
  %167 = load i32, i32* %_v236, align 4, !dbg !18242
  %shl315 = shl i32 %167, 0, !dbg !18242
  %or316 = or i32 %and314, %shl315, !dbg !18242
  %and317 = and i32 %or316, 65280, !dbg !18242
  %shl318 = shl i32 %and317, 8, !dbg !18242
  %or319 = or i32 %shl291, %shl318, !dbg !18242
  %168 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr320 = getelementptr i32, i32* %168, i64 7, !dbg !18242
  %169 = load i32, i32* %add.ptr320, align 4, !dbg !18242
  %170 = call i1 @llvm.is.constant.i32(i32 %169), !dbg !18242
  br i1 %170, label %cond.true321, label %cond.false337, !dbg !18242

cond.true321:                                     ; preds = %cond.end312
  %171 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr322 = getelementptr i32, i32* %171, i64 7, !dbg !18242
  %172 = load i32, i32* %add.ptr322, align 4, !dbg !18242
  %and323 = and i32 %172, 255, !dbg !18242
  %shl324 = shl i32 %and323, 24, !dbg !18242
  %173 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr325 = getelementptr i32, i32* %173, i64 7, !dbg !18242
  %174 = load i32, i32* %add.ptr325, align 4, !dbg !18242
  %and326 = and i32 %174, 65280, !dbg !18242
  %shl327 = shl i32 %and326, 8, !dbg !18242
  %or328 = or i32 %shl324, %shl327, !dbg !18242
  %175 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr329 = getelementptr i32, i32* %175, i64 7, !dbg !18242
  %176 = load i32, i32* %add.ptr329, align 4, !dbg !18242
  %and330 = and i32 %176, 16711680, !dbg !18242
  %shr331 = lshr i32 %and330, 8, !dbg !18242
  %or332 = or i32 %or328, %shr331, !dbg !18242
  %177 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr333 = getelementptr i32, i32* %177, i64 7, !dbg !18242
  %178 = load i32, i32* %add.ptr333, align 4, !dbg !18242
  %and334 = and i32 %178, -16777216, !dbg !18242
  %shr335 = lshr i32 %and334, 24, !dbg !18242
  %or336 = or i32 %or332, %shr335, !dbg !18242
  br label %cond.end340, !dbg !18242

cond.false337:                                    ; preds = %cond.end312
  %179 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr338 = getelementptr i32, i32* %179, i64 7, !dbg !18242
  %180 = load i32, i32* %add.ptr338, align 4, !dbg !18242
  %call339 = call i32 @__fswab32(i32 %180) #10, !dbg !18242
  br label %cond.end340, !dbg !18242

cond.end340:                                      ; preds = %cond.false337, %cond.true321
  %cond341 = phi i32 [ %or336, %cond.true321 ], [ %call339, %cond.false337 ], !dbg !18242
  %and342 = and i32 %cond341, 0, !dbg !18242
  %181 = load i32, i32* %_v236, align 4, !dbg !18242
  %shl343 = shl i32 %181, 0, !dbg !18242
  %or344 = or i32 %and342, %shl343, !dbg !18242
  %and345 = and i32 %or344, 16711680, !dbg !18242
  %shr346 = lshr i32 %and345, 8, !dbg !18242
  %or347 = or i32 %or319, %shr346, !dbg !18242
  %182 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr348 = getelementptr i32, i32* %182, i64 7, !dbg !18242
  %183 = load i32, i32* %add.ptr348, align 4, !dbg !18242
  %184 = call i1 @llvm.is.constant.i32(i32 %183), !dbg !18242
  br i1 %184, label %cond.true349, label %cond.false365, !dbg !18242

cond.true349:                                     ; preds = %cond.end340
  %185 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr350 = getelementptr i32, i32* %185, i64 7, !dbg !18242
  %186 = load i32, i32* %add.ptr350, align 4, !dbg !18242
  %and351 = and i32 %186, 255, !dbg !18242
  %shl352 = shl i32 %and351, 24, !dbg !18242
  %187 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr353 = getelementptr i32, i32* %187, i64 7, !dbg !18242
  %188 = load i32, i32* %add.ptr353, align 4, !dbg !18242
  %and354 = and i32 %188, 65280, !dbg !18242
  %shl355 = shl i32 %and354, 8, !dbg !18242
  %or356 = or i32 %shl352, %shl355, !dbg !18242
  %189 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr357 = getelementptr i32, i32* %189, i64 7, !dbg !18242
  %190 = load i32, i32* %add.ptr357, align 4, !dbg !18242
  %and358 = and i32 %190, 16711680, !dbg !18242
  %shr359 = lshr i32 %and358, 8, !dbg !18242
  %or360 = or i32 %or356, %shr359, !dbg !18242
  %191 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr361 = getelementptr i32, i32* %191, i64 7, !dbg !18242
  %192 = load i32, i32* %add.ptr361, align 4, !dbg !18242
  %and362 = and i32 %192, -16777216, !dbg !18242
  %shr363 = lshr i32 %and362, 24, !dbg !18242
  %or364 = or i32 %or360, %shr363, !dbg !18242
  br label %cond.end368, !dbg !18242

cond.false365:                                    ; preds = %cond.end340
  %193 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr366 = getelementptr i32, i32* %193, i64 7, !dbg !18242
  %194 = load i32, i32* %add.ptr366, align 4, !dbg !18242
  %call367 = call i32 @__fswab32(i32 %194) #10, !dbg !18242
  br label %cond.end368, !dbg !18242

cond.end368:                                      ; preds = %cond.false365, %cond.true349
  %cond369 = phi i32 [ %or364, %cond.true349 ], [ %call367, %cond.false365 ], !dbg !18242
  %and370 = and i32 %cond369, 0, !dbg !18242
  %195 = load i32, i32* %_v236, align 4, !dbg !18242
  %shl371 = shl i32 %195, 0, !dbg !18242
  %or372 = or i32 %and370, %shl371, !dbg !18242
  %and373 = and i32 %or372, -16777216, !dbg !18242
  %shr374 = lshr i32 %and373, 24, !dbg !18242
  %or375 = or i32 %or347, %shr374, !dbg !18242
  br label %cond.end403, !dbg !18242

cond.false376:                                    ; preds = %cond.end259
  %196 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr377 = getelementptr i32, i32* %196, i64 7, !dbg !18242
  %197 = load i32, i32* %add.ptr377, align 4, !dbg !18242
  %198 = call i1 @llvm.is.constant.i32(i32 %197), !dbg !18242
  br i1 %198, label %cond.true378, label %cond.false394, !dbg !18242

cond.true378:                                     ; preds = %cond.false376
  %199 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr379 = getelementptr i32, i32* %199, i64 7, !dbg !18242
  %200 = load i32, i32* %add.ptr379, align 4, !dbg !18242
  %and380 = and i32 %200, 255, !dbg !18242
  %shl381 = shl i32 %and380, 24, !dbg !18242
  %201 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr382 = getelementptr i32, i32* %201, i64 7, !dbg !18242
  %202 = load i32, i32* %add.ptr382, align 4, !dbg !18242
  %and383 = and i32 %202, 65280, !dbg !18242
  %shl384 = shl i32 %and383, 8, !dbg !18242
  %or385 = or i32 %shl381, %shl384, !dbg !18242
  %203 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr386 = getelementptr i32, i32* %203, i64 7, !dbg !18242
  %204 = load i32, i32* %add.ptr386, align 4, !dbg !18242
  %and387 = and i32 %204, 16711680, !dbg !18242
  %shr388 = lshr i32 %and387, 8, !dbg !18242
  %or389 = or i32 %or385, %shr388, !dbg !18242
  %205 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr390 = getelementptr i32, i32* %205, i64 7, !dbg !18242
  %206 = load i32, i32* %add.ptr390, align 4, !dbg !18242
  %and391 = and i32 %206, -16777216, !dbg !18242
  %shr392 = lshr i32 %and391, 24, !dbg !18242
  %or393 = or i32 %or389, %shr392, !dbg !18242
  br label %cond.end397, !dbg !18242

cond.false394:                                    ; preds = %cond.false376
  %207 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr395 = getelementptr i32, i32* %207, i64 7, !dbg !18242
  %208 = load i32, i32* %add.ptr395, align 4, !dbg !18242
  %call396 = call i32 @__fswab32(i32 %208) #10, !dbg !18242
  br label %cond.end397, !dbg !18242

cond.end397:                                      ; preds = %cond.false394, %cond.true378
  %cond398 = phi i32 [ %or393, %cond.true378 ], [ %call396, %cond.false394 ], !dbg !18242
  %and399 = and i32 %cond398, 0, !dbg !18242
  %209 = load i32, i32* %_v236, align 4, !dbg !18242
  %shl400 = shl i32 %209, 0, !dbg !18242
  %or401 = or i32 %and399, %shl400, !dbg !18242
  %call402 = call i32 @__fswab32(i32 %or401) #10, !dbg !18242
  br label %cond.end403, !dbg !18242

cond.end403:                                      ; preds = %cond.end397, %cond.end368
  %cond404 = phi i32 [ %or375, %cond.end368 ], [ %call402, %cond.end397 ], !dbg !18242
  %210 = load i32*, i32** %flow_group_in, align 8, !dbg !18242
  %add.ptr405 = getelementptr i32, i32* %210, i64 7, !dbg !18242
  store i32 %cond404, i32* %add.ptr405, align 4, !dbg !18242
  br label %do.end406, !dbg !18242

do.end406:                                        ; preds = %cond.end403
  br label %do.body407, !dbg !18245

do.body407:                                       ; preds = %do.end406
  call void @llvm.dbg.declare(metadata i32* %_v408, metadata !18246, metadata !DIExpression()), !dbg !18248
  %211 = load i32, i32* %table_size, align 4, !dbg !18248
  %sub = sub i32 %211, 3, !dbg !18248
  store i32 %sub, i32* %_v408, align 4, !dbg !18248
  br label %do.body409, !dbg !18248

do.body409:                                       ; preds = %do.body407
  br label %do.end410, !dbg !18249

do.end410:                                        ; preds = %do.body409
  %212 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr411 = getelementptr i32, i32* %212, i64 9, !dbg !18248
  %213 = load i32, i32* %add.ptr411, align 4, !dbg !18248
  %214 = call i1 @llvm.is.constant.i32(i32 %213), !dbg !18248
  br i1 %214, label %cond.true412, label %cond.false428, !dbg !18248

cond.true412:                                     ; preds = %do.end410
  %215 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr413 = getelementptr i32, i32* %215, i64 9, !dbg !18248
  %216 = load i32, i32* %add.ptr413, align 4, !dbg !18248
  %and414 = and i32 %216, 255, !dbg !18248
  %shl415 = shl i32 %and414, 24, !dbg !18248
  %217 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr416 = getelementptr i32, i32* %217, i64 9, !dbg !18248
  %218 = load i32, i32* %add.ptr416, align 4, !dbg !18248
  %and417 = and i32 %218, 65280, !dbg !18248
  %shl418 = shl i32 %and417, 8, !dbg !18248
  %or419 = or i32 %shl415, %shl418, !dbg !18248
  %219 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr420 = getelementptr i32, i32* %219, i64 9, !dbg !18248
  %220 = load i32, i32* %add.ptr420, align 4, !dbg !18248
  %and421 = and i32 %220, 16711680, !dbg !18248
  %shr422 = lshr i32 %and421, 8, !dbg !18248
  %or423 = or i32 %or419, %shr422, !dbg !18248
  %221 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr424 = getelementptr i32, i32* %221, i64 9, !dbg !18248
  %222 = load i32, i32* %add.ptr424, align 4, !dbg !18248
  %and425 = and i32 %222, -16777216, !dbg !18248
  %shr426 = lshr i32 %and425, 24, !dbg !18248
  %or427 = or i32 %or423, %shr426, !dbg !18248
  br label %cond.end431, !dbg !18248

cond.false428:                                    ; preds = %do.end410
  %223 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr429 = getelementptr i32, i32* %223, i64 9, !dbg !18248
  %224 = load i32, i32* %add.ptr429, align 4, !dbg !18248
  %call430 = call i32 @__fswab32(i32 %224) #10, !dbg !18248
  br label %cond.end431, !dbg !18248

cond.end431:                                      ; preds = %cond.false428, %cond.true412
  %cond432 = phi i32 [ %or427, %cond.true412 ], [ %call430, %cond.false428 ], !dbg !18248
  %and433 = and i32 %cond432, 0, !dbg !18248
  %225 = load i32, i32* %_v408, align 4, !dbg !18248
  %shl434 = shl i32 %225, 0, !dbg !18248
  %or435 = or i32 %and433, %shl434, !dbg !18248
  %226 = call i1 @llvm.is.constant.i32(i32 %or435), !dbg !18248
  br i1 %226, label %cond.true436, label %cond.false548, !dbg !18248

cond.true436:                                     ; preds = %cond.end431
  %227 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr437 = getelementptr i32, i32* %227, i64 9, !dbg !18248
  %228 = load i32, i32* %add.ptr437, align 4, !dbg !18248
  %229 = call i1 @llvm.is.constant.i32(i32 %228), !dbg !18248
  br i1 %229, label %cond.true438, label %cond.false454, !dbg !18248

cond.true438:                                     ; preds = %cond.true436
  %230 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr439 = getelementptr i32, i32* %230, i64 9, !dbg !18248
  %231 = load i32, i32* %add.ptr439, align 4, !dbg !18248
  %and440 = and i32 %231, 255, !dbg !18248
  %shl441 = shl i32 %and440, 24, !dbg !18248
  %232 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr442 = getelementptr i32, i32* %232, i64 9, !dbg !18248
  %233 = load i32, i32* %add.ptr442, align 4, !dbg !18248
  %and443 = and i32 %233, 65280, !dbg !18248
  %shl444 = shl i32 %and443, 8, !dbg !18248
  %or445 = or i32 %shl441, %shl444, !dbg !18248
  %234 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr446 = getelementptr i32, i32* %234, i64 9, !dbg !18248
  %235 = load i32, i32* %add.ptr446, align 4, !dbg !18248
  %and447 = and i32 %235, 16711680, !dbg !18248
  %shr448 = lshr i32 %and447, 8, !dbg !18248
  %or449 = or i32 %or445, %shr448, !dbg !18248
  %236 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr450 = getelementptr i32, i32* %236, i64 9, !dbg !18248
  %237 = load i32, i32* %add.ptr450, align 4, !dbg !18248
  %and451 = and i32 %237, -16777216, !dbg !18248
  %shr452 = lshr i32 %and451, 24, !dbg !18248
  %or453 = or i32 %or449, %shr452, !dbg !18248
  br label %cond.end457, !dbg !18248

cond.false454:                                    ; preds = %cond.true436
  %238 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr455 = getelementptr i32, i32* %238, i64 9, !dbg !18248
  %239 = load i32, i32* %add.ptr455, align 4, !dbg !18248
  %call456 = call i32 @__fswab32(i32 %239) #10, !dbg !18248
  br label %cond.end457, !dbg !18248

cond.end457:                                      ; preds = %cond.false454, %cond.true438
  %cond458 = phi i32 [ %or453, %cond.true438 ], [ %call456, %cond.false454 ], !dbg !18248
  %and459 = and i32 %cond458, 0, !dbg !18248
  %240 = load i32, i32* %_v408, align 4, !dbg !18248
  %shl460 = shl i32 %240, 0, !dbg !18248
  %or461 = or i32 %and459, %shl460, !dbg !18248
  %and462 = and i32 %or461, 255, !dbg !18248
  %shl463 = shl i32 %and462, 24, !dbg !18248
  %241 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr464 = getelementptr i32, i32* %241, i64 9, !dbg !18248
  %242 = load i32, i32* %add.ptr464, align 4, !dbg !18248
  %243 = call i1 @llvm.is.constant.i32(i32 %242), !dbg !18248
  br i1 %243, label %cond.true465, label %cond.false481, !dbg !18248

cond.true465:                                     ; preds = %cond.end457
  %244 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr466 = getelementptr i32, i32* %244, i64 9, !dbg !18248
  %245 = load i32, i32* %add.ptr466, align 4, !dbg !18248
  %and467 = and i32 %245, 255, !dbg !18248
  %shl468 = shl i32 %and467, 24, !dbg !18248
  %246 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr469 = getelementptr i32, i32* %246, i64 9, !dbg !18248
  %247 = load i32, i32* %add.ptr469, align 4, !dbg !18248
  %and470 = and i32 %247, 65280, !dbg !18248
  %shl471 = shl i32 %and470, 8, !dbg !18248
  %or472 = or i32 %shl468, %shl471, !dbg !18248
  %248 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr473 = getelementptr i32, i32* %248, i64 9, !dbg !18248
  %249 = load i32, i32* %add.ptr473, align 4, !dbg !18248
  %and474 = and i32 %249, 16711680, !dbg !18248
  %shr475 = lshr i32 %and474, 8, !dbg !18248
  %or476 = or i32 %or472, %shr475, !dbg !18248
  %250 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr477 = getelementptr i32, i32* %250, i64 9, !dbg !18248
  %251 = load i32, i32* %add.ptr477, align 4, !dbg !18248
  %and478 = and i32 %251, -16777216, !dbg !18248
  %shr479 = lshr i32 %and478, 24, !dbg !18248
  %or480 = or i32 %or476, %shr479, !dbg !18248
  br label %cond.end484, !dbg !18248

cond.false481:                                    ; preds = %cond.end457
  %252 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr482 = getelementptr i32, i32* %252, i64 9, !dbg !18248
  %253 = load i32, i32* %add.ptr482, align 4, !dbg !18248
  %call483 = call i32 @__fswab32(i32 %253) #10, !dbg !18248
  br label %cond.end484, !dbg !18248

cond.end484:                                      ; preds = %cond.false481, %cond.true465
  %cond485 = phi i32 [ %or480, %cond.true465 ], [ %call483, %cond.false481 ], !dbg !18248
  %and486 = and i32 %cond485, 0, !dbg !18248
  %254 = load i32, i32* %_v408, align 4, !dbg !18248
  %shl487 = shl i32 %254, 0, !dbg !18248
  %or488 = or i32 %and486, %shl487, !dbg !18248
  %and489 = and i32 %or488, 65280, !dbg !18248
  %shl490 = shl i32 %and489, 8, !dbg !18248
  %or491 = or i32 %shl463, %shl490, !dbg !18248
  %255 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr492 = getelementptr i32, i32* %255, i64 9, !dbg !18248
  %256 = load i32, i32* %add.ptr492, align 4, !dbg !18248
  %257 = call i1 @llvm.is.constant.i32(i32 %256), !dbg !18248
  br i1 %257, label %cond.true493, label %cond.false509, !dbg !18248

cond.true493:                                     ; preds = %cond.end484
  %258 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr494 = getelementptr i32, i32* %258, i64 9, !dbg !18248
  %259 = load i32, i32* %add.ptr494, align 4, !dbg !18248
  %and495 = and i32 %259, 255, !dbg !18248
  %shl496 = shl i32 %and495, 24, !dbg !18248
  %260 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr497 = getelementptr i32, i32* %260, i64 9, !dbg !18248
  %261 = load i32, i32* %add.ptr497, align 4, !dbg !18248
  %and498 = and i32 %261, 65280, !dbg !18248
  %shl499 = shl i32 %and498, 8, !dbg !18248
  %or500 = or i32 %shl496, %shl499, !dbg !18248
  %262 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr501 = getelementptr i32, i32* %262, i64 9, !dbg !18248
  %263 = load i32, i32* %add.ptr501, align 4, !dbg !18248
  %and502 = and i32 %263, 16711680, !dbg !18248
  %shr503 = lshr i32 %and502, 8, !dbg !18248
  %or504 = or i32 %or500, %shr503, !dbg !18248
  %264 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr505 = getelementptr i32, i32* %264, i64 9, !dbg !18248
  %265 = load i32, i32* %add.ptr505, align 4, !dbg !18248
  %and506 = and i32 %265, -16777216, !dbg !18248
  %shr507 = lshr i32 %and506, 24, !dbg !18248
  %or508 = or i32 %or504, %shr507, !dbg !18248
  br label %cond.end512, !dbg !18248

cond.false509:                                    ; preds = %cond.end484
  %266 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr510 = getelementptr i32, i32* %266, i64 9, !dbg !18248
  %267 = load i32, i32* %add.ptr510, align 4, !dbg !18248
  %call511 = call i32 @__fswab32(i32 %267) #10, !dbg !18248
  br label %cond.end512, !dbg !18248

cond.end512:                                      ; preds = %cond.false509, %cond.true493
  %cond513 = phi i32 [ %or508, %cond.true493 ], [ %call511, %cond.false509 ], !dbg !18248
  %and514 = and i32 %cond513, 0, !dbg !18248
  %268 = load i32, i32* %_v408, align 4, !dbg !18248
  %shl515 = shl i32 %268, 0, !dbg !18248
  %or516 = or i32 %and514, %shl515, !dbg !18248
  %and517 = and i32 %or516, 16711680, !dbg !18248
  %shr518 = lshr i32 %and517, 8, !dbg !18248
  %or519 = or i32 %or491, %shr518, !dbg !18248
  %269 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr520 = getelementptr i32, i32* %269, i64 9, !dbg !18248
  %270 = load i32, i32* %add.ptr520, align 4, !dbg !18248
  %271 = call i1 @llvm.is.constant.i32(i32 %270), !dbg !18248
  br i1 %271, label %cond.true521, label %cond.false537, !dbg !18248

cond.true521:                                     ; preds = %cond.end512
  %272 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr522 = getelementptr i32, i32* %272, i64 9, !dbg !18248
  %273 = load i32, i32* %add.ptr522, align 4, !dbg !18248
  %and523 = and i32 %273, 255, !dbg !18248
  %shl524 = shl i32 %and523, 24, !dbg !18248
  %274 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr525 = getelementptr i32, i32* %274, i64 9, !dbg !18248
  %275 = load i32, i32* %add.ptr525, align 4, !dbg !18248
  %and526 = and i32 %275, 65280, !dbg !18248
  %shl527 = shl i32 %and526, 8, !dbg !18248
  %or528 = or i32 %shl524, %shl527, !dbg !18248
  %276 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr529 = getelementptr i32, i32* %276, i64 9, !dbg !18248
  %277 = load i32, i32* %add.ptr529, align 4, !dbg !18248
  %and530 = and i32 %277, 16711680, !dbg !18248
  %shr531 = lshr i32 %and530, 8, !dbg !18248
  %or532 = or i32 %or528, %shr531, !dbg !18248
  %278 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr533 = getelementptr i32, i32* %278, i64 9, !dbg !18248
  %279 = load i32, i32* %add.ptr533, align 4, !dbg !18248
  %and534 = and i32 %279, -16777216, !dbg !18248
  %shr535 = lshr i32 %and534, 24, !dbg !18248
  %or536 = or i32 %or532, %shr535, !dbg !18248
  br label %cond.end540, !dbg !18248

cond.false537:                                    ; preds = %cond.end512
  %280 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr538 = getelementptr i32, i32* %280, i64 9, !dbg !18248
  %281 = load i32, i32* %add.ptr538, align 4, !dbg !18248
  %call539 = call i32 @__fswab32(i32 %281) #10, !dbg !18248
  br label %cond.end540, !dbg !18248

cond.end540:                                      ; preds = %cond.false537, %cond.true521
  %cond541 = phi i32 [ %or536, %cond.true521 ], [ %call539, %cond.false537 ], !dbg !18248
  %and542 = and i32 %cond541, 0, !dbg !18248
  %282 = load i32, i32* %_v408, align 4, !dbg !18248
  %shl543 = shl i32 %282, 0, !dbg !18248
  %or544 = or i32 %and542, %shl543, !dbg !18248
  %and545 = and i32 %or544, -16777216, !dbg !18248
  %shr546 = lshr i32 %and545, 24, !dbg !18248
  %or547 = or i32 %or519, %shr546, !dbg !18248
  br label %cond.end575, !dbg !18248

cond.false548:                                    ; preds = %cond.end431
  %283 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr549 = getelementptr i32, i32* %283, i64 9, !dbg !18248
  %284 = load i32, i32* %add.ptr549, align 4, !dbg !18248
  %285 = call i1 @llvm.is.constant.i32(i32 %284), !dbg !18248
  br i1 %285, label %cond.true550, label %cond.false566, !dbg !18248

cond.true550:                                     ; preds = %cond.false548
  %286 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr551 = getelementptr i32, i32* %286, i64 9, !dbg !18248
  %287 = load i32, i32* %add.ptr551, align 4, !dbg !18248
  %and552 = and i32 %287, 255, !dbg !18248
  %shl553 = shl i32 %and552, 24, !dbg !18248
  %288 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr554 = getelementptr i32, i32* %288, i64 9, !dbg !18248
  %289 = load i32, i32* %add.ptr554, align 4, !dbg !18248
  %and555 = and i32 %289, 65280, !dbg !18248
  %shl556 = shl i32 %and555, 8, !dbg !18248
  %or557 = or i32 %shl553, %shl556, !dbg !18248
  %290 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr558 = getelementptr i32, i32* %290, i64 9, !dbg !18248
  %291 = load i32, i32* %add.ptr558, align 4, !dbg !18248
  %and559 = and i32 %291, 16711680, !dbg !18248
  %shr560 = lshr i32 %and559, 8, !dbg !18248
  %or561 = or i32 %or557, %shr560, !dbg !18248
  %292 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr562 = getelementptr i32, i32* %292, i64 9, !dbg !18248
  %293 = load i32, i32* %add.ptr562, align 4, !dbg !18248
  %and563 = and i32 %293, -16777216, !dbg !18248
  %shr564 = lshr i32 %and563, 24, !dbg !18248
  %or565 = or i32 %or561, %shr564, !dbg !18248
  br label %cond.end569, !dbg !18248

cond.false566:                                    ; preds = %cond.false548
  %294 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr567 = getelementptr i32, i32* %294, i64 9, !dbg !18248
  %295 = load i32, i32* %add.ptr567, align 4, !dbg !18248
  %call568 = call i32 @__fswab32(i32 %295) #10, !dbg !18248
  br label %cond.end569, !dbg !18248

cond.end569:                                      ; preds = %cond.false566, %cond.true550
  %cond570 = phi i32 [ %or565, %cond.true550 ], [ %call568, %cond.false566 ], !dbg !18248
  %and571 = and i32 %cond570, 0, !dbg !18248
  %296 = load i32, i32* %_v408, align 4, !dbg !18248
  %shl572 = shl i32 %296, 0, !dbg !18248
  %or573 = or i32 %and571, %shl572, !dbg !18248
  %call574 = call i32 @__fswab32(i32 %or573) #10, !dbg !18248
  br label %cond.end575, !dbg !18248

cond.end575:                                      ; preds = %cond.end569, %cond.end540
  %cond576 = phi i32 [ %or547, %cond.end540 ], [ %call574, %cond.end569 ], !dbg !18248
  %297 = load i32*, i32** %flow_group_in, align 8, !dbg !18248
  %add.ptr577 = getelementptr i32, i32* %297, i64 9, !dbg !18248
  store i32 %cond576, i32* %add.ptr577, align 4, !dbg !18248
  br label %do.end578, !dbg !18248

do.end578:                                        ; preds = %cond.end575
  %298 = load i8*, i8** %dmac, align 8, !dbg !18251
  call void @eth_broadcast_addr(i8* %298) #8, !dbg !18252
  %299 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18253
  %300 = load i32*, i32** %flow_group_in, align 8, !dbg !18254
  %call579 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %299, i32* %300) #8, !dbg !18255
  store %struct.mlx5_flow_group* %call579, %struct.mlx5_flow_group** %g, align 8, !dbg !18256
  %301 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18257
  %302 = bitcast %struct.mlx5_flow_group* %301 to i8*, !dbg !18257
  %call580 = call zeroext i1 @IS_ERR(i8* %302) #8, !dbg !18259
  br i1 %call580, label %if.then581, label %if.end585, !dbg !18260

if.then581:                                       ; preds = %do.end578
  %303 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18261
  %304 = bitcast %struct.mlx5_flow_group* %303 to i8*, !dbg !18261
  %call582 = call i64 @PTR_ERR(i8* %304) #8, !dbg !18263
  %conv583 = trunc i64 %call582 to i32, !dbg !18263
  store i32 %conv583, i32* %err, align 4, !dbg !18264
  %305 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18265
  %device584 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %305, i32 0, i32 0, !dbg !18265
  %306 = load %struct.device*, %struct.device** %device584, align 8, !dbg !18265
  %307 = load i32, i32* %err, align 4, !dbg !18265
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %306, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.33, i64 0, i64 0), i32 %307) #11, !dbg !18265
  br label %out, !dbg !18266

if.end585:                                        ; preds = %do.end578
  %308 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18267
  %309 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18268
  %fdb_table586 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %309, i32 0, i32 2, !dbg !18269
  %310 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table586, i32 0, i32 0, !dbg !18270
  %legacy587 = bitcast %union.anon.154* %310 to %struct.legacy_fdb*, !dbg !18270
  %addr_grp = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy587, i32 0, i32 1, !dbg !18271
  store %struct.mlx5_flow_group* %308, %struct.mlx5_flow_group** %addr_grp, align 8, !dbg !18272
  br label %do.body588, !dbg !18273

do.body588:                                       ; preds = %if.end585
  call void @llvm.dbg.declare(metadata i32* %_v589, metadata !18274, metadata !DIExpression()), !dbg !18276
  store i32 1, i32* %_v589, align 4, !dbg !18276
  br label %do.body590, !dbg !18276

do.body590:                                       ; preds = %do.body588
  br label %do.end591, !dbg !18277

do.end591:                                        ; preds = %do.body590
  %311 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr592 = getelementptr i32, i32* %311, i64 15, !dbg !18276
  %312 = load i32, i32* %add.ptr592, align 4, !dbg !18276
  %313 = call i1 @llvm.is.constant.i32(i32 %312), !dbg !18276
  br i1 %313, label %cond.true593, label %cond.false609, !dbg !18276

cond.true593:                                     ; preds = %do.end591
  %314 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr594 = getelementptr i32, i32* %314, i64 15, !dbg !18276
  %315 = load i32, i32* %add.ptr594, align 4, !dbg !18276
  %and595 = and i32 %315, 255, !dbg !18276
  %shl596 = shl i32 %and595, 24, !dbg !18276
  %316 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr597 = getelementptr i32, i32* %316, i64 15, !dbg !18276
  %317 = load i32, i32* %add.ptr597, align 4, !dbg !18276
  %and598 = and i32 %317, 65280, !dbg !18276
  %shl599 = shl i32 %and598, 8, !dbg !18276
  %or600 = or i32 %shl596, %shl599, !dbg !18276
  %318 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr601 = getelementptr i32, i32* %318, i64 15, !dbg !18276
  %319 = load i32, i32* %add.ptr601, align 4, !dbg !18276
  %and602 = and i32 %319, 16711680, !dbg !18276
  %shr603 = lshr i32 %and602, 8, !dbg !18276
  %or604 = or i32 %or600, %shr603, !dbg !18276
  %320 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr605 = getelementptr i32, i32* %320, i64 15, !dbg !18276
  %321 = load i32, i32* %add.ptr605, align 4, !dbg !18276
  %and606 = and i32 %321, -16777216, !dbg !18276
  %shr607 = lshr i32 %and606, 24, !dbg !18276
  %or608 = or i32 %or604, %shr607, !dbg !18276
  br label %cond.end612, !dbg !18276

cond.false609:                                    ; preds = %do.end591
  %322 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr610 = getelementptr i32, i32* %322, i64 15, !dbg !18276
  %323 = load i32, i32* %add.ptr610, align 4, !dbg !18276
  %call611 = call i32 @__fswab32(i32 %323) #10, !dbg !18276
  br label %cond.end612, !dbg !18276

cond.end612:                                      ; preds = %cond.false609, %cond.true593
  %cond613 = phi i32 [ %or608, %cond.true593 ], [ %call611, %cond.false609 ], !dbg !18276
  %and614 = and i32 %cond613, -256, !dbg !18276
  %324 = load i32, i32* %_v589, align 4, !dbg !18276
  %and615 = and i32 %324, 255, !dbg !18276
  %shl616 = shl i32 %and615, 0, !dbg !18276
  %or617 = or i32 %and614, %shl616, !dbg !18276
  %325 = call i1 @llvm.is.constant.i32(i32 %or617), !dbg !18276
  br i1 %325, label %cond.true618, label %cond.false734, !dbg !18276

cond.true618:                                     ; preds = %cond.end612
  %326 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr619 = getelementptr i32, i32* %326, i64 15, !dbg !18276
  %327 = load i32, i32* %add.ptr619, align 4, !dbg !18276
  %328 = call i1 @llvm.is.constant.i32(i32 %327), !dbg !18276
  br i1 %328, label %cond.true620, label %cond.false636, !dbg !18276

cond.true620:                                     ; preds = %cond.true618
  %329 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr621 = getelementptr i32, i32* %329, i64 15, !dbg !18276
  %330 = load i32, i32* %add.ptr621, align 4, !dbg !18276
  %and622 = and i32 %330, 255, !dbg !18276
  %shl623 = shl i32 %and622, 24, !dbg !18276
  %331 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr624 = getelementptr i32, i32* %331, i64 15, !dbg !18276
  %332 = load i32, i32* %add.ptr624, align 4, !dbg !18276
  %and625 = and i32 %332, 65280, !dbg !18276
  %shl626 = shl i32 %and625, 8, !dbg !18276
  %or627 = or i32 %shl623, %shl626, !dbg !18276
  %333 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr628 = getelementptr i32, i32* %333, i64 15, !dbg !18276
  %334 = load i32, i32* %add.ptr628, align 4, !dbg !18276
  %and629 = and i32 %334, 16711680, !dbg !18276
  %shr630 = lshr i32 %and629, 8, !dbg !18276
  %or631 = or i32 %or627, %shr630, !dbg !18276
  %335 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr632 = getelementptr i32, i32* %335, i64 15, !dbg !18276
  %336 = load i32, i32* %add.ptr632, align 4, !dbg !18276
  %and633 = and i32 %336, -16777216, !dbg !18276
  %shr634 = lshr i32 %and633, 24, !dbg !18276
  %or635 = or i32 %or631, %shr634, !dbg !18276
  br label %cond.end639, !dbg !18276

cond.false636:                                    ; preds = %cond.true618
  %337 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr637 = getelementptr i32, i32* %337, i64 15, !dbg !18276
  %338 = load i32, i32* %add.ptr637, align 4, !dbg !18276
  %call638 = call i32 @__fswab32(i32 %338) #10, !dbg !18276
  br label %cond.end639, !dbg !18276

cond.end639:                                      ; preds = %cond.false636, %cond.true620
  %cond640 = phi i32 [ %or635, %cond.true620 ], [ %call638, %cond.false636 ], !dbg !18276
  %and641 = and i32 %cond640, -256, !dbg !18276
  %339 = load i32, i32* %_v589, align 4, !dbg !18276
  %and642 = and i32 %339, 255, !dbg !18276
  %shl643 = shl i32 %and642, 0, !dbg !18276
  %or644 = or i32 %and641, %shl643, !dbg !18276
  %and645 = and i32 %or644, 255, !dbg !18276
  %shl646 = shl i32 %and645, 24, !dbg !18276
  %340 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr647 = getelementptr i32, i32* %340, i64 15, !dbg !18276
  %341 = load i32, i32* %add.ptr647, align 4, !dbg !18276
  %342 = call i1 @llvm.is.constant.i32(i32 %341), !dbg !18276
  br i1 %342, label %cond.true648, label %cond.false664, !dbg !18276

cond.true648:                                     ; preds = %cond.end639
  %343 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr649 = getelementptr i32, i32* %343, i64 15, !dbg !18276
  %344 = load i32, i32* %add.ptr649, align 4, !dbg !18276
  %and650 = and i32 %344, 255, !dbg !18276
  %shl651 = shl i32 %and650, 24, !dbg !18276
  %345 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr652 = getelementptr i32, i32* %345, i64 15, !dbg !18276
  %346 = load i32, i32* %add.ptr652, align 4, !dbg !18276
  %and653 = and i32 %346, 65280, !dbg !18276
  %shl654 = shl i32 %and653, 8, !dbg !18276
  %or655 = or i32 %shl651, %shl654, !dbg !18276
  %347 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr656 = getelementptr i32, i32* %347, i64 15, !dbg !18276
  %348 = load i32, i32* %add.ptr656, align 4, !dbg !18276
  %and657 = and i32 %348, 16711680, !dbg !18276
  %shr658 = lshr i32 %and657, 8, !dbg !18276
  %or659 = or i32 %or655, %shr658, !dbg !18276
  %349 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr660 = getelementptr i32, i32* %349, i64 15, !dbg !18276
  %350 = load i32, i32* %add.ptr660, align 4, !dbg !18276
  %and661 = and i32 %350, -16777216, !dbg !18276
  %shr662 = lshr i32 %and661, 24, !dbg !18276
  %or663 = or i32 %or659, %shr662, !dbg !18276
  br label %cond.end667, !dbg !18276

cond.false664:                                    ; preds = %cond.end639
  %351 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr665 = getelementptr i32, i32* %351, i64 15, !dbg !18276
  %352 = load i32, i32* %add.ptr665, align 4, !dbg !18276
  %call666 = call i32 @__fswab32(i32 %352) #10, !dbg !18276
  br label %cond.end667, !dbg !18276

cond.end667:                                      ; preds = %cond.false664, %cond.true648
  %cond668 = phi i32 [ %or663, %cond.true648 ], [ %call666, %cond.false664 ], !dbg !18276
  %and669 = and i32 %cond668, -256, !dbg !18276
  %353 = load i32, i32* %_v589, align 4, !dbg !18276
  %and670 = and i32 %353, 255, !dbg !18276
  %shl671 = shl i32 %and670, 0, !dbg !18276
  %or672 = or i32 %and669, %shl671, !dbg !18276
  %and673 = and i32 %or672, 65280, !dbg !18276
  %shl674 = shl i32 %and673, 8, !dbg !18276
  %or675 = or i32 %shl646, %shl674, !dbg !18276
  %354 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr676 = getelementptr i32, i32* %354, i64 15, !dbg !18276
  %355 = load i32, i32* %add.ptr676, align 4, !dbg !18276
  %356 = call i1 @llvm.is.constant.i32(i32 %355), !dbg !18276
  br i1 %356, label %cond.true677, label %cond.false693, !dbg !18276

cond.true677:                                     ; preds = %cond.end667
  %357 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr678 = getelementptr i32, i32* %357, i64 15, !dbg !18276
  %358 = load i32, i32* %add.ptr678, align 4, !dbg !18276
  %and679 = and i32 %358, 255, !dbg !18276
  %shl680 = shl i32 %and679, 24, !dbg !18276
  %359 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr681 = getelementptr i32, i32* %359, i64 15, !dbg !18276
  %360 = load i32, i32* %add.ptr681, align 4, !dbg !18276
  %and682 = and i32 %360, 65280, !dbg !18276
  %shl683 = shl i32 %and682, 8, !dbg !18276
  %or684 = or i32 %shl680, %shl683, !dbg !18276
  %361 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr685 = getelementptr i32, i32* %361, i64 15, !dbg !18276
  %362 = load i32, i32* %add.ptr685, align 4, !dbg !18276
  %and686 = and i32 %362, 16711680, !dbg !18276
  %shr687 = lshr i32 %and686, 8, !dbg !18276
  %or688 = or i32 %or684, %shr687, !dbg !18276
  %363 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr689 = getelementptr i32, i32* %363, i64 15, !dbg !18276
  %364 = load i32, i32* %add.ptr689, align 4, !dbg !18276
  %and690 = and i32 %364, -16777216, !dbg !18276
  %shr691 = lshr i32 %and690, 24, !dbg !18276
  %or692 = or i32 %or688, %shr691, !dbg !18276
  br label %cond.end696, !dbg !18276

cond.false693:                                    ; preds = %cond.end667
  %365 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr694 = getelementptr i32, i32* %365, i64 15, !dbg !18276
  %366 = load i32, i32* %add.ptr694, align 4, !dbg !18276
  %call695 = call i32 @__fswab32(i32 %366) #10, !dbg !18276
  br label %cond.end696, !dbg !18276

cond.end696:                                      ; preds = %cond.false693, %cond.true677
  %cond697 = phi i32 [ %or692, %cond.true677 ], [ %call695, %cond.false693 ], !dbg !18276
  %and698 = and i32 %cond697, -256, !dbg !18276
  %367 = load i32, i32* %_v589, align 4, !dbg !18276
  %and699 = and i32 %367, 255, !dbg !18276
  %shl700 = shl i32 %and699, 0, !dbg !18276
  %or701 = or i32 %and698, %shl700, !dbg !18276
  %and702 = and i32 %or701, 16711680, !dbg !18276
  %shr703 = lshr i32 %and702, 8, !dbg !18276
  %or704 = or i32 %or675, %shr703, !dbg !18276
  %368 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr705 = getelementptr i32, i32* %368, i64 15, !dbg !18276
  %369 = load i32, i32* %add.ptr705, align 4, !dbg !18276
  %370 = call i1 @llvm.is.constant.i32(i32 %369), !dbg !18276
  br i1 %370, label %cond.true706, label %cond.false722, !dbg !18276

cond.true706:                                     ; preds = %cond.end696
  %371 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr707 = getelementptr i32, i32* %371, i64 15, !dbg !18276
  %372 = load i32, i32* %add.ptr707, align 4, !dbg !18276
  %and708 = and i32 %372, 255, !dbg !18276
  %shl709 = shl i32 %and708, 24, !dbg !18276
  %373 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr710 = getelementptr i32, i32* %373, i64 15, !dbg !18276
  %374 = load i32, i32* %add.ptr710, align 4, !dbg !18276
  %and711 = and i32 %374, 65280, !dbg !18276
  %shl712 = shl i32 %and711, 8, !dbg !18276
  %or713 = or i32 %shl709, %shl712, !dbg !18276
  %375 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr714 = getelementptr i32, i32* %375, i64 15, !dbg !18276
  %376 = load i32, i32* %add.ptr714, align 4, !dbg !18276
  %and715 = and i32 %376, 16711680, !dbg !18276
  %shr716 = lshr i32 %and715, 8, !dbg !18276
  %or717 = or i32 %or713, %shr716, !dbg !18276
  %377 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr718 = getelementptr i32, i32* %377, i64 15, !dbg !18276
  %378 = load i32, i32* %add.ptr718, align 4, !dbg !18276
  %and719 = and i32 %378, -16777216, !dbg !18276
  %shr720 = lshr i32 %and719, 24, !dbg !18276
  %or721 = or i32 %or717, %shr720, !dbg !18276
  br label %cond.end725, !dbg !18276

cond.false722:                                    ; preds = %cond.end696
  %379 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr723 = getelementptr i32, i32* %379, i64 15, !dbg !18276
  %380 = load i32, i32* %add.ptr723, align 4, !dbg !18276
  %call724 = call i32 @__fswab32(i32 %380) #10, !dbg !18276
  br label %cond.end725, !dbg !18276

cond.end725:                                      ; preds = %cond.false722, %cond.true706
  %cond726 = phi i32 [ %or721, %cond.true706 ], [ %call724, %cond.false722 ], !dbg !18276
  %and727 = and i32 %cond726, -256, !dbg !18276
  %381 = load i32, i32* %_v589, align 4, !dbg !18276
  %and728 = and i32 %381, 255, !dbg !18276
  %shl729 = shl i32 %and728, 0, !dbg !18276
  %or730 = or i32 %and727, %shl729, !dbg !18276
  %and731 = and i32 %or730, -16777216, !dbg !18276
  %shr732 = lshr i32 %and731, 24, !dbg !18276
  %or733 = or i32 %or704, %shr732, !dbg !18276
  br label %cond.end762, !dbg !18276

cond.false734:                                    ; preds = %cond.end612
  %382 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr735 = getelementptr i32, i32* %382, i64 15, !dbg !18276
  %383 = load i32, i32* %add.ptr735, align 4, !dbg !18276
  %384 = call i1 @llvm.is.constant.i32(i32 %383), !dbg !18276
  br i1 %384, label %cond.true736, label %cond.false752, !dbg !18276

cond.true736:                                     ; preds = %cond.false734
  %385 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr737 = getelementptr i32, i32* %385, i64 15, !dbg !18276
  %386 = load i32, i32* %add.ptr737, align 4, !dbg !18276
  %and738 = and i32 %386, 255, !dbg !18276
  %shl739 = shl i32 %and738, 24, !dbg !18276
  %387 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr740 = getelementptr i32, i32* %387, i64 15, !dbg !18276
  %388 = load i32, i32* %add.ptr740, align 4, !dbg !18276
  %and741 = and i32 %388, 65280, !dbg !18276
  %shl742 = shl i32 %and741, 8, !dbg !18276
  %or743 = or i32 %shl739, %shl742, !dbg !18276
  %389 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr744 = getelementptr i32, i32* %389, i64 15, !dbg !18276
  %390 = load i32, i32* %add.ptr744, align 4, !dbg !18276
  %and745 = and i32 %390, 16711680, !dbg !18276
  %shr746 = lshr i32 %and745, 8, !dbg !18276
  %or747 = or i32 %or743, %shr746, !dbg !18276
  %391 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr748 = getelementptr i32, i32* %391, i64 15, !dbg !18276
  %392 = load i32, i32* %add.ptr748, align 4, !dbg !18276
  %and749 = and i32 %392, -16777216, !dbg !18276
  %shr750 = lshr i32 %and749, 24, !dbg !18276
  %or751 = or i32 %or747, %shr750, !dbg !18276
  br label %cond.end755, !dbg !18276

cond.false752:                                    ; preds = %cond.false734
  %393 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr753 = getelementptr i32, i32* %393, i64 15, !dbg !18276
  %394 = load i32, i32* %add.ptr753, align 4, !dbg !18276
  %call754 = call i32 @__fswab32(i32 %394) #10, !dbg !18276
  br label %cond.end755, !dbg !18276

cond.end755:                                      ; preds = %cond.false752, %cond.true736
  %cond756 = phi i32 [ %or751, %cond.true736 ], [ %call754, %cond.false752 ], !dbg !18276
  %and757 = and i32 %cond756, -256, !dbg !18276
  %395 = load i32, i32* %_v589, align 4, !dbg !18276
  %and758 = and i32 %395, 255, !dbg !18276
  %shl759 = shl i32 %and758, 0, !dbg !18276
  %or760 = or i32 %and757, %shl759, !dbg !18276
  %call761 = call i32 @__fswab32(i32 %or760) #10, !dbg !18276
  br label %cond.end762, !dbg !18276

cond.end762:                                      ; preds = %cond.end755, %cond.end725
  %cond763 = phi i32 [ %or733, %cond.end725 ], [ %call761, %cond.end755 ], !dbg !18276
  %396 = load i32*, i32** %flow_group_in, align 8, !dbg !18276
  %add.ptr764 = getelementptr i32, i32* %396, i64 15, !dbg !18276
  store i32 %cond763, i32* %add.ptr764, align 4, !dbg !18276
  br label %do.end765, !dbg !18276

do.end765:                                        ; preds = %cond.end762
  br label %do.body766, !dbg !18279

do.body766:                                       ; preds = %do.end765
  call void @llvm.dbg.declare(metadata i32* %_v767, metadata !18280, metadata !DIExpression()), !dbg !18282
  %397 = load i32, i32* %table_size, align 4, !dbg !18282
  %sub768 = sub i32 %397, 2, !dbg !18282
  store i32 %sub768, i32* %_v767, align 4, !dbg !18282
  br label %do.body769, !dbg !18282

do.body769:                                       ; preds = %do.body766
  br label %do.end770, !dbg !18283

do.end770:                                        ; preds = %do.body769
  %398 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr771 = getelementptr i32, i32* %398, i64 7, !dbg !18282
  %399 = load i32, i32* %add.ptr771, align 4, !dbg !18282
  %400 = call i1 @llvm.is.constant.i32(i32 %399), !dbg !18282
  br i1 %400, label %cond.true772, label %cond.false788, !dbg !18282

cond.true772:                                     ; preds = %do.end770
  %401 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr773 = getelementptr i32, i32* %401, i64 7, !dbg !18282
  %402 = load i32, i32* %add.ptr773, align 4, !dbg !18282
  %and774 = and i32 %402, 255, !dbg !18282
  %shl775 = shl i32 %and774, 24, !dbg !18282
  %403 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr776 = getelementptr i32, i32* %403, i64 7, !dbg !18282
  %404 = load i32, i32* %add.ptr776, align 4, !dbg !18282
  %and777 = and i32 %404, 65280, !dbg !18282
  %shl778 = shl i32 %and777, 8, !dbg !18282
  %or779 = or i32 %shl775, %shl778, !dbg !18282
  %405 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr780 = getelementptr i32, i32* %405, i64 7, !dbg !18282
  %406 = load i32, i32* %add.ptr780, align 4, !dbg !18282
  %and781 = and i32 %406, 16711680, !dbg !18282
  %shr782 = lshr i32 %and781, 8, !dbg !18282
  %or783 = or i32 %or779, %shr782, !dbg !18282
  %407 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr784 = getelementptr i32, i32* %407, i64 7, !dbg !18282
  %408 = load i32, i32* %add.ptr784, align 4, !dbg !18282
  %and785 = and i32 %408, -16777216, !dbg !18282
  %shr786 = lshr i32 %and785, 24, !dbg !18282
  %or787 = or i32 %or783, %shr786, !dbg !18282
  br label %cond.end791, !dbg !18282

cond.false788:                                    ; preds = %do.end770
  %409 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr789 = getelementptr i32, i32* %409, i64 7, !dbg !18282
  %410 = load i32, i32* %add.ptr789, align 4, !dbg !18282
  %call790 = call i32 @__fswab32(i32 %410) #10, !dbg !18282
  br label %cond.end791, !dbg !18282

cond.end791:                                      ; preds = %cond.false788, %cond.true772
  %cond792 = phi i32 [ %or787, %cond.true772 ], [ %call790, %cond.false788 ], !dbg !18282
  %and793 = and i32 %cond792, 0, !dbg !18282
  %411 = load i32, i32* %_v767, align 4, !dbg !18282
  %shl794 = shl i32 %411, 0, !dbg !18282
  %or795 = or i32 %and793, %shl794, !dbg !18282
  %412 = call i1 @llvm.is.constant.i32(i32 %or795), !dbg !18282
  br i1 %412, label %cond.true796, label %cond.false908, !dbg !18282

cond.true796:                                     ; preds = %cond.end791
  %413 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr797 = getelementptr i32, i32* %413, i64 7, !dbg !18282
  %414 = load i32, i32* %add.ptr797, align 4, !dbg !18282
  %415 = call i1 @llvm.is.constant.i32(i32 %414), !dbg !18282
  br i1 %415, label %cond.true798, label %cond.false814, !dbg !18282

cond.true798:                                     ; preds = %cond.true796
  %416 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr799 = getelementptr i32, i32* %416, i64 7, !dbg !18282
  %417 = load i32, i32* %add.ptr799, align 4, !dbg !18282
  %and800 = and i32 %417, 255, !dbg !18282
  %shl801 = shl i32 %and800, 24, !dbg !18282
  %418 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr802 = getelementptr i32, i32* %418, i64 7, !dbg !18282
  %419 = load i32, i32* %add.ptr802, align 4, !dbg !18282
  %and803 = and i32 %419, 65280, !dbg !18282
  %shl804 = shl i32 %and803, 8, !dbg !18282
  %or805 = or i32 %shl801, %shl804, !dbg !18282
  %420 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr806 = getelementptr i32, i32* %420, i64 7, !dbg !18282
  %421 = load i32, i32* %add.ptr806, align 4, !dbg !18282
  %and807 = and i32 %421, 16711680, !dbg !18282
  %shr808 = lshr i32 %and807, 8, !dbg !18282
  %or809 = or i32 %or805, %shr808, !dbg !18282
  %422 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr810 = getelementptr i32, i32* %422, i64 7, !dbg !18282
  %423 = load i32, i32* %add.ptr810, align 4, !dbg !18282
  %and811 = and i32 %423, -16777216, !dbg !18282
  %shr812 = lshr i32 %and811, 24, !dbg !18282
  %or813 = or i32 %or809, %shr812, !dbg !18282
  br label %cond.end817, !dbg !18282

cond.false814:                                    ; preds = %cond.true796
  %424 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr815 = getelementptr i32, i32* %424, i64 7, !dbg !18282
  %425 = load i32, i32* %add.ptr815, align 4, !dbg !18282
  %call816 = call i32 @__fswab32(i32 %425) #10, !dbg !18282
  br label %cond.end817, !dbg !18282

cond.end817:                                      ; preds = %cond.false814, %cond.true798
  %cond818 = phi i32 [ %or813, %cond.true798 ], [ %call816, %cond.false814 ], !dbg !18282
  %and819 = and i32 %cond818, 0, !dbg !18282
  %426 = load i32, i32* %_v767, align 4, !dbg !18282
  %shl820 = shl i32 %426, 0, !dbg !18282
  %or821 = or i32 %and819, %shl820, !dbg !18282
  %and822 = and i32 %or821, 255, !dbg !18282
  %shl823 = shl i32 %and822, 24, !dbg !18282
  %427 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr824 = getelementptr i32, i32* %427, i64 7, !dbg !18282
  %428 = load i32, i32* %add.ptr824, align 4, !dbg !18282
  %429 = call i1 @llvm.is.constant.i32(i32 %428), !dbg !18282
  br i1 %429, label %cond.true825, label %cond.false841, !dbg !18282

cond.true825:                                     ; preds = %cond.end817
  %430 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr826 = getelementptr i32, i32* %430, i64 7, !dbg !18282
  %431 = load i32, i32* %add.ptr826, align 4, !dbg !18282
  %and827 = and i32 %431, 255, !dbg !18282
  %shl828 = shl i32 %and827, 24, !dbg !18282
  %432 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr829 = getelementptr i32, i32* %432, i64 7, !dbg !18282
  %433 = load i32, i32* %add.ptr829, align 4, !dbg !18282
  %and830 = and i32 %433, 65280, !dbg !18282
  %shl831 = shl i32 %and830, 8, !dbg !18282
  %or832 = or i32 %shl828, %shl831, !dbg !18282
  %434 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr833 = getelementptr i32, i32* %434, i64 7, !dbg !18282
  %435 = load i32, i32* %add.ptr833, align 4, !dbg !18282
  %and834 = and i32 %435, 16711680, !dbg !18282
  %shr835 = lshr i32 %and834, 8, !dbg !18282
  %or836 = or i32 %or832, %shr835, !dbg !18282
  %436 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr837 = getelementptr i32, i32* %436, i64 7, !dbg !18282
  %437 = load i32, i32* %add.ptr837, align 4, !dbg !18282
  %and838 = and i32 %437, -16777216, !dbg !18282
  %shr839 = lshr i32 %and838, 24, !dbg !18282
  %or840 = or i32 %or836, %shr839, !dbg !18282
  br label %cond.end844, !dbg !18282

cond.false841:                                    ; preds = %cond.end817
  %438 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr842 = getelementptr i32, i32* %438, i64 7, !dbg !18282
  %439 = load i32, i32* %add.ptr842, align 4, !dbg !18282
  %call843 = call i32 @__fswab32(i32 %439) #10, !dbg !18282
  br label %cond.end844, !dbg !18282

cond.end844:                                      ; preds = %cond.false841, %cond.true825
  %cond845 = phi i32 [ %or840, %cond.true825 ], [ %call843, %cond.false841 ], !dbg !18282
  %and846 = and i32 %cond845, 0, !dbg !18282
  %440 = load i32, i32* %_v767, align 4, !dbg !18282
  %shl847 = shl i32 %440, 0, !dbg !18282
  %or848 = or i32 %and846, %shl847, !dbg !18282
  %and849 = and i32 %or848, 65280, !dbg !18282
  %shl850 = shl i32 %and849, 8, !dbg !18282
  %or851 = or i32 %shl823, %shl850, !dbg !18282
  %441 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr852 = getelementptr i32, i32* %441, i64 7, !dbg !18282
  %442 = load i32, i32* %add.ptr852, align 4, !dbg !18282
  %443 = call i1 @llvm.is.constant.i32(i32 %442), !dbg !18282
  br i1 %443, label %cond.true853, label %cond.false869, !dbg !18282

cond.true853:                                     ; preds = %cond.end844
  %444 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr854 = getelementptr i32, i32* %444, i64 7, !dbg !18282
  %445 = load i32, i32* %add.ptr854, align 4, !dbg !18282
  %and855 = and i32 %445, 255, !dbg !18282
  %shl856 = shl i32 %and855, 24, !dbg !18282
  %446 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr857 = getelementptr i32, i32* %446, i64 7, !dbg !18282
  %447 = load i32, i32* %add.ptr857, align 4, !dbg !18282
  %and858 = and i32 %447, 65280, !dbg !18282
  %shl859 = shl i32 %and858, 8, !dbg !18282
  %or860 = or i32 %shl856, %shl859, !dbg !18282
  %448 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr861 = getelementptr i32, i32* %448, i64 7, !dbg !18282
  %449 = load i32, i32* %add.ptr861, align 4, !dbg !18282
  %and862 = and i32 %449, 16711680, !dbg !18282
  %shr863 = lshr i32 %and862, 8, !dbg !18282
  %or864 = or i32 %or860, %shr863, !dbg !18282
  %450 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr865 = getelementptr i32, i32* %450, i64 7, !dbg !18282
  %451 = load i32, i32* %add.ptr865, align 4, !dbg !18282
  %and866 = and i32 %451, -16777216, !dbg !18282
  %shr867 = lshr i32 %and866, 24, !dbg !18282
  %or868 = or i32 %or864, %shr867, !dbg !18282
  br label %cond.end872, !dbg !18282

cond.false869:                                    ; preds = %cond.end844
  %452 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr870 = getelementptr i32, i32* %452, i64 7, !dbg !18282
  %453 = load i32, i32* %add.ptr870, align 4, !dbg !18282
  %call871 = call i32 @__fswab32(i32 %453) #10, !dbg !18282
  br label %cond.end872, !dbg !18282

cond.end872:                                      ; preds = %cond.false869, %cond.true853
  %cond873 = phi i32 [ %or868, %cond.true853 ], [ %call871, %cond.false869 ], !dbg !18282
  %and874 = and i32 %cond873, 0, !dbg !18282
  %454 = load i32, i32* %_v767, align 4, !dbg !18282
  %shl875 = shl i32 %454, 0, !dbg !18282
  %or876 = or i32 %and874, %shl875, !dbg !18282
  %and877 = and i32 %or876, 16711680, !dbg !18282
  %shr878 = lshr i32 %and877, 8, !dbg !18282
  %or879 = or i32 %or851, %shr878, !dbg !18282
  %455 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr880 = getelementptr i32, i32* %455, i64 7, !dbg !18282
  %456 = load i32, i32* %add.ptr880, align 4, !dbg !18282
  %457 = call i1 @llvm.is.constant.i32(i32 %456), !dbg !18282
  br i1 %457, label %cond.true881, label %cond.false897, !dbg !18282

cond.true881:                                     ; preds = %cond.end872
  %458 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr882 = getelementptr i32, i32* %458, i64 7, !dbg !18282
  %459 = load i32, i32* %add.ptr882, align 4, !dbg !18282
  %and883 = and i32 %459, 255, !dbg !18282
  %shl884 = shl i32 %and883, 24, !dbg !18282
  %460 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr885 = getelementptr i32, i32* %460, i64 7, !dbg !18282
  %461 = load i32, i32* %add.ptr885, align 4, !dbg !18282
  %and886 = and i32 %461, 65280, !dbg !18282
  %shl887 = shl i32 %and886, 8, !dbg !18282
  %or888 = or i32 %shl884, %shl887, !dbg !18282
  %462 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr889 = getelementptr i32, i32* %462, i64 7, !dbg !18282
  %463 = load i32, i32* %add.ptr889, align 4, !dbg !18282
  %and890 = and i32 %463, 16711680, !dbg !18282
  %shr891 = lshr i32 %and890, 8, !dbg !18282
  %or892 = or i32 %or888, %shr891, !dbg !18282
  %464 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr893 = getelementptr i32, i32* %464, i64 7, !dbg !18282
  %465 = load i32, i32* %add.ptr893, align 4, !dbg !18282
  %and894 = and i32 %465, -16777216, !dbg !18282
  %shr895 = lshr i32 %and894, 24, !dbg !18282
  %or896 = or i32 %or892, %shr895, !dbg !18282
  br label %cond.end900, !dbg !18282

cond.false897:                                    ; preds = %cond.end872
  %466 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr898 = getelementptr i32, i32* %466, i64 7, !dbg !18282
  %467 = load i32, i32* %add.ptr898, align 4, !dbg !18282
  %call899 = call i32 @__fswab32(i32 %467) #10, !dbg !18282
  br label %cond.end900, !dbg !18282

cond.end900:                                      ; preds = %cond.false897, %cond.true881
  %cond901 = phi i32 [ %or896, %cond.true881 ], [ %call899, %cond.false897 ], !dbg !18282
  %and902 = and i32 %cond901, 0, !dbg !18282
  %468 = load i32, i32* %_v767, align 4, !dbg !18282
  %shl903 = shl i32 %468, 0, !dbg !18282
  %or904 = or i32 %and902, %shl903, !dbg !18282
  %and905 = and i32 %or904, -16777216, !dbg !18282
  %shr906 = lshr i32 %and905, 24, !dbg !18282
  %or907 = or i32 %or879, %shr906, !dbg !18282
  br label %cond.end935, !dbg !18282

cond.false908:                                    ; preds = %cond.end791
  %469 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr909 = getelementptr i32, i32* %469, i64 7, !dbg !18282
  %470 = load i32, i32* %add.ptr909, align 4, !dbg !18282
  %471 = call i1 @llvm.is.constant.i32(i32 %470), !dbg !18282
  br i1 %471, label %cond.true910, label %cond.false926, !dbg !18282

cond.true910:                                     ; preds = %cond.false908
  %472 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr911 = getelementptr i32, i32* %472, i64 7, !dbg !18282
  %473 = load i32, i32* %add.ptr911, align 4, !dbg !18282
  %and912 = and i32 %473, 255, !dbg !18282
  %shl913 = shl i32 %and912, 24, !dbg !18282
  %474 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr914 = getelementptr i32, i32* %474, i64 7, !dbg !18282
  %475 = load i32, i32* %add.ptr914, align 4, !dbg !18282
  %and915 = and i32 %475, 65280, !dbg !18282
  %shl916 = shl i32 %and915, 8, !dbg !18282
  %or917 = or i32 %shl913, %shl916, !dbg !18282
  %476 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr918 = getelementptr i32, i32* %476, i64 7, !dbg !18282
  %477 = load i32, i32* %add.ptr918, align 4, !dbg !18282
  %and919 = and i32 %477, 16711680, !dbg !18282
  %shr920 = lshr i32 %and919, 8, !dbg !18282
  %or921 = or i32 %or917, %shr920, !dbg !18282
  %478 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr922 = getelementptr i32, i32* %478, i64 7, !dbg !18282
  %479 = load i32, i32* %add.ptr922, align 4, !dbg !18282
  %and923 = and i32 %479, -16777216, !dbg !18282
  %shr924 = lshr i32 %and923, 24, !dbg !18282
  %or925 = or i32 %or921, %shr924, !dbg !18282
  br label %cond.end929, !dbg !18282

cond.false926:                                    ; preds = %cond.false908
  %480 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr927 = getelementptr i32, i32* %480, i64 7, !dbg !18282
  %481 = load i32, i32* %add.ptr927, align 4, !dbg !18282
  %call928 = call i32 @__fswab32(i32 %481) #10, !dbg !18282
  br label %cond.end929, !dbg !18282

cond.end929:                                      ; preds = %cond.false926, %cond.true910
  %cond930 = phi i32 [ %or925, %cond.true910 ], [ %call928, %cond.false926 ], !dbg !18282
  %and931 = and i32 %cond930, 0, !dbg !18282
  %482 = load i32, i32* %_v767, align 4, !dbg !18282
  %shl932 = shl i32 %482, 0, !dbg !18282
  %or933 = or i32 %and931, %shl932, !dbg !18282
  %call934 = call i32 @__fswab32(i32 %or933) #10, !dbg !18282
  br label %cond.end935, !dbg !18282

cond.end935:                                      ; preds = %cond.end929, %cond.end900
  %cond936 = phi i32 [ %or907, %cond.end900 ], [ %call934, %cond.end929 ], !dbg !18282
  %483 = load i32*, i32** %flow_group_in, align 8, !dbg !18282
  %add.ptr937 = getelementptr i32, i32* %483, i64 7, !dbg !18282
  store i32 %cond936, i32* %add.ptr937, align 4, !dbg !18282
  br label %do.end938, !dbg !18282

do.end938:                                        ; preds = %cond.end935
  br label %do.body939, !dbg !18285

do.body939:                                       ; preds = %do.end938
  call void @llvm.dbg.declare(metadata i32* %_v940, metadata !18286, metadata !DIExpression()), !dbg !18288
  %484 = load i32, i32* %table_size, align 4, !dbg !18288
  %sub941 = sub i32 %484, 2, !dbg !18288
  store i32 %sub941, i32* %_v940, align 4, !dbg !18288
  br label %do.body942, !dbg !18288

do.body942:                                       ; preds = %do.body939
  br label %do.end943, !dbg !18289

do.end943:                                        ; preds = %do.body942
  %485 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr944 = getelementptr i32, i32* %485, i64 9, !dbg !18288
  %486 = load i32, i32* %add.ptr944, align 4, !dbg !18288
  %487 = call i1 @llvm.is.constant.i32(i32 %486), !dbg !18288
  br i1 %487, label %cond.true945, label %cond.false961, !dbg !18288

cond.true945:                                     ; preds = %do.end943
  %488 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr946 = getelementptr i32, i32* %488, i64 9, !dbg !18288
  %489 = load i32, i32* %add.ptr946, align 4, !dbg !18288
  %and947 = and i32 %489, 255, !dbg !18288
  %shl948 = shl i32 %and947, 24, !dbg !18288
  %490 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr949 = getelementptr i32, i32* %490, i64 9, !dbg !18288
  %491 = load i32, i32* %add.ptr949, align 4, !dbg !18288
  %and950 = and i32 %491, 65280, !dbg !18288
  %shl951 = shl i32 %and950, 8, !dbg !18288
  %or952 = or i32 %shl948, %shl951, !dbg !18288
  %492 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr953 = getelementptr i32, i32* %492, i64 9, !dbg !18288
  %493 = load i32, i32* %add.ptr953, align 4, !dbg !18288
  %and954 = and i32 %493, 16711680, !dbg !18288
  %shr955 = lshr i32 %and954, 8, !dbg !18288
  %or956 = or i32 %or952, %shr955, !dbg !18288
  %494 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr957 = getelementptr i32, i32* %494, i64 9, !dbg !18288
  %495 = load i32, i32* %add.ptr957, align 4, !dbg !18288
  %and958 = and i32 %495, -16777216, !dbg !18288
  %shr959 = lshr i32 %and958, 24, !dbg !18288
  %or960 = or i32 %or956, %shr959, !dbg !18288
  br label %cond.end964, !dbg !18288

cond.false961:                                    ; preds = %do.end943
  %496 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr962 = getelementptr i32, i32* %496, i64 9, !dbg !18288
  %497 = load i32, i32* %add.ptr962, align 4, !dbg !18288
  %call963 = call i32 @__fswab32(i32 %497) #10, !dbg !18288
  br label %cond.end964, !dbg !18288

cond.end964:                                      ; preds = %cond.false961, %cond.true945
  %cond965 = phi i32 [ %or960, %cond.true945 ], [ %call963, %cond.false961 ], !dbg !18288
  %and966 = and i32 %cond965, 0, !dbg !18288
  %498 = load i32, i32* %_v940, align 4, !dbg !18288
  %shl967 = shl i32 %498, 0, !dbg !18288
  %or968 = or i32 %and966, %shl967, !dbg !18288
  %499 = call i1 @llvm.is.constant.i32(i32 %or968), !dbg !18288
  br i1 %499, label %cond.true969, label %cond.false1081, !dbg !18288

cond.true969:                                     ; preds = %cond.end964
  %500 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr970 = getelementptr i32, i32* %500, i64 9, !dbg !18288
  %501 = load i32, i32* %add.ptr970, align 4, !dbg !18288
  %502 = call i1 @llvm.is.constant.i32(i32 %501), !dbg !18288
  br i1 %502, label %cond.true971, label %cond.false987, !dbg !18288

cond.true971:                                     ; preds = %cond.true969
  %503 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr972 = getelementptr i32, i32* %503, i64 9, !dbg !18288
  %504 = load i32, i32* %add.ptr972, align 4, !dbg !18288
  %and973 = and i32 %504, 255, !dbg !18288
  %shl974 = shl i32 %and973, 24, !dbg !18288
  %505 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr975 = getelementptr i32, i32* %505, i64 9, !dbg !18288
  %506 = load i32, i32* %add.ptr975, align 4, !dbg !18288
  %and976 = and i32 %506, 65280, !dbg !18288
  %shl977 = shl i32 %and976, 8, !dbg !18288
  %or978 = or i32 %shl974, %shl977, !dbg !18288
  %507 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr979 = getelementptr i32, i32* %507, i64 9, !dbg !18288
  %508 = load i32, i32* %add.ptr979, align 4, !dbg !18288
  %and980 = and i32 %508, 16711680, !dbg !18288
  %shr981 = lshr i32 %and980, 8, !dbg !18288
  %or982 = or i32 %or978, %shr981, !dbg !18288
  %509 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr983 = getelementptr i32, i32* %509, i64 9, !dbg !18288
  %510 = load i32, i32* %add.ptr983, align 4, !dbg !18288
  %and984 = and i32 %510, -16777216, !dbg !18288
  %shr985 = lshr i32 %and984, 24, !dbg !18288
  %or986 = or i32 %or982, %shr985, !dbg !18288
  br label %cond.end990, !dbg !18288

cond.false987:                                    ; preds = %cond.true969
  %511 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr988 = getelementptr i32, i32* %511, i64 9, !dbg !18288
  %512 = load i32, i32* %add.ptr988, align 4, !dbg !18288
  %call989 = call i32 @__fswab32(i32 %512) #10, !dbg !18288
  br label %cond.end990, !dbg !18288

cond.end990:                                      ; preds = %cond.false987, %cond.true971
  %cond991 = phi i32 [ %or986, %cond.true971 ], [ %call989, %cond.false987 ], !dbg !18288
  %and992 = and i32 %cond991, 0, !dbg !18288
  %513 = load i32, i32* %_v940, align 4, !dbg !18288
  %shl993 = shl i32 %513, 0, !dbg !18288
  %or994 = or i32 %and992, %shl993, !dbg !18288
  %and995 = and i32 %or994, 255, !dbg !18288
  %shl996 = shl i32 %and995, 24, !dbg !18288
  %514 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr997 = getelementptr i32, i32* %514, i64 9, !dbg !18288
  %515 = load i32, i32* %add.ptr997, align 4, !dbg !18288
  %516 = call i1 @llvm.is.constant.i32(i32 %515), !dbg !18288
  br i1 %516, label %cond.true998, label %cond.false1014, !dbg !18288

cond.true998:                                     ; preds = %cond.end990
  %517 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr999 = getelementptr i32, i32* %517, i64 9, !dbg !18288
  %518 = load i32, i32* %add.ptr999, align 4, !dbg !18288
  %and1000 = and i32 %518, 255, !dbg !18288
  %shl1001 = shl i32 %and1000, 24, !dbg !18288
  %519 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1002 = getelementptr i32, i32* %519, i64 9, !dbg !18288
  %520 = load i32, i32* %add.ptr1002, align 4, !dbg !18288
  %and1003 = and i32 %520, 65280, !dbg !18288
  %shl1004 = shl i32 %and1003, 8, !dbg !18288
  %or1005 = or i32 %shl1001, %shl1004, !dbg !18288
  %521 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1006 = getelementptr i32, i32* %521, i64 9, !dbg !18288
  %522 = load i32, i32* %add.ptr1006, align 4, !dbg !18288
  %and1007 = and i32 %522, 16711680, !dbg !18288
  %shr1008 = lshr i32 %and1007, 8, !dbg !18288
  %or1009 = or i32 %or1005, %shr1008, !dbg !18288
  %523 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1010 = getelementptr i32, i32* %523, i64 9, !dbg !18288
  %524 = load i32, i32* %add.ptr1010, align 4, !dbg !18288
  %and1011 = and i32 %524, -16777216, !dbg !18288
  %shr1012 = lshr i32 %and1011, 24, !dbg !18288
  %or1013 = or i32 %or1009, %shr1012, !dbg !18288
  br label %cond.end1017, !dbg !18288

cond.false1014:                                   ; preds = %cond.end990
  %525 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1015 = getelementptr i32, i32* %525, i64 9, !dbg !18288
  %526 = load i32, i32* %add.ptr1015, align 4, !dbg !18288
  %call1016 = call i32 @__fswab32(i32 %526) #10, !dbg !18288
  br label %cond.end1017, !dbg !18288

cond.end1017:                                     ; preds = %cond.false1014, %cond.true998
  %cond1018 = phi i32 [ %or1013, %cond.true998 ], [ %call1016, %cond.false1014 ], !dbg !18288
  %and1019 = and i32 %cond1018, 0, !dbg !18288
  %527 = load i32, i32* %_v940, align 4, !dbg !18288
  %shl1020 = shl i32 %527, 0, !dbg !18288
  %or1021 = or i32 %and1019, %shl1020, !dbg !18288
  %and1022 = and i32 %or1021, 65280, !dbg !18288
  %shl1023 = shl i32 %and1022, 8, !dbg !18288
  %or1024 = or i32 %shl996, %shl1023, !dbg !18288
  %528 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1025 = getelementptr i32, i32* %528, i64 9, !dbg !18288
  %529 = load i32, i32* %add.ptr1025, align 4, !dbg !18288
  %530 = call i1 @llvm.is.constant.i32(i32 %529), !dbg !18288
  br i1 %530, label %cond.true1026, label %cond.false1042, !dbg !18288

cond.true1026:                                    ; preds = %cond.end1017
  %531 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1027 = getelementptr i32, i32* %531, i64 9, !dbg !18288
  %532 = load i32, i32* %add.ptr1027, align 4, !dbg !18288
  %and1028 = and i32 %532, 255, !dbg !18288
  %shl1029 = shl i32 %and1028, 24, !dbg !18288
  %533 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1030 = getelementptr i32, i32* %533, i64 9, !dbg !18288
  %534 = load i32, i32* %add.ptr1030, align 4, !dbg !18288
  %and1031 = and i32 %534, 65280, !dbg !18288
  %shl1032 = shl i32 %and1031, 8, !dbg !18288
  %or1033 = or i32 %shl1029, %shl1032, !dbg !18288
  %535 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1034 = getelementptr i32, i32* %535, i64 9, !dbg !18288
  %536 = load i32, i32* %add.ptr1034, align 4, !dbg !18288
  %and1035 = and i32 %536, 16711680, !dbg !18288
  %shr1036 = lshr i32 %and1035, 8, !dbg !18288
  %or1037 = or i32 %or1033, %shr1036, !dbg !18288
  %537 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1038 = getelementptr i32, i32* %537, i64 9, !dbg !18288
  %538 = load i32, i32* %add.ptr1038, align 4, !dbg !18288
  %and1039 = and i32 %538, -16777216, !dbg !18288
  %shr1040 = lshr i32 %and1039, 24, !dbg !18288
  %or1041 = or i32 %or1037, %shr1040, !dbg !18288
  br label %cond.end1045, !dbg !18288

cond.false1042:                                   ; preds = %cond.end1017
  %539 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1043 = getelementptr i32, i32* %539, i64 9, !dbg !18288
  %540 = load i32, i32* %add.ptr1043, align 4, !dbg !18288
  %call1044 = call i32 @__fswab32(i32 %540) #10, !dbg !18288
  br label %cond.end1045, !dbg !18288

cond.end1045:                                     ; preds = %cond.false1042, %cond.true1026
  %cond1046 = phi i32 [ %or1041, %cond.true1026 ], [ %call1044, %cond.false1042 ], !dbg !18288
  %and1047 = and i32 %cond1046, 0, !dbg !18288
  %541 = load i32, i32* %_v940, align 4, !dbg !18288
  %shl1048 = shl i32 %541, 0, !dbg !18288
  %or1049 = or i32 %and1047, %shl1048, !dbg !18288
  %and1050 = and i32 %or1049, 16711680, !dbg !18288
  %shr1051 = lshr i32 %and1050, 8, !dbg !18288
  %or1052 = or i32 %or1024, %shr1051, !dbg !18288
  %542 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1053 = getelementptr i32, i32* %542, i64 9, !dbg !18288
  %543 = load i32, i32* %add.ptr1053, align 4, !dbg !18288
  %544 = call i1 @llvm.is.constant.i32(i32 %543), !dbg !18288
  br i1 %544, label %cond.true1054, label %cond.false1070, !dbg !18288

cond.true1054:                                    ; preds = %cond.end1045
  %545 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1055 = getelementptr i32, i32* %545, i64 9, !dbg !18288
  %546 = load i32, i32* %add.ptr1055, align 4, !dbg !18288
  %and1056 = and i32 %546, 255, !dbg !18288
  %shl1057 = shl i32 %and1056, 24, !dbg !18288
  %547 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1058 = getelementptr i32, i32* %547, i64 9, !dbg !18288
  %548 = load i32, i32* %add.ptr1058, align 4, !dbg !18288
  %and1059 = and i32 %548, 65280, !dbg !18288
  %shl1060 = shl i32 %and1059, 8, !dbg !18288
  %or1061 = or i32 %shl1057, %shl1060, !dbg !18288
  %549 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1062 = getelementptr i32, i32* %549, i64 9, !dbg !18288
  %550 = load i32, i32* %add.ptr1062, align 4, !dbg !18288
  %and1063 = and i32 %550, 16711680, !dbg !18288
  %shr1064 = lshr i32 %and1063, 8, !dbg !18288
  %or1065 = or i32 %or1061, %shr1064, !dbg !18288
  %551 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1066 = getelementptr i32, i32* %551, i64 9, !dbg !18288
  %552 = load i32, i32* %add.ptr1066, align 4, !dbg !18288
  %and1067 = and i32 %552, -16777216, !dbg !18288
  %shr1068 = lshr i32 %and1067, 24, !dbg !18288
  %or1069 = or i32 %or1065, %shr1068, !dbg !18288
  br label %cond.end1073, !dbg !18288

cond.false1070:                                   ; preds = %cond.end1045
  %553 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1071 = getelementptr i32, i32* %553, i64 9, !dbg !18288
  %554 = load i32, i32* %add.ptr1071, align 4, !dbg !18288
  %call1072 = call i32 @__fswab32(i32 %554) #10, !dbg !18288
  br label %cond.end1073, !dbg !18288

cond.end1073:                                     ; preds = %cond.false1070, %cond.true1054
  %cond1074 = phi i32 [ %or1069, %cond.true1054 ], [ %call1072, %cond.false1070 ], !dbg !18288
  %and1075 = and i32 %cond1074, 0, !dbg !18288
  %555 = load i32, i32* %_v940, align 4, !dbg !18288
  %shl1076 = shl i32 %555, 0, !dbg !18288
  %or1077 = or i32 %and1075, %shl1076, !dbg !18288
  %and1078 = and i32 %or1077, -16777216, !dbg !18288
  %shr1079 = lshr i32 %and1078, 24, !dbg !18288
  %or1080 = or i32 %or1052, %shr1079, !dbg !18288
  br label %cond.end1108, !dbg !18288

cond.false1081:                                   ; preds = %cond.end964
  %556 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1082 = getelementptr i32, i32* %556, i64 9, !dbg !18288
  %557 = load i32, i32* %add.ptr1082, align 4, !dbg !18288
  %558 = call i1 @llvm.is.constant.i32(i32 %557), !dbg !18288
  br i1 %558, label %cond.true1083, label %cond.false1099, !dbg !18288

cond.true1083:                                    ; preds = %cond.false1081
  %559 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1084 = getelementptr i32, i32* %559, i64 9, !dbg !18288
  %560 = load i32, i32* %add.ptr1084, align 4, !dbg !18288
  %and1085 = and i32 %560, 255, !dbg !18288
  %shl1086 = shl i32 %and1085, 24, !dbg !18288
  %561 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1087 = getelementptr i32, i32* %561, i64 9, !dbg !18288
  %562 = load i32, i32* %add.ptr1087, align 4, !dbg !18288
  %and1088 = and i32 %562, 65280, !dbg !18288
  %shl1089 = shl i32 %and1088, 8, !dbg !18288
  %or1090 = or i32 %shl1086, %shl1089, !dbg !18288
  %563 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1091 = getelementptr i32, i32* %563, i64 9, !dbg !18288
  %564 = load i32, i32* %add.ptr1091, align 4, !dbg !18288
  %and1092 = and i32 %564, 16711680, !dbg !18288
  %shr1093 = lshr i32 %and1092, 8, !dbg !18288
  %or1094 = or i32 %or1090, %shr1093, !dbg !18288
  %565 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1095 = getelementptr i32, i32* %565, i64 9, !dbg !18288
  %566 = load i32, i32* %add.ptr1095, align 4, !dbg !18288
  %and1096 = and i32 %566, -16777216, !dbg !18288
  %shr1097 = lshr i32 %and1096, 24, !dbg !18288
  %or1098 = or i32 %or1094, %shr1097, !dbg !18288
  br label %cond.end1102, !dbg !18288

cond.false1099:                                   ; preds = %cond.false1081
  %567 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1100 = getelementptr i32, i32* %567, i64 9, !dbg !18288
  %568 = load i32, i32* %add.ptr1100, align 4, !dbg !18288
  %call1101 = call i32 @__fswab32(i32 %568) #10, !dbg !18288
  br label %cond.end1102, !dbg !18288

cond.end1102:                                     ; preds = %cond.false1099, %cond.true1083
  %cond1103 = phi i32 [ %or1098, %cond.true1083 ], [ %call1101, %cond.false1099 ], !dbg !18288
  %and1104 = and i32 %cond1103, 0, !dbg !18288
  %569 = load i32, i32* %_v940, align 4, !dbg !18288
  %shl1105 = shl i32 %569, 0, !dbg !18288
  %or1106 = or i32 %and1104, %shl1105, !dbg !18288
  %call1107 = call i32 @__fswab32(i32 %or1106) #10, !dbg !18288
  br label %cond.end1108, !dbg !18288

cond.end1108:                                     ; preds = %cond.end1102, %cond.end1073
  %cond1109 = phi i32 [ %or1080, %cond.end1073 ], [ %call1107, %cond.end1102 ], !dbg !18288
  %570 = load i32*, i32** %flow_group_in, align 8, !dbg !18288
  %add.ptr1110 = getelementptr i32, i32* %570, i64 9, !dbg !18288
  store i32 %cond1109, i32* %add.ptr1110, align 4, !dbg !18288
  br label %do.end1111, !dbg !18288

do.end1111:                                       ; preds = %cond.end1108
  %571 = load i8*, i8** %dmac, align 8, !dbg !18291
  call void @eth_zero_addr(i8* %571) #8, !dbg !18292
  %572 = load i8*, i8** %dmac, align 8, !dbg !18293
  %arrayidx1112 = getelementptr i8, i8* %572, i64 0, !dbg !18293
  store i8 1, i8* %arrayidx1112, align 1, !dbg !18294
  %573 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18295
  %574 = load i32*, i32** %flow_group_in, align 8, !dbg !18296
  %call1113 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %573, i32* %574) #8, !dbg !18297
  store %struct.mlx5_flow_group* %call1113, %struct.mlx5_flow_group** %g, align 8, !dbg !18298
  %575 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18299
  %576 = bitcast %struct.mlx5_flow_group* %575 to i8*, !dbg !18299
  %call1114 = call zeroext i1 @IS_ERR(i8* %576) #8, !dbg !18301
  br i1 %call1114, label %if.then1115, label %if.end1119, !dbg !18302

if.then1115:                                      ; preds = %do.end1111
  %577 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18303
  %578 = bitcast %struct.mlx5_flow_group* %577 to i8*, !dbg !18303
  %call1116 = call i64 @PTR_ERR(i8* %578) #8, !dbg !18305
  %conv1117 = trunc i64 %call1116 to i32, !dbg !18305
  store i32 %conv1117, i32* %err, align 4, !dbg !18306
  %579 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18307
  %device1118 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %579, i32 0, i32 0, !dbg !18307
  %580 = load %struct.device*, %struct.device** %device1118, align 8, !dbg !18307
  %581 = load i32, i32* %err, align 4, !dbg !18307
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %580, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.34, i64 0, i64 0), i32 %581) #11, !dbg !18307
  br label %out, !dbg !18308

if.end1119:                                       ; preds = %do.end1111
  %582 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18309
  %583 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18310
  %fdb_table1120 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %583, i32 0, i32 2, !dbg !18311
  %584 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table1120, i32 0, i32 0, !dbg !18312
  %legacy1121 = bitcast %union.anon.154* %584 to %struct.legacy_fdb*, !dbg !18312
  %allmulti_grp = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy1121, i32 0, i32 2, !dbg !18313
  store %struct.mlx5_flow_group* %582, %struct.mlx5_flow_group** %allmulti_grp, align 8, !dbg !18314
  %585 = load i8*, i8** %dmac, align 8, !dbg !18315
  call void @eth_zero_addr(i8* %585) #8, !dbg !18316
  br label %do.body1122, !dbg !18317

do.body1122:                                      ; preds = %if.end1119
  call void @llvm.dbg.declare(metadata i32* %_v1123, metadata !18318, metadata !DIExpression()), !dbg !18320
  store i32 2, i32* %_v1123, align 4, !dbg !18320
  br label %do.body1124, !dbg !18320

do.body1124:                                      ; preds = %do.body1122
  br label %do.end1125, !dbg !18321

do.end1125:                                       ; preds = %do.body1124
  %586 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1126 = getelementptr i32, i32* %586, i64 15, !dbg !18320
  %587 = load i32, i32* %add.ptr1126, align 4, !dbg !18320
  %588 = call i1 @llvm.is.constant.i32(i32 %587), !dbg !18320
  br i1 %588, label %cond.true1127, label %cond.false1143, !dbg !18320

cond.true1127:                                    ; preds = %do.end1125
  %589 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1128 = getelementptr i32, i32* %589, i64 15, !dbg !18320
  %590 = load i32, i32* %add.ptr1128, align 4, !dbg !18320
  %and1129 = and i32 %590, 255, !dbg !18320
  %shl1130 = shl i32 %and1129, 24, !dbg !18320
  %591 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1131 = getelementptr i32, i32* %591, i64 15, !dbg !18320
  %592 = load i32, i32* %add.ptr1131, align 4, !dbg !18320
  %and1132 = and i32 %592, 65280, !dbg !18320
  %shl1133 = shl i32 %and1132, 8, !dbg !18320
  %or1134 = or i32 %shl1130, %shl1133, !dbg !18320
  %593 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1135 = getelementptr i32, i32* %593, i64 15, !dbg !18320
  %594 = load i32, i32* %add.ptr1135, align 4, !dbg !18320
  %and1136 = and i32 %594, 16711680, !dbg !18320
  %shr1137 = lshr i32 %and1136, 8, !dbg !18320
  %or1138 = or i32 %or1134, %shr1137, !dbg !18320
  %595 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1139 = getelementptr i32, i32* %595, i64 15, !dbg !18320
  %596 = load i32, i32* %add.ptr1139, align 4, !dbg !18320
  %and1140 = and i32 %596, -16777216, !dbg !18320
  %shr1141 = lshr i32 %and1140, 24, !dbg !18320
  %or1142 = or i32 %or1138, %shr1141, !dbg !18320
  br label %cond.end1146, !dbg !18320

cond.false1143:                                   ; preds = %do.end1125
  %597 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1144 = getelementptr i32, i32* %597, i64 15, !dbg !18320
  %598 = load i32, i32* %add.ptr1144, align 4, !dbg !18320
  %call1145 = call i32 @__fswab32(i32 %598) #10, !dbg !18320
  br label %cond.end1146, !dbg !18320

cond.end1146:                                     ; preds = %cond.false1143, %cond.true1127
  %cond1147 = phi i32 [ %or1142, %cond.true1127 ], [ %call1145, %cond.false1143 ], !dbg !18320
  %and1148 = and i32 %cond1147, -256, !dbg !18320
  %599 = load i32, i32* %_v1123, align 4, !dbg !18320
  %and1149 = and i32 %599, 255, !dbg !18320
  %shl1150 = shl i32 %and1149, 0, !dbg !18320
  %or1151 = or i32 %and1148, %shl1150, !dbg !18320
  %600 = call i1 @llvm.is.constant.i32(i32 %or1151), !dbg !18320
  br i1 %600, label %cond.true1152, label %cond.false1268, !dbg !18320

cond.true1152:                                    ; preds = %cond.end1146
  %601 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1153 = getelementptr i32, i32* %601, i64 15, !dbg !18320
  %602 = load i32, i32* %add.ptr1153, align 4, !dbg !18320
  %603 = call i1 @llvm.is.constant.i32(i32 %602), !dbg !18320
  br i1 %603, label %cond.true1154, label %cond.false1170, !dbg !18320

cond.true1154:                                    ; preds = %cond.true1152
  %604 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1155 = getelementptr i32, i32* %604, i64 15, !dbg !18320
  %605 = load i32, i32* %add.ptr1155, align 4, !dbg !18320
  %and1156 = and i32 %605, 255, !dbg !18320
  %shl1157 = shl i32 %and1156, 24, !dbg !18320
  %606 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1158 = getelementptr i32, i32* %606, i64 15, !dbg !18320
  %607 = load i32, i32* %add.ptr1158, align 4, !dbg !18320
  %and1159 = and i32 %607, 65280, !dbg !18320
  %shl1160 = shl i32 %and1159, 8, !dbg !18320
  %or1161 = or i32 %shl1157, %shl1160, !dbg !18320
  %608 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1162 = getelementptr i32, i32* %608, i64 15, !dbg !18320
  %609 = load i32, i32* %add.ptr1162, align 4, !dbg !18320
  %and1163 = and i32 %609, 16711680, !dbg !18320
  %shr1164 = lshr i32 %and1163, 8, !dbg !18320
  %or1165 = or i32 %or1161, %shr1164, !dbg !18320
  %610 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1166 = getelementptr i32, i32* %610, i64 15, !dbg !18320
  %611 = load i32, i32* %add.ptr1166, align 4, !dbg !18320
  %and1167 = and i32 %611, -16777216, !dbg !18320
  %shr1168 = lshr i32 %and1167, 24, !dbg !18320
  %or1169 = or i32 %or1165, %shr1168, !dbg !18320
  br label %cond.end1173, !dbg !18320

cond.false1170:                                   ; preds = %cond.true1152
  %612 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1171 = getelementptr i32, i32* %612, i64 15, !dbg !18320
  %613 = load i32, i32* %add.ptr1171, align 4, !dbg !18320
  %call1172 = call i32 @__fswab32(i32 %613) #10, !dbg !18320
  br label %cond.end1173, !dbg !18320

cond.end1173:                                     ; preds = %cond.false1170, %cond.true1154
  %cond1174 = phi i32 [ %or1169, %cond.true1154 ], [ %call1172, %cond.false1170 ], !dbg !18320
  %and1175 = and i32 %cond1174, -256, !dbg !18320
  %614 = load i32, i32* %_v1123, align 4, !dbg !18320
  %and1176 = and i32 %614, 255, !dbg !18320
  %shl1177 = shl i32 %and1176, 0, !dbg !18320
  %or1178 = or i32 %and1175, %shl1177, !dbg !18320
  %and1179 = and i32 %or1178, 255, !dbg !18320
  %shl1180 = shl i32 %and1179, 24, !dbg !18320
  %615 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1181 = getelementptr i32, i32* %615, i64 15, !dbg !18320
  %616 = load i32, i32* %add.ptr1181, align 4, !dbg !18320
  %617 = call i1 @llvm.is.constant.i32(i32 %616), !dbg !18320
  br i1 %617, label %cond.true1182, label %cond.false1198, !dbg !18320

cond.true1182:                                    ; preds = %cond.end1173
  %618 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1183 = getelementptr i32, i32* %618, i64 15, !dbg !18320
  %619 = load i32, i32* %add.ptr1183, align 4, !dbg !18320
  %and1184 = and i32 %619, 255, !dbg !18320
  %shl1185 = shl i32 %and1184, 24, !dbg !18320
  %620 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1186 = getelementptr i32, i32* %620, i64 15, !dbg !18320
  %621 = load i32, i32* %add.ptr1186, align 4, !dbg !18320
  %and1187 = and i32 %621, 65280, !dbg !18320
  %shl1188 = shl i32 %and1187, 8, !dbg !18320
  %or1189 = or i32 %shl1185, %shl1188, !dbg !18320
  %622 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1190 = getelementptr i32, i32* %622, i64 15, !dbg !18320
  %623 = load i32, i32* %add.ptr1190, align 4, !dbg !18320
  %and1191 = and i32 %623, 16711680, !dbg !18320
  %shr1192 = lshr i32 %and1191, 8, !dbg !18320
  %or1193 = or i32 %or1189, %shr1192, !dbg !18320
  %624 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1194 = getelementptr i32, i32* %624, i64 15, !dbg !18320
  %625 = load i32, i32* %add.ptr1194, align 4, !dbg !18320
  %and1195 = and i32 %625, -16777216, !dbg !18320
  %shr1196 = lshr i32 %and1195, 24, !dbg !18320
  %or1197 = or i32 %or1193, %shr1196, !dbg !18320
  br label %cond.end1201, !dbg !18320

cond.false1198:                                   ; preds = %cond.end1173
  %626 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1199 = getelementptr i32, i32* %626, i64 15, !dbg !18320
  %627 = load i32, i32* %add.ptr1199, align 4, !dbg !18320
  %call1200 = call i32 @__fswab32(i32 %627) #10, !dbg !18320
  br label %cond.end1201, !dbg !18320

cond.end1201:                                     ; preds = %cond.false1198, %cond.true1182
  %cond1202 = phi i32 [ %or1197, %cond.true1182 ], [ %call1200, %cond.false1198 ], !dbg !18320
  %and1203 = and i32 %cond1202, -256, !dbg !18320
  %628 = load i32, i32* %_v1123, align 4, !dbg !18320
  %and1204 = and i32 %628, 255, !dbg !18320
  %shl1205 = shl i32 %and1204, 0, !dbg !18320
  %or1206 = or i32 %and1203, %shl1205, !dbg !18320
  %and1207 = and i32 %or1206, 65280, !dbg !18320
  %shl1208 = shl i32 %and1207, 8, !dbg !18320
  %or1209 = or i32 %shl1180, %shl1208, !dbg !18320
  %629 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1210 = getelementptr i32, i32* %629, i64 15, !dbg !18320
  %630 = load i32, i32* %add.ptr1210, align 4, !dbg !18320
  %631 = call i1 @llvm.is.constant.i32(i32 %630), !dbg !18320
  br i1 %631, label %cond.true1211, label %cond.false1227, !dbg !18320

cond.true1211:                                    ; preds = %cond.end1201
  %632 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1212 = getelementptr i32, i32* %632, i64 15, !dbg !18320
  %633 = load i32, i32* %add.ptr1212, align 4, !dbg !18320
  %and1213 = and i32 %633, 255, !dbg !18320
  %shl1214 = shl i32 %and1213, 24, !dbg !18320
  %634 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1215 = getelementptr i32, i32* %634, i64 15, !dbg !18320
  %635 = load i32, i32* %add.ptr1215, align 4, !dbg !18320
  %and1216 = and i32 %635, 65280, !dbg !18320
  %shl1217 = shl i32 %and1216, 8, !dbg !18320
  %or1218 = or i32 %shl1214, %shl1217, !dbg !18320
  %636 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1219 = getelementptr i32, i32* %636, i64 15, !dbg !18320
  %637 = load i32, i32* %add.ptr1219, align 4, !dbg !18320
  %and1220 = and i32 %637, 16711680, !dbg !18320
  %shr1221 = lshr i32 %and1220, 8, !dbg !18320
  %or1222 = or i32 %or1218, %shr1221, !dbg !18320
  %638 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1223 = getelementptr i32, i32* %638, i64 15, !dbg !18320
  %639 = load i32, i32* %add.ptr1223, align 4, !dbg !18320
  %and1224 = and i32 %639, -16777216, !dbg !18320
  %shr1225 = lshr i32 %and1224, 24, !dbg !18320
  %or1226 = or i32 %or1222, %shr1225, !dbg !18320
  br label %cond.end1230, !dbg !18320

cond.false1227:                                   ; preds = %cond.end1201
  %640 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1228 = getelementptr i32, i32* %640, i64 15, !dbg !18320
  %641 = load i32, i32* %add.ptr1228, align 4, !dbg !18320
  %call1229 = call i32 @__fswab32(i32 %641) #10, !dbg !18320
  br label %cond.end1230, !dbg !18320

cond.end1230:                                     ; preds = %cond.false1227, %cond.true1211
  %cond1231 = phi i32 [ %or1226, %cond.true1211 ], [ %call1229, %cond.false1227 ], !dbg !18320
  %and1232 = and i32 %cond1231, -256, !dbg !18320
  %642 = load i32, i32* %_v1123, align 4, !dbg !18320
  %and1233 = and i32 %642, 255, !dbg !18320
  %shl1234 = shl i32 %and1233, 0, !dbg !18320
  %or1235 = or i32 %and1232, %shl1234, !dbg !18320
  %and1236 = and i32 %or1235, 16711680, !dbg !18320
  %shr1237 = lshr i32 %and1236, 8, !dbg !18320
  %or1238 = or i32 %or1209, %shr1237, !dbg !18320
  %643 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1239 = getelementptr i32, i32* %643, i64 15, !dbg !18320
  %644 = load i32, i32* %add.ptr1239, align 4, !dbg !18320
  %645 = call i1 @llvm.is.constant.i32(i32 %644), !dbg !18320
  br i1 %645, label %cond.true1240, label %cond.false1256, !dbg !18320

cond.true1240:                                    ; preds = %cond.end1230
  %646 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1241 = getelementptr i32, i32* %646, i64 15, !dbg !18320
  %647 = load i32, i32* %add.ptr1241, align 4, !dbg !18320
  %and1242 = and i32 %647, 255, !dbg !18320
  %shl1243 = shl i32 %and1242, 24, !dbg !18320
  %648 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1244 = getelementptr i32, i32* %648, i64 15, !dbg !18320
  %649 = load i32, i32* %add.ptr1244, align 4, !dbg !18320
  %and1245 = and i32 %649, 65280, !dbg !18320
  %shl1246 = shl i32 %and1245, 8, !dbg !18320
  %or1247 = or i32 %shl1243, %shl1246, !dbg !18320
  %650 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1248 = getelementptr i32, i32* %650, i64 15, !dbg !18320
  %651 = load i32, i32* %add.ptr1248, align 4, !dbg !18320
  %and1249 = and i32 %651, 16711680, !dbg !18320
  %shr1250 = lshr i32 %and1249, 8, !dbg !18320
  %or1251 = or i32 %or1247, %shr1250, !dbg !18320
  %652 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1252 = getelementptr i32, i32* %652, i64 15, !dbg !18320
  %653 = load i32, i32* %add.ptr1252, align 4, !dbg !18320
  %and1253 = and i32 %653, -16777216, !dbg !18320
  %shr1254 = lshr i32 %and1253, 24, !dbg !18320
  %or1255 = or i32 %or1251, %shr1254, !dbg !18320
  br label %cond.end1259, !dbg !18320

cond.false1256:                                   ; preds = %cond.end1230
  %654 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1257 = getelementptr i32, i32* %654, i64 15, !dbg !18320
  %655 = load i32, i32* %add.ptr1257, align 4, !dbg !18320
  %call1258 = call i32 @__fswab32(i32 %655) #10, !dbg !18320
  br label %cond.end1259, !dbg !18320

cond.end1259:                                     ; preds = %cond.false1256, %cond.true1240
  %cond1260 = phi i32 [ %or1255, %cond.true1240 ], [ %call1258, %cond.false1256 ], !dbg !18320
  %and1261 = and i32 %cond1260, -256, !dbg !18320
  %656 = load i32, i32* %_v1123, align 4, !dbg !18320
  %and1262 = and i32 %656, 255, !dbg !18320
  %shl1263 = shl i32 %and1262, 0, !dbg !18320
  %or1264 = or i32 %and1261, %shl1263, !dbg !18320
  %and1265 = and i32 %or1264, -16777216, !dbg !18320
  %shr1266 = lshr i32 %and1265, 24, !dbg !18320
  %or1267 = or i32 %or1238, %shr1266, !dbg !18320
  br label %cond.end1296, !dbg !18320

cond.false1268:                                   ; preds = %cond.end1146
  %657 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1269 = getelementptr i32, i32* %657, i64 15, !dbg !18320
  %658 = load i32, i32* %add.ptr1269, align 4, !dbg !18320
  %659 = call i1 @llvm.is.constant.i32(i32 %658), !dbg !18320
  br i1 %659, label %cond.true1270, label %cond.false1286, !dbg !18320

cond.true1270:                                    ; preds = %cond.false1268
  %660 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1271 = getelementptr i32, i32* %660, i64 15, !dbg !18320
  %661 = load i32, i32* %add.ptr1271, align 4, !dbg !18320
  %and1272 = and i32 %661, 255, !dbg !18320
  %shl1273 = shl i32 %and1272, 24, !dbg !18320
  %662 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1274 = getelementptr i32, i32* %662, i64 15, !dbg !18320
  %663 = load i32, i32* %add.ptr1274, align 4, !dbg !18320
  %and1275 = and i32 %663, 65280, !dbg !18320
  %shl1276 = shl i32 %and1275, 8, !dbg !18320
  %or1277 = or i32 %shl1273, %shl1276, !dbg !18320
  %664 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1278 = getelementptr i32, i32* %664, i64 15, !dbg !18320
  %665 = load i32, i32* %add.ptr1278, align 4, !dbg !18320
  %and1279 = and i32 %665, 16711680, !dbg !18320
  %shr1280 = lshr i32 %and1279, 8, !dbg !18320
  %or1281 = or i32 %or1277, %shr1280, !dbg !18320
  %666 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1282 = getelementptr i32, i32* %666, i64 15, !dbg !18320
  %667 = load i32, i32* %add.ptr1282, align 4, !dbg !18320
  %and1283 = and i32 %667, -16777216, !dbg !18320
  %shr1284 = lshr i32 %and1283, 24, !dbg !18320
  %or1285 = or i32 %or1281, %shr1284, !dbg !18320
  br label %cond.end1289, !dbg !18320

cond.false1286:                                   ; preds = %cond.false1268
  %668 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1287 = getelementptr i32, i32* %668, i64 15, !dbg !18320
  %669 = load i32, i32* %add.ptr1287, align 4, !dbg !18320
  %call1288 = call i32 @__fswab32(i32 %669) #10, !dbg !18320
  br label %cond.end1289, !dbg !18320

cond.end1289:                                     ; preds = %cond.false1286, %cond.true1270
  %cond1290 = phi i32 [ %or1285, %cond.true1270 ], [ %call1288, %cond.false1286 ], !dbg !18320
  %and1291 = and i32 %cond1290, -256, !dbg !18320
  %670 = load i32, i32* %_v1123, align 4, !dbg !18320
  %and1292 = and i32 %670, 255, !dbg !18320
  %shl1293 = shl i32 %and1292, 0, !dbg !18320
  %or1294 = or i32 %and1291, %shl1293, !dbg !18320
  %call1295 = call i32 @__fswab32(i32 %or1294) #10, !dbg !18320
  br label %cond.end1296, !dbg !18320

cond.end1296:                                     ; preds = %cond.end1289, %cond.end1259
  %cond1297 = phi i32 [ %or1267, %cond.end1259 ], [ %call1295, %cond.end1289 ], !dbg !18320
  %671 = load i32*, i32** %flow_group_in, align 8, !dbg !18320
  %add.ptr1298 = getelementptr i32, i32* %671, i64 15, !dbg !18320
  store i32 %cond1297, i32* %add.ptr1298, align 4, !dbg !18320
  br label %do.end1299, !dbg !18320

do.end1299:                                       ; preds = %cond.end1296
  br label %do.body1300, !dbg !18323

do.body1300:                                      ; preds = %do.end1299
  br label %do.body1301, !dbg !18324

do.body1301:                                      ; preds = %do.body1300
  br label %do.end1302, !dbg !18326

do.end1302:                                       ; preds = %do.body1301
  %672 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %673 = bitcast i8* %672 to i32*, !dbg !18324
  %add.ptr1303 = getelementptr i32, i32* %673, i64 17, !dbg !18324
  %674 = load i32, i32* %add.ptr1303, align 4, !dbg !18324
  %675 = call i1 @llvm.is.constant.i32(i32 %674), !dbg !18324
  br i1 %675, label %cond.true1304, label %cond.false1320, !dbg !18324

cond.true1304:                                    ; preds = %do.end1302
  %676 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %677 = bitcast i8* %676 to i32*, !dbg !18324
  %add.ptr1305 = getelementptr i32, i32* %677, i64 17, !dbg !18324
  %678 = load i32, i32* %add.ptr1305, align 4, !dbg !18324
  %and1306 = and i32 %678, 255, !dbg !18324
  %shl1307 = shl i32 %and1306, 24, !dbg !18324
  %679 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %680 = bitcast i8* %679 to i32*, !dbg !18324
  %add.ptr1308 = getelementptr i32, i32* %680, i64 17, !dbg !18324
  %681 = load i32, i32* %add.ptr1308, align 4, !dbg !18324
  %and1309 = and i32 %681, 65280, !dbg !18324
  %shl1310 = shl i32 %and1309, 8, !dbg !18324
  %or1311 = or i32 %shl1307, %shl1310, !dbg !18324
  %682 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %683 = bitcast i8* %682 to i32*, !dbg !18324
  %add.ptr1312 = getelementptr i32, i32* %683, i64 17, !dbg !18324
  %684 = load i32, i32* %add.ptr1312, align 4, !dbg !18324
  %and1313 = and i32 %684, 16711680, !dbg !18324
  %shr1314 = lshr i32 %and1313, 8, !dbg !18324
  %or1315 = or i32 %or1311, %shr1314, !dbg !18324
  %685 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %686 = bitcast i8* %685 to i32*, !dbg !18324
  %add.ptr1316 = getelementptr i32, i32* %686, i64 17, !dbg !18324
  %687 = load i32, i32* %add.ptr1316, align 4, !dbg !18324
  %and1317 = and i32 %687, -16777216, !dbg !18324
  %shr1318 = lshr i32 %and1317, 24, !dbg !18324
  %or1319 = or i32 %or1315, %shr1318, !dbg !18324
  br label %cond.end1323, !dbg !18324

cond.false1320:                                   ; preds = %do.end1302
  %688 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %689 = bitcast i8* %688 to i32*, !dbg !18324
  %add.ptr1321 = getelementptr i32, i32* %689, i64 17, !dbg !18324
  %690 = load i32, i32* %add.ptr1321, align 4, !dbg !18324
  %call1322 = call i32 @__fswab32(i32 %690) #10, !dbg !18324
  br label %cond.end1323, !dbg !18324

cond.end1323:                                     ; preds = %cond.false1320, %cond.true1304
  %cond1324 = phi i32 [ %or1319, %cond.true1304 ], [ %call1322, %cond.false1320 ], !dbg !18324
  %and1325 = and i32 %cond1324, -65536, !dbg !18324
  %or1326 = or i32 %and1325, 65535, !dbg !18324
  %691 = call i1 @llvm.is.constant.i32(i32 %or1326), !dbg !18324
  br i1 %691, label %cond.true1327, label %cond.false1435, !dbg !18324

cond.true1327:                                    ; preds = %cond.end1323
  %692 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %693 = bitcast i8* %692 to i32*, !dbg !18324
  %add.ptr1328 = getelementptr i32, i32* %693, i64 17, !dbg !18324
  %694 = load i32, i32* %add.ptr1328, align 4, !dbg !18324
  %695 = call i1 @llvm.is.constant.i32(i32 %694), !dbg !18324
  br i1 %695, label %cond.true1329, label %cond.false1345, !dbg !18324

cond.true1329:                                    ; preds = %cond.true1327
  %696 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %697 = bitcast i8* %696 to i32*, !dbg !18324
  %add.ptr1330 = getelementptr i32, i32* %697, i64 17, !dbg !18324
  %698 = load i32, i32* %add.ptr1330, align 4, !dbg !18324
  %and1331 = and i32 %698, 255, !dbg !18324
  %shl1332 = shl i32 %and1331, 24, !dbg !18324
  %699 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %700 = bitcast i8* %699 to i32*, !dbg !18324
  %add.ptr1333 = getelementptr i32, i32* %700, i64 17, !dbg !18324
  %701 = load i32, i32* %add.ptr1333, align 4, !dbg !18324
  %and1334 = and i32 %701, 65280, !dbg !18324
  %shl1335 = shl i32 %and1334, 8, !dbg !18324
  %or1336 = or i32 %shl1332, %shl1335, !dbg !18324
  %702 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %703 = bitcast i8* %702 to i32*, !dbg !18324
  %add.ptr1337 = getelementptr i32, i32* %703, i64 17, !dbg !18324
  %704 = load i32, i32* %add.ptr1337, align 4, !dbg !18324
  %and1338 = and i32 %704, 16711680, !dbg !18324
  %shr1339 = lshr i32 %and1338, 8, !dbg !18324
  %or1340 = or i32 %or1336, %shr1339, !dbg !18324
  %705 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %706 = bitcast i8* %705 to i32*, !dbg !18324
  %add.ptr1341 = getelementptr i32, i32* %706, i64 17, !dbg !18324
  %707 = load i32, i32* %add.ptr1341, align 4, !dbg !18324
  %and1342 = and i32 %707, -16777216, !dbg !18324
  %shr1343 = lshr i32 %and1342, 24, !dbg !18324
  %or1344 = or i32 %or1340, %shr1343, !dbg !18324
  br label %cond.end1348, !dbg !18324

cond.false1345:                                   ; preds = %cond.true1327
  %708 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %709 = bitcast i8* %708 to i32*, !dbg !18324
  %add.ptr1346 = getelementptr i32, i32* %709, i64 17, !dbg !18324
  %710 = load i32, i32* %add.ptr1346, align 4, !dbg !18324
  %call1347 = call i32 @__fswab32(i32 %710) #10, !dbg !18324
  br label %cond.end1348, !dbg !18324

cond.end1348:                                     ; preds = %cond.false1345, %cond.true1329
  %cond1349 = phi i32 [ %or1344, %cond.true1329 ], [ %call1347, %cond.false1345 ], !dbg !18324
  %and1350 = and i32 %cond1349, -65536, !dbg !18324
  %or1351 = or i32 %and1350, 65535, !dbg !18324
  %and1352 = and i32 %or1351, 255, !dbg !18324
  %shl1353 = shl i32 %and1352, 24, !dbg !18324
  %711 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %712 = bitcast i8* %711 to i32*, !dbg !18324
  %add.ptr1354 = getelementptr i32, i32* %712, i64 17, !dbg !18324
  %713 = load i32, i32* %add.ptr1354, align 4, !dbg !18324
  %714 = call i1 @llvm.is.constant.i32(i32 %713), !dbg !18324
  br i1 %714, label %cond.true1355, label %cond.false1371, !dbg !18324

cond.true1355:                                    ; preds = %cond.end1348
  %715 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %716 = bitcast i8* %715 to i32*, !dbg !18324
  %add.ptr1356 = getelementptr i32, i32* %716, i64 17, !dbg !18324
  %717 = load i32, i32* %add.ptr1356, align 4, !dbg !18324
  %and1357 = and i32 %717, 255, !dbg !18324
  %shl1358 = shl i32 %and1357, 24, !dbg !18324
  %718 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %719 = bitcast i8* %718 to i32*, !dbg !18324
  %add.ptr1359 = getelementptr i32, i32* %719, i64 17, !dbg !18324
  %720 = load i32, i32* %add.ptr1359, align 4, !dbg !18324
  %and1360 = and i32 %720, 65280, !dbg !18324
  %shl1361 = shl i32 %and1360, 8, !dbg !18324
  %or1362 = or i32 %shl1358, %shl1361, !dbg !18324
  %721 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %722 = bitcast i8* %721 to i32*, !dbg !18324
  %add.ptr1363 = getelementptr i32, i32* %722, i64 17, !dbg !18324
  %723 = load i32, i32* %add.ptr1363, align 4, !dbg !18324
  %and1364 = and i32 %723, 16711680, !dbg !18324
  %shr1365 = lshr i32 %and1364, 8, !dbg !18324
  %or1366 = or i32 %or1362, %shr1365, !dbg !18324
  %724 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %725 = bitcast i8* %724 to i32*, !dbg !18324
  %add.ptr1367 = getelementptr i32, i32* %725, i64 17, !dbg !18324
  %726 = load i32, i32* %add.ptr1367, align 4, !dbg !18324
  %and1368 = and i32 %726, -16777216, !dbg !18324
  %shr1369 = lshr i32 %and1368, 24, !dbg !18324
  %or1370 = or i32 %or1366, %shr1369, !dbg !18324
  br label %cond.end1374, !dbg !18324

cond.false1371:                                   ; preds = %cond.end1348
  %727 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %728 = bitcast i8* %727 to i32*, !dbg !18324
  %add.ptr1372 = getelementptr i32, i32* %728, i64 17, !dbg !18324
  %729 = load i32, i32* %add.ptr1372, align 4, !dbg !18324
  %call1373 = call i32 @__fswab32(i32 %729) #10, !dbg !18324
  br label %cond.end1374, !dbg !18324

cond.end1374:                                     ; preds = %cond.false1371, %cond.true1355
  %cond1375 = phi i32 [ %or1370, %cond.true1355 ], [ %call1373, %cond.false1371 ], !dbg !18324
  %and1376 = and i32 %cond1375, -65536, !dbg !18324
  %or1377 = or i32 %and1376, 65535, !dbg !18324
  %and1378 = and i32 %or1377, 65280, !dbg !18324
  %shl1379 = shl i32 %and1378, 8, !dbg !18324
  %or1380 = or i32 %shl1353, %shl1379, !dbg !18324
  %730 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %731 = bitcast i8* %730 to i32*, !dbg !18324
  %add.ptr1381 = getelementptr i32, i32* %731, i64 17, !dbg !18324
  %732 = load i32, i32* %add.ptr1381, align 4, !dbg !18324
  %733 = call i1 @llvm.is.constant.i32(i32 %732), !dbg !18324
  br i1 %733, label %cond.true1382, label %cond.false1398, !dbg !18324

cond.true1382:                                    ; preds = %cond.end1374
  %734 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %735 = bitcast i8* %734 to i32*, !dbg !18324
  %add.ptr1383 = getelementptr i32, i32* %735, i64 17, !dbg !18324
  %736 = load i32, i32* %add.ptr1383, align 4, !dbg !18324
  %and1384 = and i32 %736, 255, !dbg !18324
  %shl1385 = shl i32 %and1384, 24, !dbg !18324
  %737 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %738 = bitcast i8* %737 to i32*, !dbg !18324
  %add.ptr1386 = getelementptr i32, i32* %738, i64 17, !dbg !18324
  %739 = load i32, i32* %add.ptr1386, align 4, !dbg !18324
  %and1387 = and i32 %739, 65280, !dbg !18324
  %shl1388 = shl i32 %and1387, 8, !dbg !18324
  %or1389 = or i32 %shl1385, %shl1388, !dbg !18324
  %740 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %741 = bitcast i8* %740 to i32*, !dbg !18324
  %add.ptr1390 = getelementptr i32, i32* %741, i64 17, !dbg !18324
  %742 = load i32, i32* %add.ptr1390, align 4, !dbg !18324
  %and1391 = and i32 %742, 16711680, !dbg !18324
  %shr1392 = lshr i32 %and1391, 8, !dbg !18324
  %or1393 = or i32 %or1389, %shr1392, !dbg !18324
  %743 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %744 = bitcast i8* %743 to i32*, !dbg !18324
  %add.ptr1394 = getelementptr i32, i32* %744, i64 17, !dbg !18324
  %745 = load i32, i32* %add.ptr1394, align 4, !dbg !18324
  %and1395 = and i32 %745, -16777216, !dbg !18324
  %shr1396 = lshr i32 %and1395, 24, !dbg !18324
  %or1397 = or i32 %or1393, %shr1396, !dbg !18324
  br label %cond.end1401, !dbg !18324

cond.false1398:                                   ; preds = %cond.end1374
  %746 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %747 = bitcast i8* %746 to i32*, !dbg !18324
  %add.ptr1399 = getelementptr i32, i32* %747, i64 17, !dbg !18324
  %748 = load i32, i32* %add.ptr1399, align 4, !dbg !18324
  %call1400 = call i32 @__fswab32(i32 %748) #10, !dbg !18324
  br label %cond.end1401, !dbg !18324

cond.end1401:                                     ; preds = %cond.false1398, %cond.true1382
  %cond1402 = phi i32 [ %or1397, %cond.true1382 ], [ %call1400, %cond.false1398 ], !dbg !18324
  %and1403 = and i32 %cond1402, -65536, !dbg !18324
  %or1404 = or i32 %and1403, 65535, !dbg !18324
  %and1405 = and i32 %or1404, 16711680, !dbg !18324
  %shr1406 = lshr i32 %and1405, 8, !dbg !18324
  %or1407 = or i32 %or1380, %shr1406, !dbg !18324
  %749 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %750 = bitcast i8* %749 to i32*, !dbg !18324
  %add.ptr1408 = getelementptr i32, i32* %750, i64 17, !dbg !18324
  %751 = load i32, i32* %add.ptr1408, align 4, !dbg !18324
  %752 = call i1 @llvm.is.constant.i32(i32 %751), !dbg !18324
  br i1 %752, label %cond.true1409, label %cond.false1425, !dbg !18324

cond.true1409:                                    ; preds = %cond.end1401
  %753 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %754 = bitcast i8* %753 to i32*, !dbg !18324
  %add.ptr1410 = getelementptr i32, i32* %754, i64 17, !dbg !18324
  %755 = load i32, i32* %add.ptr1410, align 4, !dbg !18324
  %and1411 = and i32 %755, 255, !dbg !18324
  %shl1412 = shl i32 %and1411, 24, !dbg !18324
  %756 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %757 = bitcast i8* %756 to i32*, !dbg !18324
  %add.ptr1413 = getelementptr i32, i32* %757, i64 17, !dbg !18324
  %758 = load i32, i32* %add.ptr1413, align 4, !dbg !18324
  %and1414 = and i32 %758, 65280, !dbg !18324
  %shl1415 = shl i32 %and1414, 8, !dbg !18324
  %or1416 = or i32 %shl1412, %shl1415, !dbg !18324
  %759 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %760 = bitcast i8* %759 to i32*, !dbg !18324
  %add.ptr1417 = getelementptr i32, i32* %760, i64 17, !dbg !18324
  %761 = load i32, i32* %add.ptr1417, align 4, !dbg !18324
  %and1418 = and i32 %761, 16711680, !dbg !18324
  %shr1419 = lshr i32 %and1418, 8, !dbg !18324
  %or1420 = or i32 %or1416, %shr1419, !dbg !18324
  %762 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %763 = bitcast i8* %762 to i32*, !dbg !18324
  %add.ptr1421 = getelementptr i32, i32* %763, i64 17, !dbg !18324
  %764 = load i32, i32* %add.ptr1421, align 4, !dbg !18324
  %and1422 = and i32 %764, -16777216, !dbg !18324
  %shr1423 = lshr i32 %and1422, 24, !dbg !18324
  %or1424 = or i32 %or1420, %shr1423, !dbg !18324
  br label %cond.end1428, !dbg !18324

cond.false1425:                                   ; preds = %cond.end1401
  %765 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %766 = bitcast i8* %765 to i32*, !dbg !18324
  %add.ptr1426 = getelementptr i32, i32* %766, i64 17, !dbg !18324
  %767 = load i32, i32* %add.ptr1426, align 4, !dbg !18324
  %call1427 = call i32 @__fswab32(i32 %767) #10, !dbg !18324
  br label %cond.end1428, !dbg !18324

cond.end1428:                                     ; preds = %cond.false1425, %cond.true1409
  %cond1429 = phi i32 [ %or1424, %cond.true1409 ], [ %call1427, %cond.false1425 ], !dbg !18324
  %and1430 = and i32 %cond1429, -65536, !dbg !18324
  %or1431 = or i32 %and1430, 65535, !dbg !18324
  %and1432 = and i32 %or1431, -16777216, !dbg !18324
  %shr1433 = lshr i32 %and1432, 24, !dbg !18324
  %or1434 = or i32 %or1407, %shr1433, !dbg !18324
  br label %cond.end1461, !dbg !18324

cond.false1435:                                   ; preds = %cond.end1323
  %768 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %769 = bitcast i8* %768 to i32*, !dbg !18324
  %add.ptr1436 = getelementptr i32, i32* %769, i64 17, !dbg !18324
  %770 = load i32, i32* %add.ptr1436, align 4, !dbg !18324
  %771 = call i1 @llvm.is.constant.i32(i32 %770), !dbg !18324
  br i1 %771, label %cond.true1437, label %cond.false1453, !dbg !18324

cond.true1437:                                    ; preds = %cond.false1435
  %772 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %773 = bitcast i8* %772 to i32*, !dbg !18324
  %add.ptr1438 = getelementptr i32, i32* %773, i64 17, !dbg !18324
  %774 = load i32, i32* %add.ptr1438, align 4, !dbg !18324
  %and1439 = and i32 %774, 255, !dbg !18324
  %shl1440 = shl i32 %and1439, 24, !dbg !18324
  %775 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %776 = bitcast i8* %775 to i32*, !dbg !18324
  %add.ptr1441 = getelementptr i32, i32* %776, i64 17, !dbg !18324
  %777 = load i32, i32* %add.ptr1441, align 4, !dbg !18324
  %and1442 = and i32 %777, 65280, !dbg !18324
  %shl1443 = shl i32 %and1442, 8, !dbg !18324
  %or1444 = or i32 %shl1440, %shl1443, !dbg !18324
  %778 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %779 = bitcast i8* %778 to i32*, !dbg !18324
  %add.ptr1445 = getelementptr i32, i32* %779, i64 17, !dbg !18324
  %780 = load i32, i32* %add.ptr1445, align 4, !dbg !18324
  %and1446 = and i32 %780, 16711680, !dbg !18324
  %shr1447 = lshr i32 %and1446, 8, !dbg !18324
  %or1448 = or i32 %or1444, %shr1447, !dbg !18324
  %781 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %782 = bitcast i8* %781 to i32*, !dbg !18324
  %add.ptr1449 = getelementptr i32, i32* %782, i64 17, !dbg !18324
  %783 = load i32, i32* %add.ptr1449, align 4, !dbg !18324
  %and1450 = and i32 %783, -16777216, !dbg !18324
  %shr1451 = lshr i32 %and1450, 24, !dbg !18324
  %or1452 = or i32 %or1448, %shr1451, !dbg !18324
  br label %cond.end1456, !dbg !18324

cond.false1453:                                   ; preds = %cond.false1435
  %784 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %785 = bitcast i8* %784 to i32*, !dbg !18324
  %add.ptr1454 = getelementptr i32, i32* %785, i64 17, !dbg !18324
  %786 = load i32, i32* %add.ptr1454, align 4, !dbg !18324
  %call1455 = call i32 @__fswab32(i32 %786) #10, !dbg !18324
  br label %cond.end1456, !dbg !18324

cond.end1456:                                     ; preds = %cond.false1453, %cond.true1437
  %cond1457 = phi i32 [ %or1452, %cond.true1437 ], [ %call1455, %cond.false1453 ], !dbg !18324
  %and1458 = and i32 %cond1457, -65536, !dbg !18324
  %or1459 = or i32 %and1458, 65535, !dbg !18324
  %call1460 = call i32 @__fswab32(i32 %or1459) #10, !dbg !18324
  br label %cond.end1461, !dbg !18324

cond.end1461:                                     ; preds = %cond.end1456, %cond.end1428
  %cond1462 = phi i32 [ %or1434, %cond.end1428 ], [ %call1460, %cond.end1456 ], !dbg !18324
  %787 = load i8*, i8** %match_criteria, align 8, !dbg !18324
  %788 = bitcast i8* %787 to i32*, !dbg !18324
  %add.ptr1463 = getelementptr i32, i32* %788, i64 17, !dbg !18324
  store i32 %cond1462, i32* %add.ptr1463, align 4, !dbg !18324
  br label %do.end1464, !dbg !18324

do.end1464:                                       ; preds = %cond.end1461
  br label %do.body1465, !dbg !18328

do.body1465:                                      ; preds = %do.end1464
  call void @llvm.dbg.declare(metadata i32* %_v1466, metadata !18329, metadata !DIExpression()), !dbg !18331
  %789 = load i32, i32* %table_size, align 4, !dbg !18331
  %sub1467 = sub i32 %789, 1, !dbg !18331
  store i32 %sub1467, i32* %_v1466, align 4, !dbg !18331
  br label %do.body1468, !dbg !18331

do.body1468:                                      ; preds = %do.body1465
  br label %do.end1469, !dbg !18332

do.end1469:                                       ; preds = %do.body1468
  %790 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1470 = getelementptr i32, i32* %790, i64 7, !dbg !18331
  %791 = load i32, i32* %add.ptr1470, align 4, !dbg !18331
  %792 = call i1 @llvm.is.constant.i32(i32 %791), !dbg !18331
  br i1 %792, label %cond.true1471, label %cond.false1487, !dbg !18331

cond.true1471:                                    ; preds = %do.end1469
  %793 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1472 = getelementptr i32, i32* %793, i64 7, !dbg !18331
  %794 = load i32, i32* %add.ptr1472, align 4, !dbg !18331
  %and1473 = and i32 %794, 255, !dbg !18331
  %shl1474 = shl i32 %and1473, 24, !dbg !18331
  %795 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1475 = getelementptr i32, i32* %795, i64 7, !dbg !18331
  %796 = load i32, i32* %add.ptr1475, align 4, !dbg !18331
  %and1476 = and i32 %796, 65280, !dbg !18331
  %shl1477 = shl i32 %and1476, 8, !dbg !18331
  %or1478 = or i32 %shl1474, %shl1477, !dbg !18331
  %797 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1479 = getelementptr i32, i32* %797, i64 7, !dbg !18331
  %798 = load i32, i32* %add.ptr1479, align 4, !dbg !18331
  %and1480 = and i32 %798, 16711680, !dbg !18331
  %shr1481 = lshr i32 %and1480, 8, !dbg !18331
  %or1482 = or i32 %or1478, %shr1481, !dbg !18331
  %799 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1483 = getelementptr i32, i32* %799, i64 7, !dbg !18331
  %800 = load i32, i32* %add.ptr1483, align 4, !dbg !18331
  %and1484 = and i32 %800, -16777216, !dbg !18331
  %shr1485 = lshr i32 %and1484, 24, !dbg !18331
  %or1486 = or i32 %or1482, %shr1485, !dbg !18331
  br label %cond.end1490, !dbg !18331

cond.false1487:                                   ; preds = %do.end1469
  %801 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1488 = getelementptr i32, i32* %801, i64 7, !dbg !18331
  %802 = load i32, i32* %add.ptr1488, align 4, !dbg !18331
  %call1489 = call i32 @__fswab32(i32 %802) #10, !dbg !18331
  br label %cond.end1490, !dbg !18331

cond.end1490:                                     ; preds = %cond.false1487, %cond.true1471
  %cond1491 = phi i32 [ %or1486, %cond.true1471 ], [ %call1489, %cond.false1487 ], !dbg !18331
  %and1492 = and i32 %cond1491, 0, !dbg !18331
  %803 = load i32, i32* %_v1466, align 4, !dbg !18331
  %shl1493 = shl i32 %803, 0, !dbg !18331
  %or1494 = or i32 %and1492, %shl1493, !dbg !18331
  %804 = call i1 @llvm.is.constant.i32(i32 %or1494), !dbg !18331
  br i1 %804, label %cond.true1495, label %cond.false1607, !dbg !18331

cond.true1495:                                    ; preds = %cond.end1490
  %805 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1496 = getelementptr i32, i32* %805, i64 7, !dbg !18331
  %806 = load i32, i32* %add.ptr1496, align 4, !dbg !18331
  %807 = call i1 @llvm.is.constant.i32(i32 %806), !dbg !18331
  br i1 %807, label %cond.true1497, label %cond.false1513, !dbg !18331

cond.true1497:                                    ; preds = %cond.true1495
  %808 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1498 = getelementptr i32, i32* %808, i64 7, !dbg !18331
  %809 = load i32, i32* %add.ptr1498, align 4, !dbg !18331
  %and1499 = and i32 %809, 255, !dbg !18331
  %shl1500 = shl i32 %and1499, 24, !dbg !18331
  %810 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1501 = getelementptr i32, i32* %810, i64 7, !dbg !18331
  %811 = load i32, i32* %add.ptr1501, align 4, !dbg !18331
  %and1502 = and i32 %811, 65280, !dbg !18331
  %shl1503 = shl i32 %and1502, 8, !dbg !18331
  %or1504 = or i32 %shl1500, %shl1503, !dbg !18331
  %812 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1505 = getelementptr i32, i32* %812, i64 7, !dbg !18331
  %813 = load i32, i32* %add.ptr1505, align 4, !dbg !18331
  %and1506 = and i32 %813, 16711680, !dbg !18331
  %shr1507 = lshr i32 %and1506, 8, !dbg !18331
  %or1508 = or i32 %or1504, %shr1507, !dbg !18331
  %814 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1509 = getelementptr i32, i32* %814, i64 7, !dbg !18331
  %815 = load i32, i32* %add.ptr1509, align 4, !dbg !18331
  %and1510 = and i32 %815, -16777216, !dbg !18331
  %shr1511 = lshr i32 %and1510, 24, !dbg !18331
  %or1512 = or i32 %or1508, %shr1511, !dbg !18331
  br label %cond.end1516, !dbg !18331

cond.false1513:                                   ; preds = %cond.true1495
  %816 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1514 = getelementptr i32, i32* %816, i64 7, !dbg !18331
  %817 = load i32, i32* %add.ptr1514, align 4, !dbg !18331
  %call1515 = call i32 @__fswab32(i32 %817) #10, !dbg !18331
  br label %cond.end1516, !dbg !18331

cond.end1516:                                     ; preds = %cond.false1513, %cond.true1497
  %cond1517 = phi i32 [ %or1512, %cond.true1497 ], [ %call1515, %cond.false1513 ], !dbg !18331
  %and1518 = and i32 %cond1517, 0, !dbg !18331
  %818 = load i32, i32* %_v1466, align 4, !dbg !18331
  %shl1519 = shl i32 %818, 0, !dbg !18331
  %or1520 = or i32 %and1518, %shl1519, !dbg !18331
  %and1521 = and i32 %or1520, 255, !dbg !18331
  %shl1522 = shl i32 %and1521, 24, !dbg !18331
  %819 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1523 = getelementptr i32, i32* %819, i64 7, !dbg !18331
  %820 = load i32, i32* %add.ptr1523, align 4, !dbg !18331
  %821 = call i1 @llvm.is.constant.i32(i32 %820), !dbg !18331
  br i1 %821, label %cond.true1524, label %cond.false1540, !dbg !18331

cond.true1524:                                    ; preds = %cond.end1516
  %822 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1525 = getelementptr i32, i32* %822, i64 7, !dbg !18331
  %823 = load i32, i32* %add.ptr1525, align 4, !dbg !18331
  %and1526 = and i32 %823, 255, !dbg !18331
  %shl1527 = shl i32 %and1526, 24, !dbg !18331
  %824 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1528 = getelementptr i32, i32* %824, i64 7, !dbg !18331
  %825 = load i32, i32* %add.ptr1528, align 4, !dbg !18331
  %and1529 = and i32 %825, 65280, !dbg !18331
  %shl1530 = shl i32 %and1529, 8, !dbg !18331
  %or1531 = or i32 %shl1527, %shl1530, !dbg !18331
  %826 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1532 = getelementptr i32, i32* %826, i64 7, !dbg !18331
  %827 = load i32, i32* %add.ptr1532, align 4, !dbg !18331
  %and1533 = and i32 %827, 16711680, !dbg !18331
  %shr1534 = lshr i32 %and1533, 8, !dbg !18331
  %or1535 = or i32 %or1531, %shr1534, !dbg !18331
  %828 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1536 = getelementptr i32, i32* %828, i64 7, !dbg !18331
  %829 = load i32, i32* %add.ptr1536, align 4, !dbg !18331
  %and1537 = and i32 %829, -16777216, !dbg !18331
  %shr1538 = lshr i32 %and1537, 24, !dbg !18331
  %or1539 = or i32 %or1535, %shr1538, !dbg !18331
  br label %cond.end1543, !dbg !18331

cond.false1540:                                   ; preds = %cond.end1516
  %830 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1541 = getelementptr i32, i32* %830, i64 7, !dbg !18331
  %831 = load i32, i32* %add.ptr1541, align 4, !dbg !18331
  %call1542 = call i32 @__fswab32(i32 %831) #10, !dbg !18331
  br label %cond.end1543, !dbg !18331

cond.end1543:                                     ; preds = %cond.false1540, %cond.true1524
  %cond1544 = phi i32 [ %or1539, %cond.true1524 ], [ %call1542, %cond.false1540 ], !dbg !18331
  %and1545 = and i32 %cond1544, 0, !dbg !18331
  %832 = load i32, i32* %_v1466, align 4, !dbg !18331
  %shl1546 = shl i32 %832, 0, !dbg !18331
  %or1547 = or i32 %and1545, %shl1546, !dbg !18331
  %and1548 = and i32 %or1547, 65280, !dbg !18331
  %shl1549 = shl i32 %and1548, 8, !dbg !18331
  %or1550 = or i32 %shl1522, %shl1549, !dbg !18331
  %833 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1551 = getelementptr i32, i32* %833, i64 7, !dbg !18331
  %834 = load i32, i32* %add.ptr1551, align 4, !dbg !18331
  %835 = call i1 @llvm.is.constant.i32(i32 %834), !dbg !18331
  br i1 %835, label %cond.true1552, label %cond.false1568, !dbg !18331

cond.true1552:                                    ; preds = %cond.end1543
  %836 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1553 = getelementptr i32, i32* %836, i64 7, !dbg !18331
  %837 = load i32, i32* %add.ptr1553, align 4, !dbg !18331
  %and1554 = and i32 %837, 255, !dbg !18331
  %shl1555 = shl i32 %and1554, 24, !dbg !18331
  %838 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1556 = getelementptr i32, i32* %838, i64 7, !dbg !18331
  %839 = load i32, i32* %add.ptr1556, align 4, !dbg !18331
  %and1557 = and i32 %839, 65280, !dbg !18331
  %shl1558 = shl i32 %and1557, 8, !dbg !18331
  %or1559 = or i32 %shl1555, %shl1558, !dbg !18331
  %840 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1560 = getelementptr i32, i32* %840, i64 7, !dbg !18331
  %841 = load i32, i32* %add.ptr1560, align 4, !dbg !18331
  %and1561 = and i32 %841, 16711680, !dbg !18331
  %shr1562 = lshr i32 %and1561, 8, !dbg !18331
  %or1563 = or i32 %or1559, %shr1562, !dbg !18331
  %842 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1564 = getelementptr i32, i32* %842, i64 7, !dbg !18331
  %843 = load i32, i32* %add.ptr1564, align 4, !dbg !18331
  %and1565 = and i32 %843, -16777216, !dbg !18331
  %shr1566 = lshr i32 %and1565, 24, !dbg !18331
  %or1567 = or i32 %or1563, %shr1566, !dbg !18331
  br label %cond.end1571, !dbg !18331

cond.false1568:                                   ; preds = %cond.end1543
  %844 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1569 = getelementptr i32, i32* %844, i64 7, !dbg !18331
  %845 = load i32, i32* %add.ptr1569, align 4, !dbg !18331
  %call1570 = call i32 @__fswab32(i32 %845) #10, !dbg !18331
  br label %cond.end1571, !dbg !18331

cond.end1571:                                     ; preds = %cond.false1568, %cond.true1552
  %cond1572 = phi i32 [ %or1567, %cond.true1552 ], [ %call1570, %cond.false1568 ], !dbg !18331
  %and1573 = and i32 %cond1572, 0, !dbg !18331
  %846 = load i32, i32* %_v1466, align 4, !dbg !18331
  %shl1574 = shl i32 %846, 0, !dbg !18331
  %or1575 = or i32 %and1573, %shl1574, !dbg !18331
  %and1576 = and i32 %or1575, 16711680, !dbg !18331
  %shr1577 = lshr i32 %and1576, 8, !dbg !18331
  %or1578 = or i32 %or1550, %shr1577, !dbg !18331
  %847 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1579 = getelementptr i32, i32* %847, i64 7, !dbg !18331
  %848 = load i32, i32* %add.ptr1579, align 4, !dbg !18331
  %849 = call i1 @llvm.is.constant.i32(i32 %848), !dbg !18331
  br i1 %849, label %cond.true1580, label %cond.false1596, !dbg !18331

cond.true1580:                                    ; preds = %cond.end1571
  %850 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1581 = getelementptr i32, i32* %850, i64 7, !dbg !18331
  %851 = load i32, i32* %add.ptr1581, align 4, !dbg !18331
  %and1582 = and i32 %851, 255, !dbg !18331
  %shl1583 = shl i32 %and1582, 24, !dbg !18331
  %852 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1584 = getelementptr i32, i32* %852, i64 7, !dbg !18331
  %853 = load i32, i32* %add.ptr1584, align 4, !dbg !18331
  %and1585 = and i32 %853, 65280, !dbg !18331
  %shl1586 = shl i32 %and1585, 8, !dbg !18331
  %or1587 = or i32 %shl1583, %shl1586, !dbg !18331
  %854 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1588 = getelementptr i32, i32* %854, i64 7, !dbg !18331
  %855 = load i32, i32* %add.ptr1588, align 4, !dbg !18331
  %and1589 = and i32 %855, 16711680, !dbg !18331
  %shr1590 = lshr i32 %and1589, 8, !dbg !18331
  %or1591 = or i32 %or1587, %shr1590, !dbg !18331
  %856 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1592 = getelementptr i32, i32* %856, i64 7, !dbg !18331
  %857 = load i32, i32* %add.ptr1592, align 4, !dbg !18331
  %and1593 = and i32 %857, -16777216, !dbg !18331
  %shr1594 = lshr i32 %and1593, 24, !dbg !18331
  %or1595 = or i32 %or1591, %shr1594, !dbg !18331
  br label %cond.end1599, !dbg !18331

cond.false1596:                                   ; preds = %cond.end1571
  %858 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1597 = getelementptr i32, i32* %858, i64 7, !dbg !18331
  %859 = load i32, i32* %add.ptr1597, align 4, !dbg !18331
  %call1598 = call i32 @__fswab32(i32 %859) #10, !dbg !18331
  br label %cond.end1599, !dbg !18331

cond.end1599:                                     ; preds = %cond.false1596, %cond.true1580
  %cond1600 = phi i32 [ %or1595, %cond.true1580 ], [ %call1598, %cond.false1596 ], !dbg !18331
  %and1601 = and i32 %cond1600, 0, !dbg !18331
  %860 = load i32, i32* %_v1466, align 4, !dbg !18331
  %shl1602 = shl i32 %860, 0, !dbg !18331
  %or1603 = or i32 %and1601, %shl1602, !dbg !18331
  %and1604 = and i32 %or1603, -16777216, !dbg !18331
  %shr1605 = lshr i32 %and1604, 24, !dbg !18331
  %or1606 = or i32 %or1578, %shr1605, !dbg !18331
  br label %cond.end1634, !dbg !18331

cond.false1607:                                   ; preds = %cond.end1490
  %861 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1608 = getelementptr i32, i32* %861, i64 7, !dbg !18331
  %862 = load i32, i32* %add.ptr1608, align 4, !dbg !18331
  %863 = call i1 @llvm.is.constant.i32(i32 %862), !dbg !18331
  br i1 %863, label %cond.true1609, label %cond.false1625, !dbg !18331

cond.true1609:                                    ; preds = %cond.false1607
  %864 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1610 = getelementptr i32, i32* %864, i64 7, !dbg !18331
  %865 = load i32, i32* %add.ptr1610, align 4, !dbg !18331
  %and1611 = and i32 %865, 255, !dbg !18331
  %shl1612 = shl i32 %and1611, 24, !dbg !18331
  %866 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1613 = getelementptr i32, i32* %866, i64 7, !dbg !18331
  %867 = load i32, i32* %add.ptr1613, align 4, !dbg !18331
  %and1614 = and i32 %867, 65280, !dbg !18331
  %shl1615 = shl i32 %and1614, 8, !dbg !18331
  %or1616 = or i32 %shl1612, %shl1615, !dbg !18331
  %868 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1617 = getelementptr i32, i32* %868, i64 7, !dbg !18331
  %869 = load i32, i32* %add.ptr1617, align 4, !dbg !18331
  %and1618 = and i32 %869, 16711680, !dbg !18331
  %shr1619 = lshr i32 %and1618, 8, !dbg !18331
  %or1620 = or i32 %or1616, %shr1619, !dbg !18331
  %870 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1621 = getelementptr i32, i32* %870, i64 7, !dbg !18331
  %871 = load i32, i32* %add.ptr1621, align 4, !dbg !18331
  %and1622 = and i32 %871, -16777216, !dbg !18331
  %shr1623 = lshr i32 %and1622, 24, !dbg !18331
  %or1624 = or i32 %or1620, %shr1623, !dbg !18331
  br label %cond.end1628, !dbg !18331

cond.false1625:                                   ; preds = %cond.false1607
  %872 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1626 = getelementptr i32, i32* %872, i64 7, !dbg !18331
  %873 = load i32, i32* %add.ptr1626, align 4, !dbg !18331
  %call1627 = call i32 @__fswab32(i32 %873) #10, !dbg !18331
  br label %cond.end1628, !dbg !18331

cond.end1628:                                     ; preds = %cond.false1625, %cond.true1609
  %cond1629 = phi i32 [ %or1624, %cond.true1609 ], [ %call1627, %cond.false1625 ], !dbg !18331
  %and1630 = and i32 %cond1629, 0, !dbg !18331
  %874 = load i32, i32* %_v1466, align 4, !dbg !18331
  %shl1631 = shl i32 %874, 0, !dbg !18331
  %or1632 = or i32 %and1630, %shl1631, !dbg !18331
  %call1633 = call i32 @__fswab32(i32 %or1632) #10, !dbg !18331
  br label %cond.end1634, !dbg !18331

cond.end1634:                                     ; preds = %cond.end1628, %cond.end1599
  %cond1635 = phi i32 [ %or1606, %cond.end1599 ], [ %call1633, %cond.end1628 ], !dbg !18331
  %875 = load i32*, i32** %flow_group_in, align 8, !dbg !18331
  %add.ptr1636 = getelementptr i32, i32* %875, i64 7, !dbg !18331
  store i32 %cond1635, i32* %add.ptr1636, align 4, !dbg !18331
  br label %do.end1637, !dbg !18331

do.end1637:                                       ; preds = %cond.end1634
  br label %do.body1638, !dbg !18334

do.body1638:                                      ; preds = %do.end1637
  call void @llvm.dbg.declare(metadata i32* %_v1639, metadata !18335, metadata !DIExpression()), !dbg !18337
  %876 = load i32, i32* %table_size, align 4, !dbg !18337
  %sub1640 = sub i32 %876, 1, !dbg !18337
  store i32 %sub1640, i32* %_v1639, align 4, !dbg !18337
  br label %do.body1641, !dbg !18337

do.body1641:                                      ; preds = %do.body1638
  br label %do.end1642, !dbg !18338

do.end1642:                                       ; preds = %do.body1641
  %877 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1643 = getelementptr i32, i32* %877, i64 9, !dbg !18337
  %878 = load i32, i32* %add.ptr1643, align 4, !dbg !18337
  %879 = call i1 @llvm.is.constant.i32(i32 %878), !dbg !18337
  br i1 %879, label %cond.true1644, label %cond.false1660, !dbg !18337

cond.true1644:                                    ; preds = %do.end1642
  %880 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1645 = getelementptr i32, i32* %880, i64 9, !dbg !18337
  %881 = load i32, i32* %add.ptr1645, align 4, !dbg !18337
  %and1646 = and i32 %881, 255, !dbg !18337
  %shl1647 = shl i32 %and1646, 24, !dbg !18337
  %882 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1648 = getelementptr i32, i32* %882, i64 9, !dbg !18337
  %883 = load i32, i32* %add.ptr1648, align 4, !dbg !18337
  %and1649 = and i32 %883, 65280, !dbg !18337
  %shl1650 = shl i32 %and1649, 8, !dbg !18337
  %or1651 = or i32 %shl1647, %shl1650, !dbg !18337
  %884 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1652 = getelementptr i32, i32* %884, i64 9, !dbg !18337
  %885 = load i32, i32* %add.ptr1652, align 4, !dbg !18337
  %and1653 = and i32 %885, 16711680, !dbg !18337
  %shr1654 = lshr i32 %and1653, 8, !dbg !18337
  %or1655 = or i32 %or1651, %shr1654, !dbg !18337
  %886 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1656 = getelementptr i32, i32* %886, i64 9, !dbg !18337
  %887 = load i32, i32* %add.ptr1656, align 4, !dbg !18337
  %and1657 = and i32 %887, -16777216, !dbg !18337
  %shr1658 = lshr i32 %and1657, 24, !dbg !18337
  %or1659 = or i32 %or1655, %shr1658, !dbg !18337
  br label %cond.end1663, !dbg !18337

cond.false1660:                                   ; preds = %do.end1642
  %888 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1661 = getelementptr i32, i32* %888, i64 9, !dbg !18337
  %889 = load i32, i32* %add.ptr1661, align 4, !dbg !18337
  %call1662 = call i32 @__fswab32(i32 %889) #10, !dbg !18337
  br label %cond.end1663, !dbg !18337

cond.end1663:                                     ; preds = %cond.false1660, %cond.true1644
  %cond1664 = phi i32 [ %or1659, %cond.true1644 ], [ %call1662, %cond.false1660 ], !dbg !18337
  %and1665 = and i32 %cond1664, 0, !dbg !18337
  %890 = load i32, i32* %_v1639, align 4, !dbg !18337
  %shl1666 = shl i32 %890, 0, !dbg !18337
  %or1667 = or i32 %and1665, %shl1666, !dbg !18337
  %891 = call i1 @llvm.is.constant.i32(i32 %or1667), !dbg !18337
  br i1 %891, label %cond.true1668, label %cond.false1780, !dbg !18337

cond.true1668:                                    ; preds = %cond.end1663
  %892 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1669 = getelementptr i32, i32* %892, i64 9, !dbg !18337
  %893 = load i32, i32* %add.ptr1669, align 4, !dbg !18337
  %894 = call i1 @llvm.is.constant.i32(i32 %893), !dbg !18337
  br i1 %894, label %cond.true1670, label %cond.false1686, !dbg !18337

cond.true1670:                                    ; preds = %cond.true1668
  %895 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1671 = getelementptr i32, i32* %895, i64 9, !dbg !18337
  %896 = load i32, i32* %add.ptr1671, align 4, !dbg !18337
  %and1672 = and i32 %896, 255, !dbg !18337
  %shl1673 = shl i32 %and1672, 24, !dbg !18337
  %897 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1674 = getelementptr i32, i32* %897, i64 9, !dbg !18337
  %898 = load i32, i32* %add.ptr1674, align 4, !dbg !18337
  %and1675 = and i32 %898, 65280, !dbg !18337
  %shl1676 = shl i32 %and1675, 8, !dbg !18337
  %or1677 = or i32 %shl1673, %shl1676, !dbg !18337
  %899 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1678 = getelementptr i32, i32* %899, i64 9, !dbg !18337
  %900 = load i32, i32* %add.ptr1678, align 4, !dbg !18337
  %and1679 = and i32 %900, 16711680, !dbg !18337
  %shr1680 = lshr i32 %and1679, 8, !dbg !18337
  %or1681 = or i32 %or1677, %shr1680, !dbg !18337
  %901 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1682 = getelementptr i32, i32* %901, i64 9, !dbg !18337
  %902 = load i32, i32* %add.ptr1682, align 4, !dbg !18337
  %and1683 = and i32 %902, -16777216, !dbg !18337
  %shr1684 = lshr i32 %and1683, 24, !dbg !18337
  %or1685 = or i32 %or1681, %shr1684, !dbg !18337
  br label %cond.end1689, !dbg !18337

cond.false1686:                                   ; preds = %cond.true1668
  %903 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1687 = getelementptr i32, i32* %903, i64 9, !dbg !18337
  %904 = load i32, i32* %add.ptr1687, align 4, !dbg !18337
  %call1688 = call i32 @__fswab32(i32 %904) #10, !dbg !18337
  br label %cond.end1689, !dbg !18337

cond.end1689:                                     ; preds = %cond.false1686, %cond.true1670
  %cond1690 = phi i32 [ %or1685, %cond.true1670 ], [ %call1688, %cond.false1686 ], !dbg !18337
  %and1691 = and i32 %cond1690, 0, !dbg !18337
  %905 = load i32, i32* %_v1639, align 4, !dbg !18337
  %shl1692 = shl i32 %905, 0, !dbg !18337
  %or1693 = or i32 %and1691, %shl1692, !dbg !18337
  %and1694 = and i32 %or1693, 255, !dbg !18337
  %shl1695 = shl i32 %and1694, 24, !dbg !18337
  %906 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1696 = getelementptr i32, i32* %906, i64 9, !dbg !18337
  %907 = load i32, i32* %add.ptr1696, align 4, !dbg !18337
  %908 = call i1 @llvm.is.constant.i32(i32 %907), !dbg !18337
  br i1 %908, label %cond.true1697, label %cond.false1713, !dbg !18337

cond.true1697:                                    ; preds = %cond.end1689
  %909 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1698 = getelementptr i32, i32* %909, i64 9, !dbg !18337
  %910 = load i32, i32* %add.ptr1698, align 4, !dbg !18337
  %and1699 = and i32 %910, 255, !dbg !18337
  %shl1700 = shl i32 %and1699, 24, !dbg !18337
  %911 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1701 = getelementptr i32, i32* %911, i64 9, !dbg !18337
  %912 = load i32, i32* %add.ptr1701, align 4, !dbg !18337
  %and1702 = and i32 %912, 65280, !dbg !18337
  %shl1703 = shl i32 %and1702, 8, !dbg !18337
  %or1704 = or i32 %shl1700, %shl1703, !dbg !18337
  %913 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1705 = getelementptr i32, i32* %913, i64 9, !dbg !18337
  %914 = load i32, i32* %add.ptr1705, align 4, !dbg !18337
  %and1706 = and i32 %914, 16711680, !dbg !18337
  %shr1707 = lshr i32 %and1706, 8, !dbg !18337
  %or1708 = or i32 %or1704, %shr1707, !dbg !18337
  %915 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1709 = getelementptr i32, i32* %915, i64 9, !dbg !18337
  %916 = load i32, i32* %add.ptr1709, align 4, !dbg !18337
  %and1710 = and i32 %916, -16777216, !dbg !18337
  %shr1711 = lshr i32 %and1710, 24, !dbg !18337
  %or1712 = or i32 %or1708, %shr1711, !dbg !18337
  br label %cond.end1716, !dbg !18337

cond.false1713:                                   ; preds = %cond.end1689
  %917 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1714 = getelementptr i32, i32* %917, i64 9, !dbg !18337
  %918 = load i32, i32* %add.ptr1714, align 4, !dbg !18337
  %call1715 = call i32 @__fswab32(i32 %918) #10, !dbg !18337
  br label %cond.end1716, !dbg !18337

cond.end1716:                                     ; preds = %cond.false1713, %cond.true1697
  %cond1717 = phi i32 [ %or1712, %cond.true1697 ], [ %call1715, %cond.false1713 ], !dbg !18337
  %and1718 = and i32 %cond1717, 0, !dbg !18337
  %919 = load i32, i32* %_v1639, align 4, !dbg !18337
  %shl1719 = shl i32 %919, 0, !dbg !18337
  %or1720 = or i32 %and1718, %shl1719, !dbg !18337
  %and1721 = and i32 %or1720, 65280, !dbg !18337
  %shl1722 = shl i32 %and1721, 8, !dbg !18337
  %or1723 = or i32 %shl1695, %shl1722, !dbg !18337
  %920 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1724 = getelementptr i32, i32* %920, i64 9, !dbg !18337
  %921 = load i32, i32* %add.ptr1724, align 4, !dbg !18337
  %922 = call i1 @llvm.is.constant.i32(i32 %921), !dbg !18337
  br i1 %922, label %cond.true1725, label %cond.false1741, !dbg !18337

cond.true1725:                                    ; preds = %cond.end1716
  %923 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1726 = getelementptr i32, i32* %923, i64 9, !dbg !18337
  %924 = load i32, i32* %add.ptr1726, align 4, !dbg !18337
  %and1727 = and i32 %924, 255, !dbg !18337
  %shl1728 = shl i32 %and1727, 24, !dbg !18337
  %925 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1729 = getelementptr i32, i32* %925, i64 9, !dbg !18337
  %926 = load i32, i32* %add.ptr1729, align 4, !dbg !18337
  %and1730 = and i32 %926, 65280, !dbg !18337
  %shl1731 = shl i32 %and1730, 8, !dbg !18337
  %or1732 = or i32 %shl1728, %shl1731, !dbg !18337
  %927 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1733 = getelementptr i32, i32* %927, i64 9, !dbg !18337
  %928 = load i32, i32* %add.ptr1733, align 4, !dbg !18337
  %and1734 = and i32 %928, 16711680, !dbg !18337
  %shr1735 = lshr i32 %and1734, 8, !dbg !18337
  %or1736 = or i32 %or1732, %shr1735, !dbg !18337
  %929 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1737 = getelementptr i32, i32* %929, i64 9, !dbg !18337
  %930 = load i32, i32* %add.ptr1737, align 4, !dbg !18337
  %and1738 = and i32 %930, -16777216, !dbg !18337
  %shr1739 = lshr i32 %and1738, 24, !dbg !18337
  %or1740 = or i32 %or1736, %shr1739, !dbg !18337
  br label %cond.end1744, !dbg !18337

cond.false1741:                                   ; preds = %cond.end1716
  %931 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1742 = getelementptr i32, i32* %931, i64 9, !dbg !18337
  %932 = load i32, i32* %add.ptr1742, align 4, !dbg !18337
  %call1743 = call i32 @__fswab32(i32 %932) #10, !dbg !18337
  br label %cond.end1744, !dbg !18337

cond.end1744:                                     ; preds = %cond.false1741, %cond.true1725
  %cond1745 = phi i32 [ %or1740, %cond.true1725 ], [ %call1743, %cond.false1741 ], !dbg !18337
  %and1746 = and i32 %cond1745, 0, !dbg !18337
  %933 = load i32, i32* %_v1639, align 4, !dbg !18337
  %shl1747 = shl i32 %933, 0, !dbg !18337
  %or1748 = or i32 %and1746, %shl1747, !dbg !18337
  %and1749 = and i32 %or1748, 16711680, !dbg !18337
  %shr1750 = lshr i32 %and1749, 8, !dbg !18337
  %or1751 = or i32 %or1723, %shr1750, !dbg !18337
  %934 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1752 = getelementptr i32, i32* %934, i64 9, !dbg !18337
  %935 = load i32, i32* %add.ptr1752, align 4, !dbg !18337
  %936 = call i1 @llvm.is.constant.i32(i32 %935), !dbg !18337
  br i1 %936, label %cond.true1753, label %cond.false1769, !dbg !18337

cond.true1753:                                    ; preds = %cond.end1744
  %937 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1754 = getelementptr i32, i32* %937, i64 9, !dbg !18337
  %938 = load i32, i32* %add.ptr1754, align 4, !dbg !18337
  %and1755 = and i32 %938, 255, !dbg !18337
  %shl1756 = shl i32 %and1755, 24, !dbg !18337
  %939 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1757 = getelementptr i32, i32* %939, i64 9, !dbg !18337
  %940 = load i32, i32* %add.ptr1757, align 4, !dbg !18337
  %and1758 = and i32 %940, 65280, !dbg !18337
  %shl1759 = shl i32 %and1758, 8, !dbg !18337
  %or1760 = or i32 %shl1756, %shl1759, !dbg !18337
  %941 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1761 = getelementptr i32, i32* %941, i64 9, !dbg !18337
  %942 = load i32, i32* %add.ptr1761, align 4, !dbg !18337
  %and1762 = and i32 %942, 16711680, !dbg !18337
  %shr1763 = lshr i32 %and1762, 8, !dbg !18337
  %or1764 = or i32 %or1760, %shr1763, !dbg !18337
  %943 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1765 = getelementptr i32, i32* %943, i64 9, !dbg !18337
  %944 = load i32, i32* %add.ptr1765, align 4, !dbg !18337
  %and1766 = and i32 %944, -16777216, !dbg !18337
  %shr1767 = lshr i32 %and1766, 24, !dbg !18337
  %or1768 = or i32 %or1764, %shr1767, !dbg !18337
  br label %cond.end1772, !dbg !18337

cond.false1769:                                   ; preds = %cond.end1744
  %945 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1770 = getelementptr i32, i32* %945, i64 9, !dbg !18337
  %946 = load i32, i32* %add.ptr1770, align 4, !dbg !18337
  %call1771 = call i32 @__fswab32(i32 %946) #10, !dbg !18337
  br label %cond.end1772, !dbg !18337

cond.end1772:                                     ; preds = %cond.false1769, %cond.true1753
  %cond1773 = phi i32 [ %or1768, %cond.true1753 ], [ %call1771, %cond.false1769 ], !dbg !18337
  %and1774 = and i32 %cond1773, 0, !dbg !18337
  %947 = load i32, i32* %_v1639, align 4, !dbg !18337
  %shl1775 = shl i32 %947, 0, !dbg !18337
  %or1776 = or i32 %and1774, %shl1775, !dbg !18337
  %and1777 = and i32 %or1776, -16777216, !dbg !18337
  %shr1778 = lshr i32 %and1777, 24, !dbg !18337
  %or1779 = or i32 %or1751, %shr1778, !dbg !18337
  br label %cond.end1807, !dbg !18337

cond.false1780:                                   ; preds = %cond.end1663
  %948 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1781 = getelementptr i32, i32* %948, i64 9, !dbg !18337
  %949 = load i32, i32* %add.ptr1781, align 4, !dbg !18337
  %950 = call i1 @llvm.is.constant.i32(i32 %949), !dbg !18337
  br i1 %950, label %cond.true1782, label %cond.false1798, !dbg !18337

cond.true1782:                                    ; preds = %cond.false1780
  %951 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1783 = getelementptr i32, i32* %951, i64 9, !dbg !18337
  %952 = load i32, i32* %add.ptr1783, align 4, !dbg !18337
  %and1784 = and i32 %952, 255, !dbg !18337
  %shl1785 = shl i32 %and1784, 24, !dbg !18337
  %953 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1786 = getelementptr i32, i32* %953, i64 9, !dbg !18337
  %954 = load i32, i32* %add.ptr1786, align 4, !dbg !18337
  %and1787 = and i32 %954, 65280, !dbg !18337
  %shl1788 = shl i32 %and1787, 8, !dbg !18337
  %or1789 = or i32 %shl1785, %shl1788, !dbg !18337
  %955 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1790 = getelementptr i32, i32* %955, i64 9, !dbg !18337
  %956 = load i32, i32* %add.ptr1790, align 4, !dbg !18337
  %and1791 = and i32 %956, 16711680, !dbg !18337
  %shr1792 = lshr i32 %and1791, 8, !dbg !18337
  %or1793 = or i32 %or1789, %shr1792, !dbg !18337
  %957 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1794 = getelementptr i32, i32* %957, i64 9, !dbg !18337
  %958 = load i32, i32* %add.ptr1794, align 4, !dbg !18337
  %and1795 = and i32 %958, -16777216, !dbg !18337
  %shr1796 = lshr i32 %and1795, 24, !dbg !18337
  %or1797 = or i32 %or1793, %shr1796, !dbg !18337
  br label %cond.end1801, !dbg !18337

cond.false1798:                                   ; preds = %cond.false1780
  %959 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1799 = getelementptr i32, i32* %959, i64 9, !dbg !18337
  %960 = load i32, i32* %add.ptr1799, align 4, !dbg !18337
  %call1800 = call i32 @__fswab32(i32 %960) #10, !dbg !18337
  br label %cond.end1801, !dbg !18337

cond.end1801:                                     ; preds = %cond.false1798, %cond.true1782
  %cond1802 = phi i32 [ %or1797, %cond.true1782 ], [ %call1800, %cond.false1798 ], !dbg !18337
  %and1803 = and i32 %cond1802, 0, !dbg !18337
  %961 = load i32, i32* %_v1639, align 4, !dbg !18337
  %shl1804 = shl i32 %961, 0, !dbg !18337
  %or1805 = or i32 %and1803, %shl1804, !dbg !18337
  %call1806 = call i32 @__fswab32(i32 %or1805) #10, !dbg !18337
  br label %cond.end1807, !dbg !18337

cond.end1807:                                     ; preds = %cond.end1801, %cond.end1772
  %cond1808 = phi i32 [ %or1779, %cond.end1772 ], [ %call1806, %cond.end1801 ], !dbg !18337
  %962 = load i32*, i32** %flow_group_in, align 8, !dbg !18337
  %add.ptr1809 = getelementptr i32, i32* %962, i64 9, !dbg !18337
  store i32 %cond1808, i32* %add.ptr1809, align 4, !dbg !18337
  br label %do.end1810, !dbg !18337

do.end1810:                                       ; preds = %cond.end1807
  %963 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18340
  %964 = load i32*, i32** %flow_group_in, align 8, !dbg !18341
  %call1811 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %963, i32* %964) #8, !dbg !18342
  store %struct.mlx5_flow_group* %call1811, %struct.mlx5_flow_group** %g, align 8, !dbg !18343
  %965 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18344
  %966 = bitcast %struct.mlx5_flow_group* %965 to i8*, !dbg !18344
  %call1812 = call zeroext i1 @IS_ERR(i8* %966) #8, !dbg !18346
  br i1 %call1812, label %if.then1813, label %if.end1817, !dbg !18347

if.then1813:                                      ; preds = %do.end1810
  %967 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18348
  %968 = bitcast %struct.mlx5_flow_group* %967 to i8*, !dbg !18348
  %call1814 = call i64 @PTR_ERR(i8* %968) #8, !dbg !18350
  %conv1815 = trunc i64 %call1814 to i32, !dbg !18350
  store i32 %conv1815, i32* %err, align 4, !dbg !18351
  %969 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18352
  %device1816 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %969, i32 0, i32 0, !dbg !18352
  %970 = load %struct.device*, %struct.device** %device1816, align 8, !dbg !18352
  %971 = load i32, i32* %err, align 4, !dbg !18352
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %970, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0), i32 %971) #11, !dbg !18352
  br label %out, !dbg !18353

if.end1817:                                       ; preds = %do.end1810
  %972 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18354
  %973 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18355
  %fdb_table1818 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %973, i32 0, i32 2, !dbg !18356
  %974 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table1818, i32 0, i32 0, !dbg !18357
  %legacy1819 = bitcast %union.anon.154* %974 to %struct.legacy_fdb*, !dbg !18357
  %promisc_grp = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy1819, i32 0, i32 3, !dbg !18358
  store %struct.mlx5_flow_group* %972, %struct.mlx5_flow_group** %promisc_grp, align 8, !dbg !18359
  br label %out, !dbg !18355

out:                                              ; preds = %if.end1817, %if.then1813, %if.then1115, %if.then581, %if.then50
  call void @llvm.dbg.label(metadata !18360), !dbg !18361
  %975 = load i32, i32* %err, align 4, !dbg !18362
  %tobool1820 = icmp ne i32 %975, 0, !dbg !18362
  br i1 %tobool1820, label %if.then1821, label %if.end1822, !dbg !18364

if.then1821:                                      ; preds = %out
  %976 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18365
  call void @esw_destroy_legacy_fdb_table(%struct.mlx5_eswitch* %976) #8, !dbg !18366
  br label %if.end1822, !dbg !18366

if.end1822:                                       ; preds = %if.then1821, %out
  %977 = load i32*, i32** %flow_group_in, align 8, !dbg !18367
  %978 = bitcast i32* %977 to i8*, !dbg !18367
  call void @kvfree(i8* %978) #8, !dbg !18368
  %979 = load i32, i32* %err, align 4, !dbg !18369
  store i32 %979, i32* %retval, align 4, !dbg !18370
  br label %return, !dbg !18370

return:                                           ; preds = %if.end1822, %if.then8, %if.then3
  %980 = load i32, i32* %retval, align 4, !dbg !18371
  ret i32 %980, !dbg !18371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_legacy_vepa_table(%struct.mlx5_eswitch* %esw) #0 !dbg !18372 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18373, metadata !DIExpression()), !dbg !18374
  br label %do.body, !dbg !18375

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !18376
  %conv = zext i32 %0 to i64, !dbg !18376
  %and = and i64 8, %conv, !dbg !18376
  %tobool = icmp ne i64 %and, 0, !dbg !18376
  br i1 %tobool, label %if.then, label %if.end, !dbg !18379

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !18376

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !18379

do.end:                                           ; preds = %if.end
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18380
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 2, !dbg !18382
  %2 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18383
  %legacy = bitcast %union.anon.154* %2 to %struct.legacy_fdb*, !dbg !18383
  %vepa_fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 4, !dbg !18384
  %3 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %vepa_fdb, align 8, !dbg !18384
  %tobool1 = icmp ne %struct.mlx5_flow_table* %3, null, !dbg !18380
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !18385

if.then2:                                         ; preds = %do.end
  br label %return, !dbg !18386

if.end3:                                          ; preds = %do.end
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18387
  %fdb_table4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 2, !dbg !18388
  %5 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table4, i32 0, i32 0, !dbg !18389
  %legacy5 = bitcast %union.anon.154* %5 to %struct.legacy_fdb*, !dbg !18389
  %vepa_fdb6 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy5, i32 0, i32 4, !dbg !18390
  %6 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %vepa_fdb6, align 8, !dbg !18390
  %call = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %6) #8, !dbg !18391
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18392
  %fdb_table7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 2, !dbg !18393
  %8 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table7, i32 0, i32 0, !dbg !18394
  %legacy8 = bitcast %union.anon.154* %8 to %struct.legacy_fdb*, !dbg !18394
  %vepa_fdb9 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy8, i32 0, i32 4, !dbg !18395
  store %struct.mlx5_flow_table* null, %struct.mlx5_flow_table** %vepa_fdb9, align 8, !dbg !18396
  br label %return, !dbg !18397

return:                                           ; preds = %if.end3, %if.then2
  ret void, !dbg !18397
}

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_namespace* @mlx5_get_fdb_sub_ns(%struct.mlx5_core_dev*, i32) #5

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_table* @mlx5_create_auto_grouped_flow_table(%struct.mlx5_flow_namespace*, %struct.mlx5_flow_table_attr*) #5

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_table* @mlx5_create_flow_table(%struct.mlx5_flow_namespace*, %struct.mlx5_flow_table_attr*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_broadcast_addr(i8* %addr) #0 !dbg !18398 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !18401, metadata !DIExpression()), !dbg !18402
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !18403
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 -1, i64 6, i1 false), !dbg !18404
  ret void, !dbg !18405
}

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table*, i32*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_zero_addr(i8* %addr) #0 !dbg !18406 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !18407, metadata !DIExpression()), !dbg !18408
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !18409
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 6, i1 false), !dbg !18410
  ret void, !dbg !18411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_legacy_fdb_table(%struct.mlx5_eswitch* %esw) #0 !dbg !18412 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18413, metadata !DIExpression()), !dbg !18414
  br label %do.body, !dbg !18415

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !18416
  %conv = zext i32 %0 to i64, !dbg !18416
  %and = and i64 8, %conv, !dbg !18416
  %tobool = icmp ne i64 %and, 0, !dbg !18416
  br i1 %tobool, label %if.then, label %if.end, !dbg !18419

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !18416

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !18419

do.end:                                           ; preds = %if.end
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18420
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 2, !dbg !18422
  %2 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18423
  %legacy = bitcast %union.anon.154* %2 to %struct.legacy_fdb*, !dbg !18423
  %fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 0, !dbg !18424
  %3 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18424
  %tobool1 = icmp ne %struct.mlx5_flow_table* %3, null, !dbg !18420
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !18425

if.then2:                                         ; preds = %do.end
  br label %return, !dbg !18426

if.end3:                                          ; preds = %do.end
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18427
  %fdb_table4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 2, !dbg !18429
  %5 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table4, i32 0, i32 0, !dbg !18430
  %legacy5 = bitcast %union.anon.154* %5 to %struct.legacy_fdb*, !dbg !18430
  %promisc_grp = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy5, i32 0, i32 3, !dbg !18431
  %6 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %promisc_grp, align 8, !dbg !18431
  %tobool6 = icmp ne %struct.mlx5_flow_group* %6, null, !dbg !18427
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !18432

if.then7:                                         ; preds = %if.end3
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18433
  %fdb_table8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 2, !dbg !18434
  %8 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table8, i32 0, i32 0, !dbg !18435
  %legacy9 = bitcast %union.anon.154* %8 to %struct.legacy_fdb*, !dbg !18435
  %promisc_grp10 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy9, i32 0, i32 3, !dbg !18436
  %9 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %promisc_grp10, align 8, !dbg !18436
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %9) #8, !dbg !18437
  br label %if.end11, !dbg !18437

if.end11:                                         ; preds = %if.then7, %if.end3
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18438
  %fdb_table12 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 2, !dbg !18440
  %11 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table12, i32 0, i32 0, !dbg !18441
  %legacy13 = bitcast %union.anon.154* %11 to %struct.legacy_fdb*, !dbg !18441
  %allmulti_grp = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy13, i32 0, i32 2, !dbg !18442
  %12 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %allmulti_grp, align 8, !dbg !18442
  %tobool14 = icmp ne %struct.mlx5_flow_group* %12, null, !dbg !18438
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !18443

if.then15:                                        ; preds = %if.end11
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18444
  %fdb_table16 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 2, !dbg !18445
  %14 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table16, i32 0, i32 0, !dbg !18446
  %legacy17 = bitcast %union.anon.154* %14 to %struct.legacy_fdb*, !dbg !18446
  %allmulti_grp18 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy17, i32 0, i32 2, !dbg !18447
  %15 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %allmulti_grp18, align 8, !dbg !18447
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %15) #8, !dbg !18448
  br label %if.end19, !dbg !18448

if.end19:                                         ; preds = %if.then15, %if.end11
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18449
  %fdb_table20 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 2, !dbg !18451
  %17 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table20, i32 0, i32 0, !dbg !18452
  %legacy21 = bitcast %union.anon.154* %17 to %struct.legacy_fdb*, !dbg !18452
  %addr_grp = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy21, i32 0, i32 1, !dbg !18453
  %18 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %addr_grp, align 8, !dbg !18453
  %tobool22 = icmp ne %struct.mlx5_flow_group* %18, null, !dbg !18449
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !18454

if.then23:                                        ; preds = %if.end19
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18455
  %fdb_table24 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 2, !dbg !18456
  %20 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table24, i32 0, i32 0, !dbg !18457
  %legacy25 = bitcast %union.anon.154* %20 to %struct.legacy_fdb*, !dbg !18457
  %addr_grp26 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy25, i32 0, i32 1, !dbg !18458
  %21 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %addr_grp26, align 8, !dbg !18458
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %21) #8, !dbg !18459
  br label %if.end27, !dbg !18459

if.end27:                                         ; preds = %if.then23, %if.end19
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18460
  %fdb_table28 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 2, !dbg !18461
  %23 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table28, i32 0, i32 0, !dbg !18462
  %legacy29 = bitcast %union.anon.154* %23 to %struct.legacy_fdb*, !dbg !18462
  %fdb30 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy29, i32 0, i32 0, !dbg !18463
  %24 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb30, align 8, !dbg !18463
  %call = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %24) #8, !dbg !18464
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18465
  %fdb_table31 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %25, i32 0, i32 2, !dbg !18466
  %26 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table31, i32 0, i32 0, !dbg !18467
  %legacy32 = bitcast %union.anon.154* %26 to %struct.legacy_fdb*, !dbg !18467
  %fdb33 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy32, i32 0, i32 0, !dbg !18468
  store %struct.mlx5_flow_table* null, %struct.mlx5_flow_table** %fdb33, align 8, !dbg !18469
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18470
  %fdb_table34 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 2, !dbg !18471
  %28 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table34, i32 0, i32 0, !dbg !18472
  %legacy35 = bitcast %union.anon.154* %28 to %struct.legacy_fdb*, !dbg !18472
  %addr_grp36 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy35, i32 0, i32 1, !dbg !18473
  store %struct.mlx5_flow_group* null, %struct.mlx5_flow_group** %addr_grp36, align 8, !dbg !18474
  %29 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18475
  %fdb_table37 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %29, i32 0, i32 2, !dbg !18476
  %30 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table37, i32 0, i32 0, !dbg !18477
  %legacy38 = bitcast %union.anon.154* %30 to %struct.legacy_fdb*, !dbg !18477
  %allmulti_grp39 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy38, i32 0, i32 2, !dbg !18478
  store %struct.mlx5_flow_group* null, %struct.mlx5_flow_group** %allmulti_grp39, align 8, !dbg !18479
  %31 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18480
  %fdb_table40 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %31, i32 0, i32 2, !dbg !18481
  %32 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table40, i32 0, i32 0, !dbg !18482
  %legacy41 = bitcast %union.anon.154* %32 to %struct.legacy_fdb*, !dbg !18482
  %promisc_grp42 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy41, i32 0, i32 3, !dbg !18483
  store %struct.mlx5_flow_group* null, %struct.mlx5_flow_group** %promisc_grp42, align 8, !dbg !18484
  br label %return, !dbg !18485

return:                                           ; preds = %if.end27, %if.then2
  ret void, !dbg !18485
}

; Function Attrs: noredzone
declare dso_local void @mlx5_destroy_flow_group(%struct.mlx5_flow_group*) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_cleanup_vepa_rules(%struct.mlx5_eswitch* %esw) #0 !dbg !18486 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18487, metadata !DIExpression()), !dbg !18488
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18489
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !18491
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18492
  %legacy = bitcast %union.anon.154* %1 to %struct.legacy_fdb*, !dbg !18492
  %vepa_uplink_rule = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 5, !dbg !18493
  %2 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %vepa_uplink_rule, align 8, !dbg !18493
  %tobool = icmp ne %struct.mlx5_flow_handle* %2, null, !dbg !18489
  br i1 %tobool, label %if.then, label %if.end, !dbg !18494

if.then:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18495
  %fdb_table1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 2, !dbg !18496
  %4 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table1, i32 0, i32 0, !dbg !18497
  %legacy2 = bitcast %union.anon.154* %4 to %struct.legacy_fdb*, !dbg !18497
  %vepa_uplink_rule3 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy2, i32 0, i32 5, !dbg !18498
  %5 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %vepa_uplink_rule3, align 8, !dbg !18498
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %5) #8, !dbg !18499
  br label %if.end, !dbg !18499

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18500
  %fdb_table4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 2, !dbg !18502
  %7 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table4, i32 0, i32 0, !dbg !18503
  %legacy5 = bitcast %union.anon.154* %7 to %struct.legacy_fdb*, !dbg !18503
  %vepa_star_rule = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy5, i32 0, i32 6, !dbg !18504
  %8 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %vepa_star_rule, align 8, !dbg !18504
  %tobool6 = icmp ne %struct.mlx5_flow_handle* %8, null, !dbg !18500
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !18505

if.then7:                                         ; preds = %if.end
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18506
  %fdb_table8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 2, !dbg !18507
  %10 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table8, i32 0, i32 0, !dbg !18508
  %legacy9 = bitcast %union.anon.154* %10 to %struct.legacy_fdb*, !dbg !18508
  %vepa_star_rule10 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy9, i32 0, i32 6, !dbg !18509
  %11 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %vepa_star_rule10, align 8, !dbg !18509
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %11) #8, !dbg !18510
  br label %if.end11, !dbg !18510

if.end11:                                         ; preds = %if.then7, %if.end
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18511
  %fdb_table12 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %12, i32 0, i32 2, !dbg !18512
  %13 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table12, i32 0, i32 0, !dbg !18513
  %legacy13 = bitcast %union.anon.154* %13 to %struct.legacy_fdb*, !dbg !18513
  %vepa_uplink_rule14 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy13, i32 0, i32 5, !dbg !18514
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %vepa_uplink_rule14, align 8, !dbg !18515
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18516
  %fdb_table15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 2, !dbg !18517
  %15 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table15, i32 0, i32 0, !dbg !18518
  %legacy16 = bitcast %union.anon.154* %15 to %struct.legacy_fdb*, !dbg !18518
  %vepa_star_rule17 = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy16, i32 0, i32 6, !dbg !18519
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %vepa_star_rule17, align 8, !dbg !18520
  ret void, !dbg !18521
}

; Function Attrs: noredzone
declare dso_local void @mlx5_del_flow_rules(%struct.mlx5_flow_handle*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @eswitch_vport_event(%struct.notifier_block* %nb, i64 %type, i8* %data) #0 !dbg !18522 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %type.addr = alloca i64, align 8
  %data.addr = alloca i8*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mlx5_nb*, align 8
  %tmp4 = alloca %struct.mlx5_eswitch*, align 8
  %eqe = alloca %struct.mlx5_eqe*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %vport_num = alloca i16, align 2
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !18523, metadata !DIExpression()), !dbg !18524
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !18525, metadata !DIExpression()), !dbg !18526
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18527, metadata !DIExpression()), !dbg !18528
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !18529, metadata !DIExpression()), !dbg !18530
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18531, metadata !DIExpression()), !dbg !18533
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !18534, metadata !DIExpression()), !dbg !18536
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !18536
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !18536
  store i8* %1, i8** %__mptr1, align 8, !dbg !18536
  br label %do.body, !dbg !18536

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18537

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !18536
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !18536
  %3 = bitcast i8* %add.ptr to %struct.mlx5_nb*, !dbg !18536
  store %struct.mlx5_nb* %3, %struct.mlx5_nb** %tmp, align 8, !dbg !18537
  %4 = load %struct.mlx5_nb*, %struct.mlx5_nb** %tmp, align 8, !dbg !18536
  %5 = bitcast %struct.mlx5_nb* %4 to i8*, !dbg !18533
  store i8* %5, i8** %__mptr, align 8, !dbg !18533
  br label %do.body2, !dbg !18533

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !18539

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !18533
  %add.ptr5 = getelementptr i8, i8* %6, i64 -8, !dbg !18533
  %7 = bitcast i8* %add.ptr5 to %struct.mlx5_eswitch*, !dbg !18533
  store %struct.mlx5_eswitch* %7, %struct.mlx5_eswitch** %tmp4, align 8, !dbg !18539
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %tmp4, align 8, !dbg !18533
  store %struct.mlx5_eswitch* %8, %struct.mlx5_eswitch** %esw, align 8, !dbg !18530
  call void @llvm.dbg.declare(metadata %struct.mlx5_eqe** %eqe, metadata !18541, metadata !DIExpression()), !dbg !18695
  %9 = load i8*, i8** %data.addr, align 8, !dbg !18696
  %10 = bitcast i8* %9 to %struct.mlx5_eqe*, !dbg !18696
  store %struct.mlx5_eqe* %10, %struct.mlx5_eqe** %eqe, align 8, !dbg !18695
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !18697, metadata !DIExpression()), !dbg !18698
  call void @llvm.dbg.declare(metadata i16* %vport_num, metadata !18699, metadata !DIExpression()), !dbg !18700
  %11 = load %struct.mlx5_eqe*, %struct.mlx5_eqe** %eqe, align 8, !dbg !18701
  %data6 = getelementptr inbounds %struct.mlx5_eqe, %struct.mlx5_eqe* %11, i32 0, i32 5, !dbg !18701
  %vport_change = bitcast %union.ev_data* %data6 to %struct.mlx5_eqe_vport_change*, !dbg !18701
  %vport_num7 = getelementptr inbounds %struct.mlx5_eqe_vport_change, %struct.mlx5_eqe_vport_change* %vport_change, i32 0, i32 1, !dbg !18701
  %12 = load i16, i16* %vport_num7, align 1, !dbg !18701
  %13 = call i1 @llvm.is.constant.i16(i16 %12), !dbg !18701
  br i1 %13, label %cond.true, label %cond.false, !dbg !18701

cond.true:                                        ; preds = %do.end3
  %14 = load %struct.mlx5_eqe*, %struct.mlx5_eqe** %eqe, align 8, !dbg !18701
  %data8 = getelementptr inbounds %struct.mlx5_eqe, %struct.mlx5_eqe* %14, i32 0, i32 5, !dbg !18701
  %vport_change9 = bitcast %union.ev_data* %data8 to %struct.mlx5_eqe_vport_change*, !dbg !18701
  %vport_num10 = getelementptr inbounds %struct.mlx5_eqe_vport_change, %struct.mlx5_eqe_vport_change* %vport_change9, i32 0, i32 1, !dbg !18701
  %15 = load i16, i16* %vport_num10, align 1, !dbg !18701
  %conv = zext i16 %15 to i32, !dbg !18701
  %and = and i32 %conv, 255, !dbg !18701
  %shl = shl i32 %and, 8, !dbg !18701
  %16 = load %struct.mlx5_eqe*, %struct.mlx5_eqe** %eqe, align 8, !dbg !18701
  %data11 = getelementptr inbounds %struct.mlx5_eqe, %struct.mlx5_eqe* %16, i32 0, i32 5, !dbg !18701
  %vport_change12 = bitcast %union.ev_data* %data11 to %struct.mlx5_eqe_vport_change*, !dbg !18701
  %vport_num13 = getelementptr inbounds %struct.mlx5_eqe_vport_change, %struct.mlx5_eqe_vport_change* %vport_change12, i32 0, i32 1, !dbg !18701
  %17 = load i16, i16* %vport_num13, align 1, !dbg !18701
  %conv14 = zext i16 %17 to i32, !dbg !18701
  %and15 = and i32 %conv14, 65280, !dbg !18701
  %shr = ashr i32 %and15, 8, !dbg !18701
  %or = or i32 %shl, %shr, !dbg !18701
  %conv16 = trunc i32 %or to i16, !dbg !18701
  %conv17 = zext i16 %conv16 to i32, !dbg !18701
  br label %cond.end, !dbg !18701

cond.false:                                       ; preds = %do.end3
  %18 = load %struct.mlx5_eqe*, %struct.mlx5_eqe** %eqe, align 8, !dbg !18701
  %data18 = getelementptr inbounds %struct.mlx5_eqe, %struct.mlx5_eqe* %18, i32 0, i32 5, !dbg !18701
  %vport_change19 = bitcast %union.ev_data* %data18 to %struct.mlx5_eqe_vport_change*, !dbg !18701
  %vport_num20 = getelementptr inbounds %struct.mlx5_eqe_vport_change, %struct.mlx5_eqe_vport_change* %vport_change19, i32 0, i32 1, !dbg !18701
  %19 = load i16, i16* %vport_num20, align 1, !dbg !18701
  %call = call zeroext i16 @__fswab16(i16 zeroext %19) #10, !dbg !18701
  %conv21 = zext i16 %call to i32, !dbg !18701
  br label %cond.end, !dbg !18701

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv17, %cond.true ], [ %conv21, %cond.false ], !dbg !18701
  %conv22 = trunc i32 %cond to i16, !dbg !18701
  store i16 %conv22, i16* %vport_num, align 2, !dbg !18702
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18703
  %21 = load i16, i16* %vport_num, align 2, !dbg !18704
  %call23 = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %20, i16 zeroext %21) #8, !dbg !18705
  store %struct.mlx5_vport* %call23, %struct.mlx5_vport** %vport, align 8, !dbg !18706
  %22 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !18707
  %23 = bitcast %struct.mlx5_vport* %22 to i8*, !dbg !18707
  %call24 = call zeroext i1 @IS_ERR(i8* %23) #8, !dbg !18709
  br i1 %call24, label %if.end, label %if.then, !dbg !18710

if.then:                                          ; preds = %cond.end
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18711
  %work_queue = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 5, !dbg !18712
  %25 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_queue, align 8, !dbg !18712
  %26 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !18713
  %vport_change_handler = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %26, i32 0, i32 6, !dbg !18714
  %call25 = call zeroext i1 @queue_work(%struct.workqueue_struct* %25, %struct.work_struct* %vport_change_handler) #8, !dbg !18715
  br label %if.end, !dbg !18715

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 1, !dbg !18716
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_eq_notifier_register(%struct.mlx5_core_dev*, %struct.mlx5_nb*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_eswitch_is_funcs_handler(%struct.mlx5_core_dev* %dev) #0 !dbg !18717 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !18718, metadata !DIExpression()), !dbg !18719
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !18720
  %call = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %0) #8, !dbg !18721
  ret i1 %call, !dbg !18722
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_esw_funcs_changed_handler(%struct.notifier_block*, i64, i8*) #5

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #3 !dbg !18723 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !18726, metadata !DIExpression()), !dbg !18727
  %0 = load i16, i16* %val.addr, align 2, !dbg !18728
  %conv = zext i16 %0 to i32, !dbg !18728
  %and = and i32 %conv, 255, !dbg !18728
  %shl = shl i32 %and, 8, !dbg !18728
  %1 = load i16, i16* %val.addr, align 2, !dbg !18728
  %conv1 = zext i16 %1 to i32, !dbg !18728
  %and2 = and i32 %conv1, 65280, !dbg !18728
  %shr = ashr i32 %and2, 8, !dbg !18728
  %or = or i32 %shl, %shr, !dbg !18728
  %conv3 = trunc i32 %or to i16, !dbg !18728
  ret i16 %conv3, !dbg !18729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !18730 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !18733, metadata !DIExpression()), !dbg !18734
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !18735, metadata !DIExpression()), !dbg !18736
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !18737
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !18738
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #8, !dbg !18739
  ret i1 %call, !dbg !18740
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_eq_notifier_unregister(%struct.mlx5_core_dev*, %struct.mlx5_nb*) #5

; Function Attrs: noredzone
declare dso_local void @flush_workqueue(%struct.workqueue_struct*) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #5

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #3 !dbg !18741 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !18745, metadata !DIExpression()), !dbg !18750
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !18752, metadata !DIExpression()), !dbg !18753
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18754, metadata !DIExpression()), !dbg !18755
  %0 = load i64, i64* %size.addr, align 8, !dbg !18756
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !18758
  br i1 %1, label %if.then, label %if.end447, !dbg !18759

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !18760
  %tobool = icmp ne i64 %2, 0, !dbg !18760
  br i1 %tobool, label %if.end, label %if.then1, !dbg !18763

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !18764
  br label %return, !dbg !18764

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !18765
  %cmp = icmp ult i64 %3, 4096, !dbg !18767
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !18768

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !18769
  br label %return, !dbg !18769

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub = sub i64 %4, 1, !dbg !18770
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !18770
  br i1 %5, label %cond.true, label %cond.false442, !dbg !18770

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub4 = sub i64 %6, 1, !dbg !18770
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !18770
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !18770

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub6 = sub i64 %8, 1, !dbg !18770
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !18770
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !18770

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !18770

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub9 = sub i64 %9, 1, !dbg !18770
  %and = and i64 %sub9, -9223372036854775808, !dbg !18770
  %tobool10 = icmp ne i64 %and, 0, !dbg !18770
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !18770

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !18770

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub13 = sub i64 %10, 1, !dbg !18770
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !18770
  %tobool15 = icmp ne i64 %and14, 0, !dbg !18770
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !18770

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !18770

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub18 = sub i64 %11, 1, !dbg !18770
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !18770
  %tobool20 = icmp ne i64 %and19, 0, !dbg !18770
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !18770

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !18770

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub23 = sub i64 %12, 1, !dbg !18770
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !18770
  %tobool25 = icmp ne i64 %and24, 0, !dbg !18770
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !18770

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !18770

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub28 = sub i64 %13, 1, !dbg !18770
  %and29 = and i64 %sub28, 576460752303423488, !dbg !18770
  %tobool30 = icmp ne i64 %and29, 0, !dbg !18770
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !18770

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !18770

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub33 = sub i64 %14, 1, !dbg !18770
  %and34 = and i64 %sub33, 288230376151711744, !dbg !18770
  %tobool35 = icmp ne i64 %and34, 0, !dbg !18770
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !18770

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !18770

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub38 = sub i64 %15, 1, !dbg !18770
  %and39 = and i64 %sub38, 144115188075855872, !dbg !18770
  %tobool40 = icmp ne i64 %and39, 0, !dbg !18770
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !18770

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !18770

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub43 = sub i64 %16, 1, !dbg !18770
  %and44 = and i64 %sub43, 72057594037927936, !dbg !18770
  %tobool45 = icmp ne i64 %and44, 0, !dbg !18770
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !18770

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !18770

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub48 = sub i64 %17, 1, !dbg !18770
  %and49 = and i64 %sub48, 36028797018963968, !dbg !18770
  %tobool50 = icmp ne i64 %and49, 0, !dbg !18770
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !18770

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !18770

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub53 = sub i64 %18, 1, !dbg !18770
  %and54 = and i64 %sub53, 18014398509481984, !dbg !18770
  %tobool55 = icmp ne i64 %and54, 0, !dbg !18770
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !18770

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !18770

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub58 = sub i64 %19, 1, !dbg !18770
  %and59 = and i64 %sub58, 9007199254740992, !dbg !18770
  %tobool60 = icmp ne i64 %and59, 0, !dbg !18770
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !18770

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !18770

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub63 = sub i64 %20, 1, !dbg !18770
  %and64 = and i64 %sub63, 4503599627370496, !dbg !18770
  %tobool65 = icmp ne i64 %and64, 0, !dbg !18770
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !18770

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !18770

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub68 = sub i64 %21, 1, !dbg !18770
  %and69 = and i64 %sub68, 2251799813685248, !dbg !18770
  %tobool70 = icmp ne i64 %and69, 0, !dbg !18770
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !18770

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !18770

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub73 = sub i64 %22, 1, !dbg !18770
  %and74 = and i64 %sub73, 1125899906842624, !dbg !18770
  %tobool75 = icmp ne i64 %and74, 0, !dbg !18770
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !18770

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !18770

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub78 = sub i64 %23, 1, !dbg !18770
  %and79 = and i64 %sub78, 562949953421312, !dbg !18770
  %tobool80 = icmp ne i64 %and79, 0, !dbg !18770
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !18770

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !18770

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub83 = sub i64 %24, 1, !dbg !18770
  %and84 = and i64 %sub83, 281474976710656, !dbg !18770
  %tobool85 = icmp ne i64 %and84, 0, !dbg !18770
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !18770

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !18770

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub88 = sub i64 %25, 1, !dbg !18770
  %and89 = and i64 %sub88, 140737488355328, !dbg !18770
  %tobool90 = icmp ne i64 %and89, 0, !dbg !18770
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !18770

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !18770

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub93 = sub i64 %26, 1, !dbg !18770
  %and94 = and i64 %sub93, 70368744177664, !dbg !18770
  %tobool95 = icmp ne i64 %and94, 0, !dbg !18770
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !18770

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !18770

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub98 = sub i64 %27, 1, !dbg !18770
  %and99 = and i64 %sub98, 35184372088832, !dbg !18770
  %tobool100 = icmp ne i64 %and99, 0, !dbg !18770
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !18770

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !18770

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub103 = sub i64 %28, 1, !dbg !18770
  %and104 = and i64 %sub103, 17592186044416, !dbg !18770
  %tobool105 = icmp ne i64 %and104, 0, !dbg !18770
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !18770

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !18770

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub108 = sub i64 %29, 1, !dbg !18770
  %and109 = and i64 %sub108, 8796093022208, !dbg !18770
  %tobool110 = icmp ne i64 %and109, 0, !dbg !18770
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !18770

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !18770

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub113 = sub i64 %30, 1, !dbg !18770
  %and114 = and i64 %sub113, 4398046511104, !dbg !18770
  %tobool115 = icmp ne i64 %and114, 0, !dbg !18770
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !18770

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !18770

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub118 = sub i64 %31, 1, !dbg !18770
  %and119 = and i64 %sub118, 2199023255552, !dbg !18770
  %tobool120 = icmp ne i64 %and119, 0, !dbg !18770
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !18770

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !18770

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub123 = sub i64 %32, 1, !dbg !18770
  %and124 = and i64 %sub123, 1099511627776, !dbg !18770
  %tobool125 = icmp ne i64 %and124, 0, !dbg !18770
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !18770

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !18770

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub128 = sub i64 %33, 1, !dbg !18770
  %and129 = and i64 %sub128, 549755813888, !dbg !18770
  %tobool130 = icmp ne i64 %and129, 0, !dbg !18770
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !18770

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !18770

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub133 = sub i64 %34, 1, !dbg !18770
  %and134 = and i64 %sub133, 274877906944, !dbg !18770
  %tobool135 = icmp ne i64 %and134, 0, !dbg !18770
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !18770

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !18770

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub138 = sub i64 %35, 1, !dbg !18770
  %and139 = and i64 %sub138, 137438953472, !dbg !18770
  %tobool140 = icmp ne i64 %and139, 0, !dbg !18770
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !18770

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !18770

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub143 = sub i64 %36, 1, !dbg !18770
  %and144 = and i64 %sub143, 68719476736, !dbg !18770
  %tobool145 = icmp ne i64 %and144, 0, !dbg !18770
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !18770

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !18770

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub148 = sub i64 %37, 1, !dbg !18770
  %and149 = and i64 %sub148, 34359738368, !dbg !18770
  %tobool150 = icmp ne i64 %and149, 0, !dbg !18770
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !18770

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !18770

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub153 = sub i64 %38, 1, !dbg !18770
  %and154 = and i64 %sub153, 17179869184, !dbg !18770
  %tobool155 = icmp ne i64 %and154, 0, !dbg !18770
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !18770

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !18770

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub158 = sub i64 %39, 1, !dbg !18770
  %and159 = and i64 %sub158, 8589934592, !dbg !18770
  %tobool160 = icmp ne i64 %and159, 0, !dbg !18770
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !18770

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !18770

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub163 = sub i64 %40, 1, !dbg !18770
  %and164 = and i64 %sub163, 4294967296, !dbg !18770
  %tobool165 = icmp ne i64 %and164, 0, !dbg !18770
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !18770

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !18770

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub168 = sub i64 %41, 1, !dbg !18770
  %and169 = and i64 %sub168, 2147483648, !dbg !18770
  %tobool170 = icmp ne i64 %and169, 0, !dbg !18770
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !18770

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !18770

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub173 = sub i64 %42, 1, !dbg !18770
  %and174 = and i64 %sub173, 1073741824, !dbg !18770
  %tobool175 = icmp ne i64 %and174, 0, !dbg !18770
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !18770

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !18770

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub178 = sub i64 %43, 1, !dbg !18770
  %and179 = and i64 %sub178, 536870912, !dbg !18770
  %tobool180 = icmp ne i64 %and179, 0, !dbg !18770
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !18770

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !18770

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub183 = sub i64 %44, 1, !dbg !18770
  %and184 = and i64 %sub183, 268435456, !dbg !18770
  %tobool185 = icmp ne i64 %and184, 0, !dbg !18770
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !18770

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !18770

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub188 = sub i64 %45, 1, !dbg !18770
  %and189 = and i64 %sub188, 134217728, !dbg !18770
  %tobool190 = icmp ne i64 %and189, 0, !dbg !18770
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !18770

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !18770

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub193 = sub i64 %46, 1, !dbg !18770
  %and194 = and i64 %sub193, 67108864, !dbg !18770
  %tobool195 = icmp ne i64 %and194, 0, !dbg !18770
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !18770

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !18770

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub198 = sub i64 %47, 1, !dbg !18770
  %and199 = and i64 %sub198, 33554432, !dbg !18770
  %tobool200 = icmp ne i64 %and199, 0, !dbg !18770
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !18770

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !18770

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub203 = sub i64 %48, 1, !dbg !18770
  %and204 = and i64 %sub203, 16777216, !dbg !18770
  %tobool205 = icmp ne i64 %and204, 0, !dbg !18770
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !18770

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !18770

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub208 = sub i64 %49, 1, !dbg !18770
  %and209 = and i64 %sub208, 8388608, !dbg !18770
  %tobool210 = icmp ne i64 %and209, 0, !dbg !18770
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !18770

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !18770

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub213 = sub i64 %50, 1, !dbg !18770
  %and214 = and i64 %sub213, 4194304, !dbg !18770
  %tobool215 = icmp ne i64 %and214, 0, !dbg !18770
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !18770

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !18770

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub218 = sub i64 %51, 1, !dbg !18770
  %and219 = and i64 %sub218, 2097152, !dbg !18770
  %tobool220 = icmp ne i64 %and219, 0, !dbg !18770
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !18770

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !18770

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub223 = sub i64 %52, 1, !dbg !18770
  %and224 = and i64 %sub223, 1048576, !dbg !18770
  %tobool225 = icmp ne i64 %and224, 0, !dbg !18770
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !18770

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !18770

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub228 = sub i64 %53, 1, !dbg !18770
  %and229 = and i64 %sub228, 524288, !dbg !18770
  %tobool230 = icmp ne i64 %and229, 0, !dbg !18770
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !18770

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !18770

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub233 = sub i64 %54, 1, !dbg !18770
  %and234 = and i64 %sub233, 262144, !dbg !18770
  %tobool235 = icmp ne i64 %and234, 0, !dbg !18770
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !18770

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !18770

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub238 = sub i64 %55, 1, !dbg !18770
  %and239 = and i64 %sub238, 131072, !dbg !18770
  %tobool240 = icmp ne i64 %and239, 0, !dbg !18770
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !18770

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !18770

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub243 = sub i64 %56, 1, !dbg !18770
  %and244 = and i64 %sub243, 65536, !dbg !18770
  %tobool245 = icmp ne i64 %and244, 0, !dbg !18770
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !18770

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !18770

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub248 = sub i64 %57, 1, !dbg !18770
  %and249 = and i64 %sub248, 32768, !dbg !18770
  %tobool250 = icmp ne i64 %and249, 0, !dbg !18770
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !18770

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !18770

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub253 = sub i64 %58, 1, !dbg !18770
  %and254 = and i64 %sub253, 16384, !dbg !18770
  %tobool255 = icmp ne i64 %and254, 0, !dbg !18770
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !18770

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !18770

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub258 = sub i64 %59, 1, !dbg !18770
  %and259 = and i64 %sub258, 8192, !dbg !18770
  %tobool260 = icmp ne i64 %and259, 0, !dbg !18770
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !18770

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !18770

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub263 = sub i64 %60, 1, !dbg !18770
  %and264 = and i64 %sub263, 4096, !dbg !18770
  %tobool265 = icmp ne i64 %and264, 0, !dbg !18770
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !18770

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !18770

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub268 = sub i64 %61, 1, !dbg !18770
  %and269 = and i64 %sub268, 2048, !dbg !18770
  %tobool270 = icmp ne i64 %and269, 0, !dbg !18770
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !18770

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !18770

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub273 = sub i64 %62, 1, !dbg !18770
  %and274 = and i64 %sub273, 1024, !dbg !18770
  %tobool275 = icmp ne i64 %and274, 0, !dbg !18770
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !18770

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !18770

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub278 = sub i64 %63, 1, !dbg !18770
  %and279 = and i64 %sub278, 512, !dbg !18770
  %tobool280 = icmp ne i64 %and279, 0, !dbg !18770
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !18770

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !18770

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub283 = sub i64 %64, 1, !dbg !18770
  %and284 = and i64 %sub283, 256, !dbg !18770
  %tobool285 = icmp ne i64 %and284, 0, !dbg !18770
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !18770

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !18770

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub288 = sub i64 %65, 1, !dbg !18770
  %and289 = and i64 %sub288, 128, !dbg !18770
  %tobool290 = icmp ne i64 %and289, 0, !dbg !18770
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !18770

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !18770

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub293 = sub i64 %66, 1, !dbg !18770
  %and294 = and i64 %sub293, 64, !dbg !18770
  %tobool295 = icmp ne i64 %and294, 0, !dbg !18770
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !18770

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !18770

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub298 = sub i64 %67, 1, !dbg !18770
  %and299 = and i64 %sub298, 32, !dbg !18770
  %tobool300 = icmp ne i64 %and299, 0, !dbg !18770
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !18770

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !18770

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub303 = sub i64 %68, 1, !dbg !18770
  %and304 = and i64 %sub303, 16, !dbg !18770
  %tobool305 = icmp ne i64 %and304, 0, !dbg !18770
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !18770

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !18770

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub308 = sub i64 %69, 1, !dbg !18770
  %and309 = and i64 %sub308, 8, !dbg !18770
  %tobool310 = icmp ne i64 %and309, 0, !dbg !18770
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !18770

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !18770

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub313 = sub i64 %70, 1, !dbg !18770
  %and314 = and i64 %sub313, 4, !dbg !18770
  %tobool315 = icmp ne i64 %and314, 0, !dbg !18770
  %71 = zext i1 %tobool315 to i64, !dbg !18770
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !18770
  br label %cond.end, !dbg !18770

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !18770
  br label %cond.end317, !dbg !18770

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !18770
  br label %cond.end319, !dbg !18770

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !18770
  br label %cond.end321, !dbg !18770

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !18770
  br label %cond.end323, !dbg !18770

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !18770
  br label %cond.end325, !dbg !18770

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !18770
  br label %cond.end327, !dbg !18770

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !18770
  br label %cond.end329, !dbg !18770

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !18770
  br label %cond.end331, !dbg !18770

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !18770
  br label %cond.end333, !dbg !18770

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !18770
  br label %cond.end335, !dbg !18770

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !18770
  br label %cond.end337, !dbg !18770

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !18770
  br label %cond.end339, !dbg !18770

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !18770
  br label %cond.end341, !dbg !18770

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !18770
  br label %cond.end343, !dbg !18770

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !18770
  br label %cond.end345, !dbg !18770

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !18770
  br label %cond.end347, !dbg !18770

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !18770
  br label %cond.end349, !dbg !18770

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !18770
  br label %cond.end351, !dbg !18770

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !18770
  br label %cond.end353, !dbg !18770

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !18770
  br label %cond.end355, !dbg !18770

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !18770
  br label %cond.end357, !dbg !18770

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !18770
  br label %cond.end359, !dbg !18770

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !18770
  br label %cond.end361, !dbg !18770

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !18770
  br label %cond.end363, !dbg !18770

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !18770
  br label %cond.end365, !dbg !18770

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !18770
  br label %cond.end367, !dbg !18770

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !18770
  br label %cond.end369, !dbg !18770

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !18770
  br label %cond.end371, !dbg !18770

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !18770
  br label %cond.end373, !dbg !18770

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !18770
  br label %cond.end375, !dbg !18770

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !18770
  br label %cond.end377, !dbg !18770

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !18770
  br label %cond.end379, !dbg !18770

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !18770
  br label %cond.end381, !dbg !18770

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !18770
  br label %cond.end383, !dbg !18770

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !18770
  br label %cond.end385, !dbg !18770

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !18770
  br label %cond.end387, !dbg !18770

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !18770
  br label %cond.end389, !dbg !18770

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !18770
  br label %cond.end391, !dbg !18770

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !18770
  br label %cond.end393, !dbg !18770

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !18770
  br label %cond.end395, !dbg !18770

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !18770
  br label %cond.end397, !dbg !18770

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !18770
  br label %cond.end399, !dbg !18770

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !18770
  br label %cond.end401, !dbg !18770

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !18770
  br label %cond.end403, !dbg !18770

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !18770
  br label %cond.end405, !dbg !18770

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !18770
  br label %cond.end407, !dbg !18770

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !18770
  br label %cond.end409, !dbg !18770

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !18770
  br label %cond.end411, !dbg !18770

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !18770
  br label %cond.end413, !dbg !18770

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !18770
  br label %cond.end415, !dbg !18770

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !18770
  br label %cond.end417, !dbg !18770

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !18770
  br label %cond.end419, !dbg !18770

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !18770
  br label %cond.end421, !dbg !18770

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !18770
  br label %cond.end423, !dbg !18770

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !18770
  br label %cond.end425, !dbg !18770

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !18770
  br label %cond.end427, !dbg !18770

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !18770
  br label %cond.end429, !dbg !18770

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !18770
  br label %cond.end431, !dbg !18770

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !18770
  br label %cond.end433, !dbg !18770

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !18770
  br label %cond.end435, !dbg !18770

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !18770
  br label %cond.end437, !dbg !18770

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !18770
  br label %cond.end440, !dbg !18770

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !18770

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !18770
  br label %cond.end444, !dbg !18770

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !18770
  %sub443 = sub i64 %72, 1, !dbg !18770
  %call = call i32 @__ilog2_u64(i64 %sub443) #10, !dbg !18770
  br label %cond.end444, !dbg !18770

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !18770
  %sub446 = sub i32 %cond445, 12, !dbg !18771
  %add = add i32 %sub446, 1, !dbg !18772
  store i32 %add, i32* %retval, align 4, !dbg !18773
  br label %return, !dbg !18773

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !18774
  %dec = add i64 %73, -1, !dbg !18774
  store i64 %dec, i64* %size.addr, align 8, !dbg !18774
  %74 = load i64, i64* %size.addr, align 8, !dbg !18775
  %shr = lshr i64 %74, 12, !dbg !18775
  store i64 %shr, i64* %size.addr, align 8, !dbg !18775
  %75 = load i64, i64* %size.addr, align 8, !dbg !18776
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !18753
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !18777
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !18778
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !18777, !srcloc !18779
  store i32 %78, i32* %bitpos.i, align 4, !dbg !18777
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !18780
  %add.i = add i32 %79, 1, !dbg !18781
  store i32 %add.i, i32* %retval, align 4, !dbg !18782
  br label %return, !dbg !18782

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !18783
  ret i32 %80, !dbg !18783
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #3 !dbg !18784 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !18745, metadata !DIExpression()), !dbg !18788
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !18752, metadata !DIExpression()), !dbg !18790
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18791, metadata !DIExpression()), !dbg !18792
  %0 = load i64, i64* %n.addr, align 8, !dbg !18793
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !18790
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !18794
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !18795
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !18794, !srcloc !18779
  store i32 %3, i32* %bitpos.i, align 4, !dbg !18794
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !18796
  %add.i = add i32 %4, 1, !dbg !18797
  %sub = sub i32 %add.i, 1, !dbg !18798
  ret i32 %sub, !dbg !18799
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !18800 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !18804, metadata !DIExpression()), !dbg !18805
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !18806, metadata !DIExpression()), !dbg !18807
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18808, metadata !DIExpression()), !dbg !18809
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18810, metadata !DIExpression()), !dbg !18811
  %0 = load i8*, i8** %object.addr, align 8, !dbg !18812
  ret i8* %0, !dbg !18813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !18814 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !13658, metadata !DIExpression()), !dbg !18815
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !13668, metadata !DIExpression()), !dbg !18819
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !13670, metadata !DIExpression()), !dbg !18820
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !13672, metadata !DIExpression()), !dbg !18821
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !13674, metadata !DIExpression()), !dbg !18822
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !13680, metadata !DIExpression()), !dbg !18824
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !13686, metadata !DIExpression()), !dbg !18826
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !13695, metadata !DIExpression()), !dbg !18829
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !13697, metadata !DIExpression()), !dbg !18830
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13699, metadata !DIExpression()), !dbg !18831
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !13701, metadata !DIExpression()), !dbg !18832
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !13703, metadata !DIExpression()), !dbg !18833
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13705, metadata !DIExpression()), !dbg !18834
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !13707, metadata !DIExpression()), !dbg !18835
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !13709, metadata !DIExpression()), !dbg !18836
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18837, metadata !DIExpression()), !dbg !18838
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18839, metadata !DIExpression()), !dbg !18840
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18841, metadata !DIExpression()), !dbg !18842
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !18843, metadata !DIExpression()), !dbg !18844
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !18845, metadata !DIExpression()), !dbg !18848
  %0 = load i64, i64* %n.addr, align 8, !dbg !18848
  store i64 %0, i64* %__a, align 8, !dbg !18848
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !18849, metadata !DIExpression()), !dbg !18848
  %1 = load i64, i64* %size.addr, align 8, !dbg !18848
  store i64 %1, i64* %__b, align 8, !dbg !18848
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !18850, metadata !DIExpression()), !dbg !18848
  store i64* %bytes, i64** %__d, align 8, !dbg !18848
  %cmp = icmp eq i64* %__a, %__b, !dbg !18848
  %conv = zext i1 %cmp to i32, !dbg !18848
  %2 = load i64*, i64** %__d, align 8, !dbg !18848
  %cmp1 = icmp eq i64* %__a, %2, !dbg !18848
  %conv2 = zext i1 %cmp1 to i32, !dbg !18848
  %3 = load i64, i64* %__a, align 8, !dbg !18848
  %4 = load i64, i64* %__b, align 8, !dbg !18848
  %5 = load i64*, i64** %__d, align 8, !dbg !18848
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !18848
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !18848
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !18848
  store i64 %8, i64* %5, align 8, !dbg !18848
  %frombool = zext i1 %7 to i8, !dbg !18848
  store i8 %frombool, i8* %tmp, align 1, !dbg !18848
  %9 = load i8, i8* %tmp, align 1, !dbg !18848
  %tobool = trunc i8 %9 to i1, !dbg !18848
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #8, !dbg !18851
  %lnot = xor i1 %call, true, !dbg !18851
  %lnot3 = xor i1 %lnot, true, !dbg !18851
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !18851
  %conv4 = sext i32 %lnot.ext to i64, !dbg !18851
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !18851
  br i1 %tobool5, label %if.then, label %if.end, !dbg !18852

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !18853
  br label %return, !dbg !18853

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !18854
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !18855
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !18856

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !18857
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !18858
  br i1 %13, label %if.then6, label %if.end8, !dbg !18859

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !18860
  %15 = load i32, i32* %flags.addr, align 4, !dbg !18861
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !18862
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #9, !dbg !18863
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !18864

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !18865
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !18866
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !18867

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !18868
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !18869
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !18870
  %call.i.i = call i32 @get_order(i64 %21) #10, !dbg !18871
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !18833
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !18872
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !18873
  %24 = load i32, i32* %order.i.i, align 4, !dbg !18874
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !18875
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !18876
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !18877
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !18878
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !18878
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !18878
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !18878
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !18878
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !18879
  br label %kmalloc.exit, !dbg !18879

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !18880
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18881
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !18881
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !18882

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !18883
  br label %kmalloc_index.exit.i, !dbg !18883

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18884
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !18885
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !18886

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18887
  br label %kmalloc_index.exit.i, !dbg !18887

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18888
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !18889
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !18890

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18891
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !18892
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !18893

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !18894
  br label %kmalloc_index.exit.i, !dbg !18894

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18895
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !18896
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !18897

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18898
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !18899
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !18900

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !18901
  br label %kmalloc_index.exit.i, !dbg !18901

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18902
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !18903
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !18904

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18905
  br label %kmalloc_index.exit.i, !dbg !18905

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18906
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !18907
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !18908

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !18909
  br label %kmalloc_index.exit.i, !dbg !18909

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18910
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !18911
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !18912

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !18913
  br label %kmalloc_index.exit.i, !dbg !18913

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18914
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !18915
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !18916

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !18917
  br label %kmalloc_index.exit.i, !dbg !18917

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18918
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !18919
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !18920

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !18921
  br label %kmalloc_index.exit.i, !dbg !18921

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18922
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !18923
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !18924

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !18925
  br label %kmalloc_index.exit.i, !dbg !18925

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18926
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !18927
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !18928

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !18929
  br label %kmalloc_index.exit.i, !dbg !18929

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18930
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !18931
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !18932

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !18933
  br label %kmalloc_index.exit.i, !dbg !18933

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18934
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !18935
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !18936

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !18937
  br label %kmalloc_index.exit.i, !dbg !18937

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18938
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !18939
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !18940

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !18941
  br label %kmalloc_index.exit.i, !dbg !18941

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18942
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !18943
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !18944

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !18945
  br label %kmalloc_index.exit.i, !dbg !18945

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18946
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !18947
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !18948

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !18949
  br label %kmalloc_index.exit.i, !dbg !18949

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18950
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !18951
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !18952

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !18953
  br label %kmalloc_index.exit.i, !dbg !18953

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18954
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !18955
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !18956

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !18957
  br label %kmalloc_index.exit.i, !dbg !18957

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18958
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !18959
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !18960

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !18961
  br label %kmalloc_index.exit.i, !dbg !18961

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18962
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !18963
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !18964

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !18965
  br label %kmalloc_index.exit.i, !dbg !18965

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18966
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !18967
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !18968

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !18969
  br label %kmalloc_index.exit.i, !dbg !18969

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18970
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !18971
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !18972

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !18973
  br label %kmalloc_index.exit.i, !dbg !18973

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18974
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !18975
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !18976

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !18977
  br label %kmalloc_index.exit.i, !dbg !18977

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18978
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !18979
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !18980

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !18981
  br label %kmalloc_index.exit.i, !dbg !18981

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18982
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !18983
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !18984

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !18985
  br label %kmalloc_index.exit.i, !dbg !18985

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18986
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !18987
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !18988

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !18989
  br label %kmalloc_index.exit.i, !dbg !18989

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18990
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !18991
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !18992

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !18993
  br label %kmalloc_index.exit.i, !dbg !18993

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18994
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !18995
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !18996

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !18997
  br label %kmalloc_index.exit.i, !dbg !18997

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !18998, !srcloc !13885
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #9, !dbg !18999, !srcloc !13889
  unreachable, !dbg !19000

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !19001
  store i32 %59, i32* %index.i, align 4, !dbg !19002
  %60 = load i32, i32* %index.i, align 4, !dbg !19003
  %tobool.i = icmp ne i32 %60, 0, !dbg !19003
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !19004

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !19005
  br label %kmalloc.exit, !dbg !19005

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !19006
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19007
  %and.i.i = and i32 %62, 17, !dbg !19007
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !19007
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !19007
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !19007
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19007
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !19008

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !19009
  br label %kmalloc_type.exit.i, !dbg !19009

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19010
  %and2.i.i = and i32 %63, 1, !dbg !19011
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !19010
  %64 = zext i1 %tobool3.i.i to i64, !dbg !19010
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !19010
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !19012
  br label %kmalloc_type.exit.i, !dbg !19012

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !19013
  %idxprom.i = zext i32 %65 to i64, !dbg !19014
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !19014
  %66 = load i32, i32* %index.i, align 4, !dbg !19015
  %idxprom6.i = zext i32 %66 to i64, !dbg !19014
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !19014
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !19014
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !19016
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !19017
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19018
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19019
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !19020
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !19020
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !19020
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !19020
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !19020
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !18821
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19021
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !19022
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !19023
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19024
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !19025
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !19026
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !19027
  store i8* %76, i8** %retval.i, align 8, !dbg !19028
  br label %kmalloc.exit, !dbg !19028

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !19029
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !19030
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !19031
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !19031
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !19031
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !19031
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !19031
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !19032
  br label %kmalloc.exit, !dbg !19032

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !19033
  store i8* %79, i8** %retval, align 8, !dbg !19034
  br label %return, !dbg !19034

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !19035
  %81 = load i32, i32* %flags.addr, align 4, !dbg !19036
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #8, !dbg !19037
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !19037
  %maskedptr = and i64 %ptrint, 7, !dbg !19037
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !19037
  call void @llvm.assume(i1 %maskcond), !dbg !19037
  store i8* %call9, i8** %retval, align 8, !dbg !19038
  br label %return, !dbg !19038

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !19039
  ret i8* %82, !dbg !19039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !19040 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !19044, metadata !DIExpression()), !dbg !19045
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !19046
  %tobool = trunc i8 %0 to i1, !dbg !19046
  %lnot = xor i1 %tobool, true, !dbg !19046
  %lnot1 = xor i1 %lnot, true, !dbg !19046
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19046
  %conv = sext i32 %lnot.ext to i64, !dbg !19046
  %tobool2 = icmp ne i64 %conv, 0, !dbg !19046
  ret i1 %tobool2, !dbg !19047
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_atomic64_set(%struct.atomic64_t* %v, i64 %i) #0 !dbg !19048 {
entry:
  %v.addr = alloca %struct.atomic64_t*, align 8
  %i.addr = alloca i64, align 8
  store %struct.atomic64_t* %v, %struct.atomic64_t** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr, metadata !19050, metadata !DIExpression()), !dbg !19051
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !19052, metadata !DIExpression()), !dbg !19053
  br label %do.body, !dbg !19054

do.body:                                          ; preds = %entry
  %0 = load i64, i64* %i.addr, align 8, !dbg !19055
  %1 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !19055
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %1, i32 0, i32 0, !dbg !19055
  store volatile i64 %0, i64* %counter, align 8, !dbg !19055
  br label %do.end, !dbg !19055

do.end:                                           ; preds = %do.body
  ret void, !dbg !19057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !19058 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19062, metadata !DIExpression()), !dbg !19063
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19064, metadata !DIExpression()), !dbg !19065
  ret i1 true, !dbg !19066
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !19067 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !19071, metadata !DIExpression()), !dbg !19072
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19073, metadata !DIExpression()), !dbg !19074
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !19075, metadata !DIExpression()), !dbg !19076
  ret void, !dbg !19077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xa_init_flags(%struct.xarray* %xa, i32 %flags) #0 !dbg !19078 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !19082, metadata !DIExpression()), !dbg !19088
  %xa.addr = alloca %struct.xarray*, align 8
  %flags.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.xarray* %xa, %struct.xarray** %xa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xarray** %xa.addr, metadata !19091, metadata !DIExpression()), !dbg !19092
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !19093, metadata !DIExpression()), !dbg !19094
  br label %do.body, !dbg !19095

do.body:                                          ; preds = %entry
  %0 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !19096
  %xa_lock = getelementptr inbounds %struct.xarray, %struct.xarray* %0, i32 0, i32 0, !dbg !19096
  store %struct.spinlock* %xa_lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19097
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !19098
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !19098
  %3 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !19096
  %xa_lock1 = getelementptr inbounds %struct.xarray, %struct.xarray* %3, i32 0, i32 0, !dbg !19096
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !19096
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !19096
  %5 = bitcast %struct.spinlock* %xa_lock1 to i8*, !dbg !19096
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !19096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 0, i1 false), !dbg !19096
  br label %do.end, !dbg !19096

do.end:                                           ; preds = %do.body
  %7 = load i32, i32* %flags.addr, align 4, !dbg !19099
  %8 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !19100
  %xa_flags = getelementptr inbounds %struct.xarray, %struct.xarray* %8, i32 0, i32 1, !dbg !19101
  store i32 %7, i32* %xa_flags, align 8, !dbg !19102
  %9 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !19103
  %xa_head = getelementptr inbounds %struct.xarray, %struct.xarray* %9, i32 0, i32 2, !dbg !19104
  store i8* null, i8** %xa_head, align 8, !dbg !19105
  ret void, !dbg !19106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #0 !dbg !19107 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19108, metadata !DIExpression()), !dbg !19109
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19110, metadata !DIExpression()), !dbg !19111
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !19112
  %1 = bitcast i8* %0 to i32*, !dbg !19113
  %2 = load i32, i32* %1, align 4, !dbg !19113
  store i32 %2, i32* %a, align 4, !dbg !19111
  %3 = load i32, i32* %a, align 4, !dbg !19114
  %and = and i32 1, %3, !dbg !19115
  %tobool = icmp ne i32 %and, 0, !dbg !19116
  ret i1 %tobool, !dbg !19117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @node_guid_gen_from_mac(i64* %node_guid, i8* %mac) #0 !dbg !19118 {
entry:
  %node_guid.addr = alloca i64*, align 8
  %mac.addr = alloca i8*, align 8
  store i64* %node_guid, i64** %node_guid.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %node_guid.addr, metadata !19121, metadata !DIExpression()), !dbg !19122
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !19123, metadata !DIExpression()), !dbg !19124
  %0 = load i8*, i8** %mac.addr, align 8, !dbg !19125
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !19125
  %1 = load i8, i8* %arrayidx, align 1, !dbg !19125
  %2 = load i64*, i64** %node_guid.addr, align 8, !dbg !19126
  %3 = bitcast i64* %2 to i8*, !dbg !19127
  %arrayidx1 = getelementptr i8, i8* %3, i64 7, !dbg !19127
  store i8 %1, i8* %arrayidx1, align 1, !dbg !19128
  %4 = load i8*, i8** %mac.addr, align 8, !dbg !19129
  %arrayidx2 = getelementptr i8, i8* %4, i64 1, !dbg !19129
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !19129
  %6 = load i64*, i64** %node_guid.addr, align 8, !dbg !19130
  %7 = bitcast i64* %6 to i8*, !dbg !19131
  %arrayidx3 = getelementptr i8, i8* %7, i64 6, !dbg !19131
  store i8 %5, i8* %arrayidx3, align 1, !dbg !19132
  %8 = load i8*, i8** %mac.addr, align 8, !dbg !19133
  %arrayidx4 = getelementptr i8, i8* %8, i64 2, !dbg !19133
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !19133
  %10 = load i64*, i64** %node_guid.addr, align 8, !dbg !19134
  %11 = bitcast i64* %10 to i8*, !dbg !19135
  %arrayidx5 = getelementptr i8, i8* %11, i64 5, !dbg !19135
  store i8 %9, i8* %arrayidx5, align 1, !dbg !19136
  %12 = load i64*, i64** %node_guid.addr, align 8, !dbg !19137
  %13 = bitcast i64* %12 to i8*, !dbg !19138
  %arrayidx6 = getelementptr i8, i8* %13, i64 4, !dbg !19138
  store i8 -1, i8* %arrayidx6, align 1, !dbg !19139
  %14 = load i64*, i64** %node_guid.addr, align 8, !dbg !19140
  %15 = bitcast i64* %14 to i8*, !dbg !19141
  %arrayidx7 = getelementptr i8, i8* %15, i64 3, !dbg !19141
  store i8 -2, i8* %arrayidx7, align 1, !dbg !19142
  %16 = load i8*, i8** %mac.addr, align 8, !dbg !19143
  %arrayidx8 = getelementptr i8, i8* %16, i64 3, !dbg !19143
  %17 = load i8, i8* %arrayidx8, align 1, !dbg !19143
  %18 = load i64*, i64** %node_guid.addr, align 8, !dbg !19144
  %19 = bitcast i64* %18 to i8*, !dbg !19145
  %arrayidx9 = getelementptr i8, i8* %19, i64 2, !dbg !19145
  store i8 %17, i8* %arrayidx9, align 1, !dbg !19146
  %20 = load i8*, i8** %mac.addr, align 8, !dbg !19147
  %arrayidx10 = getelementptr i8, i8* %20, i64 4, !dbg !19147
  %21 = load i8, i8* %arrayidx10, align 1, !dbg !19147
  %22 = load i64*, i64** %node_guid.addr, align 8, !dbg !19148
  %23 = bitcast i64* %22 to i8*, !dbg !19149
  %arrayidx11 = getelementptr i8, i8* %23, i64 1, !dbg !19149
  store i8 %21, i8* %arrayidx11, align 1, !dbg !19150
  %24 = load i8*, i8** %mac.addr, align 8, !dbg !19151
  %arrayidx12 = getelementptr i8, i8* %24, i64 5, !dbg !19151
  %25 = load i8, i8* %arrayidx12, align 1, !dbg !19151
  %26 = load i64*, i64** %node_guid.addr, align 8, !dbg !19152
  %27 = bitcast i64* %26 to i8*, !dbg !19153
  %arrayidx13 = getelementptr i8, i8* %27, i64 0, !dbg !19153
  store i8 %25, i8* %arrayidx13, align 1, !dbg !19154
  ret void, !dbg !19155
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlx5_eswitch_is_vf_vport(%struct.mlx5_eswitch*, i16 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #0 !dbg !19156 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19157, metadata !DIExpression()), !dbg !19158
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !19159
  %1 = bitcast i8* %0 to i32*, !dbg !19160
  %2 = load i32, i32* %1, align 4, !dbg !19160
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !19161
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !19162
  %4 = bitcast i8* %add.ptr to i16*, !dbg !19163
  %5 = load i16, i16* %4, align 2, !dbg !19163
  %conv = zext i16 %5 to i32, !dbg !19164
  %or = or i32 %2, %conv, !dbg !19165
  %cmp = icmp eq i32 %or, 0, !dbg !19166
  ret i1 %cmp, !dbg !19167
}

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table*, %struct.mlx5_flow_spec*, %struct.mlx5_flow_act*, %struct.mlx5_flow_destination*, i32) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_query_nic_vport_mac_address(%struct.mlx5_core_dev*, i16 zeroext, i1 zeroext, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_update_vport_addr_list(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport, i32 %list_type) #0 !dbg !19168 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %list_type.addr = alloca i32, align 4
  %is_uc = alloca i8, align 1
  %mac_list = alloca [6 x i8]*, align 8
  %node = alloca %struct.l2addr_node*, align 8
  %addr = alloca %struct.vport_addr*, align 8
  %hash = alloca %struct.hlist_head*, align 8
  %tmp = alloca %struct.hlist_node*, align 8
  %size = alloca i32, align 4
  %err = alloca i32, align 4
  %hi = alloca i32, align 4
  %i = alloca i32, align 4
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp114 = alloca %struct.l2addr_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp117 = alloca %struct.l2addr_node*, align 8
  %tmp124 = alloca i32, align 4
  %__mptr127 = alloca i8*, align 8
  %tmp130 = alloca %struct.vport_addr*, align 8
  %____ptr132 = alloca %struct.hlist_node*, align 8
  %tmp133 = alloca %struct.l2addr_node*, align 8
  %__mptr136 = alloca i8*, align 8
  %tmp139 = alloca %struct.l2addr_node*, align 8
  %ix = alloca i32, align 4
  %found = alloca i8, align 1
  %ptr = alloca %struct.vport_addr*, align 8
  %____ptr187 = alloca %struct.hlist_node*, align 8
  %tmp191 = alloca %struct.vport_addr*, align 8
  %__mptr194 = alloca i8*, align 8
  %tmp197 = alloca %struct.vport_addr*, align 8
  %____ptr215 = alloca %struct.hlist_node*, align 8
  %tmp219 = alloca %struct.vport_addr*, align 8
  %__mptr222 = alloca i8*, align 8
  %tmp225 = alloca %struct.vport_addr*, align 8
  %tmp234 = alloca %struct.vport_addr*, align 8
  %esw_mc = alloca %struct.esw_mc_addr*, align 8
  %ix240 = alloca i32, align 4
  %found245 = alloca i8, align 1
  %ptr246 = alloca %struct.esw_mc_addr*, align 8
  %____ptr247 = alloca %struct.hlist_node*, align 8
  %tmp251 = alloca %struct.esw_mc_addr*, align 8
  %__mptr254 = alloca i8*, align 8
  %tmp257 = alloca %struct.esw_mc_addr*, align 8
  %____ptr275 = alloca %struct.hlist_node*, align 8
  %tmp279 = alloca %struct.esw_mc_addr*, align 8
  %__mptr282 = alloca i8*, align 8
  %tmp285 = alloca %struct.esw_mc_addr*, align 8
  %tmp294 = alloca %struct.esw_mc_addr*, align 8
  %ix306 = alloca i32, align 4
  %ptr311 = alloca %struct.vport_addr*, align 8
  %tmp326 = alloca %struct.vport_addr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19171, metadata !DIExpression()), !dbg !19172
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !19173, metadata !DIExpression()), !dbg !19174
  store i32 %list_type, i32* %list_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_type.addr, metadata !19175, metadata !DIExpression()), !dbg !19176
  call void @llvm.dbg.declare(metadata i8* %is_uc, metadata !19177, metadata !DIExpression()), !dbg !19178
  %0 = load i32, i32* %list_type.addr, align 4, !dbg !19179
  %cmp = icmp eq i32 %0, 0, !dbg !19180
  %frombool = zext i1 %cmp to i8, !dbg !19178
  store i8 %frombool, i8* %is_uc, align 1, !dbg !19178
  call void @llvm.dbg.declare(metadata [6 x i8]** %mac_list, metadata !19181, metadata !DIExpression()), !dbg !19183
  call void @llvm.dbg.declare(metadata %struct.l2addr_node** %node, metadata !19184, metadata !DIExpression()), !dbg !19185
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %addr, metadata !19186, metadata !DIExpression()), !dbg !19187
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %hash, metadata !19188, metadata !DIExpression()), !dbg !19189
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %tmp, metadata !19190, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.declare(metadata i32* %size, metadata !19192, metadata !DIExpression()), !dbg !19193
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19194, metadata !DIExpression()), !dbg !19195
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !19196, metadata !DIExpression()), !dbg !19197
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19198, metadata !DIExpression()), !dbg !19199
  %1 = load i8, i8* %is_uc, align 1, !dbg !19200
  %tobool = trunc i8 %1 to i1, !dbg !19200
  br i1 %tobool, label %cond.true, label %cond.false42, !dbg !19200

cond.true:                                        ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19201
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !19201
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19201
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !19201
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !19201
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !19201
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !19201
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 31, !dbg !19201
  %4 = load i32, i32* %add.ptr, align 4, !dbg !19201
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !19201
  br i1 %5, label %cond.true1, label %cond.false, !dbg !19201

cond.true1:                                       ; preds = %cond.true
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19201
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 0, !dbg !19201
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !19201
  %caps3 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !19201
  %hca_cur4 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps3, i32 0, i32 0, !dbg !19201
  %arrayidx5 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur4, i64 0, i64 0, !dbg !19201
  %arraydecay6 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx5, i64 0, i64 0, !dbg !19201
  %add.ptr7 = getelementptr i32, i32* %arraydecay6, i64 31, !dbg !19201
  %8 = load i32, i32* %add.ptr7, align 4, !dbg !19201
  %and = and i32 %8, 255, !dbg !19201
  %shl = shl i32 %and, 24, !dbg !19201
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19201
  %dev8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 0, !dbg !19201
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev8, align 8, !dbg !19201
  %caps9 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !19201
  %hca_cur10 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps9, i32 0, i32 0, !dbg !19201
  %arrayidx11 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur10, i64 0, i64 0, !dbg !19201
  %arraydecay12 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx11, i64 0, i64 0, !dbg !19201
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 31, !dbg !19201
  %11 = load i32, i32* %add.ptr13, align 4, !dbg !19201
  %and14 = and i32 %11, 65280, !dbg !19201
  %shl15 = shl i32 %and14, 8, !dbg !19201
  %or = or i32 %shl, %shl15, !dbg !19201
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19201
  %dev16 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %12, i32 0, i32 0, !dbg !19201
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev16, align 8, !dbg !19201
  %caps17 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !19201
  %hca_cur18 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps17, i32 0, i32 0, !dbg !19201
  %arrayidx19 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur18, i64 0, i64 0, !dbg !19201
  %arraydecay20 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx19, i64 0, i64 0, !dbg !19201
  %add.ptr21 = getelementptr i32, i32* %arraydecay20, i64 31, !dbg !19201
  %14 = load i32, i32* %add.ptr21, align 4, !dbg !19201
  %and22 = and i32 %14, 16711680, !dbg !19201
  %shr = lshr i32 %and22, 8, !dbg !19201
  %or23 = or i32 %or, %shr, !dbg !19201
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19201
  %dev24 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 0, !dbg !19201
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev24, align 8, !dbg !19201
  %caps25 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !19201
  %hca_cur26 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps25, i32 0, i32 0, !dbg !19201
  %arrayidx27 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur26, i64 0, i64 0, !dbg !19201
  %arraydecay28 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx27, i64 0, i64 0, !dbg !19201
  %add.ptr29 = getelementptr i32, i32* %arraydecay28, i64 31, !dbg !19201
  %17 = load i32, i32* %add.ptr29, align 4, !dbg !19201
  %and30 = and i32 %17, -16777216, !dbg !19201
  %shr31 = lshr i32 %and30, 24, !dbg !19201
  %or32 = or i32 %or23, %shr31, !dbg !19201
  br label %cond.end, !dbg !19201

cond.false:                                       ; preds = %cond.true
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19201
  %dev33 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 0, !dbg !19201
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev33, align 8, !dbg !19201
  %caps34 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !19201
  %hca_cur35 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps34, i32 0, i32 0, !dbg !19201
  %arrayidx36 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur35, i64 0, i64 0, !dbg !19201
  %arraydecay37 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx36, i64 0, i64 0, !dbg !19201
  %add.ptr38 = getelementptr i32, i32* %arraydecay37, i64 31, !dbg !19201
  %20 = load i32, i32* %add.ptr38, align 4, !dbg !19201
  %call = call i32 @__fswab32(i32 %20) #10, !dbg !19201
  br label %cond.end, !dbg !19201

cond.end:                                         ; preds = %cond.false, %cond.true1
  %cond = phi i32 [ %or32, %cond.true1 ], [ %call, %cond.false ], !dbg !19201
  %shr39 = lshr i32 %cond, 0, !dbg !19201
  %and40 = and i32 %shr39, 31, !dbg !19201
  %shl41 = shl i32 1, %and40, !dbg !19201
  br label %cond.end98, !dbg !19200

cond.false42:                                     ; preds = %entry
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19202
  %dev43 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 0, !dbg !19202
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev43, align 8, !dbg !19202
  %caps44 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !19202
  %hca_cur45 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps44, i32 0, i32 0, !dbg !19202
  %arrayidx46 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur45, i64 0, i64 0, !dbg !19202
  %arraydecay47 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx46, i64 0, i64 0, !dbg !19202
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 31, !dbg !19202
  %23 = load i32, i32* %add.ptr48, align 4, !dbg !19202
  %24 = call i1 @llvm.is.constant.i32(i32 %23), !dbg !19202
  br i1 %24, label %cond.true49, label %cond.false85, !dbg !19202

cond.true49:                                      ; preds = %cond.false42
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19202
  %dev50 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %25, i32 0, i32 0, !dbg !19202
  %26 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev50, align 8, !dbg !19202
  %caps51 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %26, i32 0, i32 9, !dbg !19202
  %hca_cur52 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps51, i32 0, i32 0, !dbg !19202
  %arrayidx53 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur52, i64 0, i64 0, !dbg !19202
  %arraydecay54 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx53, i64 0, i64 0, !dbg !19202
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 31, !dbg !19202
  %27 = load i32, i32* %add.ptr55, align 4, !dbg !19202
  %and56 = and i32 %27, 255, !dbg !19202
  %shl57 = shl i32 %and56, 24, !dbg !19202
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19202
  %dev58 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %28, i32 0, i32 0, !dbg !19202
  %29 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev58, align 8, !dbg !19202
  %caps59 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %29, i32 0, i32 9, !dbg !19202
  %hca_cur60 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps59, i32 0, i32 0, !dbg !19202
  %arrayidx61 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur60, i64 0, i64 0, !dbg !19202
  %arraydecay62 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx61, i64 0, i64 0, !dbg !19202
  %add.ptr63 = getelementptr i32, i32* %arraydecay62, i64 31, !dbg !19202
  %30 = load i32, i32* %add.ptr63, align 4, !dbg !19202
  %and64 = and i32 %30, 65280, !dbg !19202
  %shl65 = shl i32 %and64, 8, !dbg !19202
  %or66 = or i32 %shl57, %shl65, !dbg !19202
  %31 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19202
  %dev67 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %31, i32 0, i32 0, !dbg !19202
  %32 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev67, align 8, !dbg !19202
  %caps68 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %32, i32 0, i32 9, !dbg !19202
  %hca_cur69 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps68, i32 0, i32 0, !dbg !19202
  %arrayidx70 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur69, i64 0, i64 0, !dbg !19202
  %arraydecay71 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx70, i64 0, i64 0, !dbg !19202
  %add.ptr72 = getelementptr i32, i32* %arraydecay71, i64 31, !dbg !19202
  %33 = load i32, i32* %add.ptr72, align 4, !dbg !19202
  %and73 = and i32 %33, 16711680, !dbg !19202
  %shr74 = lshr i32 %and73, 8, !dbg !19202
  %or75 = or i32 %or66, %shr74, !dbg !19202
  %34 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19202
  %dev76 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %34, i32 0, i32 0, !dbg !19202
  %35 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev76, align 8, !dbg !19202
  %caps77 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %35, i32 0, i32 9, !dbg !19202
  %hca_cur78 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps77, i32 0, i32 0, !dbg !19202
  %arrayidx79 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur78, i64 0, i64 0, !dbg !19202
  %arraydecay80 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx79, i64 0, i64 0, !dbg !19202
  %add.ptr81 = getelementptr i32, i32* %arraydecay80, i64 31, !dbg !19202
  %36 = load i32, i32* %add.ptr81, align 4, !dbg !19202
  %and82 = and i32 %36, -16777216, !dbg !19202
  %shr83 = lshr i32 %and82, 24, !dbg !19202
  %or84 = or i32 %or75, %shr83, !dbg !19202
  br label %cond.end93, !dbg !19202

cond.false85:                                     ; preds = %cond.false42
  %37 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19202
  %dev86 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %37, i32 0, i32 0, !dbg !19202
  %38 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev86, align 8, !dbg !19202
  %caps87 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %38, i32 0, i32 9, !dbg !19202
  %hca_cur88 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps87, i32 0, i32 0, !dbg !19202
  %arrayidx89 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur88, i64 0, i64 0, !dbg !19202
  %arraydecay90 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx89, i64 0, i64 0, !dbg !19202
  %add.ptr91 = getelementptr i32, i32* %arraydecay90, i64 31, !dbg !19202
  %39 = load i32, i32* %add.ptr91, align 4, !dbg !19202
  %call92 = call i32 @__fswab32(i32 %39) #10, !dbg !19202
  br label %cond.end93, !dbg !19202

cond.end93:                                       ; preds = %cond.false85, %cond.true49
  %cond94 = phi i32 [ %or84, %cond.true49 ], [ %call92, %cond.false85 ], !dbg !19202
  %shr95 = lshr i32 %cond94, 8, !dbg !19202
  %and96 = and i32 %shr95, 31, !dbg !19202
  %shl97 = shl i32 1, %and96, !dbg !19202
  br label %cond.end98, !dbg !19200

cond.end98:                                       ; preds = %cond.end93, %cond.end
  %cond99 = phi i32 [ %shl41, %cond.end ], [ %shl97, %cond.end93 ], !dbg !19200
  store i32 %cond99, i32* %size, align 4, !dbg !19203
  %40 = load i32, i32* %size, align 4, !dbg !19204
  %conv = sext i32 %40 to i64, !dbg !19204
  %call100 = call i8* @kcalloc(i64 %conv, i64 6, i32 3264) #8, !dbg !19205
  %41 = bitcast i8* %call100 to [6 x i8]*, !dbg !19205
  store [6 x i8]* %41, [6 x i8]** %mac_list, align 8, !dbg !19206
  %42 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19207
  %tobool101 = icmp ne [6 x i8]* %42, null, !dbg !19207
  br i1 %tobool101, label %if.end, label %if.then, !dbg !19209

if.then:                                          ; preds = %cond.end98
  br label %return, !dbg !19210

if.end:                                           ; preds = %cond.end98
  %43 = load i8, i8* %is_uc, align 1, !dbg !19211
  %tobool102 = trunc i8 %43 to i1, !dbg !19211
  br i1 %tobool102, label %cond.true104, label %cond.false106, !dbg !19211

cond.true104:                                     ; preds = %if.end
  %44 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19212
  %uc_list = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %44, i32 0, i32 2, !dbg !19213
  %arraydecay105 = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %uc_list, i64 0, i64 0, !dbg !19212
  br label %cond.end108, !dbg !19211

cond.false106:                                    ; preds = %if.end
  %45 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19214
  %mc_list = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %45, i32 0, i32 3, !dbg !19215
  %arraydecay107 = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_list, i64 0, i64 0, !dbg !19214
  br label %cond.end108, !dbg !19211

cond.end108:                                      ; preds = %cond.false106, %cond.true104
  %cond109 = phi %struct.hlist_head* [ %arraydecay105, %cond.true104 ], [ %arraydecay107, %cond.false106 ], !dbg !19211
  store %struct.hlist_head* %cond109, %struct.hlist_head** %hash, align 8, !dbg !19216
  store i32 0, i32* %hi, align 4, !dbg !19217
  br label %for.cond, !dbg !19217

for.cond:                                         ; preds = %for.inc144, %cond.end108
  %46 = load i32, i32* %hi, align 4, !dbg !19219
  %conv110 = sext i32 %46 to i64, !dbg !19219
  %cmp111 = icmp ult i64 %conv110, 256, !dbg !19219
  br i1 %cmp111, label %for.body, label %for.end145, !dbg !19217

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !19221, metadata !DIExpression()), !dbg !19224
  %47 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19224
  %48 = load i32, i32* %hi, align 4, !dbg !19224
  %idxprom = sext i32 %48 to i64, !dbg !19224
  %arrayidx113 = getelementptr %struct.hlist_head, %struct.hlist_head* %47, i64 %idxprom, !dbg !19224
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx113, i32 0, i32 0, !dbg !19224
  %49 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19224
  store %struct.hlist_node* %49, %struct.hlist_node** %____ptr, align 8, !dbg !19224
  %50 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19224
  %tobool115 = icmp ne %struct.hlist_node* %50, null, !dbg !19224
  br i1 %tobool115, label %cond.true116, label %cond.false119, !dbg !19224

cond.true116:                                     ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19225, metadata !DIExpression()), !dbg !19227
  %51 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19227
  %52 = bitcast %struct.hlist_node* %51 to i8*, !dbg !19227
  store i8* %52, i8** %__mptr, align 8, !dbg !19227
  br label %do.body, !dbg !19227

do.body:                                          ; preds = %cond.true116
  br label %do.end, !dbg !19228

do.end:                                           ; preds = %do.body
  %53 = load i8*, i8** %__mptr, align 8, !dbg !19227
  %add.ptr118 = getelementptr i8, i8* %53, i64 0, !dbg !19227
  %54 = bitcast i8* %add.ptr118 to %struct.l2addr_node*, !dbg !19227
  store %struct.l2addr_node* %54, %struct.l2addr_node** %tmp117, align 8, !dbg !19228
  %55 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp117, align 8, !dbg !19227
  br label %cond.end120, !dbg !19224

cond.false119:                                    ; preds = %for.body
  br label %cond.end120, !dbg !19224

cond.end120:                                      ; preds = %cond.false119, %do.end
  %cond121 = phi %struct.l2addr_node* [ %55, %do.end ], [ null, %cond.false119 ], !dbg !19224
  store %struct.l2addr_node* %cond121, %struct.l2addr_node** %tmp114, align 8, !dbg !19224
  %56 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp114, align 8, !dbg !19224
  store %struct.l2addr_node* %56, %struct.l2addr_node** %node, align 8, !dbg !19230
  br label %for.cond122, !dbg !19230

for.cond122:                                      ; preds = %cond.end142, %cond.end120
  %57 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19231
  %tobool123 = icmp ne %struct.l2addr_node* %57, null, !dbg !19231
  br i1 %tobool123, label %land.rhs, label %land.end, !dbg !19231

land.rhs:                                         ; preds = %for.cond122
  %58 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19233
  %hlist = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %58, i32 0, i32 0, !dbg !19233
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist, i32 0, i32 0, !dbg !19233
  %59 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19233
  store %struct.hlist_node* %59, %struct.hlist_node** %tmp, align 8, !dbg !19233
  store i32 1, i32* %tmp124, align 4, !dbg !19233
  %60 = load i32, i32* %tmp124, align 4, !dbg !19233
  %tobool125 = icmp ne i32 %60, 0, !dbg !19231
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond122
  %61 = phi i1 [ false, %for.cond122 ], [ %tobool125, %land.rhs ], !dbg !19235
  br i1 %61, label %for.body126, label %for.end, !dbg !19230

for.body126:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %__mptr127, metadata !19236, metadata !DIExpression()), !dbg !19239
  %62 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19239
  %63 = bitcast %struct.l2addr_node* %62 to i8*, !dbg !19239
  store i8* %63, i8** %__mptr127, align 8, !dbg !19239
  br label %do.body128, !dbg !19239

do.body128:                                       ; preds = %for.body126
  br label %do.end129, !dbg !19240

do.end129:                                        ; preds = %do.body128
  %64 = load i8*, i8** %__mptr127, align 8, !dbg !19239
  %add.ptr131 = getelementptr i8, i8* %64, i64 0, !dbg !19239
  %65 = bitcast i8* %add.ptr131 to %struct.vport_addr*, !dbg !19239
  store %struct.vport_addr* %65, %struct.vport_addr** %tmp130, align 8, !dbg !19240
  %66 = load %struct.vport_addr*, %struct.vport_addr** %tmp130, align 8, !dbg !19239
  store %struct.vport_addr* %66, %struct.vport_addr** %addr, align 8, !dbg !19242
  %67 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19243
  %action = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %67, i32 0, i32 1, !dbg !19244
  store i8 2, i8* %action, align 8, !dbg !19245
  br label %for.inc, !dbg !19246

for.inc:                                          ; preds = %do.end129
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr132, metadata !19247, metadata !DIExpression()), !dbg !19249
  %68 = load %struct.hlist_node*, %struct.hlist_node** %tmp, align 8, !dbg !19249
  store %struct.hlist_node* %68, %struct.hlist_node** %____ptr132, align 8, !dbg !19249
  %69 = load %struct.hlist_node*, %struct.hlist_node** %____ptr132, align 8, !dbg !19249
  %tobool134 = icmp ne %struct.hlist_node* %69, null, !dbg !19249
  br i1 %tobool134, label %cond.true135, label %cond.false141, !dbg !19249

cond.true135:                                     ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr136, metadata !19250, metadata !DIExpression()), !dbg !19252
  %70 = load %struct.hlist_node*, %struct.hlist_node** %____ptr132, align 8, !dbg !19252
  %71 = bitcast %struct.hlist_node* %70 to i8*, !dbg !19252
  store i8* %71, i8** %__mptr136, align 8, !dbg !19252
  br label %do.body137, !dbg !19252

do.body137:                                       ; preds = %cond.true135
  br label %do.end138, !dbg !19253

do.end138:                                        ; preds = %do.body137
  %72 = load i8*, i8** %__mptr136, align 8, !dbg !19252
  %add.ptr140 = getelementptr i8, i8* %72, i64 0, !dbg !19252
  %73 = bitcast i8* %add.ptr140 to %struct.l2addr_node*, !dbg !19252
  store %struct.l2addr_node* %73, %struct.l2addr_node** %tmp139, align 8, !dbg !19253
  %74 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp139, align 8, !dbg !19252
  br label %cond.end142, !dbg !19249

cond.false141:                                    ; preds = %for.inc
  br label %cond.end142, !dbg !19249

cond.end142:                                      ; preds = %cond.false141, %do.end138
  %cond143 = phi %struct.l2addr_node* [ %74, %do.end138 ], [ null, %cond.false141 ], !dbg !19249
  store %struct.l2addr_node* %cond143, %struct.l2addr_node** %tmp133, align 8, !dbg !19249
  %75 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp133, align 8, !dbg !19249
  store %struct.l2addr_node* %75, %struct.l2addr_node** %node, align 8, !dbg !19231
  br label %for.cond122, !dbg !19231, !llvm.loop !19255

for.end:                                          ; preds = %land.end
  br label %for.inc144, !dbg !19256

for.inc144:                                       ; preds = %for.end
  %76 = load i32, i32* %hi, align 4, !dbg !19219
  %inc = add i32 %76, 1, !dbg !19219
  store i32 %inc, i32* %hi, align 4, !dbg !19219
  br label %for.cond, !dbg !19219, !llvm.loop !19257

for.end145:                                       ; preds = %for.cond
  %77 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19259
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %77, i32 0, i32 13, !dbg !19261
  %78 = load i8, i8* %enabled, align 4, !dbg !19261
  %tobool146 = trunc i8 %78 to i1, !dbg !19261
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !19262

if.then147:                                       ; preds = %for.end145
  br label %out, !dbg !19263

if.end148:                                        ; preds = %for.end145
  %79 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19264
  %dev149 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %79, i32 0, i32 0, !dbg !19265
  %80 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev149, align 8, !dbg !19265
  %81 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19266
  %vport150 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %81, i32 0, i32 1, !dbg !19267
  %82 = load i32, i32* %vport150, align 8, !dbg !19267
  %conv151 = trunc i32 %82 to i16, !dbg !19266
  %83 = load i32, i32* %list_type.addr, align 4, !dbg !19268
  %84 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19269
  %call152 = call i32 @mlx5_query_nic_vport_mac_list(%struct.mlx5_core_dev* %80, i16 zeroext %conv151, i32 %83, [6 x i8]* %84, i32* %size) #8, !dbg !19270
  store i32 %call152, i32* %err, align 4, !dbg !19271
  %85 = load i32, i32* %err, align 4, !dbg !19272
  %tobool153 = icmp ne i32 %85, 0, !dbg !19272
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !19274

if.then154:                                       ; preds = %if.end148
  br label %out, !dbg !19275

if.end155:                                        ; preds = %if.end148
  br label %do.body156, !dbg !19276

do.body156:                                       ; preds = %if.end155
  %86 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !19277
  %conv157 = zext i32 %86 to i64, !dbg !19277
  %and158 = and i64 8, %conv157, !dbg !19277
  %tobool159 = icmp ne i64 %and158, 0, !dbg !19277
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !19280

if.then160:                                       ; preds = %do.body156
  br label %if.end161, !dbg !19277

if.end161:                                        ; preds = %if.then160, %do.body156
  br label %do.end162, !dbg !19280

do.end162:                                        ; preds = %if.end161
  store i32 0, i32* %i, align 4, !dbg !19281
  br label %for.cond163, !dbg !19283

for.cond163:                                      ; preds = %for.inc340, %do.end162
  %87 = load i32, i32* %i, align 4, !dbg !19284
  %88 = load i32, i32* %size, align 4, !dbg !19286
  %cmp164 = icmp slt i32 %87, %88, !dbg !19287
  br i1 %cmp164, label %for.body166, label %for.end342, !dbg !19288

for.body166:                                      ; preds = %for.cond163
  %89 = load i8, i8* %is_uc, align 1, !dbg !19289
  %tobool167 = trunc i8 %89 to i1, !dbg !19289
  br i1 %tobool167, label %land.lhs.true, label %if.end174, !dbg !19292

land.lhs.true:                                    ; preds = %for.body166
  %90 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19293
  %91 = load i32, i32* %i, align 4, !dbg !19294
  %idxprom169 = sext i32 %91 to i64, !dbg !19293
  %arrayidx170 = getelementptr [6 x i8], [6 x i8]* %90, i64 %idxprom169, !dbg !19293
  %arraydecay171 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx170, i64 0, i64 0, !dbg !19293
  %call172 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay171) #8, !dbg !19295
  br i1 %call172, label %if.end174, label %if.then173, !dbg !19296

if.then173:                                       ; preds = %land.lhs.true
  br label %for.inc340, !dbg !19297

if.end174:                                        ; preds = %land.lhs.true, %for.body166
  %92 = load i8, i8* %is_uc, align 1, !dbg !19298
  %tobool175 = trunc i8 %92 to i1, !dbg !19298
  br i1 %tobool175, label %if.end182, label %land.lhs.true176, !dbg !19300

land.lhs.true176:                                 ; preds = %if.end174
  %93 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19301
  %94 = load i32, i32* %i, align 4, !dbg !19302
  %idxprom177 = sext i32 %94 to i64, !dbg !19301
  %arrayidx178 = getelementptr [6 x i8], [6 x i8]* %93, i64 %idxprom177, !dbg !19301
  %arraydecay179 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx178, i64 0, i64 0, !dbg !19301
  %call180 = call zeroext i1 @is_multicast_ether_addr(i8* %arraydecay179) #8, !dbg !19303
  br i1 %call180, label %if.end182, label %if.then181, !dbg !19304

if.then181:                                       ; preds = %land.lhs.true176
  br label %for.inc340, !dbg !19305

if.end182:                                        ; preds = %land.lhs.true176, %if.end174
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !19306, metadata !DIExpression()), !dbg !19308
  %95 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19308
  %96 = load i32, i32* %i, align 4, !dbg !19308
  %idxprom183 = sext i32 %96 to i64, !dbg !19308
  %arrayidx184 = getelementptr [6 x i8], [6 x i8]* %95, i64 %idxprom183, !dbg !19308
  %arrayidx185 = getelementptr [6 x i8], [6 x i8]* %arrayidx184, i64 0, i64 5, !dbg !19308
  %97 = load i8, i8* %arrayidx185, align 1, !dbg !19308
  %conv186 = zext i8 %97 to i32, !dbg !19308
  store i32 %conv186, i32* %ix, align 4, !dbg !19308
  call void @llvm.dbg.declare(metadata i8* %found, metadata !19309, metadata !DIExpression()), !dbg !19308
  store i8 0, i8* %found, align 1, !dbg !19308
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %ptr, metadata !19310, metadata !DIExpression()), !dbg !19308
  store %struct.vport_addr* null, %struct.vport_addr** %ptr, align 8, !dbg !19308
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr187, metadata !19311, metadata !DIExpression()), !dbg !19314
  %98 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19314
  %99 = load i32, i32* %ix, align 4, !dbg !19314
  %idxprom188 = sext i32 %99 to i64, !dbg !19314
  %arrayidx189 = getelementptr %struct.hlist_head, %struct.hlist_head* %98, i64 %idxprom188, !dbg !19314
  %first190 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx189, i32 0, i32 0, !dbg !19314
  %100 = load %struct.hlist_node*, %struct.hlist_node** %first190, align 8, !dbg !19314
  store %struct.hlist_node* %100, %struct.hlist_node** %____ptr187, align 8, !dbg !19314
  %101 = load %struct.hlist_node*, %struct.hlist_node** %____ptr187, align 8, !dbg !19314
  %tobool192 = icmp ne %struct.hlist_node* %101, null, !dbg !19314
  br i1 %tobool192, label %cond.true193, label %cond.false199, !dbg !19314

cond.true193:                                     ; preds = %if.end182
  call void @llvm.dbg.declare(metadata i8** %__mptr194, metadata !19315, metadata !DIExpression()), !dbg !19317
  %102 = load %struct.hlist_node*, %struct.hlist_node** %____ptr187, align 8, !dbg !19317
  %103 = bitcast %struct.hlist_node* %102 to i8*, !dbg !19317
  store i8* %103, i8** %__mptr194, align 8, !dbg !19317
  br label %do.body195, !dbg !19317

do.body195:                                       ; preds = %cond.true193
  br label %do.end196, !dbg !19318

do.end196:                                        ; preds = %do.body195
  %104 = load i8*, i8** %__mptr194, align 8, !dbg !19317
  %add.ptr198 = getelementptr i8, i8* %104, i64 0, !dbg !19317
  %105 = bitcast i8* %add.ptr198 to %struct.vport_addr*, !dbg !19317
  store %struct.vport_addr* %105, %struct.vport_addr** %tmp197, align 8, !dbg !19318
  %106 = load %struct.vport_addr*, %struct.vport_addr** %tmp197, align 8, !dbg !19317
  br label %cond.end200, !dbg !19314

cond.false199:                                    ; preds = %if.end182
  br label %cond.end200, !dbg !19314

cond.end200:                                      ; preds = %cond.false199, %do.end196
  %cond201 = phi %struct.vport_addr* [ %106, %do.end196 ], [ null, %cond.false199 ], !dbg !19314
  store %struct.vport_addr* %cond201, %struct.vport_addr** %tmp191, align 8, !dbg !19314
  %107 = load %struct.vport_addr*, %struct.vport_addr** %tmp191, align 8, !dbg !19314
  store %struct.vport_addr* %107, %struct.vport_addr** %ptr, align 8, !dbg !19320
  br label %for.cond202, !dbg !19320

for.cond202:                                      ; preds = %cond.end228, %cond.end200
  %108 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19321
  %tobool203 = icmp ne %struct.vport_addr* %108, null, !dbg !19320
  br i1 %tobool203, label %for.body204, label %for.end230, !dbg !19320

for.body204:                                      ; preds = %for.cond202
  %109 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19323
  %node205 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %109, i32 0, i32 0, !dbg !19323
  %addr206 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node205, i32 0, i32 1, !dbg !19323
  %arraydecay207 = getelementptr inbounds [6 x i8], [6 x i8]* %addr206, i64 0, i64 0, !dbg !19323
  %110 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19323
  %111 = load i32, i32* %i, align 4, !dbg !19323
  %idxprom208 = sext i32 %111 to i64, !dbg !19323
  %arrayidx209 = getelementptr [6 x i8], [6 x i8]* %110, i64 %idxprom208, !dbg !19323
  %arraydecay210 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx209, i64 0, i64 0, !dbg !19323
  %call211 = call zeroext i1 @ether_addr_equal(i8* %arraydecay207, i8* %arraydecay210) #8, !dbg !19323
  br i1 %call211, label %if.then212, label %if.end213, !dbg !19321

if.then212:                                       ; preds = %for.body204
  store i8 1, i8* %found, align 1, !dbg !19325
  br label %for.end230, !dbg !19325

if.end213:                                        ; preds = %for.body204
  br label %for.inc214, !dbg !19323

for.inc214:                                       ; preds = %if.end213
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr215, metadata !19327, metadata !DIExpression()), !dbg !19329
  %112 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19329
  %node216 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %112, i32 0, i32 0, !dbg !19329
  %hlist217 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node216, i32 0, i32 0, !dbg !19329
  %next218 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist217, i32 0, i32 0, !dbg !19329
  %113 = load %struct.hlist_node*, %struct.hlist_node** %next218, align 8, !dbg !19329
  store %struct.hlist_node* %113, %struct.hlist_node** %____ptr215, align 8, !dbg !19329
  %114 = load %struct.hlist_node*, %struct.hlist_node** %____ptr215, align 8, !dbg !19329
  %tobool220 = icmp ne %struct.hlist_node* %114, null, !dbg !19329
  br i1 %tobool220, label %cond.true221, label %cond.false227, !dbg !19329

cond.true221:                                     ; preds = %for.inc214
  call void @llvm.dbg.declare(metadata i8** %__mptr222, metadata !19330, metadata !DIExpression()), !dbg !19332
  %115 = load %struct.hlist_node*, %struct.hlist_node** %____ptr215, align 8, !dbg !19332
  %116 = bitcast %struct.hlist_node* %115 to i8*, !dbg !19332
  store i8* %116, i8** %__mptr222, align 8, !dbg !19332
  br label %do.body223, !dbg !19332

do.body223:                                       ; preds = %cond.true221
  br label %do.end224, !dbg !19333

do.end224:                                        ; preds = %do.body223
  %117 = load i8*, i8** %__mptr222, align 8, !dbg !19332
  %add.ptr226 = getelementptr i8, i8* %117, i64 0, !dbg !19332
  %118 = bitcast i8* %add.ptr226 to %struct.vport_addr*, !dbg !19332
  store %struct.vport_addr* %118, %struct.vport_addr** %tmp225, align 8, !dbg !19333
  %119 = load %struct.vport_addr*, %struct.vport_addr** %tmp225, align 8, !dbg !19332
  br label %cond.end228, !dbg !19329

cond.false227:                                    ; preds = %for.inc214
  br label %cond.end228, !dbg !19329

cond.end228:                                      ; preds = %cond.false227, %do.end224
  %cond229 = phi %struct.vport_addr* [ %119, %do.end224 ], [ null, %cond.false227 ], !dbg !19329
  store %struct.vport_addr* %cond229, %struct.vport_addr** %tmp219, align 8, !dbg !19329
  %120 = load %struct.vport_addr*, %struct.vport_addr** %tmp219, align 8, !dbg !19329
  store %struct.vport_addr* %120, %struct.vport_addr** %ptr, align 8, !dbg !19321
  br label %for.cond202, !dbg !19321, !llvm.loop !19335

for.end230:                                       ; preds = %if.then212, %for.cond202
  %121 = load i8, i8* %found, align 1, !dbg !19336
  %tobool231 = trunc i8 %121 to i1, !dbg !19336
  br i1 %tobool231, label %if.end233, label %if.then232, !dbg !19308

if.then232:                                       ; preds = %for.end230
  store %struct.vport_addr* null, %struct.vport_addr** %ptr, align 8, !dbg !19336
  br label %if.end233, !dbg !19336

if.end233:                                        ; preds = %if.then232, %for.end230
  %122 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19308
  store %struct.vport_addr* %122, %struct.vport_addr** %tmp234, align 8, !dbg !19336
  %123 = load %struct.vport_addr*, %struct.vport_addr** %tmp234, align 8, !dbg !19308
  store %struct.vport_addr* %123, %struct.vport_addr** %addr, align 8, !dbg !19338
  %124 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19339
  %tobool235 = icmp ne %struct.vport_addr* %124, null, !dbg !19339
  br i1 %tobool235, label %if.then236, label %if.end305, !dbg !19341

if.then236:                                       ; preds = %if.end233
  %125 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19342
  %action237 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %125, i32 0, i32 1, !dbg !19344
  store i8 0, i8* %action237, align 8, !dbg !19345
  %126 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19346
  %mc_promisc = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %126, i32 0, i32 5, !dbg !19348
  %127 = load i8, i8* %mc_promisc, align 1, !dbg !19348
  %tobool238 = trunc i8 %127 to i1, !dbg !19348
  br i1 %tobool238, label %if.then239, label %if.end304, !dbg !19349

if.then239:                                       ; preds = %if.then236
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %esw_mc, metadata !19350, metadata !DIExpression()), !dbg !19352
  call void @llvm.dbg.declare(metadata i32* %ix240, metadata !19353, metadata !DIExpression()), !dbg !19355
  %128 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19355
  %129 = load i32, i32* %i, align 4, !dbg !19355
  %idxprom241 = sext i32 %129 to i64, !dbg !19355
  %arrayidx242 = getelementptr [6 x i8], [6 x i8]* %128, i64 %idxprom241, !dbg !19355
  %arrayidx243 = getelementptr [6 x i8], [6 x i8]* %arrayidx242, i64 0, i64 5, !dbg !19355
  %130 = load i8, i8* %arrayidx243, align 1, !dbg !19355
  %conv244 = zext i8 %130 to i32, !dbg !19355
  store i32 %conv244, i32* %ix240, align 4, !dbg !19355
  call void @llvm.dbg.declare(metadata i8* %found245, metadata !19356, metadata !DIExpression()), !dbg !19355
  store i8 0, i8* %found245, align 1, !dbg !19355
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %ptr246, metadata !19357, metadata !DIExpression()), !dbg !19355
  store %struct.esw_mc_addr* null, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19355
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr247, metadata !19358, metadata !DIExpression()), !dbg !19361
  %131 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19361
  %mc_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %131, i32 0, i32 3, !dbg !19361
  %132 = load i32, i32* %ix240, align 4, !dbg !19361
  %idxprom248 = sext i32 %132 to i64, !dbg !19361
  %arrayidx249 = getelementptr [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_table, i64 0, i64 %idxprom248, !dbg !19361
  %first250 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx249, i32 0, i32 0, !dbg !19361
  %133 = load %struct.hlist_node*, %struct.hlist_node** %first250, align 8, !dbg !19361
  store %struct.hlist_node* %133, %struct.hlist_node** %____ptr247, align 8, !dbg !19361
  %134 = load %struct.hlist_node*, %struct.hlist_node** %____ptr247, align 8, !dbg !19361
  %tobool252 = icmp ne %struct.hlist_node* %134, null, !dbg !19361
  br i1 %tobool252, label %cond.true253, label %cond.false259, !dbg !19361

cond.true253:                                     ; preds = %if.then239
  call void @llvm.dbg.declare(metadata i8** %__mptr254, metadata !19362, metadata !DIExpression()), !dbg !19364
  %135 = load %struct.hlist_node*, %struct.hlist_node** %____ptr247, align 8, !dbg !19364
  %136 = bitcast %struct.hlist_node* %135 to i8*, !dbg !19364
  store i8* %136, i8** %__mptr254, align 8, !dbg !19364
  br label %do.body255, !dbg !19364

do.body255:                                       ; preds = %cond.true253
  br label %do.end256, !dbg !19365

do.end256:                                        ; preds = %do.body255
  %137 = load i8*, i8** %__mptr254, align 8, !dbg !19364
  %add.ptr258 = getelementptr i8, i8* %137, i64 0, !dbg !19364
  %138 = bitcast i8* %add.ptr258 to %struct.esw_mc_addr*, !dbg !19364
  store %struct.esw_mc_addr* %138, %struct.esw_mc_addr** %tmp257, align 8, !dbg !19365
  %139 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp257, align 8, !dbg !19364
  br label %cond.end260, !dbg !19361

cond.false259:                                    ; preds = %if.then239
  br label %cond.end260, !dbg !19361

cond.end260:                                      ; preds = %cond.false259, %do.end256
  %cond261 = phi %struct.esw_mc_addr* [ %139, %do.end256 ], [ null, %cond.false259 ], !dbg !19361
  store %struct.esw_mc_addr* %cond261, %struct.esw_mc_addr** %tmp251, align 8, !dbg !19361
  %140 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp251, align 8, !dbg !19361
  store %struct.esw_mc_addr* %140, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19367
  br label %for.cond262, !dbg !19367

for.cond262:                                      ; preds = %cond.end288, %cond.end260
  %141 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19368
  %tobool263 = icmp ne %struct.esw_mc_addr* %141, null, !dbg !19367
  br i1 %tobool263, label %for.body264, label %for.end290, !dbg !19367

for.body264:                                      ; preds = %for.cond262
  %142 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19370
  %node265 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %142, i32 0, i32 0, !dbg !19370
  %addr266 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node265, i32 0, i32 1, !dbg !19370
  %arraydecay267 = getelementptr inbounds [6 x i8], [6 x i8]* %addr266, i64 0, i64 0, !dbg !19370
  %143 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19370
  %144 = load i32, i32* %i, align 4, !dbg !19370
  %idxprom268 = sext i32 %144 to i64, !dbg !19370
  %arrayidx269 = getelementptr [6 x i8], [6 x i8]* %143, i64 %idxprom268, !dbg !19370
  %arraydecay270 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx269, i64 0, i64 0, !dbg !19370
  %call271 = call zeroext i1 @ether_addr_equal(i8* %arraydecay267, i8* %arraydecay270) #8, !dbg !19370
  br i1 %call271, label %if.then272, label %if.end273, !dbg !19368

if.then272:                                       ; preds = %for.body264
  store i8 1, i8* %found245, align 1, !dbg !19372
  br label %for.end290, !dbg !19372

if.end273:                                        ; preds = %for.body264
  br label %for.inc274, !dbg !19370

for.inc274:                                       ; preds = %if.end273
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr275, metadata !19374, metadata !DIExpression()), !dbg !19376
  %145 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19376
  %node276 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %145, i32 0, i32 0, !dbg !19376
  %hlist277 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node276, i32 0, i32 0, !dbg !19376
  %next278 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist277, i32 0, i32 0, !dbg !19376
  %146 = load %struct.hlist_node*, %struct.hlist_node** %next278, align 8, !dbg !19376
  store %struct.hlist_node* %146, %struct.hlist_node** %____ptr275, align 8, !dbg !19376
  %147 = load %struct.hlist_node*, %struct.hlist_node** %____ptr275, align 8, !dbg !19376
  %tobool280 = icmp ne %struct.hlist_node* %147, null, !dbg !19376
  br i1 %tobool280, label %cond.true281, label %cond.false287, !dbg !19376

cond.true281:                                     ; preds = %for.inc274
  call void @llvm.dbg.declare(metadata i8** %__mptr282, metadata !19377, metadata !DIExpression()), !dbg !19379
  %148 = load %struct.hlist_node*, %struct.hlist_node** %____ptr275, align 8, !dbg !19379
  %149 = bitcast %struct.hlist_node* %148 to i8*, !dbg !19379
  store i8* %149, i8** %__mptr282, align 8, !dbg !19379
  br label %do.body283, !dbg !19379

do.body283:                                       ; preds = %cond.true281
  br label %do.end284, !dbg !19380

do.end284:                                        ; preds = %do.body283
  %150 = load i8*, i8** %__mptr282, align 8, !dbg !19379
  %add.ptr286 = getelementptr i8, i8* %150, i64 0, !dbg !19379
  %151 = bitcast i8* %add.ptr286 to %struct.esw_mc_addr*, !dbg !19379
  store %struct.esw_mc_addr* %151, %struct.esw_mc_addr** %tmp285, align 8, !dbg !19380
  %152 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp285, align 8, !dbg !19379
  br label %cond.end288, !dbg !19376

cond.false287:                                    ; preds = %for.inc274
  br label %cond.end288, !dbg !19376

cond.end288:                                      ; preds = %cond.false287, %do.end284
  %cond289 = phi %struct.esw_mc_addr* [ %152, %do.end284 ], [ null, %cond.false287 ], !dbg !19376
  store %struct.esw_mc_addr* %cond289, %struct.esw_mc_addr** %tmp279, align 8, !dbg !19376
  %153 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp279, align 8, !dbg !19376
  store %struct.esw_mc_addr* %153, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19368
  br label %for.cond262, !dbg !19368, !llvm.loop !19382

for.end290:                                       ; preds = %if.then272, %for.cond262
  %154 = load i8, i8* %found245, align 1, !dbg !19383
  %tobool291 = trunc i8 %154 to i1, !dbg !19383
  br i1 %tobool291, label %if.end293, label %if.then292, !dbg !19355

if.then292:                                       ; preds = %for.end290
  store %struct.esw_mc_addr* null, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19383
  br label %if.end293, !dbg !19383

if.end293:                                        ; preds = %if.then292, %for.end290
  %155 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr246, align 8, !dbg !19355
  store %struct.esw_mc_addr* %155, %struct.esw_mc_addr** %tmp294, align 8, !dbg !19383
  %156 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp294, align 8, !dbg !19355
  store %struct.esw_mc_addr* %156, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19352
  %157 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19385
  %tobool295 = icmp ne %struct.esw_mc_addr* %157, null, !dbg !19385
  br i1 %tobool295, label %if.end301, label %if.then296, !dbg !19387

if.then296:                                       ; preds = %if.end293
  %158 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19388
  %dev297 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %158, i32 0, i32 0, !dbg !19388
  %159 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev297, align 8, !dbg !19388
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %159, i32 0, i32 0, !dbg !19388
  %160 = load %struct.device*, %struct.device** %device, align 8, !dbg !19388
  %161 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19388
  %162 = load i32, i32* %i, align 4, !dbg !19388
  %idxprom298 = sext i32 %162 to i64, !dbg !19388
  %arrayidx299 = getelementptr [6 x i8], [6 x i8]* %161, i64 %idxprom298, !dbg !19388
  %arraydecay300 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx299, i64 0, i64 0, !dbg !19388
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %160, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay300) #11, !dbg !19388
  br label %for.inc340, !dbg !19390

if.end301:                                        ; preds = %if.end293
  %163 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19391
  %refcnt = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %163, i32 0, i32 2, !dbg !19392
  %164 = load i32, i32* %refcnt, align 8, !dbg !19393
  %inc302 = add i32 %164, 1, !dbg !19393
  store i32 %inc302, i32* %refcnt, align 8, !dbg !19393
  %165 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19394
  %mc_promisc303 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %165, i32 0, i32 5, !dbg !19395
  store i8 0, i8* %mc_promisc303, align 1, !dbg !19396
  br label %if.end304, !dbg !19397

if.end304:                                        ; preds = %if.end301, %if.then236
  br label %for.inc340, !dbg !19398

if.end305:                                        ; preds = %if.end233
  call void @llvm.dbg.declare(metadata i32* %ix306, metadata !19399, metadata !DIExpression()), !dbg !19401
  %166 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19401
  %167 = load i32, i32* %i, align 4, !dbg !19401
  %idxprom307 = sext i32 %167 to i64, !dbg !19401
  %arrayidx308 = getelementptr [6 x i8], [6 x i8]* %166, i64 %idxprom307, !dbg !19401
  %arrayidx309 = getelementptr [6 x i8], [6 x i8]* %arrayidx308, i64 0, i64 5, !dbg !19401
  %168 = load i8, i8* %arrayidx309, align 1, !dbg !19401
  %conv310 = zext i8 %168 to i32, !dbg !19401
  store i32 %conv310, i32* %ix306, align 4, !dbg !19401
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %ptr311, metadata !19402, metadata !DIExpression()), !dbg !19401
  store %struct.vport_addr* null, %struct.vport_addr** %ptr311, align 8, !dbg !19401
  %call312 = call i8* @kzalloc(i64 48, i32 3264) #8, !dbg !19401
  %169 = bitcast i8* %call312 to %struct.vport_addr*, !dbg !19401
  store %struct.vport_addr* %169, %struct.vport_addr** %ptr311, align 8, !dbg !19401
  %170 = load %struct.vport_addr*, %struct.vport_addr** %ptr311, align 8, !dbg !19403
  %tobool313 = icmp ne %struct.vport_addr* %170, null, !dbg !19403
  br i1 %tobool313, label %if.then314, label %if.end325, !dbg !19401

if.then314:                                       ; preds = %if.end305
  %171 = load %struct.vport_addr*, %struct.vport_addr** %ptr311, align 8, !dbg !19405
  %node315 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %171, i32 0, i32 0, !dbg !19405
  %addr316 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node315, i32 0, i32 1, !dbg !19405
  %arraydecay317 = getelementptr inbounds [6 x i8], [6 x i8]* %addr316, i64 0, i64 0, !dbg !19405
  %172 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19405
  %173 = load i32, i32* %i, align 4, !dbg !19405
  %idxprom318 = sext i32 %173 to i64, !dbg !19405
  %arrayidx319 = getelementptr [6 x i8], [6 x i8]* %172, i64 %idxprom318, !dbg !19405
  %arraydecay320 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx319, i64 0, i64 0, !dbg !19405
  call void @ether_addr_copy(i8* %arraydecay317, i8* %arraydecay320) #8, !dbg !19405
  %174 = load %struct.vport_addr*, %struct.vport_addr** %ptr311, align 8, !dbg !19405
  %node321 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %174, i32 0, i32 0, !dbg !19405
  %hlist322 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node321, i32 0, i32 0, !dbg !19405
  %175 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19405
  %176 = load i32, i32* %ix306, align 4, !dbg !19405
  %idxprom323 = sext i32 %176 to i64, !dbg !19405
  %arrayidx324 = getelementptr %struct.hlist_head, %struct.hlist_head* %175, i64 %idxprom323, !dbg !19405
  call void @hlist_add_head(%struct.hlist_node* %hlist322, %struct.hlist_head* %arrayidx324) #8, !dbg !19405
  br label %if.end325, !dbg !19405

if.end325:                                        ; preds = %if.then314, %if.end305
  %177 = load %struct.vport_addr*, %struct.vport_addr** %ptr311, align 8, !dbg !19401
  store %struct.vport_addr* %177, %struct.vport_addr** %tmp326, align 8, !dbg !19403
  %178 = load %struct.vport_addr*, %struct.vport_addr** %tmp326, align 8, !dbg !19401
  store %struct.vport_addr* %178, %struct.vport_addr** %addr, align 8, !dbg !19407
  %179 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19408
  %tobool327 = icmp ne %struct.vport_addr* %179, null, !dbg !19408
  br i1 %tobool327, label %if.end335, label %if.then328, !dbg !19410

if.then328:                                       ; preds = %if.end325
  %180 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19411
  %dev329 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %180, i32 0, i32 0, !dbg !19411
  %181 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev329, align 8, !dbg !19411
  %device330 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %181, i32 0, i32 0, !dbg !19411
  %182 = load %struct.device*, %struct.device** %device330, align 8, !dbg !19411
  %183 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19411
  %184 = load i32, i32* %i, align 4, !dbg !19411
  %idxprom331 = sext i32 %184 to i64, !dbg !19411
  %arrayidx332 = getelementptr [6 x i8], [6 x i8]* %183, i64 %idxprom331, !dbg !19411
  %arraydecay333 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx332, i64 0, i64 0, !dbg !19411
  %185 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19411
  %vport334 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %185, i32 0, i32 1, !dbg !19411
  %186 = load i32, i32* %vport334, align 8, !dbg !19411
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %182, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.42, i64 0, i64 0), i8* %arraydecay333, i32 %186) #11, !dbg !19411
  br label %for.inc340, !dbg !19413

if.end335:                                        ; preds = %if.end325
  %187 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19414
  %vport336 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %187, i32 0, i32 1, !dbg !19415
  %188 = load i32, i32* %vport336, align 8, !dbg !19415
  %conv337 = trunc i32 %188 to i16, !dbg !19414
  %189 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19416
  %vport338 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %189, i32 0, i32 2, !dbg !19417
  store i16 %conv337, i16* %vport338, align 2, !dbg !19418
  %190 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19419
  %action339 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %190, i32 0, i32 1, !dbg !19420
  store i8 1, i8* %action339, align 8, !dbg !19421
  br label %for.inc340, !dbg !19422

for.inc340:                                       ; preds = %if.end335, %if.then328, %if.end304, %if.then296, %if.then181, %if.then173
  %191 = load i32, i32* %i, align 4, !dbg !19423
  %inc341 = add i32 %191, 1, !dbg !19423
  store i32 %inc341, i32* %i, align 4, !dbg !19423
  br label %for.cond163, !dbg !19424, !llvm.loop !19425

for.end342:                                       ; preds = %for.cond163
  br label %out, !dbg !19426

out:                                              ; preds = %for.end342, %if.then154, %if.then147
  call void @llvm.dbg.label(metadata !19427), !dbg !19428
  %192 = load [6 x i8]*, [6 x i8]** %mac_list, align 8, !dbg !19429
  %193 = bitcast [6 x i8]* %192 to i8*, !dbg !19429
  call void @kfree(i8* %193) #8, !dbg !19430
  br label %return, !dbg !19431

return:                                           ; preds = %out, %if.then
  ret void, !dbg !19431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_apply_vport_addr_list(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport, i32 %list_type) #0 !dbg !19432 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %list_type.addr = alloca i32, align 4
  %is_uc = alloca i8, align 1
  %vport_addr_add = alloca i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)*, align 8
  %vport_addr_del = alloca i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)*, align 8
  %addr = alloca %struct.vport_addr*, align 8
  %node = alloca %struct.l2addr_node*, align 8
  %hash = alloca %struct.hlist_head*, align 8
  %tmp = alloca %struct.hlist_node*, align 8
  %hi = alloca i32, align 4
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp8 = alloca %struct.l2addr_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp11 = alloca %struct.l2addr_node*, align 8
  %tmp17 = alloca i32, align 4
  %__mptr20 = alloca i8*, align 8
  %tmp23 = alloca %struct.vport_addr*, align 8
  %____ptr31 = alloca %struct.hlist_node*, align 8
  %tmp32 = alloca %struct.l2addr_node*, align 8
  %__mptr35 = alloca i8*, align 8
  %tmp38 = alloca %struct.l2addr_node*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19433, metadata !DIExpression()), !dbg !19434
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !19435, metadata !DIExpression()), !dbg !19436
  store i32 %list_type, i32* %list_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_type.addr, metadata !19437, metadata !DIExpression()), !dbg !19438
  call void @llvm.dbg.declare(metadata i8* %is_uc, metadata !19439, metadata !DIExpression()), !dbg !19440
  %0 = load i32, i32* %list_type.addr, align 4, !dbg !19441
  %cmp = icmp eq i32 %0, 0, !dbg !19442
  %frombool = zext i1 %cmp to i8, !dbg !19440
  store i8 %frombool, i8* %is_uc, align 1, !dbg !19440
  call void @llvm.dbg.declare(metadata i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)** %vport_addr_add, metadata !19443, metadata !DIExpression()), !dbg !19448
  call void @llvm.dbg.declare(metadata i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)** %vport_addr_del, metadata !19449, metadata !DIExpression()), !dbg !19450
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %addr, metadata !19451, metadata !DIExpression()), !dbg !19452
  call void @llvm.dbg.declare(metadata %struct.l2addr_node** %node, metadata !19453, metadata !DIExpression()), !dbg !19454
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %hash, metadata !19455, metadata !DIExpression()), !dbg !19456
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %tmp, metadata !19457, metadata !DIExpression()), !dbg !19458
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !19459, metadata !DIExpression()), !dbg !19460
  %1 = load i8, i8* %is_uc, align 1, !dbg !19461
  %tobool = trunc i8 %1 to i1, !dbg !19461
  %2 = zext i1 %tobool to i64, !dbg !19461
  %cond = select i1 %tobool, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)* @esw_add_uc_addr, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)* @esw_add_mc_addr, !dbg !19461
  store i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)* %cond, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)** %vport_addr_add, align 8, !dbg !19462
  %3 = load i8, i8* %is_uc, align 1, !dbg !19463
  %tobool1 = trunc i8 %3 to i1, !dbg !19463
  %4 = zext i1 %tobool1 to i64, !dbg !19463
  %cond2 = select i1 %tobool1, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)* @esw_del_uc_addr, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)* @esw_del_mc_addr, !dbg !19463
  store i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)* %cond2, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)** %vport_addr_del, align 8, !dbg !19464
  %5 = load i8, i8* %is_uc, align 1, !dbg !19465
  %tobool3 = trunc i8 %5 to i1, !dbg !19465
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !19465

cond.true:                                        ; preds = %entry
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19466
  %uc_list = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %6, i32 0, i32 2, !dbg !19467
  %arraydecay = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %uc_list, i64 0, i64 0, !dbg !19466
  br label %cond.end, !dbg !19465

cond.false:                                       ; preds = %entry
  %7 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19468
  %mc_list = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %7, i32 0, i32 3, !dbg !19469
  %arraydecay4 = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_list, i64 0, i64 0, !dbg !19468
  br label %cond.end, !dbg !19465

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi %struct.hlist_head* [ %arraydecay, %cond.true ], [ %arraydecay4, %cond.false ], !dbg !19465
  store %struct.hlist_head* %cond5, %struct.hlist_head** %hash, align 8, !dbg !19470
  store i32 0, i32* %hi, align 4, !dbg !19471
  br label %for.cond, !dbg !19471

for.cond:                                         ; preds = %for.inc43, %cond.end
  %8 = load i32, i32* %hi, align 4, !dbg !19473
  %conv = sext i32 %8 to i64, !dbg !19473
  %cmp6 = icmp ult i64 %conv, 256, !dbg !19473
  br i1 %cmp6, label %for.body, label %for.end44, !dbg !19471

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !19475, metadata !DIExpression()), !dbg !19478
  %9 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19478
  %10 = load i32, i32* %hi, align 4, !dbg !19478
  %idxprom = sext i32 %10 to i64, !dbg !19478
  %arrayidx = getelementptr %struct.hlist_head, %struct.hlist_head* %9, i64 %idxprom, !dbg !19478
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx, i32 0, i32 0, !dbg !19478
  %11 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19478
  store %struct.hlist_node* %11, %struct.hlist_node** %____ptr, align 8, !dbg !19478
  %12 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19478
  %tobool9 = icmp ne %struct.hlist_node* %12, null, !dbg !19478
  br i1 %tobool9, label %cond.true10, label %cond.false12, !dbg !19478

cond.true10:                                      ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19479, metadata !DIExpression()), !dbg !19481
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19481
  %14 = bitcast %struct.hlist_node* %13 to i8*, !dbg !19481
  store i8* %14, i8** %__mptr, align 8, !dbg !19481
  br label %do.body, !dbg !19481

do.body:                                          ; preds = %cond.true10
  br label %do.end, !dbg !19482

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !19481
  %add.ptr = getelementptr i8, i8* %15, i64 0, !dbg !19481
  %16 = bitcast i8* %add.ptr to %struct.l2addr_node*, !dbg !19481
  store %struct.l2addr_node* %16, %struct.l2addr_node** %tmp11, align 8, !dbg !19482
  %17 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp11, align 8, !dbg !19481
  br label %cond.end13, !dbg !19478

cond.false12:                                     ; preds = %for.body
  br label %cond.end13, !dbg !19478

cond.end13:                                       ; preds = %cond.false12, %do.end
  %cond14 = phi %struct.l2addr_node* [ %17, %do.end ], [ null, %cond.false12 ], !dbg !19478
  store %struct.l2addr_node* %cond14, %struct.l2addr_node** %tmp8, align 8, !dbg !19478
  %18 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp8, align 8, !dbg !19478
  store %struct.l2addr_node* %18, %struct.l2addr_node** %node, align 8, !dbg !19484
  br label %for.cond15, !dbg !19484

for.cond15:                                       ; preds = %cond.end41, %cond.end13
  %19 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19485
  %tobool16 = icmp ne %struct.l2addr_node* %19, null, !dbg !19485
  br i1 %tobool16, label %land.rhs, label %land.end, !dbg !19485

land.rhs:                                         ; preds = %for.cond15
  %20 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19487
  %hlist = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %20, i32 0, i32 0, !dbg !19487
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist, i32 0, i32 0, !dbg !19487
  %21 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19487
  store %struct.hlist_node* %21, %struct.hlist_node** %tmp, align 8, !dbg !19487
  store i32 1, i32* %tmp17, align 4, !dbg !19487
  %22 = load i32, i32* %tmp17, align 4, !dbg !19487
  %tobool18 = icmp ne i32 %22, 0, !dbg !19485
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond15
  %23 = phi i1 [ false, %for.cond15 ], [ %tobool18, %land.rhs ], !dbg !19489
  br i1 %23, label %for.body19, label %for.end, !dbg !19484

for.body19:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !19490, metadata !DIExpression()), !dbg !19493
  %24 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19493
  %25 = bitcast %struct.l2addr_node* %24 to i8*, !dbg !19493
  store i8* %25, i8** %__mptr20, align 8, !dbg !19493
  br label %do.body21, !dbg !19493

do.body21:                                        ; preds = %for.body19
  br label %do.end22, !dbg !19494

do.end22:                                         ; preds = %do.body21
  %26 = load i8*, i8** %__mptr20, align 8, !dbg !19493
  %add.ptr24 = getelementptr i8, i8* %26, i64 0, !dbg !19493
  %27 = bitcast i8* %add.ptr24 to %struct.vport_addr*, !dbg !19493
  store %struct.vport_addr* %27, %struct.vport_addr** %tmp23, align 8, !dbg !19494
  %28 = load %struct.vport_addr*, %struct.vport_addr** %tmp23, align 8, !dbg !19493
  store %struct.vport_addr* %28, %struct.vport_addr** %addr, align 8, !dbg !19496
  %29 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19497
  %action = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %29, i32 0, i32 1, !dbg !19498
  %30 = load i8, i8* %action, align 8, !dbg !19498
  %conv25 = zext i8 %30 to i32, !dbg !19497
  switch i32 %conv25, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb27
  ], !dbg !19499

sw.bb:                                            ; preds = %do.end22
  %31 = load i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)*, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)** %vport_addr_add, align 8, !dbg !19500
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19502
  %33 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19503
  %call = call i32 %31(%struct.mlx5_eswitch* %32, %struct.vport_addr* %33) #8, !dbg !19500
  %34 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19504
  %action26 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %34, i32 0, i32 1, !dbg !19505
  store i8 0, i8* %action26, align 8, !dbg !19506
  br label %sw.epilog, !dbg !19507

sw.bb27:                                          ; preds = %do.end22
  %35 = load i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)*, i32 (%struct.mlx5_eswitch*, %struct.vport_addr*)** %vport_addr_del, align 8, !dbg !19508
  %36 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19509
  %37 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19510
  %call28 = call i32 %35(%struct.mlx5_eswitch* %36, %struct.vport_addr* %37) #8, !dbg !19508
  %38 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19511
  %node29 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %38, i32 0, i32 0, !dbg !19511
  %hlist30 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node29, i32 0, i32 0, !dbg !19511
  call void @hlist_del(%struct.hlist_node* %hlist30) #8, !dbg !19511
  %39 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19511
  %40 = bitcast %struct.vport_addr* %39 to i8*, !dbg !19511
  call void @kfree(i8* %40) #8, !dbg !19511
  br label %sw.epilog, !dbg !19513

sw.epilog:                                        ; preds = %do.end22, %sw.bb27, %sw.bb
  br label %for.inc, !dbg !19514

for.inc:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr31, metadata !19515, metadata !DIExpression()), !dbg !19517
  %41 = load %struct.hlist_node*, %struct.hlist_node** %tmp, align 8, !dbg !19517
  store %struct.hlist_node* %41, %struct.hlist_node** %____ptr31, align 8, !dbg !19517
  %42 = load %struct.hlist_node*, %struct.hlist_node** %____ptr31, align 8, !dbg !19517
  %tobool33 = icmp ne %struct.hlist_node* %42, null, !dbg !19517
  br i1 %tobool33, label %cond.true34, label %cond.false40, !dbg !19517

cond.true34:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr35, metadata !19518, metadata !DIExpression()), !dbg !19520
  %43 = load %struct.hlist_node*, %struct.hlist_node** %____ptr31, align 8, !dbg !19520
  %44 = bitcast %struct.hlist_node* %43 to i8*, !dbg !19520
  store i8* %44, i8** %__mptr35, align 8, !dbg !19520
  br label %do.body36, !dbg !19520

do.body36:                                        ; preds = %cond.true34
  br label %do.end37, !dbg !19521

do.end37:                                         ; preds = %do.body36
  %45 = load i8*, i8** %__mptr35, align 8, !dbg !19520
  %add.ptr39 = getelementptr i8, i8* %45, i64 0, !dbg !19520
  %46 = bitcast i8* %add.ptr39 to %struct.l2addr_node*, !dbg !19520
  store %struct.l2addr_node* %46, %struct.l2addr_node** %tmp38, align 8, !dbg !19521
  %47 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp38, align 8, !dbg !19520
  br label %cond.end41, !dbg !19517

cond.false40:                                     ; preds = %for.inc
  br label %cond.end41, !dbg !19517

cond.end41:                                       ; preds = %cond.false40, %do.end37
  %cond42 = phi %struct.l2addr_node* [ %47, %do.end37 ], [ null, %cond.false40 ], !dbg !19517
  store %struct.l2addr_node* %cond42, %struct.l2addr_node** %tmp32, align 8, !dbg !19517
  %48 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp32, align 8, !dbg !19517
  store %struct.l2addr_node* %48, %struct.l2addr_node** %node, align 8, !dbg !19485
  br label %for.cond15, !dbg !19485, !llvm.loop !19523

for.end:                                          ; preds = %land.end
  br label %for.inc43, !dbg !19524

for.inc43:                                        ; preds = %for.end
  %49 = load i32, i32* %hi, align 4, !dbg !19473
  %inc = add i32 %49, 1, !dbg !19473
  store i32 %inc, i32* %hi, align 4, !dbg !19473
  br label %for.cond, !dbg !19473, !llvm.loop !19525

for.end44:                                        ; preds = %for.cond
  ret void, !dbg !19527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_update_vport_rx_mode(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !19528 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %promisc_all = alloca i32, align 4
  %promisc_uc = alloca i32, align 4
  %promisc_mc = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19529, metadata !DIExpression()), !dbg !19530
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !19531, metadata !DIExpression()), !dbg !19532
  call void @llvm.dbg.declare(metadata i32* %promisc_all, metadata !19533, metadata !DIExpression()), !dbg !19534
  store i32 0, i32* %promisc_all, align 4, !dbg !19534
  call void @llvm.dbg.declare(metadata i32* %promisc_uc, metadata !19535, metadata !DIExpression()), !dbg !19536
  store i32 0, i32* %promisc_uc, align 4, !dbg !19536
  call void @llvm.dbg.declare(metadata i32* %promisc_mc, metadata !19537, metadata !DIExpression()), !dbg !19538
  store i32 0, i32* %promisc_mc, align 4, !dbg !19538
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19539, metadata !DIExpression()), !dbg !19540
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19541
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !19542
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19542
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19543
  %vport1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %2, i32 0, i32 1, !dbg !19544
  %3 = load i32, i32* %vport1, align 8, !dbg !19544
  %conv = trunc i32 %3 to i16, !dbg !19543
  %call = call i32 @mlx5_query_nic_vport_promisc(%struct.mlx5_core_dev* %1, i16 zeroext %conv, i32* %promisc_uc, i32* %promisc_mc, i32* %promisc_all) #8, !dbg !19545
  store i32 %call, i32* %err, align 4, !dbg !19546
  %4 = load i32, i32* %err, align 4, !dbg !19547
  %tobool = icmp ne i32 %4, 0, !dbg !19547
  br i1 %tobool, label %if.then, label %if.end, !dbg !19549

if.then:                                          ; preds = %entry
  br label %return, !dbg !19550

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !19551

do.body:                                          ; preds = %if.end
  %5 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !19552
  %conv2 = zext i32 %5 to i64, !dbg !19552
  %and = and i64 8, %conv2, !dbg !19552
  %tobool3 = icmp ne i64 %and, 0, !dbg !19552
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !19555

if.then4:                                         ; preds = %do.body
  br label %if.end5, !dbg !19552

if.end5:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !19555

do.end:                                           ; preds = %if.end5
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19556
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %6, i32 0, i32 11, !dbg !19558
  %trusted = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 8, !dbg !19559
  %7 = load i8, i8* %trusted, align 1, !dbg !19559
  %tobool6 = trunc i8 %7 to i1, !dbg !19559
  br i1 %tobool6, label %lor.lhs.false, label %if.then8, !dbg !19560

lor.lhs.false:                                    ; preds = %do.end
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19561
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %8, i32 0, i32 13, !dbg !19562
  %9 = load i8, i8* %enabled, align 4, !dbg !19562
  %tobool7 = trunc i8 %9 to i1, !dbg !19562
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !19563

if.then8:                                         ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %promisc_uc, align 4, !dbg !19564
  store i32 0, i32* %promisc_mc, align 4, !dbg !19566
  store i32 0, i32* %promisc_all, align 4, !dbg !19567
  br label %if.end9, !dbg !19568

if.end9:                                          ; preds = %if.then8, %lor.lhs.false
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19569
  %11 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19570
  %12 = load i32, i32* %promisc_all, align 4, !dbg !19571
  %tobool10 = icmp ne i32 %12, 0, !dbg !19571
  %13 = load i32, i32* %promisc_all, align 4, !dbg !19572
  %tobool11 = icmp ne i32 %13, 0, !dbg !19572
  br i1 %tobool11, label %lor.end, label %lor.rhs, !dbg !19573

lor.rhs:                                          ; preds = %if.end9
  %14 = load i32, i32* %promisc_mc, align 4, !dbg !19574
  %tobool12 = icmp ne i32 %14, 0, !dbg !19573
  br label %lor.end, !dbg !19573

lor.end:                                          ; preds = %lor.rhs, %if.end9
  %15 = phi i1 [ true, %if.end9 ], [ %tobool12, %lor.rhs ]
  call void @esw_apply_vport_rx_mode(%struct.mlx5_eswitch* %10, %struct.mlx5_vport* %11, i1 zeroext %tobool10, i1 zeroext %15) #8, !dbg !19575
  br label %return, !dbg !19576

return:                                           ; preds = %lor.end, %if.then
  ret void, !dbg !19576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !19577 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !19578, metadata !DIExpression()), !dbg !19579
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !19580
  %tobool = icmp ne i8* %0, null, !dbg !19580
  %lnot = xor i1 %tobool, true, !dbg !19580
  %lnot1 = xor i1 %lnot, true, !dbg !19580
  %lnot2 = xor i1 %lnot1, true, !dbg !19580
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !19580
  %conv = sext i32 %lnot.ext to i64, !dbg !19580
  %tobool3 = icmp ne i64 %conv, 0, !dbg !19580
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !19581

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !19582
  %2 = ptrtoint i8* %1 to i64, !dbg !19582
  %3 = inttoptr i64 %2 to i8*, !dbg !19582
  %4 = ptrtoint i8* %3 to i64, !dbg !19582
  %cmp = icmp uge i64 %4, -4095, !dbg !19582
  %lnot5 = xor i1 %cmp, true, !dbg !19582
  %lnot7 = xor i1 %lnot5, true, !dbg !19582
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !19582
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !19582
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !19581
  br label %lor.end, !dbg !19581

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !19583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_update_vport_mc_promisc(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !19584 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %node = alloca %struct.l2addr_node*, align 8
  %addr = alloca %struct.vport_addr*, align 8
  %hash = alloca %struct.hlist_head*, align 8
  %tmp = alloca %struct.hlist_node*, align 8
  %hi = alloca i32, align 4
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp2 = alloca %struct.l2addr_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.l2addr_node*, align 8
  %tmp6 = alloca i32, align 4
  %mac = alloca i8*, align 8
  %ix = alloca i32, align 4
  %found = alloca i8, align 1
  %ptr = alloca %struct.vport_addr*, align 8
  %____ptr13 = alloca %struct.hlist_node*, align 8
  %tmp17 = alloca %struct.vport_addr*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp23 = alloca %struct.vport_addr*, align 8
  %____ptr34 = alloca %struct.hlist_node*, align 8
  %tmp38 = alloca %struct.vport_addr*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp44 = alloca %struct.vport_addr*, align 8
  %tmp52 = alloca %struct.vport_addr*, align 8
  %ix62 = alloca i32, align 4
  %ptr65 = alloca %struct.vport_addr*, align 8
  %tmp77 = alloca %struct.vport_addr*, align 8
  %____ptr87 = alloca %struct.hlist_node*, align 8
  %tmp88 = alloca %struct.l2addr_node*, align 8
  %__mptr91 = alloca i8*, align 8
  %tmp94 = alloca %struct.l2addr_node*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19585, metadata !DIExpression()), !dbg !19586
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !19587, metadata !DIExpression()), !dbg !19588
  call void @llvm.dbg.declare(metadata %struct.l2addr_node** %node, metadata !19589, metadata !DIExpression()), !dbg !19590
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %addr, metadata !19591, metadata !DIExpression()), !dbg !19592
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %hash, metadata !19593, metadata !DIExpression()), !dbg !19594
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %tmp, metadata !19595, metadata !DIExpression()), !dbg !19596
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !19597, metadata !DIExpression()), !dbg !19598
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19599
  %mc_list = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %0, i32 0, i32 3, !dbg !19600
  %arraydecay = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_list, i64 0, i64 0, !dbg !19599
  store %struct.hlist_head* %arraydecay, %struct.hlist_head** %hash, align 8, !dbg !19601
  store i32 0, i32* %hi, align 4, !dbg !19602
  br label %for.cond, !dbg !19602

for.cond:                                         ; preds = %for.inc100, %entry
  %1 = load i32, i32* %hi, align 4, !dbg !19604
  %conv = sext i32 %1 to i64, !dbg !19604
  %cmp = icmp ult i64 %conv, 256, !dbg !19604
  br i1 %cmp, label %for.body, label %for.end101, !dbg !19602

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !19606, metadata !DIExpression()), !dbg !19609
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19609
  %mc_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 3, !dbg !19609
  %3 = load i32, i32* %hi, align 4, !dbg !19609
  %idxprom = sext i32 %3 to i64, !dbg !19609
  %arrayidx = getelementptr [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_table, i64 0, i64 %idxprom, !dbg !19609
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx, i32 0, i32 0, !dbg !19609
  %4 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19609
  store %struct.hlist_node* %4, %struct.hlist_node** %____ptr, align 8, !dbg !19609
  %5 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19609
  %tobool = icmp ne %struct.hlist_node* %5, null, !dbg !19609
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19609

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19610, metadata !DIExpression()), !dbg !19612
  %6 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19612
  %7 = bitcast %struct.hlist_node* %6 to i8*, !dbg !19612
  store i8* %7, i8** %__mptr, align 8, !dbg !19612
  br label %do.body, !dbg !19612

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !19613

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !19612
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !19612
  %9 = bitcast i8* %add.ptr to %struct.l2addr_node*, !dbg !19612
  store %struct.l2addr_node* %9, %struct.l2addr_node** %tmp3, align 8, !dbg !19613
  %10 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp3, align 8, !dbg !19612
  br label %cond.end, !dbg !19609

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !19609

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.l2addr_node* [ %10, %do.end ], [ null, %cond.false ], !dbg !19609
  store %struct.l2addr_node* %cond, %struct.l2addr_node** %tmp2, align 8, !dbg !19609
  %11 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp2, align 8, !dbg !19609
  store %struct.l2addr_node* %11, %struct.l2addr_node** %node, align 8, !dbg !19615
  br label %for.cond4, !dbg !19615

for.cond4:                                        ; preds = %cond.end97, %cond.end
  %12 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19616
  %tobool5 = icmp ne %struct.l2addr_node* %12, null, !dbg !19616
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !19616

land.rhs:                                         ; preds = %for.cond4
  %13 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19618
  %hlist = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %13, i32 0, i32 0, !dbg !19618
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist, i32 0, i32 0, !dbg !19618
  %14 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19618
  store %struct.hlist_node* %14, %struct.hlist_node** %tmp, align 8, !dbg !19618
  store i32 1, i32* %tmp6, align 4, !dbg !19618
  %15 = load i32, i32* %tmp6, align 4, !dbg !19618
  %tobool7 = icmp ne i32 %15, 0, !dbg !19616
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond4
  %16 = phi i1 [ false, %for.cond4 ], [ %tobool7, %land.rhs ], !dbg !19620
  br i1 %16, label %for.body8, label %for.end99, !dbg !19615

for.body8:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %mac, metadata !19621, metadata !DIExpression()), !dbg !19623
  %17 = load %struct.l2addr_node*, %struct.l2addr_node** %node, align 8, !dbg !19624
  %addr9 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %17, i32 0, i32 1, !dbg !19625
  %arraydecay10 = getelementptr inbounds [6 x i8], [6 x i8]* %addr9, i64 0, i64 0, !dbg !19624
  store i8* %arraydecay10, i8** %mac, align 8, !dbg !19623
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !19626, metadata !DIExpression()), !dbg !19628
  %18 = load i8*, i8** %mac, align 8, !dbg !19628
  %arrayidx11 = getelementptr i8, i8* %18, i64 5, !dbg !19628
  %19 = load i8, i8* %arrayidx11, align 1, !dbg !19628
  %conv12 = zext i8 %19 to i32, !dbg !19628
  store i32 %conv12, i32* %ix, align 4, !dbg !19628
  call void @llvm.dbg.declare(metadata i8* %found, metadata !19629, metadata !DIExpression()), !dbg !19628
  store i8 0, i8* %found, align 1, !dbg !19628
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %ptr, metadata !19630, metadata !DIExpression()), !dbg !19628
  store %struct.vport_addr* null, %struct.vport_addr** %ptr, align 8, !dbg !19628
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr13, metadata !19631, metadata !DIExpression()), !dbg !19634
  %20 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19634
  %21 = load i32, i32* %ix, align 4, !dbg !19634
  %idxprom14 = sext i32 %21 to i64, !dbg !19634
  %arrayidx15 = getelementptr %struct.hlist_head, %struct.hlist_head* %20, i64 %idxprom14, !dbg !19634
  %first16 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx15, i32 0, i32 0, !dbg !19634
  %22 = load %struct.hlist_node*, %struct.hlist_node** %first16, align 8, !dbg !19634
  store %struct.hlist_node* %22, %struct.hlist_node** %____ptr13, align 8, !dbg !19634
  %23 = load %struct.hlist_node*, %struct.hlist_node** %____ptr13, align 8, !dbg !19634
  %tobool18 = icmp ne %struct.hlist_node* %23, null, !dbg !19634
  br i1 %tobool18, label %cond.true19, label %cond.false25, !dbg !19634

cond.true19:                                      ; preds = %for.body8
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !19635, metadata !DIExpression()), !dbg !19637
  %24 = load %struct.hlist_node*, %struct.hlist_node** %____ptr13, align 8, !dbg !19637
  %25 = bitcast %struct.hlist_node* %24 to i8*, !dbg !19637
  store i8* %25, i8** %__mptr20, align 8, !dbg !19637
  br label %do.body21, !dbg !19637

do.body21:                                        ; preds = %cond.true19
  br label %do.end22, !dbg !19638

do.end22:                                         ; preds = %do.body21
  %26 = load i8*, i8** %__mptr20, align 8, !dbg !19637
  %add.ptr24 = getelementptr i8, i8* %26, i64 0, !dbg !19637
  %27 = bitcast i8* %add.ptr24 to %struct.vport_addr*, !dbg !19637
  store %struct.vport_addr* %27, %struct.vport_addr** %tmp23, align 8, !dbg !19638
  %28 = load %struct.vport_addr*, %struct.vport_addr** %tmp23, align 8, !dbg !19637
  br label %cond.end26, !dbg !19634

cond.false25:                                     ; preds = %for.body8
  br label %cond.end26, !dbg !19634

cond.end26:                                       ; preds = %cond.false25, %do.end22
  %cond27 = phi %struct.vport_addr* [ %28, %do.end22 ], [ null, %cond.false25 ], !dbg !19634
  store %struct.vport_addr* %cond27, %struct.vport_addr** %tmp17, align 8, !dbg !19634
  %29 = load %struct.vport_addr*, %struct.vport_addr** %tmp17, align 8, !dbg !19634
  store %struct.vport_addr* %29, %struct.vport_addr** %ptr, align 8, !dbg !19640
  br label %for.cond28, !dbg !19640

for.cond28:                                       ; preds = %cond.end47, %cond.end26
  %30 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19641
  %tobool29 = icmp ne %struct.vport_addr* %30, null, !dbg !19640
  br i1 %tobool29, label %for.body30, label %for.end, !dbg !19640

for.body30:                                       ; preds = %for.cond28
  %31 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19643
  %node31 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %31, i32 0, i32 0, !dbg !19643
  %addr32 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node31, i32 0, i32 1, !dbg !19643
  %arraydecay33 = getelementptr inbounds [6 x i8], [6 x i8]* %addr32, i64 0, i64 0, !dbg !19643
  %32 = load i8*, i8** %mac, align 8, !dbg !19643
  %call = call zeroext i1 @ether_addr_equal(i8* %arraydecay33, i8* %32) #8, !dbg !19643
  br i1 %call, label %if.then, label %if.end, !dbg !19641

if.then:                                          ; preds = %for.body30
  store i8 1, i8* %found, align 1, !dbg !19645
  br label %for.end, !dbg !19645

if.end:                                           ; preds = %for.body30
  br label %for.inc, !dbg !19643

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr34, metadata !19647, metadata !DIExpression()), !dbg !19649
  %33 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19649
  %node35 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %33, i32 0, i32 0, !dbg !19649
  %hlist36 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node35, i32 0, i32 0, !dbg !19649
  %next37 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist36, i32 0, i32 0, !dbg !19649
  %34 = load %struct.hlist_node*, %struct.hlist_node** %next37, align 8, !dbg !19649
  store %struct.hlist_node* %34, %struct.hlist_node** %____ptr34, align 8, !dbg !19649
  %35 = load %struct.hlist_node*, %struct.hlist_node** %____ptr34, align 8, !dbg !19649
  %tobool39 = icmp ne %struct.hlist_node* %35, null, !dbg !19649
  br i1 %tobool39, label %cond.true40, label %cond.false46, !dbg !19649

cond.true40:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !19650, metadata !DIExpression()), !dbg !19652
  %36 = load %struct.hlist_node*, %struct.hlist_node** %____ptr34, align 8, !dbg !19652
  %37 = bitcast %struct.hlist_node* %36 to i8*, !dbg !19652
  store i8* %37, i8** %__mptr41, align 8, !dbg !19652
  br label %do.body42, !dbg !19652

do.body42:                                        ; preds = %cond.true40
  br label %do.end43, !dbg !19653

do.end43:                                         ; preds = %do.body42
  %38 = load i8*, i8** %__mptr41, align 8, !dbg !19652
  %add.ptr45 = getelementptr i8, i8* %38, i64 0, !dbg !19652
  %39 = bitcast i8* %add.ptr45 to %struct.vport_addr*, !dbg !19652
  store %struct.vport_addr* %39, %struct.vport_addr** %tmp44, align 8, !dbg !19653
  %40 = load %struct.vport_addr*, %struct.vport_addr** %tmp44, align 8, !dbg !19652
  br label %cond.end47, !dbg !19649

cond.false46:                                     ; preds = %for.inc
  br label %cond.end47, !dbg !19649

cond.end47:                                       ; preds = %cond.false46, %do.end43
  %cond48 = phi %struct.vport_addr* [ %40, %do.end43 ], [ null, %cond.false46 ], !dbg !19649
  store %struct.vport_addr* %cond48, %struct.vport_addr** %tmp38, align 8, !dbg !19649
  %41 = load %struct.vport_addr*, %struct.vport_addr** %tmp38, align 8, !dbg !19649
  store %struct.vport_addr* %41, %struct.vport_addr** %ptr, align 8, !dbg !19641
  br label %for.cond28, !dbg !19641, !llvm.loop !19655

for.end:                                          ; preds = %if.then, %for.cond28
  %42 = load i8, i8* %found, align 1, !dbg !19656
  %tobool49 = trunc i8 %42 to i1, !dbg !19656
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !19628

if.then50:                                        ; preds = %for.end
  store %struct.vport_addr* null, %struct.vport_addr** %ptr, align 8, !dbg !19656
  br label %if.end51, !dbg !19656

if.end51:                                         ; preds = %if.then50, %for.end
  %43 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !19628
  store %struct.vport_addr* %43, %struct.vport_addr** %tmp52, align 8, !dbg !19656
  %44 = load %struct.vport_addr*, %struct.vport_addr** %tmp52, align 8, !dbg !19628
  store %struct.vport_addr* %44, %struct.vport_addr** %addr, align 8, !dbg !19658
  %45 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19659
  %tobool53 = icmp ne %struct.vport_addr* %45, null, !dbg !19659
  br i1 %tobool53, label %if.then54, label %if.end61, !dbg !19661

if.then54:                                        ; preds = %if.end51
  %46 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19662
  %action = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %46, i32 0, i32 1, !dbg !19665
  %47 = load i8, i8* %action, align 8, !dbg !19665
  %conv55 = zext i8 %47 to i32, !dbg !19662
  %cmp56 = icmp eq i32 %conv55, 2, !dbg !19666
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !19667

if.then58:                                        ; preds = %if.then54
  %48 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19668
  %action59 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %48, i32 0, i32 1, !dbg !19669
  store i8 0, i8* %action59, align 8, !dbg !19670
  br label %if.end60, !dbg !19668

if.end60:                                         ; preds = %if.then58, %if.then54
  br label %for.inc86, !dbg !19671

if.end61:                                         ; preds = %if.end51
  call void @llvm.dbg.declare(metadata i32* %ix62, metadata !19672, metadata !DIExpression()), !dbg !19674
  %49 = load i8*, i8** %mac, align 8, !dbg !19674
  %arrayidx63 = getelementptr i8, i8* %49, i64 5, !dbg !19674
  %50 = load i8, i8* %arrayidx63, align 1, !dbg !19674
  %conv64 = zext i8 %50 to i32, !dbg !19674
  store i32 %conv64, i32* %ix62, align 4, !dbg !19674
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %ptr65, metadata !19675, metadata !DIExpression()), !dbg !19674
  store %struct.vport_addr* null, %struct.vport_addr** %ptr65, align 8, !dbg !19674
  %call66 = call i8* @kzalloc(i64 48, i32 3264) #8, !dbg !19674
  %51 = bitcast i8* %call66 to %struct.vport_addr*, !dbg !19674
  store %struct.vport_addr* %51, %struct.vport_addr** %ptr65, align 8, !dbg !19674
  %52 = load %struct.vport_addr*, %struct.vport_addr** %ptr65, align 8, !dbg !19676
  %tobool67 = icmp ne %struct.vport_addr* %52, null, !dbg !19676
  br i1 %tobool67, label %if.then68, label %if.end76, !dbg !19674

if.then68:                                        ; preds = %if.end61
  %53 = load %struct.vport_addr*, %struct.vport_addr** %ptr65, align 8, !dbg !19678
  %node69 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %53, i32 0, i32 0, !dbg !19678
  %addr70 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node69, i32 0, i32 1, !dbg !19678
  %arraydecay71 = getelementptr inbounds [6 x i8], [6 x i8]* %addr70, i64 0, i64 0, !dbg !19678
  %54 = load i8*, i8** %mac, align 8, !dbg !19678
  call void @ether_addr_copy(i8* %arraydecay71, i8* %54) #8, !dbg !19678
  %55 = load %struct.vport_addr*, %struct.vport_addr** %ptr65, align 8, !dbg !19678
  %node72 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %55, i32 0, i32 0, !dbg !19678
  %hlist73 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node72, i32 0, i32 0, !dbg !19678
  %56 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19678
  %57 = load i32, i32* %ix62, align 4, !dbg !19678
  %idxprom74 = sext i32 %57 to i64, !dbg !19678
  %arrayidx75 = getelementptr %struct.hlist_head, %struct.hlist_head* %56, i64 %idxprom74, !dbg !19678
  call void @hlist_add_head(%struct.hlist_node* %hlist73, %struct.hlist_head* %arrayidx75) #8, !dbg !19678
  br label %if.end76, !dbg !19678

if.end76:                                         ; preds = %if.then68, %if.end61
  %58 = load %struct.vport_addr*, %struct.vport_addr** %ptr65, align 8, !dbg !19674
  store %struct.vport_addr* %58, %struct.vport_addr** %tmp77, align 8, !dbg !19676
  %59 = load %struct.vport_addr*, %struct.vport_addr** %tmp77, align 8, !dbg !19674
  store %struct.vport_addr* %59, %struct.vport_addr** %addr, align 8, !dbg !19680
  %60 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19681
  %tobool78 = icmp ne %struct.vport_addr* %60, null, !dbg !19681
  br i1 %tobool78, label %if.end81, label %if.then79, !dbg !19683

if.then79:                                        ; preds = %if.end76
  %61 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19684
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %61, i32 0, i32 0, !dbg !19684
  %62 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19684
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %62, i32 0, i32 0, !dbg !19684
  %63 = load %struct.device*, %struct.device** %device, align 8, !dbg !19684
  %64 = load i8*, i8** %mac, align 8, !dbg !19684
  %65 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19684
  %vport80 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %65, i32 0, i32 1, !dbg !19684
  %66 = load i32, i32* %vport80, align 8, !dbg !19684
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %63, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.48, i64 0, i64 0), i8* %64, i32 %66) #11, !dbg !19684
  br label %for.inc86, !dbg !19686

if.end81:                                         ; preds = %if.end76
  %67 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19687
  %vport82 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %67, i32 0, i32 1, !dbg !19688
  %68 = load i32, i32* %vport82, align 8, !dbg !19688
  %conv83 = trunc i32 %68 to i16, !dbg !19687
  %69 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19689
  %vport84 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %69, i32 0, i32 2, !dbg !19690
  store i16 %conv83, i16* %vport84, align 2, !dbg !19691
  %70 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19692
  %action85 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %70, i32 0, i32 1, !dbg !19693
  store i8 1, i8* %action85, align 8, !dbg !19694
  %71 = load %struct.vport_addr*, %struct.vport_addr** %addr, align 8, !dbg !19695
  %mc_promisc = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %71, i32 0, i32 5, !dbg !19696
  store i8 1, i8* %mc_promisc, align 1, !dbg !19697
  br label %for.inc86, !dbg !19698

for.inc86:                                        ; preds = %if.end81, %if.then79, %if.end60
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr87, metadata !19699, metadata !DIExpression()), !dbg !19701
  %72 = load %struct.hlist_node*, %struct.hlist_node** %tmp, align 8, !dbg !19701
  store %struct.hlist_node* %72, %struct.hlist_node** %____ptr87, align 8, !dbg !19701
  %73 = load %struct.hlist_node*, %struct.hlist_node** %____ptr87, align 8, !dbg !19701
  %tobool89 = icmp ne %struct.hlist_node* %73, null, !dbg !19701
  br i1 %tobool89, label %cond.true90, label %cond.false96, !dbg !19701

cond.true90:                                      ; preds = %for.inc86
  call void @llvm.dbg.declare(metadata i8** %__mptr91, metadata !19702, metadata !DIExpression()), !dbg !19704
  %74 = load %struct.hlist_node*, %struct.hlist_node** %____ptr87, align 8, !dbg !19704
  %75 = bitcast %struct.hlist_node* %74 to i8*, !dbg !19704
  store i8* %75, i8** %__mptr91, align 8, !dbg !19704
  br label %do.body92, !dbg !19704

do.body92:                                        ; preds = %cond.true90
  br label %do.end93, !dbg !19705

do.end93:                                         ; preds = %do.body92
  %76 = load i8*, i8** %__mptr91, align 8, !dbg !19704
  %add.ptr95 = getelementptr i8, i8* %76, i64 0, !dbg !19704
  %77 = bitcast i8* %add.ptr95 to %struct.l2addr_node*, !dbg !19704
  store %struct.l2addr_node* %77, %struct.l2addr_node** %tmp94, align 8, !dbg !19705
  %78 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp94, align 8, !dbg !19704
  br label %cond.end97, !dbg !19701

cond.false96:                                     ; preds = %for.inc86
  br label %cond.end97, !dbg !19701

cond.end97:                                       ; preds = %cond.false96, %do.end93
  %cond98 = phi %struct.l2addr_node* [ %78, %do.end93 ], [ null, %cond.false96 ], !dbg !19701
  store %struct.l2addr_node* %cond98, %struct.l2addr_node** %tmp88, align 8, !dbg !19701
  %79 = load %struct.l2addr_node*, %struct.l2addr_node** %tmp88, align 8, !dbg !19701
  store %struct.l2addr_node* %79, %struct.l2addr_node** %node, align 8, !dbg !19616
  br label %for.cond4, !dbg !19616, !llvm.loop !19707

for.end99:                                        ; preds = %land.end
  br label %for.inc100, !dbg !19708

for.inc100:                                       ; preds = %for.end99
  %80 = load i32, i32* %hi, align 4, !dbg !19604
  %inc = add i32 %80, 1, !dbg !19604
  store i32 %inc, i32* %hi, align 4, !dbg !19604
  br label %for.cond, !dbg !19604, !llvm.loop !19709

for.end101:                                       ; preds = %for.cond
  ret void, !dbg !19711
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_query_nic_vport_mac_list(%struct.mlx5_core_dev*, i16 zeroext, i32, [6 x i8]*, i32*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ether_addr_equal(i8* %addr1, i8* %addr2) #0 !dbg !19712 {
entry:
  %addr1.addr = alloca i8*, align 8
  %addr2.addr = alloca i8*, align 8
  %fold = alloca i32, align 4
  store i8* %addr1, i8** %addr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr1.addr, metadata !19715, metadata !DIExpression()), !dbg !19716
  store i8* %addr2, i8** %addr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr2.addr, metadata !19717, metadata !DIExpression()), !dbg !19718
  call void @llvm.dbg.declare(metadata i32* %fold, metadata !19719, metadata !DIExpression()), !dbg !19720
  %0 = load i8*, i8** %addr1.addr, align 8, !dbg !19721
  %1 = bitcast i8* %0 to i32*, !dbg !19722
  %2 = load i32, i32* %1, align 4, !dbg !19722
  %3 = load i8*, i8** %addr2.addr, align 8, !dbg !19723
  %4 = bitcast i8* %3 to i32*, !dbg !19724
  %5 = load i32, i32* %4, align 4, !dbg !19724
  %xor = xor i32 %2, %5, !dbg !19725
  %6 = load i8*, i8** %addr1.addr, align 8, !dbg !19726
  %add.ptr = getelementptr i8, i8* %6, i64 4, !dbg !19727
  %7 = bitcast i8* %add.ptr to i16*, !dbg !19728
  %8 = load i16, i16* %7, align 2, !dbg !19728
  %conv = zext i16 %8 to i32, !dbg !19729
  %9 = load i8*, i8** %addr2.addr, align 8, !dbg !19730
  %add.ptr1 = getelementptr i8, i8* %9, i64 4, !dbg !19731
  %10 = bitcast i8* %add.ptr1 to i16*, !dbg !19732
  %11 = load i16, i16* %10, align 2, !dbg !19732
  %conv2 = zext i16 %11 to i32, !dbg !19733
  %xor3 = xor i32 %conv, %conv2, !dbg !19734
  %or = or i32 %xor, %xor3, !dbg !19735
  store i32 %or, i32* %fold, align 4, !dbg !19720
  %12 = load i32, i32* %fold, align 4, !dbg !19736
  %cmp = icmp eq i32 %12, 0, !dbg !19737
  ret i1 %cmp, !dbg !19738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_add_head(%struct.hlist_node* %n, %struct.hlist_head* %h) #0 !dbg !19739 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %h.addr = alloca %struct.hlist_head*, align 8
  %first = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !19742, metadata !DIExpression()), !dbg !19743
  store %struct.hlist_head* %h, %struct.hlist_head** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %h.addr, metadata !19744, metadata !DIExpression()), !dbg !19745
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %first, metadata !19746, metadata !DIExpression()), !dbg !19747
  %0 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !19748
  %first1 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %0, i32 0, i32 0, !dbg !19749
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first1, align 8, !dbg !19749
  store %struct.hlist_node* %1, %struct.hlist_node** %first, align 8, !dbg !19747
  br label %do.body, !dbg !19750

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !19751

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !19753

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !19751

do.body3:                                         ; preds = %do.end
  %2 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19755
  %3 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19755
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %3, i32 0, i32 0, !dbg !19755
  store volatile %struct.hlist_node* %2, %struct.hlist_node** %next, align 8, !dbg !19755
  br label %do.end4, !dbg !19755

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !19751

do.end5:                                          ; preds = %do.end4
  %4 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19757
  %tobool = icmp ne %struct.hlist_node* %4, null, !dbg !19757
  br i1 %tobool, label %if.then, label %if.end, !dbg !19759

if.then:                                          ; preds = %do.end5
  br label %do.body6, !dbg !19760

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !19761

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !19763

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !19761

do.body9:                                         ; preds = %do.end8
  %5 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19765
  %next10 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %5, i32 0, i32 0, !dbg !19765
  %6 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19765
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %6, i32 0, i32 1, !dbg !19765
  store volatile %struct.hlist_node** %next10, %struct.hlist_node*** %pprev, align 8, !dbg !19765
  br label %do.end11, !dbg !19765

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !19761

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !19761

if.end:                                           ; preds = %do.end12, %do.end5
  br label %do.body13, !dbg !19767

do.body13:                                        ; preds = %if.end
  br label %do.body14, !dbg !19768

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !19770

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !19768

do.body16:                                        ; preds = %do.end15
  %7 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19772
  %8 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !19772
  %first17 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %8, i32 0, i32 0, !dbg !19772
  store volatile %struct.hlist_node* %7, %struct.hlist_node** %first17, align 8, !dbg !19772
  br label %do.end18, !dbg !19772

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !19768

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !19774

do.body20:                                        ; preds = %do.end19
  br label %do.body21, !dbg !19775

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !19777

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !19775

do.body23:                                        ; preds = %do.end22
  %9 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !19779
  %first24 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %9, i32 0, i32 0, !dbg !19779
  %10 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19779
  %pprev25 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %10, i32 0, i32 1, !dbg !19779
  store volatile %struct.hlist_node** %first24, %struct.hlist_node*** %pprev25, align 8, !dbg !19779
  br label %do.end26, !dbg !19779

do.end26:                                         ; preds = %do.body23
  br label %do.end27, !dbg !19775

do.end27:                                         ; preds = %do.end26
  ret void, !dbg !19781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_add_uc_addr(%struct.mlx5_eswitch* %esw, %struct.vport_addr* %vaddr) #0 !dbg !19782 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vaddr.addr = alloca %struct.vport_addr*, align 8
  %mac = alloca i8*, align 8
  %vport = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19783, metadata !DIExpression()), !dbg !19784
  store %struct.vport_addr* %vaddr, %struct.vport_addr** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %vaddr.addr, metadata !19785, metadata !DIExpression()), !dbg !19786
  call void @llvm.dbg.declare(metadata i8** %mac, metadata !19787, metadata !DIExpression()), !dbg !19788
  %0 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19789
  %node = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %0, i32 0, i32 0, !dbg !19790
  %addr = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node, i32 0, i32 1, !dbg !19791
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !19789
  store i8* %arraydecay, i8** %mac, align 8, !dbg !19788
  call void @llvm.dbg.declare(metadata i16* %vport, metadata !19792, metadata !DIExpression()), !dbg !19793
  %1 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19794
  %vport1 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %1, i32 0, i32 2, !dbg !19795
  %2 = load i16, i16* %vport1, align 2, !dbg !19795
  store i16 %2, i16* %vport, align 2, !dbg !19793
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19796, metadata !DIExpression()), !dbg !19797
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19798
  %4 = load i16, i16* %vport, align 2, !dbg !19800
  %call = call zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %3, i16 zeroext %4) #8, !dbg !19801
  br i1 %call, label %if.then, label %if.end, !dbg !19802

if.then:                                          ; preds = %entry
  br label %fdb_add, !dbg !19803

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19804
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !19805
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19805
  %7 = load i8*, i8** %mac, align 8, !dbg !19806
  %call2 = call i32 @mlx5_mpfs_add_mac(%struct.mlx5_core_dev* %6, i8* %7) #8, !dbg !19807
  store i32 %call2, i32* %err, align 4, !dbg !19808
  %8 = load i32, i32* %err, align 4, !dbg !19809
  %tobool = icmp ne i32 %8, 0, !dbg !19809
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !19811

if.then3:                                         ; preds = %if.end
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19812
  %dev4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 0, !dbg !19812
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev4, align 8, !dbg !19812
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 0, !dbg !19812
  %11 = load %struct.device*, %struct.device** %device, align 8, !dbg !19812
  %12 = load i8*, i8** %mac, align 8, !dbg !19812
  %13 = load i16, i16* %vport, align 2, !dbg !19812
  %conv = zext i16 %13 to i32, !dbg !19812
  %14 = load i32, i32* %err, align 4, !dbg !19812
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.43, i64 0, i64 0), i8* %12, i32 %conv, i32 %14) #11, !dbg !19812
  %15 = load i32, i32* %err, align 4, !dbg !19814
  store i32 %15, i32* %retval, align 4, !dbg !19815
  br label %return, !dbg !19815

if.end5:                                          ; preds = %if.end
  %16 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19816
  %mpfs = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %16, i32 0, i32 4, !dbg !19817
  store i8 1, i8* %mpfs, align 8, !dbg !19818
  br label %fdb_add, !dbg !19816

fdb_add:                                          ; preds = %if.end5, %if.then
  call void @llvm.dbg.label(metadata !19819), !dbg !19820
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19821
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 2, !dbg !19823
  %18 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !19824
  %legacy = bitcast %union.anon.154* %18 to %struct.legacy_fdb*, !dbg !19824
  %fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 0, !dbg !19825
  %19 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !19825
  %tobool6 = icmp ne %struct.mlx5_flow_table* %19, null, !dbg !19821
  br i1 %tobool6, label %land.lhs.true, label %if.end10, !dbg !19826

land.lhs.true:                                    ; preds = %fdb_add
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19827
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 14, !dbg !19828
  %21 = load i32, i32* %mode, align 8, !dbg !19828
  %cmp = icmp eq i32 %21, 1, !dbg !19829
  br i1 %cmp, label %if.then8, label %if.end10, !dbg !19830

if.then8:                                         ; preds = %land.lhs.true
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19831
  %23 = load i8*, i8** %mac, align 8, !dbg !19832
  %24 = load i16, i16* %vport, align 2, !dbg !19833
  %call9 = call %struct.mlx5_flow_handle* @esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %22, i8* %23, i16 zeroext %24) #8, !dbg !19834
  %25 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19835
  %flow_rule = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %25, i32 0, i32 3, !dbg !19836
  store %struct.mlx5_flow_handle* %call9, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !19837
  br label %if.end10, !dbg !19835

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %fdb_add
  br label %do.body, !dbg !19838

do.body:                                          ; preds = %if.end10
  %26 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !19839
  %conv11 = zext i32 %26 to i64, !dbg !19839
  %and = and i64 8, %conv11, !dbg !19839
  %tobool12 = icmp ne i64 %and, 0, !dbg !19839
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !19842

if.then13:                                        ; preds = %do.body
  br label %if.end14, !dbg !19839

if.end14:                                         ; preds = %if.then13, %do.body
  br label %do.end, !dbg !19842

do.end:                                           ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !19843
  br label %return, !dbg !19843

return:                                           ; preds = %do.end, %if.then3
  %27 = load i32, i32* %retval, align 4, !dbg !19844
  ret i32 %27, !dbg !19844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_add_mc_addr(%struct.mlx5_eswitch* %esw, %struct.vport_addr* %vaddr) #0 !dbg !19845 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vaddr.addr = alloca %struct.vport_addr*, align 8
  %hash = alloca %struct.hlist_head*, align 8
  %esw_mc = alloca %struct.esw_mc_addr*, align 8
  %mac = alloca i8*, align 8
  %vport = alloca i16, align 2
  %ix = alloca i32, align 4
  %found = alloca i8, align 1
  %ptr = alloca %struct.esw_mc_addr*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.esw_mc_addr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.esw_mc_addr*, align 8
  %____ptr12 = alloca %struct.hlist_node*, align 8
  %tmp14 = alloca %struct.esw_mc_addr*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp20 = alloca %struct.esw_mc_addr*, align 8
  %tmp28 = alloca %struct.esw_mc_addr*, align 8
  %ix32 = alloca i32, align 4
  %ptr35 = alloca %struct.esw_mc_addr*, align 8
  %tmp47 = alloca %struct.esw_mc_addr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19846, metadata !DIExpression()), !dbg !19847
  store %struct.vport_addr* %vaddr, %struct.vport_addr** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %vaddr.addr, metadata !19848, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %hash, metadata !19850, metadata !DIExpression()), !dbg !19851
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19852
  %mc_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 3, !dbg !19853
  %arraydecay = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_table, i64 0, i64 0, !dbg !19852
  store %struct.hlist_head* %arraydecay, %struct.hlist_head** %hash, align 8, !dbg !19851
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %esw_mc, metadata !19854, metadata !DIExpression()), !dbg !19855
  call void @llvm.dbg.declare(metadata i8** %mac, metadata !19856, metadata !DIExpression()), !dbg !19857
  %1 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19858
  %node = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %1, i32 0, i32 0, !dbg !19859
  %addr = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node, i32 0, i32 1, !dbg !19860
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !19858
  store i8* %arraydecay1, i8** %mac, align 8, !dbg !19857
  call void @llvm.dbg.declare(metadata i16* %vport, metadata !19861, metadata !DIExpression()), !dbg !19862
  %2 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19863
  %vport2 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %2, i32 0, i32 2, !dbg !19864
  %3 = load i16, i16* %vport2, align 2, !dbg !19864
  store i16 %3, i16* %vport, align 2, !dbg !19862
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19865
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 2, !dbg !19867
  %5 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !19868
  %legacy = bitcast %union.anon.154* %5 to %struct.legacy_fdb*, !dbg !19868
  %fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 0, !dbg !19869
  %6 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !19869
  %tobool = icmp ne %struct.mlx5_flow_table* %6, null, !dbg !19865
  br i1 %tobool, label %if.end, label %if.then, !dbg !19870

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19871
  br label %return, !dbg !19871

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !19872, metadata !DIExpression()), !dbg !19874
  %7 = load i8*, i8** %mac, align 8, !dbg !19874
  %arrayidx = getelementptr i8, i8* %7, i64 5, !dbg !19874
  %8 = load i8, i8* %arrayidx, align 1, !dbg !19874
  %conv = zext i8 %8 to i32, !dbg !19874
  store i32 %conv, i32* %ix, align 4, !dbg !19874
  call void @llvm.dbg.declare(metadata i8* %found, metadata !19875, metadata !DIExpression()), !dbg !19874
  store i8 0, i8* %found, align 1, !dbg !19874
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %ptr, metadata !19876, metadata !DIExpression()), !dbg !19874
  store %struct.esw_mc_addr* null, %struct.esw_mc_addr** %ptr, align 8, !dbg !19874
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !19877, metadata !DIExpression()), !dbg !19880
  %9 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19880
  %10 = load i32, i32* %ix, align 4, !dbg !19880
  %idxprom = sext i32 %10 to i64, !dbg !19880
  %arrayidx3 = getelementptr %struct.hlist_head, %struct.hlist_head* %9, i64 %idxprom, !dbg !19880
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx3, i32 0, i32 0, !dbg !19880
  %11 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19880
  store %struct.hlist_node* %11, %struct.hlist_node** %____ptr, align 8, !dbg !19880
  %12 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19880
  %tobool4 = icmp ne %struct.hlist_node* %12, null, !dbg !19880
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !19880

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19881, metadata !DIExpression()), !dbg !19883
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19883
  %14 = bitcast %struct.hlist_node* %13 to i8*, !dbg !19883
  store i8* %14, i8** %__mptr, align 8, !dbg !19883
  br label %do.body, !dbg !19883

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !19884

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !19883
  %add.ptr = getelementptr i8, i8* %15, i64 0, !dbg !19883
  %16 = bitcast i8* %add.ptr to %struct.esw_mc_addr*, !dbg !19883
  store %struct.esw_mc_addr* %16, %struct.esw_mc_addr** %tmp5, align 8, !dbg !19884
  %17 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp5, align 8, !dbg !19883
  br label %cond.end, !dbg !19880

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19880

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.esw_mc_addr* [ %17, %do.end ], [ null, %cond.false ], !dbg !19880
  store %struct.esw_mc_addr* %cond, %struct.esw_mc_addr** %tmp, align 8, !dbg !19880
  %18 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp, align 8, !dbg !19880
  store %struct.esw_mc_addr* %18, %struct.esw_mc_addr** %ptr, align 8, !dbg !19886
  br label %for.cond, !dbg !19886

for.cond:                                         ; preds = %cond.end23, %cond.end
  %19 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !19887
  %tobool6 = icmp ne %struct.esw_mc_addr* %19, null, !dbg !19886
  br i1 %tobool6, label %for.body, label %for.end, !dbg !19886

for.body:                                         ; preds = %for.cond
  %20 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !19889
  %node7 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %20, i32 0, i32 0, !dbg !19889
  %addr8 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node7, i32 0, i32 1, !dbg !19889
  %arraydecay9 = getelementptr inbounds [6 x i8], [6 x i8]* %addr8, i64 0, i64 0, !dbg !19889
  %21 = load i8*, i8** %mac, align 8, !dbg !19889
  %call = call zeroext i1 @ether_addr_equal(i8* %arraydecay9, i8* %21) #8, !dbg !19889
  br i1 %call, label %if.then10, label %if.end11, !dbg !19887

if.then10:                                        ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !19891
  br label %for.end, !dbg !19891

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !19889

for.inc:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr12, metadata !19893, metadata !DIExpression()), !dbg !19895
  %22 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !19895
  %node13 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %22, i32 0, i32 0, !dbg !19895
  %hlist = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node13, i32 0, i32 0, !dbg !19895
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist, i32 0, i32 0, !dbg !19895
  %23 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19895
  store %struct.hlist_node* %23, %struct.hlist_node** %____ptr12, align 8, !dbg !19895
  %24 = load %struct.hlist_node*, %struct.hlist_node** %____ptr12, align 8, !dbg !19895
  %tobool15 = icmp ne %struct.hlist_node* %24, null, !dbg !19895
  br i1 %tobool15, label %cond.true16, label %cond.false22, !dbg !19895

cond.true16:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !19896, metadata !DIExpression()), !dbg !19898
  %25 = load %struct.hlist_node*, %struct.hlist_node** %____ptr12, align 8, !dbg !19898
  %26 = bitcast %struct.hlist_node* %25 to i8*, !dbg !19898
  store i8* %26, i8** %__mptr17, align 8, !dbg !19898
  br label %do.body18, !dbg !19898

do.body18:                                        ; preds = %cond.true16
  br label %do.end19, !dbg !19899

do.end19:                                         ; preds = %do.body18
  %27 = load i8*, i8** %__mptr17, align 8, !dbg !19898
  %add.ptr21 = getelementptr i8, i8* %27, i64 0, !dbg !19898
  %28 = bitcast i8* %add.ptr21 to %struct.esw_mc_addr*, !dbg !19898
  store %struct.esw_mc_addr* %28, %struct.esw_mc_addr** %tmp20, align 8, !dbg !19899
  %29 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp20, align 8, !dbg !19898
  br label %cond.end23, !dbg !19895

cond.false22:                                     ; preds = %for.inc
  br label %cond.end23, !dbg !19895

cond.end23:                                       ; preds = %cond.false22, %do.end19
  %cond24 = phi %struct.esw_mc_addr* [ %29, %do.end19 ], [ null, %cond.false22 ], !dbg !19895
  store %struct.esw_mc_addr* %cond24, %struct.esw_mc_addr** %tmp14, align 8, !dbg !19895
  %30 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp14, align 8, !dbg !19895
  store %struct.esw_mc_addr* %30, %struct.esw_mc_addr** %ptr, align 8, !dbg !19887
  br label %for.cond, !dbg !19887, !llvm.loop !19901

for.end:                                          ; preds = %if.then10, %for.cond
  %31 = load i8, i8* %found, align 1, !dbg !19902
  %tobool25 = trunc i8 %31 to i1, !dbg !19902
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !19874

if.then26:                                        ; preds = %for.end
  store %struct.esw_mc_addr* null, %struct.esw_mc_addr** %ptr, align 8, !dbg !19902
  br label %if.end27, !dbg !19902

if.end27:                                         ; preds = %if.then26, %for.end
  %32 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !19874
  store %struct.esw_mc_addr* %32, %struct.esw_mc_addr** %tmp28, align 8, !dbg !19902
  %33 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp28, align 8, !dbg !19874
  store %struct.esw_mc_addr* %33, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19904
  %34 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19905
  %tobool29 = icmp ne %struct.esw_mc_addr* %34, null, !dbg !19905
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !19907

if.then30:                                        ; preds = %if.end27
  br label %add, !dbg !19908

if.end31:                                         ; preds = %if.end27
  call void @llvm.dbg.declare(metadata i32* %ix32, metadata !19909, metadata !DIExpression()), !dbg !19911
  %35 = load i8*, i8** %mac, align 8, !dbg !19911
  %arrayidx33 = getelementptr i8, i8* %35, i64 5, !dbg !19911
  %36 = load i8, i8* %arrayidx33, align 1, !dbg !19911
  %conv34 = zext i8 %36 to i32, !dbg !19911
  store i32 %conv34, i32* %ix32, align 4, !dbg !19911
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %ptr35, metadata !19912, metadata !DIExpression()), !dbg !19911
  store %struct.esw_mc_addr* null, %struct.esw_mc_addr** %ptr35, align 8, !dbg !19911
  %call36 = call i8* @kzalloc(i64 40, i32 3264) #8, !dbg !19911
  %37 = bitcast i8* %call36 to %struct.esw_mc_addr*, !dbg !19911
  store %struct.esw_mc_addr* %37, %struct.esw_mc_addr** %ptr35, align 8, !dbg !19911
  %38 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr35, align 8, !dbg !19913
  %tobool37 = icmp ne %struct.esw_mc_addr* %38, null, !dbg !19913
  br i1 %tobool37, label %if.then38, label %if.end46, !dbg !19911

if.then38:                                        ; preds = %if.end31
  %39 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr35, align 8, !dbg !19915
  %node39 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %39, i32 0, i32 0, !dbg !19915
  %addr40 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node39, i32 0, i32 1, !dbg !19915
  %arraydecay41 = getelementptr inbounds [6 x i8], [6 x i8]* %addr40, i64 0, i64 0, !dbg !19915
  %40 = load i8*, i8** %mac, align 8, !dbg !19915
  call void @ether_addr_copy(i8* %arraydecay41, i8* %40) #8, !dbg !19915
  %41 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr35, align 8, !dbg !19915
  %node42 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %41, i32 0, i32 0, !dbg !19915
  %hlist43 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node42, i32 0, i32 0, !dbg !19915
  %42 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !19915
  %43 = load i32, i32* %ix32, align 4, !dbg !19915
  %idxprom44 = sext i32 %43 to i64, !dbg !19915
  %arrayidx45 = getelementptr %struct.hlist_head, %struct.hlist_head* %42, i64 %idxprom44, !dbg !19915
  call void @hlist_add_head(%struct.hlist_node* %hlist43, %struct.hlist_head* %arrayidx45) #8, !dbg !19915
  br label %if.end46, !dbg !19915

if.end46:                                         ; preds = %if.then38, %if.end31
  %44 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr35, align 8, !dbg !19911
  store %struct.esw_mc_addr* %44, %struct.esw_mc_addr** %tmp47, align 8, !dbg !19913
  %45 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp47, align 8, !dbg !19911
  store %struct.esw_mc_addr* %45, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19917
  %46 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19918
  %tobool48 = icmp ne %struct.esw_mc_addr* %46, null, !dbg !19918
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !19920

if.then49:                                        ; preds = %if.end46
  store i32 -12, i32* %retval, align 4, !dbg !19921
  br label %return, !dbg !19921

if.end50:                                         ; preds = %if.end46
  %47 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19922
  %48 = load i8*, i8** %mac, align 8, !dbg !19923
  %call51 = call %struct.mlx5_flow_handle* @esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %47, i8* %48, i16 zeroext -1) #8, !dbg !19924
  %49 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19925
  %uplink_rule = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %49, i32 0, i32 1, !dbg !19926
  store %struct.mlx5_flow_handle* %call51, %struct.mlx5_flow_handle** %uplink_rule, align 8, !dbg !19927
  %50 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19928
  %51 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19929
  %52 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19930
  call void @update_allmulti_vports(%struct.mlx5_eswitch* %50, %struct.vport_addr* %51, %struct.esw_mc_addr* %52) #8, !dbg !19931
  br label %add, !dbg !19931

add:                                              ; preds = %if.end50, %if.then30
  call void @llvm.dbg.label(metadata !19932), !dbg !19933
  %53 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19934
  %mc_promisc = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %53, i32 0, i32 5, !dbg !19936
  %54 = load i8, i8* %mc_promisc, align 1, !dbg !19936
  %tobool52 = trunc i8 %54 to i1, !dbg !19936
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !19937

if.then53:                                        ; preds = %add
  %55 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !19938
  %refcnt = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %55, i32 0, i32 2, !dbg !19939
  %56 = load i32, i32* %refcnt, align 8, !dbg !19940
  %inc = add i32 %56, 1, !dbg !19940
  store i32 %inc, i32* %refcnt, align 8, !dbg !19940
  br label %if.end54, !dbg !19938

if.end54:                                         ; preds = %if.then53, %add
  %57 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19941
  %58 = load i8*, i8** %mac, align 8, !dbg !19942
  %59 = load i16, i16* %vport, align 2, !dbg !19943
  %call55 = call %struct.mlx5_flow_handle* @esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %57, i8* %58, i16 zeroext %59) #8, !dbg !19944
  %60 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19945
  %flow_rule = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %60, i32 0, i32 3, !dbg !19946
  store %struct.mlx5_flow_handle* %call55, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !19947
  br label %do.body56, !dbg !19948

do.body56:                                        ; preds = %if.end54
  %61 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !19949
  %conv57 = zext i32 %61 to i64, !dbg !19949
  %and = and i64 8, %conv57, !dbg !19949
  %tobool58 = icmp ne i64 %and, 0, !dbg !19949
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !19952

if.then59:                                        ; preds = %do.body56
  br label %if.end60, !dbg !19949

if.end60:                                         ; preds = %if.then59, %do.body56
  br label %do.end61, !dbg !19952

do.end61:                                         ; preds = %if.end60
  store i32 0, i32* %retval, align 4, !dbg !19953
  br label %return, !dbg !19953

return:                                           ; preds = %do.end61, %if.then49, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !19954
  ret i32 %62, !dbg !19954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_del_uc_addr(%struct.mlx5_eswitch* %esw, %struct.vport_addr* %vaddr) #0 !dbg !19955 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vaddr.addr = alloca %struct.vport_addr*, align 8
  %mac = alloca i8*, align 8
  %vport = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19956, metadata !DIExpression()), !dbg !19957
  store %struct.vport_addr* %vaddr, %struct.vport_addr** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %vaddr.addr, metadata !19958, metadata !DIExpression()), !dbg !19959
  call void @llvm.dbg.declare(metadata i8** %mac, metadata !19960, metadata !DIExpression()), !dbg !19961
  %0 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19962
  %node = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %0, i32 0, i32 0, !dbg !19963
  %addr = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node, i32 0, i32 1, !dbg !19964
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !19962
  store i8* %arraydecay, i8** %mac, align 8, !dbg !19961
  call void @llvm.dbg.declare(metadata i16* %vport, metadata !19965, metadata !DIExpression()), !dbg !19966
  %1 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19967
  %vport1 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %1, i32 0, i32 2, !dbg !19968
  %2 = load i16, i16* %vport1, align 2, !dbg !19968
  store i16 %2, i16* %vport, align 2, !dbg !19966
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19969, metadata !DIExpression()), !dbg !19970
  store i32 0, i32* %err, align 4, !dbg !19970
  %3 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19971
  %mpfs = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %3, i32 0, i32 4, !dbg !19973
  %4 = load i8, i8* %mpfs, align 8, !dbg !19973
  %tobool = trunc i8 %4 to i1, !dbg !19973
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !19974

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19975
  %6 = load i16, i16* %vport, align 2, !dbg !19976
  %call = call zeroext i1 @mlx5_esw_is_manager_vport(%struct.mlx5_eswitch* %5, i16 zeroext %6) #8, !dbg !19977
  br i1 %call, label %if.then, label %if.end, !dbg !19978

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %fdb_del, !dbg !19979

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19980
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !19981
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19981
  %9 = load i8*, i8** %mac, align 8, !dbg !19982
  %call2 = call i32 @mlx5_mpfs_del_mac(%struct.mlx5_core_dev* %8, i8* %9) #8, !dbg !19983
  store i32 %call2, i32* %err, align 4, !dbg !19984
  %10 = load i32, i32* %err, align 4, !dbg !19985
  %tobool3 = icmp ne i32 %10, 0, !dbg !19985
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !19987

if.then4:                                         ; preds = %if.end
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19988
  %dev5 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 0, !dbg !19988
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev5, align 8, !dbg !19988
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 0, !dbg !19988
  %13 = load %struct.device*, %struct.device** %device, align 8, !dbg !19988
  %14 = load i8*, i8** %mac, align 8, !dbg !19988
  %15 = load i16, i16* %vport, align 2, !dbg !19988
  %conv = zext i16 %15 to i32, !dbg !19988
  %16 = load i32, i32* %err, align 4, !dbg !19988
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %13, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.46, i64 0, i64 0), i8* %14, i32 %conv, i32 %16) #11, !dbg !19988
  br label %if.end6, !dbg !19988

if.end6:                                          ; preds = %if.then4, %if.end
  %17 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19989
  %mpfs7 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %17, i32 0, i32 4, !dbg !19990
  store i8 0, i8* %mpfs7, align 8, !dbg !19991
  br label %fdb_del, !dbg !19989

fdb_del:                                          ; preds = %if.end6, %if.then
  call void @llvm.dbg.label(metadata !19992), !dbg !19993
  %18 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19994
  %flow_rule = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %18, i32 0, i32 3, !dbg !19996
  %19 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !19996
  %tobool8 = icmp ne %struct.mlx5_flow_handle* %19, null, !dbg !19994
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !19997

if.then9:                                         ; preds = %fdb_del
  %20 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !19998
  %flow_rule10 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %20, i32 0, i32 3, !dbg !19999
  %21 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule10, align 8, !dbg !19999
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %21) #8, !dbg !20000
  br label %if.end11, !dbg !20000

if.end11:                                         ; preds = %if.then9, %fdb_del
  %22 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20001
  %flow_rule12 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %22, i32 0, i32 3, !dbg !20002
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %flow_rule12, align 8, !dbg !20003
  ret i32 0, !dbg !20004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_del_mc_addr(%struct.mlx5_eswitch* %esw, %struct.vport_addr* %vaddr) #0 !dbg !20005 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vaddr.addr = alloca %struct.vport_addr*, align 8
  %hash = alloca %struct.hlist_head*, align 8
  %esw_mc = alloca %struct.esw_mc_addr*, align 8
  %mac = alloca i8*, align 8
  %vport = alloca i16, align 2
  %ix = alloca i32, align 4
  %found = alloca i8, align 1
  %ptr = alloca %struct.esw_mc_addr*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.esw_mc_addr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.esw_mc_addr*, align 8
  %____ptr12 = alloca %struct.hlist_node*, align 8
  %tmp14 = alloca %struct.esw_mc_addr*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp20 = alloca %struct.esw_mc_addr*, align 8
  %tmp28 = alloca %struct.esw_mc_addr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20006, metadata !DIExpression()), !dbg !20007
  store %struct.vport_addr* %vaddr, %struct.vport_addr** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %vaddr.addr, metadata !20008, metadata !DIExpression()), !dbg !20009
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %hash, metadata !20010, metadata !DIExpression()), !dbg !20011
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20012
  %mc_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 3, !dbg !20013
  %arraydecay = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_table, i64 0, i64 0, !dbg !20012
  store %struct.hlist_head* %arraydecay, %struct.hlist_head** %hash, align 8, !dbg !20011
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %esw_mc, metadata !20014, metadata !DIExpression()), !dbg !20015
  call void @llvm.dbg.declare(metadata i8** %mac, metadata !20016, metadata !DIExpression()), !dbg !20017
  %1 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20018
  %node = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %1, i32 0, i32 0, !dbg !20019
  %addr = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node, i32 0, i32 1, !dbg !20020
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !20018
  store i8* %arraydecay1, i8** %mac, align 8, !dbg !20017
  call void @llvm.dbg.declare(metadata i16* %vport, metadata !20021, metadata !DIExpression()), !dbg !20022
  %2 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20023
  %vport2 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %2, i32 0, i32 2, !dbg !20024
  %3 = load i16, i16* %vport2, align 2, !dbg !20024
  store i16 %3, i16* %vport, align 2, !dbg !20022
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20025
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 2, !dbg !20027
  %5 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !20028
  %legacy = bitcast %union.anon.154* %5 to %struct.legacy_fdb*, !dbg !20028
  %fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 0, !dbg !20029
  %6 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !20029
  %tobool = icmp ne %struct.mlx5_flow_table* %6, null, !dbg !20025
  br i1 %tobool, label %if.end, label %if.then, !dbg !20030

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20031
  br label %return, !dbg !20031

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !20032, metadata !DIExpression()), !dbg !20034
  %7 = load i8*, i8** %mac, align 8, !dbg !20034
  %arrayidx = getelementptr i8, i8* %7, i64 5, !dbg !20034
  %8 = load i8, i8* %arrayidx, align 1, !dbg !20034
  %conv = zext i8 %8 to i32, !dbg !20034
  store i32 %conv, i32* %ix, align 4, !dbg !20034
  call void @llvm.dbg.declare(metadata i8* %found, metadata !20035, metadata !DIExpression()), !dbg !20034
  store i8 0, i8* %found, align 1, !dbg !20034
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %ptr, metadata !20036, metadata !DIExpression()), !dbg !20034
  store %struct.esw_mc_addr* null, %struct.esw_mc_addr** %ptr, align 8, !dbg !20034
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !20037, metadata !DIExpression()), !dbg !20040
  %9 = load %struct.hlist_head*, %struct.hlist_head** %hash, align 8, !dbg !20040
  %10 = load i32, i32* %ix, align 4, !dbg !20040
  %idxprom = sext i32 %10 to i64, !dbg !20040
  %arrayidx3 = getelementptr %struct.hlist_head, %struct.hlist_head* %9, i64 %idxprom, !dbg !20040
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx3, i32 0, i32 0, !dbg !20040
  %11 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !20040
  store %struct.hlist_node* %11, %struct.hlist_node** %____ptr, align 8, !dbg !20040
  %12 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !20040
  %tobool4 = icmp ne %struct.hlist_node* %12, null, !dbg !20040
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !20040

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20041, metadata !DIExpression()), !dbg !20043
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !20043
  %14 = bitcast %struct.hlist_node* %13 to i8*, !dbg !20043
  store i8* %14, i8** %__mptr, align 8, !dbg !20043
  br label %do.body, !dbg !20043

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !20044

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !20043
  %add.ptr = getelementptr i8, i8* %15, i64 0, !dbg !20043
  %16 = bitcast i8* %add.ptr to %struct.esw_mc_addr*, !dbg !20043
  store %struct.esw_mc_addr* %16, %struct.esw_mc_addr** %tmp5, align 8, !dbg !20044
  %17 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp5, align 8, !dbg !20043
  br label %cond.end, !dbg !20040

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !20040

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.esw_mc_addr* [ %17, %do.end ], [ null, %cond.false ], !dbg !20040
  store %struct.esw_mc_addr* %cond, %struct.esw_mc_addr** %tmp, align 8, !dbg !20040
  %18 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp, align 8, !dbg !20040
  store %struct.esw_mc_addr* %18, %struct.esw_mc_addr** %ptr, align 8, !dbg !20046
  br label %for.cond, !dbg !20046

for.cond:                                         ; preds = %cond.end23, %cond.end
  %19 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !20047
  %tobool6 = icmp ne %struct.esw_mc_addr* %19, null, !dbg !20046
  br i1 %tobool6, label %for.body, label %for.end, !dbg !20046

for.body:                                         ; preds = %for.cond
  %20 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !20049
  %node7 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %20, i32 0, i32 0, !dbg !20049
  %addr8 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node7, i32 0, i32 1, !dbg !20049
  %arraydecay9 = getelementptr inbounds [6 x i8], [6 x i8]* %addr8, i64 0, i64 0, !dbg !20049
  %21 = load i8*, i8** %mac, align 8, !dbg !20049
  %call = call zeroext i1 @ether_addr_equal(i8* %arraydecay9, i8* %21) #8, !dbg !20049
  br i1 %call, label %if.then10, label %if.end11, !dbg !20047

if.then10:                                        ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !20051
  br label %for.end, !dbg !20051

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !20049

for.inc:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr12, metadata !20053, metadata !DIExpression()), !dbg !20055
  %22 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !20055
  %node13 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %22, i32 0, i32 0, !dbg !20055
  %hlist = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node13, i32 0, i32 0, !dbg !20055
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist, i32 0, i32 0, !dbg !20055
  %23 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !20055
  store %struct.hlist_node* %23, %struct.hlist_node** %____ptr12, align 8, !dbg !20055
  %24 = load %struct.hlist_node*, %struct.hlist_node** %____ptr12, align 8, !dbg !20055
  %tobool15 = icmp ne %struct.hlist_node* %24, null, !dbg !20055
  br i1 %tobool15, label %cond.true16, label %cond.false22, !dbg !20055

cond.true16:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !20056, metadata !DIExpression()), !dbg !20058
  %25 = load %struct.hlist_node*, %struct.hlist_node** %____ptr12, align 8, !dbg !20058
  %26 = bitcast %struct.hlist_node* %25 to i8*, !dbg !20058
  store i8* %26, i8** %__mptr17, align 8, !dbg !20058
  br label %do.body18, !dbg !20058

do.body18:                                        ; preds = %cond.true16
  br label %do.end19, !dbg !20059

do.end19:                                         ; preds = %do.body18
  %27 = load i8*, i8** %__mptr17, align 8, !dbg !20058
  %add.ptr21 = getelementptr i8, i8* %27, i64 0, !dbg !20058
  %28 = bitcast i8* %add.ptr21 to %struct.esw_mc_addr*, !dbg !20058
  store %struct.esw_mc_addr* %28, %struct.esw_mc_addr** %tmp20, align 8, !dbg !20059
  %29 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp20, align 8, !dbg !20058
  br label %cond.end23, !dbg !20055

cond.false22:                                     ; preds = %for.inc
  br label %cond.end23, !dbg !20055

cond.end23:                                       ; preds = %cond.false22, %do.end19
  %cond24 = phi %struct.esw_mc_addr* [ %29, %do.end19 ], [ null, %cond.false22 ], !dbg !20055
  store %struct.esw_mc_addr* %cond24, %struct.esw_mc_addr** %tmp14, align 8, !dbg !20055
  %30 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp14, align 8, !dbg !20055
  store %struct.esw_mc_addr* %30, %struct.esw_mc_addr** %ptr, align 8, !dbg !20047
  br label %for.cond, !dbg !20047, !llvm.loop !20061

for.end:                                          ; preds = %if.then10, %for.cond
  %31 = load i8, i8* %found, align 1, !dbg !20062
  %tobool25 = trunc i8 %31 to i1, !dbg !20062
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !20034

if.then26:                                        ; preds = %for.end
  store %struct.esw_mc_addr* null, %struct.esw_mc_addr** %ptr, align 8, !dbg !20062
  br label %if.end27, !dbg !20062

if.end27:                                         ; preds = %if.then26, %for.end
  %32 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %ptr, align 8, !dbg !20034
  store %struct.esw_mc_addr* %32, %struct.esw_mc_addr** %tmp28, align 8, !dbg !20062
  %33 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %tmp28, align 8, !dbg !20034
  store %struct.esw_mc_addr* %33, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20064
  %34 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20065
  %tobool29 = icmp ne %struct.esw_mc_addr* %34, null, !dbg !20065
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !20067

if.then30:                                        ; preds = %if.end27
  %35 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20068
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %35, i32 0, i32 0, !dbg !20068
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20068
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %36, i32 0, i32 0, !dbg !20068
  %37 = load %struct.device*, %struct.device** %device, align 8, !dbg !20068
  %38 = load i8*, i8** %mac, align 8, !dbg !20068
  %39 = load i16, i16* %vport, align 2, !dbg !20068
  %conv31 = zext i16 %39 to i32, !dbg !20068
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %37, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.47, i64 0, i64 0), i8* %38, i32 %conv31) #11, !dbg !20068
  store i32 -22, i32* %retval, align 4, !dbg !20070
  br label %return, !dbg !20070

if.end32:                                         ; preds = %if.end27
  br label %do.body33, !dbg !20071

do.body33:                                        ; preds = %if.end32
  %40 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !20072
  %conv34 = zext i32 %40 to i64, !dbg !20072
  %and = and i64 8, %conv34, !dbg !20072
  %tobool35 = icmp ne i64 %and, 0, !dbg !20072
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !20075

if.then36:                                        ; preds = %do.body33
  br label %if.end37, !dbg !20072

if.end37:                                         ; preds = %if.then36, %do.body33
  br label %do.end38, !dbg !20075

do.end38:                                         ; preds = %if.end37
  %41 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20076
  %flow_rule = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %41, i32 0, i32 3, !dbg !20078
  %42 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20078
  %tobool39 = icmp ne %struct.mlx5_flow_handle* %42, null, !dbg !20076
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !20079

if.then40:                                        ; preds = %do.end38
  %43 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20080
  %flow_rule41 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %43, i32 0, i32 3, !dbg !20081
  %44 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule41, align 8, !dbg !20081
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %44) #8, !dbg !20082
  br label %if.end42, !dbg !20082

if.end42:                                         ; preds = %if.then40, %do.end38
  %45 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20083
  %flow_rule43 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %45, i32 0, i32 3, !dbg !20084
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %flow_rule43, align 8, !dbg !20085
  %46 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20086
  %mc_promisc = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %46, i32 0, i32 5, !dbg !20088
  %47 = load i8, i8* %mc_promisc, align 1, !dbg !20088
  %tobool44 = trunc i8 %47 to i1, !dbg !20088
  br i1 %tobool44, label %if.then47, label %lor.lhs.false, !dbg !20089

lor.lhs.false:                                    ; preds = %if.end42
  %48 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20090
  %refcnt = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %48, i32 0, i32 2, !dbg !20091
  %49 = load i32, i32* %refcnt, align 8, !dbg !20092
  %dec = add i32 %49, -1, !dbg !20092
  store i32 %dec, i32* %refcnt, align 8, !dbg !20092
  %cmp = icmp ugt i32 %dec, 0, !dbg !20093
  br i1 %cmp, label %if.then47, label %if.end48, !dbg !20094

if.then47:                                        ; preds = %lor.lhs.false, %if.end42
  store i32 0, i32* %retval, align 4, !dbg !20095
  br label %return, !dbg !20095

if.end48:                                         ; preds = %lor.lhs.false
  %50 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20096
  %51 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20097
  %52 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20098
  call void @update_allmulti_vports(%struct.mlx5_eswitch* %50, %struct.vport_addr* %51, %struct.esw_mc_addr* %52) #8, !dbg !20099
  %53 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20100
  %uplink_rule = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %53, i32 0, i32 1, !dbg !20102
  %54 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %uplink_rule, align 8, !dbg !20102
  %tobool49 = icmp ne %struct.mlx5_flow_handle* %54, null, !dbg !20100
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !20103

if.then50:                                        ; preds = %if.end48
  %55 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20104
  %uplink_rule51 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %55, i32 0, i32 1, !dbg !20105
  %56 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %uplink_rule51, align 8, !dbg !20105
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %56) #8, !dbg !20106
  br label %if.end52, !dbg !20106

if.end52:                                         ; preds = %if.then50, %if.end48
  %57 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20107
  %node53 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %57, i32 0, i32 0, !dbg !20107
  %hlist54 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node53, i32 0, i32 0, !dbg !20107
  call void @hlist_del(%struct.hlist_node* %hlist54) #8, !dbg !20107
  %58 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %esw_mc, align 8, !dbg !20107
  %59 = bitcast %struct.esw_mc_addr* %58 to i8*, !dbg !20107
  call void @kfree(i8* %59) #8, !dbg !20107
  store i32 0, i32* %retval, align 4, !dbg !20109
  br label %return, !dbg !20109

return:                                           ; preds = %if.end52, %if.then47, %if.then30, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !20110
  ret i32 %60, !dbg !20110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_del(%struct.hlist_node* %n) #0 !dbg !20111 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !20114, metadata !DIExpression()), !dbg !20115
  %0 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !20116
  call void @__hlist_del(%struct.hlist_node* %0) #8, !dbg !20117
  %1 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !20118
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %1, i32 0, i32 0, !dbg !20119
  store %struct.hlist_node* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.hlist_node*), %struct.hlist_node** %next, align 8, !dbg !20120
  %2 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !20121
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %2, i32 0, i32 1, !dbg !20122
  store %struct.hlist_node** bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.hlist_node**), %struct.hlist_node*** %pprev, align 8, !dbg !20123
  ret void, !dbg !20124
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_mpfs_add_mac(%struct.mlx5_core_dev*, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_handle* @esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %esw, i8* %mac, i16 zeroext %vport) #0 !dbg !20125 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %mac.addr = alloca i8*, align 8
  %vport.addr = alloca i16, align 2
  %mac_c = alloca [6 x i8], align 1
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20128, metadata !DIExpression()), !dbg !20129
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !20130, metadata !DIExpression()), !dbg !20131
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !20132, metadata !DIExpression()), !dbg !20133
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac_c, metadata !20134, metadata !DIExpression()), !dbg !20135
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac_c, i64 0, i64 0, !dbg !20136
  call void @eth_broadcast_addr(i8* %arraydecay) #8, !dbg !20137
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20138
  %1 = load i16, i16* %vport.addr, align 2, !dbg !20139
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %mac_c, i64 0, i64 0, !dbg !20140
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !20141
  %call = call %struct.mlx5_flow_handle* @__esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %0, i16 zeroext %1, i1 zeroext false, i8* %arraydecay1, i8* %2) #8, !dbg !20142
  ret %struct.mlx5_flow_handle* %call, !dbg !20143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_handle* @__esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i1 zeroext %rx_rule, i8* %mac_c, i8* %mac_v) #0 !dbg !20144 {
entry:
  %retval = alloca %struct.mlx5_flow_handle*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %rx_rule.addr = alloca i8, align 1
  %mac_c.addr = alloca i8*, align 8
  %mac_v.addr = alloca i8*, align 8
  %match_header = alloca i32, align 4
  %flow_rule = alloca %struct.mlx5_flow_handle*, align 8
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %dest = alloca %struct.mlx5_flow_destination, align 8
  %spec = alloca %struct.mlx5_flow_spec*, align 8
  %mv_misc = alloca i8*, align 8
  %mc_misc = alloca i8*, align 8
  %dmac_v = alloca i8*, align 8
  %dmac_c = alloca i8*, align 8
  %_v = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20147, metadata !DIExpression()), !dbg !20148
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !20149, metadata !DIExpression()), !dbg !20150
  %frombool = zext i1 %rx_rule to i8
  store i8 %frombool, i8* %rx_rule.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rx_rule.addr, metadata !20151, metadata !DIExpression()), !dbg !20152
  store i8* %mac_c, i8** %mac_c.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac_c.addr, metadata !20153, metadata !DIExpression()), !dbg !20154
  store i8* %mac_v, i8** %mac_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac_v.addr, metadata !20155, metadata !DIExpression()), !dbg !20156
  call void @llvm.dbg.declare(metadata i32* %match_header, metadata !20157, metadata !DIExpression()), !dbg !20158
  %0 = load i8*, i8** %mac_c.addr, align 8, !dbg !20159
  %call = call zeroext i1 @is_zero_ether_addr(i8* %0) #8, !dbg !20160
  %1 = zext i1 %call to i64, !dbg !20160
  %cond = select i1 %call, i32 0, i32 1, !dbg !20160
  store i32 %cond, i32* %match_header, align 4, !dbg !20158
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %flow_rule, metadata !20161, metadata !DIExpression()), !dbg !20162
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20162
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !20163, metadata !DIExpression()), !dbg !20164
  %2 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !20164
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !20164
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination* %dest, metadata !20165, metadata !DIExpression()), !dbg !20166
  %3 = bitcast %struct.mlx5_flow_destination* %dest to i8*, !dbg !20166
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false), !dbg !20166
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec, metadata !20167, metadata !DIExpression()), !dbg !20168
  call void @llvm.dbg.declare(metadata i8** %mv_misc, metadata !20169, metadata !DIExpression()), !dbg !20170
  store i8* null, i8** %mv_misc, align 8, !dbg !20170
  call void @llvm.dbg.declare(metadata i8** %mc_misc, metadata !20171, metadata !DIExpression()), !dbg !20172
  store i8* null, i8** %mc_misc, align 8, !dbg !20172
  call void @llvm.dbg.declare(metadata i8** %dmac_v, metadata !20173, metadata !DIExpression()), !dbg !20174
  store i8* null, i8** %dmac_v, align 8, !dbg !20174
  call void @llvm.dbg.declare(metadata i8** %dmac_c, metadata !20175, metadata !DIExpression()), !dbg !20176
  store i8* null, i8** %dmac_c, align 8, !dbg !20176
  %4 = load i8, i8* %rx_rule.addr, align 1, !dbg !20177
  %tobool = trunc i8 %4 to i1, !dbg !20177
  br i1 %tobool, label %if.then, label %if.end, !dbg !20179

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %match_header, align 4, !dbg !20180
  %or = or i32 %5, 2, !dbg !20180
  store i32 %or, i32* %match_header, align 4, !dbg !20180
  br label %if.end, !dbg !20181

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @kvzalloc(i64 1040, i32 3264) #8, !dbg !20182
  %6 = bitcast i8* %call1 to %struct.mlx5_flow_spec*, !dbg !20182
  store %struct.mlx5_flow_spec* %6, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20183
  %7 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20184
  %tobool2 = icmp ne %struct.mlx5_flow_spec* %7, null, !dbg !20184
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !20186

if.then3:                                         ; preds = %if.end
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %retval, align 8, !dbg !20187
  br label %return, !dbg !20187

if.end4:                                          ; preds = %if.end
  %8 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20188
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %8, i32 0, i32 2, !dbg !20188
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !20188
  %9 = bitcast i32* %arraydecay to i8*, !dbg !20188
  %add.ptr = getelementptr i8, i8* %9, i64 8, !dbg !20188
  store i8* %add.ptr, i8** %dmac_v, align 8, !dbg !20189
  %10 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20190
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %10, i32 0, i32 1, !dbg !20190
  %arraydecay5 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !20190
  %11 = bitcast i32* %arraydecay5 to i8*, !dbg !20190
  %add.ptr6 = getelementptr i8, i8* %11, i64 8, !dbg !20190
  store i8* %add.ptr6, i8** %dmac_c, align 8, !dbg !20191
  %12 = load i32, i32* %match_header, align 4, !dbg !20192
  %and = and i32 %12, 1, !dbg !20194
  %tobool7 = icmp ne i32 %and, 0, !dbg !20194
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !20195

if.then8:                                         ; preds = %if.end4
  %13 = load i8*, i8** %dmac_v, align 8, !dbg !20196
  %14 = load i8*, i8** %mac_v.addr, align 8, !dbg !20198
  call void @ether_addr_copy(i8* %13, i8* %14) #8, !dbg !20199
  %15 = load i8*, i8** %dmac_c, align 8, !dbg !20200
  %16 = load i8*, i8** %mac_c.addr, align 8, !dbg !20201
  call void @ether_addr_copy(i8* %15, i8* %16) #8, !dbg !20202
  br label %if.end9, !dbg !20203

if.end9:                                          ; preds = %if.then8, %if.end4
  %17 = load i32, i32* %match_header, align 4, !dbg !20204
  %and10 = and i32 %17, 2, !dbg !20206
  %tobool11 = icmp ne i32 %and10, 0, !dbg !20206
  br i1 %tobool11, label %if.then12, label %if.end354, !dbg !20207

if.then12:                                        ; preds = %if.end9
  %18 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20208
  %match_value13 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %18, i32 0, i32 2, !dbg !20208
  %arraydecay14 = getelementptr inbounds [128 x i32], [128 x i32]* %match_value13, i64 0, i64 0, !dbg !20208
  %19 = bitcast i32* %arraydecay14 to i8*, !dbg !20208
  %add.ptr15 = getelementptr i8, i8* %19, i64 64, !dbg !20208
  store i8* %add.ptr15, i8** %mv_misc, align 8, !dbg !20210
  %20 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20211
  %match_criteria16 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %20, i32 0, i32 1, !dbg !20211
  %arraydecay17 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria16, i64 0, i64 0, !dbg !20211
  %21 = bitcast i32* %arraydecay17 to i8*, !dbg !20211
  %add.ptr18 = getelementptr i8, i8* %21, i64 64, !dbg !20211
  store i8* %add.ptr18, i8** %mc_misc, align 8, !dbg !20212
  br label %do.body, !dbg !20213

do.body:                                          ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !20214, metadata !DIExpression()), !dbg !20216
  store i32 65535, i32* %_v, align 4, !dbg !20216
  br label %do.body19, !dbg !20216

do.body19:                                        ; preds = %do.body
  br label %do.end, !dbg !20217

do.end:                                           ; preds = %do.body19
  %22 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %23 = bitcast i8* %22 to i32*, !dbg !20216
  %add.ptr20 = getelementptr i32, i32* %23, i64 1, !dbg !20216
  %24 = load i32, i32* %add.ptr20, align 4, !dbg !20216
  %25 = call i1 @llvm.is.constant.i32(i32 %24), !dbg !20216
  br i1 %25, label %cond.true, label %cond.false, !dbg !20216

cond.true:                                        ; preds = %do.end
  %26 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %27 = bitcast i8* %26 to i32*, !dbg !20216
  %add.ptr21 = getelementptr i32, i32* %27, i64 1, !dbg !20216
  %28 = load i32, i32* %add.ptr21, align 4, !dbg !20216
  %and22 = and i32 %28, 255, !dbg !20216
  %shl = shl i32 %and22, 24, !dbg !20216
  %29 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %30 = bitcast i8* %29 to i32*, !dbg !20216
  %add.ptr23 = getelementptr i32, i32* %30, i64 1, !dbg !20216
  %31 = load i32, i32* %add.ptr23, align 4, !dbg !20216
  %and24 = and i32 %31, 65280, !dbg !20216
  %shl25 = shl i32 %and24, 8, !dbg !20216
  %or26 = or i32 %shl, %shl25, !dbg !20216
  %32 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %33 = bitcast i8* %32 to i32*, !dbg !20216
  %add.ptr27 = getelementptr i32, i32* %33, i64 1, !dbg !20216
  %34 = load i32, i32* %add.ptr27, align 4, !dbg !20216
  %and28 = and i32 %34, 16711680, !dbg !20216
  %shr = lshr i32 %and28, 8, !dbg !20216
  %or29 = or i32 %or26, %shr, !dbg !20216
  %35 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %36 = bitcast i8* %35 to i32*, !dbg !20216
  %add.ptr30 = getelementptr i32, i32* %36, i64 1, !dbg !20216
  %37 = load i32, i32* %add.ptr30, align 4, !dbg !20216
  %and31 = and i32 %37, -16777216, !dbg !20216
  %shr32 = lshr i32 %and31, 24, !dbg !20216
  %or33 = or i32 %or29, %shr32, !dbg !20216
  br label %cond.end, !dbg !20216

cond.false:                                       ; preds = %do.end
  %38 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %39 = bitcast i8* %38 to i32*, !dbg !20216
  %add.ptr34 = getelementptr i32, i32* %39, i64 1, !dbg !20216
  %40 = load i32, i32* %add.ptr34, align 4, !dbg !20216
  %call35 = call i32 @__fswab32(i32 %40) #10, !dbg !20216
  br label %cond.end, !dbg !20216

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond36 = phi i32 [ %or33, %cond.true ], [ %call35, %cond.false ], !dbg !20216
  %and37 = and i32 %cond36, -65536, !dbg !20216
  %41 = load i32, i32* %_v, align 4, !dbg !20216
  %and38 = and i32 %41, 65535, !dbg !20216
  %shl39 = shl i32 %and38, 0, !dbg !20216
  %or40 = or i32 %and37, %shl39, !dbg !20216
  %42 = call i1 @llvm.is.constant.i32(i32 %or40), !dbg !20216
  br i1 %42, label %cond.true41, label %cond.false157, !dbg !20216

cond.true41:                                      ; preds = %cond.end
  %43 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %44 = bitcast i8* %43 to i32*, !dbg !20216
  %add.ptr42 = getelementptr i32, i32* %44, i64 1, !dbg !20216
  %45 = load i32, i32* %add.ptr42, align 4, !dbg !20216
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !20216
  br i1 %46, label %cond.true43, label %cond.false59, !dbg !20216

cond.true43:                                      ; preds = %cond.true41
  %47 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %48 = bitcast i8* %47 to i32*, !dbg !20216
  %add.ptr44 = getelementptr i32, i32* %48, i64 1, !dbg !20216
  %49 = load i32, i32* %add.ptr44, align 4, !dbg !20216
  %and45 = and i32 %49, 255, !dbg !20216
  %shl46 = shl i32 %and45, 24, !dbg !20216
  %50 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %51 = bitcast i8* %50 to i32*, !dbg !20216
  %add.ptr47 = getelementptr i32, i32* %51, i64 1, !dbg !20216
  %52 = load i32, i32* %add.ptr47, align 4, !dbg !20216
  %and48 = and i32 %52, 65280, !dbg !20216
  %shl49 = shl i32 %and48, 8, !dbg !20216
  %or50 = or i32 %shl46, %shl49, !dbg !20216
  %53 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %54 = bitcast i8* %53 to i32*, !dbg !20216
  %add.ptr51 = getelementptr i32, i32* %54, i64 1, !dbg !20216
  %55 = load i32, i32* %add.ptr51, align 4, !dbg !20216
  %and52 = and i32 %55, 16711680, !dbg !20216
  %shr53 = lshr i32 %and52, 8, !dbg !20216
  %or54 = or i32 %or50, %shr53, !dbg !20216
  %56 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %57 = bitcast i8* %56 to i32*, !dbg !20216
  %add.ptr55 = getelementptr i32, i32* %57, i64 1, !dbg !20216
  %58 = load i32, i32* %add.ptr55, align 4, !dbg !20216
  %and56 = and i32 %58, -16777216, !dbg !20216
  %shr57 = lshr i32 %and56, 24, !dbg !20216
  %or58 = or i32 %or54, %shr57, !dbg !20216
  br label %cond.end62, !dbg !20216

cond.false59:                                     ; preds = %cond.true41
  %59 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %60 = bitcast i8* %59 to i32*, !dbg !20216
  %add.ptr60 = getelementptr i32, i32* %60, i64 1, !dbg !20216
  %61 = load i32, i32* %add.ptr60, align 4, !dbg !20216
  %call61 = call i32 @__fswab32(i32 %61) #10, !dbg !20216
  br label %cond.end62, !dbg !20216

cond.end62:                                       ; preds = %cond.false59, %cond.true43
  %cond63 = phi i32 [ %or58, %cond.true43 ], [ %call61, %cond.false59 ], !dbg !20216
  %and64 = and i32 %cond63, -65536, !dbg !20216
  %62 = load i32, i32* %_v, align 4, !dbg !20216
  %and65 = and i32 %62, 65535, !dbg !20216
  %shl66 = shl i32 %and65, 0, !dbg !20216
  %or67 = or i32 %and64, %shl66, !dbg !20216
  %and68 = and i32 %or67, 255, !dbg !20216
  %shl69 = shl i32 %and68, 24, !dbg !20216
  %63 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %64 = bitcast i8* %63 to i32*, !dbg !20216
  %add.ptr70 = getelementptr i32, i32* %64, i64 1, !dbg !20216
  %65 = load i32, i32* %add.ptr70, align 4, !dbg !20216
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !20216
  br i1 %66, label %cond.true71, label %cond.false87, !dbg !20216

cond.true71:                                      ; preds = %cond.end62
  %67 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %68 = bitcast i8* %67 to i32*, !dbg !20216
  %add.ptr72 = getelementptr i32, i32* %68, i64 1, !dbg !20216
  %69 = load i32, i32* %add.ptr72, align 4, !dbg !20216
  %and73 = and i32 %69, 255, !dbg !20216
  %shl74 = shl i32 %and73, 24, !dbg !20216
  %70 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %71 = bitcast i8* %70 to i32*, !dbg !20216
  %add.ptr75 = getelementptr i32, i32* %71, i64 1, !dbg !20216
  %72 = load i32, i32* %add.ptr75, align 4, !dbg !20216
  %and76 = and i32 %72, 65280, !dbg !20216
  %shl77 = shl i32 %and76, 8, !dbg !20216
  %or78 = or i32 %shl74, %shl77, !dbg !20216
  %73 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %74 = bitcast i8* %73 to i32*, !dbg !20216
  %add.ptr79 = getelementptr i32, i32* %74, i64 1, !dbg !20216
  %75 = load i32, i32* %add.ptr79, align 4, !dbg !20216
  %and80 = and i32 %75, 16711680, !dbg !20216
  %shr81 = lshr i32 %and80, 8, !dbg !20216
  %or82 = or i32 %or78, %shr81, !dbg !20216
  %76 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %77 = bitcast i8* %76 to i32*, !dbg !20216
  %add.ptr83 = getelementptr i32, i32* %77, i64 1, !dbg !20216
  %78 = load i32, i32* %add.ptr83, align 4, !dbg !20216
  %and84 = and i32 %78, -16777216, !dbg !20216
  %shr85 = lshr i32 %and84, 24, !dbg !20216
  %or86 = or i32 %or82, %shr85, !dbg !20216
  br label %cond.end90, !dbg !20216

cond.false87:                                     ; preds = %cond.end62
  %79 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %80 = bitcast i8* %79 to i32*, !dbg !20216
  %add.ptr88 = getelementptr i32, i32* %80, i64 1, !dbg !20216
  %81 = load i32, i32* %add.ptr88, align 4, !dbg !20216
  %call89 = call i32 @__fswab32(i32 %81) #10, !dbg !20216
  br label %cond.end90, !dbg !20216

cond.end90:                                       ; preds = %cond.false87, %cond.true71
  %cond91 = phi i32 [ %or86, %cond.true71 ], [ %call89, %cond.false87 ], !dbg !20216
  %and92 = and i32 %cond91, -65536, !dbg !20216
  %82 = load i32, i32* %_v, align 4, !dbg !20216
  %and93 = and i32 %82, 65535, !dbg !20216
  %shl94 = shl i32 %and93, 0, !dbg !20216
  %or95 = or i32 %and92, %shl94, !dbg !20216
  %and96 = and i32 %or95, 65280, !dbg !20216
  %shl97 = shl i32 %and96, 8, !dbg !20216
  %or98 = or i32 %shl69, %shl97, !dbg !20216
  %83 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %84 = bitcast i8* %83 to i32*, !dbg !20216
  %add.ptr99 = getelementptr i32, i32* %84, i64 1, !dbg !20216
  %85 = load i32, i32* %add.ptr99, align 4, !dbg !20216
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !20216
  br i1 %86, label %cond.true100, label %cond.false116, !dbg !20216

cond.true100:                                     ; preds = %cond.end90
  %87 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %88 = bitcast i8* %87 to i32*, !dbg !20216
  %add.ptr101 = getelementptr i32, i32* %88, i64 1, !dbg !20216
  %89 = load i32, i32* %add.ptr101, align 4, !dbg !20216
  %and102 = and i32 %89, 255, !dbg !20216
  %shl103 = shl i32 %and102, 24, !dbg !20216
  %90 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %91 = bitcast i8* %90 to i32*, !dbg !20216
  %add.ptr104 = getelementptr i32, i32* %91, i64 1, !dbg !20216
  %92 = load i32, i32* %add.ptr104, align 4, !dbg !20216
  %and105 = and i32 %92, 65280, !dbg !20216
  %shl106 = shl i32 %and105, 8, !dbg !20216
  %or107 = or i32 %shl103, %shl106, !dbg !20216
  %93 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %94 = bitcast i8* %93 to i32*, !dbg !20216
  %add.ptr108 = getelementptr i32, i32* %94, i64 1, !dbg !20216
  %95 = load i32, i32* %add.ptr108, align 4, !dbg !20216
  %and109 = and i32 %95, 16711680, !dbg !20216
  %shr110 = lshr i32 %and109, 8, !dbg !20216
  %or111 = or i32 %or107, %shr110, !dbg !20216
  %96 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %97 = bitcast i8* %96 to i32*, !dbg !20216
  %add.ptr112 = getelementptr i32, i32* %97, i64 1, !dbg !20216
  %98 = load i32, i32* %add.ptr112, align 4, !dbg !20216
  %and113 = and i32 %98, -16777216, !dbg !20216
  %shr114 = lshr i32 %and113, 24, !dbg !20216
  %or115 = or i32 %or111, %shr114, !dbg !20216
  br label %cond.end119, !dbg !20216

cond.false116:                                    ; preds = %cond.end90
  %99 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %100 = bitcast i8* %99 to i32*, !dbg !20216
  %add.ptr117 = getelementptr i32, i32* %100, i64 1, !dbg !20216
  %101 = load i32, i32* %add.ptr117, align 4, !dbg !20216
  %call118 = call i32 @__fswab32(i32 %101) #10, !dbg !20216
  br label %cond.end119, !dbg !20216

cond.end119:                                      ; preds = %cond.false116, %cond.true100
  %cond120 = phi i32 [ %or115, %cond.true100 ], [ %call118, %cond.false116 ], !dbg !20216
  %and121 = and i32 %cond120, -65536, !dbg !20216
  %102 = load i32, i32* %_v, align 4, !dbg !20216
  %and122 = and i32 %102, 65535, !dbg !20216
  %shl123 = shl i32 %and122, 0, !dbg !20216
  %or124 = or i32 %and121, %shl123, !dbg !20216
  %and125 = and i32 %or124, 16711680, !dbg !20216
  %shr126 = lshr i32 %and125, 8, !dbg !20216
  %or127 = or i32 %or98, %shr126, !dbg !20216
  %103 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %104 = bitcast i8* %103 to i32*, !dbg !20216
  %add.ptr128 = getelementptr i32, i32* %104, i64 1, !dbg !20216
  %105 = load i32, i32* %add.ptr128, align 4, !dbg !20216
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !20216
  br i1 %106, label %cond.true129, label %cond.false145, !dbg !20216

cond.true129:                                     ; preds = %cond.end119
  %107 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %108 = bitcast i8* %107 to i32*, !dbg !20216
  %add.ptr130 = getelementptr i32, i32* %108, i64 1, !dbg !20216
  %109 = load i32, i32* %add.ptr130, align 4, !dbg !20216
  %and131 = and i32 %109, 255, !dbg !20216
  %shl132 = shl i32 %and131, 24, !dbg !20216
  %110 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %111 = bitcast i8* %110 to i32*, !dbg !20216
  %add.ptr133 = getelementptr i32, i32* %111, i64 1, !dbg !20216
  %112 = load i32, i32* %add.ptr133, align 4, !dbg !20216
  %and134 = and i32 %112, 65280, !dbg !20216
  %shl135 = shl i32 %and134, 8, !dbg !20216
  %or136 = or i32 %shl132, %shl135, !dbg !20216
  %113 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %114 = bitcast i8* %113 to i32*, !dbg !20216
  %add.ptr137 = getelementptr i32, i32* %114, i64 1, !dbg !20216
  %115 = load i32, i32* %add.ptr137, align 4, !dbg !20216
  %and138 = and i32 %115, 16711680, !dbg !20216
  %shr139 = lshr i32 %and138, 8, !dbg !20216
  %or140 = or i32 %or136, %shr139, !dbg !20216
  %116 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %117 = bitcast i8* %116 to i32*, !dbg !20216
  %add.ptr141 = getelementptr i32, i32* %117, i64 1, !dbg !20216
  %118 = load i32, i32* %add.ptr141, align 4, !dbg !20216
  %and142 = and i32 %118, -16777216, !dbg !20216
  %shr143 = lshr i32 %and142, 24, !dbg !20216
  %or144 = or i32 %or140, %shr143, !dbg !20216
  br label %cond.end148, !dbg !20216

cond.false145:                                    ; preds = %cond.end119
  %119 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %120 = bitcast i8* %119 to i32*, !dbg !20216
  %add.ptr146 = getelementptr i32, i32* %120, i64 1, !dbg !20216
  %121 = load i32, i32* %add.ptr146, align 4, !dbg !20216
  %call147 = call i32 @__fswab32(i32 %121) #10, !dbg !20216
  br label %cond.end148, !dbg !20216

cond.end148:                                      ; preds = %cond.false145, %cond.true129
  %cond149 = phi i32 [ %or144, %cond.true129 ], [ %call147, %cond.false145 ], !dbg !20216
  %and150 = and i32 %cond149, -65536, !dbg !20216
  %122 = load i32, i32* %_v, align 4, !dbg !20216
  %and151 = and i32 %122, 65535, !dbg !20216
  %shl152 = shl i32 %and151, 0, !dbg !20216
  %or153 = or i32 %and150, %shl152, !dbg !20216
  %and154 = and i32 %or153, -16777216, !dbg !20216
  %shr155 = lshr i32 %and154, 24, !dbg !20216
  %or156 = or i32 %or127, %shr155, !dbg !20216
  br label %cond.end185, !dbg !20216

cond.false157:                                    ; preds = %cond.end
  %123 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %124 = bitcast i8* %123 to i32*, !dbg !20216
  %add.ptr158 = getelementptr i32, i32* %124, i64 1, !dbg !20216
  %125 = load i32, i32* %add.ptr158, align 4, !dbg !20216
  %126 = call i1 @llvm.is.constant.i32(i32 %125), !dbg !20216
  br i1 %126, label %cond.true159, label %cond.false175, !dbg !20216

cond.true159:                                     ; preds = %cond.false157
  %127 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %128 = bitcast i8* %127 to i32*, !dbg !20216
  %add.ptr160 = getelementptr i32, i32* %128, i64 1, !dbg !20216
  %129 = load i32, i32* %add.ptr160, align 4, !dbg !20216
  %and161 = and i32 %129, 255, !dbg !20216
  %shl162 = shl i32 %and161, 24, !dbg !20216
  %130 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %131 = bitcast i8* %130 to i32*, !dbg !20216
  %add.ptr163 = getelementptr i32, i32* %131, i64 1, !dbg !20216
  %132 = load i32, i32* %add.ptr163, align 4, !dbg !20216
  %and164 = and i32 %132, 65280, !dbg !20216
  %shl165 = shl i32 %and164, 8, !dbg !20216
  %or166 = or i32 %shl162, %shl165, !dbg !20216
  %133 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %134 = bitcast i8* %133 to i32*, !dbg !20216
  %add.ptr167 = getelementptr i32, i32* %134, i64 1, !dbg !20216
  %135 = load i32, i32* %add.ptr167, align 4, !dbg !20216
  %and168 = and i32 %135, 16711680, !dbg !20216
  %shr169 = lshr i32 %and168, 8, !dbg !20216
  %or170 = or i32 %or166, %shr169, !dbg !20216
  %136 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %137 = bitcast i8* %136 to i32*, !dbg !20216
  %add.ptr171 = getelementptr i32, i32* %137, i64 1, !dbg !20216
  %138 = load i32, i32* %add.ptr171, align 4, !dbg !20216
  %and172 = and i32 %138, -16777216, !dbg !20216
  %shr173 = lshr i32 %and172, 24, !dbg !20216
  %or174 = or i32 %or170, %shr173, !dbg !20216
  br label %cond.end178, !dbg !20216

cond.false175:                                    ; preds = %cond.false157
  %139 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %140 = bitcast i8* %139 to i32*, !dbg !20216
  %add.ptr176 = getelementptr i32, i32* %140, i64 1, !dbg !20216
  %141 = load i32, i32* %add.ptr176, align 4, !dbg !20216
  %call177 = call i32 @__fswab32(i32 %141) #10, !dbg !20216
  br label %cond.end178, !dbg !20216

cond.end178:                                      ; preds = %cond.false175, %cond.true159
  %cond179 = phi i32 [ %or174, %cond.true159 ], [ %call177, %cond.false175 ], !dbg !20216
  %and180 = and i32 %cond179, -65536, !dbg !20216
  %142 = load i32, i32* %_v, align 4, !dbg !20216
  %and181 = and i32 %142, 65535, !dbg !20216
  %shl182 = shl i32 %and181, 0, !dbg !20216
  %or183 = or i32 %and180, %shl182, !dbg !20216
  %call184 = call i32 @__fswab32(i32 %or183) #10, !dbg !20216
  br label %cond.end185, !dbg !20216

cond.end185:                                      ; preds = %cond.end178, %cond.end148
  %cond186 = phi i32 [ %or156, %cond.end148 ], [ %call184, %cond.end178 ], !dbg !20216
  %143 = load i8*, i8** %mv_misc, align 8, !dbg !20216
  %144 = bitcast i8* %143 to i32*, !dbg !20216
  %add.ptr187 = getelementptr i32, i32* %144, i64 1, !dbg !20216
  store i32 %cond186, i32* %add.ptr187, align 4, !dbg !20216
  br label %do.end188, !dbg !20216

do.end188:                                        ; preds = %cond.end185
  br label %do.body189, !dbg !20219

do.body189:                                       ; preds = %do.end188
  br label %do.body190, !dbg !20220

do.body190:                                       ; preds = %do.body189
  br label %do.end191, !dbg !20222

do.end191:                                        ; preds = %do.body190
  %145 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %146 = bitcast i8* %145 to i32*, !dbg !20220
  %add.ptr192 = getelementptr i32, i32* %146, i64 1, !dbg !20220
  %147 = load i32, i32* %add.ptr192, align 4, !dbg !20220
  %148 = call i1 @llvm.is.constant.i32(i32 %147), !dbg !20220
  br i1 %148, label %cond.true193, label %cond.false209, !dbg !20220

cond.true193:                                     ; preds = %do.end191
  %149 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %150 = bitcast i8* %149 to i32*, !dbg !20220
  %add.ptr194 = getelementptr i32, i32* %150, i64 1, !dbg !20220
  %151 = load i32, i32* %add.ptr194, align 4, !dbg !20220
  %and195 = and i32 %151, 255, !dbg !20220
  %shl196 = shl i32 %and195, 24, !dbg !20220
  %152 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %153 = bitcast i8* %152 to i32*, !dbg !20220
  %add.ptr197 = getelementptr i32, i32* %153, i64 1, !dbg !20220
  %154 = load i32, i32* %add.ptr197, align 4, !dbg !20220
  %and198 = and i32 %154, 65280, !dbg !20220
  %shl199 = shl i32 %and198, 8, !dbg !20220
  %or200 = or i32 %shl196, %shl199, !dbg !20220
  %155 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %156 = bitcast i8* %155 to i32*, !dbg !20220
  %add.ptr201 = getelementptr i32, i32* %156, i64 1, !dbg !20220
  %157 = load i32, i32* %add.ptr201, align 4, !dbg !20220
  %and202 = and i32 %157, 16711680, !dbg !20220
  %shr203 = lshr i32 %and202, 8, !dbg !20220
  %or204 = or i32 %or200, %shr203, !dbg !20220
  %158 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %159 = bitcast i8* %158 to i32*, !dbg !20220
  %add.ptr205 = getelementptr i32, i32* %159, i64 1, !dbg !20220
  %160 = load i32, i32* %add.ptr205, align 4, !dbg !20220
  %and206 = and i32 %160, -16777216, !dbg !20220
  %shr207 = lshr i32 %and206, 24, !dbg !20220
  %or208 = or i32 %or204, %shr207, !dbg !20220
  br label %cond.end212, !dbg !20220

cond.false209:                                    ; preds = %do.end191
  %161 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %162 = bitcast i8* %161 to i32*, !dbg !20220
  %add.ptr210 = getelementptr i32, i32* %162, i64 1, !dbg !20220
  %163 = load i32, i32* %add.ptr210, align 4, !dbg !20220
  %call211 = call i32 @__fswab32(i32 %163) #10, !dbg !20220
  br label %cond.end212, !dbg !20220

cond.end212:                                      ; preds = %cond.false209, %cond.true193
  %cond213 = phi i32 [ %or208, %cond.true193 ], [ %call211, %cond.false209 ], !dbg !20220
  %and214 = and i32 %cond213, -65536, !dbg !20220
  %or215 = or i32 %and214, 65535, !dbg !20220
  %164 = call i1 @llvm.is.constant.i32(i32 %or215), !dbg !20220
  br i1 %164, label %cond.true216, label %cond.false324, !dbg !20220

cond.true216:                                     ; preds = %cond.end212
  %165 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %166 = bitcast i8* %165 to i32*, !dbg !20220
  %add.ptr217 = getelementptr i32, i32* %166, i64 1, !dbg !20220
  %167 = load i32, i32* %add.ptr217, align 4, !dbg !20220
  %168 = call i1 @llvm.is.constant.i32(i32 %167), !dbg !20220
  br i1 %168, label %cond.true218, label %cond.false234, !dbg !20220

cond.true218:                                     ; preds = %cond.true216
  %169 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %170 = bitcast i8* %169 to i32*, !dbg !20220
  %add.ptr219 = getelementptr i32, i32* %170, i64 1, !dbg !20220
  %171 = load i32, i32* %add.ptr219, align 4, !dbg !20220
  %and220 = and i32 %171, 255, !dbg !20220
  %shl221 = shl i32 %and220, 24, !dbg !20220
  %172 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %173 = bitcast i8* %172 to i32*, !dbg !20220
  %add.ptr222 = getelementptr i32, i32* %173, i64 1, !dbg !20220
  %174 = load i32, i32* %add.ptr222, align 4, !dbg !20220
  %and223 = and i32 %174, 65280, !dbg !20220
  %shl224 = shl i32 %and223, 8, !dbg !20220
  %or225 = or i32 %shl221, %shl224, !dbg !20220
  %175 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %176 = bitcast i8* %175 to i32*, !dbg !20220
  %add.ptr226 = getelementptr i32, i32* %176, i64 1, !dbg !20220
  %177 = load i32, i32* %add.ptr226, align 4, !dbg !20220
  %and227 = and i32 %177, 16711680, !dbg !20220
  %shr228 = lshr i32 %and227, 8, !dbg !20220
  %or229 = or i32 %or225, %shr228, !dbg !20220
  %178 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %179 = bitcast i8* %178 to i32*, !dbg !20220
  %add.ptr230 = getelementptr i32, i32* %179, i64 1, !dbg !20220
  %180 = load i32, i32* %add.ptr230, align 4, !dbg !20220
  %and231 = and i32 %180, -16777216, !dbg !20220
  %shr232 = lshr i32 %and231, 24, !dbg !20220
  %or233 = or i32 %or229, %shr232, !dbg !20220
  br label %cond.end237, !dbg !20220

cond.false234:                                    ; preds = %cond.true216
  %181 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %182 = bitcast i8* %181 to i32*, !dbg !20220
  %add.ptr235 = getelementptr i32, i32* %182, i64 1, !dbg !20220
  %183 = load i32, i32* %add.ptr235, align 4, !dbg !20220
  %call236 = call i32 @__fswab32(i32 %183) #10, !dbg !20220
  br label %cond.end237, !dbg !20220

cond.end237:                                      ; preds = %cond.false234, %cond.true218
  %cond238 = phi i32 [ %or233, %cond.true218 ], [ %call236, %cond.false234 ], !dbg !20220
  %and239 = and i32 %cond238, -65536, !dbg !20220
  %or240 = or i32 %and239, 65535, !dbg !20220
  %and241 = and i32 %or240, 255, !dbg !20220
  %shl242 = shl i32 %and241, 24, !dbg !20220
  %184 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %185 = bitcast i8* %184 to i32*, !dbg !20220
  %add.ptr243 = getelementptr i32, i32* %185, i64 1, !dbg !20220
  %186 = load i32, i32* %add.ptr243, align 4, !dbg !20220
  %187 = call i1 @llvm.is.constant.i32(i32 %186), !dbg !20220
  br i1 %187, label %cond.true244, label %cond.false260, !dbg !20220

cond.true244:                                     ; preds = %cond.end237
  %188 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %189 = bitcast i8* %188 to i32*, !dbg !20220
  %add.ptr245 = getelementptr i32, i32* %189, i64 1, !dbg !20220
  %190 = load i32, i32* %add.ptr245, align 4, !dbg !20220
  %and246 = and i32 %190, 255, !dbg !20220
  %shl247 = shl i32 %and246, 24, !dbg !20220
  %191 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %192 = bitcast i8* %191 to i32*, !dbg !20220
  %add.ptr248 = getelementptr i32, i32* %192, i64 1, !dbg !20220
  %193 = load i32, i32* %add.ptr248, align 4, !dbg !20220
  %and249 = and i32 %193, 65280, !dbg !20220
  %shl250 = shl i32 %and249, 8, !dbg !20220
  %or251 = or i32 %shl247, %shl250, !dbg !20220
  %194 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %195 = bitcast i8* %194 to i32*, !dbg !20220
  %add.ptr252 = getelementptr i32, i32* %195, i64 1, !dbg !20220
  %196 = load i32, i32* %add.ptr252, align 4, !dbg !20220
  %and253 = and i32 %196, 16711680, !dbg !20220
  %shr254 = lshr i32 %and253, 8, !dbg !20220
  %or255 = or i32 %or251, %shr254, !dbg !20220
  %197 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %198 = bitcast i8* %197 to i32*, !dbg !20220
  %add.ptr256 = getelementptr i32, i32* %198, i64 1, !dbg !20220
  %199 = load i32, i32* %add.ptr256, align 4, !dbg !20220
  %and257 = and i32 %199, -16777216, !dbg !20220
  %shr258 = lshr i32 %and257, 24, !dbg !20220
  %or259 = or i32 %or255, %shr258, !dbg !20220
  br label %cond.end263, !dbg !20220

cond.false260:                                    ; preds = %cond.end237
  %200 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %201 = bitcast i8* %200 to i32*, !dbg !20220
  %add.ptr261 = getelementptr i32, i32* %201, i64 1, !dbg !20220
  %202 = load i32, i32* %add.ptr261, align 4, !dbg !20220
  %call262 = call i32 @__fswab32(i32 %202) #10, !dbg !20220
  br label %cond.end263, !dbg !20220

cond.end263:                                      ; preds = %cond.false260, %cond.true244
  %cond264 = phi i32 [ %or259, %cond.true244 ], [ %call262, %cond.false260 ], !dbg !20220
  %and265 = and i32 %cond264, -65536, !dbg !20220
  %or266 = or i32 %and265, 65535, !dbg !20220
  %and267 = and i32 %or266, 65280, !dbg !20220
  %shl268 = shl i32 %and267, 8, !dbg !20220
  %or269 = or i32 %shl242, %shl268, !dbg !20220
  %203 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %204 = bitcast i8* %203 to i32*, !dbg !20220
  %add.ptr270 = getelementptr i32, i32* %204, i64 1, !dbg !20220
  %205 = load i32, i32* %add.ptr270, align 4, !dbg !20220
  %206 = call i1 @llvm.is.constant.i32(i32 %205), !dbg !20220
  br i1 %206, label %cond.true271, label %cond.false287, !dbg !20220

cond.true271:                                     ; preds = %cond.end263
  %207 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %208 = bitcast i8* %207 to i32*, !dbg !20220
  %add.ptr272 = getelementptr i32, i32* %208, i64 1, !dbg !20220
  %209 = load i32, i32* %add.ptr272, align 4, !dbg !20220
  %and273 = and i32 %209, 255, !dbg !20220
  %shl274 = shl i32 %and273, 24, !dbg !20220
  %210 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %211 = bitcast i8* %210 to i32*, !dbg !20220
  %add.ptr275 = getelementptr i32, i32* %211, i64 1, !dbg !20220
  %212 = load i32, i32* %add.ptr275, align 4, !dbg !20220
  %and276 = and i32 %212, 65280, !dbg !20220
  %shl277 = shl i32 %and276, 8, !dbg !20220
  %or278 = or i32 %shl274, %shl277, !dbg !20220
  %213 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %214 = bitcast i8* %213 to i32*, !dbg !20220
  %add.ptr279 = getelementptr i32, i32* %214, i64 1, !dbg !20220
  %215 = load i32, i32* %add.ptr279, align 4, !dbg !20220
  %and280 = and i32 %215, 16711680, !dbg !20220
  %shr281 = lshr i32 %and280, 8, !dbg !20220
  %or282 = or i32 %or278, %shr281, !dbg !20220
  %216 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %217 = bitcast i8* %216 to i32*, !dbg !20220
  %add.ptr283 = getelementptr i32, i32* %217, i64 1, !dbg !20220
  %218 = load i32, i32* %add.ptr283, align 4, !dbg !20220
  %and284 = and i32 %218, -16777216, !dbg !20220
  %shr285 = lshr i32 %and284, 24, !dbg !20220
  %or286 = or i32 %or282, %shr285, !dbg !20220
  br label %cond.end290, !dbg !20220

cond.false287:                                    ; preds = %cond.end263
  %219 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %220 = bitcast i8* %219 to i32*, !dbg !20220
  %add.ptr288 = getelementptr i32, i32* %220, i64 1, !dbg !20220
  %221 = load i32, i32* %add.ptr288, align 4, !dbg !20220
  %call289 = call i32 @__fswab32(i32 %221) #10, !dbg !20220
  br label %cond.end290, !dbg !20220

cond.end290:                                      ; preds = %cond.false287, %cond.true271
  %cond291 = phi i32 [ %or286, %cond.true271 ], [ %call289, %cond.false287 ], !dbg !20220
  %and292 = and i32 %cond291, -65536, !dbg !20220
  %or293 = or i32 %and292, 65535, !dbg !20220
  %and294 = and i32 %or293, 16711680, !dbg !20220
  %shr295 = lshr i32 %and294, 8, !dbg !20220
  %or296 = or i32 %or269, %shr295, !dbg !20220
  %222 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %223 = bitcast i8* %222 to i32*, !dbg !20220
  %add.ptr297 = getelementptr i32, i32* %223, i64 1, !dbg !20220
  %224 = load i32, i32* %add.ptr297, align 4, !dbg !20220
  %225 = call i1 @llvm.is.constant.i32(i32 %224), !dbg !20220
  br i1 %225, label %cond.true298, label %cond.false314, !dbg !20220

cond.true298:                                     ; preds = %cond.end290
  %226 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %227 = bitcast i8* %226 to i32*, !dbg !20220
  %add.ptr299 = getelementptr i32, i32* %227, i64 1, !dbg !20220
  %228 = load i32, i32* %add.ptr299, align 4, !dbg !20220
  %and300 = and i32 %228, 255, !dbg !20220
  %shl301 = shl i32 %and300, 24, !dbg !20220
  %229 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %230 = bitcast i8* %229 to i32*, !dbg !20220
  %add.ptr302 = getelementptr i32, i32* %230, i64 1, !dbg !20220
  %231 = load i32, i32* %add.ptr302, align 4, !dbg !20220
  %and303 = and i32 %231, 65280, !dbg !20220
  %shl304 = shl i32 %and303, 8, !dbg !20220
  %or305 = or i32 %shl301, %shl304, !dbg !20220
  %232 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %233 = bitcast i8* %232 to i32*, !dbg !20220
  %add.ptr306 = getelementptr i32, i32* %233, i64 1, !dbg !20220
  %234 = load i32, i32* %add.ptr306, align 4, !dbg !20220
  %and307 = and i32 %234, 16711680, !dbg !20220
  %shr308 = lshr i32 %and307, 8, !dbg !20220
  %or309 = or i32 %or305, %shr308, !dbg !20220
  %235 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %236 = bitcast i8* %235 to i32*, !dbg !20220
  %add.ptr310 = getelementptr i32, i32* %236, i64 1, !dbg !20220
  %237 = load i32, i32* %add.ptr310, align 4, !dbg !20220
  %and311 = and i32 %237, -16777216, !dbg !20220
  %shr312 = lshr i32 %and311, 24, !dbg !20220
  %or313 = or i32 %or309, %shr312, !dbg !20220
  br label %cond.end317, !dbg !20220

cond.false314:                                    ; preds = %cond.end290
  %238 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %239 = bitcast i8* %238 to i32*, !dbg !20220
  %add.ptr315 = getelementptr i32, i32* %239, i64 1, !dbg !20220
  %240 = load i32, i32* %add.ptr315, align 4, !dbg !20220
  %call316 = call i32 @__fswab32(i32 %240) #10, !dbg !20220
  br label %cond.end317, !dbg !20220

cond.end317:                                      ; preds = %cond.false314, %cond.true298
  %cond318 = phi i32 [ %or313, %cond.true298 ], [ %call316, %cond.false314 ], !dbg !20220
  %and319 = and i32 %cond318, -65536, !dbg !20220
  %or320 = or i32 %and319, 65535, !dbg !20220
  %and321 = and i32 %or320, -16777216, !dbg !20220
  %shr322 = lshr i32 %and321, 24, !dbg !20220
  %or323 = or i32 %or296, %shr322, !dbg !20220
  br label %cond.end350, !dbg !20220

cond.false324:                                    ; preds = %cond.end212
  %241 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %242 = bitcast i8* %241 to i32*, !dbg !20220
  %add.ptr325 = getelementptr i32, i32* %242, i64 1, !dbg !20220
  %243 = load i32, i32* %add.ptr325, align 4, !dbg !20220
  %244 = call i1 @llvm.is.constant.i32(i32 %243), !dbg !20220
  br i1 %244, label %cond.true326, label %cond.false342, !dbg !20220

cond.true326:                                     ; preds = %cond.false324
  %245 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %246 = bitcast i8* %245 to i32*, !dbg !20220
  %add.ptr327 = getelementptr i32, i32* %246, i64 1, !dbg !20220
  %247 = load i32, i32* %add.ptr327, align 4, !dbg !20220
  %and328 = and i32 %247, 255, !dbg !20220
  %shl329 = shl i32 %and328, 24, !dbg !20220
  %248 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %249 = bitcast i8* %248 to i32*, !dbg !20220
  %add.ptr330 = getelementptr i32, i32* %249, i64 1, !dbg !20220
  %250 = load i32, i32* %add.ptr330, align 4, !dbg !20220
  %and331 = and i32 %250, 65280, !dbg !20220
  %shl332 = shl i32 %and331, 8, !dbg !20220
  %or333 = or i32 %shl329, %shl332, !dbg !20220
  %251 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %252 = bitcast i8* %251 to i32*, !dbg !20220
  %add.ptr334 = getelementptr i32, i32* %252, i64 1, !dbg !20220
  %253 = load i32, i32* %add.ptr334, align 4, !dbg !20220
  %and335 = and i32 %253, 16711680, !dbg !20220
  %shr336 = lshr i32 %and335, 8, !dbg !20220
  %or337 = or i32 %or333, %shr336, !dbg !20220
  %254 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %255 = bitcast i8* %254 to i32*, !dbg !20220
  %add.ptr338 = getelementptr i32, i32* %255, i64 1, !dbg !20220
  %256 = load i32, i32* %add.ptr338, align 4, !dbg !20220
  %and339 = and i32 %256, -16777216, !dbg !20220
  %shr340 = lshr i32 %and339, 24, !dbg !20220
  %or341 = or i32 %or337, %shr340, !dbg !20220
  br label %cond.end345, !dbg !20220

cond.false342:                                    ; preds = %cond.false324
  %257 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %258 = bitcast i8* %257 to i32*, !dbg !20220
  %add.ptr343 = getelementptr i32, i32* %258, i64 1, !dbg !20220
  %259 = load i32, i32* %add.ptr343, align 4, !dbg !20220
  %call344 = call i32 @__fswab32(i32 %259) #10, !dbg !20220
  br label %cond.end345, !dbg !20220

cond.end345:                                      ; preds = %cond.false342, %cond.true326
  %cond346 = phi i32 [ %or341, %cond.true326 ], [ %call344, %cond.false342 ], !dbg !20220
  %and347 = and i32 %cond346, -65536, !dbg !20220
  %or348 = or i32 %and347, 65535, !dbg !20220
  %call349 = call i32 @__fswab32(i32 %or348) #10, !dbg !20220
  br label %cond.end350, !dbg !20220

cond.end350:                                      ; preds = %cond.end345, %cond.end317
  %cond351 = phi i32 [ %or323, %cond.end317 ], [ %call349, %cond.end345 ], !dbg !20220
  %260 = load i8*, i8** %mc_misc, align 8, !dbg !20220
  %261 = bitcast i8* %260 to i32*, !dbg !20220
  %add.ptr352 = getelementptr i32, i32* %261, i64 1, !dbg !20220
  store i32 %cond351, i32* %add.ptr352, align 4, !dbg !20220
  br label %do.end353, !dbg !20220

do.end353:                                        ; preds = %cond.end350
  br label %if.end354, !dbg !20224

if.end354:                                        ; preds = %do.end353, %if.end9
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 0, !dbg !20225
  store i32 0, i32* %type, align 8, !dbg !20226
  %262 = load i16, i16* %vport.addr, align 2, !dbg !20227
  %263 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 1, !dbg !20228
  %vport355 = bitcast %union.anon.146* %263 to %struct.anon.147*, !dbg !20228
  %num = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport355, i32 0, i32 0, !dbg !20229
  store i16 %262, i16* %num, align 8, !dbg !20230
  br label %do.body356, !dbg !20231

do.body356:                                       ; preds = %if.end354
  %264 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !20232
  %conv = zext i32 %264 to i64, !dbg !20232
  %and357 = and i64 8, %conv, !dbg !20232
  %tobool358 = icmp ne i64 %and357, 0, !dbg !20232
  br i1 %tobool358, label %if.then359, label %if.end360, !dbg !20235

if.then359:                                       ; preds = %do.body356
  br label %if.end360, !dbg !20232

if.end360:                                        ; preds = %if.then359, %do.body356
  br label %do.end361, !dbg !20235

do.end361:                                        ; preds = %if.end360
  %265 = load i32, i32* %match_header, align 4, !dbg !20236
  %conv362 = trunc i32 %265 to i8, !dbg !20236
  %266 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20237
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %266, i32 0, i32 0, !dbg !20238
  store i8 %conv362, i8* %match_criteria_enable, align 4, !dbg !20239
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !20240
  store i32 4, i32* %action, align 8, !dbg !20241
  %267 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20242
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %267, i32 0, i32 2, !dbg !20243
  %268 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !20244
  %legacy = bitcast %union.anon.154* %268 to %struct.legacy_fdb*, !dbg !20244
  %fdb = getelementptr inbounds %struct.legacy_fdb, %struct.legacy_fdb* %legacy, i32 0, i32 0, !dbg !20245
  %269 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !20245
  %270 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20246
  %call363 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %269, %struct.mlx5_flow_spec* %270, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !20247
  store %struct.mlx5_flow_handle* %call363, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20248
  %271 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20249
  %272 = bitcast %struct.mlx5_flow_handle* %271 to i8*, !dbg !20249
  %call364 = call zeroext i1 @IS_ERR(i8* %272) #8, !dbg !20251
  br i1 %call364, label %if.then365, label %if.end368, !dbg !20252

if.then365:                                       ; preds = %do.end361
  %273 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20253
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %273, i32 0, i32 0, !dbg !20253
  %274 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20253
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %274, i32 0, i32 0, !dbg !20253
  %275 = load %struct.device*, %struct.device** %device, align 8, !dbg !20253
  %276 = load i8*, i8** %dmac_v, align 8, !dbg !20253
  %277 = load i8*, i8** %dmac_c, align 8, !dbg !20253
  %278 = load i16, i16* %vport.addr, align 2, !dbg !20253
  %conv366 = zext i16 %278 to i32, !dbg !20253
  %279 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20253
  %280 = bitcast %struct.mlx5_flow_handle* %279 to i8*, !dbg !20253
  %call367 = call i64 @PTR_ERR(i8* %280) #8, !dbg !20253
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %275, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.44, i64 0, i64 0), i8* %276, i8* %277, i32 %conv366, i64 %call367) #11, !dbg !20253
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20255
  br label %if.end368, !dbg !20256

if.end368:                                        ; preds = %if.then365, %do.end361
  %281 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20257
  %282 = bitcast %struct.mlx5_flow_spec* %281 to i8*, !dbg !20257
  call void @kvfree(i8* %282) #8, !dbg !20258
  %283 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20259
  store %struct.mlx5_flow_handle* %283, %struct.mlx5_flow_handle** %retval, align 8, !dbg !20260
  br label %return, !dbg !20260

return:                                           ; preds = %if.end368, %if.then3
  %284 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %retval, align 8, !dbg !20261
  ret %struct.mlx5_flow_handle* %284, !dbg !20261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @update_allmulti_vports(%struct.mlx5_eswitch* %esw, %struct.vport_addr* %vaddr, %struct.esw_mc_addr* %esw_mc) #0 !dbg !20262 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vaddr.addr = alloca %struct.vport_addr*, align 8
  %esw_mc.addr = alloca %struct.esw_mc_addr*, align 8
  %mac = alloca i8*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %i = alloca i16, align 2
  %vport_num = alloca i16, align 2
  %vport_hash = alloca %struct.hlist_head*, align 8
  %iter_vaddr = alloca %struct.vport_addr*, align 8
  %ix = alloca i32, align 4
  %found = alloca i8, align 1
  %ptr = alloca %struct.vport_addr*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.vport_addr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp7 = alloca %struct.vport_addr*, align 8
  %____ptr14 = alloca %struct.hlist_node*, align 8
  %tmp16 = alloca %struct.vport_addr*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp22 = alloca %struct.vport_addr*, align 8
  %tmp30 = alloca %struct.vport_addr*, align 8
  %ix46 = alloca i32, align 4
  %ptr49 = alloca %struct.vport_addr*, align 8
  %tmp61 = alloca %struct.vport_addr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20265, metadata !DIExpression()), !dbg !20266
  store %struct.vport_addr* %vaddr, %struct.vport_addr** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %vaddr.addr, metadata !20267, metadata !DIExpression()), !dbg !20268
  store %struct.esw_mc_addr* %esw_mc, %struct.esw_mc_addr** %esw_mc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %esw_mc.addr, metadata !20269, metadata !DIExpression()), !dbg !20270
  call void @llvm.dbg.declare(metadata i8** %mac, metadata !20271, metadata !DIExpression()), !dbg !20272
  %0 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20273
  %node = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %0, i32 0, i32 0, !dbg !20274
  %addr = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node, i32 0, i32 1, !dbg !20275
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !20273
  store i8* %arraydecay, i8** %mac, align 8, !dbg !20272
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !20276, metadata !DIExpression()), !dbg !20277
  call void @llvm.dbg.declare(metadata i16* %i, metadata !20278, metadata !DIExpression()), !dbg !20279
  call void @llvm.dbg.declare(metadata i16* %vport_num, metadata !20280, metadata !DIExpression()), !dbg !20281
  store i16 0, i16* %i, align 2, !dbg !20282
  br label %for.cond, !dbg !20282

for.cond:                                         ; preds = %for.inc75, %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20284
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 6, !dbg !20284
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !20284
  %3 = load i16, i16* %i, align 2, !dbg !20284
  %idxprom = zext i16 %3 to i64, !dbg !20284
  %arrayidx = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %2, i64 %idxprom, !dbg !20284
  store %struct.mlx5_vport* %arrayidx, %struct.mlx5_vport** %vport, align 8, !dbg !20284
  %4 = load i16, i16* %i, align 2, !dbg !20284
  %conv = zext i16 %4 to i32, !dbg !20284
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20284
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 8, !dbg !20284
  %6 = load i32, i32* %total_vports, align 4, !dbg !20284
  %cmp = icmp slt i32 %conv, %6, !dbg !20284
  br i1 %cmp, label %for.body, label %for.end76, !dbg !20282

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %vport_hash, metadata !20286, metadata !DIExpression()), !dbg !20288
  %7 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !20289
  %mc_list = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %7, i32 0, i32 3, !dbg !20290
  %arraydecay2 = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %mc_list, i64 0, i64 0, !dbg !20289
  store %struct.hlist_head* %arraydecay2, %struct.hlist_head** %vport_hash, align 8, !dbg !20288
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %iter_vaddr, metadata !20291, metadata !DIExpression()), !dbg !20292
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !20293, metadata !DIExpression()), !dbg !20295
  %8 = load i8*, i8** %mac, align 8, !dbg !20295
  %arrayidx3 = getelementptr i8, i8* %8, i64 5, !dbg !20295
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !20295
  %conv4 = zext i8 %9 to i32, !dbg !20295
  store i32 %conv4, i32* %ix, align 4, !dbg !20295
  call void @llvm.dbg.declare(metadata i8* %found, metadata !20296, metadata !DIExpression()), !dbg !20295
  store i8 0, i8* %found, align 1, !dbg !20295
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %ptr, metadata !20297, metadata !DIExpression()), !dbg !20295
  store %struct.vport_addr* null, %struct.vport_addr** %ptr, align 8, !dbg !20295
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !20298, metadata !DIExpression()), !dbg !20301
  %10 = load %struct.hlist_head*, %struct.hlist_head** %vport_hash, align 8, !dbg !20301
  %11 = load i32, i32* %ix, align 4, !dbg !20301
  %idxprom5 = sext i32 %11 to i64, !dbg !20301
  %arrayidx6 = getelementptr %struct.hlist_head, %struct.hlist_head* %10, i64 %idxprom5, !dbg !20301
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx6, i32 0, i32 0, !dbg !20301
  %12 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !20301
  store %struct.hlist_node* %12, %struct.hlist_node** %____ptr, align 8, !dbg !20301
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !20301
  %tobool = icmp ne %struct.hlist_node* %13, null, !dbg !20301
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20301

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20302, metadata !DIExpression()), !dbg !20304
  %14 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !20304
  %15 = bitcast %struct.hlist_node* %14 to i8*, !dbg !20304
  store i8* %15, i8** %__mptr, align 8, !dbg !20304
  br label %do.body, !dbg !20304

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !20305

do.end:                                           ; preds = %do.body
  %16 = load i8*, i8** %__mptr, align 8, !dbg !20304
  %add.ptr = getelementptr i8, i8* %16, i64 0, !dbg !20304
  %17 = bitcast i8* %add.ptr to %struct.vport_addr*, !dbg !20304
  store %struct.vport_addr* %17, %struct.vport_addr** %tmp7, align 8, !dbg !20305
  %18 = load %struct.vport_addr*, %struct.vport_addr** %tmp7, align 8, !dbg !20304
  br label %cond.end, !dbg !20301

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !20301

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.vport_addr* [ %18, %do.end ], [ null, %cond.false ], !dbg !20301
  store %struct.vport_addr* %cond, %struct.vport_addr** %tmp, align 8, !dbg !20301
  %19 = load %struct.vport_addr*, %struct.vport_addr** %tmp, align 8, !dbg !20301
  store %struct.vport_addr* %19, %struct.vport_addr** %ptr, align 8, !dbg !20307
  br label %for.cond8, !dbg !20307

for.cond8:                                        ; preds = %cond.end25, %cond.end
  %20 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !20308
  %tobool9 = icmp ne %struct.vport_addr* %20, null, !dbg !20307
  br i1 %tobool9, label %for.body10, label %for.end, !dbg !20307

for.body10:                                       ; preds = %for.cond8
  %21 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !20310
  %node11 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %21, i32 0, i32 0, !dbg !20310
  %addr12 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node11, i32 0, i32 1, !dbg !20310
  %arraydecay13 = getelementptr inbounds [6 x i8], [6 x i8]* %addr12, i64 0, i64 0, !dbg !20310
  %22 = load i8*, i8** %mac, align 8, !dbg !20310
  %call = call zeroext i1 @ether_addr_equal(i8* %arraydecay13, i8* %22) #8, !dbg !20310
  br i1 %call, label %if.then, label %if.end, !dbg !20308

if.then:                                          ; preds = %for.body10
  store i8 1, i8* %found, align 1, !dbg !20312
  br label %for.end, !dbg !20312

if.end:                                           ; preds = %for.body10
  br label %for.inc, !dbg !20310

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr14, metadata !20314, metadata !DIExpression()), !dbg !20316
  %23 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !20316
  %node15 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %23, i32 0, i32 0, !dbg !20316
  %hlist = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node15, i32 0, i32 0, !dbg !20316
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist, i32 0, i32 0, !dbg !20316
  %24 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !20316
  store %struct.hlist_node* %24, %struct.hlist_node** %____ptr14, align 8, !dbg !20316
  %25 = load %struct.hlist_node*, %struct.hlist_node** %____ptr14, align 8, !dbg !20316
  %tobool17 = icmp ne %struct.hlist_node* %25, null, !dbg !20316
  br i1 %tobool17, label %cond.true18, label %cond.false24, !dbg !20316

cond.true18:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !20317, metadata !DIExpression()), !dbg !20319
  %26 = load %struct.hlist_node*, %struct.hlist_node** %____ptr14, align 8, !dbg !20319
  %27 = bitcast %struct.hlist_node* %26 to i8*, !dbg !20319
  store i8* %27, i8** %__mptr19, align 8, !dbg !20319
  br label %do.body20, !dbg !20319

do.body20:                                        ; preds = %cond.true18
  br label %do.end21, !dbg !20320

do.end21:                                         ; preds = %do.body20
  %28 = load i8*, i8** %__mptr19, align 8, !dbg !20319
  %add.ptr23 = getelementptr i8, i8* %28, i64 0, !dbg !20319
  %29 = bitcast i8* %add.ptr23 to %struct.vport_addr*, !dbg !20319
  store %struct.vport_addr* %29, %struct.vport_addr** %tmp22, align 8, !dbg !20320
  %30 = load %struct.vport_addr*, %struct.vport_addr** %tmp22, align 8, !dbg !20319
  br label %cond.end25, !dbg !20316

cond.false24:                                     ; preds = %for.inc
  br label %cond.end25, !dbg !20316

cond.end25:                                       ; preds = %cond.false24, %do.end21
  %cond26 = phi %struct.vport_addr* [ %30, %do.end21 ], [ null, %cond.false24 ], !dbg !20316
  store %struct.vport_addr* %cond26, %struct.vport_addr** %tmp16, align 8, !dbg !20316
  %31 = load %struct.vport_addr*, %struct.vport_addr** %tmp16, align 8, !dbg !20316
  store %struct.vport_addr* %31, %struct.vport_addr** %ptr, align 8, !dbg !20308
  br label %for.cond8, !dbg !20308, !llvm.loop !20322

for.end:                                          ; preds = %if.then, %for.cond8
  %32 = load i8, i8* %found, align 1, !dbg !20323
  %tobool27 = trunc i8 %32 to i1, !dbg !20323
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !20295

if.then28:                                        ; preds = %for.end
  store %struct.vport_addr* null, %struct.vport_addr** %ptr, align 8, !dbg !20323
  br label %if.end29, !dbg !20323

if.end29:                                         ; preds = %if.then28, %for.end
  %33 = load %struct.vport_addr*, %struct.vport_addr** %ptr, align 8, !dbg !20295
  store %struct.vport_addr* %33, %struct.vport_addr** %tmp30, align 8, !dbg !20323
  %34 = load %struct.vport_addr*, %struct.vport_addr** %tmp30, align 8, !dbg !20295
  store %struct.vport_addr* %34, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20292
  %35 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !20325
  %vport31 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %35, i32 0, i32 1, !dbg !20326
  %36 = load i32, i32* %vport31, align 8, !dbg !20326
  %conv32 = trunc i32 %36 to i16, !dbg !20325
  store i16 %conv32, i16* %vport_num, align 2, !dbg !20327
  %37 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !20328
  %allmulti_rule = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %37, i32 0, i32 5, !dbg !20330
  %38 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %allmulti_rule, align 8, !dbg !20330
  %39 = bitcast %struct.mlx5_flow_handle* %38 to i8*, !dbg !20328
  %call33 = call zeroext i1 @IS_ERR_OR_NULL(i8* %39) #8, !dbg !20331
  br i1 %call33, label %if.then40, label %lor.lhs.false, !dbg !20332

lor.lhs.false:                                    ; preds = %if.end29
  %40 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20333
  %vport35 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %40, i32 0, i32 2, !dbg !20334
  %41 = load i16, i16* %vport35, align 2, !dbg !20334
  %conv36 = zext i16 %41 to i32, !dbg !20333
  %42 = load i16, i16* %vport_num, align 2, !dbg !20335
  %conv37 = zext i16 %42 to i32, !dbg !20335
  %cmp38 = icmp eq i32 %conv36, %conv37, !dbg !20336
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !20337

if.then40:                                        ; preds = %lor.lhs.false, %if.end29
  br label %for.inc75, !dbg !20338

if.end41:                                         ; preds = %lor.lhs.false
  %43 = load %struct.vport_addr*, %struct.vport_addr** %vaddr.addr, align 8, !dbg !20339
  %action = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %43, i32 0, i32 1, !dbg !20340
  %44 = load i8, i8* %action, align 8, !dbg !20340
  %conv42 = zext i8 %44 to i32, !dbg !20339
  switch i32 %conv42, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb68
  ], !dbg !20341

sw.bb:                                            ; preds = %if.end41
  %45 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20342
  %tobool43 = icmp ne %struct.vport_addr* %45, null, !dbg !20342
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !20345

if.then44:                                        ; preds = %sw.bb
  br label %for.inc75, !dbg !20346

if.end45:                                         ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %ix46, metadata !20347, metadata !DIExpression()), !dbg !20349
  %46 = load i8*, i8** %mac, align 8, !dbg !20349
  %arrayidx47 = getelementptr i8, i8* %46, i64 5, !dbg !20349
  %47 = load i8, i8* %arrayidx47, align 1, !dbg !20349
  %conv48 = zext i8 %47 to i32, !dbg !20349
  store i32 %conv48, i32* %ix46, align 4, !dbg !20349
  call void @llvm.dbg.declare(metadata %struct.vport_addr** %ptr49, metadata !20350, metadata !DIExpression()), !dbg !20349
  store %struct.vport_addr* null, %struct.vport_addr** %ptr49, align 8, !dbg !20349
  %call50 = call i8* @kzalloc(i64 48, i32 3264) #8, !dbg !20349
  %48 = bitcast i8* %call50 to %struct.vport_addr*, !dbg !20349
  store %struct.vport_addr* %48, %struct.vport_addr** %ptr49, align 8, !dbg !20349
  %49 = load %struct.vport_addr*, %struct.vport_addr** %ptr49, align 8, !dbg !20351
  %tobool51 = icmp ne %struct.vport_addr* %49, null, !dbg !20351
  br i1 %tobool51, label %if.then52, label %if.end60, !dbg !20349

if.then52:                                        ; preds = %if.end45
  %50 = load %struct.vport_addr*, %struct.vport_addr** %ptr49, align 8, !dbg !20353
  %node53 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %50, i32 0, i32 0, !dbg !20353
  %addr54 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node53, i32 0, i32 1, !dbg !20353
  %arraydecay55 = getelementptr inbounds [6 x i8], [6 x i8]* %addr54, i64 0, i64 0, !dbg !20353
  %51 = load i8*, i8** %mac, align 8, !dbg !20353
  call void @ether_addr_copy(i8* %arraydecay55, i8* %51) #8, !dbg !20353
  %52 = load %struct.vport_addr*, %struct.vport_addr** %ptr49, align 8, !dbg !20353
  %node56 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %52, i32 0, i32 0, !dbg !20353
  %hlist57 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node56, i32 0, i32 0, !dbg !20353
  %53 = load %struct.hlist_head*, %struct.hlist_head** %vport_hash, align 8, !dbg !20353
  %54 = load i32, i32* %ix46, align 4, !dbg !20353
  %idxprom58 = sext i32 %54 to i64, !dbg !20353
  %arrayidx59 = getelementptr %struct.hlist_head, %struct.hlist_head* %53, i64 %idxprom58, !dbg !20353
  call void @hlist_add_head(%struct.hlist_node* %hlist57, %struct.hlist_head* %arrayidx59) #8, !dbg !20353
  br label %if.end60, !dbg !20353

if.end60:                                         ; preds = %if.then52, %if.end45
  %55 = load %struct.vport_addr*, %struct.vport_addr** %ptr49, align 8, !dbg !20349
  store %struct.vport_addr* %55, %struct.vport_addr** %tmp61, align 8, !dbg !20351
  %56 = load %struct.vport_addr*, %struct.vport_addr** %tmp61, align 8, !dbg !20349
  store %struct.vport_addr* %56, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20355
  %57 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20356
  %tobool62 = icmp ne %struct.vport_addr* %57, null, !dbg !20356
  br i1 %tobool62, label %if.end65, label %if.then63, !dbg !20358

if.then63:                                        ; preds = %if.end60
  %58 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20359
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %58, i32 0, i32 0, !dbg !20359
  %59 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20359
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %59, i32 0, i32 0, !dbg !20359
  %60 = load %struct.device*, %struct.device** %device, align 8, !dbg !20359
  %61 = load i8*, i8** %mac, align 8, !dbg !20359
  %62 = load i16, i16* %vport_num, align 2, !dbg !20359
  %conv64 = zext i16 %62 to i32, !dbg !20359
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %60, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.45, i64 0, i64 0), i8* %61, i32 %conv64) #11, !dbg !20359
  br label %for.inc75, !dbg !20361

if.end65:                                         ; preds = %if.end60
  %63 = load i16, i16* %vport_num, align 2, !dbg !20362
  %64 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20363
  %vport66 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %64, i32 0, i32 2, !dbg !20364
  store i16 %63, i16* %vport66, align 2, !dbg !20365
  %65 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20366
  %66 = load i8*, i8** %mac, align 8, !dbg !20367
  %67 = load i16, i16* %vport_num, align 2, !dbg !20368
  %call67 = call %struct.mlx5_flow_handle* @esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %65, i8* %66, i16 zeroext %67) #8, !dbg !20369
  %68 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20370
  %flow_rule = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %68, i32 0, i32 3, !dbg !20371
  store %struct.mlx5_flow_handle* %call67, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !20372
  %69 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20373
  %mc_promisc = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %69, i32 0, i32 5, !dbg !20374
  store i8 1, i8* %mc_promisc, align 1, !dbg !20375
  br label %sw.epilog, !dbg !20376

sw.bb68:                                          ; preds = %if.end41
  %70 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20377
  %tobool69 = icmp ne %struct.vport_addr* %70, null, !dbg !20377
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !20379

if.then70:                                        ; preds = %sw.bb68
  br label %for.inc75, !dbg !20380

if.end71:                                         ; preds = %sw.bb68
  %71 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20381
  %flow_rule72 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %71, i32 0, i32 3, !dbg !20382
  %72 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule72, align 8, !dbg !20382
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %72) #8, !dbg !20383
  %73 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20384
  %node73 = getelementptr inbounds %struct.vport_addr, %struct.vport_addr* %73, i32 0, i32 0, !dbg !20384
  %hlist74 = getelementptr inbounds %struct.l2addr_node, %struct.l2addr_node* %node73, i32 0, i32 0, !dbg !20384
  call void @hlist_del(%struct.hlist_node* %hlist74) #8, !dbg !20384
  %74 = load %struct.vport_addr*, %struct.vport_addr** %iter_vaddr, align 8, !dbg !20384
  %75 = bitcast %struct.vport_addr* %74 to i8*, !dbg !20384
  call void @kfree(i8* %75) #8, !dbg !20384
  br label %sw.epilog, !dbg !20386

sw.epilog:                                        ; preds = %if.end41, %if.end71, %if.end65
  br label %for.inc75, !dbg !20387

for.inc75:                                        ; preds = %sw.epilog, %if.then70, %if.then63, %if.then44, %if.then40
  %76 = load i16, i16* %i, align 2, !dbg !20284
  %inc = add i16 %76, 1, !dbg !20284
  store i16 %inc, i16* %i, align 2, !dbg !20284
  br label %for.cond, !dbg !20284, !llvm.loop !20388

for.end76:                                        ; preds = %for.cond
  ret void, !dbg !20390
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_mpfs_del_mac(%struct.mlx5_core_dev*, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__hlist_del(%struct.hlist_node* %n) #0 !dbg !20391 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %next = alloca %struct.hlist_node*, align 8
  %pprev = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !20392, metadata !DIExpression()), !dbg !20393
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %next, metadata !20394, metadata !DIExpression()), !dbg !20395
  %0 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !20396
  %next1 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 0, !dbg !20397
  %1 = load %struct.hlist_node*, %struct.hlist_node** %next1, align 8, !dbg !20397
  store %struct.hlist_node* %1, %struct.hlist_node** %next, align 8, !dbg !20395
  call void @llvm.dbg.declare(metadata %struct.hlist_node*** %pprev, metadata !20398, metadata !DIExpression()), !dbg !20399
  %2 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !20400
  %pprev2 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %2, i32 0, i32 1, !dbg !20401
  %3 = load %struct.hlist_node**, %struct.hlist_node*** %pprev2, align 8, !dbg !20401
  store %struct.hlist_node** %3, %struct.hlist_node*** %pprev, align 8, !dbg !20399
  br label %do.body, !dbg !20402

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !20403

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !20405

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !20403

do.body4:                                         ; preds = %do.end
  %4 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !20407
  %5 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !20407
  store volatile %struct.hlist_node* %4, %struct.hlist_node** %5, align 8, !dbg !20407
  br label %do.end5, !dbg !20407

do.end5:                                          ; preds = %do.body4
  br label %do.end6, !dbg !20403

do.end6:                                          ; preds = %do.end5
  %6 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !20409
  %tobool = icmp ne %struct.hlist_node* %6, null, !dbg !20409
  br i1 %tobool, label %if.then, label %if.end, !dbg !20411

if.then:                                          ; preds = %do.end6
  br label %do.body7, !dbg !20412

do.body7:                                         ; preds = %if.then
  br label %do.body8, !dbg !20413

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !20415

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !20413

do.body10:                                        ; preds = %do.end9
  %7 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !20417
  %8 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !20417
  %pprev11 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %8, i32 0, i32 1, !dbg !20417
  store volatile %struct.hlist_node** %7, %struct.hlist_node*** %pprev11, align 8, !dbg !20417
  br label %do.end12, !dbg !20417

do.end12:                                         ; preds = %do.body10
  br label %do.end13, !dbg !20413

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !20413

if.end:                                           ; preds = %do.end13, %do.end6
  ret void, !dbg !20419
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_query_nic_vport_promisc(%struct.mlx5_core_dev*, i16 zeroext, i32*, i32*, i32*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_apply_vport_rx_mode(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport, i1 zeroext %promisc, i1 zeroext %mc_promisc) #0 !dbg !20420 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %promisc.addr = alloca i8, align 1
  %mc_promisc.addr = alloca i8, align 1
  %allmulti_addr = alloca %struct.esw_mc_addr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20423, metadata !DIExpression()), !dbg !20424
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !20425, metadata !DIExpression()), !dbg !20426
  %frombool = zext i1 %promisc to i8
  store i8 %frombool, i8* %promisc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %promisc.addr, metadata !20427, metadata !DIExpression()), !dbg !20428
  %frombool1 = zext i1 %mc_promisc to i8
  store i8 %frombool1, i8* %mc_promisc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mc_promisc.addr, metadata !20429, metadata !DIExpression()), !dbg !20430
  call void @llvm.dbg.declare(metadata %struct.esw_mc_addr** %allmulti_addr, metadata !20431, metadata !DIExpression()), !dbg !20432
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20433
  %mc_promisc2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 4, !dbg !20434
  store %struct.esw_mc_addr* %mc_promisc2, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20432
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20435
  %allmulti_rule = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %1, i32 0, i32 5, !dbg !20437
  %2 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %allmulti_rule, align 8, !dbg !20437
  %3 = bitcast %struct.mlx5_flow_handle* %2 to i8*, !dbg !20435
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #8, !dbg !20438
  %conv = zext i1 %call to i32, !dbg !20438
  %4 = load i8, i8* %mc_promisc.addr, align 1, !dbg !20439
  %tobool = trunc i8 %4 to i1, !dbg !20439
  %conv3 = zext i1 %tobool to i32, !dbg !20439
  %cmp = icmp ne i32 %conv, %conv3, !dbg !20440
  br i1 %cmp, label %if.then, label %if.end, !dbg !20441

if.then:                                          ; preds = %entry
  br label %promisc34, !dbg !20442

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %mc_promisc.addr, align 1, !dbg !20443
  %tobool5 = trunc i8 %5 to i1, !dbg !20443
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !20445

if.then6:                                         ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20446
  %7 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20448
  %vport7 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %7, i32 0, i32 1, !dbg !20449
  %8 = load i32, i32* %vport7, align 8, !dbg !20449
  %conv8 = trunc i32 %8 to i16, !dbg !20448
  %call9 = call %struct.mlx5_flow_handle* @esw_fdb_set_vport_allmulti_rule(%struct.mlx5_eswitch* %6, i16 zeroext %conv8) #8, !dbg !20450
  %9 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20451
  %allmulti_rule10 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %9, i32 0, i32 5, !dbg !20452
  store %struct.mlx5_flow_handle* %call9, %struct.mlx5_flow_handle** %allmulti_rule10, align 8, !dbg !20453
  %10 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20454
  %uplink_rule = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %10, i32 0, i32 1, !dbg !20456
  %11 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %uplink_rule, align 8, !dbg !20456
  %tobool11 = icmp ne %struct.mlx5_flow_handle* %11, null, !dbg !20454
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !20457

if.then12:                                        ; preds = %if.then6
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20458
  %call13 = call %struct.mlx5_flow_handle* @esw_fdb_set_vport_allmulti_rule(%struct.mlx5_eswitch* %12, i16 zeroext -1) #8, !dbg !20459
  %13 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20460
  %uplink_rule14 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %13, i32 0, i32 1, !dbg !20461
  store %struct.mlx5_flow_handle* %call13, %struct.mlx5_flow_handle** %uplink_rule14, align 8, !dbg !20462
  br label %if.end15, !dbg !20460

if.end15:                                         ; preds = %if.then12, %if.then6
  %14 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20463
  %refcnt = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %14, i32 0, i32 2, !dbg !20464
  %15 = load i32, i32* %refcnt, align 8, !dbg !20465
  %inc = add i32 %15, 1, !dbg !20465
  store i32 %inc, i32* %refcnt, align 8, !dbg !20465
  br label %if.end33, !dbg !20466

if.else:                                          ; preds = %if.end
  %16 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20467
  %allmulti_rule16 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %16, i32 0, i32 5, !dbg !20469
  %17 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %allmulti_rule16, align 8, !dbg !20469
  %tobool17 = icmp ne %struct.mlx5_flow_handle* %17, null, !dbg !20467
  br i1 %tobool17, label %if.then18, label %if.end32, !dbg !20470

if.then18:                                        ; preds = %if.else
  %18 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20471
  %allmulti_rule19 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %18, i32 0, i32 5, !dbg !20473
  %19 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %allmulti_rule19, align 8, !dbg !20473
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %19) #8, !dbg !20474
  %20 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20475
  %allmulti_rule20 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %20, i32 0, i32 5, !dbg !20476
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %allmulti_rule20, align 8, !dbg !20477
  %21 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20478
  %refcnt21 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %21, i32 0, i32 2, !dbg !20480
  %22 = load i32, i32* %refcnt21, align 8, !dbg !20481
  %dec = add i32 %22, -1, !dbg !20481
  store i32 %dec, i32* %refcnt21, align 8, !dbg !20481
  %cmp22 = icmp ugt i32 %dec, 0, !dbg !20482
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !20483

if.then24:                                        ; preds = %if.then18
  br label %promisc34, !dbg !20484

if.end25:                                         ; preds = %if.then18
  %23 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20485
  %uplink_rule26 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %23, i32 0, i32 1, !dbg !20487
  %24 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %uplink_rule26, align 8, !dbg !20487
  %tobool27 = icmp ne %struct.mlx5_flow_handle* %24, null, !dbg !20485
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !20488

if.then28:                                        ; preds = %if.end25
  %25 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20489
  %uplink_rule29 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %25, i32 0, i32 1, !dbg !20490
  %26 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %uplink_rule29, align 8, !dbg !20490
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %26) #8, !dbg !20491
  br label %if.end30, !dbg !20491

if.end30:                                         ; preds = %if.then28, %if.end25
  %27 = load %struct.esw_mc_addr*, %struct.esw_mc_addr** %allmulti_addr, align 8, !dbg !20492
  %uplink_rule31 = getelementptr inbounds %struct.esw_mc_addr, %struct.esw_mc_addr* %27, i32 0, i32 1, !dbg !20493
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %uplink_rule31, align 8, !dbg !20494
  br label %if.end32, !dbg !20495

if.end32:                                         ; preds = %if.end30, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end15
  br label %promisc34, !dbg !20443

promisc34:                                        ; preds = %if.end33, %if.then24, %if.then
  call void @llvm.dbg.label(metadata !20496), !dbg !20497
  %28 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20498
  %promisc_rule = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %28, i32 0, i32 4, !dbg !20500
  %29 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %promisc_rule, align 8, !dbg !20500
  %30 = bitcast %struct.mlx5_flow_handle* %29 to i8*, !dbg !20498
  %call35 = call zeroext i1 @IS_ERR_OR_NULL(i8* %30) #8, !dbg !20501
  %conv36 = zext i1 %call35 to i32, !dbg !20501
  %31 = load i8, i8* %promisc.addr, align 1, !dbg !20502
  %tobool37 = trunc i8 %31 to i1, !dbg !20502
  %conv38 = zext i1 %tobool37 to i32, !dbg !20502
  %cmp39 = icmp ne i32 %conv36, %conv38, !dbg !20503
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !20504

if.then41:                                        ; preds = %promisc34
  br label %if.end56, !dbg !20505

if.end42:                                         ; preds = %promisc34
  %32 = load i8, i8* %promisc.addr, align 1, !dbg !20506
  %tobool43 = trunc i8 %32 to i1, !dbg !20506
  br i1 %tobool43, label %if.then44, label %if.else49, !dbg !20508

if.then44:                                        ; preds = %if.end42
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20509
  %34 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20511
  %vport45 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %34, i32 0, i32 1, !dbg !20512
  %35 = load i32, i32* %vport45, align 8, !dbg !20512
  %conv46 = trunc i32 %35 to i16, !dbg !20511
  %call47 = call %struct.mlx5_flow_handle* @esw_fdb_set_vport_promisc_rule(%struct.mlx5_eswitch* %33, i16 zeroext %conv46) #8, !dbg !20513
  %36 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20514
  %promisc_rule48 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %36, i32 0, i32 4, !dbg !20515
  store %struct.mlx5_flow_handle* %call47, %struct.mlx5_flow_handle** %promisc_rule48, align 8, !dbg !20516
  br label %if.end56, !dbg !20517

if.else49:                                        ; preds = %if.end42
  %37 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20518
  %promisc_rule50 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %37, i32 0, i32 4, !dbg !20520
  %38 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %promisc_rule50, align 8, !dbg !20520
  %tobool51 = icmp ne %struct.mlx5_flow_handle* %38, null, !dbg !20518
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !20521

if.then52:                                        ; preds = %if.else49
  %39 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20522
  %promisc_rule53 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %39, i32 0, i32 4, !dbg !20524
  %40 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %promisc_rule53, align 8, !dbg !20524
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %40) #8, !dbg !20525
  %41 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20526
  %promisc_rule54 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %41, i32 0, i32 4, !dbg !20527
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %promisc_rule54, align 8, !dbg !20528
  br label %if.end55, !dbg !20529

if.end55:                                         ; preds = %if.then52, %if.else49
  br label %if.end56

if.end56:                                         ; preds = %if.then41, %if.end55, %if.then44
  ret void, !dbg !20530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_handle* @esw_fdb_set_vport_allmulti_rule(%struct.mlx5_eswitch* %esw, i16 zeroext %vport) #0 !dbg !20531 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %mac_c = alloca [6 x i8], align 1
  %mac_v = alloca [6 x i8], align 1
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20534, metadata !DIExpression()), !dbg !20535
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !20536, metadata !DIExpression()), !dbg !20537
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac_c, metadata !20538, metadata !DIExpression()), !dbg !20539
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac_v, metadata !20540, metadata !DIExpression()), !dbg !20541
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac_c, i64 0, i64 0, !dbg !20542
  call void @eth_zero_addr(i8* %arraydecay) #8, !dbg !20543
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %mac_v, i64 0, i64 0, !dbg !20544
  call void @eth_zero_addr(i8* %arraydecay1) #8, !dbg !20545
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %mac_c, i64 0, i64 0, !dbg !20546
  store i8 1, i8* %arrayidx, align 1, !dbg !20547
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %mac_v, i64 0, i64 0, !dbg !20548
  store i8 1, i8* %arrayidx2, align 1, !dbg !20549
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20550
  %1 = load i16, i16* %vport.addr, align 2, !dbg !20551
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %mac_c, i64 0, i64 0, !dbg !20552
  %arraydecay4 = getelementptr inbounds [6 x i8], [6 x i8]* %mac_v, i64 0, i64 0, !dbg !20553
  %call = call %struct.mlx5_flow_handle* @__esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %0, i16 zeroext %1, i1 zeroext false, i8* %arraydecay3, i8* %arraydecay4) #8, !dbg !20554
  ret %struct.mlx5_flow_handle* %call, !dbg !20555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_handle* @esw_fdb_set_vport_promisc_rule(%struct.mlx5_eswitch* %esw, i16 zeroext %vport) #0 !dbg !20556 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %mac_c = alloca [6 x i8], align 1
  %mac_v = alloca [6 x i8], align 1
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20557, metadata !DIExpression()), !dbg !20558
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !20559, metadata !DIExpression()), !dbg !20560
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac_c, metadata !20561, metadata !DIExpression()), !dbg !20562
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac_v, metadata !20563, metadata !DIExpression()), !dbg !20564
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac_c, i64 0, i64 0, !dbg !20565
  call void @eth_zero_addr(i8* %arraydecay) #8, !dbg !20566
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %mac_v, i64 0, i64 0, !dbg !20567
  call void @eth_zero_addr(i8* %arraydecay1) #8, !dbg !20568
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20569
  %1 = load i16, i16* %vport.addr, align 2, !dbg !20570
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %mac_c, i64 0, i64 0, !dbg !20571
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %mac_v, i64 0, i64 0, !dbg !20572
  %call = call %struct.mlx5_flow_handle* @__esw_fdb_set_vport_rule(%struct.mlx5_eswitch* %0, i16 zeroext %1, i1 zeroext true, i8* %arraydecay2, i8* %arraydecay3) #8, !dbg !20573
  ret %struct.mlx5_flow_handle* %call, !dbg !20574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @calculate_vports_min_rate_divider(%struct.mlx5_eswitch* %esw) #0 !dbg !20575 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %fw_max_bw_share = alloca i32, align 4
  %evport = alloca %struct.mlx5_vport*, align 8
  %max_guarantee = alloca i32, align 4
  %i = alloca i32, align 4
  %__UNIQUE_ID___x735 = alloca i32, align 4
  %__UNIQUE_ID___y736 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20578, metadata !DIExpression()), !dbg !20579
  call void @llvm.dbg.declare(metadata i32* %fw_max_bw_share, metadata !20580, metadata !DIExpression()), !dbg !20581
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20582
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !20582
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20582
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !20582
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !20582
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 12, !dbg !20582
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !20582
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 7, !dbg !20582
  %2 = load i32, i32* %add.ptr, align 4, !dbg !20582
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !20582
  br i1 %3, label %cond.true, label %cond.false, !dbg !20582

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20582
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !20582
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !20582
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !20582
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !20582
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 12, !dbg !20582
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !20582
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 7, !dbg !20582
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !20582
  %and = and i32 %6, 255, !dbg !20582
  %shl = shl i32 %and, 24, !dbg !20582
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20582
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !20582
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !20582
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !20582
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !20582
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 12, !dbg !20582
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !20582
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 7, !dbg !20582
  %9 = load i32, i32* %add.ptr12, align 4, !dbg !20582
  %and13 = and i32 %9, 65280, !dbg !20582
  %shl14 = shl i32 %and13, 8, !dbg !20582
  %or = or i32 %shl, %shl14, !dbg !20582
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20582
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !20582
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !20582
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !20582
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !20582
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 12, !dbg !20582
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !20582
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 7, !dbg !20582
  %12 = load i32, i32* %add.ptr20, align 4, !dbg !20582
  %and21 = and i32 %12, 16711680, !dbg !20582
  %shr = lshr i32 %and21, 8, !dbg !20582
  %or22 = or i32 %or, %shr, !dbg !20582
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20582
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !20582
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !20582
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !20582
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !20582
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 12, !dbg !20582
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !20582
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 7, !dbg !20582
  %15 = load i32, i32* %add.ptr28, align 4, !dbg !20582
  %and29 = and i32 %15, -16777216, !dbg !20582
  %shr30 = lshr i32 %and29, 24, !dbg !20582
  %or31 = or i32 %or22, %shr30, !dbg !20582
  br label %cond.end, !dbg !20582

cond.false:                                       ; preds = %entry
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20582
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !20582
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !20582
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !20582
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !20582
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 12, !dbg !20582
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !20582
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 7, !dbg !20582
  %18 = load i32, i32* %add.ptr37, align 4, !dbg !20582
  %call = call i32 @__fswab32(i32 %18) #10, !dbg !20582
  br label %cond.end, !dbg !20582

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !20582
  %shr38 = lshr i32 %cond, 0, !dbg !20582
  store i32 %shr38, i32* %fw_max_bw_share, align 4, !dbg !20581
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %evport, metadata !20583, metadata !DIExpression()), !dbg !20584
  call void @llvm.dbg.declare(metadata i32* %max_guarantee, metadata !20585, metadata !DIExpression()), !dbg !20586
  store i32 0, i32* %max_guarantee, align 4, !dbg !20586
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20587, metadata !DIExpression()), !dbg !20588
  store i32 0, i32* %i, align 4, !dbg !20589
  br label %for.cond, !dbg !20589

for.cond:                                         ; preds = %for.inc, %cond.end
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20591
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 6, !dbg !20591
  %20 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !20591
  %21 = load i32, i32* %i, align 4, !dbg !20591
  %idxprom = sext i32 %21 to i64, !dbg !20591
  %arrayidx39 = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %20, i64 %idxprom, !dbg !20591
  store %struct.mlx5_vport* %arrayidx39, %struct.mlx5_vport** %evport, align 8, !dbg !20591
  %22 = load i32, i32* %i, align 4, !dbg !20591
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20591
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 8, !dbg !20591
  %24 = load i32, i32* %total_vports, align 4, !dbg !20591
  %cmp = icmp slt i32 %22, %24, !dbg !20591
  br i1 %cmp, label %for.body, label %for.end, !dbg !20589

for.body:                                         ; preds = %for.cond
  %25 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !20593
  %enabled = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %25, i32 0, i32 13, !dbg !20596
  %26 = load i8, i8* %enabled, align 4, !dbg !20596
  %tobool = trunc i8 %26 to i1, !dbg !20596
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !20597

lor.lhs.false:                                    ; preds = %for.body
  %27 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !20598
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %27, i32 0, i32 11, !dbg !20599
  %min_rate = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 5, !dbg !20600
  %28 = load i32, i32* %min_rate, align 4, !dbg !20600
  %29 = load i32, i32* %max_guarantee, align 4, !dbg !20601
  %cmp40 = icmp ult i32 %28, %29, !dbg !20602
  br i1 %cmp40, label %if.then, label %if.end, !dbg !20603

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !20604

if.end:                                           ; preds = %lor.lhs.false
  %30 = load %struct.mlx5_vport*, %struct.mlx5_vport** %evport, align 8, !dbg !20605
  %info41 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %30, i32 0, i32 11, !dbg !20606
  %min_rate42 = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info41, i32 0, i32 5, !dbg !20607
  %31 = load i32, i32* %min_rate42, align 4, !dbg !20607
  store i32 %31, i32* %max_guarantee, align 4, !dbg !20608
  br label %for.inc, !dbg !20609

for.inc:                                          ; preds = %if.end, %if.then
  %32 = load i32, i32* %i, align 4, !dbg !20591
  %inc = add i32 %32, 1, !dbg !20591
  store i32 %inc, i32* %i, align 4, !dbg !20591
  br label %for.cond, !dbg !20591, !llvm.loop !20610

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* %max_guarantee, align 4, !dbg !20612
  %tobool43 = icmp ne i32 %33, 0, !dbg !20612
  br i1 %tobool43, label %if.then44, label %if.end50, !dbg !20614

if.then44:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x735, metadata !20615, metadata !DIExpression()), !dbg !20617
  %34 = load i32, i32* %max_guarantee, align 4, !dbg !20617
  %35 = load i32, i32* %fw_max_bw_share, align 4, !dbg !20617
  %div = udiv i32 %34, %35, !dbg !20617
  store i32 %div, i32* %__UNIQUE_ID___x735, align 4, !dbg !20617
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y736, metadata !20618, metadata !DIExpression()), !dbg !20617
  store i32 1, i32* %__UNIQUE_ID___y736, align 4, !dbg !20617
  %36 = load i32, i32* %__UNIQUE_ID___x735, align 4, !dbg !20617
  %37 = load i32, i32* %__UNIQUE_ID___y736, align 4, !dbg !20617
  %cmp45 = icmp ugt i32 %36, %37, !dbg !20617
  br i1 %cmp45, label %cond.true46, label %cond.false47, !dbg !20617

cond.true46:                                      ; preds = %if.then44
  %38 = load i32, i32* %__UNIQUE_ID___x735, align 4, !dbg !20617
  br label %cond.end48, !dbg !20617

cond.false47:                                     ; preds = %if.then44
  %39 = load i32, i32* %__UNIQUE_ID___y736, align 4, !dbg !20617
  br label %cond.end48, !dbg !20617

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ %38, %cond.true46 ], [ %39, %cond.false47 ], !dbg !20617
  store i32 %cond49, i32* %tmp, align 4, !dbg !20617
  %40 = load i32, i32* %tmp, align 4, !dbg !20617
  store i32 %40, i32* %retval, align 4, !dbg !20619
  br label %return, !dbg !20619

if.end50:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !20620
  br label %return, !dbg !20620

return:                                           ; preds = %if.end50, %cond.end48
  %41 = load i32, i32* %retval, align 4, !dbg !20621
  ret i32 %41, !dbg !20621
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__arch_swab64(i64 %val) #3 !dbg !20622 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !20623, metadata !DIExpression()), !dbg !20624
  %0 = load i64, i64* %val.addr, align 8, !dbg !20625
  %1 = call i64 asm "bswapq $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %0) #13, !dbg !20626, !srcloc !20627
  store i64 %1, i64* %val.addr, align 8, !dbg !20626
  %2 = load i64, i64* %val.addr, align 8, !dbg !20628
  ret i64 %2, !dbg !20629
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_fc_query(%struct.mlx5_core_dev*, %struct.mlx5_fc*, i64*, i64*) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_query_vport_down_stats(%struct.mlx5_core_dev*, i16 zeroext, i8 zeroext, i64*, i64*) #5

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind readnone willreturn }
attributes #3 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind willreturn }
attributes #8 = { noredzone }
attributes #9 = { nounwind }
attributes #10 = { noredzone nounwind readnone }
attributes #11 = { cold noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!11477}
!llvm.module.flags = !{!12272, !12273, !12274, !12275}
!llvm.ident = !{!12276}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__key", scope: !2, file: !3, line: 1766, type: !456, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "mlx5_eswitch_init", scope: !3, file: !3, line: 1721, type: !4, scopeLine: 1722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!3 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/eswitch.c", directory: "/home/lizy2001/genbc/linux")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7}
!6 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_dev", file: !9, line: 670, size: 1467584, elements: !10)
!9 = !DIFile(filename: "./include/linux/mlx5/driver.h", directory: "/home/lizy2001/genbc/linux")
!10 = !{!11, !10088, !10093, !10364, !10365, !10370, !10371, !10372, !10513, !10521, !10539, !10540, !10541, !10587, !10588, !10594, !10595, !10596, !11232, !11246, !11247, !11273, !11276, !11279, !11282, !11292, !11464, !11467, !11470, !11473, !11474}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !8, file: !9, line: 671, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !14, line: 461, size: 5568, elements: !15)
!14 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !9640, !9641, !9644, !9645, !9695, !9787, !9788, !9789, !9790, !9791, !9806, !9907, !9920, !9924, !9925, !9929, !9930, !9931, !9932, !9936, !9942, !9943, !9946, !9950, !10040, !10041, !10042, !10043, !10044, !10076, !10077, !10078, !10081, !10084, !10085, !10086, !10087}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !13, file: !14, line: 462, baseType: !17, size: 512)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !18, line: 64, size: 512, elements: !19)
!18 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!19 = !{!20, !24, !31, !33, !93, !9512, !9634, !9635, !9636, !9637, !9638, !9639}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17, file: !18, line: 65, baseType: !21, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!23 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !17, file: !18, line: 66, baseType: !25, size: 128, offset: 64)
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !26, line: 178, size: 128, elements: !27)
!26 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!27 = !{!28, !30}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !25, file: !26, line: 179, baseType: !29, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !25, file: !26, line: 179, baseType: !29, size: 64, offset: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !17, file: !18, line: 67, baseType: !32, size: 64, offset: 192)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !17, file: !18, line: 68, baseType: !34, size: 64, offset: 256)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!35 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !18, line: 192, size: 704, elements: !36)
!36 = !{!37, !38, !54, !55}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !35, file: !18, line: 193, baseType: !25, size: 128)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !35, file: !18, line: 194, baseType: !39, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !40, line: 83, baseType: !41)
!40 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!41 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !40, line: 71, elements: !42)
!42 = !{!43}
!43 = !DIDerivedType(tag: DW_TAG_member, scope: !41, file: !40, line: 72, baseType: !44)
!44 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !41, file: !40, line: 72, elements: !45)
!45 = !{!46}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !44, file: !40, line: 73, baseType: !47)
!47 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !40, line: 20, elements: !48)
!48 = !{!49}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !47, file: !40, line: 21, baseType: !50)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !51, line: 25, baseType: !52)
!51 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 25, elements: !53)
!53 = !{}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !35, file: !18, line: 195, baseType: !17, size: 512, offset: 128)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !35, file: !18, line: 196, baseType: !56, size: 64, offset: 640)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!58 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !18, line: 156, size: 192, elements: !59)
!59 = !{!60, !65, !70}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !58, file: !18, line: 157, baseType: !61, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!63 = !DISubroutineType(types: !64)
!64 = !{!6, !34, !32}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !58, file: !18, line: 158, baseType: !66, size: 64, offset: 64)
!66 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DISubroutineType(types: !69)
!69 = !{!21, !34, !32}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !58, file: !18, line: 159, baseType: !71, size: 64, offset: 128)
!71 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !72)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DISubroutineType(types: !74)
!74 = !{!6, !34, !32, !75}
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!76 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !18, line: 148, size: 20736, elements: !77)
!77 = !{!78, !83, !87, !88, !92}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !76, file: !18, line: 149, baseType: !79, size: 192)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 192, elements: !81)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!81 = !{!82}
!82 = !DISubrange(count: 3)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !76, file: !18, line: 150, baseType: !84, size: 4096, offset: 192)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 4096, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !76, file: !18, line: 151, baseType: !6, size: 32, offset: 4288)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !76, file: !18, line: 152, baseType: !89, size: 16384, offset: 4320)
!89 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 16384, elements: !90)
!90 = !{!91}
!91 = !DISubrange(count: 2048)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !76, file: !18, line: 153, baseType: !6, size: 32, offset: 20704)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !17, file: !18, line: 69, baseType: !94, size: 64, offset: 320)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !18, line: 138, size: 448, elements: !96)
!96 = !{!97, !101, !131, !133, !9472, !9504, !9508}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !95, file: !18, line: 139, baseType: !98, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!99 = !DISubroutineType(types: !100)
!100 = !{null, !32}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !95, file: !18, line: 140, baseType: !102, size: 64, offset: 64)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !105, line: 230, size: 128, elements: !106)
!105 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !123}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !104, file: !105, line: 231, baseType: !108, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = !DISubroutineType(types: !110)
!110 = !{!111, !32, !116, !80}
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !26, line: 60, baseType: !112)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !113, line: 73, baseType: !114)
!113 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !113, line: 15, baseType: !115)
!115 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !105, line: 30, size: 128, elements: !118)
!118 = !{!119, !120}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !117, file: !105, line: 31, baseType: !21, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !117, file: !105, line: 32, baseType: !121, size: 16, offset: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !26, line: 19, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !104, file: !105, line: 232, baseType: !124, size: 64, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{!111, !32, !116, !21, !127}
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !26, line: 55, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !113, line: 72, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !113, line: 16, baseType: !130)
!130 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !95, file: !18, line: 141, baseType: !132, size: 64, offset: 128)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !95, file: !18, line: 142, baseType: !134, size: 64, offset: 192)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !105, line: 84, size: 320, elements: !138)
!138 = !{!139, !140, !144, !9469, !9470}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !137, file: !105, line: 85, baseType: !21, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !137, file: !105, line: 86, baseType: !141, size: 64, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!142 = !DISubroutineType(types: !143)
!143 = !{!121, !32, !116, !6}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !137, file: !105, line: 88, baseType: !145, size: 64, offset: 128)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DISubroutineType(types: !147)
!147 = !{!121, !32, !148, !6}
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !105, line: 168, size: 448, elements: !150)
!150 = !{!151, !152, !153, !155, !9464, !9465}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !149, file: !105, line: 169, baseType: !117, size: 128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !149, file: !105, line: 170, baseType: !127, size: 64, offset: 128)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !149, file: !105, line: 171, baseType: !154, size: 64, offset: 192)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !149, file: !105, line: 172, baseType: !156, size: 64, offset: 256)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!111, !159, !32, !148, !80, !340, !127}
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !161, line: 916, size: 1856, align: 32, elements: !162)
!161 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!162 = !{!163, !181, !9414, !9415, !9416, !9417, !9426, !9427, !9428, !9429, !9430, !9431, !9447, !9448, !9457, !9458, !9459, !9460, !9461, !9462, !9463}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !160, file: !161, line: 920, baseType: !164, size: 128)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !160, file: !161, line: 917, size: 128, elements: !165)
!165 = !{!166, !172}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !164, file: !161, line: 918, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !168, line: 58, size: 64, elements: !169)
!168 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !167, file: !168, line: 59, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !164, file: !161, line: 919, baseType: !173, size: 128, align: 64)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !26, line: 216, size: 128, align: 64, elements: !174)
!174 = !{!175, !177}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !173, file: !26, line: 217, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !173, file: !26, line: 218, baseType: !178, size: 64, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{null, !176}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !160, file: !161, line: 921, baseType: !182, size: 128, offset: 128)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !183, line: 8, size: 128, elements: !184)
!183 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !189}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !182, file: !183, line: 9, baseType: !186, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !188, line: 18, flags: DIFlagFwdDecl)
!188 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!189 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !182, file: !183, line: 10, baseType: !190, size: 64, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !188, line: 89, size: 1536, elements: !192)
!192 = !{!193, !195, !205, !213, !214, !237, !9384, !9385, !9397, !9398, !9399, !9400, !9401, !9406, !9407, !9408}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !191, file: !188, line: 91, baseType: !194, size: 32)
!194 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !191, file: !188, line: 92, baseType: !196, size: 32, offset: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !197, line: 277, baseType: !198)
!197 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !197, line: 277, size: 32, elements: !199)
!199 = !{!200}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !198, file: !197, line: 277, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !197, line: 70, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !197, line: 65, size: 32, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !202, file: !197, line: 66, baseType: !194, size: 32)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !191, file: !188, line: 93, baseType: !206, size: 128, offset: 64)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !207, line: 38, size: 128, elements: !208)
!207 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!208 = !{!209, !211}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !206, file: !207, line: 39, baseType: !210, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !206, file: !207, line: 39, baseType: !212, size: 64, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !191, file: !188, line: 94, baseType: !190, size: 64, offset: 192)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !191, file: !188, line: 95, baseType: !215, size: 128, offset: 256)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !188, line: 47, size: 128, elements: !216)
!216 = !{!217, !233}
!217 = !DIDerivedType(tag: DW_TAG_member, scope: !215, file: !188, line: 48, baseType: !218, size: 64)
!218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !215, file: !188, line: 48, size: 64, elements: !219)
!219 = !{!220, !229}
!220 = !DIDerivedType(tag: DW_TAG_member, scope: !218, file: !188, line: 49, baseType: !221, size: 64)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !218, file: !188, line: 49, size: 64, elements: !222)
!222 = !{!223, !228}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !221, file: !188, line: 50, baseType: !224, size: 32)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !225, line: 21, baseType: !226)
!225 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !227, line: 27, baseType: !194)
!227 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!228 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !221, file: !188, line: 50, baseType: !224, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !218, file: !188, line: 52, baseType: !230, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !225, line: 23, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !227, line: 31, baseType: !232)
!232 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !215, file: !188, line: 54, baseType: !234, size: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !236)
!236 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !191, file: !188, line: 96, baseType: !238, size: 64, offset: 384)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !161, line: 610, size: 4224, elements: !240)
!240 = !{!241, !242, !243, !251, !258, !259, !407, !9109, !9110, !9111, !9116, !9117, !9118, !9119, !9120, !9121, !9122, !9123, !9124, !9125, !9126, !9127, !9128, !9129, !9130, !9131, !9132, !9133, !9134, !9135, !9140, !9141, !9142, !9143, !9144, !9145, !9146, !9352, !9360, !9361, !9362, !9380, !9381, !9382, !9383}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !239, file: !161, line: 611, baseType: !121, size: 16)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !239, file: !161, line: 612, baseType: !122, size: 16, offset: 16)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !239, file: !161, line: 613, baseType: !244, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !245, line: 23, baseType: !246)
!245 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !245, line: 21, size: 32, elements: !247)
!247 = !{!248}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !246, file: !245, line: 22, baseType: !249, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !26, line: 32, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !113, line: 49, baseType: !194)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !239, file: !161, line: 614, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !245, line: 28, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !245, line: 26, size: 32, elements: !254)
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !253, file: !245, line: 27, baseType: !256, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !26, line: 33, baseType: !257)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !113, line: 50, baseType: !194)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !239, file: !161, line: 615, baseType: !194, size: 32, offset: 96)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !239, file: !161, line: 622, baseType: !260, size: 64, offset: 128)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !161, line: 1864, size: 1536, align: 512, elements: !263)
!263 = !{!264, !268, !281, !285, !291, !295, !301, !305, !309, !313, !317, !318, !324, !328, !354, !383, !387, !393, !398, !402, !403}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !262, file: !161, line: 1865, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DISubroutineType(types: !267)
!267 = !{!190, !238, !190, !194}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !262, file: !161, line: 1866, baseType: !269, size: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{!21, !190, !238, !272}
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !274, line: 10, size: 128, elements: !275)
!274 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!275 = !{!276, !280}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !273, file: !274, line: 11, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{null, !154}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !273, file: !274, line: 12, baseType: !154, size: 64, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !262, file: !161, line: 1867, baseType: !282, size: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!6, !238, !6}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !262, file: !161, line: 1868, baseType: !286, size: 64, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DISubroutineType(types: !288)
!288 = !{!289, !238, !6}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !161, line: 581, flags: DIFlagFwdDecl)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !262, file: !161, line: 1870, baseType: !292, size: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DISubroutineType(types: !294)
!294 = !{!6, !190, !80, !6}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !262, file: !161, line: 1872, baseType: !296, size: 64, offset: 320)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{!6, !238, !190, !121, !299}
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !26, line: 30, baseType: !300)
!300 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !262, file: !161, line: 1873, baseType: !302, size: 64, offset: 384)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{!6, !190, !238, !190}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !262, file: !161, line: 1874, baseType: !306, size: 64, offset: 448)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = !DISubroutineType(types: !308)
!308 = !{!6, !238, !190}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !262, file: !161, line: 1875, baseType: !310, size: 64, offset: 512)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DISubroutineType(types: !312)
!312 = !{!6, !238, !190, !21}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !262, file: !161, line: 1876, baseType: !314, size: 64, offset: 576)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DISubroutineType(types: !316)
!316 = !{!6, !238, !190, !121}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !262, file: !161, line: 1877, baseType: !306, size: 64, offset: 640)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !262, file: !161, line: 1878, baseType: !319, size: 64, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!6, !238, !190, !121, !322}
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !26, line: 16, baseType: !323)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !26, line: 13, baseType: !224)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !262, file: !161, line: 1879, baseType: !325, size: 64, offset: 768)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DISubroutineType(types: !327)
!327 = !{!6, !238, !190, !238, !190, !194}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !262, file: !161, line: 1881, baseType: !329, size: 64, offset: 832)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DISubroutineType(types: !331)
!331 = !{!6, !190, !332}
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !161, line: 219, size: 640, elements: !334)
!334 = !{!335, !336, !337, !338, !339, !343, !351, !352, !353}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !333, file: !161, line: 220, baseType: !194, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !333, file: !161, line: 221, baseType: !121, size: 16, offset: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !333, file: !161, line: 222, baseType: !244, size: 32, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !333, file: !161, line: 223, baseType: !252, size: 32, offset: 96)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !333, file: !161, line: 224, baseType: !340, size: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !26, line: 46, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !113, line: 88, baseType: !342)
!342 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !333, file: !161, line: 225, baseType: !344, size: 128, offset: 192)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !345, line: 13, size: 128, elements: !346)
!345 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!346 = !{!347, !350}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !344, file: !345, line: 14, baseType: !348, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !345, line: 8, baseType: !349)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !227, line: 30, baseType: !342)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !344, file: !345, line: 15, baseType: !115, size: 64, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !333, file: !161, line: 226, baseType: !344, size: 128, offset: 320)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !333, file: !161, line: 227, baseType: !344, size: 128, offset: 448)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !333, file: !161, line: 234, baseType: !159, size: 64, offset: 576)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !262, file: !161, line: 1882, baseType: !355, size: 64, offset: 896)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{!6, !358, !360, !224, !194}
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !362, line: 22, size: 1152, elements: !363)
!362 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!363 = !{!364, !365, !366, !367, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !361, file: !362, line: 23, baseType: !224, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !361, file: !362, line: 24, baseType: !121, size: 16, offset: 32)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !361, file: !362, line: 25, baseType: !194, size: 32, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !361, file: !362, line: 26, baseType: !368, size: 32, offset: 96)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !26, line: 104, baseType: !224)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !361, file: !362, line: 27, baseType: !230, size: 64, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !361, file: !362, line: 28, baseType: !230, size: 64, offset: 192)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !361, file: !362, line: 37, baseType: !230, size: 64, offset: 256)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !361, file: !362, line: 38, baseType: !322, size: 32, offset: 320)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !361, file: !362, line: 39, baseType: !322, size: 32, offset: 352)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !361, file: !362, line: 40, baseType: !244, size: 32, offset: 384)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !361, file: !362, line: 41, baseType: !252, size: 32, offset: 416)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !361, file: !362, line: 42, baseType: !340, size: 64, offset: 448)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !361, file: !362, line: 43, baseType: !344, size: 128, offset: 512)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !361, file: !362, line: 44, baseType: !344, size: 128, offset: 640)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !361, file: !362, line: 45, baseType: !344, size: 128, offset: 768)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !361, file: !362, line: 46, baseType: !344, size: 128, offset: 896)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !361, file: !362, line: 47, baseType: !230, size: 64, offset: 1024)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !361, file: !362, line: 48, baseType: !230, size: 64, offset: 1088)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !262, file: !161, line: 1883, baseType: !384, size: 64, offset: 960)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DISubroutineType(types: !386)
!386 = !{!111, !190, !80, !127}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !262, file: !161, line: 1884, baseType: !388, size: 64, offset: 1024)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{!6, !238, !391, !230, !230}
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !161, line: 50, flags: DIFlagFwdDecl)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !262, file: !161, line: 1886, baseType: !394, size: 64, offset: 1088)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{!6, !238, !397, !6}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !262, file: !161, line: 1887, baseType: !399, size: 64, offset: 1152)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{!6, !238, !190, !159, !194, !121}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !262, file: !161, line: 1890, baseType: !314, size: 64, offset: 1216)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !262, file: !161, line: 1891, baseType: !404, size: 64, offset: 1280)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!6, !238, !289, !6}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !239, file: !161, line: 623, baseType: !408, size: 64, offset: 192)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !161, line: 1416, size: 9472, elements: !410)
!410 = !{!411, !412, !413, !414, !415, !416, !465, !8718, !8806, !8889, !8893, !8894, !8895, !8896, !8897, !8898, !8899, !8900, !8905, !8909, !8910, !8911, !8912, !8915, !8916, !8917, !8958, !8985, !8986, !8987, !8988, !8989, !8990, !8993, !8994, !9000, !9001, !9002, !9003, !9004, !9063, !9064, !9078, !9079, !9080, !9081, !9082, !9083, !9084, !9085, !9100, !9101, !9102, !9103, !9104, !9105, !9106, !9107, !9108}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !409, file: !161, line: 1417, baseType: !25, size: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !409, file: !161, line: 1418, baseType: !322, size: 32, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !409, file: !161, line: 1419, baseType: !236, size: 8, offset: 160)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !409, file: !161, line: 1420, baseType: !130, size: 64, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !409, file: !161, line: 1421, baseType: !340, size: 64, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !409, file: !161, line: 1422, baseType: !417, size: 64, offset: 320)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !161, line: 2228, size: 576, elements: !419)
!419 = !{!420, !421, !422, !428, !432, !436, !440, !444, !445, !455, !458, !459, !460, !462, !463, !464}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !418, file: !161, line: 2229, baseType: !21, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !418, file: !161, line: 2230, baseType: !6, size: 32, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !418, file: !161, line: 2238, baseType: !423, size: 64, offset: 128)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DISubroutineType(types: !425)
!425 = !{!6, !426}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !161, line: 69, flags: DIFlagFwdDecl)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !418, file: !161, line: 2239, baseType: !429, size: 64, offset: 192)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!431 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !161, line: 70, flags: DIFlagFwdDecl)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !418, file: !161, line: 2240, baseType: !433, size: 64, offset: 256)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!190, !417, !6, !21, !154}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !418, file: !161, line: 2242, baseType: !437, size: 64, offset: 320)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = !DISubroutineType(types: !439)
!439 = !{null, !408}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !418, file: !161, line: 2243, baseType: !441, size: 64, offset: 384)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !443, line: 76, flags: DIFlagFwdDecl)
!443 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!444 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !418, file: !161, line: 2244, baseType: !417, size: 64, offset: 448)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !418, file: !161, line: 2245, baseType: !446, size: 64, offset: 512)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !26, line: 182, size: 64, elements: !447)
!447 = !{!448}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !446, file: !26, line: 183, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !26, line: 186, size: 128, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !450, file: !26, line: 187, baseType: !449, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !450, file: !26, line: 187, baseType: !454, size: 64, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !418, file: !161, line: 2247, baseType: !456, offset: 576)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !457, line: 187, elements: !53)
!457 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!458 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !418, file: !161, line: 2248, baseType: !456, offset: 576)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !418, file: !161, line: 2249, baseType: !456, offset: 576)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !418, file: !161, line: 2250, baseType: !461, offset: 576)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, elements: !81)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !418, file: !161, line: 2252, baseType: !456, offset: 576)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !418, file: !161, line: 2253, baseType: !456, offset: 576)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !418, file: !161, line: 2254, baseType: !456, offset: 576)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !409, file: !161, line: 1423, baseType: !466, size: 64, offset: 384)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !161, line: 1935, size: 1472, elements: !469)
!469 = !{!470, !474, !478, !479, !483, !508, !512, !513, !514, !518, !522, !523, !524, !525, !531, !536, !537, !593, !594, !595, !596, !8704, !8717}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !468, file: !161, line: 1936, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!238, !408}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !468, file: !161, line: 1937, baseType: !475, size: 64, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{null, !238}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !468, file: !161, line: 1938, baseType: !475, size: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !468, file: !161, line: 1940, baseType: !480, size: 64, offset: 192)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{null, !238, !6}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !468, file: !161, line: 1941, baseType: !484, size: 64, offset: 256)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!6, !238, !487}
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !489, line: 51, size: 320, elements: !490)
!489 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!490 = !{!491, !492, !493, !494, !495, !500, !501, !502, !503, !504, !505, !506, !507}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !488, file: !489, line: 52, baseType: !115, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !488, file: !489, line: 54, baseType: !115, size: 64, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !488, file: !489, line: 61, baseType: !340, size: 64, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !488, file: !489, line: 62, baseType: !340, size: 64, offset: 192)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !488, file: !489, line: 64, baseType: !496, size: 32, offset: 256)
!496 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !489, line: 41, baseType: !194, size: 32, elements: !497)
!497 = !{!498, !499}
!498 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!499 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !488, file: !489, line: 66, baseType: !194, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !488, file: !489, line: 67, baseType: !194, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !488, file: !489, line: 68, baseType: !194, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !488, file: !489, line: 69, baseType: !194, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !488, file: !489, line: 70, baseType: !194, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !488, file: !489, line: 71, baseType: !194, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !488, file: !489, line: 79, baseType: !194, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !488, file: !489, line: 81, baseType: !194, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !468, file: !161, line: 1942, baseType: !509, size: 64, offset: 320)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DISubroutineType(types: !511)
!511 = !{!6, !238}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !468, file: !161, line: 1943, baseType: !475, size: 64, offset: 384)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !468, file: !161, line: 1944, baseType: !437, size: 64, offset: 448)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !468, file: !161, line: 1945, baseType: !515, size: 64, offset: 512)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!6, !408, !6}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !468, file: !161, line: 1946, baseType: !519, size: 64, offset: 576)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DISubroutineType(types: !521)
!521 = !{!6, !408}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !468, file: !161, line: 1947, baseType: !519, size: 64, offset: 640)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !468, file: !161, line: 1948, baseType: !519, size: 64, offset: 704)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !468, file: !161, line: 1949, baseType: !519, size: 64, offset: 768)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !468, file: !161, line: 1950, baseType: !526, size: 64, offset: 832)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!6, !190, !529}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !161, line: 57, flags: DIFlagFwdDecl)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !468, file: !161, line: 1951, baseType: !532, size: 64, offset: 896)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!6, !408, !535, !80}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !468, file: !161, line: 1952, baseType: !437, size: 64, offset: 960)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !468, file: !161, line: 1954, baseType: !538, size: 64, offset: 1024)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!6, !541, !190}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !543, line: 16, size: 896, elements: !544)
!543 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!544 = !{!545, !546, !547, !548, !549, !550, !551, !552, !566, !588, !589, !592}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !542, file: !543, line: 17, baseType: !80, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !542, file: !543, line: 18, baseType: !127, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !542, file: !543, line: 19, baseType: !127, size: 64, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !542, file: !543, line: 20, baseType: !127, size: 64, offset: 192)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !542, file: !543, line: 21, baseType: !127, size: 64, offset: 256)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !542, file: !543, line: 22, baseType: !340, size: 64, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !542, file: !543, line: 23, baseType: !340, size: 64, offset: 384)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !542, file: !543, line: 24, baseType: !553, size: 192, offset: 448)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !554, line: 53, size: 192, elements: !555)
!554 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!555 = !{!556, !564, !565}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !553, file: !554, line: 54, baseType: !557, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !558, line: 13, baseType: !559)
!558 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !26, line: 175, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !26, line: 173, size: 64, elements: !561)
!561 = !{!562}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !560, file: !26, line: 174, baseType: !563, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !225, line: 22, baseType: !349)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !553, file: !554, line: 55, baseType: !39, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !553, file: !554, line: 59, baseType: !25, size: 128, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !542, file: !543, line: 25, baseType: !567, size: 64, offset: 640)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !543, line: 31, size: 256, elements: !570)
!570 = !{!571, !576, !580, !584}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !569, file: !543, line: 32, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!154, !541, !575}
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !569, file: !543, line: 33, baseType: !577, size: 64, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{null, !541, !154}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !569, file: !543, line: 34, baseType: !581, size: 64, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!154, !541, !154, !575}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !569, file: !543, line: 35, baseType: !585, size: 64, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DISubroutineType(types: !587)
!587 = !{!6, !541, !154}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !542, file: !543, line: 26, baseType: !6, size: 32, offset: 704)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !542, file: !543, line: 27, baseType: !590, size: 64, offset: 768)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !542, file: !543, line: 28, baseType: !154, size: 64, offset: 832)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !468, file: !161, line: 1955, baseType: !538, size: 64, offset: 1088)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !468, file: !161, line: 1956, baseType: !538, size: 64, offset: 1152)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !468, file: !161, line: 1957, baseType: !538, size: 64, offset: 1216)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !468, file: !161, line: 1963, baseType: !597, size: 64, offset: 1280)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DISubroutineType(types: !599)
!599 = !{!6, !408, !600, !623}
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !602, line: 68, size: 512, align: 128, elements: !603)
!602 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!603 = !{!604, !605, !8696, !8703}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !601, file: !602, line: 69, baseType: !130, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, scope: !601, file: !602, line: 77, baseType: !606, size: 320, offset: 64)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !601, file: !602, line: 77, size: 320, elements: !607)
!607 = !{!608, !961, !966, !994, !1002, !1008, !8640, !8695}
!608 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !602, line: 78, baseType: !609, size: 320)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !602, line: 78, size: 320, elements: !610)
!610 = !{!611, !612, !959, !960}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !609, file: !602, line: 84, baseType: !25, size: 128)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !609, file: !602, line: 86, baseType: !613, size: 64, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !161, line: 451, size: 1216, align: 64, elements: !615)
!615 = !{!616, !617, !625, !626, !631, !646, !655, !656, !657, !658, !952, !953, !956, !957, !958}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !614, file: !161, line: 452, baseType: !238, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !614, file: !161, line: 453, baseType: !618, size: 128, offset: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !619, line: 292, size: 128, elements: !620)
!619 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!620 = !{!621, !622, !624}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !618, file: !619, line: 293, baseType: !39)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !618, file: !619, line: 295, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !26, line: 148, baseType: !194)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !618, file: !619, line: 296, baseType: !154, size: 64, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !614, file: !161, line: 454, baseType: !623, size: 32, offset: 192)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !614, file: !161, line: 455, baseType: !627, size: 32, offset: 224)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !26, line: 168, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !26, line: 166, size: 32, elements: !629)
!629 = !{!630}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !628, file: !26, line: 167, baseType: !6, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !614, file: !161, line: 460, baseType: !632, size: 128, offset: 256)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !633, line: 125, size: 128, elements: !634)
!633 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!634 = !{!635, !645}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !632, file: !633, line: 126, baseType: !636, size: 64)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !633, line: 31, size: 64, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !636, file: !633, line: 32, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !633, line: 24, size: 192, align: 64, elements: !641)
!641 = !{!642, !643, !644}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !640, file: !633, line: 25, baseType: !130, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !640, file: !633, line: 26, baseType: !639, size: 64, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !640, file: !633, line: 27, baseType: !639, size: 64, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !632, file: !633, line: 127, baseType: !639, size: 64, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !614, file: !161, line: 461, baseType: !647, size: 256, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !648, line: 35, size: 256, elements: !649)
!648 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!649 = !{!650, !651, !652, !654}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !647, file: !648, line: 36, baseType: !557, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !647, file: !648, line: 42, baseType: !557, size: 64, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !647, file: !648, line: 46, baseType: !653, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !40, line: 29, baseType: !47)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !647, file: !648, line: 47, baseType: !25, size: 128, offset: 128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !614, file: !161, line: 462, baseType: !130, size: 64, offset: 640)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !614, file: !161, line: 463, baseType: !130, size: 64, offset: 704)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !614, file: !161, line: 464, baseType: !130, size: 64, offset: 768)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !614, file: !161, line: 465, baseType: !659, size: 64, offset: 832)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !161, line: 367, size: 1408, elements: !662)
!662 = !{!663, !667, !671, !675, !679, !683, !696, !702, !706, !711, !715, !719, !723, !909, !920, !926, !927, !928, !932, !937, !941, !948}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !661, file: !161, line: 368, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DISubroutineType(types: !666)
!666 = !{!6, !600, !487}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !661, file: !161, line: 369, baseType: !668, size: 64, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DISubroutineType(types: !670)
!670 = !{!6, !159, !600}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !661, file: !161, line: 372, baseType: !672, size: 64, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!6, !613, !487}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !661, file: !161, line: 375, baseType: !676, size: 64, offset: 192)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!6, !600}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !661, file: !161, line: 381, baseType: !680, size: 64, offset: 256)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DISubroutineType(types: !682)
!682 = !{!6, !159, !613, !29, !194}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !661, file: !161, line: 383, baseType: !684, size: 64, offset: 320)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{null, !687}
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !689, line: 795, size: 256, elements: !690)
!689 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!690 = !{!691, !692, !693, !694, !695}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !688, file: !689, line: 796, baseType: !159, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !688, file: !689, line: 797, baseType: !613, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !688, file: !689, line: 799, baseType: !130, size: 64, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !688, file: !689, line: 800, baseType: !194, size: 32, offset: 192)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !688, file: !689, line: 801, baseType: !194, size: 32, offset: 224)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !661, file: !161, line: 385, baseType: !697, size: 64, offset: 384)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!6, !159, !613, !340, !194, !194, !700, !701}
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !661, file: !161, line: 388, baseType: !703, size: 64, offset: 448)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!6, !159, !613, !340, !194, !194, !600, !154}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !661, file: !161, line: 393, baseType: !707, size: 64, offset: 512)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{!710, !613, !710}
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !26, line: 125, baseType: !230)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !661, file: !161, line: 394, baseType: !712, size: 64, offset: 576)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{null, !600, !194, !194}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !661, file: !161, line: 395, baseType: !716, size: 64, offset: 640)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!6, !600, !623}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !661, file: !161, line: 396, baseType: !720, size: 64, offset: 704)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{null, !600}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !661, file: !161, line: 397, baseType: !724, size: 64, offset: 768)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DISubroutineType(types: !726)
!726 = !{!111, !727, !766}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !161, line: 320, size: 384, elements: !729)
!729 = !{!730, !731, !732, !736, !737, !738, !741, !742}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !728, file: !161, line: 321, baseType: !159, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !728, file: !161, line: 326, baseType: !340, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !728, file: !161, line: 327, baseType: !733, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{null, !727, !115, !115}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !728, file: !161, line: 328, baseType: !154, size: 64, offset: 192)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !728, file: !161, line: 329, baseType: !6, size: 32, offset: 256)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !728, file: !161, line: 330, baseType: !739, size: 16, offset: 288)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !225, line: 19, baseType: !740)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !227, line: 24, baseType: !122)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !728, file: !161, line: 331, baseType: !739, size: 16, offset: 304)
!742 = !DIDerivedType(tag: DW_TAG_member, scope: !728, file: !161, line: 332, baseType: !743, size: 64, offset: 320)
!743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !728, file: !161, line: 332, size: 64, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !743, file: !161, line: 333, baseType: !194, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !743, file: !161, line: 334, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !689, line: 569, size: 448, elements: !749)
!749 = !{!750, !751, !752}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !748, file: !689, line: 570, baseType: !600, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !748, file: !689, line: 571, baseType: !6, size: 32, offset: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !748, file: !689, line: 572, baseType: !753, size: 320, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !754, line: 14, baseType: !755)
!754 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !754, line: 29, size: 320, elements: !756)
!756 = !{!757, !758, !759, !765}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !755, file: !754, line: 30, baseType: !194, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !755, file: !754, line: 31, baseType: !154, size: 64, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !755, file: !754, line: 32, baseType: !760, size: 64, offset: 128)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !754, line: 16, baseType: !761)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!6, !764, !194, !6, !154}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !755, file: !754, line: 33, baseType: !25, size: 128, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !768, line: 29, size: 320, elements: !769)
!768 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!769 = !{!770, !771, !772, !773, !900}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !767, file: !768, line: 35, baseType: !194, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !767, file: !768, line: 36, baseType: !127, size: 64, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !767, file: !768, line: 37, baseType: !127, size: 64, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_member, scope: !767, file: !768, line: 38, baseType: !774, size: 64, offset: 192)
!774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !767, file: !768, line: 38, size: 64, elements: !775)
!775 = !{!776, !784, !791, !800}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !774, file: !768, line: 39, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !780, line: 17, size: 128, elements: !781)
!780 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!781 = !{!782, !783}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !779, file: !780, line: 19, baseType: !154, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !779, file: !780, line: 20, baseType: !128, size: 64, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !774, file: !768, line: 40, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !768, line: 15, size: 128, elements: !788)
!788 = !{!789, !790}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !787, file: !768, line: 16, baseType: !154, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !787, file: !768, line: 17, baseType: !127, size: 64, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !774, file: !768, line: 41, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !795, line: 31, size: 128, elements: !796)
!795 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!796 = !{!797, !798, !799}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !794, file: !795, line: 32, baseType: !600, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !794, file: !795, line: 33, baseType: !194, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !794, file: !795, line: 34, baseType: !194, size: 32, offset: 96)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !774, file: !768, line: 42, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !803, line: 57, size: 1088, elements: !804)
!803 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!804 = !{!805, !806, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !841, !842, !869}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !802, file: !803, line: 58, baseType: !553, size: 192)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !802, file: !803, line: 59, baseType: !807, size: 128, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !754, line: 40, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !754, line: 36, size: 128, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !808, file: !754, line: 37, baseType: !39)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !808, file: !754, line: 38, baseType: !25, size: 128)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !802, file: !803, line: 59, baseType: !807, size: 128, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !802, file: !803, line: 60, baseType: !194, size: 32, offset: 448)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !802, file: !803, line: 61, baseType: !194, size: 32, offset: 480)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !802, file: !803, line: 62, baseType: !194, size: 32, offset: 512)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !802, file: !803, line: 63, baseType: !194, size: 32, offset: 544)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !802, file: !803, line: 67, baseType: !194, size: 32, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !802, file: !803, line: 68, baseType: !194, size: 32, offset: 608)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !802, file: !803, line: 69, baseType: !194, size: 32, offset: 640)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !802, file: !803, line: 70, baseType: !194, size: 32, offset: 672)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !802, file: !803, line: 71, baseType: !194, size: 32, offset: 704)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !802, file: !803, line: 72, baseType: !194, size: 32, offset: 736)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !802, file: !803, line: 73, baseType: !600, size: 64, offset: 768)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !802, file: !803, line: 74, baseType: !825, size: 64, offset: 832)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !161, line: 1314, size: 320, elements: !827)
!827 = !{!828, !836, !837, !838, !839, !840}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !826, file: !161, line: 1315, baseType: !829)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !830, line: 20, baseType: !831)
!830 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !830, line: 11, elements: !832)
!832 = !{!833}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !831, file: !830, line: 12, baseType: !834)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !51, line: 33, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !51, line: 31, elements: !53)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !826, file: !161, line: 1316, baseType: !6, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !826, file: !161, line: 1317, baseType: !6, size: 32, offset: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !826, file: !161, line: 1318, baseType: !825, size: 64, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !826, file: !161, line: 1319, baseType: !159, size: 64, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !826, file: !161, line: 1320, baseType: !173, size: 128, align: 64, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !802, file: !803, line: 75, baseType: !825, size: 64, offset: 896)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !802, file: !803, line: 76, baseType: !843, size: 64, offset: 960)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !803, line: 26, size: 320, elements: !845)
!845 = !{!846, !847, !848, !849, !867, !868}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !844, file: !803, line: 27, baseType: !600, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !844, file: !803, line: 28, baseType: !194, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !844, file: !803, line: 28, baseType: !194, size: 32, offset: 96)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !844, file: !803, line: 29, baseType: !850, size: 64, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !803, line: 93, size: 256, elements: !853)
!853 = !{!854, !858, !862, !866}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !852, file: !803, line: 101, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!6, !801, !843}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !852, file: !803, line: 107, baseType: !859, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !801, !843}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !852, file: !803, line: 117, baseType: !863, size: 64, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!299, !801, !843}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !852, file: !803, line: 122, baseType: !863, size: 64, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !844, file: !803, line: 30, baseType: !194, size: 32, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !844, file: !803, line: 31, baseType: !130, size: 64, offset: 256)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !802, file: !803, line: 77, baseType: !870, size: 64, offset: 1024)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !872, line: 13, size: 896, elements: !873)
!872 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!873 = !{!874, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !871, file: !872, line: 14, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !876, line: 113, baseType: !877)
!876 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !876, line: 111, size: 32, elements: !878)
!878 = !{!879}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !877, file: !876, line: 112, baseType: !627, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !871, file: !872, line: 15, baseType: !627, size: 32, offset: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !871, file: !872, line: 16, baseType: !627, size: 32, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !871, file: !872, line: 21, baseType: !557, size: 64, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !871, file: !872, line: 27, baseType: !130, size: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !871, file: !872, line: 28, baseType: !130, size: 64, offset: 256)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !871, file: !872, line: 29, baseType: !557, size: 64, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !871, file: !872, line: 32, baseType: !450, size: 128, offset: 384)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !871, file: !872, line: 33, baseType: !244, size: 32, offset: 512)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !871, file: !872, line: 37, baseType: !557, size: 64, offset: 576)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !871, file: !872, line: 44, baseType: !890, size: 256, offset: 640)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !891, line: 15, size: 256, elements: !892)
!891 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!892 = !{!893, !894, !895, !896, !897, !898, !899}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !890, file: !891, line: 16, baseType: !653)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !890, file: !891, line: 18, baseType: !6, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !890, file: !891, line: 19, baseType: !6, size: 32, offset: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !890, file: !891, line: 20, baseType: !6, size: 32, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !890, file: !891, line: 21, baseType: !6, size: 32, offset: 96)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !890, file: !891, line: 22, baseType: !130, size: 64, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !890, file: !891, line: 23, baseType: !130, size: 64, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_member, scope: !767, file: !768, line: 44, baseType: !901, size: 64, offset: 256)
!901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !767, file: !768, line: 44, size: 64, elements: !902)
!902 = !{!903, !904}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !901, file: !768, line: 45, baseType: !130, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, scope: !901, file: !768, line: 46, baseType: !905, size: 64)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !901, file: !768, line: 46, size: 64, elements: !906)
!906 = !{!907, !908}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !905, file: !768, line: 47, baseType: !194, size: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !905, file: !768, line: 48, baseType: !194, size: 32, offset: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !661, file: !161, line: 402, baseType: !910, size: 64, offset: 832)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!6, !613, !600, !600, !913}
!913 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !914, line: 15, baseType: !194, size: 32, elements: !915)
!914 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!915 = !{!916, !917, !918, !919}
!916 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!917 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!918 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!919 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !661, file: !161, line: 404, baseType: !921, size: 64, offset: 896)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!299, !600, !924}
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !925, line: 305, baseType: !194)
!925 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !661, file: !161, line: 405, baseType: !720, size: 64, offset: 960)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !661, file: !161, line: 406, baseType: !676, size: 64, offset: 1024)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !661, file: !161, line: 407, baseType: !929, size: 64, offset: 1088)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!6, !600, !130, !130}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !661, file: !161, line: 409, baseType: !933, size: 64, offset: 1152)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{null, !600, !936, !936}
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !661, file: !161, line: 410, baseType: !938, size: 64, offset: 1216)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!6, !613, !600}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !661, file: !161, line: 413, baseType: !942, size: 64, offset: 1280)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{!6, !945, !159, !947}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !161, line: 61, flags: DIFlagFwdDecl)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !661, file: !161, line: 415, baseType: !949, size: 64, offset: 1344)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{null, !159}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !614, file: !161, line: 466, baseType: !130, size: 64, offset: 896)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !614, file: !161, line: 467, baseType: !954, size: 32, offset: 960)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !955, line: 8, baseType: !224)
!955 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!956 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !614, file: !161, line: 468, baseType: !39, offset: 992)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !614, file: !161, line: 469, baseType: !25, size: 128, offset: 1024)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !614, file: !161, line: 470, baseType: !154, size: 64, offset: 1152)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !609, file: !602, line: 87, baseType: !130, size: 64, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !609, file: !602, line: 94, baseType: !130, size: 64, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !602, line: 96, baseType: !962, size: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !602, line: 96, size: 64, elements: !963)
!963 = !{!964}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !962, file: !602, line: 101, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !26, line: 143, baseType: !230)
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !602, line: 103, baseType: !967, size: 320)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !602, line: 103, size: 320, elements: !968)
!968 = !{!969, !979, !982, !983}
!969 = !DIDerivedType(tag: DW_TAG_member, scope: !967, file: !602, line: 104, baseType: !970, size: 128)
!970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !967, file: !602, line: 104, size: 128, elements: !971)
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !970, file: !602, line: 105, baseType: !25, size: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, scope: !970, file: !602, line: 106, baseType: !974, size: 128)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !970, file: !602, line: 106, size: 128, elements: !975)
!975 = !{!976, !977, !978}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !974, file: !602, line: 107, baseType: !600, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !974, file: !602, line: 109, baseType: !6, size: 32, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !974, file: !602, line: 110, baseType: !6, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !967, file: !602, line: 117, baseType: !980, size: 64, offset: 128)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !602, line: 117, flags: DIFlagFwdDecl)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !967, file: !602, line: 119, baseType: !154, size: 64, offset: 192)
!983 = !DIDerivedType(tag: DW_TAG_member, scope: !967, file: !602, line: 120, baseType: !984, size: 64, offset: 256)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !967, file: !602, line: 120, size: 64, elements: !985)
!985 = !{!986, !987, !988}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !984, file: !602, line: 121, baseType: !154, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !984, file: !602, line: 122, baseType: !130, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !984, file: !602, line: 123, baseType: !989, size: 32)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !984, file: !602, line: 123, size: 32, elements: !990)
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !989, file: !602, line: 124, baseType: !194, size: 16, flags: DIFlagBitField, extraData: i64 0)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !989, file: !602, line: 125, baseType: !194, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !989, file: !602, line: 126, baseType: !194, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !602, line: 130, baseType: !995, size: 192)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !602, line: 130, size: 192, elements: !996)
!996 = !{!997, !998, !999, !1000, !1001}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !995, file: !602, line: 131, baseType: !130, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !995, file: !602, line: 134, baseType: !236, size: 8, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !995, file: !602, line: 135, baseType: !236, size: 8, offset: 72)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !995, file: !602, line: 136, baseType: !627, size: 32, offset: 96)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !995, file: !602, line: 137, baseType: !194, size: 32, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !602, line: 139, baseType: !1003, size: 256)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !602, line: 139, size: 256, elements: !1004)
!1004 = !{!1005, !1006, !1007}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1003, file: !602, line: 140, baseType: !130, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1003, file: !602, line: 141, baseType: !627, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1003, file: !602, line: 143, baseType: !25, size: 128, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !602, line: 145, baseType: !1009, size: 256)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !602, line: 145, size: 256, elements: !1010)
!1010 = !{!1011, !1012, !1015, !1016, !8639}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1009, file: !602, line: 146, baseType: !130, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1009, file: !602, line: 147, baseType: !1013, size: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1014, line: 509, baseType: !600)
!1014 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1009, file: !602, line: 148, baseType: !130, size: 64, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_member, scope: !1009, file: !602, line: 149, baseType: !1017, size: 64, offset: 192)
!1017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1009, file: !602, line: 149, size: 64, elements: !1018)
!1018 = !{!1019, !8638}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1017, file: !602, line: 150, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !602, line: 388, size: 7296, elements: !1022)
!1022 = !{!1023, !8636}
!1023 = !DIDerivedType(tag: DW_TAG_member, scope: !1021, file: !602, line: 389, baseType: !1024, size: 7296)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1021, file: !602, line: 389, size: 7296, elements: !1025)
!1025 = !{!1026, !1150, !1151, !1152, !1156, !1157, !1158, !1159, !1160, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1201, !1209, !1212, !1252, !1253, !8620, !8621, !8624, !8625, !8626, !8629, !8630, !8631, !8634, !8635}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1024, file: !602, line: 390, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !602, line: 305, size: 1472, elements: !1029)
!1029 = !{!1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1044, !1045, !1050, !1051, !1054, !1144, !1145, !1146, !1147, !1148}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1028, file: !602, line: 308, baseType: !130, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1028, file: !602, line: 309, baseType: !130, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1028, file: !602, line: 313, baseType: !1027, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1028, file: !602, line: 313, baseType: !1027, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1028, file: !602, line: 315, baseType: !640, size: 192, align: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1028, file: !602, line: 323, baseType: !130, size: 64, offset: 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1028, file: !602, line: 327, baseType: !1020, size: 64, offset: 512)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1028, file: !602, line: 333, baseType: !1038, size: 64, offset: 576)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1014, line: 284, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1014, line: 284, size: 64, elements: !1040)
!1040 = !{!1041}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1039, file: !1014, line: 284, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1043, line: 19, baseType: !130)
!1043 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1028, file: !602, line: 334, baseType: !130, size: 64, offset: 640)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1028, file: !602, line: 343, baseType: !1046, size: 256, offset: 704)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !602, line: 340, size: 256, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1046, file: !602, line: 341, baseType: !640, size: 192, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1046, file: !602, line: 342, baseType: !130, size: 64, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1028, file: !602, line: 351, baseType: !25, size: 128, offset: 960)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1028, file: !602, line: 353, baseType: !1052, size: 64, offset: 1088)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !602, line: 353, flags: DIFlagFwdDecl)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1028, file: !602, line: 356, baseType: !1055, size: 64, offset: 1152)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !1058, line: 557, size: 832, elements: !1059)
!1058 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!1059 = !{!1060, !1064, !1065, !1069, !1073, !1113, !1122, !1126, !1130, !1131, !1132, !1136, !1140}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1057, file: !1058, line: 558, baseType: !1061, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !1027}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1057, file: !1058, line: 559, baseType: !1061, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1057, file: !1058, line: 560, baseType: !1066, size: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!6, !1027, !130}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1057, file: !1058, line: 561, baseType: !1070, size: 64, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!6, !1027}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1057, file: !1058, line: 562, baseType: !1074, size: 64, offset: 256)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!1077, !1078}
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !602, line: 682, baseType: !194)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !1058, line: 508, size: 768, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084, !1085, !1086, !1093, !1100, !1106, !1107, !1108, !1110, !1112}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1079, file: !1058, line: 509, baseType: !1027, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1079, file: !1058, line: 510, baseType: !194, size: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1079, file: !1058, line: 511, baseType: !623, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1079, file: !1058, line: 512, baseType: !130, size: 64, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1079, file: !1058, line: 513, baseType: !130, size: 64, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1079, file: !1058, line: 514, baseType: !1087, size: 64, offset: 256)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1014, line: 385, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1014, line: 385, size: 64, elements: !1090)
!1090 = !{!1091}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1089, file: !1014, line: 385, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1043, line: 15, baseType: !130)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1079, file: !1058, line: 516, baseType: !1094, size: 64, offset: 320)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1014, line: 359, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1014, line: 359, size: 64, elements: !1097)
!1097 = !{!1098}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1096, file: !1014, line: 359, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1043, line: 16, baseType: !130)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1079, file: !1058, line: 519, baseType: !1101, size: 64, offset: 384)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1043, line: 21, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1043, line: 21, size: 64, elements: !1103)
!1103 = !{!1104}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1102, file: !1043, line: 21, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1043, line: 14, baseType: !130)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1079, file: !1058, line: 521, baseType: !600, size: 64, offset: 448)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1079, file: !1058, line: 522, baseType: !600, size: 64, offset: 512)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1079, file: !1058, line: 528, baseType: !1109, size: 64, offset: 576)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1079, file: !1058, line: 532, baseType: !1111, size: 64, offset: 640)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1079, file: !1058, line: 536, baseType: !1013, size: 64, offset: 704)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1057, file: !1058, line: 563, baseType: !1114, size: 64, offset: 320)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!1077, !1078, !1117}
!1117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !1058, line: 546, baseType: !194, size: 32, elements: !1118)
!1118 = !{!1119, !1120, !1121}
!1119 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!1120 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!1121 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1057, file: !1058, line: 565, baseType: !1123, size: 64, offset: 384)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !1078, !130, !130}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1057, file: !1058, line: 567, baseType: !1127, size: 64, offset: 448)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!130, !1027}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1057, file: !1058, line: 571, baseType: !1074, size: 64, offset: 512)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1057, file: !1058, line: 574, baseType: !1074, size: 64, offset: 576)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1057, file: !1058, line: 579, baseType: !1133, size: 64, offset: 640)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!6, !1027, !130, !154, !6, !6}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1057, file: !1058, line: 585, baseType: !1137, size: 64, offset: 704)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!21, !1027}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1057, file: !1058, line: 615, baseType: !1141, size: 64, offset: 768)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!600, !1027, !130}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1028, file: !602, line: 359, baseType: !130, size: 64, offset: 1216)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1028, file: !602, line: 361, baseType: !159, size: 64, offset: 1280)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1028, file: !602, line: 362, baseType: !154, size: 64, offset: 1344)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1028, file: !602, line: 365, baseType: !557, size: 64, offset: 1408)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1028, file: !602, line: 373, baseType: !1149, offset: 1472)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !602, line: 296, elements: !53)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1024, file: !602, line: 391, baseType: !636, size: 64, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1024, file: !602, line: 392, baseType: !230, size: 64, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1024, file: !602, line: 394, baseType: !1153, size: 64, offset: 192)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!130, !159, !130, !130, !130, !130}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1024, file: !602, line: 398, baseType: !130, size: 64, offset: 256)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1024, file: !602, line: 399, baseType: !130, size: 64, offset: 320)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1024, file: !602, line: 405, baseType: !130, size: 64, offset: 384)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1024, file: !602, line: 406, baseType: !130, size: 64, offset: 448)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1024, file: !602, line: 407, baseType: !1161, size: 64, offset: 512)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1014, line: 286, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1014, line: 286, size: 64, elements: !1164)
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1163, file: !1014, line: 286, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1043, line: 18, baseType: !130)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1024, file: !602, line: 416, baseType: !627, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1024, file: !602, line: 428, baseType: !627, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1024, file: !602, line: 437, baseType: !627, size: 32, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1024, file: !602, line: 447, baseType: !627, size: 32, offset: 672)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1024, file: !602, line: 450, baseType: !557, size: 64, offset: 704)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1024, file: !602, line: 452, baseType: !6, size: 32, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1024, file: !602, line: 454, baseType: !39, offset: 800)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1024, file: !602, line: 457, baseType: !647, size: 256, offset: 832)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1024, file: !602, line: 459, baseType: !25, size: 128, offset: 1088)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1024, file: !602, line: 466, baseType: !130, size: 64, offset: 1216)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1024, file: !602, line: 467, baseType: !130, size: 64, offset: 1280)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1024, file: !602, line: 469, baseType: !130, size: 64, offset: 1344)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1024, file: !602, line: 470, baseType: !130, size: 64, offset: 1408)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1024, file: !602, line: 471, baseType: !559, size: 64, offset: 1472)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1024, file: !602, line: 472, baseType: !130, size: 64, offset: 1536)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1024, file: !602, line: 473, baseType: !130, size: 64, offset: 1600)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1024, file: !602, line: 474, baseType: !130, size: 64, offset: 1664)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1024, file: !602, line: 475, baseType: !130, size: 64, offset: 1728)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1024, file: !602, line: 477, baseType: !39, offset: 1792)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1024, file: !602, line: 478, baseType: !130, size: 64, offset: 1792)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1024, file: !602, line: 478, baseType: !130, size: 64, offset: 1856)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1024, file: !602, line: 478, baseType: !130, size: 64, offset: 1920)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1024, file: !602, line: 478, baseType: !130, size: 64, offset: 1984)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1024, file: !602, line: 479, baseType: !130, size: 64, offset: 2048)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1024, file: !602, line: 479, baseType: !130, size: 64, offset: 2112)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1024, file: !602, line: 479, baseType: !130, size: 64, offset: 2176)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1024, file: !602, line: 480, baseType: !130, size: 64, offset: 2240)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1024, file: !602, line: 480, baseType: !130, size: 64, offset: 2304)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1024, file: !602, line: 480, baseType: !130, size: 64, offset: 2368)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1024, file: !602, line: 480, baseType: !130, size: 64, offset: 2432)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1024, file: !602, line: 482, baseType: !1198, size: 2816, offset: 2496)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 2816, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: 44)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1024, file: !602, line: 488, baseType: !1202, size: 256, offset: 5312)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1203, line: 60, size: 256, elements: !1204)
!1203 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1202, file: !1203, line: 61, baseType: !1206, size: 256)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !1207)
!1207 = !{!1208}
!1208 = !DISubrange(count: 4)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1024, file: !602, line: 490, baseType: !1210, size: 64, offset: 5568)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !602, line: 490, flags: DIFlagFwdDecl)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1024, file: !602, line: 493, baseType: !1213, size: 896, offset: 5632)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1214, line: 53, baseType: !1215)
!1214 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1214, line: 13, size: 896, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1223, !1224, !1225, !1226, !1246, !1247, !1248}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1215, file: !1214, line: 18, baseType: !230, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1215, file: !1214, line: 28, baseType: !559, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1215, file: !1214, line: 31, baseType: !647, size: 256, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1215, file: !1214, line: 32, baseType: !1221, size: 64, offset: 384)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1214, line: 32, flags: DIFlagFwdDecl)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1215, file: !1214, line: 37, baseType: !122, size: 16, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1215, file: !1214, line: 40, baseType: !553, size: 192, offset: 512)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1215, file: !1214, line: 41, baseType: !154, size: 64, offset: 704)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1215, file: !1214, line: 42, baseType: !1227, size: 64, offset: 768)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1230, line: 13, size: 896, elements: !1231)
!1230 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1231 = !{!1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1229, file: !1230, line: 14, baseType: !154, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1229, file: !1230, line: 15, baseType: !130, size: 64, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1229, file: !1230, line: 17, baseType: !130, size: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1229, file: !1230, line: 17, baseType: !130, size: 64, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1229, file: !1230, line: 19, baseType: !115, size: 64, offset: 256)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1229, file: !1230, line: 21, baseType: !115, size: 64, offset: 320)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1229, file: !1230, line: 22, baseType: !115, size: 64, offset: 384)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1229, file: !1230, line: 23, baseType: !115, size: 64, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1229, file: !1230, line: 24, baseType: !115, size: 64, offset: 512)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1229, file: !1230, line: 25, baseType: !115, size: 64, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1229, file: !1230, line: 26, baseType: !115, size: 64, offset: 640)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1229, file: !1230, line: 27, baseType: !115, size: 64, offset: 704)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1229, file: !1230, line: 28, baseType: !115, size: 64, offset: 768)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1229, file: !1230, line: 29, baseType: !115, size: 64, offset: 832)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1215, file: !1214, line: 44, baseType: !627, size: 32, offset: 832)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1215, file: !1214, line: 50, baseType: !739, size: 16, offset: 864)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1215, file: !1214, line: 51, baseType: !1249, size: 16, offset: 880)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !225, line: 18, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !227, line: 23, baseType: !1251)
!1251 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1024, file: !602, line: 495, baseType: !130, size: 64, offset: 6528)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1024, file: !602, line: 497, baseType: !1254, size: 64, offset: 6592)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !602, line: 381, size: 384, elements: !1256)
!1256 = !{!1257, !1258, !8619}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1255, file: !602, line: 382, baseType: !627, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1255, file: !602, line: 383, baseType: !1259, size: 128, offset: 64)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !602, line: 376, size: 128, elements: !1260)
!1260 = !{!1261, !8617}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1259, file: !602, line: 377, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1264, line: 640, size: 48640, elements: !1265)
!1264 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1265 = !{!1266, !1272, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1287, !1305, !1316, !1406, !1407, !1408, !1419, !1420, !1422, !1423, !1424, !1425, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1515, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1844, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1878, !1883, !1934, !1935, !1936, !1937, !1941, !1944, !1947, !1950, !1953, !7280, !7376, !7405, !7406, !7407, !7408, !7409, !7410, !7411, !7412, !7413, !7422, !7423, !7424, !7425, !7426, !7431, !7432, !7433, !7436, !7437, !8277, !8286, !8289, !8290, !8291, !8294, !8295, !8374, !8375, !8378, !8379, !8382, !8383, !8384, !8388, !8389, !8390, !8403, !8404, !8405, !8415, !8420, !8421, !8422, !8423, !8424, !8425, !8426, !8427, !8428, !8429, !8443, !8444, !8445, !8446, !8447, !8448, !8449, !8450, !8451}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1263, file: !1264, line: 646, baseType: !1267, size: 128)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1268, line: 56, size: 128, elements: !1269)
!1268 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1269 = !{!1270, !1271}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1267, file: !1268, line: 57, baseType: !130, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1267, file: !1268, line: 58, baseType: !224, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1263, file: !1264, line: 649, baseType: !1273, size: 64, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !115)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1263, file: !1264, line: 657, baseType: !154, size: 64, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1263, file: !1264, line: 658, baseType: !875, size: 32, offset: 256)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1263, file: !1264, line: 660, baseType: !194, size: 32, offset: 288)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1263, file: !1264, line: 661, baseType: !194, size: 32, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1263, file: !1264, line: 684, baseType: !6, size: 32, offset: 352)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1263, file: !1264, line: 686, baseType: !6, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1263, file: !1264, line: 687, baseType: !6, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1263, file: !1264, line: 688, baseType: !6, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1263, file: !1264, line: 689, baseType: !194, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1263, file: !1264, line: 691, baseType: !1284, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1286)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1264, line: 691, flags: DIFlagFwdDecl)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1263, file: !1264, line: 692, baseType: !1288, size: 832, offset: 576)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1264, line: 451, size: 832, elements: !1289)
!1289 = !{!1290, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1288, file: !1264, line: 453, baseType: !1291, size: 128)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1264, line: 325, size: 128, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1291, file: !1264, line: 326, baseType: !130, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1291, file: !1264, line: 327, baseType: !224, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1288, file: !1264, line: 454, baseType: !640, size: 192, align: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1288, file: !1264, line: 455, baseType: !25, size: 128, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1288, file: !1264, line: 456, baseType: !194, size: 32, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1288, file: !1264, line: 458, baseType: !230, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1288, file: !1264, line: 459, baseType: !230, size: 64, offset: 576)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1288, file: !1264, line: 460, baseType: !230, size: 64, offset: 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1288, file: !1264, line: 461, baseType: !230, size: 64, offset: 704)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1288, file: !1264, line: 463, baseType: !230, size: 64, offset: 768)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1288, file: !1264, line: 465, baseType: !1304, offset: 832)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1264, line: 415, elements: !53)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1263, file: !1264, line: 693, baseType: !1306, size: 384, offset: 1408)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1264, line: 489, size: 384, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1306, file: !1264, line: 490, baseType: !25, size: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1306, file: !1264, line: 491, baseType: !130, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1306, file: !1264, line: 492, baseType: !130, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1306, file: !1264, line: 493, baseType: !194, size: 32, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1306, file: !1264, line: 494, baseType: !122, size: 16, offset: 288)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1306, file: !1264, line: 495, baseType: !122, size: 16, offset: 304)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1306, file: !1264, line: 497, baseType: !1315, size: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1263, file: !1264, line: 697, baseType: !1317, size: 1792, offset: 1792)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1264, line: 507, size: 1792, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1403, !1404}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1317, file: !1264, line: 508, baseType: !640, size: 192, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1317, file: !1264, line: 515, baseType: !230, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1317, file: !1264, line: 516, baseType: !230, size: 64, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1317, file: !1264, line: 517, baseType: !230, size: 64, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1317, file: !1264, line: 518, baseType: !230, size: 64, offset: 384)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1317, file: !1264, line: 519, baseType: !230, size: 64, offset: 448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1317, file: !1264, line: 526, baseType: !563, size: 64, offset: 512)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1317, file: !1264, line: 527, baseType: !230, size: 64, offset: 576)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1317, file: !1264, line: 528, baseType: !194, size: 32, offset: 640)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1317, file: !1264, line: 554, baseType: !194, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1317, file: !1264, line: 555, baseType: !194, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1317, file: !1264, line: 556, baseType: !194, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1317, file: !1264, line: 557, baseType: !194, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1317, file: !1264, line: 563, baseType: !1333, size: 512, offset: 704)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !1334, line: 118, size: 512, elements: !1335)
!1334 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!1335 = !{!1336, !1344, !1345, !1354, !1397, !1400, !1401, !1402}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1333, file: !1334, line: 119, baseType: !1337, size: 256)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1338, line: 9, size: 256, elements: !1339)
!1338 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1339 = !{!1340, !1341}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1337, file: !1338, line: 10, baseType: !640, size: 192, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1337, file: !1338, line: 11, baseType: !1342, size: 64, offset: 192)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1343, line: 29, baseType: !563)
!1343 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1333, file: !1334, line: 120, baseType: !1342, size: 64, offset: 256)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1333, file: !1334, line: 121, baseType: !1346, size: 64, offset: 320)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!1349, !1353}
!1349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !1334, line: 65, baseType: !194, size: 32, elements: !1350)
!1350 = !{!1351, !1352}
!1351 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!1352 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1333, file: !1334, line: 122, baseType: !1355, size: 64, offset: 384)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !1334, line: 159, size: 512, align: 512, elements: !1357)
!1357 = !{!1358, !1378, !1379, !1382, !1387, !1388, !1392, !1396}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1356, file: !1334, line: 160, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !1334, line: 214, size: 4608, align: 512, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1360, file: !1334, line: 215, baseType: !653)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1360, file: !1334, line: 216, baseType: !194, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1360, file: !1334, line: 217, baseType: !194, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1360, file: !1334, line: 218, baseType: !194, size: 32, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1360, file: !1334, line: 219, baseType: !194, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1360, file: !1334, line: 220, baseType: !194, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1360, file: !1334, line: 221, baseType: !194, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1360, file: !1334, line: 222, baseType: !194, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1360, file: !1334, line: 233, baseType: !1342, size: 64, offset: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1360, file: !1334, line: 234, baseType: !1353, size: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1360, file: !1334, line: 235, baseType: !1342, size: 64, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1360, file: !1334, line: 236, baseType: !1353, size: 64, offset: 320)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1360, file: !1334, line: 237, baseType: !1375, size: 4096, offset: 512)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 4096, elements: !1376)
!1376 = !{!1377}
!1377 = !DISubrange(count: 8)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1356, file: !1334, line: 161, baseType: !194, size: 32, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1356, file: !1334, line: 162, baseType: !1380, size: 32, offset: 96)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !26, line: 27, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !113, line: 96, baseType: !6)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1356, file: !1334, line: 163, baseType: !1383, size: 32, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !197, line: 276, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !197, line: 276, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1384, file: !197, line: 276, baseType: !201, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1356, file: !1334, line: 164, baseType: !1353, size: 64, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1356, file: !1334, line: 165, baseType: !1389, size: 128, offset: 256)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1338, line: 14, size: 128, elements: !1390)
!1390 = !{!1391}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1389, file: !1338, line: 15, baseType: !632, size: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1356, file: !1334, line: 166, baseType: !1393, size: 64, offset: 384)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!1342}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1356, file: !1334, line: 167, baseType: !1342, size: 64, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1333, file: !1334, line: 123, baseType: !1398, size: 8, offset: 448)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !225, line: 17, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !227, line: 21, baseType: !236)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1333, file: !1334, line: 124, baseType: !1398, size: 8, offset: 456)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1333, file: !1334, line: 125, baseType: !1398, size: 8, offset: 464)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1333, file: !1334, line: 126, baseType: !1398, size: 8, offset: 472)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1317, file: !1264, line: 572, baseType: !1333, size: 512, offset: 1216)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1317, file: !1264, line: 580, baseType: !1405, size: 64, offset: 1728)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1263, file: !1264, line: 721, baseType: !194, size: 32, offset: 3584)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1263, file: !1264, line: 722, baseType: !6, size: 32, offset: 3616)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1263, file: !1264, line: 723, baseType: !1409, size: 64, offset: 3648)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1412, line: 17, baseType: !1413)
!1412 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1412, line: 17, size: 64, elements: !1414)
!1414 = !{!1415}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1413, file: !1412, line: 17, baseType: !1416, size: 64)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 64, elements: !1417)
!1417 = !{!1418}
!1418 = !DISubrange(count: 1)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1263, file: !1264, line: 724, baseType: !1411, size: 64, offset: 3712)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1263, file: !1264, line: 749, baseType: !1421, offset: 3776)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1264, line: 290, elements: !53)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1263, file: !1264, line: 751, baseType: !25, size: 128, offset: 3776)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1263, file: !1264, line: 757, baseType: !1020, size: 64, offset: 3904)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1263, file: !1264, line: 758, baseType: !1020, size: 64, offset: 3968)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1263, file: !1264, line: 761, baseType: !1426, size: 320, offset: 4032)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1203, line: 34, size: 320, elements: !1427)
!1427 = !{!1428, !1429}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1426, file: !1203, line: 35, baseType: !230, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1426, file: !1203, line: 36, baseType: !1430, size: 256, offset: 64)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 256, elements: !1207)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1263, file: !1264, line: 766, baseType: !6, size: 32, offset: 4352)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1263, file: !1264, line: 767, baseType: !6, size: 32, offset: 4384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1263, file: !1264, line: 768, baseType: !6, size: 32, offset: 4416)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1263, file: !1264, line: 770, baseType: !6, size: 32, offset: 4448)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1263, file: !1264, line: 772, baseType: !130, size: 64, offset: 4480)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1263, file: !1264, line: 775, baseType: !194, size: 32, offset: 4544)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1263, file: !1264, line: 778, baseType: !194, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1263, file: !1264, line: 779, baseType: !194, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1263, file: !1264, line: 780, baseType: !194, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1263, file: !1264, line: 803, baseType: !194, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1263, file: !1264, line: 806, baseType: !194, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1263, file: !1264, line: 807, baseType: !194, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1263, file: !1264, line: 809, baseType: !194, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1263, file: !1264, line: 815, baseType: !194, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1263, file: !1264, line: 831, baseType: !130, size: 64, offset: 4672)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1263, file: !1264, line: 833, baseType: !1447, size: 384, offset: 4736)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !1448, line: 25, size: 384, elements: !1449)
!1448 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!1449 = !{!1450, !1455}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1447, file: !1448, line: 26, baseType: !1451, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!115, !1454}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, scope: !1447, file: !1448, line: 27, baseType: !1456, size: 320, offset: 64)
!1456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1447, file: !1448, line: 27, size: 320, elements: !1457)
!1457 = !{!1458, !1468, !1500}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1456, file: !1448, line: 36, baseType: !1459, size: 320)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1456, file: !1448, line: 29, size: 320, elements: !1460)
!1460 = !{!1461, !1463, !1464, !1465, !1466, !1467}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1459, file: !1448, line: 30, baseType: !1462, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1459, file: !1448, line: 31, baseType: !224, size: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1459, file: !1448, line: 32, baseType: !224, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1459, file: !1448, line: 33, baseType: !224, size: 32, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1459, file: !1448, line: 34, baseType: !230, size: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1459, file: !1448, line: 35, baseType: !1462, size: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1456, file: !1448, line: 46, baseType: !1469, size: 192)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1456, file: !1448, line: 38, size: 192, elements: !1470)
!1470 = !{!1471, !1472, !1478, !1499}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1469, file: !1448, line: 39, baseType: !1380, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1469, file: !1448, line: 40, baseType: !1473, size: 32, offset: 32)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !1448, line: 16, baseType: !194, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477}
!1475 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!1476 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!1477 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!1478 = !DIDerivedType(tag: DW_TAG_member, scope: !1469, file: !1448, line: 41, baseType: !1479, size: 64, offset: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1469, file: !1448, line: 41, size: 64, elements: !1480)
!1480 = !{!1481, !1489}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1479, file: !1448, line: 42, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1484, line: 7, size: 128, elements: !1485)
!1484 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1485 = !{!1486, !1488}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1483, file: !1484, line: 8, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !113, line: 93, baseType: !342)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1483, file: !1484, line: 9, baseType: !342, size: 64, offset: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1479, file: !1448, line: 43, baseType: !1490, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1492, line: 7, size: 64, elements: !1493)
!1492 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1493 = !{!1494, !1498}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1491, file: !1492, line: 8, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1492, line: 5, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !225, line: 20, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !227, line: 26, baseType: !6)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1491, file: !1492, line: 9, baseType: !1496, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1469, file: !1448, line: 45, baseType: !230, size: 64, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1456, file: !1448, line: 54, baseType: !1501, size: 256)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1456, file: !1448, line: 48, size: 256, elements: !1502)
!1502 = !{!1503, !1511, !1512, !1513, !1514}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1501, file: !1448, line: 49, baseType: !1504, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1506, line: 36, size: 64, elements: !1507)
!1506 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1507 = !{!1508, !1509, !1510}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1505, file: !1506, line: 37, baseType: !6, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1505, file: !1506, line: 38, baseType: !1251, size: 16, offset: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1505, file: !1506, line: 39, baseType: !1251, size: 16, offset: 48)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1501, file: !1448, line: 50, baseType: !6, size: 32, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1501, file: !1448, line: 51, baseType: !6, size: 32, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1501, file: !1448, line: 52, baseType: !130, size: 64, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1501, file: !1448, line: 53, baseType: !130, size: 64, offset: 192)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1263, file: !1264, line: 835, baseType: !1516, size: 32, offset: 5120)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !26, line: 22, baseType: !1517)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !113, line: 28, baseType: !6)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1263, file: !1264, line: 836, baseType: !1516, size: 32, offset: 5152)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1263, file: !1264, line: 840, baseType: !130, size: 64, offset: 5184)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1263, file: !1264, line: 849, baseType: !1262, size: 64, offset: 5248)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1263, file: !1264, line: 852, baseType: !1262, size: 64, offset: 5312)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1263, file: !1264, line: 857, baseType: !25, size: 128, offset: 5376)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1263, file: !1264, line: 858, baseType: !25, size: 128, offset: 5504)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1263, file: !1264, line: 859, baseType: !1262, size: 64, offset: 5632)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1263, file: !1264, line: 867, baseType: !25, size: 128, offset: 5696)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1263, file: !1264, line: 868, baseType: !25, size: 128, offset: 5824)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1263, file: !1264, line: 871, baseType: !1528, size: 64, offset: 5952)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1530, line: 59, size: 768, elements: !1531)
!1530 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1531 = !{!1532, !1533, !1534, !1535, !1537, !1538, !1539, !1540}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1529, file: !1530, line: 61, baseType: !875, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1529, file: !1530, line: 62, baseType: !194, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1529, file: !1530, line: 63, baseType: !39, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1529, file: !1530, line: 65, baseType: !1536, size: 256, offset: 64)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 256, elements: !1207)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1529, file: !1530, line: 66, baseType: !446, size: 64, offset: 320)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1529, file: !1530, line: 68, baseType: !807, size: 128, offset: 384)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1529, file: !1530, line: 69, baseType: !173, size: 128, align: 64, offset: 512)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1529, file: !1530, line: 70, baseType: !1541, size: 128, offset: 640)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 128, elements: !1417)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1530, line: 54, size: 128, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1542, file: !1530, line: 55, baseType: !6, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1542, file: !1530, line: 56, baseType: !1546, size: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1548, line: 20, size: 1088, elements: !1549)
!1548 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1549 = !{!1550, !1555, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1841, !1842, !1843}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1547, file: !1548, line: 21, baseType: !1551, size: 32)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1552, line: 19, size: 32, elements: !1553)
!1552 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1553 = !{!1554}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1551, file: !1552, line: 20, baseType: !875, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1547, file: !1548, line: 22, baseType: !1556, size: 192, offset: 64)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1557, line: 19, size: 192, elements: !1558)
!1557 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1558 = !{!1559, !1560, !1561}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1556, file: !1557, line: 20, baseType: !618, size: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1556, file: !1557, line: 21, baseType: !194, size: 32, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1556, file: !1557, line: 22, baseType: !194, size: 32, offset: 160)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1547, file: !1548, line: 23, baseType: !173, size: 128, align: 64, offset: 256)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1547, file: !1548, line: 24, baseType: !194, size: 32, offset: 384)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1547, file: !1548, line: 25, baseType: !1262, size: 64, offset: 448)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1547, file: !1548, line: 26, baseType: !980, size: 64, offset: 512)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1547, file: !1548, line: 27, baseType: !194, size: 32, offset: 576)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1547, file: !1548, line: 28, baseType: !1546, size: 64, offset: 640)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1547, file: !1548, line: 32, baseType: !1569, size: 64, offset: 704)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1571, line: 56, size: 4160, elements: !1572)
!1571 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1572 = !{!1573, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1612, !1613, !1614, !1721, !1722, !1734, !1826, !1827, !1839}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1570, file: !1571, line: 57, baseType: !1574, size: 576)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1571, line: 23, size: 576, elements: !1575)
!1575 = !{!1576, !1577}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1574, file: !1571, line: 24, baseType: !224, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, scope: !1574, file: !1571, line: 25, baseType: !1578, size: 512, offset: 64)
!1578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1574, file: !1571, line: 25, size: 512, elements: !1579)
!1579 = !{!1580, !1589}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1578, file: !1571, line: 26, baseType: !1581, size: 480)
!1581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1582, size: 480, elements: !1587)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1571, line: 17, size: 96, elements: !1583)
!1583 = !{!1584, !1585, !1586}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1582, file: !1571, line: 18, baseType: !224, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1582, file: !1571, line: 19, baseType: !224, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1582, file: !1571, line: 20, baseType: !224, size: 32, offset: 64)
!1587 = !{!1588}
!1588 = !DISubrange(count: 5)
!1589 = !DIDerivedType(tag: DW_TAG_member, scope: !1578, file: !1571, line: 27, baseType: !1590, size: 128)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1578, file: !1571, line: 27, size: 128, elements: !1591)
!1591 = !{!1592, !1594}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1590, file: !1571, line: 28, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1590, file: !1571, line: 29, baseType: !1593, size: 64, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1570, file: !1571, line: 58, baseType: !1574, size: 576, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1570, file: !1571, line: 59, baseType: !1574, size: 576, offset: 1152)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1570, file: !1571, line: 60, baseType: !627, size: 32, offset: 1728)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1570, file: !1571, line: 61, baseType: !1569, size: 64, offset: 1792)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1570, file: !1571, line: 62, baseType: !6, size: 32, offset: 1856)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1570, file: !1571, line: 63, baseType: !244, size: 32, offset: 1888)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1570, file: !1571, line: 64, baseType: !252, size: 32, offset: 1920)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1570, file: !1571, line: 65, baseType: !1603, size: 192, offset: 1984)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1604, line: 7, size: 192, elements: !1605)
!1604 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1605 = !{!1606, !1607, !1611}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1603, file: !1604, line: 8, baseType: !557, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1603, file: !1604, line: 9, baseType: !1608, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1604, line: 5, flags: DIFlagFwdDecl)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1603, file: !1604, line: 10, baseType: !194, size: 32, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1570, file: !1571, line: 66, baseType: !130, size: 64, offset: 2176)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1570, file: !1571, line: 74, baseType: !25, size: 128, offset: 2240)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1570, file: !1571, line: 75, baseType: !1615, size: 64, offset: 2368)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1617, line: 189, size: 1664, elements: !1618)
!1617 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1618 = !{!1619, !1620, !1623, !1628, !1629, !1632, !1633, !1638, !1639, !1640, !1641, !1643, !1644, !1645, !1646, !1647, !1685, !1706}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1616, file: !1617, line: 190, baseType: !875, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1616, file: !1617, line: 191, baseType: !1621, size: 32, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1617, line: 28, baseType: !1622)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !26, line: 98, baseType: !1496)
!1623 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1617, line: 192, baseType: !1624, size: 192, offset: 64)
!1624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !1617, line: 192, size: 192, elements: !1625)
!1625 = !{!1626, !1627}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1624, file: !1617, line: 193, baseType: !25, size: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1624, file: !1617, line: 194, baseType: !640, size: 192, align: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1616, file: !1617, line: 199, baseType: !647, size: 256, offset: 256)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1616, file: !1617, line: 200, baseType: !1630, size: 64, offset: 512)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1617, line: 200, flags: DIFlagFwdDecl)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1616, file: !1617, line: 201, baseType: !154, size: 64, offset: 576)
!1633 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1617, line: 202, baseType: !1634, size: 64, offset: 640)
!1634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !1617, line: 202, size: 64, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1634, file: !1617, line: 203, baseType: !348, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1634, file: !1617, line: 204, baseType: !348, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1616, file: !1617, line: 206, baseType: !348, size: 64, offset: 704)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1616, file: !1617, line: 207, baseType: !244, size: 32, offset: 768)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1616, file: !1617, line: 208, baseType: !252, size: 32, offset: 800)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1616, file: !1617, line: 209, baseType: !1642, size: 32, offset: 832)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1617, line: 31, baseType: !368)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1616, file: !1617, line: 210, baseType: !122, size: 16, offset: 864)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1616, file: !1617, line: 211, baseType: !122, size: 16, offset: 880)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1616, file: !1617, line: 215, baseType: !1251, size: 16, offset: 896)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1616, file: !1617, line: 222, baseType: !130, size: 64, offset: 960)
!1647 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1617, line: 239, baseType: !1648, size: 320, offset: 1024)
!1648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !1617, line: 239, size: 320, elements: !1649)
!1649 = !{!1650, !1677}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1648, file: !1617, line: 240, baseType: !1651, size: 320)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1617, line: 108, size: 320, elements: !1652)
!1652 = !{!1653, !1654, !1666, !1669, !1676}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1651, file: !1617, line: 110, baseType: !130, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, scope: !1651, file: !1617, line: 111, baseType: !1655, size: 64, offset: 64)
!1655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1651, file: !1617, line: 111, size: 64, elements: !1656)
!1656 = !{!1657, !1665}
!1657 = !DIDerivedType(tag: DW_TAG_member, scope: !1655, file: !1617, line: 112, baseType: !1658, size: 64)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1655, file: !1617, line: 112, size: 64, elements: !1659)
!1659 = !{!1660, !1661}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1658, file: !1617, line: 114, baseType: !739, size: 16)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1658, file: !1617, line: 115, baseType: !1662, size: 48, offset: 16)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 48, elements: !1663)
!1663 = !{!1664}
!1664 = !DISubrange(count: 6)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1655, file: !1617, line: 121, baseType: !130, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1651, file: !1617, line: 123, baseType: !1667, size: 64, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1617, line: 96, flags: DIFlagFwdDecl)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1651, file: !1617, line: 124, baseType: !1670, size: 64, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1617, line: 102, size: 192, elements: !1672)
!1672 = !{!1673, !1674, !1675}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1671, file: !1617, line: 103, baseType: !173, size: 128, align: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1671, file: !1617, line: 104, baseType: !875, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1671, file: !1617, line: 105, baseType: !299, size: 8, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1651, file: !1617, line: 125, baseType: !21, size: 64, offset: 256)
!1677 = !DIDerivedType(tag: DW_TAG_member, scope: !1648, file: !1617, line: 241, baseType: !1678, size: 320)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1648, file: !1617, line: 241, size: 320, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1678, file: !1617, line: 242, baseType: !130, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1678, file: !1617, line: 243, baseType: !130, size: 64, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1678, file: !1617, line: 244, baseType: !1667, size: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1678, file: !1617, line: 245, baseType: !1670, size: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1678, file: !1617, line: 246, baseType: !80, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1617, line: 254, baseType: !1686, size: 256, offset: 1344)
!1686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !1617, line: 254, size: 256, elements: !1687)
!1687 = !{!1688, !1694}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1686, file: !1617, line: 255, baseType: !1689, size: 256)
!1689 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1617, line: 128, size: 256, elements: !1690)
!1690 = !{!1691, !1692}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1689, file: !1617, line: 129, baseType: !154, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1689, file: !1617, line: 130, baseType: !1693, size: 256)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 256, elements: !1207)
!1694 = !DIDerivedType(tag: DW_TAG_member, scope: !1686, file: !1617, line: 256, baseType: !1695, size: 256)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1686, file: !1617, line: 256, size: 256, elements: !1696)
!1696 = !{!1697, !1698}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1695, file: !1617, line: 258, baseType: !25, size: 128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1695, file: !1617, line: 259, baseType: !1699, size: 128, offset: 128)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1700, line: 22, size: 128, elements: !1701)
!1700 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1701 = !{!1702, !1705}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1699, file: !1700, line: 23, baseType: !1703, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1700, line: 23, flags: DIFlagFwdDecl)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1699, file: !1700, line: 24, baseType: !130, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1616, file: !1617, line: 274, baseType: !1707, size: 64, offset: 1600)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1617, line: 170, size: 192, elements: !1709)
!1709 = !{!1710, !1719, !1720}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1708, file: !1617, line: 171, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1617, line: 165, baseType: !1712)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!6, !1615, !1715, !1717, !1615}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1689)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1708, file: !1617, line: 172, baseType: !1615, size: 64, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1708, file: !1617, line: 173, baseType: !1667, size: 64, offset: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1570, file: !1571, line: 76, baseType: !647, size: 256, offset: 2432)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1570, file: !1571, line: 83, baseType: !1723, size: 256, offset: 2688)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1724, line: 102, size: 256, elements: !1725)
!1724 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1725 = !{!1726, !1727, !1728}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1723, file: !1724, line: 103, baseType: !557, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1723, file: !1724, line: 104, baseType: !25, size: 128, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1723, file: !1724, line: 105, baseType: !1729, size: 64, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1724, line: 21, baseType: !1730)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{null, !1733}
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1570, file: !1571, line: 85, baseType: !1735, size: 768, offset: 2944)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1736, line: 156, size: 768, elements: !1737)
!1736 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1737 = !{!1738, !1743}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1735, file: !1736, line: 157, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!6, !1742}
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1735, file: !1736, line: 158, baseType: !1744, size: 704, offset: 64)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1736, line: 150, size: 704, elements: !1745)
!1745 = !{!1746, !1825}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1744, file: !1736, line: 152, baseType: !1747, size: 640)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1736, line: 131, size: 640, elements: !1748)
!1748 = !{!1749, !1782, !1794, !1795, !1815, !1816, !1818, !1824}
!1749 = !DIDerivedType(tag: DW_TAG_member, scope: !1747, file: !1736, line: 132, baseType: !1750, size: 192)
!1750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1747, file: !1736, line: 132, size: 192, elements: !1751)
!1751 = !{!1752, !1781}
!1752 = !DIDerivedType(tag: DW_TAG_member, scope: !1750, file: !1736, line: 133, baseType: !1753, size: 192)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1750, file: !1736, line: 133, size: 192, elements: !1754)
!1754 = !{!1755, !1778, !1779, !1780}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1753, file: !1736, line: 134, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1736, line: 112, size: 512, elements: !1758)
!1758 = !{!1759, !1760, !1761, !1762, !1763, !1764, !1770, !1776, !1777}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1757, file: !1736, line: 113, baseType: !21, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1757, file: !1736, line: 114, baseType: !154, size: 64, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1757, file: !1736, line: 115, baseType: !6, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1757, file: !1736, line: 116, baseType: !121, size: 16, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1757, file: !1736, line: 117, baseType: !1756, size: 64, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1757, file: !1736, line: 118, baseType: !1765, size: 64, offset: 256)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1736, line: 47, baseType: !1767)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!6, !1756, !6, !154, !1769, !575}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1757, file: !1736, line: 119, baseType: !1771, size: 64, offset: 320)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1736, line: 94, size: 192, elements: !1773)
!1773 = !{!1774, !1775}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1772, file: !1736, line: 95, baseType: !627, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1772, file: !1736, line: 96, baseType: !807, size: 128, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1757, file: !1736, line: 120, baseType: !154, size: 64, offset: 384)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1757, file: !1736, line: 121, baseType: !154, size: 64, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1753, file: !1736, line: 135, baseType: !6, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1753, file: !1736, line: 136, baseType: !6, size: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1753, file: !1736, line: 137, baseType: !6, size: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1750, file: !1736, line: 139, baseType: !173, size: 128, align: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1747, file: !1736, line: 141, baseType: !1783, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1785, line: 26, size: 192, elements: !1786)
!1785 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1786 = !{!1787, !1788}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1784, file: !1785, line: 27, baseType: !194, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1784, file: !1785, line: 28, baseType: !1789, size: 128, offset: 64)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1790, line: 43, size: 128, elements: !1791)
!1790 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1789, file: !1790, line: 44, baseType: !653)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1789, file: !1790, line: 45, baseType: !25, size: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1747, file: !1736, line: 142, baseType: !1756, size: 64, offset: 256)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1747, file: !1736, line: 143, baseType: !1796, size: 64, offset: 320)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1736, line: 161, size: 960, elements: !1798)
!1798 = !{!1799, !1800, !1804, !1811}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1797, file: !1736, line: 162, baseType: !1735, size: 768)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1797, file: !1736, line: 163, baseType: !1801, size: 64, offset: 768)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!1742, !1796}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1797, file: !1736, line: 164, baseType: !1805, size: 64, offset: 832)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{null, !1808, !1756, !1809, !1810}
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1797, file: !1736, line: 167, baseType: !1812, size: 64, offset: 896)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!6, !1808, !1756}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1747, file: !1736, line: 144, baseType: !1742, size: 64, offset: 384)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1747, file: !1736, line: 145, baseType: !1817, size: 64, offset: 448)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1747, file: !1736, line: 146, baseType: !1819, size: 64, offset: 512)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1736, line: 124, size: 256, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1820, file: !1736, line: 125, baseType: !640, size: 192, align: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1820, file: !1736, line: 126, baseType: !1808, size: 64, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1747, file: !1736, line: 147, baseType: !446, size: 64, offset: 576)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1744, file: !1736, line: 153, baseType: !636, size: 64, offset: 640)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1570, file: !1571, line: 86, baseType: !1808, size: 64, offset: 3712)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1570, file: !1571, line: 88, baseType: !1828, size: 64, offset: 3776)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1571, line: 92, size: 576, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1829, file: !1571, line: 93, baseType: !450, size: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1829, file: !1571, line: 94, baseType: !1569, size: 64, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1829, file: !1571, line: 95, baseType: !244, size: 32, offset: 192)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1829, file: !1571, line: 96, baseType: !6, size: 32, offset: 224)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1829, file: !1571, line: 97, baseType: !1836, size: 320, offset: 256)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !627, size: 320, elements: !1837)
!1837 = !{!1838}
!1838 = !DISubrange(count: 10)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1570, file: !1571, line: 89, baseType: !1840, size: 320, offset: 3840)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 320, elements: !1837)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1547, file: !1548, line: 33, baseType: !1828, size: 64, offset: 768)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1547, file: !1548, line: 34, baseType: !6, size: 32, offset: 832)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1547, file: !1548, line: 35, baseType: !1603, size: 192, offset: 896)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1263, file: !1264, line: 872, baseType: !1845, size: 512, offset: 6016)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 512, elements: !1207)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1263, file: !1264, line: 873, baseType: !25, size: 128, offset: 6528)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1263, file: !1264, line: 874, baseType: !25, size: 128, offset: 6656)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1263, file: !1264, line: 876, baseType: !1783, size: 64, offset: 6784)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1263, file: !1264, line: 879, baseType: !535, size: 64, offset: 6848)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1263, file: !1264, line: 882, baseType: !535, size: 64, offset: 6912)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1263, file: !1264, line: 884, baseType: !230, size: 64, offset: 6976)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1263, file: !1264, line: 885, baseType: !230, size: 64, offset: 7040)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1263, file: !1264, line: 890, baseType: !230, size: 64, offset: 7104)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1263, file: !1264, line: 891, baseType: !1855, size: 128, offset: 7168)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1264, line: 242, size: 128, elements: !1856)
!1856 = !{!1857, !1858, !1859}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1855, file: !1264, line: 244, baseType: !230, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1855, file: !1264, line: 245, baseType: !230, size: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1855, file: !1264, line: 246, baseType: !653, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1263, file: !1264, line: 900, baseType: !130, size: 64, offset: 7296)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1263, file: !1264, line: 901, baseType: !130, size: 64, offset: 7360)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1263, file: !1264, line: 904, baseType: !230, size: 64, offset: 7424)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1263, file: !1264, line: 907, baseType: !230, size: 64, offset: 7488)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1263, file: !1264, line: 910, baseType: !130, size: 64, offset: 7552)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1263, file: !1264, line: 911, baseType: !130, size: 64, offset: 7616)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1263, file: !1264, line: 914, baseType: !1867, size: 640, offset: 7680)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1868, line: 123, size: 640, elements: !1869)
!1868 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1869 = !{!1870, !1876, !1877}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1867, file: !1868, line: 124, baseType: !1871, size: 576)
!1871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1872, size: 576, elements: !81)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1868, line: 108, size: 192, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1872, file: !1868, line: 109, baseType: !230, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1872, file: !1868, line: 110, baseType: !1389, size: 128, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1867, file: !1868, line: 125, baseType: !194, size: 32, offset: 576)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1867, file: !1868, line: 126, baseType: !194, size: 32, offset: 608)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1263, file: !1264, line: 917, baseType: !1879, size: 192, offset: 8320)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1868, line: 134, size: 192, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1879, file: !1868, line: 135, baseType: !173, size: 128, align: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1879, file: !1868, line: 136, baseType: !194, size: 32, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1263, file: !1264, line: 923, baseType: !1884, size: 64, offset: 8512)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1887, line: 111, size: 1280, elements: !1888)
!1887 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1929}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1886, file: !1887, line: 112, baseType: !627, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1886, file: !1887, line: 120, baseType: !244, size: 32, offset: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1886, file: !1887, line: 121, baseType: !252, size: 32, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1886, file: !1887, line: 122, baseType: !244, size: 32, offset: 96)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1886, file: !1887, line: 123, baseType: !252, size: 32, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1886, file: !1887, line: 124, baseType: !244, size: 32, offset: 160)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1886, file: !1887, line: 125, baseType: !252, size: 32, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1886, file: !1887, line: 126, baseType: !244, size: 32, offset: 224)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1886, file: !1887, line: 127, baseType: !252, size: 32, offset: 256)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1886, file: !1887, line: 128, baseType: !194, size: 32, offset: 288)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1886, file: !1887, line: 129, baseType: !1900, size: 64, offset: 320)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1901, line: 26, baseType: !1902)
!1901 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1901, line: 24, size: 64, elements: !1903)
!1903 = !{!1904}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1902, file: !1901, line: 25, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 64, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 2)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1886, file: !1887, line: 130, baseType: !1900, size: 64, offset: 384)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1886, file: !1887, line: 131, baseType: !1900, size: 64, offset: 448)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1886, file: !1887, line: 132, baseType: !1900, size: 64, offset: 512)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1886, file: !1887, line: 133, baseType: !1900, size: 64, offset: 576)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1886, file: !1887, line: 135, baseType: !236, size: 8, offset: 640)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1886, file: !1887, line: 137, baseType: !1615, size: 64, offset: 704)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1886, file: !1887, line: 138, baseType: !1615, size: 64, offset: 768)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1886, file: !1887, line: 139, baseType: !1615, size: 64, offset: 832)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1886, file: !1887, line: 140, baseType: !1615, size: 64, offset: 896)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1886, file: !1887, line: 145, baseType: !870, size: 64, offset: 960)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1886, file: !1887, line: 146, baseType: !1569, size: 64, offset: 1024)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1886, file: !1887, line: 147, baseType: !1920, size: 64, offset: 1088)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1887, line: 25, size: 64, elements: !1922)
!1922 = !{!1923, !1924, !1925}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1921, file: !1887, line: 26, baseType: !627, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1921, file: !1887, line: 27, baseType: !6, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1921, file: !1887, line: 28, baseType: !1926, offset: 64)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, elements: !1927)
!1927 = !{!1928}
!1928 = !DISubrange(count: 0)
!1929 = !DIDerivedType(tag: DW_TAG_member, scope: !1886, file: !1887, line: 149, baseType: !1930, size: 128, offset: 1152)
!1930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1886, file: !1887, line: 149, size: 128, elements: !1931)
!1931 = !{!1932, !1933}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1930, file: !1887, line: 150, baseType: !6, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1930, file: !1887, line: 151, baseType: !173, size: 128, align: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1263, file: !1264, line: 926, baseType: !1884, size: 64, offset: 8576)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1263, file: !1264, line: 929, baseType: !1884, size: 64, offset: 8640)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1263, file: !1264, line: 933, baseType: !1615, size: 64, offset: 8704)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1263, file: !1264, line: 943, baseType: !1938, size: 128, offset: 8768)
!1938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 128, elements: !1939)
!1939 = !{!1940}
!1940 = !DISubrange(count: 16)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1263, file: !1264, line: 945, baseType: !1942, size: 64, offset: 8896)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1264, line: 49, flags: DIFlagFwdDecl)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1263, file: !1264, line: 956, baseType: !1945, size: 64, offset: 8960)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1264, line: 45, flags: DIFlagFwdDecl)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1263, file: !1264, line: 959, baseType: !1948, size: 64, offset: 9024)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1264, line: 959, flags: DIFlagFwdDecl)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1263, file: !1264, line: 962, baseType: !1951, size: 64, offset: 9088)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1264, line: 66, flags: DIFlagFwdDecl)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1263, file: !1264, line: 966, baseType: !1954, size: 64, offset: 9152)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1956, line: 31, size: 576, elements: !1957)
!1956 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1957 = !{!1958, !1959, !1962, !1965, !1968, !1969, !7263, !7266, !7267}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1955, file: !1956, line: 32, baseType: !627, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1955, file: !1956, line: 33, baseType: !1960, size: 64, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1956, line: 9, flags: DIFlagFwdDecl)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1955, file: !1956, line: 34, baseType: !1963, size: 64, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1956, line: 10, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1955, file: !1956, line: 35, baseType: !1966, size: 64, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1956, line: 8, flags: DIFlagFwdDecl)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1955, file: !1956, line: 36, baseType: !1546, size: 64, offset: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1955, file: !1956, line: 37, baseType: !1970, size: 64, offset: 320)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1972, line: 56, size: 16896, elements: !1973)
!1972 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1973 = !{!1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1995, !1996, !1997, !6687, !6688, !6691, !6693, !6694, !6709, !6710, !6711, !6712, !6722, !6777, !6783, !6789, !6802, !7107, !7197, !7198, !7212, !7235, !7236, !7262}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !1971, file: !1972, line: 60, baseType: !875, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1971, file: !1972, line: 63, baseType: !875, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !1971, file: !1972, line: 66, baseType: !39, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !1971, file: !1972, line: 68, baseType: !194, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !1971, file: !1972, line: 70, baseType: !194, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !1971, file: !1972, line: 71, baseType: !6, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !1971, file: !1972, line: 73, baseType: !39, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !1971, file: !1972, line: 74, baseType: !627, size: 32, offset: 160)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1971, file: !1972, line: 76, baseType: !25, size: 128, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !1971, file: !1972, line: 77, baseType: !25, size: 128, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !1971, file: !1972, line: 83, baseType: !167, size: 64, offset: 448)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !1971, file: !1972, line: 86, baseType: !1670, size: 64, offset: 512)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1971, file: !1972, line: 88, baseType: !1569, size: 64, offset: 576)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1971, file: !1972, line: 89, baseType: !1828, size: 64, offset: 640)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !1971, file: !1972, line: 90, baseType: !1556, size: 192, offset: 704)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1971, file: !1972, line: 92, baseType: !1603, size: 192, offset: 896)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !1971, file: !1972, line: 94, baseType: !25, size: 128, offset: 1088)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !1971, file: !1972, line: 95, baseType: !1992, size: 64, offset: 1216)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1994, line: 17, flags: DIFlagFwdDecl)
!1994 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !1971, file: !1972, line: 96, baseType: !1992, size: 64, offset: 1280)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1971, file: !1972, line: 99, baseType: !1735, size: 768, offset: 1344)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !1971, file: !1972, line: 102, baseType: !1998, size: 64, offset: 2112)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !2000, line: 347, size: 5568, elements: !2001)
!2000 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!2001 = !{!2002, !6439, !6446, !6447, !6448, !6449, !6450, !6451, !6458, !6459, !6460, !6461, !6462, !6469, !6482, !6483, !6484, !6485, !6486, !6487, !6488, !6489, !6494, !6495, !6496, !6497, !6498, !6499, !6500, !6501, !6502, !6503, !6504, !6505, !6506, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519, !6520, !6521, !6522, !6523, !6524, !6525, !6526, !6527, !6528, !6529, !6530, !6531, !6532, !6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540, !6541, !6542, !6543, !6544, !6545, !6546, !6547, !6548, !6670, !6671, !6674, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6686}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !1999, file: !2000, line: 352, baseType: !2003, size: 1088)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !2000, line: 162, size: 1088, elements: !2004)
!2004 = !{!2005, !2017, !2023, !2034, !2035, !2037, !2038, !2039, !2040, !2041, !2042, !2047, !6394, !6395, !6396, !6397, !6398, !6410, !6412, !6424, !6425, !6431, !6432, !6433}
!2005 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 166, baseType: !2006, size: 64)
!2006 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 166, size: 64, elements: !2007)
!2007 = !{!2008, !2010}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !2006, file: !2000, line: 167, baseType: !2009, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !2000, line: 115, baseType: !231)
!2010 = !DIDerivedType(tag: DW_TAG_member, scope: !2006, file: !2000, line: 168, baseType: !2011, size: 64)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2006, file: !2000, line: 168, size: 64, elements: !2012)
!2012 = !{!2013, !2016}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !2011, file: !2000, line: 169, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !2015, line: 32, baseType: !226)
!2015 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !2011, file: !2000, line: 170, baseType: !2014, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 173, baseType: !2018, size: 32, offset: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 173, size: 32, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !2018, file: !2000, line: 174, baseType: !194, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !2018, file: !2000, line: 175, baseType: !2022, size: 32)
!2022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 32, elements: !1906)
!2023 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 178, baseType: !2024, size: 32, offset: 96)
!2024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 178, size: 32, elements: !2025)
!2025 = !{!2026, !2028}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !2024, file: !2000, line: 179, baseType: !2027, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !2000, line: 114, baseType: !226)
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2024, file: !2000, line: 180, baseType: !2029, size: 32)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2024, file: !2000, line: 180, size: 32, elements: !2030)
!2030 = !{!2031, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !2029, file: !2000, line: 181, baseType: !2032, size: 16)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !2015, line: 30, baseType: !740)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !2029, file: !2000, line: 182, baseType: !740, size: 16, offset: 16)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !2003, file: !2000, line: 186, baseType: !122, size: 16, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !2003, file: !2000, line: 187, baseType: !2036, size: 8, offset: 144)
!2036 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !236)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !2003, file: !2000, line: 188, baseType: !236, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !2003, file: !2000, line: 189, baseType: !236, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !2003, file: !2000, line: 190, baseType: !236, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !2003, file: !2000, line: 191, baseType: !236, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !2003, file: !2000, line: 192, baseType: !6, size: 32, offset: 160)
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 193, baseType: !2043, size: 128, offset: 192)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 193, size: 128, elements: !2044)
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !2043, file: !2000, line: 194, baseType: !450, size: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !2043, file: !2000, line: 195, baseType: !450, size: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !2003, file: !2000, line: 197, baseType: !2048, size: 64, offset: 320)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !2000, line: 1127, size: 3264, elements: !2050)
!2050 = !{!2051, !2055, !2071, !2072, !2076, !2080, !2084, !2088, !2092, !2096, !2110, !2114, !2115, !2134, !2138, !2142, !2143, !2144, !6252, !6253, !6254, !6255, !6256, !6260, !6261, !6267, !6271, !6272, !6273, !6275, !6277, !6278, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6290, !6291, !6292, !6293, !6349, !6362, !6390, !6391, !6392, !6393}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2049, file: !2000, line: 1128, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{null, !1998, !115}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !2049, file: !2000, line: 1130, baseType: !2056, size: 64, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!6, !1998, !2059, !6}
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !2061, line: 32, size: 128, elements: !2062)
!2061 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!2062 = !{!2063, !2067}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !2060, file: !2061, line: 33, baseType: !2064, size: 16)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !2061, line: 26, baseType: !2065)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !2066, line: 10, baseType: !122)
!2066 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !2060, file: !2061, line: 34, baseType: !2068, size: 112, offset: 16)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 112, elements: !2069)
!2069 = !{!2070}
!2070 = !DISubrange(count: 14)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !2049, file: !2000, line: 1133, baseType: !2056, size: 64, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !2049, file: !2000, line: 1136, baseType: !2073, size: 64, offset: 192)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!6, !1998, !6}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !2049, file: !2000, line: 1138, baseType: !2077, size: 64, offset: 256)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!1998, !1998, !6, !535, !299}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2049, file: !2000, line: 1141, baseType: !2081, size: 64, offset: 320)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!6, !1998, !6, !130}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2049, file: !2000, line: 1143, baseType: !2085, size: 64, offset: 384)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!6, !1998}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2049, file: !2000, line: 1144, baseType: !2089, size: 64, offset: 448)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{null, !1998}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2049, file: !2000, line: 1145, baseType: !2093, size: 64, offset: 512)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{null, !1998, !6}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !2049, file: !2000, line: 1146, baseType: !2097, size: 64, offset: 576)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!6, !1998, !6, !6, !2100, !194}
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !2101, line: 20, baseType: !2102)
!2101 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2101, line: 14, size: 128, elements: !2103)
!2103 = !{!2104, !2109}
!2104 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !2101, line: 15, baseType: !2105, size: 64)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !2101, line: 15, size: 64, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !2105, file: !2101, line: 16, baseType: !154, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2105, file: !2101, line: 17, baseType: !154, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !2102, file: !2101, line: 19, baseType: !299, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !2049, file: !2000, line: 1149, baseType: !2111, size: 64, offset: 640)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!6, !1998, !6, !6, !80, !535}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !2049, file: !2000, line: 1152, baseType: !2093, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !2049, file: !2000, line: 1157, baseType: !2116, size: 64, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!6, !1998, !2119, !127}
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !2061, line: 50, size: 768, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125, !2130, !2131, !2132, !2133}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !2120, file: !2061, line: 51, baseType: !154, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !2120, file: !2061, line: 52, baseType: !6, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !2120, file: !2061, line: 53, baseType: !767, size: 320, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !2061, line: 60, baseType: !2126, size: 64, offset: 448)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !2061, line: 60, size: 64, elements: !2127)
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !2126, file: !2061, line: 61, baseType: !154, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !2126, file: !2061, line: 62, baseType: !154, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !2120, file: !2061, line: 64, baseType: !299, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !2120, file: !2061, line: 65, baseType: !128, size: 64, offset: 576)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !2120, file: !2061, line: 66, baseType: !194, size: 32, offset: 640)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !2120, file: !2061, line: 67, baseType: !727, size: 64, offset: 704)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !2049, file: !2000, line: 1159, baseType: !2135, size: 64, offset: 832)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!6, !1998, !2119, !127, !6, !6, !535}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2049, file: !2000, line: 1162, baseType: !2139, size: 64, offset: 896)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!6, !1998, !600, !6, !127, !6}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !2049, file: !2000, line: 1164, baseType: !2056, size: 64, offset: 960)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !2049, file: !2000, line: 1166, baseType: !2056, size: 64, offset: 1024)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !2049, file: !2000, line: 1169, baseType: !2145, size: 64, offset: 1088)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{!6, !1998, !2148}
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !2150, line: 713, size: 1600, elements: !2151)
!2150 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!2151 = !{!2152, !6147, !6152, !6157, !6159, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207, !6217, !6218, !6219, !6220, !6221, !6222, !6227, !6232, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245, !6247, !6248, !6249, !6250, !6251}
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 714, baseType: !2153, size: 192)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 714, size: 192, elements: !2154)
!2154 = !{!2155, !6145, !6146}
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2153, file: !2150, line: 715, baseType: !2156, size: 192)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2153, file: !2150, line: 715, size: 192, elements: !2157)
!2157 = !{!2158, !2159, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2156, file: !2150, line: 717, baseType: !2148, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2156, file: !2150, line: 718, baseType: !2148, size: 64, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, scope: !2156, file: !2150, line: 720, baseType: !2161, size: 64, offset: 128)
!2161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2156, file: !2150, line: 720, size: 64, elements: !2162)
!2162 = !{!2163, !6144}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2161, file: !2150, line: 721, baseType: !2164, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !2166, line: 1858, size: 15808, elements: !2167)
!2166 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!2167 = !{!2168, !2169, !2177, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2202, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2239, !2240, !2241, !2242, !2243, !2244, !2248, !2251, !4250, !4816, !5392, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5465, !5468, !5469, !5472, !5475, !5476, !5489, !5490, !5491, !5492, !5493, !5494, !5507, !5508, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5964, !5965, !5970, !5971, !5972, !5973, !6010, !6011, !6013, !6014, !6083, !6084, !6085, !6086, !6092, !6094, !6097, !6100, !6102, !6103, !6104, !6105, !6106, !6135, !6136}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2165, file: !2166, line: 1859, baseType: !1938, size: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !2165, file: !2166, line: 1860, baseType: !2170, size: 64, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !2166, line: 938, size: 384, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !2171, file: !2166, line: 939, baseType: !450, size: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2171, file: !2166, line: 940, baseType: !25, size: 128, offset: 128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2171, file: !2166, line: 941, baseType: !2164, size: 64, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2171, file: !2166, line: 942, baseType: !21, size: 64, offset: 320)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !2165, file: !2166, line: 1861, baseType: !2178, size: 64, offset: 192)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !2166, line: 930, size: 128, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !2179, file: !2166, line: 931, baseType: !173, size: 128, align: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !2179, file: !2166, line: 932, baseType: !2183, offset: 128)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, elements: !2184)
!2184 = !{!2185}
!2185 = !DISubrange(count: -1)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !2165, file: !2166, line: 1866, baseType: !130, size: 64, offset: 256)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !2165, file: !2166, line: 1867, baseType: !130, size: 64, offset: 320)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !2165, file: !2166, line: 1868, baseType: !130, size: 64, offset: 384)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2165, file: !2166, line: 1869, baseType: !6, size: 32, offset: 448)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2165, file: !2166, line: 1877, baseType: !130, size: 64, offset: 512)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !2165, file: !2166, line: 1879, baseType: !25, size: 128, offset: 576)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !2165, file: !2166, line: 1880, baseType: !25, size: 128, offset: 704)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !2165, file: !2166, line: 1881, baseType: !25, size: 128, offset: 832)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !2165, file: !2166, line: 1882, baseType: !25, size: 128, offset: 960)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !2165, file: !2166, line: 1883, baseType: !25, size: 128, offset: 1088)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !2165, file: !2166, line: 1884, baseType: !25, size: 128, offset: 1216)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !2165, file: !2166, line: 1889, baseType: !2198, size: 256, offset: 1344)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2165, file: !2166, line: 1886, size: 256, elements: !2199)
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !2198, file: !2166, line: 1887, baseType: !25, size: 128)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !2198, file: !2166, line: 1888, baseType: !25, size: 128, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !2165, file: !2166, line: 1891, baseType: !2203, size: 64, offset: 1600)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !2204, line: 12, baseType: !230)
!2204 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !2165, file: !2166, line: 1892, baseType: !2203, size: 64, offset: 1664)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !2165, file: !2166, line: 1893, baseType: !2203, size: 64, offset: 1728)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !2165, file: !2166, line: 1894, baseType: !2203, size: 64, offset: 1792)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !2165, file: !2166, line: 1895, baseType: !2203, size: 64, offset: 1856)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !2165, file: !2166, line: 1896, baseType: !2203, size: 64, offset: 1920)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !2165, file: !2166, line: 1897, baseType: !2203, size: 64, offset: 1984)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2165, file: !2166, line: 1899, baseType: !6, size: 32, offset: 2048)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2165, file: !2166, line: 1900, baseType: !6, size: 32, offset: 2080)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2165, file: !2166, line: 1902, baseType: !2214, size: 1472, offset: 2112)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !2166, line: 169, size: 1472, elements: !2215)
!2215 = !{!2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !2214, file: !2166, line: 170, baseType: !130, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !2214, file: !2166, line: 171, baseType: !130, size: 64, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !2214, file: !2166, line: 172, baseType: !130, size: 64, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !2214, file: !2166, line: 173, baseType: !130, size: 64, offset: 192)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !2214, file: !2166, line: 174, baseType: !130, size: 64, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !2214, file: !2166, line: 175, baseType: !130, size: 64, offset: 320)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2214, file: !2166, line: 176, baseType: !130, size: 64, offset: 384)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2214, file: !2166, line: 177, baseType: !130, size: 64, offset: 448)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !2214, file: !2166, line: 178, baseType: !130, size: 64, offset: 512)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2214, file: !2166, line: 179, baseType: !130, size: 64, offset: 576)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !2214, file: !2166, line: 180, baseType: !130, size: 64, offset: 640)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !2214, file: !2166, line: 181, baseType: !130, size: 64, offset: 704)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !2214, file: !2166, line: 182, baseType: !130, size: 64, offset: 768)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !2214, file: !2166, line: 183, baseType: !130, size: 64, offset: 832)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !2214, file: !2166, line: 184, baseType: !130, size: 64, offset: 896)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !2214, file: !2166, line: 185, baseType: !130, size: 64, offset: 960)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !2214, file: !2166, line: 186, baseType: !130, size: 64, offset: 1024)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !2214, file: !2166, line: 187, baseType: !130, size: 64, offset: 1088)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !2214, file: !2166, line: 188, baseType: !130, size: 64, offset: 1152)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !2214, file: !2166, line: 189, baseType: !130, size: 64, offset: 1216)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !2214, file: !2166, line: 190, baseType: !130, size: 64, offset: 1280)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !2214, file: !2166, line: 191, baseType: !130, size: 64, offset: 1344)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !2214, file: !2166, line: 192, baseType: !130, size: 64, offset: 1408)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2165, file: !2166, line: 1904, baseType: !557, size: 64, offset: 3584)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2165, file: !2166, line: 1905, baseType: !557, size: 64, offset: 3648)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !2165, file: !2166, line: 1906, baseType: !557, size: 64, offset: 3712)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !2165, file: !2166, line: 1909, baseType: !627, size: 32, offset: 3776)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !2165, file: !2166, line: 1910, baseType: !627, size: 32, offset: 3808)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !2165, file: !2166, line: 1913, baseType: !2245, size: 64, offset: 3840)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!2247 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !2166, line: 1913, flags: DIFlagFwdDecl)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !2165, file: !2166, line: 1914, baseType: !2249, size: 64, offset: 3904)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !2166, line: 1914, flags: DIFlagFwdDecl)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !2165, file: !2166, line: 1916, baseType: !2252, size: 64, offset: 3968)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2254)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !2166, line: 1283, size: 4416, elements: !2255)
!2255 = !{!2256, !2260, !2264, !2265, !2266, !2276, !2280, !2284, !2288, !2289, !2293, !2294, !2405, !2410, !2414, !2684, !2688, !2720, !2724, !2728, !2733, !2737, !2738, !2743, !2747, !2751, !2755, !2756, !2776, !2780, !2795, !2801, !2805, !2814, !2818, !2819, !2843, !2847, !2851, !2855, !2859, !2863, !2867, !2871, !2886, !2890, !2934, !2938, !2943, !2947, !2951, !2955, !2964, !2965, !2969, !2981, !2982, !2986, !2990, !2994, !2998, !2999, !3003, !3004, !3839, !3859, !3863, !4216, !4246}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !2254, file: !2166, line: 1284, baseType: !2257, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{!6, !2164}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !2254, file: !2166, line: 1285, baseType: !2261, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{null, !2164}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !2254, file: !2166, line: 1286, baseType: !2257, size: 64, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !2254, file: !2166, line: 1287, baseType: !2257, size: 64, offset: 192)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !2254, file: !2166, line: 1288, baseType: !2267, size: 64, offset: 256)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!2270, !2148, !2164}
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !2166, line: 120, baseType: !2271)
!2271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !2166, line: 115, baseType: !6, size: 32, elements: !2272)
!2272 = !{!2273, !2274, !2275}
!2273 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!2274 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!2275 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !2254, file: !2166, line: 1290, baseType: !2277, size: 64, offset: 320)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!2203, !2148, !2164, !2203}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !2254, file: !2166, line: 1293, baseType: !2281, size: 64, offset: 384)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!739, !2164, !2148, !2164}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !2254, file: !2166, line: 1296, baseType: !2285, size: 64, offset: 448)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{null, !2164, !6}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !2254, file: !2166, line: 1298, baseType: !2261, size: 64, offset: 512)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !2254, file: !2166, line: 1299, baseType: !2290, size: 64, offset: 576)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{!6, !2164, !154}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !2254, file: !2166, line: 1301, baseType: !2257, size: 64, offset: 640)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !2254, file: !2166, line: 1302, baseType: !2295, size: 64, offset: 704)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!6, !2164, !2298, !6}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !2300, line: 234, size: 320, elements: !2301)
!2300 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!2301 = !{!2302, !2306}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !2299, file: !2300, line: 239, baseType: !2303, size: 128)
!2303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2299, file: !2300, line: 236, size: 128, elements: !2304)
!2304 = !{!2305}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !2303, file: !2300, line: 238, baseType: !1938, size: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !2299, file: !2300, line: 255, baseType: !2307, size: 192, offset: 128)
!2307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2299, file: !2300, line: 241, size: 192, elements: !2308)
!2308 = !{!2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2326, !2327, !2328, !2329}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !2307, file: !2300, line: 242, baseType: !2060, size: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !2307, file: !2300, line: 243, baseType: !2060, size: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !2307, file: !2300, line: 244, baseType: !2060, size: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !2307, file: !2300, line: 245, baseType: !2060, size: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !2307, file: !2300, line: 246, baseType: !2060, size: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !2307, file: !2300, line: 247, baseType: !1251, size: 16)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !2307, file: !2300, line: 248, baseType: !6, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !2307, file: !2300, line: 249, baseType: !6, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !2307, file: !2300, line: 250, baseType: !2318, size: 192)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !2300, line: 196, size: 192, elements: !2319)
!2319 = !{!2320, !2321, !2322, !2323, !2324, !2325}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !2318, file: !2300, line: 197, baseType: !130, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !2318, file: !2300, line: 198, baseType: !130, size: 64, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !2318, file: !2300, line: 199, baseType: !122, size: 16, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2318, file: !2300, line: 200, baseType: !236, size: 8, offset: 144)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !2318, file: !2300, line: 201, baseType: !236, size: 8, offset: 152)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2318, file: !2300, line: 202, baseType: !236, size: 8, offset: 160)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !2307, file: !2300, line: 251, baseType: !1938, size: 128)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !2307, file: !2300, line: 252, baseType: !1938, size: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !2307, file: !2300, line: 253, baseType: !154, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !2307, file: !2300, line: 254, baseType: !2330, size: 128)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !2300, line: 207, size: 128, elements: !2331)
!2331 = !{!2332, !2333, !2334}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2330, file: !2300, line: 208, baseType: !194, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2330, file: !2300, line: 209, baseType: !194, size: 32, offset: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !2330, file: !2300, line: 222, baseType: !2335, size: 64, offset: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !2300, line: 210, size: 64, elements: !2336)
!2336 = !{!2337, !2345, !2352, !2364, !2370, !2377, !2388, !2396}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !2335, file: !2300, line: 212, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !2340, line: 56, baseType: !2341)
!2340 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 53, size: 32, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !2341, file: !2340, line: 54, baseType: !122, size: 16)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2341, file: !2340, line: 55, baseType: !122, size: 16, offset: 16)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !2335, file: !2300, line: 213, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !2340, line: 80, baseType: !2348)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 77, size: 64, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2348, file: !2340, line: 78, baseType: !194, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2348, file: !2340, line: 79, baseType: !194, size: 32, offset: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !2335, file: !2300, line: 214, baseType: !2353, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !2340, line: 66, baseType: !2355)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 58, size: 192, elements: !2356)
!2356 = !{!2357, !2358, !2359, !2360, !2361, !2362, !2363}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !2355, file: !2340, line: 59, baseType: !194, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !2355, file: !2340, line: 60, baseType: !194, size: 32, offset: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !2355, file: !2340, line: 61, baseType: !194, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !2355, file: !2340, line: 62, baseType: !194, size: 32, offset: 96)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !2355, file: !2340, line: 63, baseType: !194, size: 32, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !2355, file: !2340, line: 64, baseType: !122, size: 16, offset: 160)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !2355, file: !2340, line: 65, baseType: !122, size: 16, offset: 176)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !2335, file: !2300, line: 215, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !2340, line: 70, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 68, size: 32, elements: !2368)
!2368 = !{!2369}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !2367, file: !2340, line: 69, baseType: !194, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !2335, file: !2300, line: 216, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !2340, line: 75, baseType: !2373)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 72, size: 160, elements: !2374)
!2374 = !{!2375, !2376}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !2373, file: !2340, line: 73, baseType: !194, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !2373, file: !2340, line: 74, baseType: !1938, size: 128, offset: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !2335, file: !2300, line: 217, baseType: !2378, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !2340, line: 89, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 82, size: 192, elements: !2381)
!2381 = !{!2382, !2383, !2384, !2385, !2386, !2387}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !2380, file: !2340, line: 83, baseType: !122, size: 16)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !2380, file: !2340, line: 84, baseType: !194, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !2380, file: !2340, line: 85, baseType: !194, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !2380, file: !2340, line: 86, baseType: !194, size: 32, offset: 96)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !2380, file: !2340, line: 87, baseType: !194, size: 32, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !2380, file: !2340, line: 88, baseType: !194, size: 32, offset: 160)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2335, file: !2300, line: 220, baseType: !2389, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !2340, line: 44, baseType: !2391)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 40, size: 96, elements: !2392)
!2392 = !{!2393, !2394, !2395}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !2391, file: !2340, line: 41, baseType: !194, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !2391, file: !2340, line: 42, baseType: !194, size: 32, offset: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !2391, file: !2340, line: 43, baseType: !122, size: 16, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !2335, file: !2300, line: 221, baseType: !2397, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !2340, line: 51, baseType: !2399)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2340, line: 46, size: 128, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2404}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !2399, file: !2340, line: 47, baseType: !194, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !2399, file: !2340, line: 48, baseType: !194, size: 32, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !2399, file: !2340, line: 49, baseType: !122, size: 16, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !2399, file: !2340, line: 50, baseType: !194, size: 32, offset: 96)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !2254, file: !2166, line: 1304, baseType: !2406, size: 64, offset: 768)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!6, !2164, !2409}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !2254, file: !2166, line: 1306, baseType: !2411, size: 64, offset: 832)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!6, !2164, !6}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !2254, file: !2166, line: 1308, baseType: !2415, size: 64, offset: 896)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!6, !2164, !2418}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2420, line: 70, size: 1152, elements: !2421)
!2420 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2421 = !{!2422, !2427, !2428, !2429, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2683}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2419, file: !2420, line: 71, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !1972, line: 318, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1972, line: 314, size: 64, elements: !2425)
!2425 = !{!2426}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2424, file: !1972, line: 316, baseType: !1970, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2419, file: !2420, line: 72, baseType: !2164, size: 64, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2419, file: !2420, line: 73, baseType: !25, size: 128, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2419, file: !2420, line: 74, baseType: !2430, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!6, !2433}
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2420, line: 134, size: 2624, elements: !2435)
!2435 = !{!2436, !2437, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2638, !2642, !2651, !2655, !2668, !2669, !2670, !2671}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2434, file: !2420, line: 135, baseType: !2433, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2434, file: !2420, line: 136, baseType: !2438, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2420, line: 194, size: 3840, elements: !2440)
!2440 = !{!2441, !2442, !2443, !2444, !2445, !2454, !2460, !2461, !2475, !2479, !2483, !2487, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2576, !2577, !2584, !2585, !2586, !2587, !2588, !2589, !2605, !2615}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2439, file: !2420, line: 195, baseType: !6, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2439, file: !2420, line: 196, baseType: !194, size: 32, offset: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2439, file: !2420, line: 197, baseType: !194, size: 32, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2439, file: !2420, line: 198, baseType: !2032, size: 16, offset: 96)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2439, file: !2420, line: 199, baseType: !2446, size: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!226, !2449, !2451, !2453}
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2165)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2439, file: !2420, line: 202, baseType: !2455, size: 64, offset: 192)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!299, !2458, !2449}
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2434)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2439, file: !2420, line: 203, baseType: !2430, size: 64, offset: 256)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2439, file: !2420, line: 204, baseType: !2462, size: 64, offset: 320)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!6, !2465}
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2420, line: 171, size: 256, elements: !2467)
!2467 = !{!2468, !2469, !2470, !2471, !2472, !2473}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2466, file: !2420, line: 172, baseType: !2465, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2466, file: !2420, line: 173, baseType: !2423, size: 64, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2466, file: !2420, line: 174, baseType: !2164, size: 64, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2466, file: !2420, line: 175, baseType: !1398, size: 8, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2466, file: !2420, line: 176, baseType: !1398, size: 8, offset: 200)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2466, file: !2420, line: 177, baseType: !2474, offset: 208)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, elements: !2184)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2439, file: !2420, line: 205, baseType: !2476, size: 64, offset: 384)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{null, !2465}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2439, file: !2420, line: 206, baseType: !2480, size: 64, offset: 448)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{null, !2148}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2439, file: !2420, line: 207, baseType: !2484, size: 64, offset: 512)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!6, !2449}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2439, file: !2420, line: 208, baseType: !2488, size: 64, offset: 576)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!299, !2451, !2491}
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2493, line: 75, size: 384, elements: !2494)
!2493 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2494 = !{!2495, !2496, !2504, !2543, !2547}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2492, file: !2493, line: 76, baseType: !21, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2492, file: !2493, line: 77, baseType: !2497, size: 64, offset: 64)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2499)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2500, line: 213, size: 32, elements: !2501)
!2500 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2501 = !{!2502, !2503}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2499, file: !2500, line: 214, baseType: !740, size: 16)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2499, file: !2500, line: 215, baseType: !740, size: 16, offset: 16)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2492, file: !2493, line: 78, baseType: !2505, size: 64, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2507)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2508, line: 315, size: 128, elements: !2509)
!2508 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2509 = !{!2510, !2511, !2512, !2513}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2507, file: !2508, line: 316, baseType: !1398, size: 8)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2507, file: !2508, line: 317, baseType: !1398, size: 8, offset: 8)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2507, file: !2508, line: 318, baseType: !739, size: 16, offset: 16)
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 319, baseType: !2514, size: 64, offset: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 319, size: 64, elements: !2515)
!2515 = !{!2516, !2518, !2519, !2520, !2521, !2527, !2533, !2538, !2542}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2514, file: !2508, line: 320, baseType: !2517, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2514, file: !2508, line: 321, baseType: !2517, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2514, file: !2508, line: 322, baseType: !21, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2514, file: !2508, line: 323, baseType: !2505, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2514, file: !2508, line: 324, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2508, line: 189, size: 128, elements: !2524)
!2524 = !{!2525, !2526}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2523, file: !2508, line: 190, baseType: !230, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2523, file: !2508, line: 190, baseType: !230, size: 64, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2514, file: !2508, line: 325, baseType: !2528, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2508, line: 193, size: 128, elements: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2529, file: !2508, line: 194, baseType: !563, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2529, file: !2508, line: 194, baseType: !563, size: 64, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, scope: !2514, file: !2508, line: 326, baseType: !2534, size: 32)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2514, file: !2508, line: 326, size: 32, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2534, file: !2508, line: 327, baseType: !1249, size: 16)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2534, file: !2508, line: 327, baseType: !1249, size: 16, offset: 16)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2514, file: !2508, line: 329, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{!6, !2497, !2491}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2514, file: !2508, line: 349, baseType: !739, size: 16)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2492, file: !2493, line: 79, baseType: !2544, size: 160, offset: 192)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 160, elements: !2545)
!2545 = !{!2546}
!2546 = !DISubrange(count: 20)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2492, file: !2493, line: 80, baseType: !1398, size: 8, offset: 352)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2439, file: !2420, line: 210, baseType: !80, size: 64, offset: 640)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2439, file: !2420, line: 211, baseType: !2419, size: 1152, offset: 704)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2439, file: !2420, line: 212, baseType: !25, size: 128, offset: 1856)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2439, file: !2420, line: 213, baseType: !6, size: 32, offset: 1984)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2439, file: !2420, line: 214, baseType: !6, size: 32, offset: 2016)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2439, file: !2420, line: 215, baseType: !6, size: 32, offset: 2048)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2439, file: !2420, line: 216, baseType: !6, size: 32, offset: 2080)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2439, file: !2420, line: 217, baseType: !130, size: 64, offset: 2112)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2439, file: !2420, line: 218, baseType: !2557, size: 704, offset: 2176)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1724, line: 115, size: 704, elements: !2558)
!2558 = !{!2559, !2560, !2572, !2575}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2557, file: !1724, line: 116, baseType: !1723, size: 256)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2557, file: !1724, line: 117, baseType: !2561, size: 320, offset: 256)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2562, line: 11, size: 320, elements: !2563)
!2562 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2563 = !{!2564, !2565, !2566, !2571}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2561, file: !2562, line: 16, baseType: !450, size: 128)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2561, file: !2562, line: 17, baseType: !130, size: 64, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2561, file: !2562, line: 18, baseType: !2567, size: 64, offset: 192)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{null, !2570}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2561, file: !2562, line: 19, baseType: !224, size: 32, offset: 256)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2557, file: !1724, line: 120, baseType: !2573, size: 64, offset: 576)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1724, line: 18, flags: DIFlagFwdDecl)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2557, file: !1724, line: 121, baseType: !6, size: 32, offset: 640)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2439, file: !2420, line: 219, baseType: !2561, size: 320, offset: 2880)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2439, file: !2420, line: 220, baseType: !2578, size: 192, offset: 3200)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !2150, line: 291, size: 192, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2583}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2578, file: !2150, line: 293, baseType: !2148, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2578, file: !2150, line: 294, baseType: !2148, size: 64, offset: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2578, file: !2150, line: 296, baseType: !226, size: 32, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2578, file: !2150, line: 297, baseType: !39, offset: 160)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2439, file: !2420, line: 221, baseType: !627, size: 32, offset: 3392)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2439, file: !2420, line: 222, baseType: !627, size: 32, offset: 3424)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2439, file: !2420, line: 223, baseType: !25, size: 128, offset: 3456)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2439, file: !2420, line: 224, baseType: !829, offset: 3584)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2439, file: !2420, line: 225, baseType: !130, size: 64, offset: 3584)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2439, file: !2420, line: 226, baseType: !2590, size: 64, offset: 3648)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2420, line: 112, size: 768, elements: !2592)
!2592 = !{!2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2591, file: !2420, line: 113, baseType: !130, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2591, file: !2420, line: 114, baseType: !130, size: 64, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2591, file: !2420, line: 115, baseType: !130, size: 64, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2591, file: !2420, line: 117, baseType: !130, size: 64, offset: 192)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2591, file: !2420, line: 119, baseType: !130, size: 64, offset: 256)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2591, file: !2420, line: 120, baseType: !130, size: 64, offset: 320)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2591, file: !2420, line: 122, baseType: !130, size: 64, offset: 384)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2591, file: !2420, line: 123, baseType: !130, size: 64, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2591, file: !2420, line: 125, baseType: !130, size: 64, offset: 512)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2591, file: !2420, line: 126, baseType: !130, size: 64, offset: 576)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2591, file: !2420, line: 128, baseType: !130, size: 64, offset: 640)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2591, file: !2420, line: 129, baseType: !130, size: 64, offset: 704)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2439, file: !2420, line: 227, baseType: !2606, size: 64, offset: 3712)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2420, line: 186, size: 384, elements: !2608)
!2608 = !{!2609, !2611, !2612, !2614}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2607, file: !2420, line: 187, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2607, file: !2420, line: 188, baseType: !194, size: 32, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2607, file: !2420, line: 189, baseType: !2613, size: 128, offset: 96)
!2613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 128, elements: !1207)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2607, file: !2420, line: 190, baseType: !173, size: 128, align: 64, offset: 256)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2439, file: !2420, line: 228, baseType: !2616, size: 64, offset: 3776)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2434, file: !2420, line: 137, baseType: !2418, size: 64, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2434, file: !2420, line: 138, baseType: !130, size: 64, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2434, file: !2420, line: 139, baseType: !130, size: 64, offset: 256)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2434, file: !2420, line: 140, baseType: !829, offset: 320)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2434, file: !2420, line: 141, baseType: !875, size: 32, offset: 320)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2434, file: !2420, line: 142, baseType: !194, size: 32, offset: 352)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2434, file: !2420, line: 143, baseType: !2578, size: 192, offset: 384)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2434, file: !2420, line: 144, baseType: !2561, size: 320, offset: 576)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2434, file: !2420, line: 145, baseType: !130, size: 64, offset: 896)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2434, file: !2420, line: 146, baseType: !627, size: 32, offset: 960)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2434, file: !2420, line: 147, baseType: !1399, size: 8, offset: 992)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2434, file: !2420, line: 148, baseType: !1399, size: 8, offset: 1000)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2434, file: !2420, line: 149, baseType: !1399, size: 8, offset: 1008)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2434, file: !2420, line: 150, baseType: !1399, size: 8, offset: 1016)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2434, file: !2420, line: 151, baseType: !1398, size: 8, offset: 1024)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2434, file: !2420, line: 152, baseType: !2633, size: 32, offset: 1056)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !197, line: 805, baseType: !2634)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !197, line: 798, size: 32, elements: !2635)
!2635 = !{!2636, !2637}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2634, file: !197, line: 803, baseType: !196, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2634, file: !197, line: 804, baseType: !39, offset: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2434, file: !2420, line: 153, baseType: !2639, size: 256, align: 64, offset: 1088)
!2639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 256, elements: !2640)
!2640 = !{!2641}
!2641 = !DISubrange(count: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2434, file: !2420, line: 154, baseType: !2643, size: 832, offset: 1344)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !2166, line: 244, size: 832, elements: !2644)
!2644 = !{!2645, !2646, !2647}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2643, file: !2166, line: 245, baseType: !194, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2643, file: !2166, line: 246, baseType: !2633, size: 32, offset: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2643, file: !2166, line: 254, baseType: !2648, size: 768, offset: 64)
!2648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 768, elements: !2649)
!2649 = !{!2650}
!2650 = !DISubrange(count: 12)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2434, file: !2420, line: 155, baseType: !2652, size: 64, offset: 2176)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!6, !2433, !2148}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2434, file: !2420, line: 156, baseType: !2656, size: 64, offset: 2240)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2420, line: 163, size: 320, elements: !2659)
!2659 = !{!2660, !2661, !2665, !2666, !2667}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2658, file: !2420, line: 164, baseType: !6, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2658, file: !2420, line: 165, baseType: !2662, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{null, !2433, !2148}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2658, file: !2420, line: 166, baseType: !2662, size: 64, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2658, file: !2420, line: 167, baseType: !2652, size: 64, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2658, file: !2420, line: 168, baseType: !2652, size: 64, offset: 256)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2434, file: !2420, line: 157, baseType: !25, size: 128, offset: 2304)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2434, file: !2420, line: 158, baseType: !173, size: 128, align: 64, offset: 2432)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2434, file: !2420, line: 159, baseType: !2164, size: 64, offset: 2560)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2434, file: !2420, line: 160, baseType: !2672, offset: 2624)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, elements: !1927)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2419, file: !2420, line: 75, baseType: !2438, size: 64, offset: 320)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2419, file: !2420, line: 77, baseType: !154, size: 64, offset: 384)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2419, file: !2420, line: 79, baseType: !6, size: 32, offset: 448)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2419, file: !2420, line: 80, baseType: !875, size: 32, offset: 480)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2419, file: !2420, line: 81, baseType: !173, size: 128, align: 64, offset: 512)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2419, file: !2420, line: 83, baseType: !6, size: 32, offset: 640)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2419, file: !2420, line: 84, baseType: !2680, size: 416, offset: 672)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 416, elements: !2681)
!2681 = !{!2682}
!2682 = !DISubrange(count: 13)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2419, file: !2420, line: 85, baseType: !1416, size: 64, offset: 1088)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !2254, file: !2166, line: 1310, baseType: !2685, size: 64, offset: 960)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{null, !2164, !194}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !2254, file: !2166, line: 1313, baseType: !2689, size: 64, offset: 1024)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{null, !2164, !2692}
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !2694, line: 214, size: 1536, elements: !2695)
!2694 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!2695 = !{!2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !2693, file: !2694, line: 215, baseType: !231, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !2693, file: !2694, line: 216, baseType: !231, size: 64, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !2693, file: !2694, line: 217, baseType: !231, size: 64, offset: 128)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !2693, file: !2694, line: 218, baseType: !231, size: 64, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !2693, file: !2694, line: 219, baseType: !231, size: 64, offset: 256)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !2693, file: !2694, line: 220, baseType: !231, size: 64, offset: 320)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2693, file: !2694, line: 221, baseType: !231, size: 64, offset: 384)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2693, file: !2694, line: 222, baseType: !231, size: 64, offset: 448)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !2693, file: !2694, line: 223, baseType: !231, size: 64, offset: 512)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2693, file: !2694, line: 224, baseType: !231, size: 64, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !2693, file: !2694, line: 227, baseType: !231, size: 64, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !2693, file: !2694, line: 228, baseType: !231, size: 64, offset: 704)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !2693, file: !2694, line: 229, baseType: !231, size: 64, offset: 768)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !2693, file: !2694, line: 230, baseType: !231, size: 64, offset: 832)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !2693, file: !2694, line: 231, baseType: !231, size: 64, offset: 896)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !2693, file: !2694, line: 232, baseType: !231, size: 64, offset: 960)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !2693, file: !2694, line: 235, baseType: !231, size: 64, offset: 1024)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !2693, file: !2694, line: 236, baseType: !231, size: 64, offset: 1088)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !2693, file: !2694, line: 237, baseType: !231, size: 64, offset: 1152)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !2693, file: !2694, line: 238, baseType: !231, size: 64, offset: 1216)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !2693, file: !2694, line: 239, baseType: !231, size: 64, offset: 1280)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !2693, file: !2694, line: 242, baseType: !231, size: 64, offset: 1344)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !2693, file: !2694, line: 243, baseType: !231, size: 64, offset: 1408)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !2693, file: !2694, line: 244, baseType: !231, size: 64, offset: 1472)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !2254, file: !2166, line: 1315, baseType: !2721, size: 64, offset: 1088)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DISubroutineType(types: !2723)
!2723 = !{!299, !2451, !6}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !2254, file: !2166, line: 1316, baseType: !2725, size: 64, offset: 1152)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!6, !6, !2451, !154}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !2254, file: !2166, line: 1319, baseType: !2729, size: 64, offset: 1216)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!2732, !2164}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !2254, file: !2166, line: 1321, baseType: !2734, size: 64, offset: 1280)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!6, !2164, !2032, !739}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !2254, file: !2166, line: 1323, baseType: !2734, size: 64, offset: 1344)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !2254, file: !2166, line: 1331, baseType: !2739, size: 64, offset: 1408)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!6, !2164, !6, !2742}
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !2254, file: !2166, line: 1333, baseType: !2744, size: 64, offset: 1472)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{!6, !2164, !6, !739, !1398, !2032}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !2254, file: !2166, line: 1336, baseType: !2748, size: 64, offset: 1536)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!6, !2164, !6, !6, !6}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !2254, file: !2166, line: 1339, baseType: !2752, size: 64, offset: 1600)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!6, !2164, !6, !299}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !2254, file: !2166, line: 1341, baseType: !2752, size: 64, offset: 1664)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !2254, file: !2166, line: 1343, baseType: !2757, size: 64, offset: 1728)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!6, !2164, !6, !2760}
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !2762, line: 20, size: 576, elements: !2763)
!2762 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!2763 = !{!2764, !2765, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !2761, file: !2762, line: 21, baseType: !226, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !2761, file: !2762, line: 22, baseType: !2766, size: 256, offset: 32)
!2766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 256, elements: !2640)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !2761, file: !2762, line: 23, baseType: !226, size: 32, offset: 288)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2761, file: !2762, line: 24, baseType: !226, size: 32, offset: 320)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !2761, file: !2762, line: 25, baseType: !226, size: 32, offset: 352)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !2761, file: !2762, line: 26, baseType: !226, size: 32, offset: 384)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !2761, file: !2762, line: 27, baseType: !226, size: 32, offset: 416)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !2761, file: !2762, line: 28, baseType: !226, size: 32, offset: 448)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !2761, file: !2762, line: 29, baseType: !226, size: 32, offset: 480)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !2761, file: !2762, line: 30, baseType: !226, size: 32, offset: 512)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !2761, file: !2762, line: 31, baseType: !2032, size: 16, offset: 544)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !2254, file: !2166, line: 1346, baseType: !2777, size: 64, offset: 1792)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!6, !2164, !6, !6}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !2254, file: !2166, line: 1348, baseType: !2781, size: 64, offset: 1856)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!6, !2164, !6, !2784}
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !2762, line: 9, size: 512, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !2785, file: !2762, line: 10, baseType: !231, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !2785, file: !2762, line: 11, baseType: !231, size: 64, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !2785, file: !2762, line: 12, baseType: !231, size: 64, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !2785, file: !2762, line: 13, baseType: !231, size: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !2785, file: !2762, line: 14, baseType: !231, size: 64, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !2785, file: !2762, line: 15, baseType: !231, size: 64, offset: 320)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2785, file: !2762, line: 16, baseType: !231, size: 64, offset: 384)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2785, file: !2762, line: 17, baseType: !231, size: 64, offset: 448)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !2254, file: !2166, line: 1352, baseType: !2796, size: 64, offset: 1920)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!6, !2164, !6, !2799}
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !2254, file: !2166, line: 1355, baseType: !2802, size: 64, offset: 1984)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!6, !2164, !6, !2148}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !2254, file: !2166, line: 1357, baseType: !2806, size: 64, offset: 2048)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!6, !2164, !6, !2809, !2809}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !2694, line: 956, size: 128, elements: !2811)
!2811 = !{!2812, !2813}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !2810, file: !2694, line: 957, baseType: !226, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !2810, file: !2694, line: 958, baseType: !231, size: 64, offset: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !2254, file: !2166, line: 1361, baseType: !2815, size: 64, offset: 2112)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DISubroutineType(types: !2817)
!2817 = !{!6, !2164, !6, !230, !6}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !2254, file: !2166, line: 1364, baseType: !2752, size: 64, offset: 2176)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !2254, file: !2166, line: 1367, baseType: !2820, size: 64, offset: 2240)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!6, !2164, !2823, !154}
!2823 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !2166, line: 836, baseType: !194, size: 32, elements: !2824)
!2824 = !{!2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842}
!2825 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!2826 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!2827 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!2828 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!2829 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!2830 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!2831 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!2832 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!2833 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!2834 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!2835 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!2836 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!2837 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!2838 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!2839 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!2840 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!2841 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!2842 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !2254, file: !2166, line: 1400, baseType: !2844, size: 64, offset: 2304)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!6, !2164, !2164, !2491}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !2254, file: !2166, line: 1403, baseType: !2848, size: 64, offset: 2368)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!6, !2164, !2164}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !2254, file: !2166, line: 1405, baseType: !2852, size: 64, offset: 2432)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!2164, !2164, !2148, !299}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !2254, file: !2166, line: 1408, baseType: !2856, size: 64, offset: 2496)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!2203, !2164, !2203}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !2254, file: !2166, line: 1410, baseType: !2860, size: 64, offset: 2560)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!6, !2164, !2203}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !2254, file: !2166, line: 1412, baseType: !2864, size: 64, offset: 2624)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!6, !2164, !2433}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !2254, file: !2166, line: 1414, baseType: !2868, size: 64, offset: 2688)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{null, !2164, !2433}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !2254, file: !2166, line: 1417, baseType: !2872, size: 64, offset: 2752)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!6, !2875, !2799, !2164, !234, !739, !739, !2491}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !2877, line: 8, size: 96, elements: !2878)
!2877 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !2876, file: !2877, line: 9, baseType: !1399, size: 8)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !2876, file: !2877, line: 10, baseType: !1399, size: 8, offset: 8)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !2876, file: !2877, line: 11, baseType: !740, size: 16, offset: 16)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !2876, file: !2877, line: 12, baseType: !1497, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !2876, file: !2877, line: 13, baseType: !740, size: 16, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !2876, file: !2877, line: 14, baseType: !1399, size: 8, offset: 80)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !2876, file: !2877, line: 15, baseType: !1399, size: 8, offset: 88)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !2254, file: !2166, line: 1424, baseType: !2887, size: 64, offset: 2816)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!6, !2875, !2799, !2164, !234, !739}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !2254, file: !2166, line: 1429, baseType: !2891, size: 64, offset: 2880)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!6, !2148, !2894, !2164, !2164, !535}
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2493, line: 203, size: 1024, elements: !2896)
!2896 = !{!2897, !2898, !2908, !2912, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !2895, file: !2493, line: 204, baseType: !2148, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !2895, file: !2493, line: 205, baseType: !2899, size: 64, offset: 64)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2901)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2500, line: 44, size: 128, elements: !2902)
!2902 = !{!2903, !2904, !2905, !2906, !2907}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !2901, file: !2500, line: 45, baseType: !226, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !2901, file: !2500, line: 46, baseType: !740, size: 16, offset: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !2901, file: !2500, line: 47, baseType: !740, size: 16, offset: 48)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !2901, file: !2500, line: 48, baseType: !226, size: 32, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !2901, file: !2500, line: 49, baseType: !226, size: 32, offset: 96)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !2895, file: !2493, line: 206, baseType: !2909, size: 64, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!6, !2148, !2894}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2895, file: !2493, line: 208, baseType: !2913, size: 64, offset: 192)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{!6, !2894}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2895, file: !2493, line: 209, baseType: !154, size: 64, offset: 256)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !2895, file: !2493, line: 211, baseType: !441, size: 64, offset: 320)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !2895, file: !2493, line: 212, baseType: !2491, size: 64, offset: 384)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2895, file: !2493, line: 213, baseType: !739, size: 16, offset: 448)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !2895, file: !2493, line: 214, baseType: !739, size: 16, offset: 464)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !2895, file: !2493, line: 215, baseType: !224, size: 32, offset: 480)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !2895, file: !2493, line: 216, baseType: !194, size: 32, offset: 512)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2895, file: !2493, line: 216, baseType: !194, size: 32, offset: 544)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !2895, file: !2493, line: 217, baseType: !299, size: 8, offset: 576)
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2895, file: !2493, line: 218, baseType: !2926, size: 384, offset: 640)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2895, file: !2493, line: 218, size: 384, elements: !2927)
!2927 = !{!2928, !2932}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2926, file: !2493, line: 219, baseType: !2929, size: 384)
!2929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 384, elements: !2930)
!2930 = !{!2931}
!2931 = !DISubrange(count: 48)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2926, file: !2493, line: 224, baseType: !2933, size: 384)
!2933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 384, elements: !1663)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !2254, file: !2166, line: 1434, baseType: !2935, size: 64, offset: 2944)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!6, !2148, !2799, !2164, !234, !739, !224, !224, !2491}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !2254, file: !2166, line: 1440, baseType: !2939, size: 64, offset: 3008)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!6, !2164, !2942, !739, !2491}
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !2254, file: !2166, line: 1444, baseType: !2944, size: 64, offset: 3072)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!6, !2148, !224, !224, !2164, !224, !6}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !2254, file: !2166, line: 1449, baseType: !2948, size: 64, offset: 3136)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!6, !2164, !2942, !739}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !2254, file: !2166, line: 1452, baseType: !2952, size: 64, offset: 3200)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!6, !2164, !299}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !2254, file: !2166, line: 1454, baseType: !2956, size: 64, offset: 3264)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!6, !2164, !2959}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !2166, line: 820, size: 264, elements: !2961)
!2961 = !{!2962, !2963}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2960, file: !2166, line: 821, baseType: !2639, size: 256)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !2960, file: !2166, line: 822, baseType: !236, size: 8, offset: 256)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !2254, file: !2166, line: 1456, baseType: !2956, size: 64, offset: 3328)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !2254, file: !2166, line: 1458, baseType: !2966, size: 64, offset: 3392)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!6, !2164, !80, !127}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !2254, file: !2166, line: 1460, baseType: !2970, size: 64, offset: 3456)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{null, !2164, !2973}
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !2975, line: 114, size: 64, elements: !2976)
!2975 = !DIFile(filename: "./include/net/udp_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!2976 = !{!2977, !2978, !2979, !2980}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2974, file: !2975, line: 115, baseType: !122, size: 16)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !2974, file: !2975, line: 116, baseType: !2064, size: 16, offset: 16)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2974, file: !2975, line: 117, baseType: !2032, size: 16, offset: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "hw_priv", scope: !2974, file: !2975, line: 118, baseType: !1398, size: 8, offset: 48)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !2254, file: !2166, line: 1462, baseType: !2970, size: 64, offset: 3520)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !2254, file: !2166, line: 1464, baseType: !2983, size: 64, offset: 3584)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{!154, !2164, !2164}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !2254, file: !2166, line: 1466, baseType: !2987, size: 64, offset: 3648)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{null, !2164, !154}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !2254, file: !2166, line: 1469, baseType: !2991, size: 64, offset: 3712)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!6, !2164, !6, !224}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !2254, file: !2166, line: 1472, baseType: !2995, size: 64, offset: 3776)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!6, !2451}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !2254, file: !2166, line: 1473, baseType: !2952, size: 64, offset: 3840)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !2254, file: !2166, line: 1475, baseType: !3000, size: 64, offset: 3904)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!6, !2164, !2148}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !2254, file: !2166, line: 1477, baseType: !2285, size: 64, offset: 3968)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !2254, file: !2166, line: 1479, baseType: !3005, size: 64, offset: 4032)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!6, !2164, !3008}
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !2166, line: 894, size: 256, elements: !3010)
!3010 = !{!3011, !3019}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !3009, file: !2166, line: 895, baseType: !3012, size: 32)
!3012 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !2166, line: 860, baseType: !194, size: 32, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018}
!3014 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!3015 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!3016 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!3017 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!3018 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!3019 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !2166, line: 896, baseType: !3020, size: 192, offset: 64)
!3020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !2166, line: 896, size: 192, elements: !3021)
!3021 = !{!3022, !3803, !3832}
!3022 = !DIDerivedType(tag: DW_TAG_member, scope: !3020, file: !2166, line: 898, baseType: !3023, size: 192)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3020, file: !2166, line: 898, size: 192, elements: !3024)
!3024 = !{!3025, !3026, !3802}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3023, file: !2166, line: 899, baseType: !224, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3023, file: !2166, line: 900, baseType: !3027, size: 64, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3029, line: 525, size: 448, elements: !3030)
!3029 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3030 = !{!3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3078, !3120, !3121, !3122, !3124, !3778, !3792, !3798, !3800}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3028, file: !3029, line: 526, baseType: !739, size: 16)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3028, file: !3029, line: 527, baseType: !739, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3028, file: !3029, line: 528, baseType: !739, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3028, file: !3029, line: 529, baseType: !739, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3028, file: !3029, line: 530, baseType: !739, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3028, file: !3029, line: 531, baseType: !739, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3028, file: !3029, line: 532, baseType: !739, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3028, file: !3029, line: 533, baseType: !739, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3028, file: !3029, line: 534, baseType: !739, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3028, file: !3029, line: 535, baseType: !739, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3028, file: !3029, line: 536, baseType: !739, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3028, file: !3029, line: 537, baseType: !739, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3028, file: !3029, line: 538, baseType: !3044, size: 32, offset: 32)
!3044 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !3045, line: 170, baseType: !194, size: 32, elements: !3046)
!3045 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3046 = !{!3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077}
!3047 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!3048 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!3049 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!3050 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!3051 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!3052 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!3053 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!3054 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!3055 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!3056 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!3057 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!3058 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!3059 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!3060 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!3061 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!3062 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!3063 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!3064 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!3065 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!3066 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!3067 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!3068 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!3069 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!3070 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!3071 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!3072 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!3073 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!3074 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!3075 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!3076 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!3077 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3028, file: !3029, line: 539, baseType: !3079, size: 32, offset: 64)
!3079 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !3045, line: 204, baseType: !194, size: 32, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119}
!3081 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!3082 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!3083 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!3084 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!3085 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!3086 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!3087 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!3088 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!3089 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!3090 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!3091 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!3092 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!3093 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!3094 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!3095 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!3096 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!3097 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!3098 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!3099 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!3100 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!3101 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!3102 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!3103 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!3104 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!3105 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!3106 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!3107 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!3108 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!3109 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!3110 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!3111 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!3112 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!3113 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!3114 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!3115 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!3116 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!3117 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!3118 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!3119 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3028, file: !3029, line: 540, baseType: !224, size: 32, offset: 96)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3028, file: !3029, line: 541, baseType: !224, size: 32, offset: 128)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3028, file: !3029, line: 542, baseType: !3123, size: 64, offset: 160)
!3123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 64, elements: !1376)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3028, file: !3029, line: 543, baseType: !3125, size: 64, offset: 256)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !3127, line: 757, size: 4928, elements: !3128)
!3127 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3128 = !{!3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3180, !3181, !3182, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3242, !3243, !3247, !3248, !3250, !3251, !3695, !3696, !3697, !3706, !3708, !3709, !3710, !3711, !3712, !3714, !3715, !3730, !3731, !3737, !3743, !3751, !3752, !3753, !3754, !3755, !3756, !3764, !3773}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3126, file: !3127, line: 758, baseType: !559, size: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3126, file: !3127, line: 759, baseType: !224, size: 32, offset: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3126, file: !3127, line: 760, baseType: !224, size: 32, offset: 96)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3126, file: !3127, line: 761, baseType: !224, size: 32, offset: 128)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3126, file: !3127, line: 762, baseType: !224, size: 32, offset: 160)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3126, file: !3127, line: 763, baseType: !224, size: 32, offset: 192)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3126, file: !3127, line: 764, baseType: !224, size: 32, offset: 224)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3126, file: !3127, line: 765, baseType: !224, size: 32, offset: 256)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3126, file: !3127, line: 766, baseType: !224, size: 32, offset: 288)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3126, file: !3127, line: 767, baseType: !224, size: 32, offset: 320)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3126, file: !3127, line: 768, baseType: !224, size: 32, offset: 352)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3126, file: !3127, line: 769, baseType: !224, size: 32, offset: 384)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3126, file: !3127, line: 770, baseType: !224, size: 32, offset: 416)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3126, file: !3127, line: 771, baseType: !3143, size: 64, offset: 448)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3145)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !3127, line: 751, size: 96, elements: !3146)
!3146 = !{!3147, !3148, !3179}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3145, file: !3127, line: 752, baseType: !224, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3145, file: !3127, line: 753, baseType: !3149, size: 32, offset: 32)
!3149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !3127, line: 369, baseType: !194, size: 32, elements: !3150)
!3150 = !{!3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178}
!3151 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!3152 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!3153 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!3154 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!3155 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!3156 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!3157 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!3158 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!3159 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!3160 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!3161 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!3162 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!3163 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!3164 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!3165 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!3166 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!3167 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!3168 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!3169 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!3170 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!3171 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!3172 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!3173 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!3174 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!3175 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!3176 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!3177 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!3178 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3145, file: !3127, line: 754, baseType: !224, size: 32, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3126, file: !3127, line: 772, baseType: !553, size: 192, offset: 512)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3126, file: !3127, line: 773, baseType: !3027, size: 64, offset: 704)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3126, file: !3127, line: 774, baseType: !3183, size: 64, offset: 768)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !3127, line: 586, size: 2944, elements: !3185)
!3185 = !{!3186, !3187, !3188, !3189, !3190, !3202, !3203, !3205, !3207, !3208, !3209}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3184, file: !3127, line: 588, baseType: !450, size: 128)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3184, file: !3127, line: 590, baseType: !553, size: 192, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3184, file: !3127, line: 591, baseType: !875, size: 32, offset: 320)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3184, file: !3127, line: 592, baseType: !230, size: 64, offset: 384)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3184, file: !3127, line: 597, baseType: !3191, size: 256, offset: 448)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3184, file: !3127, line: 593, size: 256, elements: !3192)
!3192 = !{!3193, !3200, !3201}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3191, file: !3127, line: 594, baseType: !3194, size: 112)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !3127, line: 509, size: 112, elements: !3195)
!3195 = !{!3196, !3197, !3198}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3194, file: !3127, line: 510, baseType: !1398, size: 8)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3194, file: !3127, line: 511, baseType: !1398, size: 8, offset: 8)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3194, file: !3127, line: 512, baseType: !3199, size: 96, offset: 16)
!3199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 96, elements: !2649)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3191, file: !3127, line: 595, baseType: !154, size: 64, offset: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3191, file: !3127, line: 596, baseType: !299, size: 8, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3184, file: !3127, line: 602, baseType: !3027, size: 64, offset: 704)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3184, file: !3127, line: 604, baseType: !3204, size: 192, offset: 768)
!3204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 192, elements: !81)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3184, file: !3127, line: 606, baseType: !3206, size: 96, offset: 960)
!3206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 96, elements: !81)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3184, file: !3127, line: 608, baseType: !154, size: 64, offset: 1088)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3184, file: !3127, line: 609, baseType: !230, size: 64, offset: 1152)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3184, file: !3127, line: 610, baseType: !3210, size: 1728, offset: 1216)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !3127, line: 569, size: 1728, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3218, !3219, !3225}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3210, file: !3127, line: 570, baseType: !130, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3210, file: !3127, line: 571, baseType: !130, size: 64, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3210, file: !3127, line: 572, baseType: !3215, size: 1024, offset: 128)
!3215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 1024, elements: !3216)
!3216 = !{!3217}
!3217 = !DISubrange(count: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3210, file: !3127, line: 573, baseType: !25, size: 128, offset: 1152)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3210, file: !3127, line: 574, baseType: !3220, size: 384, offset: 1280)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3221, line: 40, size: 384, elements: !3222)
!3221 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3222 = !{!3223}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3220, file: !3221, line: 41, baseType: !3224, size: 384)
!3224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 384, elements: !1906)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3210, file: !3127, line: 575, baseType: !299, size: 8, offset: 1664)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3126, file: !3127, line: 775, baseType: !3044, size: 32, offset: 832)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3126, file: !3127, line: 776, baseType: !3079, size: 32, offset: 864)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3126, file: !3127, line: 777, baseType: !299, size: 8, offset: 896)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3126, file: !3127, line: 778, baseType: !299, size: 8, offset: 904)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3126, file: !3127, line: 779, baseType: !299, size: 8, offset: 912)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3126, file: !3127, line: 780, baseType: !299, size: 8, offset: 920)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3126, file: !3127, line: 781, baseType: !299, size: 8, offset: 928)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3126, file: !3127, line: 782, baseType: !299, size: 8, offset: 936)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3126, file: !3127, line: 783, baseType: !3235, size: 32, offset: 960)
!3235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !3127, line: 578, baseType: !194, size: 32, elements: !3236)
!3236 = !{!3237, !3238, !3239, !3240, !3241}
!3237 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!3238 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!3239 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!3240 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!3241 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3126, file: !3127, line: 784, baseType: !450, size: 128, offset: 1024)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3126, file: !3127, line: 786, baseType: !3244, size: 64, offset: 1152)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3246)
!3246 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !3127, line: 33, flags: DIFlagFwdDecl)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3126, file: !3127, line: 788, baseType: !21, size: 64, offset: 1216)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3126, file: !3127, line: 789, baseType: !3249, size: 64, offset: 1280)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3126, file: !3127, line: 790, baseType: !154, size: 64, offset: 1344)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3126, file: !3127, line: 791, baseType: !3252, size: 64, offset: 1408)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !3127, line: 734, size: 384, elements: !3254)
!3254 = !{!3255, !3256, !3257, !3258, !3691, !3692, !3693, !3694}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3253, file: !3127, line: 735, baseType: !154, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3253, file: !3127, line: 736, baseType: !154, size: 64, offset: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3253, file: !3127, line: 737, baseType: !154, size: 64, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, scope: !3253, file: !3127, line: 738, baseType: !3259, size: 128, offset: 192)
!3259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3253, file: !3127, line: 738, size: 128, elements: !3260)
!3260 = !{!3261}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3259, file: !3127, line: 742, baseType: !3262, size: 128)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3259, file: !3127, line: 739, size: 128, elements: !3263)
!3263 = !{!3264, !3690}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3262, file: !3127, line: 740, baseType: !3265, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !3127, line: 141, size: 2048, elements: !3267)
!3267 = !{!3268, !3632, !3633, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3676, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3266, file: !3127, line: 145, baseType: !3269, size: 64, align: 512)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3271)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !3127, line: 54, size: 2368, elements: !3272)
!3272 = !{!3273, !3472, !3476, !3480, !3484, !3488, !3489, !3493, !3499, !3500, !3501, !3502, !3503, !3507, !3511, !3515, !3516, !3517, !3521, !3522, !3534, !3538, !3542, !3551, !3555, !3559, !3563, !3568, !3572, !3576, !3592, !3598, !3602, !3609, !3613, !3615, !3616}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3271, file: !3127, line: 56, baseType: !3274, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{!6, !3277}
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !3045, line: 483, size: 960, align: 64, elements: !3279)
!3279 = !{!3280, !3296, !3307, !3318, !3342, !3348, !3356, !3373, !3386, !3392, !3401, !3406, !3414, !3426, !3446, !3453, !3457, !3461, !3466}
!3280 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !3045, line: 484, baseType: !3281, size: 512)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 484, size: 512, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3281, file: !3045, line: 485, baseType: !226, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3281, file: !3045, line: 486, baseType: !226, size: 32, offset: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3281, file: !3045, line: 487, baseType: !226, size: 32, offset: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3281, file: !3045, line: 488, baseType: !226, size: 32, offset: 96)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3281, file: !3045, line: 489, baseType: !226, size: 32, offset: 128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3281, file: !3045, line: 492, baseType: !226, size: 32, offset: 160)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3281, file: !3045, line: 493, baseType: !226, size: 32, offset: 192)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3281, file: !3045, line: 496, baseType: !1938, size: 128, offset: 224)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3281, file: !3045, line: 497, baseType: !226, size: 32, offset: 352)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3281, file: !3045, line: 498, baseType: !226, size: 32, offset: 384)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3281, file: !3045, line: 499, baseType: !226, size: 32, offset: 416)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3281, file: !3045, line: 500, baseType: !226, size: 32, offset: 448)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3281, file: !3045, line: 501, baseType: !226, size: 32, offset: 480)
!3296 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !3045, line: 507, baseType: !3297, size: 256)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 507, size: 256, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3306}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3297, file: !3045, line: 508, baseType: !226, size: 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3297, file: !3045, line: 509, baseType: !231, size: 64, align: 64, offset: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, scope: !3297, file: !3045, line: 510, baseType: !3302, size: 64, offset: 128)
!3302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3297, file: !3045, line: 510, size: 64, elements: !3303)
!3303 = !{!3304, !3305}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3302, file: !3045, line: 511, baseType: !231, size: 64, align: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3302, file: !3045, line: 512, baseType: !231, size: 64, align: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3297, file: !3045, line: 514, baseType: !231, size: 64, offset: 192)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3278, file: !3045, line: 532, baseType: !3308, size: 448)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 517, size: 448, elements: !3309)
!3309 = !{!3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3308, file: !3045, line: 518, baseType: !231, size: 64, align: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3308, file: !3045, line: 521, baseType: !231, size: 64, align: 64, offset: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3308, file: !3045, line: 522, baseType: !231, size: 64, align: 64, offset: 128)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3308, file: !3045, line: 523, baseType: !231, size: 64, align: 64, offset: 192)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3308, file: !3045, line: 524, baseType: !226, size: 32, offset: 256)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3308, file: !3045, line: 529, baseType: !226, size: 32, offset: 288)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3308, file: !3045, line: 530, baseType: !231, size: 64, offset: 320)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3308, file: !3045, line: 531, baseType: !231, size: 64, offset: 384)
!3318 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !3045, line: 534, baseType: !3319, size: 960)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 534, size: 960, elements: !3320)
!3320 = !{!3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3319, file: !3045, line: 535, baseType: !226, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3319, file: !3045, line: 536, baseType: !226, size: 32, offset: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3319, file: !3045, line: 537, baseType: !231, size: 64, align: 64, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3319, file: !3045, line: 538, baseType: !231, size: 64, align: 64, offset: 128)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3319, file: !3045, line: 539, baseType: !226, size: 32, offset: 192)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3319, file: !3045, line: 540, baseType: !226, size: 32, offset: 224)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3319, file: !3045, line: 541, baseType: !231, size: 64, align: 64, offset: 256)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3319, file: !3045, line: 542, baseType: !226, size: 32, offset: 320)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3319, file: !3045, line: 543, baseType: !226, size: 32, offset: 352)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3319, file: !3045, line: 544, baseType: !1938, size: 128, offset: 384)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3319, file: !3045, line: 545, baseType: !226, size: 32, offset: 512)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3319, file: !3045, line: 550, baseType: !226, size: 32, offset: 544)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3319, file: !3045, line: 551, baseType: !226, size: 32, offset: 576)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3319, file: !3045, line: 552, baseType: !226, size: 32, offset: 608)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3319, file: !3045, line: 553, baseType: !231, size: 64, align: 64, offset: 640)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3319, file: !3045, line: 554, baseType: !226, size: 32, offset: 704)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3319, file: !3045, line: 555, baseType: !226, size: 32, offset: 736)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3319, file: !3045, line: 556, baseType: !231, size: 64, align: 64, offset: 768)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3319, file: !3045, line: 557, baseType: !226, size: 32, offset: 832)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3319, file: !3045, line: 558, baseType: !226, size: 32, offset: 864)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3319, file: !3045, line: 559, baseType: !226, size: 32, offset: 896)
!3342 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !3045, line: 562, baseType: !3343, size: 128)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 562, size: 128, elements: !3344)
!3344 = !{!3345, !3346, !3347}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3343, file: !3045, line: 563, baseType: !231, size: 64, align: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3343, file: !3045, line: 564, baseType: !226, size: 32, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3343, file: !3045, line: 565, baseType: !226, size: 32, offset: 96)
!3348 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !3045, line: 568, baseType: !3349, size: 160)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 568, size: 160, elements: !3350)
!3350 = !{!3351, !3352, !3353, !3354, !3355}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3349, file: !3045, line: 569, baseType: !226, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3349, file: !3045, line: 570, baseType: !226, size: 32, offset: 32)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3349, file: !3045, line: 571, baseType: !226, size: 32, offset: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3349, file: !3045, line: 572, baseType: !226, size: 32, offset: 96)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3349, file: !3045, line: 573, baseType: !226, size: 32, offset: 128)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3278, file: !3045, line: 600, baseType: !3357, size: 576)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 579, size: 576, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3357, file: !3045, line: 580, baseType: !226, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3357, file: !3045, line: 581, baseType: !226, size: 32, offset: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3357, file: !3045, line: 582, baseType: !226, size: 32, offset: 64)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3357, file: !3045, line: 583, baseType: !226, size: 32, offset: 96)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3357, file: !3045, line: 587, baseType: !231, size: 64, align: 64, offset: 128)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3357, file: !3045, line: 588, baseType: !231, size: 64, align: 64, offset: 192)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3357, file: !3045, line: 589, baseType: !226, size: 32, offset: 256)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3357, file: !3045, line: 590, baseType: !226, size: 32, offset: 288)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3357, file: !3045, line: 591, baseType: !226, size: 32, offset: 320)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3357, file: !3045, line: 592, baseType: !226, size: 32, offset: 352)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3357, file: !3045, line: 596, baseType: !231, size: 64, align: 64, offset: 384)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3357, file: !3045, line: 597, baseType: !231, size: 64, align: 64, offset: 448)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3357, file: !3045, line: 598, baseType: !226, size: 32, offset: 512)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3357, file: !3045, line: 599, baseType: !226, size: 32, offset: 544)
!3373 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !3045, line: 602, baseType: !3374, size: 96)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 602, size: 96, elements: !3375)
!3375 = !{!3376, !3384, !3385}
!3376 = !DIDerivedType(tag: DW_TAG_member, scope: !3374, file: !3045, line: 603, baseType: !3377, size: 32)
!3377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3374, file: !3045, line: 603, size: 32, elements: !3378)
!3378 = !{!3379, !3380, !3381, !3382, !3383}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3377, file: !3045, line: 604, baseType: !226, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3377, file: !3045, line: 605, baseType: !226, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3377, file: !3045, line: 606, baseType: !226, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3377, file: !3045, line: 607, baseType: !226, size: 32)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3377, file: !3045, line: 608, baseType: !226, size: 32)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3374, file: !3045, line: 610, baseType: !226, size: 32, offset: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3374, file: !3045, line: 611, baseType: !226, size: 32, offset: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3278, file: !3045, line: 618, baseType: !3387, size: 128)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 614, size: 128, elements: !3388)
!3388 = !{!3389, !3390, !3391}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3387, file: !3045, line: 615, baseType: !226, size: 32)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3387, file: !3045, line: 616, baseType: !226, size: 32, offset: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3387, file: !3045, line: 617, baseType: !231, size: 64, align: 64, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3278, file: !3045, line: 627, baseType: !3393, size: 256)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 620, size: 256, elements: !3394)
!3394 = !{!3395, !3396, !3397, !3398, !3399, !3400}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3393, file: !3045, line: 621, baseType: !226, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3393, file: !3045, line: 622, baseType: !226, size: 32, offset: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3393, file: !3045, line: 623, baseType: !226, size: 32, offset: 64)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3393, file: !3045, line: 624, baseType: !226, size: 32, offset: 96)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3393, file: !3045, line: 625, baseType: !231, size: 64, align: 64, offset: 128)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3393, file: !3045, line: 626, baseType: !226, size: 32, offset: 192)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3278, file: !3045, line: 632, baseType: !3402, size: 128)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 629, size: 128, elements: !3403)
!3403 = !{!3404, !3405}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3402, file: !3045, line: 630, baseType: !231, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3402, file: !3045, line: 631, baseType: !226, size: 32, offset: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, scope: !3278, file: !3045, line: 634, baseType: !3407, size: 256)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 634, size: 256, elements: !3408)
!3408 = !{!3409, !3410, !3411, !3412, !3413}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3407, file: !3045, line: 635, baseType: !231, size: 64, align: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3407, file: !3045, line: 636, baseType: !231, size: 64, align: 64, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3407, file: !3045, line: 637, baseType: !226, size: 32, offset: 128)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3407, file: !3045, line: 638, baseType: !226, size: 32, offset: 160)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3407, file: !3045, line: 639, baseType: !226, size: 32, offset: 192)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3278, file: !3045, line: 656, baseType: !3415, size: 384)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 642, size: 384, elements: !3416)
!3416 = !{!3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3415, file: !3045, line: 643, baseType: !226, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3415, file: !3045, line: 644, baseType: !226, size: 32, offset: 32)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3415, file: !3045, line: 645, baseType: !226, size: 32, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3415, file: !3045, line: 646, baseType: !226, size: 32, offset: 96)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3415, file: !3045, line: 647, baseType: !231, size: 64, align: 64, offset: 128)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3415, file: !3045, line: 652, baseType: !226, size: 32, offset: 192)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3415, file: !3045, line: 653, baseType: !226, size: 32, offset: 224)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3415, file: !3045, line: 654, baseType: !231, size: 64, offset: 256)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3415, file: !3045, line: 655, baseType: !231, size: 64, offset: 320)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3278, file: !3045, line: 673, baseType: !3427, size: 256)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 658, size: 256, elements: !3428)
!3428 = !{!3429, !3430, !3435, !3436, !3437}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3427, file: !3045, line: 659, baseType: !226, size: 32)
!3430 = !DIDerivedType(tag: DW_TAG_member, scope: !3427, file: !3045, line: 660, baseType: !3431, size: 32, offset: 32)
!3431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3427, file: !3045, line: 660, size: 32, elements: !3432)
!3432 = !{!3433, !3434}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3431, file: !3045, line: 661, baseType: !226, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3431, file: !3045, line: 662, baseType: !226, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3427, file: !3045, line: 664, baseType: !226, size: 32, offset: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3427, file: !3045, line: 665, baseType: !226, size: 32, offset: 96)
!3437 = !DIDerivedType(tag: DW_TAG_member, scope: !3427, file: !3045, line: 666, baseType: !3438, size: 128, offset: 128)
!3438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3427, file: !3045, line: 666, size: 128, elements: !3439)
!3439 = !{!3440, !3441}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3438, file: !3045, line: 667, baseType: !226, size: 32)
!3441 = !DIDerivedType(tag: DW_TAG_member, scope: !3438, file: !3045, line: 668, baseType: !3442, size: 128)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3438, file: !3045, line: 668, size: 128, elements: !3443)
!3443 = !{!3444, !3445}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3442, file: !3045, line: 669, baseType: !231, size: 64, align: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3442, file: !3045, line: 670, baseType: !226, size: 32, offset: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3278, file: !3045, line: 683, baseType: !3447, size: 128)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 675, size: 128, elements: !3448)
!3448 = !{!3449, !3450, !3451, !3452}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3447, file: !3045, line: 676, baseType: !226, size: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3447, file: !3045, line: 678, baseType: !226, size: 32, offset: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3447, file: !3045, line: 679, baseType: !226, size: 32, offset: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3447, file: !3045, line: 682, baseType: !226, size: 32, offset: 96)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3278, file: !3045, line: 687, baseType: !3454, size: 32)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 685, size: 32, elements: !3455)
!3455 = !{!3456}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3454, file: !3045, line: 686, baseType: !226, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3278, file: !3045, line: 691, baseType: !3458, size: 32)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 689, size: 32, elements: !3459)
!3459 = !{!3460}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3458, file: !3045, line: 690, baseType: !226, size: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3278, file: !3045, line: 696, baseType: !3462, size: 64)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 693, size: 64, elements: !3463)
!3463 = !{!3464, !3465}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3462, file: !3045, line: 694, baseType: !226, size: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3462, file: !3045, line: 695, baseType: !226, size: 32, offset: 32)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3278, file: !3045, line: 702, baseType: !3467, size: 96)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3045, line: 698, size: 96, elements: !3468)
!3468 = !{!3469, !3470, !3471}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3467, file: !3045, line: 699, baseType: !226, size: 32)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3467, file: !3045, line: 700, baseType: !226, size: 32, offset: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3467, file: !3045, line: 701, baseType: !226, size: 32, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3271, file: !3127, line: 57, baseType: !3473, size: 64, offset: 64)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!3265, !3277}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3271, file: !3127, line: 58, baseType: !3477, size: 64, offset: 128)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{null, !3265, !159}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3271, file: !3127, line: 59, baseType: !3481, size: 64, offset: 192)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{null, !3265}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3271, file: !3127, line: 60, baseType: !3485, size: 64, offset: 256)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!6, !3265, !154, !154}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3271, file: !3127, line: 61, baseType: !3481, size: 64, offset: 320)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3271, file: !3127, line: 62, baseType: !3490, size: 64, offset: 384)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!154, !3265, !154}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3271, file: !3127, line: 63, baseType: !3494, size: 64, offset: 448)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!6, !3265, !3497, !3277}
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3278)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3271, file: !3127, line: 65, baseType: !3494, size: 64, offset: 512)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3271, file: !3127, line: 68, baseType: !3494, size: 64, offset: 576)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3271, file: !3127, line: 70, baseType: !3494, size: 64, offset: 640)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3271, file: !3127, line: 74, baseType: !3490, size: 64, offset: 704)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3271, file: !3127, line: 75, baseType: !3504, size: 64, offset: 768)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!6, !3265, !154, !154, !230}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3271, file: !3127, line: 76, baseType: !3508, size: 64, offset: 832)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{!6, !3265, !154}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3271, file: !3127, line: 77, baseType: !3512, size: 64, offset: 896)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!6, !3265, !154, !230}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3271, file: !3127, line: 78, baseType: !3508, size: 64, offset: 960)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3271, file: !3127, line: 79, baseType: !3508, size: 64, offset: 1024)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3271, file: !3127, line: 82, baseType: !3518, size: 64, offset: 1088)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!154, !3265, !159, !6}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3271, file: !3127, line: 84, baseType: !277, size: 64, offset: 1152)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3271, file: !3127, line: 85, baseType: !3523, size: 64, offset: 1216)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!6, !3265, !3526}
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !3045, line: 65, size: 64, elements: !3528)
!3528 = !{!3529, !3530, !3531, !3532, !3533}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3527, file: !3045, line: 66, baseType: !1399, size: 8)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3527, file: !3045, line: 67, baseType: !1399, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3527, file: !3045, line: 68, baseType: !1399, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3527, file: !3045, line: 69, baseType: !1250, size: 16, offset: 16)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3527, file: !3045, line: 70, baseType: !1497, size: 32, offset: 32)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3271, file: !3127, line: 86, baseType: !3535, size: 64, offset: 1280)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!224, !154}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3271, file: !3127, line: 87, baseType: !3539, size: 64, offset: 1344)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{null, !3265, !154, !541}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3271, file: !3127, line: 89, baseType: !3543, size: 64, offset: 1408)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!6, !3546, !3548, !3244, !3244}
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3266)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3550)
!3550 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !3127, line: 32, flags: DIFlagFwdDecl)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3271, file: !3127, line: 95, baseType: !3552, size: 64, offset: 1472)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!6, !3265, !3125}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3271, file: !3127, line: 96, baseType: !3556, size: 64, offset: 1536)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{null, !3265, !3125}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3271, file: !3127, line: 97, baseType: !3560, size: 64, offset: 1600)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{null, !3265, !224, !3027, !3027}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3271, file: !3127, line: 101, baseType: !3564, size: 64, offset: 1664)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{!6, !3546, !3567, !224}
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3271, file: !3127, line: 103, baseType: !3569, size: 64, offset: 1728)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!6, !3546, !230, !1462}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3271, file: !3127, line: 105, baseType: !3573, size: 64, offset: 1792)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!6, !3265, !1027}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3271, file: !3127, line: 106, baseType: !3577, size: 64, offset: 1856)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!3580, !3265, !159, !3581}
!3580 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2015, line: 52, baseType: !194)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3583, line: 43, size: 128, elements: !3584)
!3583 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3584 = !{!3585, !3591}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3582, file: !3583, line: 44, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3583, line: 37, baseType: !3587)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{null, !159, !3590, !3581}
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3582, file: !3583, line: 45, baseType: !3580, size: 32, offset: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3271, file: !3127, line: 110, baseType: !3593, size: 64, offset: 1920)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!6, !3596, !154, !224}
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !3127, line: 38, flags: DIFlagFwdDecl)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3271, file: !3127, line: 112, baseType: !3599, size: 64, offset: 1984)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{null, !3596, !154, !224}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3271, file: !3127, line: 114, baseType: !3603, size: 64, offset: 2048)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!3606, !154}
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !3127, line: 37, flags: DIFlagFwdDecl)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3271, file: !3127, line: 125, baseType: !3610, size: 64, offset: 2112)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!299, !3546, !3546}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3271, file: !3127, line: 129, baseType: !3614, size: 64, offset: 2176)
!3614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3271, file: !3127, line: 130, baseType: !535, size: 64, offset: 2240)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3271, file: !3127, line: 133, baseType: !3617, size: 64, offset: 2304)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3619)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !3127, line: 46, size: 256, elements: !3620)
!3620 = !{!3621, !3622, !3629, !3631}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3619, file: !3127, line: 47, baseType: !567, size: 64)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3619, file: !3127, line: 48, baseType: !3623, size: 64, offset: 64)
!3623 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !3127, line: 43, baseType: !3624)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!6, !154, !3627}
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !3127, line: 36, flags: DIFlagFwdDecl)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3619, file: !3127, line: 49, baseType: !3630, size: 64, offset: 128)
!3630 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !3127, line: 45, baseType: !277)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3619, file: !3127, line: 50, baseType: !224, size: 32, offset: 192)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3266, file: !3127, line: 146, baseType: !3265, size: 64, offset: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3266, file: !3127, line: 150, baseType: !3634, size: 32, offset: 128)
!3634 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !3045, line: 130, baseType: !194, size: 32, elements: !3635)
!3635 = !{!3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664}
!3636 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!3637 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!3638 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!3639 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!3640 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!3641 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!3642 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!3643 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!3644 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!3645 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!3646 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!3647 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!3648 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!3649 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!3650 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!3651 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!3652 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!3653 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!3654 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!3655 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!3656 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!3657 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!3658 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!3659 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!3660 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!3661 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!3662 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!3663 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!3664 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3266, file: !3127, line: 151, baseType: !224, size: 32, offset: 160)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3266, file: !3127, line: 152, baseType: !224, size: 32, offset: 192)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3266, file: !3127, line: 153, baseType: !224, size: 32, offset: 224)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3266, file: !3127, line: 154, baseType: !224, size: 32, offset: 256)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3266, file: !3127, line: 155, baseType: !6, size: 32, offset: 288)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3266, file: !3127, line: 156, baseType: !224, size: 32, offset: 320)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3266, file: !3127, line: 157, baseType: !6, size: 32, offset: 352)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3266, file: !3127, line: 158, baseType: !224, size: 32, offset: 384)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3266, file: !3127, line: 159, baseType: !224, size: 32, offset: 416)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3266, file: !3127, line: 160, baseType: !3675, size: 64, offset: 448)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3266, file: !3127, line: 161, baseType: !3677, size: 128, offset: 512)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !3127, line: 136, size: 128, elements: !3678)
!3678 = !{!3679, !3680}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3677, file: !3127, line: 137, baseType: !224, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3677, file: !3127, line: 138, baseType: !870, size: 64, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3266, file: !3127, line: 162, baseType: !1938, size: 128, offset: 640)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3266, file: !3127, line: 163, baseType: !224, size: 32, offset: 768)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3266, file: !3127, line: 164, baseType: !299, size: 8, offset: 800)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3266, file: !3127, line: 165, baseType: !299, size: 8, offset: 808)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3266, file: !3127, line: 171, baseType: !559, size: 64, align: 512, offset: 1024)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3266, file: !3127, line: 172, baseType: !559, size: 64, offset: 1088)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3266, file: !3127, line: 173, baseType: !1723, size: 256, offset: 1152)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3266, file: !3127, line: 174, baseType: !553, size: 192, offset: 1408)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3266, file: !3127, line: 175, baseType: !230, size: 64, offset: 1600)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3262, file: !3127, line: 741, baseType: !224, size: 32, offset: 64)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3253, file: !3127, line: 744, baseType: !299, size: 8, offset: 320)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3253, file: !3127, line: 745, baseType: !1398, size: 8, offset: 328)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3253, file: !3127, line: 746, baseType: !739, size: 16, offset: 336)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3253, file: !3127, line: 747, baseType: !224, size: 32, offset: 352)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3126, file: !3127, line: 792, baseType: !224, size: 32, offset: 1472)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3126, file: !3127, line: 793, baseType: !3210, size: 1728, offset: 1536)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3126, file: !3127, line: 794, baseType: !3698, size: 64, offset: 3264)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3700)
!3700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !3127, line: 432, size: 64, elements: !3701)
!3701 = !{!3702}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3700, file: !3127, line: 433, baseType: !3703, size: 64)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!6, !3027, !3497, !3277}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3126, file: !3127, line: 795, baseType: !3707, size: 64, offset: 3328)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3126, file: !3127, line: 796, baseType: !553, size: 192, offset: 3392)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3126, file: !3127, line: 797, baseType: !3027, size: 64, offset: 3584)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3126, file: !3127, line: 798, baseType: !870, size: 64, offset: 3648)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3126, file: !3127, line: 799, baseType: !230, size: 64, offset: 3712)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3126, file: !3127, line: 800, baseType: !3713, size: 128, offset: 3776)
!3713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3265, size: 128, elements: !1906)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3126, file: !3127, line: 801, baseType: !1938, size: 128, offset: 3904)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3126, file: !3127, line: 805, baseType: !3716, size: 64, offset: 4032)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !3127, line: 478, size: 576, elements: !3718)
!3718 = !{!3719, !3720, !3721, !3724, !3725, !3726, !3727, !3728, !3729}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3717, file: !3127, line: 479, baseType: !3027, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3717, file: !3127, line: 480, baseType: !2164, size: 64, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3717, file: !3127, line: 481, baseType: !3722, size: 64, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !3127, line: 209, flags: DIFlagFwdDecl)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3717, file: !3127, line: 482, baseType: !154, size: 64, offset: 192)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3717, file: !3127, line: 483, baseType: !25, size: 128, offset: 256)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3717, file: !3127, line: 484, baseType: !299, size: 8, offset: 384)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3717, file: !3127, line: 485, baseType: !299, size: 8, offset: 392)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3717, file: !3127, line: 486, baseType: !154, size: 64, offset: 448)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3717, file: !3127, line: 487, baseType: !224, size: 32, offset: 512)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3126, file: !3127, line: 806, baseType: !3675, size: 64, offset: 4096)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3126, file: !3127, line: 807, baseType: !3732, size: 64, offset: 4160)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !3045, line: 4963, size: 64, elements: !3734)
!3734 = !{!3735, !3736}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3733, file: !3045, line: 4964, baseType: !226, size: 32)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3733, file: !3045, line: 4965, baseType: !226, size: 32, offset: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3126, file: !3127, line: 808, baseType: !3738, size: 64, offset: 4224)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !3127, line: 724, size: 32, elements: !3740)
!3740 = !{!3741, !3742}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3739, file: !3127, line: 725, baseType: !739, size: 16)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3739, file: !3127, line: 726, baseType: !299, size: 8, offset: 16)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3126, file: !3127, line: 815, baseType: !3744, size: 64, offset: 4288)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !3045, line: 4971, size: 128, elements: !3746)
!3746 = !{!3747, !3748, !3749, !3750}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3745, file: !3045, line: 4972, baseType: !226, size: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3745, file: !3045, line: 4973, baseType: !226, size: 32, offset: 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3745, file: !3045, line: 4974, baseType: !226, size: 32, offset: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3745, file: !3045, line: 4975, baseType: !226, size: 32, offset: 96)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3126, file: !3127, line: 823, baseType: !701, size: 64, offset: 4352)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3126, file: !3127, line: 824, baseType: !224, size: 32, offset: 4416)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3126, file: !3127, line: 825, baseType: !224, size: 32, offset: 4448)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3126, file: !3127, line: 830, baseType: !224, size: 32, offset: 4480)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3126, file: !3127, line: 831, baseType: !224, size: 32, offset: 4512)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3126, file: !3127, line: 832, baseType: !3757, size: 64, offset: 4544)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3759, line: 17, size: 96, elements: !3760)
!3759 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3760 = !{!3761, !3762, !3763}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3758, file: !3759, line: 18, baseType: !6, size: 32)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3758, file: !3759, line: 18, baseType: !6, size: 32, offset: 32)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3758, file: !3759, line: 18, baseType: !6, size: 32, offset: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3126, file: !3127, line: 833, baseType: !3765, size: 64, offset: 4608)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !3127, line: 503, size: 128, align: 128, elements: !3767)
!3767 = !{!3768, !3769, !3770}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3766, file: !3127, line: 504, baseType: !230, size: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3766, file: !3127, line: 505, baseType: !230, size: 64, offset: 64)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3766, file: !3127, line: 506, baseType: !3771, offset: 128)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3772, line: 68, elements: !53)
!3772 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3773 = !DIDerivedType(tag: DW_TAG_member, scope: !3126, file: !3127, line: 834, baseType: !3774, size: 256, offset: 4672)
!3774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3126, file: !3127, line: 834, size: 256, elements: !3775)
!3775 = !{!3776, !3777}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3774, file: !3127, line: 835, baseType: !1723, size: 256)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3774, file: !3127, line: 836, baseType: !173, size: 128, align: 64)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3028, file: !3029, line: 544, baseType: !3779, size: 64, offset: 320)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3029, line: 512, size: 128, elements: !3781)
!3781 = !{!3782, !3783}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3780, file: !3029, line: 513, baseType: !739, size: 16)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3780, file: !3029, line: 514, baseType: !3784, size: 64, offset: 64)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3786, line: 24, size: 64, elements: !3787)
!3786 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3787 = !{!3788, !3789, !3790, !3791}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3785, file: !3786, line: 25, baseType: !740, size: 16)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3785, file: !3786, line: 26, baseType: !1399, size: 8, offset: 16)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3785, file: !3786, line: 27, baseType: !1399, size: 8, offset: 24)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3785, file: !3786, line: 28, baseType: !226, size: 32, offset: 32)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3028, file: !3029, line: 545, baseType: !3793, size: 64, offset: 384)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!194, !2449, !3796}
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3527)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3028, file: !3029, line: 548, baseType: !3799, offset: 448)
!3799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3785, elements: !1927)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3028, file: !3029, line: 549, baseType: !3801, offset: 448)
!3801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3527, elements: !2184)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !3023, file: !2166, line: 901, baseType: !2491, size: 64, offset: 128)
!3803 = !DIDerivedType(tag: DW_TAG_member, scope: !3020, file: !2166, line: 904, baseType: !3804, size: 64)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3020, file: !2166, line: 904, size: 64, elements: !3805)
!3805 = !{!3806}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !3804, file: !2166, line: 905, baseType: !3807, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !3127, line: 222, size: 2560, elements: !3809)
!3809 = !{!3810, !3811, !3812, !3830, !3831}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3808, file: !3127, line: 223, baseType: !3266, size: 2048)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3808, file: !3127, line: 224, baseType: !2164, size: 64, offset: 2048)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !3808, file: !3127, line: 225, baseType: !3813, size: 64, offset: 2112)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3815)
!3815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !3127, line: 212, size: 256, elements: !3816)
!3816 = !{!3817, !3821, !3822, !3826}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3815, file: !3127, line: 213, baseType: !3818, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!6, !3807, !154, !154}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3815, file: !3127, line: 215, baseType: !3818, size: 64, offset: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3815, file: !3127, line: 217, baseType: !3823, size: 64, offset: 128)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!6, !3807, !154, !154, !230}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3815, file: !3127, line: 219, baseType: !3827, size: 64, offset: 192)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{!6, !3807, !154}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3808, file: !3127, line: 226, baseType: !154, size: 64, offset: 2176)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3808, file: !3127, line: 227, baseType: !25, size: 128, offset: 2240)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !3020, file: !2166, line: 911, baseType: !3833, size: 128)
!3833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3020, file: !2166, line: 908, size: 128, elements: !3834)
!3834 = !{!3835, !3838}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3833, file: !2166, line: 909, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !2166, line: 909, flags: DIFlagFwdDecl)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !3833, file: !2166, line: 910, baseType: !739, size: 16, offset: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !2254, file: !2166, line: 1481, baseType: !3840, size: 64, offset: 4096)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!6, !2164, !6, !3843, !224}
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !3846, line: 94, size: 256, elements: !3847)
!3846 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!3847 = !{!3848, !3849, !3850, !3851, !3852, !3853, !3858}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3845, file: !3846, line: 95, baseType: !154, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3845, file: !3846, line: 96, baseType: !739, size: 16, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !3845, file: !3846, line: 97, baseType: !739, size: 16, offset: 80)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !3845, file: !3846, line: 98, baseType: !224, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !3845, file: !3846, line: 99, baseType: !224, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3845, file: !3846, line: 103, baseType: !3854, size: 64, offset: 128)
!3854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !3846, line: 50, size: 64, elements: !3855)
!3855 = !{!3856, !3857}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3854, file: !3846, line: 51, baseType: !224, size: 32)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3854, file: !3846, line: 52, baseType: !224, size: 32, offset: 32)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !3845, file: !3846, line: 104, baseType: !2164, size: 64, offset: 192)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !2254, file: !2166, line: 1484, baseType: !3860, size: 64, offset: 4160)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!6, !2164, !224, !224}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !2254, file: !2166, line: 1486, baseType: !3864, size: 64, offset: 4224)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!3867, !2164}
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !3869, line: 119, size: 2176, elements: !3870)
!3869 = !DIFile(filename: "./include/net/devlink.h", directory: "/home/lizy2001/genbc/linux")
!3870 = !{!3871, !3872, !3873, !3874, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4211, !4212, !4213, !4214, !4215}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3868, file: !3869, line: 120, baseType: !25, size: 128)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !3868, file: !3869, line: 121, baseType: !25, size: 128, offset: 128)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !3868, file: !3869, line: 122, baseType: !25, size: 128, offset: 256)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !3868, file: !3869, line: 123, baseType: !3875, size: 64, offset: 384)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink", file: !3869, line: 33, size: 2816, elements: !3877)
!3877 = !{!3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3914, !3915, !3916, !3917, !4152, !4153, !4159, !4160, !4161, !4162, !4163, !4164, !4165}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3876, file: !3869, line: 34, baseType: !25, size: 128)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !3876, file: !3869, line: 35, baseType: !25, size: 128, offset: 128)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !3876, file: !3869, line: 36, baseType: !25, size: 128, offset: 256)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_table_list", scope: !3876, file: !3869, line: 37, baseType: !25, size: 128, offset: 384)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "resource_list", scope: !3876, file: !3869, line: 38, baseType: !25, size: 128, offset: 512)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !3876, file: !3869, line: 39, baseType: !25, size: 128, offset: 640)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !3876, file: !3869, line: 40, baseType: !25, size: 128, offset: 768)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !3876, file: !3869, line: 41, baseType: !25, size: 128, offset: 896)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !3876, file: !3869, line: 42, baseType: !553, size: 192, offset: 1024)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_headers", scope: !3876, file: !3869, line: 43, baseType: !3888, size: 64, offset: 1216)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_headers", file: !3869, line: 320, size: 128, elements: !3890)
!3890 = !{!3891, !3913}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !3889, file: !3869, line: 321, baseType: !3892, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_header", file: !3869, line: 170, size: 256, elements: !3895)
!3895 = !{!3896, !3897, !3898, !3911, !3912}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3894, file: !3869, line: 171, baseType: !21, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3894, file: !3869, line: 172, baseType: !194, size: 32, offset: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !3894, file: !3869, line: 173, baseType: !3899, size: 64, offset: 128)
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 64)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_field", file: !3869, line: 154, size: 192, elements: !3901)
!3901 = !{!3902, !3903, !3904, !3905}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3900, file: !3869, line: 155, baseType: !21, size: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3900, file: !3869, line: 156, baseType: !194, size: 32, offset: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "bitwidth", scope: !3900, file: !3869, line: 157, baseType: !194, size: 32, offset: 96)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "mapping_type", scope: !3900, file: !3869, line: 158, baseType: !3906, size: 32, offset: 128)
!3906 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_dpipe_field_mapping_type", file: !3907, line: 541, baseType: !194, size: 32, elements: !3908)
!3907 = !DIFile(filename: "./include/uapi/linux/devlink.h", directory: "/home/lizy2001/genbc/linux")
!3908 = !{!3909, !3910}
!3909 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE", value: 0, isUnsigned: true)
!3910 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX", value: 1, isUnsigned: true)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "fields_count", scope: !3894, file: !3869, line: 174, baseType: !194, size: 32, offset: 192)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !3894, file: !3869, line: 175, baseType: !299, size: 8, offset: 224)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "headers_count", scope: !3889, file: !3869, line: 322, baseType: !194, size: 32, offset: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "trap_list", scope: !3876, file: !3869, line: 44, baseType: !25, size: 128, offset: 1280)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_list", scope: !3876, file: !3869, line: 45, baseType: !25, size: 128, offset: 1408)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_list", scope: !3876, file: !3869, line: 46, baseType: !25, size: 128, offset: 1536)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3876, file: !3869, line: 47, baseType: !3918, size: 64, offset: 1664)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3920)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_ops", file: !3869, line: 1159, size: 2432, elements: !3921)
!3921 = !{!3922, !3923, !3924, !3925, !3942, !3946, !3956, !3960, !3964, !3983, !3987, !3991, !3995, !4000, !4004, !4008, !4009, !4013, !4017, !4021, !4025, !4029, !4033, !4042, !4046, !4052, !4062, !4087, !4091, !4095, !4107, !4122, !4126, !4130, !4134, !4138, !4142, !4146}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "supported_flash_update_params", scope: !3920, file: !3869, line: 1165, baseType: !224, size: 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "reload_actions", scope: !3920, file: !3869, line: 1166, baseType: !130, size: 64, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "reload_limits", scope: !3920, file: !3869, line: 1167, baseType: !130, size: 64, offset: 128)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "reload_down", scope: !3920, file: !3869, line: 1168, baseType: !3926, size: 64, offset: 192)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{!6, !3875, !299, !3929, !3936, !2491}
!3929 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_action", file: !3907, line: 304, baseType: !194, size: 32, elements: !3930)
!3930 = !{!3931, !3932, !3933, !3934, !3935}
!3931 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_UNSPEC", value: 0, isUnsigned: true)
!3932 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_DRIVER_REINIT", value: 1, isUnsigned: true)
!3933 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_FW_ACTIVATE", value: 2, isUnsigned: true)
!3934 = !DIEnumerator(name: "__DEVLINK_RELOAD_ACTION_MAX", value: 3, isUnsigned: true)
!3935 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_MAX", value: 2, isUnsigned: true)
!3936 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_limit", file: !3907, line: 314, baseType: !194, size: 32, elements: !3937)
!3937 = !{!3938, !3939, !3940, !3941}
!3938 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_UNSPEC", value: 0, isUnsigned: true)
!3939 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_NO_RESET", value: 1, isUnsigned: true)
!3940 = !DIEnumerator(name: "__DEVLINK_RELOAD_LIMIT_MAX", value: 2, isUnsigned: true)
!3941 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_MAX", value: 1, isUnsigned: true)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "reload_up", scope: !3920, file: !3869, line: 1172, baseType: !3943, size: 64, offset: 256)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!6, !3875, !3929, !3936, !1462, !2491}
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !3920, file: !3869, line: 1175, baseType: !3947, size: 64, offset: 320)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!6, !3867, !3950}
!3950 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_type", file: !3907, line: 134, baseType: !194, size: 32, elements: !3951)
!3951 = !{!3952, !3953, !3954, !3955}
!3952 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_NOTSET", value: 0, isUnsigned: true)
!3953 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_AUTO", value: 1, isUnsigned: true)
!3954 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_ETH", value: 2, isUnsigned: true)
!3955 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_IB", value: 3, isUnsigned: true)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !3920, file: !3869, line: 1177, baseType: !3957, size: 64, offset: 384)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!6, !3875, !194, !194, !2491}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !3920, file: !3869, line: 1179, baseType: !3961, size: 64, offset: 448)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!6, !3875, !194, !2491}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !3920, file: !3869, line: 1181, baseType: !3965, size: 64, offset: 512)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!6, !3875, !194, !739, !3968}
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3969, size: 64)
!3969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_sb_pool_info", file: !3869, line: 140, size: 128, elements: !3970)
!3970 = !{!3971, !3976, !3977, !3982}
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "pool_type", scope: !3969, file: !3869, line: 141, baseType: !3972, size: 32)
!3972 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_pool_type", file: !3907, line: 141, baseType: !194, size: 32, elements: !3973)
!3973 = !{!3974, !3975}
!3974 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_INGRESS", value: 0, isUnsigned: true)
!3975 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_EGRESS", value: 1, isUnsigned: true)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3969, file: !3869, line: 142, baseType: !224, size: 32, offset: 32)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_type", scope: !3969, file: !3869, line: 143, baseType: !3978, size: 32, offset: 64)
!3978 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_threshold_type", file: !3907, line: 159, baseType: !194, size: 32, elements: !3979)
!3979 = !{!3980, !3981}
!3980 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_STATIC", value: 0, isUnsigned: true)
!3981 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC", value: 1, isUnsigned: true)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !3969, file: !3869, line: 144, baseType: !224, size: 32, offset: 96)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !3920, file: !3869, line: 1184, baseType: !3984, size: 64, offset: 576)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!6, !3875, !194, !739, !224, !3978, !2491}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !3920, file: !3869, line: 1188, baseType: !3988, size: 64, offset: 640)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!6, !3867, !194, !739, !1462}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !3920, file: !3869, line: 1191, baseType: !3992, size: 64, offset: 704)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!6, !3867, !194, !739, !224, !2491}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !3920, file: !3869, line: 1194, baseType: !3996, size: 64, offset: 768)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!6, !3867, !194, !739, !3972, !3999, !1462}
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !3920, file: !3869, line: 1199, baseType: !4001, size: 64, offset: 832)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!6, !3867, !194, !739, !3972, !739, !224, !2491}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !3920, file: !3869, line: 1205, baseType: !4005, size: 64, offset: 896)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!6, !3875, !194}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !3920, file: !3869, line: 1207, baseType: !4005, size: 64, offset: 960)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !3920, file: !3869, line: 1209, baseType: !4010, size: 64, offset: 1024)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!6, !3867, !194, !739, !1462, !1462}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !3920, file: !3869, line: 1212, baseType: !4014, size: 64, offset: 1088)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!6, !3867, !194, !739, !3972, !1462, !1462}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_get", scope: !3920, file: !3869, line: 1218, baseType: !4018, size: 64, offset: 1152)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!6, !3875, !3999}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_set", scope: !3920, file: !3869, line: 1219, baseType: !4022, size: 64, offset: 1216)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!6, !3875, !739, !2491}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_get", scope: !3920, file: !3869, line: 1221, baseType: !4026, size: 64, offset: 1280)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!6, !3875, !2742}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_set", scope: !3920, file: !3869, line: 1222, baseType: !4030, size: 64, offset: 1344)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!6, !3875, !1398, !2491}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_get", scope: !3920, file: !3869, line: 1224, baseType: !4034, size: 64, offset: 1408)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{!6, !3875, !4037}
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_encap_mode", file: !3907, line: 178, baseType: !194, size: 32, elements: !4039)
!4039 = !{!4040, !4041}
!4040 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_NONE", value: 0, isUnsigned: true)
!4041 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_BASIC", value: 1, isUnsigned: true)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_set", scope: !3920, file: !3869, line: 1226, baseType: !4043, size: 64, offset: 1472)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!6, !3875, !4038, !2491}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "info_get", scope: !3920, file: !3869, line: 1229, baseType: !4047, size: 64, offset: 1536)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!6, !3875, !4050, !2491}
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_info_req", file: !3869, line: 586, flags: DIFlagFwdDecl)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "flash_update", scope: !3920, file: !3869, line: 1238, baseType: !4053, size: 64, offset: 1600)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!6, !3875, !4056, !2491}
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_flash_update_params", file: !3869, line: 576, size: 192, elements: !4058)
!4058 = !{!4059, !4060, !4061}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !4057, file: !3869, line: 577, baseType: !21, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !4057, file: !3869, line: 578, baseType: !21, size: 64, offset: 64)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite_mask", scope: !4057, file: !3869, line: 579, baseType: !224, size: 32, offset: 128)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !3920, file: !3869, line: 1249, baseType: !4063, size: 64, offset: 1664)
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = !DISubroutineType(types: !4065)
!4065 = !{!6, !3875, !4066, !154}
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4068)
!4068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap", file: !3869, line: 733, size: 256, elements: !4069)
!4069 = !{!4070, !4076, !4082, !4083, !4084, !4085, !4086}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4068, file: !3869, line: 734, baseType: !4071, size: 32)
!4071 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_type", file: !3907, line: 291, baseType: !194, size: 32, elements: !4072)
!4072 = !{!4073, !4074, !4075}
!4073 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_DROP", value: 0, isUnsigned: true)
!4074 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_EXCEPTION", value: 1, isUnsigned: true)
!4075 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_CONTROL", value: 2, isUnsigned: true)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "init_action", scope: !4068, file: !3869, line: 735, baseType: !4077, size: 32, offset: 32)
!4077 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_action", file: !3907, line: 268, baseType: !194, size: 32, elements: !4078)
!4078 = !{!4079, !4080, !4081}
!4079 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_DROP", value: 0, isUnsigned: true)
!4080 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_TRAP", value: 1, isUnsigned: true)
!4081 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_MIRROR", value: 2, isUnsigned: true)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !4068, file: !3869, line: 736, baseType: !299, size: 8, offset: 64)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4068, file: !3869, line: 737, baseType: !739, size: 16, offset: 80)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4068, file: !3869, line: 738, baseType: !21, size: 64, offset: 128)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "init_group_id", scope: !4068, file: !3869, line: 739, baseType: !739, size: 16, offset: 192)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_cap", scope: !4068, file: !3869, line: 740, baseType: !224, size: 32, offset: 224)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !3920, file: !3869, line: 1257, baseType: !4088, size: 64, offset: 1728)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{null, !3875, !4066, !154}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !3920, file: !3869, line: 1262, baseType: !4092, size: 64, offset: 1792)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!6, !3875, !4066, !4077, !2491}
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !3920, file: !3869, line: 1272, baseType: !4096, size: 64, offset: 1856)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!6, !3875, !4099}
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4101)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_group", file: !3869, line: 710, size: 128, elements: !4102)
!4102 = !{!4103, !4104, !4105, !4106}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4101, file: !3869, line: 711, baseType: !21, size: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4101, file: !3869, line: 712, baseType: !739, size: 16, offset: 64)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !4101, file: !3869, line: 713, baseType: !299, size: 8, offset: 80)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "init_policer_id", scope: !4101, file: !3869, line: 714, baseType: !224, size: 32, offset: 96)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !3920, file: !3869, line: 1280, baseType: !4108, size: 64, offset: 1920)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!6, !3875, !4099, !4111, !2491}
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4113)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_policer", file: !3869, line: 690, size: 448, elements: !4114)
!4114 = !{!4115, !4116, !4117, !4118, !4119, !4120, !4121}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4113, file: !3869, line: 691, baseType: !224, size: 32)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "init_rate", scope: !4113, file: !3869, line: 692, baseType: !230, size: 64, offset: 64)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "init_burst", scope: !4113, file: !3869, line: 693, baseType: !230, size: 64, offset: 128)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !4113, file: !3869, line: 694, baseType: !230, size: 64, offset: 192)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !4113, file: !3869, line: 695, baseType: !230, size: 64, offset: 256)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4113, file: !3869, line: 696, baseType: !230, size: 64, offset: 320)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4113, file: !3869, line: 697, baseType: !230, size: 64, offset: 384)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_action_set", scope: !3920, file: !3869, line: 1290, baseType: !4123, size: 64, offset: 1984)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!6, !3875, !4099, !4077, !2491}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !3920, file: !3869, line: 1300, baseType: !4127, size: 64, offset: 2048)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!6, !3875, !4111}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !3920, file: !3869, line: 1308, baseType: !4131, size: 64, offset: 2112)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{null, !3875, !4111}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !3920, file: !3869, line: 1313, baseType: !4135, size: 64, offset: 2176)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!6, !3875, !4111, !230, !230, !2491}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !3920, file: !3869, line: 1323, baseType: !4139, size: 64, offset: 2240)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!6, !3875, !4111, !3567}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_get", scope: !3920, file: !3869, line: 1335, baseType: !4143, size: 64, offset: 2304)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!6, !3875, !3867, !2742, !535, !2491}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_set", scope: !3920, file: !3869, line: 1345, baseType: !4147, size: 64, offset: 2368)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4148, size: 64)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!6, !3875, !3867, !4150, !6, !2491}
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_ids", scope: !3876, file: !3869, line: 48, baseType: !618, size: 128, offset: 1728)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3876, file: !3869, line: 49, baseType: !4154, size: 384, offset: 1856)
!4154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dev_stats", file: !3869, line: 26, size: 384, elements: !4155)
!4155 = !{!4156, !4158}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "reload_stats", scope: !4154, file: !3869, line: 27, baseType: !4157, size: 192)
!4157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 192, elements: !1663)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "remote_reload_stats", scope: !4154, file: !3869, line: 28, baseType: !4157, size: 192, offset: 192)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3876, file: !3869, line: 50, baseType: !12, size: 64, offset: 2240)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !3876, file: !3869, line: 51, baseType: !2423, size: 64, offset: 2304)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3876, file: !3869, line: 52, baseType: !553, size: 192, offset: 2368)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "reload_failed", scope: !3876, file: !3869, line: 55, baseType: !1398, size: 1, offset: 2560, flags: DIFlagBitField, extraData: i64 2560)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "reload_enabled", scope: !3876, file: !3869, line: 56, baseType: !1398, size: 1, offset: 2561, flags: DIFlagBitField, extraData: i64 2560)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3876, file: !3869, line: 57, baseType: !1398, size: 1, offset: 2562, flags: DIFlagBitField, extraData: i64 2560)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3876, file: !3869, line: 58, baseType: !4166, align: 256, offset: 2816)
!4166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, elements: !1927)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3868, file: !3869, line: 124, baseType: !194, size: 32, offset: 448)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3868, file: !3869, line: 125, baseType: !299, size: 8, offset: 480)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "type_lock", scope: !3868, file: !3869, line: 126, baseType: !39, offset: 488)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3868, file: !3869, line: 129, baseType: !3950, size: 32, offset: 512)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "desired_type", scope: !3868, file: !3869, line: 130, baseType: !3950, size: 32, offset: 544)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "type_dev", scope: !3868, file: !3869, line: 131, baseType: !154, size: 64, offset: 576)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3868, file: !3869, line: 132, baseType: !4174, size: 480, offset: 640)
!4174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_attrs", file: !3869, line: 106, size: 480, elements: !4175)
!4175 = !{!4176, !4177, !4178, !4179, !4189, !4190}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4174, file: !3869, line: 107, baseType: !1398, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "splittable", scope: !4174, file: !3869, line: 108, baseType: !1398, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !4174, file: !3869, line: 109, baseType: !224, size: 32, offset: 32)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "flavour", scope: !4174, file: !3869, line: 110, baseType: !4180, size: 32, offset: 64)
!4180 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_flavour", file: !3907, line: 183, baseType: !194, size: 32, elements: !4181)
!4181 = !{!4182, !4183, !4184, !4185, !4186, !4187, !4188}
!4182 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PHYSICAL", value: 0, isUnsigned: true)
!4183 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_CPU", value: 1, isUnsigned: true)
!4184 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_DSA", value: 2, isUnsigned: true)
!4185 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_PF", value: 3, isUnsigned: true)
!4186 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_VF", value: 4, isUnsigned: true)
!4187 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_VIRTUAL", value: 5, isUnsigned: true)
!4188 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_UNUSED", value: 6, isUnsigned: true)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "switch_id", scope: !4174, file: !3869, line: 111, baseType: !2960, size: 264, offset: 96)
!4190 = !DIDerivedType(tag: DW_TAG_member, scope: !4174, file: !3869, line: 112, baseType: !4191, size: 96, offset: 384)
!4191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4174, file: !3869, line: 112, size: 96, elements: !4192)
!4192 = !{!4193, !4198, !4204}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4191, file: !3869, line: 113, baseType: !4194, size: 64)
!4194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_phys_attrs", file: !3869, line: 61, size: 64, elements: !4195)
!4195 = !{!4196, !4197}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !4194, file: !3869, line: 62, baseType: !224, size: 32)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "split_subport_number", scope: !4194, file: !3869, line: 66, baseType: !224, size: 32, offset: 32)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "pci_pf", scope: !4191, file: !3869, line: 114, baseType: !4199, size: 64)
!4199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_pf_attrs", file: !3869, line: 75, size: 64, elements: !4200)
!4200 = !{!4201, !4202, !4203}
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !4199, file: !3869, line: 76, baseType: !224, size: 32)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !4199, file: !3869, line: 77, baseType: !739, size: 16, offset: 32)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !4199, file: !3869, line: 78, baseType: !1398, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 48)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vf", scope: !4191, file: !3869, line: 115, baseType: !4205, size: 96)
!4205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_vf_attrs", file: !3869, line: 88, size: 96, elements: !4206)
!4206 = !{!4207, !4208, !4209, !4210}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !4205, file: !3869, line: 89, baseType: !224, size: 32)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !4205, file: !3869, line: 90, baseType: !739, size: 16, offset: 32)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !4205, file: !3869, line: 91, baseType: !739, size: 16, offset: 48)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !4205, file: !3869, line: 92, baseType: !1398, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_set", scope: !3868, file: !3869, line: 133, baseType: !1398, size: 1, offset: 1120, flags: DIFlagBitField, extraData: i64 1120)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "switch_port", scope: !3868, file: !3869, line: 134, baseType: !1398, size: 1, offset: 1121, flags: DIFlagBitField, extraData: i64 1120)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "type_warn_dw", scope: !3868, file: !3869, line: 135, baseType: !2557, size: 704, offset: 1152)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !3868, file: !3869, line: 136, baseType: !25, size: 128, offset: 1856)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !3868, file: !3869, line: 137, baseType: !553, size: 192, offset: 1984)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !2254, file: !2166, line: 1487, baseType: !4217, size: 64, offset: 4288)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!6, !2164, !4220, !6}
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !4222, line: 48, size: 416, elements: !4223)
!4222 = !DIFile(filename: "./include/uapi/linux/if_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!4223 = !{!4224, !4225, !4226, !4227, !4228, !4229, !4230}
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4221, file: !4222, line: 49, baseType: !1938, size: 128)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4221, file: !4222, line: 50, baseType: !6, size: 32, offset: 128)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4221, file: !4222, line: 51, baseType: !2032, size: 16, offset: 160)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "o_flags", scope: !4221, file: !4222, line: 52, baseType: !2032, size: 16, offset: 176)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "i_key", scope: !4221, file: !4222, line: 53, baseType: !2014, size: 32, offset: 192)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "o_key", scope: !4221, file: !4222, line: 54, baseType: !2014, size: 32, offset: 224)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "iph", scope: !4221, file: !4222, line: 55, baseType: !4231, size: 160, offset: 256)
!4231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !4232, line: 86, size: 160, elements: !4233)
!4232 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!4233 = !{!4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4244, !4245}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !4231, file: !4232, line: 88, baseType: !1399, size: 4, flags: DIFlagBitField, extraData: i64 0)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4231, file: !4232, line: 89, baseType: !1399, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4231, file: !4232, line: 96, baseType: !1399, size: 8, offset: 8)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !4231, file: !4232, line: 97, baseType: !2032, size: 16, offset: 16)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4231, file: !4232, line: 98, baseType: !2032, size: 16, offset: 32)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !4231, file: !4232, line: 99, baseType: !2032, size: 16, offset: 48)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !4231, file: !4232, line: 100, baseType: !1399, size: 8, offset: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !4231, file: !4232, line: 101, baseType: !1399, size: 8, offset: 72)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !4231, file: !4232, line: 102, baseType: !4243, size: 16, offset: 80)
!4243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !2015, line: 36, baseType: !740)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !4231, file: !4232, line: 103, baseType: !2014, size: 32, offset: 96)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !4231, file: !4232, line: 104, baseType: !2014, size: 32, offset: 128)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !2254, file: !2166, line: 1489, baseType: !4247, size: 64, offset: 4352)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!2164, !2164}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !2165, file: !2166, line: 1917, baseType: !4251, size: 64, offset: 4032)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4253)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !4254, line: 421, size: 3904, elements: !4255)
!4254 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!4255 = !{!4256, !4257, !4279, !4280, !4292, !4304, !4308, !4312, !4316, !4317, !4318, !4376, !4377, !4389, !4390, !4420, !4421, !4437, !4441, !4450, !4461, !4465, !4478, !4482, !4492, !4502, !4503, !4504, !4505, !4509, !4510, !4614, !4618, !4628, !4632, !4633, !4634, !4638, !4643, !4647, !4651, !4667, !4671, !4683, !4687, !4688, !4703, !4715, !4716, !4732, !4733, !4747, !4751, !4755, !4756, !4795, !4801, !4812, !4813, !4814, !4815}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !4253, file: !4254, line: 422, baseType: !224, size: 32)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !4253, file: !4254, line: 423, baseType: !4258, size: 64, offset: 64)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{null, !2164, !4261}
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !4263, line: 177, size: 1568, elements: !4264)
!4263 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!4264 = !{!4265, !4266, !4268, !4269, !4270, !4271, !4272, !4274, !4275, !4276, !4277, !4278}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4262, file: !4263, line: 178, baseType: !226, size: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4262, file: !4263, line: 179, baseType: !4267, size: 256, offset: 32)
!4267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 256, elements: !2640)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4262, file: !4263, line: 180, baseType: !4267, size: 256, offset: 288)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !4262, file: !4263, line: 181, baseType: !4267, size: 256, offset: 544)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !4262, file: !4263, line: 182, baseType: !4267, size: 256, offset: 800)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !4262, file: !4263, line: 183, baseType: !4267, size: 256, offset: 1056)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4262, file: !4263, line: 184, baseType: !4273, size: 96, offset: 1312)
!4273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 96, elements: !2649)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !4262, file: !4263, line: 185, baseType: !226, size: 32, offset: 1408)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !4262, file: !4263, line: 186, baseType: !226, size: 32, offset: 1440)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !4262, file: !4263, line: 187, baseType: !226, size: 32, offset: 1472)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !4262, file: !4263, line: 188, baseType: !226, size: 32, offset: 1504)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !4262, file: !4263, line: 189, baseType: !226, size: 32, offset: 1536)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !4253, file: !4254, line: 424, baseType: !2257, size: 64, offset: 128)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !4253, file: !4254, line: 425, baseType: !4281, size: 64, offset: 192)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{null, !2164, !4284, !154}
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !4263, line: 310, size: 96, elements: !4286)
!4286 = !{!4287, !4288, !4289, !4290}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4285, file: !4263, line: 311, baseType: !226, size: 32)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4285, file: !4263, line: 312, baseType: !226, size: 32, offset: 32)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4285, file: !4263, line: 313, baseType: !226, size: 32, offset: 64)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4285, file: !4263, line: 314, baseType: !4291, offset: 96)
!4291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, elements: !1927)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !4253, file: !4254, line: 426, baseType: !4293, size: 64, offset: 256)
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4294, size: 64)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{null, !2164, !4296}
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !4263, line: 203, size: 160, elements: !4298)
!4298 = !{!4299, !4300, !4301, !4302}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4297, file: !4263, line: 204, baseType: !226, size: 32)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4297, file: !4263, line: 205, baseType: !226, size: 32, offset: 32)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !4297, file: !4263, line: 206, baseType: !226, size: 32, offset: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !4297, file: !4263, line: 207, baseType: !4303, size: 48, offset: 96)
!4303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 48, elements: !1663)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !4253, file: !4254, line: 427, baseType: !4305, size: 64, offset: 320)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!6, !2164, !4296}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !4253, file: !4254, line: 428, baseType: !4309, size: 64, offset: 384)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!224, !2164}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !4253, file: !4254, line: 429, baseType: !4313, size: 64, offset: 448)
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{null, !2164, !224}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !4253, file: !4254, line: 430, baseType: !2257, size: 64, offset: 512)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !4253, file: !4254, line: 431, baseType: !4309, size: 64, offset: 576)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !4253, file: !4254, line: 432, baseType: !4319, size: 64, offset: 640)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!6, !2164, !4322}
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !4254, line: 93, size: 64, elements: !4324)
!4324 = !{!4325, !4338}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !4323, file: !4254, line: 94, baseType: !4326, size: 32)
!4326 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !4263, line: 585, baseType: !194, size: 32, elements: !4327)
!4327 = !{!4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337}
!4328 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!4329 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!4330 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!4331 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!4332 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!4333 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!4334 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!4335 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!4336 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!4337 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!4338 = !DIDerivedType(tag: DW_TAG_member, scope: !4323, file: !4254, line: 95, baseType: !4339, size: 32, offset: 32)
!4339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4323, file: !4254, line: 95, size: 32, elements: !4340)
!4340 = !{!4341, !4350, !4357, !4365, !4370, !4375}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !4339, file: !4254, line: 96, baseType: !4342, size: 32)
!4342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !4263, line: 602, baseType: !194, size: 32, elements: !4343)
!4343 = !{!4344, !4345, !4346, !4347, !4348, !4349}
!4344 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!4345 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!4346 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!4347 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!4348 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!4349 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !4339, file: !4254, line: 97, baseType: !4351, size: 32)
!4351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !4263, line: 615, baseType: !194, size: 32, elements: !4352)
!4352 = !{!4353, !4354, !4355, !4356}
!4353 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!4354 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!4355 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!4356 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !4339, file: !4254, line: 98, baseType: !4358, size: 32)
!4358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !4263, line: 626, baseType: !194, size: 32, elements: !4359)
!4359 = !{!4360, !4361, !4362, !4363, !4364}
!4360 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!4361 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!4362 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!4363 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!4364 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !4339, file: !4254, line: 99, baseType: !4366, size: 32)
!4366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !4263, line: 638, baseType: !194, size: 32, elements: !4367)
!4367 = !{!4368, !4369}
!4368 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!4369 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !4339, file: !4254, line: 100, baseType: !4371, size: 32)
!4371 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !4263, line: 647, baseType: !194, size: 32, elements: !4372)
!4372 = !{!4373, !4374}
!4373 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!4374 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !4339, file: !4254, line: 101, baseType: !1398, size: 8)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !4253, file: !4254, line: 434, baseType: !2257, size: 64, offset: 704)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !4253, file: !4254, line: 435, baseType: !4378, size: 64, offset: 768)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!6, !2164, !4381, !2742}
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !4263, line: 335, size: 128, elements: !4383)
!4383 = !{!4384, !4385, !4386, !4387, !4388}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4382, file: !4263, line: 336, baseType: !226, size: 32)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4382, file: !4263, line: 337, baseType: !226, size: 32, offset: 32)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4382, file: !4263, line: 338, baseType: !226, size: 32, offset: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4382, file: !4263, line: 339, baseType: !226, size: 32, offset: 96)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4382, file: !4263, line: 340, baseType: !4291, offset: 128)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !4253, file: !4254, line: 437, baseType: !4378, size: 64, offset: 832)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !4253, file: !4254, line: 439, baseType: !4391, size: 64, offset: 896)
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4392, size: 64)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!6, !2164, !4394}
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !4263, line: 462, size: 736, elements: !4396)
!4396 = !{!4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4395, file: !4263, line: 463, baseType: !226, size: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !4395, file: !4263, line: 464, baseType: !226, size: 32, offset: 32)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !4395, file: !4263, line: 465, baseType: !226, size: 32, offset: 64)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !4395, file: !4263, line: 466, baseType: !226, size: 32, offset: 96)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !4395, file: !4263, line: 467, baseType: !226, size: 32, offset: 128)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !4395, file: !4263, line: 468, baseType: !226, size: 32, offset: 160)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !4395, file: !4263, line: 469, baseType: !226, size: 32, offset: 192)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !4395, file: !4263, line: 470, baseType: !226, size: 32, offset: 224)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !4395, file: !4263, line: 471, baseType: !226, size: 32, offset: 256)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !4395, file: !4263, line: 472, baseType: !226, size: 32, offset: 288)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !4395, file: !4263, line: 473, baseType: !226, size: 32, offset: 320)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !4395, file: !4263, line: 474, baseType: !226, size: 32, offset: 352)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !4395, file: !4263, line: 475, baseType: !226, size: 32, offset: 384)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !4395, file: !4263, line: 476, baseType: !226, size: 32, offset: 416)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !4395, file: !4263, line: 477, baseType: !226, size: 32, offset: 448)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !4395, file: !4263, line: 478, baseType: !226, size: 32, offset: 480)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !4395, file: !4263, line: 479, baseType: !226, size: 32, offset: 512)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !4395, file: !4263, line: 480, baseType: !226, size: 32, offset: 544)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !4395, file: !4263, line: 481, baseType: !226, size: 32, offset: 576)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !4395, file: !4263, line: 482, baseType: !226, size: 32, offset: 608)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !4395, file: !4263, line: 483, baseType: !226, size: 32, offset: 640)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !4395, file: !4263, line: 484, baseType: !226, size: 32, offset: 672)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !4395, file: !4263, line: 485, baseType: !226, size: 32, offset: 704)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !4253, file: !4254, line: 440, baseType: !4391, size: 64, offset: 960)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !4253, file: !4254, line: 441, baseType: !4422, size: 64, offset: 1024)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{null, !2164, !4425}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !4263, line: 513, size: 288, elements: !4427)
!4427 = !{!4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4426, file: !4263, line: 514, baseType: !226, size: 32)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !4426, file: !4263, line: 515, baseType: !226, size: 32, offset: 32)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !4426, file: !4263, line: 516, baseType: !226, size: 32, offset: 64)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !4426, file: !4263, line: 517, baseType: !226, size: 32, offset: 96)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !4426, file: !4263, line: 518, baseType: !226, size: 32, offset: 128)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !4426, file: !4263, line: 519, baseType: !226, size: 32, offset: 160)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !4426, file: !4263, line: 520, baseType: !226, size: 32, offset: 192)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !4426, file: !4263, line: 521, baseType: !226, size: 32, offset: 224)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !4426, file: !4263, line: 522, baseType: !226, size: 32, offset: 256)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !4253, file: !4254, line: 443, baseType: !4438, size: 64, offset: 1088)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = !DISubroutineType(types: !4440)
!4440 = !{!6, !2164, !4425}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !4253, file: !4254, line: 445, baseType: !4442, size: 64, offset: 1152)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{null, !2164, !4445}
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !4254, line: 260, size: 128, elements: !4447)
!4447 = !{!4448, !4449}
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !4446, file: !4254, line: 261, baseType: !230, size: 64)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !4446, file: !4254, line: 262, baseType: !230, size: 64, offset: 64)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !4253, file: !4254, line: 447, baseType: !4451, size: 64, offset: 1216)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{null, !2164, !4454}
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !4263, line: 575, size: 128, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4455, file: !4263, line: 576, baseType: !226, size: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !4455, file: !4263, line: 577, baseType: !226, size: 32, offset: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !4455, file: !4263, line: 578, baseType: !226, size: 32, offset: 64)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !4455, file: !4263, line: 579, baseType: !226, size: 32, offset: 96)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !4253, file: !4254, line: 449, baseType: !4462, size: 64, offset: 1280)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{!6, !2164, !4454}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !4253, file: !4254, line: 451, baseType: !4466, size: 64, offset: 1344)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{null, !2164, !4469, !3567}
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !4263, line: 770, size: 128, elements: !4471)
!4471 = !{!4472, !4473, !4474, !4475, !4476}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4470, file: !4263, line: 771, baseType: !226, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4470, file: !4263, line: 772, baseType: !226, size: 32, offset: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4470, file: !4263, line: 773, baseType: !226, size: 32, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4470, file: !4263, line: 774, baseType: !226, size: 32, offset: 96)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4470, file: !4263, line: 775, baseType: !4477, offset: 128)
!4477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, elements: !1927)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !4253, file: !4254, line: 452, baseType: !4479, size: 64, offset: 1408)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{null, !2164, !224, !2742}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !4253, file: !4254, line: 453, baseType: !4483, size: 64, offset: 1472)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!6, !2164, !4486}
!4486 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !4254, line: 54, baseType: !194, size: 32, elements: !4487)
!4487 = !{!4488, !4489, !4490, !4491}
!4488 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!4489 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!4490 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!4491 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !4253, file: !4254, line: 454, baseType: !4493, size: 64, offset: 1536)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{null, !2164, !4496, !3567}
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !4263, line: 789, size: 64, elements: !4498)
!4498 = !{!4499, !4500, !4501}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4497, file: !4263, line: 790, baseType: !226, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !4497, file: !4263, line: 791, baseType: !226, size: 32, offset: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4497, file: !4263, line: 792, baseType: !4477, offset: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !4253, file: !4254, line: 456, baseType: !2257, size: 64, offset: 1600)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4253, file: !4254, line: 457, baseType: !2261, size: 64, offset: 1664)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !4253, file: !4254, line: 458, baseType: !4309, size: 64, offset: 1728)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !4253, file: !4254, line: 459, baseType: !4506, size: 64, offset: 1792)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{!6, !2164, !224}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !4253, file: !4254, line: 460, baseType: !2411, size: 64, offset: 1856)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !4253, file: !4254, line: 461, baseType: !4511, size: 64, offset: 1920)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!6, !2164, !4514, !1462}
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 64)
!4515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !4263, line: 1088, size: 1536, elements: !4516)
!4516 = !{!4517, !4518, !4519, !4520, !4607, !4612}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4515, file: !4263, line: 1089, baseType: !226, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !4515, file: !4263, line: 1090, baseType: !226, size: 32, offset: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4515, file: !4263, line: 1091, baseType: !231, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !4515, file: !4263, line: 1092, baseType: !4521, size: 1344, offset: 128)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !4263, line: 992, size: 1344, elements: !4522)
!4522 = !{!4523, !4524, !4593, !4603, !4604, !4605, !4606}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !4521, file: !4263, line: 993, baseType: !226, size: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !4521, file: !4263, line: 994, baseType: !4525, size: 416, offset: 32)
!4525 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !4263, line: 939, size: 416, elements: !4526)
!4526 = !{!4527, !4535, !4536, !4537, !4544, !4545, !4554, !4563, !4564, !4565, !4572, !4573, !4581, !4589}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !4525, file: !4263, line: 940, baseType: !4528, size: 128)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !4263, line: 845, size: 128, elements: !4529)
!4529 = !{!4530, !4531, !4532, !4533, !4534}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !4528, file: !4263, line: 846, baseType: !2014, size: 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !4528, file: !4263, line: 847, baseType: !2014, size: 32, offset: 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !4528, file: !4263, line: 848, baseType: !2032, size: 16, offset: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !4528, file: !4263, line: 849, baseType: !2032, size: 16, offset: 80)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4528, file: !4263, line: 850, baseType: !1399, size: 8, offset: 96)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !4525, file: !4263, line: 941, baseType: !4528, size: 128)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !4525, file: !4263, line: 942, baseType: !4528, size: 128)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !4525, file: !4263, line: 943, baseType: !4538, size: 128)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !4263, line: 862, size: 128, elements: !4539)
!4539 = !{!4540, !4541, !4542, !4543}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !4538, file: !4263, line: 863, baseType: !2014, size: 32)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !4538, file: !4263, line: 864, baseType: !2014, size: 32, offset: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4538, file: !4263, line: 865, baseType: !2014, size: 32, offset: 64)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4538, file: !4263, line: 866, baseType: !1399, size: 8, offset: 96)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !4525, file: !4263, line: 944, baseType: !4538, size: 128)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !4525, file: !4263, line: 945, baseType: !4546, size: 128)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !4263, line: 880, size: 128, elements: !4547)
!4547 = !{!4548, !4549, !4550, !4551, !4552, !4553}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !4546, file: !4263, line: 881, baseType: !2014, size: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !4546, file: !4263, line: 882, baseType: !2014, size: 32, offset: 32)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !4546, file: !4263, line: 883, baseType: !2014, size: 32, offset: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4546, file: !4263, line: 884, baseType: !1399, size: 8, offset: 96)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !4546, file: !4263, line: 885, baseType: !1399, size: 8, offset: 104)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !4546, file: !4263, line: 886, baseType: !1399, size: 8, offset: 112)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !4525, file: !4263, line: 946, baseType: !4555, size: 320)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !4263, line: 899, size: 320, elements: !4556)
!4556 = !{!4557, !4559, !4560, !4561, !4562}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !4555, file: !4263, line: 900, baseType: !4558, size: 128)
!4558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 128, elements: !1207)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !4555, file: !4263, line: 901, baseType: !4558, size: 128, offset: 128)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !4555, file: !4263, line: 902, baseType: !2032, size: 16, offset: 256)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !4555, file: !4263, line: 903, baseType: !2032, size: 16, offset: 272)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !4555, file: !4263, line: 904, baseType: !1399, size: 8, offset: 288)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !4525, file: !4263, line: 947, baseType: !4555, size: 320)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !4525, file: !4263, line: 948, baseType: !4555, size: 320)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !4525, file: !4263, line: 949, baseType: !4566, size: 320)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !4263, line: 916, size: 320, elements: !4567)
!4567 = !{!4568, !4569, !4570, !4571}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !4566, file: !4263, line: 917, baseType: !4558, size: 128)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !4566, file: !4263, line: 918, baseType: !4558, size: 128, offset: 128)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4566, file: !4263, line: 919, baseType: !2014, size: 32, offset: 256)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !4566, file: !4263, line: 920, baseType: !1399, size: 8, offset: 288)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !4525, file: !4263, line: 950, baseType: !4566, size: 320)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !4525, file: !4263, line: 951, baseType: !4574, size: 320)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !4263, line: 931, size: 320, elements: !4575)
!4575 = !{!4576, !4577, !4578, !4579, !4580}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !4574, file: !4263, line: 932, baseType: !4558, size: 128)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !4574, file: !4263, line: 933, baseType: !4558, size: 128, offset: 128)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !4574, file: !4263, line: 934, baseType: !2014, size: 32, offset: 256)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !4574, file: !4263, line: 935, baseType: !1399, size: 8, offset: 288)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !4574, file: !4263, line: 936, baseType: !1399, size: 8, offset: 296)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !4525, file: !4263, line: 952, baseType: !4582, size: 112)
!4582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !4583, line: 164, size: 112, elements: !4584)
!4583 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!4584 = !{!4585, !4587, !4588}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !4582, file: !4583, line: 165, baseType: !4586, size: 48)
!4586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 48, elements: !1663)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !4582, file: !4583, line: 166, baseType: !4586, size: 48, offset: 48)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !4582, file: !4583, line: 167, baseType: !2032, size: 16, offset: 96)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !4525, file: !4263, line: 953, baseType: !4590, size: 416)
!4590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 416, elements: !4591)
!4591 = !{!4592}
!4592 = !DISubrange(count: 52)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !4521, file: !4263, line: 995, baseType: !4594, size: 160, offset: 448)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !4263, line: 967, size: 160, elements: !4595)
!4595 = !{!4596, !4598, !4599, !4600, !4601}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4594, file: !4263, line: 968, baseType: !4597, size: 16)
!4597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 16, elements: !1906)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !4594, file: !4263, line: 969, baseType: !4586, size: 48, offset: 16)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !4594, file: !4263, line: 970, baseType: !2032, size: 16, offset: 64)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !4594, file: !4263, line: 971, baseType: !2032, size: 16, offset: 80)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4594, file: !4263, line: 972, baseType: !4602, size: 64, offset: 96)
!4602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 64, elements: !1906)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !4521, file: !4263, line: 996, baseType: !4525, size: 416, offset: 608)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !4521, file: !4263, line: 997, baseType: !4594, size: 160, offset: 1024)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !4521, file: !4263, line: 998, baseType: !231, size: 64, offset: 1216)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !4521, file: !4263, line: 999, baseType: !226, size: 32, offset: 1280)
!4607 = !DIDerivedType(tag: DW_TAG_member, scope: !4515, file: !4263, line: 1093, baseType: !4608, size: 32, offset: 1472)
!4608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4515, file: !4263, line: 1093, size: 32, elements: !4609)
!4609 = !{!4610, !4611}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !4608, file: !4263, line: 1094, baseType: !226, size: 32)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !4608, file: !4263, line: 1095, baseType: !226, size: 32)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !4515, file: !4263, line: 1097, baseType: !4613, offset: 1504)
!4613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !1927)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !4253, file: !4254, line: 463, baseType: !4615, size: 64, offset: 1984)
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = !DISubroutineType(types: !4617)
!4617 = !{!6, !2164, !4514}
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !4253, file: !4254, line: 464, baseType: !4619, size: 64, offset: 2048)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4620, size: 64)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!6, !2164, !4622}
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !4263, line: 1217, size: 1088, elements: !4624)
!4624 = !{!4625, !4626, !4627}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4623, file: !4263, line: 1218, baseType: !226, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !4623, file: !4263, line: 1219, baseType: !226, size: 32, offset: 32)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4623, file: !4263, line: 1220, baseType: !3215, size: 1024, offset: 64)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4253, file: !4254, line: 465, baseType: !4629, size: 64, offset: 2112)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!6, !2164, !1462}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !4253, file: !4254, line: 466, baseType: !4309, size: 64, offset: 2176)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !4253, file: !4254, line: 467, baseType: !4309, size: 64, offset: 2240)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !4253, file: !4254, line: 468, baseType: !4635, size: 64, offset: 2304)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!6, !2164, !1462, !2742, !2742}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !4253, file: !4254, line: 470, baseType: !4639, size: 64, offset: 2368)
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 64)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{!6, !2164, !4642, !4150, !4151}
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !4253, file: !4254, line: 472, baseType: !4644, size: 64, offset: 2432)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!6, !2164, !1462, !2742, !2742, !224}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !4253, file: !4254, line: 474, baseType: !4648, size: 64, offset: 2496)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!6, !2164, !4642, !4150, !4151, !1462, !299}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !4253, file: !4254, line: 477, baseType: !4652, size: 64, offset: 2560)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{null, !2164, !4655}
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !4263, line: 541, size: 288, elements: !4657)
!4657 = !{!4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4656, file: !4263, line: 542, baseType: !226, size: 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !4656, file: !4263, line: 543, baseType: !226, size: 32, offset: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !4656, file: !4263, line: 544, baseType: !226, size: 32, offset: 64)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !4656, file: !4263, line: 545, baseType: !226, size: 32, offset: 96)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !4656, file: !4263, line: 546, baseType: !226, size: 32, offset: 128)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !4656, file: !4263, line: 547, baseType: !226, size: 32, offset: 160)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !4656, file: !4263, line: 548, baseType: !226, size: 32, offset: 192)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !4656, file: !4263, line: 549, baseType: !226, size: 32, offset: 224)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !4656, file: !4263, line: 550, baseType: !226, size: 32, offset: 256)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !4253, file: !4254, line: 478, baseType: !4668, size: 64, offset: 2624)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!6, !2164, !4655}
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !4253, file: !4254, line: 479, baseType: !4672, size: 64, offset: 2688)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{!6, !2164, !4675}
!4675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4676, size: 64)
!4676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !4263, line: 1237, size: 128, elements: !4677)
!4677 = !{!4678, !4679, !4680, !4681, !4682}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4676, file: !4263, line: 1238, baseType: !226, size: 32)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4676, file: !4263, line: 1239, baseType: !226, size: 32, offset: 32)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4676, file: !4263, line: 1240, baseType: !226, size: 32, offset: 64)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4676, file: !4263, line: 1241, baseType: !226, size: 32, offset: 96)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4676, file: !4263, line: 1242, baseType: !4291, offset: 128)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !4253, file: !4254, line: 480, baseType: !4684, size: 64, offset: 2752)
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = !DISubroutineType(types: !4686)
!4686 = !{!6, !2164, !4675, !154}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !4253, file: !4254, line: 482, baseType: !4672, size: 64, offset: 2816)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !4253, file: !4254, line: 483, baseType: !4689, size: 64, offset: 2880)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!6, !2164, !4692}
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !4263, line: 1317, size: 352, elements: !4694)
!4694 = !{!4695, !4696, !4697, !4698, !4699, !4701, !4702}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4693, file: !4263, line: 1318, baseType: !226, size: 32)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !4693, file: !4263, line: 1319, baseType: !226, size: 32, offset: 32)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !4693, file: !4263, line: 1320, baseType: !1497, size: 32, offset: 64)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !4693, file: !4263, line: 1321, baseType: !226, size: 32, offset: 96)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !4693, file: !4263, line: 1322, baseType: !4700, size: 96, offset: 128)
!4700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 96, elements: !81)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !4693, file: !4263, line: 1323, baseType: !226, size: 32, offset: 224)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !4693, file: !4263, line: 1324, baseType: !4700, size: 96, offset: 256)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !4253, file: !4254, line: 484, baseType: !4704, size: 64, offset: 2944)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!6, !2164, !4707}
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !4263, line: 382, size: 352, elements: !4709)
!4709 = !{!4710, !4711, !4712, !4713}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4708, file: !4263, line: 383, baseType: !226, size: 32)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4708, file: !4263, line: 384, baseType: !226, size: 32, offset: 32)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !4708, file: !4263, line: 385, baseType: !226, size: 32, offset: 64)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4708, file: !4263, line: 386, baseType: !4714, size: 256, offset: 96)
!4714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 256, elements: !1376)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !4253, file: !4254, line: 486, baseType: !4378, size: 64, offset: 3008)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !4253, file: !4254, line: 488, baseType: !4717, size: 64, offset: 3072)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!6, !2164, !4720}
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4721, size: 64)
!4721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !4263, line: 360, size: 320, elements: !4722)
!4722 = !{!4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4721, file: !4263, line: 361, baseType: !226, size: 32)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4721, file: !4263, line: 362, baseType: !226, size: 32, offset: 32)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !4721, file: !4263, line: 363, baseType: !226, size: 32, offset: 64)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !4721, file: !4263, line: 364, baseType: !226, size: 32, offset: 96)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !4721, file: !4263, line: 365, baseType: !226, size: 32, offset: 128)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !4721, file: !4263, line: 366, baseType: !226, size: 32, offset: 160)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !4721, file: !4263, line: 367, baseType: !226, size: 32, offset: 192)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !4721, file: !4263, line: 368, baseType: !226, size: 32, offset: 224)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4721, file: !4263, line: 369, baseType: !1905, size: 64, offset: 256)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !4253, file: !4254, line: 489, baseType: !4717, size: 64, offset: 3136)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !4253, file: !4254, line: 490, baseType: !4734, size: 64, offset: 3200)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!6, !2164, !4737, !154}
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4739)
!4739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !4263, line: 244, size: 128, elements: !4740)
!4740 = !{!4741, !4742, !4743, !4744, !4745}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4739, file: !4263, line: 245, baseType: !226, size: 32)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4739, file: !4263, line: 246, baseType: !226, size: 32, offset: 32)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !4739, file: !4263, line: 247, baseType: !226, size: 32, offset: 64)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4739, file: !4263, line: 248, baseType: !226, size: 32, offset: 96)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4739, file: !4263, line: 249, baseType: !4746, offset: 128)
!4746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, elements: !1927)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !4253, file: !4254, line: 492, baseType: !4748, size: 64, offset: 3264)
!4748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4749, size: 64)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{!6, !2164, !4737, !2449}
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !4253, file: !4254, line: 494, baseType: !4752, size: 64, offset: 3328)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!6, !2164, !224, !4394}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !4253, file: !4254, line: 496, baseType: !4752, size: 64, offset: 3392)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !4253, file: !4254, line: 498, baseType: !4757, size: 64, offset: 3456)
!4757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4758, size: 64)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!6, !2164, !4760}
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !4254, line: 124, size: 768, elements: !4762)
!4762 = !{!4763, !4788}
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4761, file: !4254, line: 125, baseType: !4764, size: 384)
!4764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !4263, line: 1996, size: 384, elements: !4765)
!4765 = !{!4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4778, !4779, !4780, !4781, !4783, !4787}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4764, file: !4263, line: 1997, baseType: !226, size: 32)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !4764, file: !4263, line: 1998, baseType: !226, size: 32, offset: 32)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !4764, file: !4263, line: 1999, baseType: !1399, size: 8, offset: 64)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4764, file: !4263, line: 2000, baseType: !1399, size: 8, offset: 72)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !4764, file: !4263, line: 2001, baseType: !1399, size: 8, offset: 80)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !4764, file: !4263, line: 2002, baseType: !1399, size: 8, offset: 88)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !4764, file: !4263, line: 2003, baseType: !1399, size: 8, offset: 96)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !4764, file: !4263, line: 2004, baseType: !1399, size: 8, offset: 104)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !4764, file: !4263, line: 2005, baseType: !1399, size: 8, offset: 112)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !4764, file: !4263, line: 2006, baseType: !4776, size: 8, offset: 120)
!4776 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !227, line: 20, baseType: !4777)
!4777 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !4764, file: !4263, line: 2007, baseType: !1399, size: 8, offset: 128)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !4764, file: !4263, line: 2008, baseType: !1399, size: 8, offset: 136)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !4764, file: !4263, line: 2009, baseType: !1399, size: 8, offset: 144)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4764, file: !4263, line: 2010, baseType: !4782, size: 8, offset: 152)
!4782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 8, elements: !1417)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4764, file: !4263, line: 2011, baseType: !4784, size: 224, offset: 160)
!4784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 224, elements: !4785)
!4785 = !{!4786}
!4786 = !DISubrange(count: 7)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !4764, file: !4263, line: 2012, baseType: !4613, offset: 384)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !4761, file: !4254, line: 130, baseType: !4789, size: 384, offset: 384)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4761, file: !4254, line: 126, size: 384, elements: !4790)
!4790 = !{!4791, !4793, !4794}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4789, file: !4254, line: 127, baseType: !4792, size: 128)
!4792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 128, elements: !1906)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !4789, file: !4254, line: 128, baseType: !4792, size: 128, offset: 128)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !4789, file: !4254, line: 129, baseType: !4792, size: 128, offset: 256)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !4253, file: !4254, line: 500, baseType: !4796, size: 64, offset: 3520)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{!6, !2164, !4799}
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4761)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !4253, file: !4254, line: 502, baseType: !4802, size: 64, offset: 3584)
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4803, size: 64)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{!6, !2164, !4805}
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !4263, line: 1389, size: 128, elements: !4807)
!4807 = !{!4808, !4809, !4810, !4811}
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4806, file: !4263, line: 1390, baseType: !226, size: 32)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !4806, file: !4263, line: 1392, baseType: !226, size: 32, offset: 32)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !4806, file: !4263, line: 1393, baseType: !226, size: 32, offset: 64)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4806, file: !4263, line: 1394, baseType: !226, size: 32, offset: 96)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !4253, file: !4254, line: 504, baseType: !4802, size: 64, offset: 3648)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !4253, file: !4254, line: 506, baseType: !4493, size: 64, offset: 3712)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !4253, file: !4254, line: 508, baseType: !4734, size: 64, offset: 3776)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !4253, file: !4254, line: 510, baseType: !4748, size: 64, offset: 3840)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !2165, file: !2166, line: 1922, baseType: !4817, size: 64, offset: 4096)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4819)
!4819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !4820, line: 202, size: 384, elements: !4821)
!4820 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!4821 = !{!4822, !4826, !4844, !4850, !4855, !4859}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !4819, file: !4820, line: 203, baseType: !4823, size: 64)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!6, !1398}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !4819, file: !4820, line: 204, baseType: !4827, size: 64, offset: 64)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!6, !2451, !4830, !4835}
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !4820, line: 105, size: 16, elements: !4832)
!4832 = !{!4833, !4834}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !4831, file: !4820, line: 106, baseType: !1399, size: 8)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !4831, file: !4820, line: 107, baseType: !1399, size: 8, offset: 8)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !4820, line: 111, size: 1088, elements: !4837)
!4837 = !{!4838, !4842, !4843}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !4836, file: !4820, line: 112, baseType: !4839, size: 960)
!4839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4830, size: 960, elements: !4840)
!4840 = !{!4841}
!4841 = !DISubrange(count: 15)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !4836, file: !4820, line: 117, baseType: !4830, size: 64, offset: 960)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !4836, file: !4820, line: 118, baseType: !4830, size: 64, offset: 1024)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !4819, file: !4820, line: 207, baseType: !4845, size: 64, offset: 128)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{null, !2451, !2433, !224, !1398, !4848}
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4836)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !4819, file: !4820, line: 210, baseType: !4851, size: 64, offset: 192)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!6, !2451, !1398, !2433, !2742, !4854}
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !4819, file: !4820, line: 213, baseType: !4856, size: 64, offset: 256)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{null, !2451, !2148, !1398, !4150}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !4819, file: !4820, line: 216, baseType: !4860, size: 64, offset: 320)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{null, !1970, !2164, !4863, !4889, !5391, !6, !224, !299, !299, !226, !224, !299}
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4865)
!4865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !4866, line: 27, size: 256, elements: !4867)
!4866 = !DIFile(filename: "./include/net/addrconf.h", directory: "/home/lizy2001/genbc/linux")
!4867 = !{!4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4865, file: !4866, line: 28, baseType: !1399, size: 8)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4865, file: !4866, line: 29, baseType: !1399, size: 8, offset: 8)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !4865, file: !4866, line: 30, baseType: !1399, size: 8, offset: 16)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4865, file: !4866, line: 37, baseType: !1399, size: 6, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !4865, file: !4866, line: 38, baseType: !1399, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 24)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "onlink", scope: !4865, file: !4866, line: 39, baseType: !1399, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 24)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4865, file: !4866, line: 43, baseType: !2014, size: 32, offset: 32)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "prefered", scope: !4865, file: !4866, line: 44, baseType: !2014, size: 32, offset: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4865, file: !4866, line: 45, baseType: !2014, size: 32, offset: 96)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !4865, file: !4866, line: 47, baseType: !4878, size: 128, offset: 128)
!4878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !4879, line: 33, size: 128, elements: !4880)
!4879 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!4880 = !{!4881}
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !4878, file: !4879, line: 40, baseType: !4882, size: 128)
!4882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4878, file: !4879, line: 34, size: 128, elements: !4883)
!4883 = !{!4884, !4886, !4888}
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !4882, file: !4879, line: 35, baseType: !4885, size: 128)
!4885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 128, elements: !1939)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !4882, file: !4879, line: 37, baseType: !4887, size: 128)
!4887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 128, elements: !1376)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !4882, file: !4879, line: 38, baseType: !4558, size: 128)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !4891, line: 163, size: 4544, elements: !4892)
!4891 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!4892 = !{!4893, !4894, !4895, !4923, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !5297, !5298, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5358, !5386, !5387, !5388, !5389, !5390}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4890, file: !4891, line: 164, baseType: !2164, size: 64)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !4890, file: !4891, line: 166, baseType: !25, size: 128, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !4890, file: !4891, line: 168, baseType: !4896, size: 64, offset: 192)
!4896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4897, size: 64)
!4897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !4891, line: 114, size: 1152, elements: !4898)
!4898 = !{!4899, !4900, !4901, !4902, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4922}
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !4897, file: !4891, line: 115, baseType: !4878, size: 128)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !4897, file: !4891, line: 116, baseType: !4889, size: 64, offset: 128)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4897, file: !4891, line: 117, baseType: !4896, size: 64, offset: 192)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !4897, file: !4891, line: 118, baseType: !4903, size: 64, offset: 256)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !4891, line: 99, size: 384, elements: !4905)
!4905 = !{!4906, !4907, !4908, !4909, !4910, !4911}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !4904, file: !4891, line: 100, baseType: !4903, size: 64)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !4904, file: !4891, line: 101, baseType: !4878, size: 128, offset: 64)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !4904, file: !4891, line: 102, baseType: !4792, size: 128, offset: 192)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !4904, file: !4891, line: 103, baseType: !236, size: 8, offset: 320)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !4904, file: !4891, line: 104, baseType: !236, size: 8, offset: 328)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !4904, file: !4891, line: 105, baseType: !236, size: 8, offset: 336)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !4897, file: !4891, line: 119, baseType: !4903, size: 64, offset: 320)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !4897, file: !4891, line: 120, baseType: !194, size: 32, offset: 384)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !4897, file: !4891, line: 121, baseType: !236, size: 8, offset: 416)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !4897, file: !4891, line: 122, baseType: !4792, size: 128, offset: 448)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !4897, file: !4891, line: 123, baseType: !2561, size: 320, offset: 576)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !4897, file: !4891, line: 124, baseType: !194, size: 32, offset: 896)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !4897, file: !4891, line: 125, baseType: !6, size: 32, offset: 928)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !4897, file: !4891, line: 126, baseType: !875, size: 32, offset: 960)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !4897, file: !4891, line: 127, baseType: !39, offset: 992)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !4897, file: !4891, line: 128, baseType: !130, size: 64, offset: 1024)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !4897, file: !4891, line: 129, baseType: !130, size: 64, offset: 1088)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !4890, file: !4891, line: 169, baseType: !4896, size: 64, offset: 256)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !4890, file: !4891, line: 170, baseType: !39, offset: 320)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !4890, file: !4891, line: 172, baseType: !236, size: 8, offset: 320)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !4890, file: !4891, line: 173, baseType: !236, size: 8, offset: 328)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !4890, file: !4891, line: 174, baseType: !236, size: 8, offset: 336)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !4890, file: !4891, line: 175, baseType: !236, size: 8, offset: 344)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !4890, file: !4891, line: 177, baseType: !130, size: 64, offset: 384)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !4890, file: !4891, line: 178, baseType: !130, size: 64, offset: 448)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !4890, file: !4891, line: 179, baseType: !130, size: 64, offset: 512)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !4890, file: !4891, line: 180, baseType: !130, size: 64, offset: 576)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !4890, file: !4891, line: 182, baseType: !2561, size: 320, offset: 640)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !4890, file: !4891, line: 183, baseType: !2561, size: 320, offset: 960)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !4890, file: !4891, line: 184, baseType: !2561, size: 320, offset: 1280)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !4890, file: !4891, line: 186, baseType: !4937, size: 64, offset: 1600)
!4937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4938, size: 64)
!4938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !4891, line: 140, size: 704, elements: !4939)
!4939 = !{!4940, !4941, !5290, !5291, !5292, !5293, !5294, !5295, !5296}
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !4938, file: !4891, line: 141, baseType: !4878, size: 128)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !4938, file: !4891, line: 142, baseType: !4942, size: 64, offset: 128)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !4944, line: 163, size: 1280, elements: !4945)
!4944 = !DIFile(filename: "./include/net/ip6_fib.h", directory: "/home/lizy2001/genbc/linux")
!4945 = !{!4946, !4975, !4976, !4977, !4982, !4983, !4984, !4985, !4995, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5288}
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_table", scope: !4943, file: !4944, line: 164, baseType: !4947, size: 64)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !4944, line: 390, size: 896, elements: !4949)
!4949 = !{!4950, !4951, !4952, !4953, !4966, !4973, !4974}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_hlist", scope: !4948, file: !4944, line: 391, baseType: !450, size: 128)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_id", scope: !4948, file: !4944, line: 392, baseType: !224, size: 32, offset: 128)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_lock", scope: !4948, file: !4944, line: 393, baseType: !39, offset: 160)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_root", scope: !4948, file: !4944, line: 394, baseType: !4954, size: 512, offset: 192)
!4954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_node", file: !4944, line: 72, size: 512, elements: !4955)
!4955 = !{!4956, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965}
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4954, file: !4944, line: 73, baseType: !4957, size: 64)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4954, size: 64)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !4954, file: !4944, line: 74, baseType: !4957, size: 64, offset: 64)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !4954, file: !4944, line: 75, baseType: !4957, size: 64, offset: 128)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !4954, file: !4944, line: 79, baseType: !4942, size: 64, offset: 192)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "fn_bit", scope: !4954, file: !4944, line: 81, baseType: !740, size: 16, offset: 256)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "fn_flags", scope: !4954, file: !4944, line: 82, baseType: !740, size: 16, offset: 272)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "fn_sernum", scope: !4954, file: !4944, line: 83, baseType: !6, size: 32, offset: 288)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "rr_ptr", scope: !4954, file: !4944, line: 84, baseType: !4942, size: 64, offset: 320)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4954, file: !4944, line: 85, baseType: !173, size: 128, align: 64, offset: 384)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_peers", scope: !4948, file: !4944, line: 395, baseType: !4967, size: 128, offset: 704)
!4967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !4968, line: 61, size: 128, elements: !4969)
!4968 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!4969 = !{!4970, !4971, !4972}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !4967, file: !4968, line: 62, baseType: !636, size: 64)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4967, file: !4968, line: 63, baseType: !2633, size: 32, offset: 64)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !4967, file: !4968, line: 64, baseType: !6, size: 32, offset: 96)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4948, file: !4944, line: 396, baseType: !194, size: 32, offset: 832)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !4948, file: !4944, line: 397, baseType: !194, size: 32, offset: 864)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_next", scope: !4943, file: !4944, line: 165, baseType: !4942, size: 64, offset: 64)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_node", scope: !4943, file: !4944, line: 166, baseType: !4957, size: 64, offset: 128)
!4977 = !DIDerivedType(tag: DW_TAG_member, scope: !4943, file: !4944, line: 173, baseType: !4978, size: 128, offset: 192)
!4978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4943, file: !4944, line: 173, size: 128, elements: !4979)
!4979 = !{!4980, !4981}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_siblings", scope: !4978, file: !4944, line: 174, baseType: !25, size: 128)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !4978, file: !4944, line: 175, baseType: !25, size: 128)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nsiblings", scope: !4943, file: !4944, line: 177, baseType: !194, size: 32, offset: 320)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_ref", scope: !4943, file: !4944, line: 179, baseType: !875, size: 32, offset: 352)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4943, file: !4944, line: 180, baseType: !130, size: 64, offset: 384)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metrics", scope: !4943, file: !4944, line: 181, baseType: !4986, size: 64, offset: 448)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_metrics", file: !4988, line: 81, size: 576, align: 32, elements: !4989)
!4988 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!4989 = !{!4990, !4994}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !4987, file: !4988, line: 82, baseType: !4991, size: 544)
!4991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 544, elements: !4992)
!4992 = !{!4993}
!4993 = !DISubrange(count: 17)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4987, file: !4988, line: 83, baseType: !875, size: 32, offset: 544)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_dst", scope: !4943, file: !4944, line: 184, baseType: !4996, size: 160, offset: 512)
!4996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6key", file: !4944, line: 129, size: 160, elements: !4997)
!4997 = !{!4998, !4999}
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4996, file: !4944, line: 130, baseType: !4878, size: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "plen", scope: !4996, file: !4944, line: 131, baseType: !6, size: 32, offset: 128)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_flags", scope: !4943, file: !4944, line: 185, baseType: !224, size: 32, offset: 672)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_src", scope: !4943, file: !4944, line: 186, baseType: !4996, size: 160, offset: 704)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_prefsrc", scope: !4943, file: !4944, line: 187, baseType: !4996, size: 160, offset: 864)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metric", scope: !4943, file: !4944, line: 189, baseType: !224, size: 32, offset: 1024)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_protocol", scope: !4943, file: !4944, line: 190, baseType: !1398, size: 8, offset: 1056)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_type", scope: !4943, file: !4944, line: 191, baseType: !1398, size: 8, offset: 1064)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "should_flush", scope: !4943, file: !4944, line: 192, baseType: !1398, size: 1, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nocount", scope: !4943, file: !4944, line: 193, baseType: !1398, size: 1, offset: 1073, flags: DIFlagBitField, extraData: i64 1072)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nopolicy", scope: !4943, file: !4944, line: 194, baseType: !1398, size: 1, offset: 1074, flags: DIFlagBitField, extraData: i64 1072)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_destroying", scope: !4943, file: !4944, line: 195, baseType: !1398, size: 1, offset: 1075, flags: DIFlagBitField, extraData: i64 1072)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !4943, file: !4944, line: 196, baseType: !1398, size: 1, offset: 1076, flags: DIFlagBitField, extraData: i64 1072)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "trap", scope: !4943, file: !4944, line: 197, baseType: !1398, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4943, file: !4944, line: 198, baseType: !1398, size: 2, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4943, file: !4944, line: 200, baseType: !173, size: 128, align: 64, offset: 1088)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !4943, file: !4944, line: 201, baseType: !5015, size: 64, offset: 1216)
!5015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nexthop", file: !5017, line: 84, size: 1088, elements: !5018)
!5017 = !DIFile(filename: "./include/net/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!5018 = !{!5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5016, file: !5017, line: 85, baseType: !640, size: 192, align: 64)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "fi_list", scope: !5016, file: !5017, line: 86, baseType: !25, size: 128, offset: 192)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "f6i_list", scope: !5016, file: !5017, line: 87, baseType: !25, size: 128, offset: 320)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_list", scope: !5016, file: !5017, line: 88, baseType: !25, size: 128, offset: 448)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "grp_list", scope: !5016, file: !5017, line: 89, baseType: !25, size: 128, offset: 576)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !5016, file: !5017, line: 90, baseType: !1970, size: 64, offset: 704)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5016, file: !5017, line: 92, baseType: !224, size: 32, offset: 768)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5016, file: !5017, line: 94, baseType: !1398, size: 8, offset: 800)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "nh_flags", scope: !5016, file: !5017, line: 95, baseType: !1398, size: 8, offset: 808)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "is_group", scope: !5016, file: !5017, line: 96, baseType: !299, size: 8, offset: 816)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5016, file: !5017, line: 98, baseType: !875, size: 32, offset: 832)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5016, file: !5017, line: 99, baseType: !173, size: 128, align: 64, offset: 896)
!5031 = !DIDerivedType(tag: DW_TAG_member, scope: !5016, file: !5017, line: 101, baseType: !5032, size: 64, offset: 1024)
!5032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5016, file: !5017, line: 101, size: 64, elements: !5033)
!5033 = !{!5034, !5270}
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "nh_info", scope: !5032, file: !5017, line: 102, baseType: !5035, size: 64)
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 64)
!5036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_info", file: !5017, line: 51, size: 1088, elements: !5037)
!5037 = !{!5038, !5039, !5040, !5041, !5042, !5043}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "dev_hash", scope: !5036, file: !5017, line: 52, baseType: !450, size: 128)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !5036, file: !5017, line: 53, baseType: !5015, size: 64, offset: 128)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !5036, file: !5017, line: 55, baseType: !1398, size: 8, offset: 192)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "reject_nh", scope: !5036, file: !5017, line: 56, baseType: !299, size: 8, offset: 200)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !5036, file: !5017, line: 57, baseType: !299, size: 8, offset: 208)
!5043 = !DIDerivedType(tag: DW_TAG_member, scope: !5036, file: !5017, line: 59, baseType: !5044, size: 832, offset: 256)
!5044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5036, file: !5017, line: 59, size: 832, elements: !5045)
!5045 = !{!5046, !5211, !5244}
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhc", scope: !5044, file: !5017, line: 60, baseType: !5047, size: 576)
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_common", file: !5048, line: 80, size: 576, elements: !5049)
!5048 = !DIFile(filename: "./include/net/ip_fib.h", directory: "/home/lizy2001/genbc/linux")
!5049 = !{!5050, !5051, !5052, !5053, !5054, !5055, !5056, !5076, !5081, !5082, !5083, !5191, !5192}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_dev", scope: !5047, file: !5048, line: 81, baseType: !2164, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_oif", scope: !5047, file: !5048, line: 82, baseType: !6, size: 32, offset: 64)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_scope", scope: !5047, file: !5048, line: 83, baseType: !236, size: 8, offset: 96)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_family", scope: !5047, file: !5048, line: 84, baseType: !1398, size: 8, offset: 104)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw_family", scope: !5047, file: !5048, line: 85, baseType: !1398, size: 8, offset: 112)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_flags", scope: !5047, file: !5048, line: 86, baseType: !236, size: 8, offset: 120)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_lwtstate", scope: !5047, file: !5048, line: 87, baseType: !5057, size: 64, offset: 128)
!5057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5058, size: 64)
!5058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !5059, line: 25, size: 384, elements: !5060)
!5059 = !DIFile(filename: "./include/net/lwtunnel.h", directory: "/home/lizy2001/genbc/linux")
!5060 = !{!5061, !5062, !5063, !5064, !5065, !5069, !5073, !5074}
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5058, file: !5059, line: 26, baseType: !740, size: 16)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5058, file: !5059, line: 27, baseType: !740, size: 16, offset: 16)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5058, file: !5059, line: 28, baseType: !740, size: 16, offset: 32)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5058, file: !5059, line: 29, baseType: !627, size: 32, offset: 64)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "orig_output", scope: !5058, file: !5059, line: 30, baseType: !5066, size: 64, offset: 128)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 64)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!6, !1970, !1998, !2148}
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "orig_input", scope: !5058, file: !5059, line: 31, baseType: !5070, size: 64, offset: 192)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!6, !2148}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5058, file: !5059, line: 32, baseType: !173, size: 128, align: 64, offset: 256)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5058, file: !5059, line: 33, baseType: !5075, offset: 384)
!5075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, elements: !2184)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw", scope: !5047, file: !5048, line: 92, baseType: !5077, size: 128, offset: 192)
!5077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5047, file: !5048, line: 89, size: 128, elements: !5078)
!5078 = !{!5079, !5080}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !5077, file: !5048, line: 90, baseType: !2014, size: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !5077, file: !5048, line: 91, baseType: !4878, size: 128)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_weight", scope: !5047, file: !5048, line: 94, baseType: !6, size: 32, offset: 320)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_upper_bound", scope: !5047, file: !5048, line: 95, baseType: !627, size: 32, offset: 352)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_pcpu_rth_output", scope: !5047, file: !5048, line: 98, baseType: !5084, size: 64, offset: 384)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!5085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 64)
!5086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtable", file: !5087, line: 49, size: 1408, elements: !5088)
!5087 = !DIFile(filename: "./include/net/route.h", directory: "/home/lizy2001/genbc/linux")
!5088 = !{!5089, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5185, !5186, !5187, !5188}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5086, file: !5087, line: 50, baseType: !5090, size: 896)
!5090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !4988, line: 24, size: 896, elements: !5091)
!5091 = !{!5092, !5093, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5090, file: !4988, line: 25, baseType: !2164, size: 64)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5090, file: !4988, line: 26, baseType: !5094, size: 64, offset: 64)
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 64)
!5095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !5096, line: 15, size: 1088, elements: !5097)
!5096 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!5097 = !{!5098, !5099, !5100, !5104, !5109, !5115, !5116, !5120, !5124, !5128, !5132, !5133, !5137, !5141, !5142, !5146, !5150, !5151}
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !5095, file: !5096, line: 16, baseType: !122, size: 16)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !5095, file: !5096, line: 17, baseType: !194, size: 32, offset: 32)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5095, file: !5096, line: 19, baseType: !5101, size: 64, offset: 64)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!6, !5094}
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !5095, file: !5096, line: 20, baseType: !5105, size: 64, offset: 128)
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5106, size: 64)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!5108, !5108, !226}
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 64)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !5095, file: !5096, line: 21, baseType: !5110, size: 64, offset: 192)
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5111, size: 64)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!194, !5113}
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5090)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !5095, file: !5096, line: 22, baseType: !5110, size: 64, offset: 256)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !5095, file: !5096, line: 23, baseType: !5117, size: 64, offset: 320)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!1462, !5108, !130}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5095, file: !5096, line: 24, baseType: !5121, size: 64, offset: 384)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{null, !5108}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !5095, file: !5096, line: 25, baseType: !5125, size: 64, offset: 448)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{null, !5108, !2164, !6}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !5095, file: !5096, line: 27, baseType: !5129, size: 64, offset: 512)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!5108, !5108}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !5095, file: !5096, line: 28, baseType: !2480, size: 64, offset: 576)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !5095, file: !5096, line: 29, baseType: !5134, size: 64, offset: 640)
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{null, !5108, !1998, !2148, !224, !299}
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !5095, file: !5096, line: 32, baseType: !5138, size: 64, offset: 704)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{null, !5108, !1998, !2148}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !5095, file: !5096, line: 34, baseType: !5066, size: 64, offset: 768)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !5095, file: !5096, line: 35, baseType: !5143, size: 64, offset: 832)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{!2433, !5113, !2148, !2449}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !5095, file: !5096, line: 38, baseType: !5147, size: 64, offset: 896)
!5147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5148, size: 64)
!5148 = !DISubroutineType(types: !5149)
!5149 = !{null, !5113, !2449}
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !5095, file: !5096, line: 41, baseType: !980, size: 64, offset: 960)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !5095, file: !5096, line: 43, baseType: !5152, size: 64, offset: 1024)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !5153, line: 97, size: 64, elements: !5154)
!5153 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!5154 = !{!5155}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5152, file: !5153, line: 98, baseType: !563, size: 64)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !5090, file: !4988, line: 27, baseType: !130, size: 64, offset: 128)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !5090, file: !4988, line: 28, baseType: !130, size: 64, offset: 192)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5090, file: !4988, line: 32, baseType: !154, size: 64, offset: 256)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !5090, file: !4988, line: 34, baseType: !5070, size: 64, offset: 320)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !5090, file: !4988, line: 35, baseType: !5066, size: 64, offset: 384)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5090, file: !4988, line: 37, baseType: !122, size: 16, offset: 448)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !5090, file: !4988, line: 54, baseType: !1251, size: 16, offset: 464)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !5090, file: !4988, line: 59, baseType: !122, size: 16, offset: 480)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !5090, file: !4988, line: 60, baseType: !122, size: 16, offset: 496)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !5090, file: !4988, line: 67, baseType: !627, size: 32, offset: 512)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !5090, file: !4988, line: 69, baseType: !6, size: 32, offset: 544)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !5090, file: !4988, line: 70, baseType: !130, size: 64, offset: 576)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !5090, file: !4988, line: 71, baseType: !5057, size: 64, offset: 640)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5090, file: !4988, line: 72, baseType: !173, size: 128, align: 64, offset: 704)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5090, file: !4988, line: 73, baseType: !1251, size: 16, offset: 832)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !5090, file: !4988, line: 74, baseType: !1251, size: 16, offset: 848)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !5090, file: !4988, line: 75, baseType: !226, size: 32, offset: 864)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !5086, file: !5087, line: 52, baseType: !6, size: 32, offset: 896)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "rt_flags", scope: !5086, file: !5087, line: 53, baseType: !194, size: 32, offset: 928)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !5086, file: !5087, line: 54, baseType: !740, size: 16, offset: 960)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "rt_is_input", scope: !5086, file: !5087, line: 55, baseType: !1399, size: 8, offset: 976)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uses_gateway", scope: !5086, file: !5087, line: 56, baseType: !1399, size: 8, offset: 984)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "rt_iif", scope: !5086, file: !5087, line: 58, baseType: !6, size: 32, offset: 992)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw_family", scope: !5086, file: !5087, line: 60, baseType: !1398, size: 8, offset: 1024)
!5180 = !DIDerivedType(tag: DW_TAG_member, scope: !5086, file: !5087, line: 62, baseType: !5181, size: 128, offset: 1056)
!5181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5086, file: !5087, line: 62, size: 128, elements: !5182)
!5182 = !{!5183, !5184}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw4", scope: !5181, file: !5087, line: 63, baseType: !2014, size: 32)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw6", scope: !5181, file: !5087, line: 64, baseType: !4878, size: 128)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mtu_locked", scope: !5086, file: !5087, line: 68, baseType: !224, size: 1, offset: 1184, flags: DIFlagBitField, extraData: i64 1184)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "rt_pmtu", scope: !5086, file: !5087, line: 69, baseType: !224, size: 31, offset: 1185, flags: DIFlagBitField, extraData: i64 1184)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached", scope: !5086, file: !5087, line: 71, baseType: !25, size: 128, offset: 1216)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached_list", scope: !5086, file: !5087, line: 72, baseType: !5189, size: 64, offset: 1344)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 64)
!5190 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncached_list", file: !5087, line: 48, flags: DIFlagFwdDecl)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_rth_input", scope: !5047, file: !5048, line: 99, baseType: !5085, size: 64, offset: 448)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_exceptions", scope: !5047, file: !5048, line: 100, baseType: !5193, size: 64, offset: 512)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fnhe_hash_bucket", file: !5048, line: 72, size: 64, elements: !5195)
!5195 = !{!5196}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5194, file: !5048, line: 73, baseType: !5197, size: 64)
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 64)
!5198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_exception", file: !5048, line: 58, size: 640, elements: !5199)
!5199 = !{!5200, !5201, !5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_next", scope: !5198, file: !5048, line: 59, baseType: !5197, size: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !5198, file: !5048, line: 60, baseType: !6, size: 32, offset: 64)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_daddr", scope: !5198, file: !5048, line: 61, baseType: !2014, size: 32, offset: 96)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_pmtu", scope: !5198, file: !5048, line: 62, baseType: !224, size: 32, offset: 128)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_mtu_locked", scope: !5198, file: !5048, line: 63, baseType: !299, size: 8, offset: 160)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_gw", scope: !5198, file: !5048, line: 64, baseType: !2014, size: 32, offset: 192)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_expires", scope: !5198, file: !5048, line: 65, baseType: !130, size: 64, offset: 256)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_input", scope: !5198, file: !5048, line: 66, baseType: !5085, size: 64, offset: 320)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_output", scope: !5198, file: !5048, line: 67, baseType: !5085, size: 64, offset: 384)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_stamp", scope: !5198, file: !5048, line: 68, baseType: !130, size: 64, offset: 448)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5198, file: !5048, line: 69, baseType: !173, size: 128, align: 64, offset: 512)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !5044, file: !5017, line: 61, baseType: !5212, size: 832)
!5212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh", file: !5048, line: 103, size: 832, elements: !5213)
!5213 = !{!5214, !5215, !5216, !5242, !5243}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !5212, file: !5048, line: 104, baseType: !5047, size: 576)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "nh_hash", scope: !5212, file: !5048, line: 105, baseType: !450, size: 128, offset: 576)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !5212, file: !5048, line: 106, baseType: !5217, size: 64, offset: 704)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_info", file: !5048, line: 131, size: 1024, elements: !5219)
!5219 = !{!5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "fib_hash", scope: !5218, file: !5048, line: 132, baseType: !450, size: 128)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "fib_lhash", scope: !5218, file: !5048, line: 133, baseType: !450, size: 128, offset: 128)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !5218, file: !5048, line: 134, baseType: !25, size: 128, offset: 256)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "fib_net", scope: !5218, file: !5048, line: 135, baseType: !1970, size: 64, offset: 384)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "fib_treeref", scope: !5218, file: !5048, line: 136, baseType: !6, size: 32, offset: 448)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "fib_clntref", scope: !5218, file: !5048, line: 137, baseType: !875, size: 32, offset: 480)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "fib_flags", scope: !5218, file: !5048, line: 138, baseType: !194, size: 32, offset: 512)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dead", scope: !5218, file: !5048, line: 139, baseType: !236, size: 8, offset: 544)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "fib_protocol", scope: !5218, file: !5048, line: 140, baseType: !236, size: 8, offset: 552)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "fib_scope", scope: !5218, file: !5048, line: 141, baseType: !236, size: 8, offset: 560)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "fib_type", scope: !5218, file: !5048, line: 142, baseType: !236, size: 8, offset: 568)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "fib_prefsrc", scope: !5218, file: !5048, line: 143, baseType: !2014, size: 32, offset: 576)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "fib_tb_id", scope: !5218, file: !5048, line: 144, baseType: !224, size: 32, offset: 608)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "fib_priority", scope: !5218, file: !5048, line: 145, baseType: !224, size: 32, offset: 640)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "fib_metrics", scope: !5218, file: !5048, line: 146, baseType: !4986, size: 64, offset: 704)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhs", scope: !5218, file: !5048, line: 151, baseType: !6, size: 32, offset: 768)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh_is_v6", scope: !5218, file: !5048, line: 152, baseType: !299, size: 8, offset: 800)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "nh_updated", scope: !5218, file: !5048, line: 153, baseType: !299, size: 8, offset: 808)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !5218, file: !5048, line: 154, baseType: !5015, size: 64, offset: 832)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5218, file: !5048, line: 155, baseType: !173, size: 128, align: 64, offset: 896)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !5218, file: !5048, line: 156, baseType: !5241, offset: 1024)
!5241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5212, elements: !2184)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr", scope: !5212, file: !5048, line: 110, baseType: !2014, size: 32, offset: 768)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr_genid", scope: !5212, file: !5048, line: 111, baseType: !6, size: 32, offset: 800)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !5044, file: !5017, line: 62, baseType: !5245, size: 704)
!5245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_nh", file: !4944, line: 152, size: 704, elements: !5246)
!5246 = !{!5247, !5248, !5264}
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !5245, file: !4944, line: 153, baseType: !5047, size: 576)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_pcpu", scope: !5245, file: !4944, line: 159, baseType: !5249, size: 64, offset: 576)
!5249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5250, size: 64)
!5250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5251, size: 64)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !4944, line: 205, size: 1856, elements: !5252)
!5252 = !{!5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5251, file: !4944, line: 206, baseType: !5090, size: 896)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !5251, file: !4944, line: 207, baseType: !4942, size: 64, offset: 896)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "sernum", scope: !5251, file: !4944, line: 208, baseType: !6, size: 32, offset: 960)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_dst", scope: !5251, file: !4944, line: 210, baseType: !4996, size: 160, offset: 992)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_src", scope: !5251, file: !4944, line: 211, baseType: !4996, size: 160, offset: 1152)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_gateway", scope: !5251, file: !4944, line: 212, baseType: !4878, size: 128, offset: 1312)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_idev", scope: !5251, file: !4944, line: 213, baseType: !4889, size: 64, offset: 1472)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_flags", scope: !5251, file: !4944, line: 214, baseType: !224, size: 32, offset: 1536)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached", scope: !5251, file: !4944, line: 216, baseType: !25, size: 128, offset: 1600)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached_list", scope: !5251, file: !4944, line: 217, baseType: !5189, size: 64, offset: 1728)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_nfheader_len", scope: !5251, file: !4944, line: 220, baseType: !122, size: 16, offset: 1792)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_exception_bucket", scope: !5245, file: !4944, line: 160, baseType: !5265, size: 64, offset: 640)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_exception_bucket", file: !4944, line: 136, size: 128, elements: !5267)
!5267 = !{!5268, !5269}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5266, file: !4944, line: 137, baseType: !446, size: 64)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !5266, file: !4944, line: 138, baseType: !6, size: 32, offset: 64)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "nh_grp", scope: !5032, file: !5017, line: 103, baseType: !5271, size: 64)
!5271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5272, size: 64)
!5272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_group", file: !5017, line: 75, size: 128, elements: !5273)
!5273 = !{!5274, !5275, !5276, !5277, !5278, !5279}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !5272, file: !5017, line: 76, baseType: !5271, size: 64)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "num_nh", scope: !5272, file: !5017, line: 77, baseType: !739, size: 16, offset: 64)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !5272, file: !5017, line: 78, baseType: !299, size: 8, offset: 80)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !5272, file: !5017, line: 79, baseType: !299, size: 8, offset: 88)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "has_v4", scope: !5272, file: !5017, line: 80, baseType: !299, size: 8, offset: 96)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "nh_entries", scope: !5272, file: !5017, line: 81, baseType: !5280, offset: 128)
!5280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5281, elements: !2184)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_grp_entry", file: !5017, line: 66, size: 320, elements: !5282)
!5282 = !{!5283, !5284, !5285, !5286, !5287}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !5281, file: !5017, line: 67, baseType: !5015, size: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5281, file: !5017, line: 68, baseType: !1398, size: 8, offset: 64)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "upper_bound", scope: !5281, file: !5017, line: 69, baseType: !627, size: 32, offset: 96)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !5281, file: !5017, line: 71, baseType: !25, size: 128, offset: 128)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !5281, file: !5017, line: 72, baseType: !5015, size: 64, offset: 256)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !4943, file: !4944, line: 202, baseType: !5289, offset: 1280)
!5289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, elements: !2184)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !4938, file: !4891, line: 143, baseType: !4937, size: 64, offset: 192)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !4938, file: !4891, line: 144, baseType: !450, size: 128, offset: 256)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !4938, file: !4891, line: 145, baseType: !6, size: 32, offset: 384)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !4938, file: !4891, line: 146, baseType: !875, size: 32, offset: 416)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !4938, file: !4891, line: 147, baseType: !130, size: 64, offset: 448)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !4938, file: !4891, line: 148, baseType: !130, size: 64, offset: 512)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4938, file: !4891, line: 149, baseType: !173, size: 128, align: 64, offset: 576)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4890, file: !4891, line: 187, baseType: !829, offset: 1664)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4890, file: !4891, line: 188, baseType: !875, size: 32, offset: 1664)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !4890, file: !4891, line: 189, baseType: !226, size: 32, offset: 1696)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !4890, file: !4891, line: 190, baseType: !6, size: 32, offset: 1728)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !4890, file: !4891, line: 192, baseType: !224, size: 32, offset: 1760)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !4890, file: !4891, line: 193, baseType: !25, size: 128, offset: 1792)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !4890, file: !4891, line: 195, baseType: !4878, size: 128, offset: 1920)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !4890, file: !4891, line: 197, baseType: !2418, size: 64, offset: 2048)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !4890, file: !4891, line: 198, baseType: !5306, size: 1600, offset: 2112)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !5307, line: 12, size: 1600, elements: !5308)
!5307 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!5308 = !{!5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357}
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !5306, file: !5307, line: 13, baseType: !1497, size: 32)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !5306, file: !5307, line: 14, baseType: !1497, size: 32, offset: 32)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !5306, file: !5307, line: 15, baseType: !1497, size: 32, offset: 64)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !5306, file: !5307, line: 16, baseType: !1497, size: 32, offset: 96)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !5306, file: !5307, line: 17, baseType: !1497, size: 32, offset: 128)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !5306, file: !5307, line: 18, baseType: !1497, size: 32, offset: 160)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !5306, file: !5307, line: 19, baseType: !1497, size: 32, offset: 192)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !5306, file: !5307, line: 20, baseType: !1497, size: 32, offset: 224)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !5306, file: !5307, line: 21, baseType: !1497, size: 32, offset: 256)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !5306, file: !5307, line: 22, baseType: !1497, size: 32, offset: 288)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !5306, file: !5307, line: 23, baseType: !1497, size: 32, offset: 320)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !5306, file: !5307, line: 24, baseType: !1497, size: 32, offset: 352)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !5306, file: !5307, line: 25, baseType: !1497, size: 32, offset: 384)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !5306, file: !5307, line: 26, baseType: !1497, size: 32, offset: 416)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !5306, file: !5307, line: 27, baseType: !1497, size: 32, offset: 448)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !5306, file: !5307, line: 28, baseType: !1497, size: 32, offset: 480)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !5306, file: !5307, line: 29, baseType: !1497, size: 32, offset: 512)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !5306, file: !5307, line: 30, baseType: !1497, size: 32, offset: 544)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !5306, file: !5307, line: 31, baseType: !1497, size: 32, offset: 576)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !5306, file: !5307, line: 32, baseType: !1497, size: 32, offset: 608)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !5306, file: !5307, line: 33, baseType: !1497, size: 32, offset: 640)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !5306, file: !5307, line: 34, baseType: !1497, size: 32, offset: 672)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !5306, file: !5307, line: 35, baseType: !1497, size: 32, offset: 704)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !5306, file: !5307, line: 36, baseType: !1497, size: 32, offset: 736)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !5306, file: !5307, line: 45, baseType: !1497, size: 32, offset: 768)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !5306, file: !5307, line: 46, baseType: !1497, size: 32, offset: 800)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !5306, file: !5307, line: 47, baseType: !1497, size: 32, offset: 832)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !5306, file: !5307, line: 55, baseType: !1497, size: 32, offset: 864)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !5306, file: !5307, line: 56, baseType: !1497, size: 32, offset: 896)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !5306, file: !5307, line: 57, baseType: !1497, size: 32, offset: 928)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !5306, file: !5307, line: 58, baseType: !1497, size: 32, offset: 960)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !5306, file: !5307, line: 59, baseType: !1497, size: 32, offset: 992)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !5306, file: !5307, line: 60, baseType: !1497, size: 32, offset: 1024)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !5306, file: !5307, line: 61, baseType: !1497, size: 32, offset: 1056)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !5306, file: !5307, line: 62, baseType: !1497, size: 32, offset: 1088)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !5306, file: !5307, line: 66, baseType: !5345, size: 160, offset: 1120)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !5307, line: 63, size: 160, elements: !5346)
!5346 = !{!5347, !5348}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !5345, file: !5307, line: 64, baseType: !299, size: 8)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !5345, file: !5307, line: 65, baseType: !4878, size: 128, offset: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !5306, file: !5307, line: 67, baseType: !1497, size: 32, offset: 1280)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !5306, file: !5307, line: 68, baseType: !1497, size: 32, offset: 1312)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !5306, file: !5307, line: 69, baseType: !1497, size: 32, offset: 1344)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !5306, file: !5307, line: 73, baseType: !226, size: 32, offset: 1376)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !5306, file: !5307, line: 74, baseType: !226, size: 32, offset: 1408)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !5306, file: !5307, line: 75, baseType: !1497, size: 32, offset: 1440)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !5306, file: !5307, line: 76, baseType: !1497, size: 32, offset: 1472)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !5306, file: !5307, line: 77, baseType: !1497, size: 32, offset: 1504)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !5306, file: !5307, line: 79, baseType: !1808, size: 64, offset: 1536)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !4890, file: !4891, line: 199, baseType: !5359, size: 256, offset: 3712)
!5359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !4891, line: 156, size: 256, elements: !5360)
!5360 = !{!5361, !5362, !5372, !5378}
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !5359, file: !4891, line: 157, baseType: !1992, size: 64)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !5359, file: !4891, line: 158, baseType: !5363, size: 64, offset: 64)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !5365, line: 51, size: 2368, elements: !5366)
!5365 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!5366 = !{!5367, !5371}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !5364, file: !5365, line: 53, baseType: !5368, size: 2368)
!5368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 2368, elements: !5369)
!5369 = !{!5370}
!5370 = !DISubrange(count: 37)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5364, file: !5365, line: 54, baseType: !3771, offset: 2368)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !5359, file: !4891, line: 159, baseType: !5373, size: 64, offset: 128)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !5365, line: 75, size: 384, elements: !5375)
!5375 = !{!5376}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !5374, file: !5365, line: 76, baseType: !5377, size: 384)
!5377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 384, elements: !1663)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !5359, file: !4891, line: 160, baseType: !5379, size: 64, offset: 192)
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 64)
!5380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !5365, line: 85, size: 32768, elements: !5381)
!5381 = !{!5382}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !5380, file: !5365, line: 86, baseType: !5383, size: 32768)
!5383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 32768, elements: !5384)
!5384 = !{!5385}
!5385 = !DISubrange(count: 512)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !4890, file: !4891, line: 201, baseType: !2561, size: 320, offset: 3968)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !4890, file: !4891, line: 202, baseType: !1497, size: 32, offset: 4288)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !4890, file: !4891, line: 203, baseType: !1399, size: 8, offset: 4320)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !4890, file: !4891, line: 205, baseType: !130, size: 64, offset: 4352)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4890, file: !4891, line: 206, baseType: !173, size: 128, align: 64, offset: 4416)
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4878, size: 64)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !2165, file: !2166, line: 1933, baseType: !5393, size: 64, offset: 4160)
!5393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5394, size: 64)
!5394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5395)
!5395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !2166, line: 270, size: 384, elements: !5396)
!5396 = !{!5397, !5401, !5408, !5413, !5417, !5421}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !5395, file: !2166, line: 271, baseType: !5398, size: 64)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{!6, !2148, !2164, !122, !2449, !2449, !194}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !5395, file: !2166, line: 274, baseType: !5402, size: 64, offset: 64)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{!6, !5405, !5407}
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5406, size: 64)
!5406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2149)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !5395, file: !2166, line: 275, baseType: !5409, size: 64, offset: 128)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5410, size: 64)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{!6, !2458, !5412, !2032}
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !5395, file: !2166, line: 276, baseType: !5414, size: 64, offset: 192)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{null, !5412, !2451, !234}
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !5395, file: !2166, line: 279, baseType: !5418, size: 64, offset: 256)
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 64)
!5419 = !DISubroutineType(types: !5420)
!5420 = !{!299, !21, !194}
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !5395, file: !2166, line: 280, baseType: !5422, size: 64, offset: 320)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{!2032, !5405}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2165, file: !2166, line: 1935, baseType: !194, size: 32, offset: 4224)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !2165, file: !2166, line: 1936, baseType: !194, size: 32, offset: 4256)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !2165, file: !2166, line: 1938, baseType: !122, size: 16, offset: 4288)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !2165, file: !2166, line: 1939, baseType: !122, size: 16, offset: 4304)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !2165, file: !2166, line: 1941, baseType: !236, size: 8, offset: 4320)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !2165, file: !2166, line: 1942, baseType: !236, size: 8, offset: 4328)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !2165, file: !2166, line: 1944, baseType: !236, size: 8, offset: 4336)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !2165, file: !2166, line: 1945, baseType: !236, size: 8, offset: 4344)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2165, file: !2166, line: 1952, baseType: !194, size: 32, offset: 4352)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !2165, file: !2166, line: 1953, baseType: !194, size: 32, offset: 4384)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !2165, file: !2166, line: 1954, baseType: !194, size: 32, offset: 4416)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2165, file: !2166, line: 1955, baseType: !122, size: 16, offset: 4448)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !2165, file: !2166, line: 1956, baseType: !122, size: 16, offset: 4464)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !2165, file: !2166, line: 1957, baseType: !236, size: 8, offset: 4480)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !2165, file: !2166, line: 1958, baseType: !236, size: 8, offset: 4488)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !2165, file: !2166, line: 1960, baseType: !122, size: 16, offset: 4496)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !2165, file: !2166, line: 1961, baseType: !122, size: 16, offset: 4512)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !2165, file: !2166, line: 1964, baseType: !2639, size: 256, offset: 4528)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !2165, file: !2166, line: 1965, baseType: !236, size: 8, offset: 4784)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !2165, file: !2166, line: 1966, baseType: !236, size: 8, offset: 4792)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !2165, file: !2166, line: 1967, baseType: !236, size: 8, offset: 4800)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !2165, file: !2166, line: 1968, baseType: !236, size: 8, offset: 4808)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !2165, file: !2166, line: 1970, baseType: !122, size: 16, offset: 4816)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !2165, file: !2166, line: 1971, baseType: !122, size: 16, offset: 4832)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !2165, file: !2166, line: 1972, baseType: !122, size: 16, offset: 4848)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !2165, file: !2166, line: 1973, baseType: !39, offset: 4864)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !2165, file: !2166, line: 1975, baseType: !5452, size: 192, offset: 4864)
!5452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !2166, line: 224, size: 192, elements: !5453)
!5453 = !{!5454, !5455}
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5452, file: !2166, line: 225, baseType: !25, size: 128)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5452, file: !2166, line: 226, baseType: !6, size: 32, offset: 128)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !2165, file: !2166, line: 1976, baseType: !5452, size: 192, offset: 5056)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !2165, file: !2166, line: 1977, baseType: !5452, size: 192, offset: 5248)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !2165, file: !2166, line: 1980, baseType: !34, size: 64, offset: 5440)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !2165, file: !2166, line: 1985, baseType: !194, size: 32, offset: 5504)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !2165, file: !2166, line: 1986, baseType: !194, size: 32, offset: 5536)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !2165, file: !2166, line: 1987, baseType: !299, size: 8, offset: 5568)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !2165, file: !2166, line: 1996, baseType: !5463, size: 64, offset: 5632)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 64)
!5464 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !2166, line: 1996, flags: DIFlagFwdDecl)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !2165, file: !2166, line: 2007, baseType: !5466, size: 64, offset: 5696)
!5466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5467, size: 64)
!5467 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !2166, line: 2007, flags: DIFlagFwdDecl)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !2165, file: !2166, line: 2011, baseType: !4889, size: 64, offset: 5760)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !2165, file: !2166, line: 2015, baseType: !5470, size: 64, offset: 5824)
!5470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5471, size: 64)
!5471 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !2166, line: 62, flags: DIFlagFwdDecl)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !2165, file: !2166, line: 2016, baseType: !5473, size: 64, offset: 5888)
!5473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!5474 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !2166, line: 64, flags: DIFlagFwdDecl)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !2165, file: !2166, line: 2025, baseType: !5407, size: 64, offset: 5952)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !2165, file: !2166, line: 2027, baseType: !5477, size: 64, offset: 6016)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!5478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !2166, line: 736, size: 1536, elements: !5479)
!5479 = !{!5480, !5481, !5482}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5478, file: !2166, line: 741, baseType: !17, size: 512)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5478, file: !2166, line: 742, baseType: !2164, size: 64, offset: 512)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !5478, file: !2166, line: 743, baseType: !5483, size: 512, align: 512, offset: 1024)
!5483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !3846, line: 57, size: 512, align: 512, elements: !5484)
!5484 = !{!5485, !5486, !5487, !5488}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5483, file: !3846, line: 58, baseType: !2164, size: 64)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !5483, file: !3846, line: 59, baseType: !224, size: 32, offset: 64)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !5483, file: !3846, line: 60, baseType: !224, size: 32, offset: 96)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5483, file: !3846, line: 61, baseType: !3854, size: 64, offset: 128)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !2165, file: !2166, line: 2028, baseType: !194, size: 32, offset: 6080)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !2165, file: !2166, line: 2029, baseType: !194, size: 32, offset: 6112)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !2165, file: !2166, line: 2031, baseType: !3027, size: 64, offset: 6144)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !2165, file: !2166, line: 2032, baseType: !130, size: 64, offset: 6208)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !2165, file: !2166, line: 2033, baseType: !6, size: 32, offset: 6272)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !2165, file: !2166, line: 2034, baseType: !5495, size: 64, offset: 6336)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5496, size: 64)
!5496 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !2166, line: 430, baseType: !5497)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!5499, !5506}
!5499 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !2166, line: 429, baseType: !5500)
!5500 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !2166, line: 423, baseType: !194, size: 32, elements: !5501)
!5501 = !{!5502, !5503, !5504, !5505}
!5502 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!5503 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!5504 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!5505 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !2165, file: !2166, line: 2035, baseType: !154, size: 64, offset: 6400)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !2165, file: !2166, line: 2040, baseType: !5509, size: 64, offset: 6464)
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 64)
!5510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !2166, line: 584, size: 1600, elements: !5511)
!5511 = !{!5512, !5513, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5919, !5920, !5921}
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5510, file: !2166, line: 588, baseType: !2164, size: 64)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !5510, file: !2166, line: 589, baseType: !5514, size: 64, offset: 64)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !5516, line: 57, size: 2048, elements: !5517)
!5516 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!5517 = !{!5518, !5522, !5526, !5527, !5528, !5852, !5872, !5873, !5874, !5875, !5876, !5879, !5889, !5890, !5891, !5892, !5893, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !5515, file: !5516, line: 58, baseType: !5519, size: 64)
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5520, size: 64)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{!6, !2148, !5514, !5506}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !5515, file: !5516, line: 61, baseType: !5523, size: 64, offset: 64)
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5524, size: 64)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!2148, !5514}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5515, file: !5516, line: 62, baseType: !194, size: 32, offset: 128)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5515, file: !5516, line: 82, baseType: !224, size: 32, offset: 160)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5515, file: !5516, line: 83, baseType: !5529, size: 64, offset: 192)
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5531)
!5531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !5516, line: 238, size: 1344, elements: !5532)
!5532 = !{!5533, !5535, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5822, !5826, !5827, !5828, !5829, !5833, !5837, !5841, !5845, !5846, !5850, !5851}
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5531, file: !5516, line: 239, baseType: !5534, size: 64)
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5531, size: 64)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !5531, file: !5516, line: 240, baseType: !5536, size: 64, offset: 64)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64)
!5537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5538)
!5538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !5516, line: 198, size: 896, elements: !5539)
!5539 = !{!5540, !5541, !5556, !5561, !5565, !5569, !5573, !5578, !5582, !5597, !5775, !5779, !5780, !5784}
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5538, file: !5516, line: 199, baseType: !194, size: 32)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !5538, file: !5516, line: 201, baseType: !5542, size: 64, offset: 64)
!5542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{!5509, !5514, !5545}
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5546, size: 64)
!5546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !5547, line: 577, size: 160, elements: !5548)
!5547 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!5548 = !{!5549, !5550, !5551, !5552, !5553, !5554, !5555}
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !5546, file: !5547, line: 578, baseType: !236, size: 8)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !5546, file: !5547, line: 579, baseType: !236, size: 8, offset: 8)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !5546, file: !5547, line: 580, baseType: !122, size: 16, offset: 16)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !5546, file: !5547, line: 581, baseType: !6, size: 32, offset: 32)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !5546, file: !5547, line: 582, baseType: !226, size: 32, offset: 64)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !5546, file: !5547, line: 583, baseType: !226, size: 32, offset: 96)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !5546, file: !5547, line: 588, baseType: !226, size: 32, offset: 128)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !5538, file: !5516, line: 202, baseType: !5557, size: 64, offset: 128)
!5557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5558, size: 64)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{!6, !5514, !130, !5514, !5560, !2491}
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5514, size: 64)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !5538, file: !5516, line: 205, baseType: !5562, size: 64, offset: 192)
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5563, size: 64)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!5514, !5514, !130}
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !5538, file: !5516, line: 206, baseType: !5566, size: 64, offset: 256)
!5566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 64)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{null, !5514, !130}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !5538, file: !5516, line: 209, baseType: !5570, size: 64, offset: 320)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!130, !5514, !224}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !5538, file: !5516, line: 210, baseType: !5574, size: 64, offset: 384)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!6, !5514, !224, !224, !2799, !5577, !2491}
!5577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !5538, file: !5516, line: 213, baseType: !5579, size: 64, offset: 448)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!6, !5514, !130}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !5538, file: !5516, line: 214, baseType: !5583, size: 64, offset: 512)
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{null, !5514, !5586}
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !5588, line: 15, size: 192, elements: !5589)
!5588 = !DIFile(filename: "./include/net/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!5589 = !{!5590, !5591, !5592, !5593}
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5587, file: !5588, line: 16, baseType: !6, size: 32)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5587, file: !5588, line: 17, baseType: !6, size: 32, offset: 32)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5587, file: !5588, line: 18, baseType: !6, size: 32, offset: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5587, file: !5588, line: 19, baseType: !5594, size: 64, offset: 128)
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5595, size: 64)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!6, !5514, !130, !5586}
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !5538, file: !5516, line: 217, baseType: !5598, size: 64, offset: 576)
!5598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5599, size: 64)
!5599 = !DISubroutineType(types: !5600)
!5600 = !{!5601, !5514, !130, !2491}
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 64)
!5602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !5516, line: 411, size: 9920, elements: !5603)
!5603 = !{!5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5617, !5618, !5619, !5620, !5621, !5622, !5771, !5772, !5774}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5602, file: !5516, line: 415, baseType: !553, size: 192)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !5602, file: !5516, line: 416, baseType: !25, size: 128, offset: 192)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5602, file: !5516, line: 417, baseType: !224, size: 32, offset: 320)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !5602, file: !5516, line: 418, baseType: !224, size: 32, offset: 352)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5602, file: !5516, line: 419, baseType: !875, size: 32, offset: 384)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !5602, file: !5516, line: 420, baseType: !1970, size: 64, offset: 448)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5602, file: !5516, line: 421, baseType: !5514, size: 64, offset: 512)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !5602, file: !5516, line: 422, baseType: !647, size: 256, offset: 576)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !5602, file: !5516, line: 423, baseType: !5613, size: 128, offset: 832)
!5613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !5614, line: 430, size: 128, elements: !5615)
!5614 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!5615 = !{!5616}
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5613, file: !5614, line: 431, baseType: !25, size: 128)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !5602, file: !5516, line: 424, baseType: !25, size: 128, offset: 960)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !5602, file: !5516, line: 425, baseType: !299, size: 8, offset: 1088)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !5602, file: !5516, line: 426, baseType: !627, size: 32, offset: 1120)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !5602, file: !5516, line: 427, baseType: !194, size: 32, offset: 1152)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !5602, file: !5516, line: 428, baseType: !194, size: 32, offset: 1184)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !5602, file: !5516, line: 432, baseType: !5623, size: 192, offset: 1216)
!5623 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5602, file: !5516, line: 429, size: 192, elements: !5624)
!5624 = !{!5625, !5770}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5623, file: !5516, line: 430, baseType: !5626, size: 64)
!5626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5627, size: 64)
!5627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !5516, line: 395, size: 832, elements: !5628)
!5628 = !{!5629, !5630, !5760, !5761, !5762, !5763, !5764, !5765, !5766, !5767, !5768, !5769}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !5627, file: !5516, line: 397, baseType: !553, size: 192)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !5627, file: !5516, line: 398, baseType: !5631, size: 64, offset: 192)
!5631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5632, size: 64)
!5632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !5516, line: 356, size: 768, elements: !5633)
!5633 = !{!5634, !5635, !5636, !5668, !5669, !5670, !5671, !5754, !5755, !5756, !5757, !5758, !5759}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5632, file: !5516, line: 358, baseType: !5631, size: 64)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5632, file: !5516, line: 359, baseType: !154, size: 64, offset: 64)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !5632, file: !5516, line: 362, baseType: !5637, size: 64, offset: 128)
!5637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5638, size: 64)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{!6, !2148, !5640, !5642}
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5632)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 64)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !5516, line: 275, size: 128, elements: !5644)
!5644 = !{!5645}
!5645 = !DIDerivedType(tag: DW_TAG_member, scope: !5643, file: !5516, line: 276, baseType: !5646, size: 128)
!5646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5643, file: !5516, line: 276, size: 128, elements: !5647)
!5647 = !{!5648, !5653, !5654}
!5648 = !DIDerivedType(tag: DW_TAG_member, scope: !5646, file: !5516, line: 277, baseType: !5649, size: 128)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5646, file: !5516, line: 277, size: 128, elements: !5650)
!5650 = !{!5651, !5652}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5649, file: !5516, line: 278, baseType: !130, size: 64)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !5649, file: !5516, line: 279, baseType: !224, size: 32, offset: 64)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !5646, file: !5516, line: 281, baseType: !5640, size: 64)
!5654 = !DIDerivedType(tag: DW_TAG_member, scope: !5646, file: !5516, line: 284, baseType: !5655, size: 128)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5646, file: !5516, line: 284, size: 128, elements: !5656)
!5656 = !{!5657, !5658}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !5655, file: !5516, line: 285, baseType: !299, size: 8)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !5655, file: !5516, line: 286, baseType: !5659, size: 64, offset: 64)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !5661, line: 59, size: 160, elements: !5662)
!5661 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!5662 = !{!5663, !5664, !5665, !5666, !5667}
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !5660, file: !5661, line: 60, baseType: !226, size: 32)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !5660, file: !5661, line: 61, baseType: !226, size: 32, offset: 32)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !5660, file: !5661, line: 62, baseType: !226, size: 32, offset: 64)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !5660, file: !5661, line: 63, baseType: !226, size: 32, offset: 96)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !5660, file: !5661, line: 64, baseType: !226, size: 32, offset: 128)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5632, file: !5516, line: 365, baseType: !2032, size: 16, offset: 192)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5632, file: !5516, line: 368, baseType: !224, size: 32, offset: 224)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5632, file: !5516, line: 369, baseType: !154, size: 64, offset: 256)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5632, file: !5516, line: 370, baseType: !5672, size: 64, offset: 320)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 64)
!5673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5674)
!5674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !5516, line: 293, size: 1536, elements: !5675)
!5675 = !{!5676, !5677, !5678, !5679, !5683, !5687, !5691, !5695, !5699, !5703, !5707, !5724, !5732, !5733, !5734, !5738, !5742, !5743, !5747, !5748, !5752, !5753}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5674, file: !5516, line: 294, baseType: !25, size: 128)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !5674, file: !5516, line: 295, baseType: !1938, size: 128, offset: 128)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !5674, file: !5516, line: 297, baseType: !5637, size: 64, offset: 256)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5674, file: !5516, line: 300, baseType: !5680, size: 64, offset: 320)
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{!6, !5631}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5674, file: !5516, line: 301, baseType: !5684, size: 64, offset: 384)
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5685, size: 64)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{null, !5631, !299, !2491}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5674, file: !5516, line: 304, baseType: !5688, size: 64, offset: 448)
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 64)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!154, !5631, !224}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5674, file: !5516, line: 305, baseType: !5692, size: 64, offset: 512)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = !DISubroutineType(types: !5694)
!5694 = !{null, !5631, !154}
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !5674, file: !5516, line: 306, baseType: !5696, size: 64, offset: 576)
!5696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5697, size: 64)
!5697 = !DISubroutineType(types: !5698)
!5698 = !{!6, !1970, !2148, !5631, !130, !224, !2799, !701, !299, !299, !2491}
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !5674, file: !5516, line: 311, baseType: !5700, size: 64, offset: 640)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = !DISubroutineType(types: !5702)
!5702 = !{!6, !5631, !154, !936, !299, !2491}
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !5674, file: !5516, line: 314, baseType: !5704, size: 64, offset: 704)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 64)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{!299, !5631}
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !5674, file: !5516, line: 315, baseType: !5708, size: 64, offset: 768)
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 64)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{null, !5631, !5711, !299}
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !5713, line: 16, size: 256, elements: !5714)
!5713 = !DIFile(filename: "./include/net/pkt_cls.h", directory: "/home/lizy2001/genbc/linux")
!5714 = !{!5715, !5716, !5717, !5718, !5719, !5720}
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5712, file: !5713, line: 17, baseType: !6, size: 32)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5712, file: !5713, line: 18, baseType: !6, size: 32, offset: 32)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5712, file: !5713, line: 19, baseType: !6, size: 32, offset: 64)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "nonempty", scope: !5712, file: !5713, line: 20, baseType: !299, size: 8, offset: 96)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !5712, file: !5713, line: 21, baseType: !130, size: 64, offset: 128)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5712, file: !5713, line: 22, baseType: !5721, size: 64, offset: 192)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 64)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!6, !5631, !154, !5711}
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !5674, file: !5516, line: 317, baseType: !5725, size: 64, offset: 832)
!5725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5726, size: 64)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!6, !5631, !299, !5728, !154, !2491}
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5729, size: 64)
!5729 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !5614, line: 450, baseType: !5730)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!6, !2823, !154, !154}
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !5674, file: !5516, line: 320, baseType: !5692, size: 64, offset: 896)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !5674, file: !5516, line: 322, baseType: !5692, size: 64, offset: 960)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !5674, file: !5516, line: 324, baseType: !5735, size: 64, offset: 1024)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{null, !154, !224, !130, !154, !130}
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !5674, file: !5516, line: 326, baseType: !5739, size: 64, offset: 1088)
!5739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5740, size: 64)
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!154, !1970, !5626, !2799, !2491}
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !5674, file: !5516, line: 330, baseType: !277, size: 64, offset: 1152)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !5674, file: !5516, line: 333, baseType: !5744, size: 64, offset: 1216)
!5744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5745, size: 64)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!6, !1970, !5631, !154, !2148, !5545, !299}
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !5674, file: !5516, line: 336, baseType: !5744, size: 64, offset: 1280)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !5674, file: !5516, line: 340, baseType: !5749, size: 64, offset: 1344)
!5749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5750, size: 64)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!6, !2148, !1970, !154}
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5674, file: !5516, line: 344, baseType: !441, size: 64, offset: 1408)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5674, file: !5516, line: 345, baseType: !6, size: 32, offset: 1472)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5632, file: !5516, line: 371, baseType: !5626, size: 64, offset: 384)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5632, file: !5516, line: 375, baseType: !39, offset: 448)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !5632, file: !5516, line: 376, baseType: !299, size: 8, offset: 448)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5632, file: !5516, line: 377, baseType: !875, size: 32, offset: 480)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5632, file: !5516, line: 378, baseType: !173, size: 128, align: 64, offset: 512)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !5632, file: !5516, line: 379, baseType: !450, size: 128, offset: 640)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5627, file: !5516, line: 399, baseType: !25, size: 128, offset: 256)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5627, file: !5516, line: 400, baseType: !5601, size: 64, offset: 384)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5627, file: !5516, line: 401, baseType: !224, size: 32, offset: 448)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5627, file: !5516, line: 402, baseType: !194, size: 32, offset: 480)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !5627, file: !5516, line: 403, baseType: !194, size: 32, offset: 512)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !5627, file: !5516, line: 404, baseType: !299, size: 8, offset: 544)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !5627, file: !5516, line: 405, baseType: !299, size: 8, offset: 552)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !5627, file: !5516, line: 406, baseType: !5672, size: 64, offset: 576)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !5627, file: !5516, line: 407, baseType: !154, size: 64, offset: 640)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5627, file: !5516, line: 408, baseType: !173, size: 128, align: 64, offset: 704)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !5623, file: !5516, line: 431, baseType: !25, size: 128, offset: 64)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5602, file: !5516, line: 433, baseType: !173, size: 128, align: 64, offset: 1408)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !5602, file: !5516, line: 434, baseType: !5773, size: 8192, offset: 1536)
!5773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 8192, elements: !3216)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !5602, file: !5516, line: 435, baseType: !553, size: 192, offset: 9728)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !5538, file: !5516, line: 220, baseType: !5776, size: 64, offset: 640)
!5776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{!130, !5514, !130, !224}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !5538, file: !5516, line: 222, baseType: !5566, size: 64, offset: 704)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !5538, file: !5516, line: 225, baseType: !5781, size: 64, offset: 768)
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5782, size: 64)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{!6, !5514, !130, !2148, !5545}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !5538, file: !5516, line: 227, baseType: !5785, size: 64, offset: 832)
!5785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5786, size: 64)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{!6, !5514, !130, !5788}
!5788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5789, size: 64)
!5789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !5790, line: 23, size: 768, elements: !5791)
!5790 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!5791 = !{!5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800}
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5789, file: !5790, line: 24, baseType: !1111, size: 64)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !5789, file: !5790, line: 25, baseType: !2148, size: 64, offset: 64)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5789, file: !5790, line: 26, baseType: !2800, size: 64, offset: 128)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !5789, file: !5790, line: 29, baseType: !6, size: 32, offset: 192)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !5789, file: !5790, line: 30, baseType: !6, size: 32, offset: 224)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !5789, file: !5790, line: 31, baseType: !6, size: 32, offset: 256)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !5789, file: !5790, line: 32, baseType: !154, size: 64, offset: 320)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !5789, file: !5790, line: 33, baseType: !6, size: 32, offset: 384)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !5789, file: !5790, line: 34, baseType: !5801, size: 320, offset: 448)
!5801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !5802, line: 34, size: 320, elements: !5803)
!5802 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!5803 = !{!5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811}
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5801, file: !5802, line: 35, baseType: !231, size: 64)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !5801, file: !5802, line: 36, baseType: !226, size: 32, offset: 64)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !5801, file: !5802, line: 37, baseType: !226, size: 32, offset: 96)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !5801, file: !5802, line: 38, baseType: !226, size: 32, offset: 128)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !5801, file: !5802, line: 40, baseType: !226, size: 32, offset: 160)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !5801, file: !5802, line: 41, baseType: !226, size: 32, offset: 192)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !5801, file: !5802, line: 42, baseType: !226, size: 32, offset: 224)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !5801, file: !5802, line: 43, baseType: !226, size: 32, offset: 256)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5531, file: !5516, line: 241, baseType: !1938, size: 128, offset: 128)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !5531, file: !5516, line: 242, baseType: !6, size: 32, offset: 256)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !5531, file: !5516, line: 243, baseType: !194, size: 32, offset: 288)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !5531, file: !5516, line: 245, baseType: !5519, size: 64, offset: 320)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !5531, file: !5516, line: 248, baseType: !5523, size: 64, offset: 384)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !5531, file: !5516, line: 249, baseType: !5523, size: 64, offset: 448)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5531, file: !5516, line: 251, baseType: !5819, size: 64, offset: 512)
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5820, size: 64)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{!6, !5514, !2800, !2491}
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5531, file: !5516, line: 253, baseType: !5823, size: 64, offset: 576)
!5823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5824, size: 64)
!5824 = !DISubroutineType(types: !5825)
!5825 = !{null, !5514}
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5531, file: !5516, line: 254, baseType: !5823, size: 64, offset: 640)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !5531, file: !5516, line: 255, baseType: !5819, size: 64, offset: 704)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !5531, file: !5516, line: 258, baseType: !5823, size: 64, offset: 768)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !5531, file: !5516, line: 259, baseType: !5830, size: 64, offset: 832)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{!6, !5514, !194}
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !5531, file: !5516, line: 261, baseType: !5834, size: 64, offset: 896)
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 64)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!6, !5514, !2148}
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !5531, file: !5516, line: 262, baseType: !5838, size: 64, offset: 960)
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!6, !5514, !5788}
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !5531, file: !5516, line: 264, baseType: !5842, size: 64, offset: 1024)
!5842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5843, size: 64)
!5843 = !DISubroutineType(types: !5844)
!5844 = !{null, !5514, !224}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !5531, file: !5516, line: 266, baseType: !5842, size: 64, offset: 1088)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !5531, file: !5516, line: 268, baseType: !5847, size: 64, offset: 1152)
!5847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5848, size: 64)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{!224, !5514}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !5531, file: !5516, line: 269, baseType: !5847, size: 64, offset: 1216)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5531, file: !5516, line: 271, baseType: !441, size: 64, offset: 1280)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !5515, file: !5516, line: 84, baseType: !5853, size: 64, offset: 256)
!5853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5854, size: 64)
!5854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !5516, line: 41, size: 512, elements: !5855)
!5855 = !{!5856, !5857, !5858, !5869, !5870}
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5854, file: !5516, line: 42, baseType: !173, size: 128, align: 64)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5854, file: !5516, line: 43, baseType: !25, size: 128, offset: 128)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !5854, file: !5516, line: 44, baseType: !5859, size: 192, offset: 256)
!5859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !5802, line: 102, size: 192, elements: !5860)
!5860 = !{!5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !5859, file: !5802, line: 103, baseType: !236, size: 8)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !5859, file: !5802, line: 104, baseType: !236, size: 8, offset: 8)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !5859, file: !5802, line: 105, baseType: !1251, size: 16, offset: 16)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !5859, file: !5802, line: 106, baseType: !6, size: 32, offset: 32)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !5859, file: !5802, line: 107, baseType: !194, size: 32, offset: 64)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !5859, file: !5802, line: 108, baseType: !194, size: 32, offset: 96)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !5859, file: !5802, line: 109, baseType: !194, size: 32, offset: 128)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !5859, file: !5802, line: 110, baseType: !194, size: 32, offset: 160)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5854, file: !5516, line: 45, baseType: !6, size: 32, offset: 448)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5854, file: !5516, line: 46, baseType: !5871, offset: 480)
!5871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !739, elements: !2184)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5515, file: !5516, line: 85, baseType: !450, size: 128, offset: 320)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5515, file: !5516, line: 86, baseType: !224, size: 32, offset: 448)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5515, file: !5516, line: 87, baseType: !224, size: 32, offset: 480)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !5515, file: !5516, line: 89, baseType: !5509, size: 64, offset: 512)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !5515, file: !5516, line: 91, baseType: !5877, size: 64, offset: 576)
!5877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5878, size: 64)
!5878 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !5790, line: 21, flags: DIFlagFwdDecl)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !5515, file: !5516, line: 92, baseType: !5880, size: 64, offset: 640)
!5880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5881, size: 64)
!5881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !5790, line: 16, size: 128, align: 128, elements: !5882)
!5882 = !{!5883, !5888}
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !5881, file: !5790, line: 17, baseType: !5884, size: 128)
!5884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !5790, line: 11, size: 128, elements: !5885)
!5885 = !{!5886, !5887}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5884, file: !5790, line: 12, baseType: !231, size: 64)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !5884, file: !5790, line: 13, baseType: !231, size: 64, offset: 64)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5881, file: !5790, line: 18, baseType: !3771, offset: 128)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !5515, file: !5516, line: 93, baseType: !5659, size: 64, offset: 704)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5515, file: !5516, line: 94, baseType: !6, size: 32, offset: 768)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5515, file: !5516, line: 95, baseType: !875, size: 32, offset: 800)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !5515, file: !5516, line: 100, baseType: !2578, size: 192, offset: 832)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5515, file: !5516, line: 101, baseType: !5894, size: 192, offset: 1024)
!5894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !5516, line: 50, size: 192, elements: !5895)
!5895 = !{!5896, !5897, !5898, !5899}
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5894, file: !5516, line: 51, baseType: !2148, size: 64)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5894, file: !5516, line: 52, baseType: !2148, size: 64, offset: 64)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !5894, file: !5516, line: 53, baseType: !226, size: 32, offset: 128)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5894, file: !5516, line: 54, baseType: !39, offset: 160)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !5515, file: !5516, line: 102, baseType: !5884, size: 128, offset: 1216)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !5515, file: !5516, line: 103, baseType: !201, size: 32, offset: 1344)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !5515, file: !5516, line: 104, baseType: !5660, size: 160, offset: 1376)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5515, file: !5516, line: 105, baseType: !130, size: 64, offset: 1536)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !5515, file: !5516, line: 106, baseType: !5514, size: 64, offset: 1600)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !5515, file: !5516, line: 107, baseType: !2578, size: 192, offset: 1664)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !5515, file: !5516, line: 109, baseType: !39, offset: 1856)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !5515, file: !5516, line: 110, baseType: !39, offset: 1856)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !5515, file: !5516, line: 113, baseType: !299, size: 8, offset: 1856)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5515, file: !5516, line: 114, baseType: !173, size: 128, align: 64, offset: 1920)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !5515, file: !5516, line: 117, baseType: !5911, align: 512, offset: 2048)
!5911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, elements: !2184)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !5510, file: !2166, line: 590, baseType: !5514, size: 64, offset: 128)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5510, file: !2166, line: 592, baseType: !17, size: 512, offset: 192)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !5510, file: !2166, line: 597, baseType: !130, size: 64, offset: 704)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !5510, file: !2166, line: 602, baseType: !130, size: 64, offset: 768)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !5510, file: !2166, line: 605, baseType: !2164, size: 64, offset: 832)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !5510, file: !2166, line: 612, baseType: !39, offset: 896)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !5510, file: !2166, line: 613, baseType: !6, size: 32, offset: 896)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !5510, file: !2166, line: 617, baseType: !130, size: 64, offset: 960)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5510, file: !2166, line: 619, baseType: !130, size: 64, offset: 1024)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !5510, file: !2166, line: 622, baseType: !5922, size: 512, offset: 1088)
!5922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !5923, line: 43, size: 512, elements: !5924)
!5923 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!5924 = !{!5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !5922, file: !5923, line: 45, baseType: !194, size: 32)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !5922, file: !5923, line: 46, baseType: !194, size: 32, offset: 32)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !5922, file: !5923, line: 47, baseType: !194, size: 32, offset: 64)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5922, file: !5923, line: 51, baseType: !194, size: 32, offset: 96)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !5922, file: !5923, line: 52, baseType: !194, size: 32, offset: 128)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !5922, file: !5923, line: 54, baseType: !194, size: 32, offset: 160)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !5922, file: !5923, line: 55, baseType: !194, size: 32, offset: 192)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !5922, file: !5923, line: 56, baseType: !194, size: 32, offset: 224)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !5922, file: !5923, line: 58, baseType: !194, size: 32, offset: 256)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !5922, file: !5923, line: 59, baseType: !130, size: 64, offset: 320)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !5922, file: !5923, line: 62, baseType: !194, size: 32, offset: 384)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !5922, file: !5923, line: 63, baseType: !194, size: 32, offset: 416)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !5922, file: !5923, line: 64, baseType: !194, size: 32, offset: 448)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !2165, file: !2166, line: 2045, baseType: !2639, size: 256, offset: 6528)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !2165, file: !2166, line: 2049, baseType: !450, size: 128, offset: 6784)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !2165, file: !2166, line: 2054, baseType: !5509, size: 64, offset: 6912)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !2165, file: !2166, line: 2055, baseType: !194, size: 32, offset: 6976)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !2165, file: !2166, line: 2056, baseType: !194, size: 32, offset: 7008)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !2165, file: !2166, line: 2057, baseType: !5514, size: 64, offset: 7040)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !2165, file: !2166, line: 2058, baseType: !194, size: 32, offset: 7104)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !2165, file: !2166, line: 2059, baseType: !39, offset: 7136)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !2165, file: !2166, line: 2061, baseType: !5947, size: 64, offset: 7168)
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5948, size: 64)
!5948 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !2166, line: 879, flags: DIFlagFwdDecl)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !2165, file: !2166, line: 2075, baseType: !2561, size: 320, offset: 7232)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !2165, file: !2166, line: 2076, baseType: !6, size: 32, offset: 7552)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !2165, file: !2166, line: 2078, baseType: !224, size: 32, offset: 7584)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !2165, file: !2166, line: 2080, baseType: !25, size: 128, offset: 7616)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !2165, file: !2166, line: 2081, baseType: !535, size: 64, offset: 7744)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !2165, file: !2166, line: 2083, baseType: !25, size: 128, offset: 7808)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !2165, file: !2166, line: 2091, baseType: !5956, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!5956 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2165, file: !2166, line: 2085, baseType: !194, size: 32, elements: !5957)
!5957 = !{!5958, !5959, !5960, !5961, !5962, !5963}
!5958 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!5959 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!5960 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!5961 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!5962 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!5963 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !2165, file: !2166, line: 2093, baseType: !299, size: 8, offset: 7944)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !2165, file: !2166, line: 2098, baseType: !5966, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!5966 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2165, file: !2166, line: 2095, baseType: !194, size: 32, elements: !5967)
!5967 = !{!5968, !5969}
!5968 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!5969 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !2165, file: !2166, line: 2100, baseType: !299, size: 8, offset: 7968)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !2165, file: !2166, line: 2101, baseType: !2261, size: 64, offset: 8000)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !2165, file: !2166, line: 2107, baseType: !2423, size: 64, offset: 8064)
!5973 = !DIDerivedType(tag: DW_TAG_member, scope: !2165, file: !2166, line: 2110, baseType: !5974, size: 64, offset: 8128)
!5974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2165, file: !2166, line: 2110, size: 64, elements: !5975)
!5975 = !{!5976, !5977, !5998, !6007}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !5974, file: !2166, line: 2111, baseType: !154, size: 64)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !5974, file: !2166, line: 2112, baseType: !5978, size: 64)
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 64)
!5979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !2166, line: 2542, size: 128, align: 128, elements: !5980)
!5980 = !{!5981, !5996, !5997}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !5979, file: !2166, line: 2543, baseType: !5982, size: 64)
!5982 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3772, line: 79, baseType: !5983)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3772, line: 77, size: 64, elements: !5984)
!5984 = !{!5985}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !5983, file: !3772, line: 78, baseType: !5986, size: 64)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !5987, line: 26, baseType: !5988)
!5987 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!5988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5987, line: 24, size: 64, elements: !5989)
!5989 = !{!5990}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5988, file: !5987, line: 25, baseType: !5991, size: 64)
!5991 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !5992, line: 12, baseType: !5993)
!5992 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5992, line: 10, size: 64, elements: !5994)
!5994 = !{!5995}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5993, file: !5992, line: 11, baseType: !557, size: 64)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5979, file: !2166, line: 2544, baseType: !5982, size: 64, offset: 64)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5979, file: !2166, line: 2545, baseType: !3771, offset: 128)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !5974, file: !2166, line: 2113, baseType: !5999, size: 64)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6000, size: 64)
!6000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !2166, line: 2534, size: 256, align: 256, elements: !6001)
!6001 = !{!6002, !6003, !6004, !6005, !6006}
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6000, file: !2166, line: 2535, baseType: !230, size: 64)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6000, file: !2166, line: 2536, baseType: !230, size: 64, offset: 64)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6000, file: !2166, line: 2537, baseType: !230, size: 64, offset: 128)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6000, file: !2166, line: 2538, baseType: !230, size: 64, offset: 192)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6000, file: !2166, line: 2539, baseType: !3771, offset: 256)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !5974, file: !2166, line: 2114, baseType: !6008, size: 64)
!6008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6009, size: 64)
!6009 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !2166, line: 2114, flags: DIFlagFwdDecl)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2165, file: !2166, line: 2124, baseType: !13, size: 5568, offset: 8192)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !2165, file: !2166, line: 2125, baseType: !6012, size: 256, offset: 13760)
!6012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 256, elements: !1207)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !2165, file: !2166, line: 2126, baseType: !135, size: 64, offset: 14016)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !2165, file: !2166, line: 2128, baseType: !6015, size: 64, offset: 14080)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6017)
!6017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !6018, line: 59, size: 1600, elements: !6019)
!6018 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!6019 = !{!6020, !6021, !6022, !6023, !6024, !6025, !6026, !6030, !6034, !6038, !6042, !6046, !6050, !6051, !6052, !6056, !6057, !6058, !6059, !6063, !6067, !6071, !6075, !6079}
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6017, file: !6018, line: 60, baseType: !25, size: 128)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !6017, file: !6018, line: 62, baseType: !21, size: 64, offset: 128)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !6017, file: !6018, line: 64, baseType: !127, size: 64, offset: 192)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !6017, file: !6018, line: 65, baseType: !2261, size: 64, offset: 256)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !6017, file: !6018, line: 67, baseType: !194, size: 32, offset: 320)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !6017, file: !6018, line: 68, baseType: !2505, size: 64, offset: 384)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6017, file: !6018, line: 69, baseType: !6027, size: 64, offset: 448)
!6027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6028, size: 64)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{!6, !2799, !2799, !2491}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !6017, file: !6018, line: 73, baseType: !6031, size: 64, offset: 512)
!6031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6032, size: 64)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!6, !1970, !2164, !2799, !2799, !2491}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !6017, file: !6018, line: 78, baseType: !6035, size: 64, offset: 576)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{!6, !2164, !2799, !2799, !2491}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !6017, file: !6018, line: 82, baseType: !6039, size: 64, offset: 640)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{null, !2164, !29}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !6017, file: !6018, line: 85, baseType: !6043, size: 64, offset: 704)
!6043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6044, size: 64)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{!127, !2451}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !6017, file: !6018, line: 86, baseType: !6047, size: 64, offset: 768)
!6047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6048, size: 64)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!6, !2148, !2451}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !6017, file: !6018, line: 89, baseType: !6043, size: 64, offset: 832)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !6017, file: !6018, line: 90, baseType: !6047, size: 64, offset: 896)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !6017, file: !6018, line: 92, baseType: !6053, size: 64, offset: 960)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!194}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !6017, file: !6018, line: 93, baseType: !6053, size: 64, offset: 1024)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !6017, file: !6018, line: 95, baseType: !194, size: 32, offset: 1088)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !6017, file: !6018, line: 96, baseType: !2505, size: 64, offset: 1152)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !6017, file: !6018, line: 97, baseType: !6060, size: 64, offset: 1216)
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!6, !2164, !2164, !2799, !2799, !2491}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !6017, file: !6018, line: 102, baseType: !6064, size: 64, offset: 1280)
!6064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6065, size: 64)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!127, !2451, !2451}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !6017, file: !6018, line: 104, baseType: !6068, size: 64, offset: 1344)
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6069, size: 64)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{!6, !2148, !2451, !2451}
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !6017, file: !6018, line: 107, baseType: !6072, size: 64, offset: 1408)
!6072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6073, size: 64)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!1970, !2451}
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !6017, file: !6018, line: 108, baseType: !6076, size: 64, offset: 1472)
!6076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6077, size: 64)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{!127, !2451, !6}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !6017, file: !6018, line: 110, baseType: !6080, size: 64, offset: 1536)
!6080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6081, size: 64)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!6, !2148, !2451, !535, !6}
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !2165, file: !2166, line: 2132, baseType: !194, size: 32, offset: 14144)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !2165, file: !2166, line: 2134, baseType: !739, size: 16, offset: 14176)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !2165, file: !2166, line: 2139, baseType: !1249, size: 16, offset: 14192)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !2165, file: !2166, line: 2140, baseType: !6087, size: 512, offset: 14208)
!6087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6088, size: 512, elements: !1939)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !2166, line: 793, size: 32, elements: !6089)
!6089 = !{!6090, !6091}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6088, file: !2166, line: 794, baseType: !739, size: 16)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6088, file: !2166, line: 795, baseType: !739, size: 16, offset: 16)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !2165, file: !2166, line: 2141, baseType: !6093, size: 128, offset: 14720)
!6093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 128, elements: !1939)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !2165, file: !2166, line: 2149, baseType: !6095, size: 64, offset: 14848)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !4254, line: 536, flags: DIFlagFwdDecl)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !2165, file: !2166, line: 2150, baseType: !6098, size: 64, offset: 14912)
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6099, size: 64)
!6099 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !2166, line: 60, flags: DIFlagFwdDecl)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !2165, file: !2166, line: 2151, baseType: !6101, size: 64, offset: 14976)
!6101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !2165, file: !2166, line: 2152, baseType: !6101, size: 64, offset: 15040)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !2165, file: !2166, line: 2153, baseType: !299, size: 8, offset: 15104)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !2165, file: !2166, line: 2154, baseType: !194, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !2165, file: !2166, line: 2156, baseType: !25, size: 128, offset: 15168)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !2165, file: !2166, line: 2162, baseType: !6107, size: 64, offset: 15296)
!6107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6108, size: 64)
!6108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6109)
!6109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !2975, line: 247, size: 576, elements: !6110)
!6110 = !{!6111, !6115, !6116, !6120, !6128, !6129}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "set_port", scope: !6109, file: !2975, line: 249, baseType: !6112, size: 64)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 64)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{!6, !2164, !194, !194, !2973}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "unset_port", scope: !6109, file: !2975, line: 252, baseType: !6112, size: 64, offset: 64)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "sync_table", scope: !6109, file: !2975, line: 257, baseType: !6117, size: 64, offset: 128)
!6117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6118, size: 64)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!6, !2164, !194}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !6109, file: !2975, line: 259, baseType: !6121, size: 64, offset: 192)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 64)
!6122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_shared", file: !2975, line: 207, size: 192, elements: !6123)
!6123 = !{!6124, !6127}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !6122, file: !2975, line: 208, baseType: !6125, size: 64)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !2166, line: 69, flags: DIFlagFwdDecl)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !6122, file: !2975, line: 210, baseType: !25, size: 128, offset: 64)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6109, file: !2975, line: 261, baseType: !194, size: 32, offset: 256)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "tables", scope: !6109, file: !2975, line: 266, baseType: !6130, size: 256, offset: 288)
!6130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6131, size: 256, elements: !1207)
!6131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_table_info", file: !2975, line: 263, size: 64, elements: !6132)
!6132 = !{!6133, !6134}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !6131, file: !2975, line: 264, baseType: !194, size: 32)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_types", scope: !6131, file: !2975, line: 265, baseType: !194, size: 32, offset: 32)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !2165, file: !2166, line: 2163, baseType: !6125, size: 64, offset: 15360)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !2165, file: !2166, line: 2166, baseType: !6137, size: 384, offset: 15424)
!6137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6138, size: 384, elements: !81)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !2166, line: 889, size: 128, elements: !6139)
!6139 = !{!6140, !6141}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6138, file: !2166, line: 890, baseType: !3027, size: 64)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6138, file: !2166, line: 891, baseType: !6142, size: 64, offset: 64)
!6142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6143, size: 64)
!6143 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !2166, line: 880, flags: DIFlagFwdDecl)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !2161, file: !2150, line: 726, baseType: !130, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !2153, file: !2150, line: 729, baseType: !640, size: 192, align: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2153, file: !2150, line: 730, baseType: !25, size: 128)
!6147 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 733, baseType: !6148, size: 64, offset: 192)
!6148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 733, size: 64, elements: !6149)
!6149 = !{!6150, !6151}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6148, file: !2150, line: 734, baseType: !1998, size: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !6148, file: !2150, line: 735, baseType: !6, size: 32)
!6152 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 738, baseType: !6153, size: 64, offset: 256)
!6153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 738, size: 64, elements: !6154)
!6154 = !{!6155, !6156}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !6153, file: !2150, line: 739, baseType: !1342, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !6153, file: !2150, line: 740, baseType: !230, size: 64)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2149, file: !2150, line: 748, baseType: !6158, size: 384, align: 64, offset: 320)
!6158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 384, elements: !2930)
!6159 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 750, baseType: !6160, size: 128, offset: 704)
!6160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 750, size: 128, elements: !6161)
!6161 = !{!6162, !6167}
!6162 = !DIDerivedType(tag: DW_TAG_member, scope: !6160, file: !2150, line: 751, baseType: !6163, size: 128)
!6163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6160, file: !2150, line: 751, size: 128, elements: !6164)
!6164 = !{!6165, !6166}
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !6163, file: !2150, line: 752, baseType: !130, size: 64)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6163, file: !2150, line: 753, baseType: !2480, size: 64, offset: 64)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !6160, file: !2150, line: 755, baseType: !25, size: 128)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2149, file: !2150, line: 761, baseType: !194, size: 32, offset: 832)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !2149, file: !2150, line: 762, baseType: !194, size: 32, offset: 864)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !2149, file: !2150, line: 763, baseType: !740, size: 16, offset: 896)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !2149, file: !2150, line: 764, baseType: !740, size: 16, offset: 912)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !2149, file: !2150, line: 769, baseType: !740, size: 16, offset: 928)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !2149, file: !2150, line: 780, baseType: !4291, offset: 944)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !2149, file: !2150, line: 782, baseType: !1399, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !2149, file: !2150, line: 783, baseType: !1399, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !2149, file: !2150, line: 784, baseType: !1399, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !2149, file: !2150, line: 785, baseType: !1399, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !2149, file: !2150, line: 786, baseType: !1399, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !2149, file: !2150, line: 787, baseType: !1399, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !2149, file: !2150, line: 795, baseType: !4613, offset: 960)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !2149, file: !2150, line: 807, baseType: !4291, offset: 960)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !2149, file: !2150, line: 809, baseType: !1399, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !2149, file: !2150, line: 810, baseType: !1399, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !2149, file: !2150, line: 811, baseType: !1399, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !2149, file: !2150, line: 812, baseType: !1399, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !2149, file: !2150, line: 813, baseType: !1399, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !2149, file: !2150, line: 815, baseType: !1399, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !2149, file: !2150, line: 816, baseType: !1399, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !2149, file: !2150, line: 817, baseType: !1399, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !2149, file: !2150, line: 818, baseType: !1399, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !2149, file: !2150, line: 819, baseType: !1399, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !2149, file: !2150, line: 821, baseType: !1399, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !2149, file: !2150, line: 822, baseType: !1399, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !2149, file: !2150, line: 823, baseType: !1399, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !2149, file: !2150, line: 832, baseType: !4291, offset: 976)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !2149, file: !2150, line: 834, baseType: !1399, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !2149, file: !2150, line: 835, baseType: !1399, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !2149, file: !2150, line: 836, baseType: !1399, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !2149, file: !2150, line: 837, baseType: !1399, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !2149, file: !2150, line: 838, baseType: !1399, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !2149, file: !2150, line: 840, baseType: !1399, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !2149, file: !2150, line: 843, baseType: !1399, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !2149, file: !2150, line: 844, baseType: !1399, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !2149, file: !2150, line: 845, baseType: !1399, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !2149, file: !2150, line: 847, baseType: !1399, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !2149, file: !2150, line: 848, baseType: !1399, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!6207 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 866, baseType: !6208, size: 32, offset: 992)
!6208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 866, size: 32, elements: !6209)
!6209 = !{!6210, !6212}
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !6208, file: !2150, line: 867, baseType: !6211, size: 32)
!6211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !2015, line: 37, baseType: !226)
!6212 = !DIDerivedType(tag: DW_TAG_member, scope: !6208, file: !2150, line: 868, baseType: !6213, size: 32)
!6213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6208, file: !2150, line: 868, size: 32, elements: !6214)
!6214 = !{!6215, !6216}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !6213, file: !2150, line: 869, baseType: !740, size: 16)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !6213, file: !2150, line: 870, baseType: !740, size: 16, offset: 16)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2149, file: !2150, line: 873, baseType: !226, size: 32, offset: 1024)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !2149, file: !2150, line: 874, baseType: !6, size: 32, offset: 1056)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2149, file: !2150, line: 875, baseType: !226, size: 32, offset: 1088)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !2149, file: !2150, line: 876, baseType: !2032, size: 16, offset: 1120)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !2149, file: !2150, line: 877, baseType: !740, size: 16, offset: 1136)
!6222 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 879, baseType: !6223, size: 32, offset: 1152)
!6223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 879, size: 32, elements: !6224)
!6224 = !{!6225, !6226}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !6223, file: !2150, line: 880, baseType: !194, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !6223, file: !2150, line: 881, baseType: !194, size: 32)
!6227 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 888, baseType: !6228, size: 32, offset: 1184)
!6228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 888, size: 32, elements: !6229)
!6229 = !{!6230, !6231}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !6228, file: !2150, line: 889, baseType: !226, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !6228, file: !2150, line: 890, baseType: !226, size: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2150, line: 893, baseType: !6233, size: 16, offset: 1216)
!6233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2150, line: 893, size: 16, elements: !6234)
!6234 = !{!6235, !6236}
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !6233, file: !2150, line: 894, baseType: !2032, size: 16)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !6233, file: !2150, line: 895, baseType: !1399, size: 8)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !2149, file: !2150, line: 898, baseType: !740, size: 16, offset: 1232)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !2149, file: !2150, line: 899, baseType: !740, size: 16, offset: 1248)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !2149, file: !2150, line: 900, baseType: !740, size: 16, offset: 1264)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2149, file: !2150, line: 902, baseType: !2032, size: 16, offset: 1280)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !2149, file: !2150, line: 903, baseType: !740, size: 16, offset: 1296)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !2149, file: !2150, line: 904, baseType: !740, size: 16, offset: 1312)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !2149, file: !2150, line: 905, baseType: !740, size: 16, offset: 1328)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !2149, file: !2150, line: 908, baseType: !4613, offset: 1344)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2149, file: !2150, line: 912, baseType: !6246, size: 32, offset: 1344)
!6246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !2150, line: 606, baseType: !194)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2149, file: !2150, line: 913, baseType: !6246, size: 32, offset: 1376)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2149, file: !2150, line: 914, baseType: !5407, size: 64, offset: 1408)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2149, file: !2150, line: 915, baseType: !5407, size: 64, offset: 1472)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !2149, file: !2150, line: 916, baseType: !194, size: 32, offset: 1536)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !2149, file: !2150, line: 917, baseType: !875, size: 32, offset: 1568)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !2049, file: !2000, line: 1172, baseType: !2089, size: 64, offset: 1152)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2049, file: !2000, line: 1175, baseType: !2085, size: 64, offset: 1216)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !2049, file: !2000, line: 1176, baseType: !2089, size: 64, offset: 1280)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !2049, file: !2000, line: 1177, baseType: !2089, size: 64, offset: 1344)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !2049, file: !2000, line: 1178, baseType: !6257, size: 64, offset: 1408)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = !DISubroutineType(types: !6259)
!6259 = !{!6, !1998, !122}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !2049, file: !2000, line: 1182, baseType: !194, size: 32, offset: 1472)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !2049, file: !2000, line: 1185, baseType: !6262, size: 64, offset: 1536)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!299, !6265, !6}
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1999)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !2049, file: !2000, line: 1186, baseType: !6268, size: 64, offset: 1600)
!6268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6269, size: 64)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!299, !6265}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !2049, file: !2000, line: 1188, baseType: !2089, size: 64, offset: 1664)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !2049, file: !2000, line: 1189, baseType: !2089, size: 64, offset: 1728)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !2049, file: !2000, line: 1190, baseType: !6274, size: 64, offset: 1792)
!6274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !2049, file: !2000, line: 1191, baseType: !6276, size: 64, offset: 1856)
!6276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !2049, file: !2000, line: 1198, baseType: !5577, size: 64, offset: 1920)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !2049, file: !2000, line: 1199, baseType: !6279, size: 64, offset: 1984)
!6279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !2049, file: !2000, line: 1201, baseType: !535, size: 64, offset: 2048)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !2049, file: !2000, line: 1202, baseType: !535, size: 64, offset: 2112)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !2049, file: !2000, line: 1203, baseType: !224, size: 32, offset: 2176)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !2049, file: !2000, line: 1204, baseType: !224, size: 32, offset: 2208)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !2049, file: !2000, line: 1206, baseType: !6, size: 32, offset: 2240)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !2049, file: !2000, line: 1207, baseType: !299, size: 8, offset: 2272)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !2049, file: !2000, line: 1209, baseType: !980, size: 64, offset: 2304)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !2049, file: !2000, line: 1210, baseType: !194, size: 32, offset: 2368)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !2049, file: !2000, line: 1211, baseType: !6289, size: 32, offset: 2400)
!6289 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !26, line: 149, baseType: !194)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !2049, file: !2000, line: 1212, baseType: !194, size: 32, offset: 2432)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !2049, file: !2000, line: 1213, baseType: !194, size: 32, offset: 2464)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !2049, file: !2000, line: 1215, baseType: !6276, size: 64, offset: 2496)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !2049, file: !2000, line: 1217, baseType: !6294, size: 64, offset: 2560)
!6294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6295, size: 64)
!6295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !6296, line: 27, size: 512, elements: !6297)
!6296 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!6297 = !{!6298, !6299, !6300, !6301, !6302, !6331, !6335, !6339, !6343}
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6295, file: !6296, line: 28, baseType: !6, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !6295, file: !6296, line: 29, baseType: !194, size: 32, offset: 32)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !6295, file: !6296, line: 30, baseType: !980, size: 64, offset: 64)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !6295, file: !6296, line: 31, baseType: !80, size: 64, offset: 128)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !6295, file: !6296, line: 32, baseType: !6303, size: 64, offset: 192)
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6304, size: 64)
!6304 = !DISubroutineType(types: !6305)
!6305 = !{!6, !6265, !6306}
!6306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6307, size: 64)
!6307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !6296, line: 53, size: 1792, elements: !6308)
!6308 = !{!6309, !6310, !6311, !6312, !6313, !6314, !6315, !6316, !6317, !6320, !6321, !6329, !6330}
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !6307, file: !6296, line: 54, baseType: !2003, size: 1088)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !6307, file: !6296, line: 61, baseType: !6306, size: 64, offset: 1088)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !6307, file: !6296, line: 62, baseType: !739, size: 16, offset: 1152)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !6307, file: !6296, line: 63, baseType: !1398, size: 8, offset: 1168)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !6307, file: !6296, line: 64, baseType: !1398, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !6307, file: !6296, line: 65, baseType: !1398, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !6307, file: !6296, line: 66, baseType: !224, size: 32, offset: 1184)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !6307, file: !6296, line: 67, baseType: !2561, size: 320, offset: 1216)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !6307, file: !6296, line: 68, baseType: !6318, size: 64, offset: 1536)
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 64)
!6319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6295)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6307, file: !6296, line: 69, baseType: !1998, size: 64, offset: 1600)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !6307, file: !6296, line: 70, baseType: !6322, size: 64, offset: 1664)
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6323, size: 64)
!6323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !6296, line: 44, size: 96, elements: !6324)
!6324 = !{!6325, !6326, !6327, !6328}
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !6323, file: !6296, line: 45, baseType: !224, size: 32)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !6323, file: !6296, line: 46, baseType: !224, size: 32, offset: 32)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !6323, file: !6296, line: 47, baseType: !224, size: 32, offset: 64)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6323, file: !6296, line: 48, baseType: !2474, offset: 96)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !6307, file: !6296, line: 71, baseType: !224, size: 32, offset: 1728)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !6307, file: !6296, line: 72, baseType: !224, size: 32, offset: 1760)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !6295, file: !6296, line: 34, baseType: !6332, size: 64, offset: 256)
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{null, !6265, !2148, !6306}
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !6295, file: !6296, line: 36, baseType: !6336, size: 64, offset: 320)
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 64)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{null, !6265, !2148}
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6295, file: !6296, line: 38, baseType: !6340, size: 64, offset: 384)
!6340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6341, size: 64)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{null, !6306}
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !6295, file: !6296, line: 39, baseType: !6344, size: 64, offset: 448)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = !DISubroutineType(types: !6346)
!6346 = !{null, !6347}
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 64)
!6348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6307)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !2049, file: !2000, line: 1218, baseType: !6350, size: 64, offset: 2624)
!6350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6351, size: 64)
!6351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !6352, line: 14, size: 320, elements: !6353)
!6352 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!6353 = !{!6354, !6355, !6356, !6357, !6361}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !6351, file: !6352, line: 15, baseType: !980, size: 64)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !6351, file: !6352, line: 16, baseType: !80, size: 64, offset: 64)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !6351, file: !6352, line: 17, baseType: !194, size: 32, offset: 128)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !6351, file: !6352, line: 18, baseType: !6358, size: 64, offset: 192)
!6358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6359, size: 64)
!6359 = !DISubroutineType(types: !6360)
!6360 = !{!6, !1998, !1998, !154}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !6351, file: !6352, line: 20, baseType: !2089, size: 64, offset: 256)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2049, file: !2000, line: 1225, baseType: !6363, size: 64, offset: 2688)
!6363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2049, file: !2000, line: 1220, size: 64, elements: !6364)
!6364 = !{!6365, !6369, !6384, !6387}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !6363, file: !2000, line: 1221, baseType: !6366, size: 64)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !6368, line: 32, flags: DIFlagFwdDecl)
!6368 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !6363, file: !2000, line: 1222, baseType: !6370, size: 64)
!6370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6371, size: 64)
!6371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !6372, line: 72, size: 192, elements: !6373)
!6372 = !DIFile(filename: "./include/net/udp.h", directory: "/home/lizy2001/genbc/linux")
!6373 = !{!6374, !6381, !6382, !6383}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6371, file: !6372, line: 73, baseType: !6375, size: 64)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_hslot", file: !6372, line: 58, size: 128, align: 128, elements: !6377)
!6377 = !{!6378, !6379, !6380}
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6376, file: !6372, line: 59, baseType: !446, size: 64)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6376, file: !6372, line: 60, baseType: !6, size: 32, offset: 64)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6376, file: !6372, line: 61, baseType: !39, offset: 96)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "hash2", scope: !6371, file: !6372, line: 74, baseType: !6375, size: 64, offset: 64)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6371, file: !6372, line: 75, baseType: !194, size: 32, offset: 128)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !6371, file: !6372, line: 76, baseType: !194, size: 32, offset: 160)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !6363, file: !2000, line: 1223, baseType: !6385, size: 64)
!6385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6386, size: 64)
!6386 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !2000, line: 1108, flags: DIFlagFwdDecl)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !6363, file: !2000, line: 1224, baseType: !6388, size: 64)
!6388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6389, size: 64)
!6389 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !2000, line: 1109, flags: DIFlagFwdDecl)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2049, file: !2000, line: 1227, baseType: !441, size: 64, offset: 2752)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2049, file: !2000, line: 1229, baseType: !4267, size: 256, offset: 2816)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2049, file: !2000, line: 1231, baseType: !25, size: 128, offset: 3072)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !2049, file: !2000, line: 1235, baseType: !2073, size: 64, offset: 3200)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !2003, file: !2000, line: 198, baseType: !2423, size: 64, offset: 384)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !2003, file: !2000, line: 201, baseType: !4878, size: 128, offset: 448)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !2003, file: !2000, line: 202, baseType: !4878, size: 128, offset: 576)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !2003, file: !2000, line: 205, baseType: !559, size: 64, offset: 704)
!6398 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 212, baseType: !6399, size: 64, offset: 768)
!6399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 212, size: 64, elements: !6400)
!6400 = !{!6401, !6402, !6403}
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !6399, file: !2000, line: 213, baseType: !130, size: 64)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !6399, file: !2000, line: 214, baseType: !1998, size: 64)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !6399, file: !2000, line: 215, baseType: !6404, size: 64)
!6404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6405, size: 64)
!6405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !6368, line: 34, size: 192, elements: !6406)
!6406 = !{!6407, !6408, !6409}
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !6405, file: !6368, line: 35, baseType: !627, size: 32)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !6405, file: !6368, line: 37, baseType: !6366, size: 64, offset: 64)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !6405, file: !6368, line: 38, baseType: !6, size: 32, offset: 128)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !2003, file: !2000, line: 222, baseType: !6411, offset: 832)
!6411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, elements: !1927)
!6412 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 224, baseType: !6413, size: 128, offset: 832)
!6413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 224, size: 128, elements: !6414)
!6414 = !{!6415, !6416}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !6413, file: !2000, line: 225, baseType: !450, size: 128)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !6413, file: !2000, line: 226, baseType: !6417, size: 128)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !6418, line: 25, size: 128, elements: !6419)
!6418 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!6419 = !{!6420, !6422}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6417, file: !6418, line: 26, baseType: !6421, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6417, size: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !6417, file: !6418, line: 26, baseType: !6423, size: 64, offset: 64)
!6423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6421, size: 64)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !2003, file: !2000, line: 228, baseType: !122, size: 16, offset: 960)
!6425 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 232, baseType: !6426, size: 32, offset: 992)
!6426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 232, size: 32, elements: !6427)
!6427 = !{!6428, !6429, !6430}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !6426, file: !2000, line: 233, baseType: !6, size: 32)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !6426, file: !2000, line: 234, baseType: !224, size: 32)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !6426, file: !2000, line: 235, baseType: !224, size: 32)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !2003, file: !2000, line: 238, baseType: !875, size: 32, offset: 1024)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !2003, file: !2000, line: 240, baseType: !6411, offset: 1056)
!6433 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !2000, line: 241, baseType: !6434, size: 32, offset: 1056)
!6434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2003, file: !2000, line: 241, size: 32, elements: !6435)
!6435 = !{!6436, !6437, !6438}
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !6434, file: !2000, line: 242, baseType: !224, size: 32)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !6434, file: !2000, line: 243, baseType: !224, size: 32)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !6434, file: !2000, line: 244, baseType: !224, size: 32)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !1999, file: !2000, line: 387, baseType: !6440, size: 192, offset: 1088)
!6440 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !2000, line: 108, baseType: !6441)
!6441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2000, line: 95, size: 192, elements: !6442)
!6442 = !{!6443, !6444, !6445}
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !6441, file: !2000, line: 96, baseType: !39)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !6441, file: !2000, line: 97, baseType: !6, size: 32)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6441, file: !2000, line: 98, baseType: !807, size: 128, offset: 64)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !1999, file: !2000, line: 388, baseType: !627, size: 32, offset: 1280)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !1999, file: !2000, line: 389, baseType: !6, size: 32, offset: 1312)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !1999, file: !2000, line: 390, baseType: !2578, size: 192, offset: 1344)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !1999, file: !2000, line: 391, baseType: !2148, size: 64, offset: 1536)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !1999, file: !2000, line: 392, baseType: !2578, size: 192, offset: 1600)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !1999, file: !2000, line: 406, baseType: !6452, size: 192, offset: 1792)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 401, size: 192, elements: !6453)
!6453 = !{!6454, !6455, !6456, !6457}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !6452, file: !2000, line: 402, baseType: !627, size: 32)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6452, file: !2000, line: 403, baseType: !6, size: 32, offset: 32)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6452, file: !2000, line: 404, baseType: !2148, size: 64, offset: 64)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6452, file: !2000, line: 405, baseType: !2148, size: 64, offset: 128)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !1999, file: !2000, line: 409, baseType: !6, size: 32, offset: 1984)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !1999, file: !2000, line: 411, baseType: !194, size: 32, offset: 2016)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !1999, file: !2000, line: 413, baseType: !194, size: 32, offset: 2048)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !1999, file: !2000, line: 415, baseType: !6, size: 32, offset: 2080)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !1999, file: !2000, line: 417, baseType: !6463, size: 64, offset: 2112)
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6464, size: 64)
!6464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3029, line: 552, size: 256, elements: !6465)
!6465 = !{!6466, !6467, !6468}
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6464, file: !3029, line: 553, baseType: !875, size: 32)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6464, file: !3029, line: 554, baseType: !173, size: 128, align: 64, offset: 64)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6464, file: !3029, line: 555, baseType: !3027, size: 64, offset: 192)
!6469 = !DIDerivedType(tag: DW_TAG_member, scope: !1999, file: !2000, line: 418, baseType: !6470, size: 64, offset: 2176)
!6470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1999, file: !2000, line: 418, size: 64, elements: !6471)
!6471 = !{!6472, !6481}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !6470, file: !2000, line: 419, baseType: !6473, size: 64)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 64)
!6474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !6475, line: 98, size: 384, elements: !6476)
!6475 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!6476 = !{!6477, !6478, !6479, !6480}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !6474, file: !6475, line: 100, baseType: !807, size: 128)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !6474, file: !6475, line: 101, baseType: !825, size: 64, offset: 128)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6474, file: !6475, line: 102, baseType: !130, size: 64, offset: 192)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6474, file: !6475, line: 103, baseType: !173, size: 128, align: 64, offset: 256)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !6470, file: !2000, line: 421, baseType: !6473, size: 64)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !1999, file: !2000, line: 427, baseType: !5108, size: 64, offset: 2240)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !1999, file: !2000, line: 428, baseType: !5108, size: 64, offset: 2304)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !1999, file: !2000, line: 429, baseType: !627, size: 32, offset: 2368)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !1999, file: !2000, line: 430, baseType: !6, size: 32, offset: 2400)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !1999, file: !2000, line: 433, baseType: !6, size: 32, offset: 2432)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !1999, file: !2000, line: 434, baseType: !875, size: 32, offset: 2464)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !1999, file: !2000, line: 435, baseType: !130, size: 64, offset: 2496)
!6489 = !DIDerivedType(tag: DW_TAG_member, scope: !1999, file: !2000, line: 436, baseType: !6490, size: 64, offset: 2560)
!6490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1999, file: !2000, line: 436, size: 64, elements: !6491)
!6491 = !{!6492, !6493}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !6490, file: !2000, line: 437, baseType: !2148, size: 64)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !6490, file: !2000, line: 438, baseType: !636, size: 64)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !1999, file: !2000, line: 440, baseType: !2148, size: 64, offset: 2624)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !1999, file: !2000, line: 441, baseType: !2578, size: 192, offset: 2688)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !1999, file: !2000, line: 442, baseType: !1497, size: 32, offset: 2880)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !1999, file: !2000, line: 443, baseType: !6, size: 32, offset: 2912)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !1999, file: !2000, line: 444, baseType: !226, size: 32, offset: 2944)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !1999, file: !2000, line: 445, baseType: !224, size: 32, offset: 2976)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !1999, file: !2000, line: 446, baseType: !115, size: 64, offset: 3008)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !1999, file: !2000, line: 447, baseType: !2561, size: 320, offset: 3072)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !1999, file: !2000, line: 448, baseType: !226, size: 32, offset: 3392)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !1999, file: !2000, line: 449, baseType: !226, size: 32, offset: 3424)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !1999, file: !2000, line: 450, baseType: !130, size: 64, offset: 3456)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !1999, file: !2000, line: 451, baseType: !130, size: 64, offset: 3520)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !1999, file: !2000, line: 452, baseType: !6507, size: 128, offset: 3584)
!6507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1203, line: 64, size: 128, elements: !6508)
!6508 = !{!6509, !6510, !6511}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6507, file: !1203, line: 65, baseType: !600, size: 64)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6507, file: !1203, line: 67, baseType: !226, size: 32, offset: 64)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6507, file: !1203, line: 68, baseType: !226, size: 32, offset: 96)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !1999, file: !2000, line: 453, baseType: !2203, size: 64, offset: 3712)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !1999, file: !2000, line: 454, baseType: !2203, size: 64, offset: 3776)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !1999, file: !2000, line: 455, baseType: !2203, size: 64, offset: 3840)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !1999, file: !2000, line: 456, baseType: !6, size: 32, offset: 3904)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !1999, file: !2000, line: 457, baseType: !194, size: 32, offset: 3936)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !1999, file: !2000, line: 458, baseType: !623, size: 32, offset: 3968)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !1999, file: !2000, line: 459, baseType: !226, size: 32, offset: 4000)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !1999, file: !2000, line: 465, baseType: !1398, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !1999, file: !2000, line: 466, baseType: !1398, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !1999, file: !2000, line: 467, baseType: !1398, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !1999, file: !2000, line: 468, baseType: !1398, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !1999, file: !2000, line: 469, baseType: !1398, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !1999, file: !2000, line: 470, baseType: !1398, size: 8, offset: 4040)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !1999, file: !2000, line: 471, baseType: !739, size: 16, offset: 4048)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !1999, file: !2000, line: 472, baseType: !739, size: 16, offset: 4064)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !1999, file: !2000, line: 473, baseType: !739, size: 16, offset: 4080)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !1999, file: !2000, line: 474, baseType: !130, size: 64, offset: 4096)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !1999, file: !2000, line: 475, baseType: !2048, size: 64, offset: 4160)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !1999, file: !2000, line: 476, baseType: !829, offset: 4224)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !1999, file: !2000, line: 477, baseType: !6, size: 32, offset: 4224)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !1999, file: !2000, line: 478, baseType: !6, size: 32, offset: 4256)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !1999, file: !2000, line: 479, baseType: !224, size: 32, offset: 4288)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !1999, file: !2000, line: 480, baseType: !224, size: 32, offset: 4320)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !1999, file: !2000, line: 481, baseType: !244, size: 32, offset: 4352)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !1999, file: !2000, line: 482, baseType: !1528, size: 64, offset: 4416)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !1999, file: !2000, line: 483, baseType: !1884, size: 64, offset: 4480)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !1999, file: !2000, line: 484, baseType: !115, size: 64, offset: 4544)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !1999, file: !2000, line: 485, baseType: !1342, size: 64, offset: 4608)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !1999, file: !2000, line: 489, baseType: !739, size: 16, offset: 4672)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !1999, file: !2000, line: 490, baseType: !1398, size: 8, offset: 4688)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !1999, file: !2000, line: 491, baseType: !224, size: 32, offset: 4704)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !1999, file: !2000, line: 492, baseType: !627, size: 32, offset: 4736)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !1999, file: !2000, line: 494, baseType: !1398, size: 8, offset: 4768)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !1999, file: !2000, line: 495, baseType: !1398, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !1999, file: !2000, line: 496, baseType: !1398, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !1999, file: !2000, line: 497, baseType: !1398, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !1999, file: !2000, line: 499, baseType: !6549, size: 64, offset: 4800)
!6549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6550, size: 64)
!6550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !6475, line: 116, size: 704, elements: !6551)
!6551 = !{!6552, !6562, !6563, !6564, !6565, !6566, !6669}
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6550, file: !6475, line: 117, baseType: !6553, size: 32)
!6553 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !6554, line: 54, baseType: !6555)
!6554 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!6555 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6554, line: 48, baseType: !194, size: 32, elements: !6556)
!6556 = !{!6557, !6558, !6559, !6560, !6561}
!6557 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!6558 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!6559 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!6560 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!6561 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6550, file: !6475, line: 119, baseType: !1251, size: 16, offset: 32)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6550, file: !6475, line: 121, baseType: !130, size: 64, offset: 64)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6550, file: !6475, line: 123, baseType: !159, size: 64, offset: 128)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6550, file: !6475, line: 124, baseType: !1998, size: 64, offset: 192)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6550, file: !6475, line: 125, baseType: !6567, size: 64, offset: 256)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 64)
!6568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6569)
!6569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !6475, line: 139, size: 1728, elements: !6570)
!6570 = !{!6571, !6572, !6573, !6574, !6578, !6582, !6586, !6590, !6594, !6595, !6599, !6603, !6607, !6611, !6612, !6616, !6620, !6624, !6628, !6632, !6636, !6640, !6644, !6645, !6646, !6666, !6667, !6668}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6569, file: !6475, line: 140, baseType: !6, size: 32)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6569, file: !6475, line: 141, baseType: !194, size: 32, offset: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6569, file: !6475, line: 142, baseType: !441, size: 64, offset: 64)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6569, file: !6475, line: 143, baseType: !6575, size: 64, offset: 128)
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 64)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{!6, !6549}
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !6569, file: !6475, line: 144, baseType: !6579, size: 64, offset: 192)
!6579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6580, size: 64)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!6, !6549, !2059, !6}
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !6569, file: !6475, line: 147, baseType: !6583, size: 64, offset: 256)
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6584, size: 64)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!6, !6549, !2059, !6, !6}
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !6569, file: !6475, line: 150, baseType: !6587, size: 64, offset: 320)
!6587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6588, size: 64)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!6, !6549, !6549}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !6569, file: !6475, line: 152, baseType: !6591, size: 64, offset: 384)
!6591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6592, size: 64)
!6592 = !DISubroutineType(types: !6593)
!6593 = !{!6, !6549, !6549, !6, !299}
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !6569, file: !6475, line: 154, baseType: !6579, size: 64, offset: 448)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6569, file: !6475, line: 157, baseType: !6596, size: 64, offset: 512)
!6596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6597, size: 64)
!6597 = !DISubroutineType(types: !6598)
!6598 = !{!3580, !159, !6549, !3581}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !6569, file: !6475, line: 159, baseType: !6600, size: 64, offset: 576)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 64)
!6601 = !DISubroutineType(types: !6602)
!6602 = !{!6, !6549, !194, !130}
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !6569, file: !6475, line: 165, baseType: !6604, size: 64, offset: 640)
!6604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6605, size: 64)
!6605 = !DISubroutineType(types: !6606)
!6606 = !{!6, !6549, !154, !299, !299}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !6569, file: !6475, line: 167, baseType: !6608, size: 64, offset: 704)
!6608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6609, size: 64)
!6609 = !DISubroutineType(types: !6610)
!6610 = !{!6, !6549, !6}
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6569, file: !6475, line: 168, baseType: !6608, size: 64, offset: 768)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !6569, file: !6475, line: 169, baseType: !6613, size: 64, offset: 832)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!6, !6549, !6, !6, !2100, !194}
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !6569, file: !6475, line: 172, baseType: !6617, size: 64, offset: 896)
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{!6, !6549, !6, !6, !80, !535}
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !6569, file: !6475, line: 174, baseType: !6621, size: 64, offset: 960)
!6621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6622, size: 64)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{null, !541, !6549}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !6569, file: !6475, line: 175, baseType: !6625, size: 64, offset: 1024)
!6625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6626, size: 64)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{!6, !6549, !2119, !127}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !6569, file: !6475, line: 185, baseType: !6629, size: 64, offset: 1088)
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 64)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!6, !6549, !2119, !127, !6}
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6569, file: !6475, line: 187, baseType: !6633, size: 64, offset: 1152)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!6, !159, !6549, !1027}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !6569, file: !6475, line: 189, baseType: !6637, size: 64, offset: 1216)
!6637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6638, size: 64)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!111, !6549, !600, !6, !127, !6}
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !6569, file: !6475, line: 191, baseType: !6641, size: 64, offset: 1280)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 64)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!111, !6549, !575, !801, !127, !194}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !6569, file: !6475, line: 193, baseType: !2073, size: 64, offset: 1344)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !6569, file: !6475, line: 194, baseType: !6575, size: 64, offset: 1408)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !6569, file: !6475, line: 199, baseType: !6647, size: 64, offset: 1472)
!6647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6648, size: 64)
!6648 = !DISubroutineType(types: !6649)
!6649 = !{!6, !1998, !6650, !6662}
!6650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6651, size: 64)
!6651 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !161, line: 362, baseType: !6652)
!6652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !161, line: 354, size: 256, elements: !6653)
!6653 = !{!6654, !6655, !6656, !6661}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !6652, file: !161, line: 355, baseType: !127, size: 64)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6652, file: !161, line: 356, baseType: !127, size: 64, offset: 64)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6652, file: !161, line: 360, baseType: !6657, size: 64, offset: 128)
!6657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6652, file: !161, line: 357, size: 64, elements: !6658)
!6658 = !{!6659, !6660}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6657, file: !161, line: 358, baseType: !80, size: 64)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6657, file: !161, line: 359, baseType: !154, size: 64)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !6652, file: !161, line: 361, baseType: !6, size: 32, offset: 192)
!6662 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !6475, line: 136, baseType: !6663)
!6663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6664, size: 64)
!6664 = !DISubroutineType(types: !6665)
!6665 = !{!6, !6650, !2148, !194, !127}
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !6569, file: !6475, line: 201, baseType: !2139, size: 64, offset: 1536)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !6569, file: !6475, line: 203, baseType: !2116, size: 64, offset: 1600)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !6569, file: !6475, line: 205, baseType: !2073, size: 64, offset: 1664)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6550, file: !6475, line: 127, baseType: !6474, size: 384, offset: 320)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !1999, file: !2000, line: 500, baseType: !154, size: 64, offset: 4864)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !1999, file: !2000, line: 504, baseType: !6672, offset: 4928)
!6672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !6673, line: 871, elements: !53)
!6673 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !1999, file: !2000, line: 505, baseType: !6675, size: 64, offset: 4928)
!6675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6676, size: 64)
!6676 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !602, line: 27, flags: DIFlagFwdDecl)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !1999, file: !2000, line: 506, baseType: !2089, size: 64, offset: 4992)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !1999, file: !2000, line: 507, baseType: !2089, size: 64, offset: 5056)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !1999, file: !2000, line: 508, baseType: !2089, size: 64, offset: 5120)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !1999, file: !2000, line: 509, baseType: !2089, size: 64, offset: 5184)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !1999, file: !2000, line: 510, baseType: !2145, size: 64, offset: 5248)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !1999, file: !2000, line: 517, baseType: !2089, size: 64, offset: 5312)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !1999, file: !2000, line: 518, baseType: !6684, size: 64, offset: 5376)
!6684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6685, size: 64)
!6685 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !3029, line: 38, flags: DIFlagFwdDecl)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !1999, file: !2000, line: 522, baseType: !173, size: 128, align: 64, offset: 5440)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !1971, file: !1972, line: 103, baseType: !1998, size: 64, offset: 2176)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !1971, file: !1972, line: 105, baseType: !6689, size: 64, offset: 2240)
!6689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6690, size: 64)
!6690 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !1972, line: 48, flags: DIFlagFwdDecl)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !1971, file: !1972, line: 107, baseType: !6692, size: 64, offset: 2304)
!6692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !1971, file: !1972, line: 108, baseType: !6692, size: 64, offset: 2368)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !1971, file: !1972, line: 109, baseType: !6695, size: 64, offset: 2432)
!6695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !6696, line: 70, size: 64, elements: !6697)
!6696 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!6697 = !{!6698}
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6695, file: !6696, line: 71, baseType: !6699, size: 64)
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6700, size: 64)
!6700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !6696, line: 54, size: 192, elements: !6701)
!6701 = !{!6702, !6707, !6708}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !6700, file: !6696, line: 55, baseType: !6703, size: 64)
!6703 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !6696, line: 51, baseType: !6704)
!6704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6705, size: 64)
!6705 = !DISubroutineType(types: !6706)
!6706 = !{!6, !6699, !130, !154}
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6700, file: !6696, line: 56, baseType: !6699, size: 64, offset: 64)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !6700, file: !6696, line: 57, baseType: !6, size: 32, offset: 128)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !1971, file: !1972, line: 114, baseType: !224, size: 32, offset: 2496)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !1971, file: !1972, line: 116, baseType: !2164, size: 64, offset: 2560)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !1971, file: !1972, line: 119, baseType: !25, size: 128, offset: 2624)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !1971, file: !1972, line: 121, baseType: !6713, size: 256, offset: 2752)
!6713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !6714, line: 8, size: 256, elements: !6715)
!6714 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!6715 = !{!6716, !6717, !6718, !6719}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !6713, file: !6714, line: 10, baseType: !1808, size: 64)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !6713, file: !6714, line: 12, baseType: !6, size: 32, offset: 64)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !6713, file: !6714, line: 15, baseType: !535, size: 64, offset: 128)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !6713, file: !6714, line: 16, baseType: !6720, size: 64, offset: 192)
!6720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6721, size: 64)
!6721 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !6714, line: 6, flags: DIFlagFwdDecl)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !1971, file: !1972, line: 122, baseType: !6723, size: 832, offset: 3008)
!6723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !1994, line: 7, size: 832, elements: !6724)
!6724 = !{!6725, !6731, !6732, !6740, !6748, !6749, !6757, !6762, !6763, !6764, !6765, !6766, !6772}
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !6723, file: !1994, line: 8, baseType: !6726, size: 64)
!6726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6727, size: 64)
!6727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !5365, line: 92, size: 1024, elements: !6728)
!6728 = !{!6729}
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6727, file: !5365, line: 93, baseType: !6730, size: 1024)
!6730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 1024, elements: !1939)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !6723, file: !1994, line: 9, baseType: !5363, size: 64, offset: 64)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !6723, file: !1994, line: 10, baseType: !6733, size: 64, offset: 128)
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6734, size: 64)
!6734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !5365, line: 104, size: 7936, elements: !6735)
!6735 = !{!6736}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6734, file: !5365, line: 105, baseType: !6737, size: 7936)
!6737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 7936, elements: !6738)
!6738 = !{!6739}
!6739 = !DISubrange(count: 124)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !6723, file: !1994, line: 11, baseType: !6741, size: 64, offset: 192)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !5365, line: 98, size: 576, elements: !6743)
!6743 = !{!6744}
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6742, file: !5365, line: 99, baseType: !6745, size: 576)
!6745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 576, elements: !6746)
!6746 = !{!6747}
!6747 = !DISubrange(count: 9)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !6723, file: !1994, line: 12, baseType: !6741, size: 64, offset: 256)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !6723, file: !1994, line: 13, baseType: !6750, size: 64, offset: 320)
!6750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6751, size: 64)
!6751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !5365, line: 59, size: 1792, elements: !6752)
!6752 = !{!6753}
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6751, file: !5365, line: 60, baseType: !6754, size: 1792)
!6754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 1792, elements: !6755)
!6755 = !{!6756}
!6756 = !DISubrange(count: 28)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !6723, file: !1994, line: 14, baseType: !6758, size: 64, offset: 384)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 64)
!6759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !5365, line: 64, size: 32768, elements: !6760)
!6760 = !{!6761}
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6759, file: !5365, line: 65, baseType: !5383, size: 32768)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !6723, file: !1994, line: 17, baseType: !1992, size: 64, offset: 448)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !6723, file: !1994, line: 18, baseType: !6741, size: 64, offset: 512)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !6723, file: !1994, line: 19, baseType: !6741, size: 64, offset: 576)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !6723, file: !1994, line: 20, baseType: !5363, size: 64, offset: 640)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !6723, file: !1994, line: 21, baseType: !6767, size: 64, offset: 704)
!6767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6768, size: 64)
!6768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !5365, line: 71, size: 384, elements: !6769)
!6769 = !{!6770}
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6768, file: !5365, line: 72, baseType: !6771, size: 384)
!6771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 384, elements: !1663)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !6723, file: !1994, line: 22, baseType: !6773, size: 64, offset: 768)
!6773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6774, size: 64)
!6774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !5365, line: 81, size: 32768, elements: !6775)
!6775 = !{!6776}
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6774, file: !5365, line: 82, baseType: !5383, size: 32768)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1971, file: !1972, line: 123, baseType: !6778, size: 256, offset: 3840)
!6778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !6779, line: 11, size: 256, elements: !6780)
!6779 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!6780 = !{!6781, !6782}
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !6778, file: !6779, line: 12, baseType: !553, size: 192)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !6778, file: !6779, line: 13, baseType: !446, size: 64, offset: 192)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !1971, file: !1972, line: 124, baseType: !6784, size: 128, offset: 4096)
!6784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !6785, line: 9, size: 128, elements: !6786)
!6785 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!6786 = !{!6787, !6788}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !6784, file: !6785, line: 10, baseType: !6, size: 32)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6784, file: !6785, line: 11, baseType: !1808, size: 64, offset: 64)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !1971, file: !1972, line: 125, baseType: !6790, size: 512, offset: 4224)
!6790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !6791, line: 11, size: 512, elements: !6792)
!6791 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!6792 = !{!6793, !6794, !6795, !6796, !6797}
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !6790, file: !6791, line: 12, baseType: !636, size: 64)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !6790, file: !6791, line: 13, baseType: !6692, size: 64, offset: 64)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !6790, file: !6791, line: 15, baseType: !194, size: 32, offset: 128)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !6790, file: !6791, line: 16, baseType: !224, size: 32, offset: 160)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !6790, file: !6791, line: 17, baseType: !6798, size: 320, offset: 192)
!6798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !6696, line: 65, size: 320, elements: !6799)
!6799 = !{!6800, !6801}
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !6798, file: !6696, line: 66, baseType: !647, size: 256)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6798, file: !6696, line: 67, baseType: !6699, size: 64, offset: 256)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1971, file: !1972, line: 126, baseType: !6803, size: 5440, offset: 4736)
!6803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !6368, line: 43, size: 5440, elements: !6804)
!6804 = !{!6805, !6806, !6807, !6808, !6809, !6810, !6813, !6814, !6827, !6828, !6829, !6830, !6831, !6832, !6834, !6835, !6837, !6838, !6967, !6968, !6969, !6970, !6971, !6972, !6973, !6980, !6981, !6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991, !6992, !6993, !6994, !6995, !6996, !6997, !6998, !6999, !7000, !7001, !7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013, !7014, !7015, !7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023, !7024, !7025, !7026, !7027, !7028, !7029, !7030, !7031, !7032, !7033, !7034, !7035, !7036, !7037, !7038, !7039, !7040, !7041, !7042, !7043, !7044, !7045, !7046, !7047, !7048, !7049, !7050, !7051, !7052, !7056, !7059, !7060, !7061, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7076, !7077, !7078, !7079, !7096, !7097, !7098, !7099, !7100}
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !6803, file: !6368, line: 45, baseType: !1808, size: 64)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !6803, file: !6368, line: 46, baseType: !1808, size: 64, offset: 64)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !6803, file: !6368, line: 47, baseType: !1808, size: 64, offset: 128)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !6803, file: !6368, line: 48, baseType: !1808, size: 64, offset: 192)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !6803, file: !6368, line: 49, baseType: !1808, size: 64, offset: 256)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !6803, file: !6368, line: 51, baseType: !6811, size: 64, offset: 320)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !6368, line: 16, flags: DIFlagFwdDecl)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !6803, file: !6368, line: 52, baseType: !6811, size: 64, offset: 384)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !6803, file: !6368, line: 53, baseType: !6815, size: 64, offset: 448)
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!6816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !6817, line: 122, size: 320, elements: !6818)
!6817 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!6818 = !{!6819, !6820, !6821, !6826}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6816, file: !6817, line: 123, baseType: !6815, size: 64)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6816, file: !6817, line: 124, baseType: !1998, size: 64, offset: 64)
!6821 = !DIDerivedType(tag: DW_TAG_member, scope: !6816, file: !6817, line: 125, baseType: !6822, size: 64, offset: 128)
!6822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6816, file: !6817, line: 125, size: 64, elements: !6823)
!6823 = !{!6824, !6825}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6822, file: !6817, line: 126, baseType: !2089, size: 64)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !6822, file: !6817, line: 127, baseType: !1998, size: 64)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6816, file: !6817, line: 129, baseType: !173, size: 128, align: 64, offset: 192)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !6803, file: !6368, line: 54, baseType: !553, size: 192, offset: 512)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !6803, file: !6368, line: 62, baseType: !299, size: 8, offset: 704)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !6803, file: !6368, line: 66, baseType: !6692, size: 64, offset: 768)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !6803, file: !6368, line: 67, baseType: !299, size: 8, offset: 832)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !6803, file: !6368, line: 68, baseType: !1998, size: 64, offset: 896)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !6803, file: !6368, line: 70, baseType: !6833, size: 64, offset: 960)
!6833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !6803, file: !6368, line: 71, baseType: !1998, size: 64, offset: 1024)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !6803, file: !6368, line: 73, baseType: !6836, size: 64, offset: 1088)
!6836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !6803, file: !6368, line: 74, baseType: !6833, size: 64, offset: 1152)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !6803, file: !6368, line: 75, baseType: !6839, size: 64, offset: 1216)
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6840, size: 64)
!6840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !6841, line: 9, size: 1728, elements: !6842)
!6841 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!6842 = !{!6843, !6844, !6845, !6846, !6847, !6962, !6963, !6964, !6965, !6966}
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !6840, file: !6841, line: 11, baseType: !115, size: 64)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !6840, file: !6841, line: 12, baseType: !115, size: 64, offset: 64)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6840, file: !6841, line: 13, baseType: !6, size: 32, offset: 128)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !6840, file: !6841, line: 14, baseType: !6, size: 32, offset: 160)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !6840, file: !6841, line: 15, baseType: !6848, size: 64, offset: 192)
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 64)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !6841, line: 98, size: 960, elements: !6850)
!6850 = !{!6851, !6852, !6898, !6902, !6903, !6904, !6905, !6960, !6961}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !6849, file: !6841, line: 99, baseType: !194, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !6849, file: !6841, line: 101, baseType: !6853, size: 64, offset: 64)
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6854, size: 64)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{null, !6856, !2449}
!6856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6857, size: 64)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !6841, line: 77, size: 1408, elements: !6858)
!6858 = !{!6859, !6865, !6885, !6886, !6887, !6888, !6889, !6890, !6891, !6892, !6893, !6894, !6895, !6896, !6897}
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6857, file: !6841, line: 78, baseType: !6860, size: 64)
!6860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !6861, line: 17, size: 64, elements: !6862)
!6861 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!6862 = !{!6863}
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6860, file: !6861, line: 18, baseType: !6864, size: 64)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6857, file: !6841, line: 82, baseType: !6866, size: 352, offset: 64)
!6866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6857, file: !6841, line: 79, size: 352, elements: !6867)
!6867 = !{!6868, !6877}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6866, file: !6841, line: 80, baseType: !6869, size: 160)
!6869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !6841, line: 41, size: 160, elements: !6870)
!6870 = !{!6871, !6872, !6873, !6874, !6875, !6876}
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !6869, file: !6841, line: 42, baseType: !2014, size: 32)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !6869, file: !6841, line: 43, baseType: !2014, size: 32, offset: 32)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6869, file: !6841, line: 44, baseType: !224, size: 32, offset: 64)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !6869, file: !6841, line: 45, baseType: !224, size: 32, offset: 96)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6869, file: !6841, line: 46, baseType: !2032, size: 16, offset: 128)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !6869, file: !6841, line: 47, baseType: !739, size: 16, offset: 144)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6866, file: !6841, line: 81, baseType: !6878, size: 352)
!6878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !6841, line: 50, size: 352, elements: !6879)
!6879 = !{!6880, !6881, !6882, !6883, !6884}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !6878, file: !6841, line: 51, baseType: !4878, size: 128)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !6878, file: !6841, line: 52, baseType: !4878, size: 128, offset: 128)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6878, file: !6841, line: 53, baseType: !224, size: 32, offset: 256)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6878, file: !6841, line: 54, baseType: !2014, size: 32, offset: 288)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !6878, file: !6841, line: 55, baseType: !224, size: 32, offset: 320)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6857, file: !6841, line: 83, baseType: !2561, size: 320, offset: 448)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6857, file: !6841, line: 84, baseType: !39, offset: 768)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6857, file: !6841, line: 85, baseType: !875, size: 32, offset: 768)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !6857, file: !6841, line: 86, baseType: !636, size: 64, offset: 832)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !6857, file: !6841, line: 87, baseType: !2148, size: 64, offset: 896)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !6857, file: !6841, line: 88, baseType: !2148, size: 64, offset: 960)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !6857, file: !6841, line: 89, baseType: !1342, size: 64, offset: 1024)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6857, file: !6841, line: 90, baseType: !6, size: 32, offset: 1088)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !6857, file: !6841, line: 91, baseType: !6, size: 32, offset: 1120)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6857, file: !6841, line: 92, baseType: !1399, size: 8, offset: 1152)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !6857, file: !6841, line: 93, baseType: !739, size: 16, offset: 1168)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !6857, file: !6841, line: 94, baseType: !6839, size: 64, offset: 1216)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6857, file: !6841, line: 95, baseType: !173, size: 128, align: 64, offset: 1280)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6849, file: !6841, line: 103, baseType: !6899, size: 64, offset: 128)
!6899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6900, size: 64)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{null, !6856}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !6849, file: !6841, line: 104, baseType: !2567, size: 64, offset: 192)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !6849, file: !6841, line: 105, baseType: !980, size: 64, offset: 256)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !6849, file: !6841, line: 106, baseType: !21, size: 64, offset: 320)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !6849, file: !6841, line: 107, baseType: !6906, size: 320, offset: 384)
!6906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !6861, line: 56, size: 320, elements: !6907)
!6907 = !{!6908, !6909, !6910, !6911, !6912, !6913, !6914, !6915, !6920, !6922}
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !6906, file: !6861, line: 57, baseType: !739, size: 16)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !6906, file: !6861, line: 58, baseType: !739, size: 16, offset: 16)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !6906, file: !6861, line: 59, baseType: !739, size: 16, offset: 32)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !6906, file: !6861, line: 60, baseType: !739, size: 16, offset: 48)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !6906, file: !6861, line: 61, baseType: !194, size: 32, offset: 64)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !6906, file: !6861, line: 62, baseType: !739, size: 16, offset: 96)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !6906, file: !6861, line: 63, baseType: !299, size: 8, offset: 112)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !6906, file: !6861, line: 64, baseType: !6916, size: 64, offset: 128)
!6916 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !6861, line: 38, baseType: !6917)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 64)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!224, !2449, !224, !224}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !6906, file: !6861, line: 65, baseType: !6921, size: 64, offset: 192)
!6921 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !6861, line: 39, baseType: !6917)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !6906, file: !6861, line: 66, baseType: !6923, size: 64, offset: 256)
!6923 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !6861, line: 40, baseType: !6924)
!6924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6925, size: 64)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{!6, !6927, !2449}
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 64)
!6928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !6861, line: 33, size: 128, elements: !6929)
!6929 = !{!6930, !6959}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !6928, file: !6861, line: 34, baseType: !6931, size: 64)
!6931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6932, size: 64)
!6932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !6861, line: 81, size: 1024, elements: !6933)
!6933 = !{!6934, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !6932, file: !6861, line: 82, baseType: !6935, size: 64)
!6935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6936, size: 64)
!6936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !6937, line: 76, size: 448, elements: !6938)
!6937 = !DIFile(filename: "./include/linux/rhashtable.h", directory: "/home/lizy2001/genbc/linux")
!6938 = !{!6939, !6940, !6941, !6942, !6943, !6944, !6945, !6947}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6936, file: !6937, line: 77, baseType: !194, size: 32)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !6936, file: !6937, line: 78, baseType: !194, size: 32, offset: 32)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !6936, file: !6937, line: 79, baseType: !224, size: 32, offset: 64)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !6936, file: !6937, line: 80, baseType: !25, size: 128, offset: 128)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6936, file: !6937, line: 81, baseType: !173, size: 128, align: 64, offset: 256)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "future_tbl", scope: !6936, file: !6937, line: 83, baseType: !6935, size: 64, offset: 384)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "dep_map", scope: !6936, file: !6937, line: 85, baseType: !6946, offset: 448)
!6946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !457, line: 192, elements: !53)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !6936, file: !6937, line: 87, baseType: !6948, offset: 448)
!6948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6949, elements: !2184)
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6950, size: 64)
!6950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_lock_head", file: !6937, line: 47, elements: !53)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !6932, file: !6861, line: 83, baseType: !194, size: 32, offset: 64)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !6932, file: !6861, line: 84, baseType: !194, size: 32, offset: 96)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6932, file: !6861, line: 85, baseType: !6906, size: 320, offset: 128)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !6932, file: !6861, line: 86, baseType: !299, size: 8, offset: 448)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !6932, file: !6861, line: 87, baseType: !1723, size: 256, offset: 512)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6932, file: !6861, line: 88, baseType: !553, size: 192, offset: 768)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6932, file: !6861, line: 89, baseType: !39, offset: 960)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !6932, file: !6861, line: 90, baseType: !627, size: 32, offset: 960)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6928, file: !6861, line: 35, baseType: !2449, size: 64, offset: 64)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6849, file: !6841, line: 108, baseType: !875, size: 32, offset: 704)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6849, file: !6841, line: 109, baseType: !1784, size: 192, offset: 768)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6840, file: !6841, line: 16, baseType: !1970, size: 64, offset: 256)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !6840, file: !6841, line: 17, baseType: !299, size: 8, offset: 320)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !6840, file: !6841, line: 19, baseType: !6932, size: 1024, offset: 384)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6840, file: !6841, line: 22, baseType: !557, size: 64, offset: 1408)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !6840, file: !6841, line: 23, baseType: !1723, size: 256, offset: 1472)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !6803, file: !6368, line: 87, baseType: !6, size: 32, offset: 1280)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !6803, file: !6368, line: 88, baseType: !6, size: 32, offset: 1312)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !6803, file: !6368, line: 89, baseType: !6, size: 32, offset: 1344)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !6803, file: !6368, line: 90, baseType: !6, size: 32, offset: 1376)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !6803, file: !6368, line: 91, baseType: !6, size: 32, offset: 1408)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !6803, file: !6368, line: 92, baseType: !6, size: 32, offset: 1440)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !6803, file: !6368, line: 94, baseType: !6974, size: 128, offset: 1472)
!6974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !6368, line: 21, size: 128, elements: !6975)
!6975 = !{!6976, !6977, !6979}
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6974, file: !6368, line: 22, baseType: !2633, size: 32)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6974, file: !6368, line: 23, baseType: !6978, size: 64, offset: 32)
!6978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !1906)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !6974, file: !6368, line: 24, baseType: !299, size: 8, offset: 96)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !6803, file: !6368, line: 96, baseType: !6, size: 32, offset: 1600)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !6803, file: !6368, line: 97, baseType: !6, size: 32, offset: 1632)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !6803, file: !6368, line: 99, baseType: !6, size: 32, offset: 1664)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !6803, file: !6368, line: 100, baseType: !6, size: 32, offset: 1696)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !6803, file: !6368, line: 101, baseType: !6, size: 32, offset: 1728)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !6803, file: !6368, line: 102, baseType: !6, size: 32, offset: 1760)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !6803, file: !6368, line: 103, baseType: !6, size: 32, offset: 1792)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !6803, file: !6368, line: 104, baseType: !6, size: 32, offset: 1824)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !6803, file: !6368, line: 106, baseType: !6, size: 32, offset: 1856)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !6803, file: !6368, line: 107, baseType: !6, size: 32, offset: 1888)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !6803, file: !6368, line: 111, baseType: !6, size: 32, offset: 1920)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !6803, file: !6368, line: 112, baseType: !6, size: 32, offset: 1952)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !6803, file: !6368, line: 114, baseType: !6, size: 32, offset: 1984)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !6803, file: !6368, line: 116, baseType: !6, size: 32, offset: 2016)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !6803, file: !6368, line: 117, baseType: !6, size: 32, offset: 2048)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !6803, file: !6368, line: 121, baseType: !6, size: 32, offset: 2080)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !6803, file: !6368, line: 122, baseType: !6, size: 32, offset: 2112)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !6803, file: !6368, line: 123, baseType: !6, size: 32, offset: 2144)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !6803, file: !6368, line: 124, baseType: !6, size: 32, offset: 2176)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !6803, file: !6368, line: 125, baseType: !6, size: 32, offset: 2208)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !6803, file: !6368, line: 126, baseType: !224, size: 32, offset: 2240)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !6803, file: !6368, line: 128, baseType: !6, size: 32, offset: 2272)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !6803, file: !6368, line: 129, baseType: !6, size: 32, offset: 2304)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !6803, file: !6368, line: 130, baseType: !6, size: 32, offset: 2336)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !6803, file: !6368, line: 132, baseType: !6, size: 32, offset: 2368)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !6803, file: !6368, line: 133, baseType: !6, size: 32, offset: 2400)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !6803, file: !6368, line: 134, baseType: !6, size: 32, offset: 2432)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !6803, file: !6368, line: 135, baseType: !6, size: 32, offset: 2464)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !6803, file: !6368, line: 136, baseType: !6, size: 32, offset: 2496)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !6803, file: !6368, line: 137, baseType: !6, size: 32, offset: 2528)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !6803, file: !6368, line: 138, baseType: !6, size: 32, offset: 2560)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !6803, file: !6368, line: 139, baseType: !6, size: 32, offset: 2592)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !6803, file: !6368, line: 140, baseType: !194, size: 32, offset: 2624)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !6803, file: !6368, line: 141, baseType: !6, size: 32, offset: 2656)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !6803, file: !6368, line: 142, baseType: !6, size: 32, offset: 2688)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !6803, file: !6368, line: 143, baseType: !6, size: 32, offset: 2720)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !6803, file: !6368, line: 144, baseType: !6, size: 32, offset: 2752)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !6803, file: !6368, line: 145, baseType: !6, size: 32, offset: 2784)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !6803, file: !6368, line: 146, baseType: !6, size: 32, offset: 2816)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !6803, file: !6368, line: 147, baseType: !6, size: 32, offset: 2848)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !6803, file: !6368, line: 148, baseType: !6, size: 32, offset: 2880)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !6803, file: !6368, line: 149, baseType: !6, size: 32, offset: 2912)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !6803, file: !6368, line: 150, baseType: !6, size: 32, offset: 2944)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !6803, file: !6368, line: 151, baseType: !6, size: 32, offset: 2976)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !6803, file: !6368, line: 152, baseType: !6, size: 32, offset: 3008)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !6803, file: !6368, line: 153, baseType: !6, size: 32, offset: 3040)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !6803, file: !6368, line: 154, baseType: !6, size: 32, offset: 3072)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !6803, file: !6368, line: 155, baseType: !6, size: 32, offset: 3104)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !6803, file: !6368, line: 156, baseType: !6, size: 32, offset: 3136)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !6803, file: !6368, line: 157, baseType: !6, size: 32, offset: 3168)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !6803, file: !6368, line: 158, baseType: !6, size: 32, offset: 3200)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !6803, file: !6368, line: 159, baseType: !6, size: 32, offset: 3232)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !6803, file: !6368, line: 160, baseType: !6, size: 32, offset: 3264)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !6803, file: !6368, line: 161, baseType: !6, size: 32, offset: 3296)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !6803, file: !6368, line: 162, baseType: !6, size: 32, offset: 3328)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !6803, file: !6368, line: 163, baseType: !6, size: 32, offset: 3360)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !6803, file: !6368, line: 164, baseType: !6, size: 32, offset: 3392)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !6803, file: !6368, line: 165, baseType: !6, size: 32, offset: 3424)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !6803, file: !6368, line: 166, baseType: !6, size: 32, offset: 3456)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !6803, file: !6368, line: 167, baseType: !6, size: 32, offset: 3488)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !6803, file: !6368, line: 168, baseType: !6, size: 32, offset: 3520)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !6803, file: !6368, line: 169, baseType: !6, size: 32, offset: 3552)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !6803, file: !6368, line: 170, baseType: !6, size: 32, offset: 3584)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !6803, file: !6368, line: 171, baseType: !6, size: 32, offset: 3616)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !6803, file: !6368, line: 172, baseType: !3206, size: 96, offset: 3648)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !6803, file: !6368, line: 173, baseType: !3206, size: 96, offset: 3744)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !6803, file: !6368, line: 174, baseType: !6, size: 32, offset: 3840)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !6803, file: !6368, line: 175, baseType: !130, size: 64, offset: 3904)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !6803, file: !6368, line: 176, baseType: !130, size: 64, offset: 3968)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !6803, file: !6368, line: 177, baseType: !6405, size: 192, offset: 4032)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !6803, file: !6368, line: 178, baseType: !6, size: 32, offset: 4224)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !6803, file: !6368, line: 179, baseType: !6, size: 32, offset: 4256)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !6803, file: !6368, line: 180, baseType: !7053, size: 64, offset: 4288)
!7053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7054, size: 64)
!7054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7055)
!7055 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !6368, line: 180, flags: DIFlagFwdDecl)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !6803, file: !6368, line: 181, baseType: !7057, size: 64, offset: 4352)
!7057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7058, size: 64)
!7058 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !6368, line: 41, flags: DIFlagFwdDecl)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !6803, file: !6368, line: 182, baseType: !39, offset: 4416)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !6803, file: !6368, line: 183, baseType: !194, size: 32, offset: 4416)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !6803, file: !6368, line: 184, baseType: !627, size: 32, offset: 4448)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !6803, file: !6368, line: 185, baseType: !130, size: 64, offset: 4480)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !6803, file: !6368, line: 186, baseType: !6, size: 32, offset: 4544)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !6803, file: !6368, line: 188, baseType: !6, size: 32, offset: 4576)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !6803, file: !6368, line: 189, baseType: !6, size: 32, offset: 4608)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !6803, file: !6368, line: 195, baseType: !6, size: 32, offset: 4640)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !6803, file: !6368, line: 196, baseType: !6, size: 32, offset: 4672)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !6803, file: !6368, line: 197, baseType: !6, size: 32, offset: 4704)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !6803, file: !6368, line: 198, baseType: !6, size: 32, offset: 4736)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !6803, file: !6368, line: 200, baseType: !7071, size: 96, offset: 4768)
!7071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !6368, line: 27, size: 96, elements: !7072)
!7072 = !{!7073, !7074}
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7071, file: !6368, line: 28, baseType: !2633, size: 32)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7071, file: !6368, line: 29, baseType: !7075, size: 64, offset: 32)
!7075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 64, elements: !1906)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !6803, file: !6368, line: 202, baseType: !627, size: 32, offset: 4864)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !6803, file: !6368, line: 205, baseType: !5577, size: 64, offset: 4928)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !6803, file: !6368, line: 206, baseType: !6, size: 32, offset: 4992)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !6803, file: !6368, line: 222, baseType: !7080, size: 64, offset: 5056)
!7080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7081, size: 64)
!7081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !7082, line: 28, size: 512, elements: !7083)
!7082 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!7083 = !{!7084, !7085, !7086, !7090, !7094, !7095}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7081, file: !7082, line: 29, baseType: !6, size: 32)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7081, file: !7082, line: 30, baseType: !25, size: 128, offset: 64)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !7081, file: !7082, line: 31, baseType: !7087, size: 64, offset: 192)
!7087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7088, size: 64)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{!194, !1970}
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !7081, file: !7082, line: 32, baseType: !7091, size: 64, offset: 256)
!7091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7092, size: 64)
!7092 = !DISubroutineType(types: !7093)
!7093 = !{!6, !1970, !6699, !2491}
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7081, file: !7082, line: 34, baseType: !441, size: 64, offset: 320)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7081, file: !7082, line: 35, baseType: !173, size: 128, align: 64, offset: 384)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !6803, file: !6368, line: 223, baseType: !194, size: 32, offset: 5120)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !6803, file: !6368, line: 225, baseType: !7080, size: 64, offset: 5184)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !6803, file: !6368, line: 226, baseType: !194, size: 32, offset: 5248)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !6803, file: !6368, line: 228, baseType: !627, size: 32, offset: 5280)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !6803, file: !6368, line: 229, baseType: !7101, size: 128, offset: 5312)
!7101 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !7102, line: 22, baseType: !7103)
!7102 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!7103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7102, line: 20, size: 128, elements: !7104)
!7104 = !{!7105}
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7103, file: !7102, line: 21, baseType: !7106, size: 128)
!7106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 128, elements: !1906)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1971, file: !1972, line: 128, baseType: !7108, size: 4608, offset: 10176)
!7108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !7109, line: 56, size: 4608, elements: !7110)
!7109 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!7110 = !{!7111, !7151, !7153, !7154, !7155, !7156, !7157, !7158, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7188, !7189, !7190, !7191}
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !7108, file: !7109, line: 57, baseType: !7112, size: 1600)
!7112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !7109, line: 15, size: 1600, elements: !7113)
!7113 = !{!7114, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129, !7130, !7131, !7132, !7133, !7134, !7135, !7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150}
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !7112, file: !7109, line: 17, baseType: !1808, size: 64)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !7112, file: !7109, line: 18, baseType: !1808, size: 64, offset: 64)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !7112, file: !7109, line: 19, baseType: !1808, size: 64, offset: 128)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !7112, file: !7109, line: 20, baseType: !1808, size: 64, offset: 192)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !7112, file: !7109, line: 21, baseType: !1808, size: 64, offset: 256)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !7112, file: !7109, line: 23, baseType: !6, size: 32, offset: 320)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !7112, file: !7109, line: 24, baseType: !6, size: 32, offset: 352)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !7112, file: !7109, line: 25, baseType: !6, size: 32, offset: 384)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !7112, file: !7109, line: 26, baseType: !6, size: 32, offset: 416)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !7112, file: !7109, line: 27, baseType: !6, size: 32, offset: 448)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !7112, file: !7109, line: 28, baseType: !6, size: 32, offset: 480)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !7112, file: !7109, line: 29, baseType: !6, size: 32, offset: 512)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !7112, file: !7109, line: 30, baseType: !6, size: 32, offset: 544)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !7112, file: !7109, line: 31, baseType: !6, size: 32, offset: 576)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !7112, file: !7109, line: 32, baseType: !6, size: 32, offset: 608)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !7112, file: !7109, line: 33, baseType: !6, size: 32, offset: 640)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !7112, file: !7109, line: 34, baseType: !6, size: 32, offset: 672)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !7112, file: !7109, line: 35, baseType: !6, size: 32, offset: 704)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !7112, file: !7109, line: 36, baseType: !6, size: 32, offset: 736)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !7112, file: !7109, line: 37, baseType: !6, size: 32, offset: 768)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !7112, file: !7109, line: 38, baseType: !6, size: 32, offset: 800)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !7112, file: !7109, line: 39, baseType: !7136, size: 256, offset: 832)
!7136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 256, elements: !1207)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !7112, file: !7109, line: 40, baseType: !5577, size: 64, offset: 1088)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !7112, file: !7109, line: 41, baseType: !6, size: 32, offset: 1152)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !7112, file: !7109, line: 42, baseType: !6, size: 32, offset: 1184)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !7112, file: !7109, line: 43, baseType: !6, size: 32, offset: 1216)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !7112, file: !7109, line: 44, baseType: !6, size: 32, offset: 1248)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !7112, file: !7109, line: 45, baseType: !6, size: 32, offset: 1280)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !7112, file: !7109, line: 46, baseType: !6, size: 32, offset: 1312)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !7112, file: !7109, line: 47, baseType: !6, size: 32, offset: 1344)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !7112, file: !7109, line: 48, baseType: !6, size: 32, offset: 1376)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !7112, file: !7109, line: 49, baseType: !6, size: 32, offset: 1408)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !7112, file: !7109, line: 50, baseType: !6, size: 32, offset: 1440)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !7112, file: !7109, line: 51, baseType: !6, size: 32, offset: 1472)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !7112, file: !7109, line: 52, baseType: !6, size: 32, offset: 1504)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !7112, file: !7109, line: 53, baseType: !299, size: 8, offset: 1536)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !7108, file: !7109, line: 58, baseType: !7152, size: 64, offset: 1600)
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !7108, file: !7109, line: 59, baseType: !7152, size: 64, offset: 1664)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !7108, file: !7109, line: 60, baseType: !6836, size: 64, offset: 1728)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !7108, file: !7109, line: 61, baseType: !6839, size: 64, offset: 1792)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !7108, file: !7109, line: 71, baseType: !4942, size: 64, offset: 1856)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !7108, file: !7109, line: 72, baseType: !5250, size: 64, offset: 1920)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !7108, file: !7109, line: 73, baseType: !7159, size: 64, offset: 1984)
!7159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7160, size: 64)
!7160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !4944, line: 368, size: 224, elements: !7161)
!7161 = !{!7162, !7163, !7164, !7165, !7166, !7167, !7168}
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nodes", scope: !7160, file: !4944, line: 369, baseType: !226, size: 32)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "fib_route_nodes", scope: !7160, file: !4944, line: 370, baseType: !226, size: 32, offset: 32)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_entries", scope: !7160, file: !4944, line: 371, baseType: !226, size: 32, offset: 64)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_cache", scope: !7160, file: !4944, line: 372, baseType: !226, size: 32, offset: 96)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "fib_discarded_routes", scope: !7160, file: !4944, line: 373, baseType: !226, size: 32, offset: 128)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_alloc", scope: !7160, file: !4944, line: 376, baseType: !627, size: 32, offset: 160)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_uncache", scope: !7160, file: !4944, line: 377, baseType: !627, size: 32, offset: 192)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !7108, file: !7109, line: 74, baseType: !2561, size: 320, offset: 2048)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !7108, file: !7109, line: 75, baseType: !6692, size: 64, offset: 2368)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !7108, file: !7109, line: 76, baseType: !4947, size: 64, offset: 2432)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !7108, file: !7109, line: 77, baseType: !25, size: 128, offset: 2496)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !7108, file: !7109, line: 78, baseType: !5095, size: 1088, offset: 2624)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !7108, file: !7109, line: 79, baseType: !829, offset: 3712)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !7108, file: !7109, line: 80, baseType: !39, offset: 3712)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !7108, file: !7109, line: 81, baseType: !194, size: 32, offset: 3712)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !7108, file: !7109, line: 82, baseType: !130, size: 64, offset: 3776)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !7108, file: !7109, line: 94, baseType: !6833, size: 64, offset: 3840)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !7108, file: !7109, line: 95, baseType: !1998, size: 64, offset: 3904)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !7108, file: !7109, line: 96, baseType: !1998, size: 64, offset: 3968)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !7108, file: !7109, line: 97, baseType: !1998, size: 64, offset: 4032)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !7108, file: !7109, line: 98, baseType: !1998, size: 64, offset: 4096)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !7108, file: !7109, line: 107, baseType: !627, size: 32, offset: 4160)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !7108, file: !7109, line: 108, baseType: !627, size: 32, offset: 4192)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !7108, file: !7109, line: 109, baseType: !7186, size: 64, offset: 4224)
!7186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7187, size: 64)
!7187 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !7109, line: 109, flags: DIFlagFwdDecl)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !7108, file: !7109, line: 110, baseType: !7080, size: 64, offset: 4288)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !7108, file: !7109, line: 111, baseType: !7080, size: 64, offset: 4352)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !7108, file: !7109, line: 112, baseType: !194, size: 32, offset: 4416)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !7108, file: !7109, line: 117, baseType: !7192, size: 128, offset: 4480)
!7192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7108, file: !7109, line: 113, size: 128, elements: !7193)
!7193 = !{!7194, !7195, !7196}
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7192, file: !7109, line: 114, baseType: !446, size: 64)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7192, file: !7109, line: 115, baseType: !39, offset: 64)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7192, file: !7109, line: 116, baseType: !224, size: 32, offset: 64)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !1971, file: !1972, line: 162, baseType: !2578, size: 192, offset: 14784)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1971, file: !1972, line: 164, baseType: !7199, size: 64, offset: 14976)
!7199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7200, size: 64)
!7200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !7201, line: 28, size: 192, elements: !7202)
!7201 = !DIFile(filename: "./include/net/netns/generic.h", directory: "/home/lizy2001/genbc/linux")
!7202 = !{!7203}
!7203 = !DIDerivedType(tag: DW_TAG_member, scope: !7200, file: !7201, line: 29, baseType: !7204, size: 192)
!7204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7200, file: !7201, line: 29, size: 192, elements: !7205)
!7205 = !{!7206, !7211}
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !7204, file: !7201, line: 33, baseType: !7207, size: 192)
!7207 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7204, file: !7201, line: 30, size: 192, elements: !7208)
!7208 = !{!7209, !7210}
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7207, file: !7201, line: 31, baseType: !194, size: 32)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7207, file: !7201, line: 32, baseType: !173, size: 128, align: 64, offset: 64)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7204, file: !7201, line: 35, baseType: !4746)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !1971, file: !1972, line: 167, baseType: !7213, size: 512, offset: 15040)
!7213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !7214, line: 14, size: 512, elements: !7215)
!7214 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!7215 = !{!7216, !7231, !7233}
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !7213, file: !7214, line: 16, baseType: !7217, size: 128)
!7217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7218, size: 128, elements: !1906)
!7218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7219, size: 64)
!7219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !3127, line: 1037, size: 128, elements: !7220)
!7220 = !{!7221, !7222}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7219, file: !3127, line: 1038, baseType: !173, size: 128, align: 64)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !7219, file: !3127, line: 1039, baseType: !7223, offset: 128)
!7223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7224, elements: !2184)
!7224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !3127, line: 1032, size: 192, elements: !7225)
!7225 = !{!7226, !7227}
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7224, file: !3127, line: 1033, baseType: !3027, size: 64)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !7224, file: !3127, line: 1034, baseType: !7228, size: 128, offset: 64)
!7228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7229, size: 128, elements: !1906)
!7229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7230, size: 64)
!7230 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !3127, line: 1034, flags: DIFlagFwdDecl)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !7213, file: !7214, line: 17, baseType: !7232, size: 128, offset: 128)
!7232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3027, size: 128, elements: !1906)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !7213, file: !7214, line: 18, baseType: !7234, size: 256, offset: 256)
!7234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 256, elements: !1906)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !1971, file: !1972, line: 174, baseType: !559, size: 64, offset: 15552)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !1971, file: !1972, line: 183, baseType: !7237, size: 1216, offset: 15616)
!7237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !7238, line: 15, size: 1216, elements: !7239)
!7238 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!7239 = !{!7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7253, !7254, !7255, !7258, !7261}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !7237, file: !7238, line: 17, baseType: !1992, size: 64)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !7237, file: !7238, line: 18, baseType: !1992, size: 64, offset: 64)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !7237, file: !7238, line: 19, baseType: !1992, size: 64, offset: 128)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !7237, file: !7238, line: 20, baseType: !1992, size: 64, offset: 192)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !7237, file: !7238, line: 21, baseType: !1992, size: 64, offset: 256)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !7237, file: !7238, line: 22, baseType: !1992, size: 64, offset: 320)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !7237, file: !7238, line: 23, baseType: !1992, size: 64, offset: 384)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !7237, file: !7238, line: 24, baseType: !1992, size: 64, offset: 448)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !7237, file: !7238, line: 25, baseType: !1992, size: 64, offset: 512)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !7237, file: !7238, line: 26, baseType: !1992, size: 64, offset: 576)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !7237, file: !7238, line: 30, baseType: !7251, size: 64, offset: 640)
!7251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7252, size: 64)
!7252 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !7238, line: 11, flags: DIFlagFwdDecl)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !7237, file: !7238, line: 31, baseType: !39, offset: 704)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !7237, file: !7238, line: 32, baseType: !2561, size: 320, offset: 704)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !7237, file: !7238, line: 33, baseType: !7256, size: 64, offset: 1024)
!7256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7257, size: 64)
!7257 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !7238, line: 12, flags: DIFlagFwdDecl)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !7237, file: !7238, line: 34, baseType: !7259, size: 64, offset: 1088)
!7259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7260, size: 64)
!7260 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !7238, line: 13, flags: DIFlagFwdDecl)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !7237, file: !7238, line: 37, baseType: !446, size: 64, offset: 1152)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !1971, file: !1972, line: 191, baseType: !1998, size: 64, offset: 16832)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1955, file: !1956, line: 38, baseType: !7264, size: 64, offset: 384)
!7264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7265, size: 64)
!7265 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1956, line: 38, flags: DIFlagFwdDecl)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1955, file: !1956, line: 39, baseType: !7264, size: 64, offset: 448)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1955, file: !1956, line: 40, baseType: !7268, size: 64, offset: 512)
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7269, size: 64)
!7269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !7270, line: 856, size: 448, elements: !7271)
!7270 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!7271 = !{!7272, !7273, !7274, !7275, !7276}
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7269, file: !7270, line: 857, baseType: !875, size: 32)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !7269, file: !7270, line: 858, baseType: !1603, size: 192, offset: 64)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !7269, file: !7270, line: 859, baseType: !1569, size: 64, offset: 256)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !7269, file: !7270, line: 860, baseType: !1828, size: 64, offset: 320)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !7269, file: !7270, line: 861, baseType: !7277, size: 64, offset: 384)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7278, size: 64)
!7278 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !7279, line: 16, flags: DIFlagFwdDecl)
!7279 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1263, file: !1264, line: 969, baseType: !7281, size: 64, offset: 9216)
!7281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7282, size: 64)
!7282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !7283, line: 82, size: 7296, elements: !7284)
!7283 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!7284 = !{!7285, !7286, !7287, !7288, !7289, !7290, !7291, !7302, !7303, !7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7320, !7329, !7330, !7332, !7333, !7334, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7362, !7363, !7370, !7371, !7372, !7373, !7374, !7375}
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !7282, file: !7283, line: 83, baseType: !875, size: 32)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !7282, file: !7283, line: 84, baseType: !627, size: 32, offset: 32)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !7282, file: !7283, line: 85, baseType: !6, size: 32, offset: 64)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !7282, file: !7283, line: 86, baseType: !25, size: 128, offset: 128)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !7282, file: !7283, line: 88, baseType: !807, size: 128, offset: 256)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !7282, file: !7283, line: 91, baseType: !1262, size: 64, offset: 384)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !7282, file: !7283, line: 94, baseType: !7292, size: 192, offset: 448)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !7293, line: 30, size: 192, elements: !7294)
!7293 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!7294 = !{!7295, !7296}
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7292, file: !7293, line: 31, baseType: !25, size: 128)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !7292, file: !7293, line: 32, baseType: !7297, size: 64, offset: 128)
!7297 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !7298, line: 25, baseType: !7299)
!7298 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!7299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7298, line: 23, size: 64, elements: !7300)
!7300 = !{!7301}
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !7299, file: !7298, line: 24, baseType: !1416, size: 64)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !7282, file: !7283, line: 97, baseType: !446, size: 64, offset: 640)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !7282, file: !7283, line: 100, baseType: !6, size: 32, offset: 704)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !7282, file: !7283, line: 106, baseType: !6, size: 32, offset: 736)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !7282, file: !7283, line: 107, baseType: !1262, size: 64, offset: 768)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !7282, file: !7283, line: 110, baseType: !6, size: 32, offset: 832)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7282, file: !7283, line: 111, baseType: !194, size: 32, offset: 864)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !7282, file: !7283, line: 122, baseType: !194, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !7282, file: !7283, line: 123, baseType: !194, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !7282, file: !7283, line: 128, baseType: !6, size: 32, offset: 928)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !7282, file: !7283, line: 129, baseType: !25, size: 128, offset: 960)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !7282, file: !7283, line: 132, baseType: !1333, size: 512, offset: 1088)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !7282, file: !7283, line: 133, baseType: !1342, size: 64, offset: 1600)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !7282, file: !7283, line: 140, baseType: !7315, size: 256, offset: 1664)
!7315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7316, size: 256, elements: !1906)
!7316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !7283, line: 38, size: 128, elements: !7317)
!7317 = !{!7318, !7319}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !7316, file: !7283, line: 39, baseType: !230, size: 64)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !7316, file: !7283, line: 40, baseType: !230, size: 64, offset: 64)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !7282, file: !7283, line: 146, baseType: !7321, size: 192, offset: 1920)
!7321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !7283, line: 66, size: 192, elements: !7322)
!7322 = !{!7323}
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !7321, file: !7283, line: 67, baseType: !7324, size: 192)
!7324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !7283, line: 47, size: 192, elements: !7325)
!7325 = !{!7326, !7327, !7328}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !7324, file: !7283, line: 48, baseType: !559, size: 64)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !7324, file: !7283, line: 49, baseType: !559, size: 64, offset: 64)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !7324, file: !7283, line: 50, baseType: !559, size: 64, offset: 128)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !7282, file: !7283, line: 150, baseType: !1867, size: 640, offset: 2112)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !7282, file: !7283, line: 153, baseType: !7331, size: 256, offset: 2752)
!7331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1528, size: 256, elements: !1207)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !7282, file: !7283, line: 159, baseType: !1528, size: 64, offset: 3008)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !7282, file: !7283, line: 162, baseType: !6, size: 32, offset: 3072)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !7282, file: !7283, line: 164, baseType: !7335, size: 64, offset: 3136)
!7335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7336, size: 64)
!7336 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !7283, line: 164, flags: DIFlagFwdDecl)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !7282, file: !7283, line: 175, baseType: !2633, size: 32, offset: 3200)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !7282, file: !7283, line: 176, baseType: !230, size: 64, offset: 3264)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !7282, file: !7283, line: 176, baseType: !230, size: 64, offset: 3328)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !7282, file: !7283, line: 176, baseType: !230, size: 64, offset: 3392)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !7282, file: !7283, line: 176, baseType: !230, size: 64, offset: 3456)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !7282, file: !7283, line: 177, baseType: !230, size: 64, offset: 3520)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !7282, file: !7283, line: 178, baseType: !230, size: 64, offset: 3584)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !7282, file: !7283, line: 179, baseType: !1855, size: 128, offset: 3648)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !7282, file: !7283, line: 180, baseType: !130, size: 64, offset: 3776)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !7282, file: !7283, line: 180, baseType: !130, size: 64, offset: 3840)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !7282, file: !7283, line: 180, baseType: !130, size: 64, offset: 3904)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !7282, file: !7283, line: 180, baseType: !130, size: 64, offset: 3968)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !7282, file: !7283, line: 181, baseType: !130, size: 64, offset: 4032)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !7282, file: !7283, line: 181, baseType: !130, size: 64, offset: 4096)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !7282, file: !7283, line: 181, baseType: !130, size: 64, offset: 4160)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !7282, file: !7283, line: 181, baseType: !130, size: 64, offset: 4224)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !7282, file: !7283, line: 182, baseType: !130, size: 64, offset: 4288)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !7282, file: !7283, line: 182, baseType: !130, size: 64, offset: 4352)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !7282, file: !7283, line: 182, baseType: !130, size: 64, offset: 4416)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !7282, file: !7283, line: 182, baseType: !130, size: 64, offset: 4480)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !7282, file: !7283, line: 183, baseType: !130, size: 64, offset: 4544)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !7282, file: !7283, line: 183, baseType: !130, size: 64, offset: 4608)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !7282, file: !7283, line: 184, baseType: !7360, offset: 4672)
!7360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !7361, line: 12, elements: !53)
!7361 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !7282, file: !7283, line: 192, baseType: !232, size: 64, offset: 4672)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !7282, file: !7283, line: 203, baseType: !7364, size: 2048, offset: 4736)
!7364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7365, size: 2048, elements: !1939)
!7365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !7366, line: 43, size: 128, elements: !7367)
!7366 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!7367 = !{!7368, !7369}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !7365, file: !7366, line: 44, baseType: !129, size: 64)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !7365, file: !7366, line: 45, baseType: !129, size: 64, offset: 64)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !7282, file: !7283, line: 220, baseType: !299, size: 8, offset: 6784)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !7282, file: !7283, line: 221, baseType: !1251, size: 16, offset: 6800)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !7282, file: !7283, line: 222, baseType: !1251, size: 16, offset: 6816)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !7282, file: !7283, line: 224, baseType: !1020, size: 64, offset: 6848)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !7282, file: !7283, line: 227, baseType: !553, size: 192, offset: 6912)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !7282, file: !7283, line: 233, baseType: !553, size: 192, offset: 7104)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1263, file: !1264, line: 970, baseType: !7377, size: 64, offset: 9280)
!7377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7378, size: 64)
!7378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !7283, line: 20, size: 16576, elements: !7379)
!7379 = !{!7380, !7381, !7382, !7383}
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !7378, file: !7283, line: 21, baseType: !39)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7378, file: !7283, line: 22, baseType: !875, size: 32)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !7378, file: !7283, line: 23, baseType: !807, size: 128, offset: 64)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !7378, file: !7283, line: 24, baseType: !7384, size: 16384, offset: 192)
!7384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7385, size: 16384, elements: !85)
!7385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !7293, line: 49, size: 256, elements: !7386)
!7386 = !{!7387}
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !7385, file: !7293, line: 50, baseType: !7388, size: 256)
!7388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !7293, line: 35, size: 256, elements: !7389)
!7389 = !{!7390, !7397, !7398, !7404}
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !7388, file: !7293, line: 37, baseType: !7391, size: 64)
!7391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !7392, line: 19, baseType: !7393)
!7392 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!7393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7394, size: 64)
!7394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !7392, line: 18, baseType: !7395)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{null, !6}
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !7388, file: !7293, line: 38, baseType: !130, size: 64, offset: 64)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !7388, file: !7293, line: 44, baseType: !7399, size: 64, offset: 128)
!7399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !7392, line: 22, baseType: !7400)
!7400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7401, size: 64)
!7401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !7392, line: 21, baseType: !7402)
!7402 = !DISubroutineType(types: !7403)
!7403 = !{null}
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !7388, file: !7293, line: 46, baseType: !7297, size: 64, offset: 192)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1263, file: !1264, line: 971, baseType: !7297, size: 64, offset: 9344)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1263, file: !1264, line: 972, baseType: !7297, size: 64, offset: 9408)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1263, file: !1264, line: 974, baseType: !7297, size: 64, offset: 9472)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1263, file: !1264, line: 975, baseType: !7292, size: 192, offset: 9536)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1263, file: !1264, line: 976, baseType: !130, size: 64, offset: 9728)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1263, file: !1264, line: 977, baseType: !127, size: 64, offset: 9792)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1263, file: !1264, line: 978, baseType: !194, size: 32, offset: 9856)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1263, file: !1264, line: 980, baseType: !176, size: 64, offset: 9920)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1263, file: !1264, line: 989, baseType: !7414, size: 128, offset: 9984)
!7414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !7415, line: 35, size: 128, elements: !7416)
!7415 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!7416 = !{!7417, !7418, !7419}
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7414, file: !7415, line: 36, baseType: !6, size: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !7414, file: !7415, line: 37, baseType: !627, size: 32, offset: 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !7414, file: !7415, line: 38, baseType: !7420, size: 64, offset: 64)
!7420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7421, size: 64)
!7421 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !7415, line: 23, flags: DIFlagFwdDecl)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1263, file: !1264, line: 992, baseType: !230, size: 64, offset: 10112)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1263, file: !1264, line: 993, baseType: !230, size: 64, offset: 10176)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1263, file: !1264, line: 996, baseType: !39, offset: 10240)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1263, file: !1264, line: 999, baseType: !653, offset: 10240)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1263, file: !1264, line: 1001, baseType: !7427, size: 64, offset: 10240)
!7427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1264, line: 636, size: 64, elements: !7428)
!7428 = !{!7429}
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7427, file: !1264, line: 637, baseType: !7430, size: 64)
!7430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7427, size: 64)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1263, file: !1264, line: 1005, baseType: !632, size: 128, offset: 10304)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1263, file: !1264, line: 1007, baseType: !1262, size: 64, offset: 10432)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1263, file: !1264, line: 1009, baseType: !7434, size: 64, offset: 10496)
!7434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7435, size: 64)
!7435 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1264, line: 1009, flags: DIFlagFwdDecl)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1263, file: !1264, line: 1043, baseType: !154, size: 64, offset: 10560)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1263, file: !1264, line: 1046, baseType: !7438, size: 64, offset: 10624)
!7438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7439, size: 64)
!7439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !7440, line: 554, size: 128, elements: !7441)
!7440 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!7441 = !{!7442, !8276}
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7439, file: !7440, line: 555, baseType: !7443, size: 64)
!7443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7444, size: 64)
!7444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !7445, line: 203, size: 832, elements: !7446)
!7445 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!7446 = !{!7447, !7448, !8230, !8231, !8232, !8233, !8234, !8235, !8236, !8237, !8244, !8249, !8250, !8269, !8270, !8271, !8272, !8273, !8275}
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !7444, file: !7445, line: 204, baseType: !7443, size: 64)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !7444, file: !7445, line: 205, baseType: !7449, size: 64, offset: 64)
!7449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7450, size: 64)
!7450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !7451, line: 167, size: 8512, elements: !7452)
!7451 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!7452 = !{!7453, !7454, !7455, !7456, !7457, !7458, !7459, !7516, !7517, !7694, !8212, !8213, !8214, !8215, !8216, !8217, !8220, !8221, !8224, !8225, !8226, !8229}
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !7450, file: !7451, line: 171, baseType: !6, size: 32)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !7450, file: !7451, line: 172, baseType: !6, size: 32, offset: 32)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !7450, file: !7451, line: 173, baseType: !6, size: 32, offset: 64)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !7450, file: !7451, line: 176, baseType: !4267, size: 256, offset: 96)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !7450, file: !7451, line: 178, baseType: !122, size: 16, offset: 352)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !7450, file: !7451, line: 179, baseType: !122, size: 16, offset: 368)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !7450, file: !7451, line: 186, baseType: !7460, size: 64, offset: 384)
!7460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7461, size: 64)
!7461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !7451, line: 149, size: 256, elements: !7462)
!7462 = !{!7463, !7464, !7465, !7514}
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7461, file: !7451, line: 150, baseType: !173, size: 128, align: 64)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7461, file: !7451, line: 151, baseType: !6, size: 32, offset: 128)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !7461, file: !7451, line: 152, baseType: !7466, size: 64, offset: 192)
!7466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7467, size: 64)
!7467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !7451, line: 53, size: 6592, elements: !7468)
!7468 = !{!7469, !7470, !7471, !7472, !7475, !7496, !7497, !7498, !7499, !7500, !7508}
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !7467, file: !7451, line: 54, baseType: !710, size: 64)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !7467, file: !7451, line: 60, baseType: !710, size: 64, offset: 64)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !7467, file: !7451, line: 64, baseType: !130, size: 64, offset: 128)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !7467, file: !7451, line: 65, baseType: !7473, size: 64, offset: 192)
!7473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7474, size: 64)
!7474 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !7451, line: 65, flags: DIFlagFwdDecl)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7467, file: !7451, line: 66, baseType: !7476, size: 128, offset: 256)
!7476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !7477, line: 105, size: 128, elements: !7478)
!7477 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!7478 = !{!7479, !7480}
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !7476, file: !7477, line: 110, baseType: !130, size: 64)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7476, file: !7477, line: 118, baseType: !7481, size: 64, offset: 64)
!7481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7482, size: 64)
!7482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !7477, line: 95, size: 448, elements: !7483)
!7483 = !{!7484, !7485, !7491, !7492, !7493, !7494, !7495}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7482, file: !7477, line: 96, baseType: !557, size: 64)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7482, file: !7477, line: 97, baseType: !7486, size: 64, offset: 64)
!7486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7487, size: 64)
!7487 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !7477, line: 60, baseType: !7488)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{null, !7490}
!7490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7476, size: 64)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !7482, file: !7477, line: 98, baseType: !7486, size: 64, offset: 128)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !7482, file: !7477, line: 99, baseType: !299, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !7482, file: !7477, line: 100, baseType: !299, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7482, file: !7477, line: 101, baseType: !173, size: 128, align: 64, offset: 256)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7482, file: !7477, line: 102, baseType: !7490, size: 64, offset: 384)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !7467, file: !7451, line: 68, baseType: !13, size: 5568, offset: 384)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !7467, file: !7451, line: 69, baseType: !32, size: 64, offset: 5952)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !7467, file: !7451, line: 70, baseType: !6, size: 32, offset: 6016)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !7467, file: !7451, line: 70, baseType: !6, size: 32, offset: 6048)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !7467, file: !7451, line: 71, baseType: !7501, size: 64, offset: 6080)
!7501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7502, size: 64)
!7502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !7451, line: 48, size: 808, elements: !7503)
!7503 = !{!7504, !7506}
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !7502, file: !7451, line: 49, baseType: !7505, size: 296)
!7505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 296, elements: !5369)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !7502, file: !7451, line: 50, baseType: !7507, size: 512, offset: 296)
!7507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 512, elements: !85)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !7467, file: !7451, line: 75, baseType: !7509, size: 448, offset: 6144)
!7509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1724, line: 124, size: 448, elements: !7510)
!7510 = !{!7511, !7512, !7513}
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !7509, file: !1724, line: 125, baseType: !1723, size: 256)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7509, file: !1724, line: 126, baseType: !173, size: 128, align: 64, offset: 256)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7509, file: !1724, line: 129, baseType: !2573, size: 64, offset: 384)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !7461, file: !7451, line: 153, baseType: !7515, offset: 256)
!7515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7466, elements: !2184)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !7450, file: !7451, line: 187, baseType: !7467, size: 6592, offset: 448)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !7450, file: !7451, line: 189, baseType: !7518, size: 64, offset: 7040)
!7518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7519, size: 64)
!7519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7520)
!7520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !7521, line: 1844, size: 960, elements: !7522)
!7521 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!7522 = !{!7523, !7528, !7623, !7627, !7631, !7635, !7636, !7640, !7644, !7648, !7654, !7658, !7684, !7689, !7690}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !7520, file: !7521, line: 1845, baseType: !7524, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7525, size: 64)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{!7527, !7443}
!7527 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !7445, line: 515, baseType: !194)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !7520, file: !7521, line: 1846, baseType: !7529, size: 64, offset: 64)
!7529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7530, size: 64)
!7530 = !DISubroutineType(types: !7531)
!7531 = !{!6, !7532, !7622}
!7532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7533, size: 64)
!7533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !7445, line: 22, size: 1344, elements: !7534)
!7534 = !{!7535, !7536, !7537, !7538, !7539, !7540, !7541, !7542, !7543, !7544, !7545, !7546, !7547, !7548, !7549, !7550, !7551, !7620, !7621}
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !7533, file: !7445, line: 23, baseType: !322, size: 32)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !7533, file: !7445, line: 24, baseType: !6, size: 32, offset: 32)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !7533, file: !7445, line: 25, baseType: !238, size: 64, offset: 64)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !7533, file: !7445, line: 26, baseType: !408, size: 64, offset: 128)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !7533, file: !7445, line: 27, baseType: !553, size: 192, offset: 192)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !7533, file: !7445, line: 28, baseType: !154, size: 64, offset: 384)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !7533, file: !7445, line: 29, baseType: !154, size: 64, offset: 448)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !7533, file: !7445, line: 30, baseType: !6, size: 32, offset: 512)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !7533, file: !7445, line: 31, baseType: !299, size: 8, offset: 544)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !7533, file: !7445, line: 33, baseType: !25, size: 128, offset: 576)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !7533, file: !7445, line: 35, baseType: !7532, size: 64, offset: 704)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !7533, file: !7445, line: 36, baseType: !1398, size: 8, offset: 768)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !7533, file: !7445, line: 37, baseType: !7466, size: 64, offset: 832)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !7533, file: !7445, line: 39, baseType: !194, size: 32, offset: 896)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !7533, file: !7445, line: 41, baseType: !39, offset: 928)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !7533, file: !7445, line: 42, baseType: !7449, size: 64, offset: 960)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !7533, file: !7445, line: 43, baseType: !7552, size: 64, offset: 1024)
!7552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7553, size: 64)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !7554, line: 165, size: 4672, elements: !7555)
!7554 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!7555 = !{!7556, !7557, !7558, !7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7613, !7614, !7615, !7616, !7618, !7619}
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7553, file: !7554, line: 166, baseType: !230, size: 64)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !7553, file: !7554, line: 167, baseType: !640, size: 192, align: 64, offset: 64)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !7553, file: !7554, line: 168, baseType: !25, size: 128, offset: 256)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !7553, file: !7554, line: 169, baseType: !130, size: 64, offset: 384)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !7553, file: !7554, line: 170, baseType: !130, size: 64, offset: 448)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7553, file: !7554, line: 172, baseType: !1551, size: 32, offset: 512)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !7553, file: !7554, line: 173, baseType: !194, size: 32, offset: 544)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !7553, file: !7554, line: 174, baseType: !194, size: 32, offset: 576)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !7553, file: !7554, line: 175, baseType: !194, size: 32, offset: 608)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !7553, file: !7554, line: 175, baseType: !194, size: 32, offset: 640)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !7553, file: !7554, line: 181, baseType: !557, size: 64, offset: 704)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !7553, file: !7554, line: 183, baseType: !7568, size: 2688, offset: 768)
!7568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !7554, line: 107, size: 2688, elements: !7569)
!7569 = !{!7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7588, !7595, !7596, !7608, !7609, !7610, !7611, !7612}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !7568, file: !7554, line: 108, baseType: !7552, size: 64)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7568, file: !7554, line: 110, baseType: !130, size: 64, offset: 64)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !7568, file: !7554, line: 111, baseType: !130, size: 64, offset: 128)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !7568, file: !7554, line: 113, baseType: !25, size: 128, offset: 192)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !7568, file: !7554, line: 114, baseType: !25, size: 128, offset: 320)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !7568, file: !7554, line: 115, baseType: !25, size: 128, offset: 448)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !7568, file: !7554, line: 116, baseType: !25, size: 128, offset: 576)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !7568, file: !7554, line: 117, baseType: !39, offset: 704)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !7568, file: !7554, line: 119, baseType: !7579, size: 256, offset: 704)
!7579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5152, size: 256, elements: !1207)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !7568, file: !7554, line: 121, baseType: !130, size: 64, offset: 960)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !7568, file: !7554, line: 123, baseType: !130, size: 64, offset: 1024)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !7568, file: !7554, line: 124, baseType: !130, size: 64, offset: 1088)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !7568, file: !7554, line: 125, baseType: !130, size: 64, offset: 1152)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !7568, file: !7554, line: 126, baseType: !130, size: 64, offset: 1216)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !7568, file: !7554, line: 127, baseType: !130, size: 64, offset: 1280)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !7568, file: !7554, line: 135, baseType: !130, size: 64, offset: 1344)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !7568, file: !7554, line: 136, baseType: !130, size: 64, offset: 1408)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !7568, file: !7554, line: 138, baseType: !7589, size: 128, offset: 1472)
!7589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !7590, line: 76, size: 128, elements: !7591)
!7590 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!7591 = !{!7592, !7593, !7594}
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !7589, file: !7590, line: 78, baseType: !5152, size: 64)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !7589, file: !7590, line: 80, baseType: !194, size: 32, offset: 64)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7589, file: !7590, line: 81, baseType: !653, offset: 96)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !7568, file: !7554, line: 139, baseType: !6, size: 32, offset: 1600)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !7568, file: !7554, line: 140, baseType: !7597, size: 32, offset: 1632)
!7597 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !7554, line: 49, baseType: !194, size: 32, elements: !7598)
!7598 = !{!7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607}
!7599 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!7600 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!7601 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!7602 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!7603 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!7604 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!7605 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!7606 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!7607 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !7568, file: !7554, line: 142, baseType: !39, offset: 1664)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !7568, file: !7554, line: 143, baseType: !25, size: 128, offset: 1664)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !7568, file: !7554, line: 144, baseType: !2557, size: 704, offset: 1792)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !7568, file: !7554, line: 146, baseType: !130, size: 64, offset: 2496)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !7568, file: !7554, line: 148, baseType: !25, size: 128, offset: 2560)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !7553, file: !7554, line: 184, baseType: !25, size: 128, offset: 3456)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !7553, file: !7554, line: 190, baseType: !807, size: 128, offset: 3584)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7553, file: !7554, line: 192, baseType: !12, size: 64, offset: 3712)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !7553, file: !7554, line: 193, baseType: !7617, size: 512, offset: 3776)
!7617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 512, elements: !85)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7553, file: !7554, line: 194, baseType: !12, size: 64, offset: 4288)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !7553, file: !7554, line: 196, baseType: !2561, size: 320, offset: 4352)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !7533, file: !7445, line: 46, baseType: !6, size: 32, offset: 1088)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !7533, file: !7445, line: 48, baseType: !553, size: 192, offset: 1152)
!7622 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !26, line: 150, baseType: !194)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7520, file: !7521, line: 1847, baseType: !7624, size: 64, offset: 128)
!7624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7625, size: 64)
!7625 = !DISubroutineType(types: !7626)
!7626 = !{null, !7449, !7622}
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !7520, file: !7521, line: 1848, baseType: !7628, size: 64, offset: 192)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 64)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!6, !7532, !710, !600, !194}
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7520, file: !7521, line: 1849, baseType: !7632, size: 64, offset: 256)
!7632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 64)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!6, !7532, !7622, !194, !130}
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !7520, file: !7521, line: 1850, baseType: !7632, size: 64, offset: 320)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !7520, file: !7521, line: 1851, baseType: !7637, size: 64, offset: 384)
!7637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7638, size: 64)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{!194, !7449, !194}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !7520, file: !7521, line: 1853, baseType: !7641, size: 64, offset: 448)
!7641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7642, size: 64)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{null, !7449}
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !7520, file: !7521, line: 1854, baseType: !7645, size: 64, offset: 512)
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7646, size: 64)
!7646 = !DISubroutineType(types: !7647)
!7647 = !{!6, !7449}
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !7520, file: !7521, line: 1855, baseType: !7649, size: 64, offset: 576)
!7649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7650, size: 64)
!7650 = !DISubroutineType(types: !7651)
!7651 = !{!6, !7532, !7652}
!7652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7653, size: 64)
!7653 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !161, line: 51, flags: DIFlagFwdDecl)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !7520, file: !7521, line: 1857, baseType: !7655, size: 64, offset: 640)
!7655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7656, size: 64)
!7656 = !DISubroutineType(types: !7657)
!7657 = !{null, !7532, !130}
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !7520, file: !7521, line: 1858, baseType: !7659, size: 64, offset: 704)
!7659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7660, size: 64)
!7660 = !DISubroutineType(types: !7661)
!7661 = !{!6, !7449, !710, !194, !7662, !154}
!7662 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !7521, line: 354, baseType: !7663)
!7663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7664, size: 64)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!6, !7666, !194, !154}
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 64)
!7667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !7668, line: 106, size: 512, elements: !7669)
!7668 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!7669 = !{!7670, !7671, !7672, !7673, !7674, !7675, !7676, !7677, !7679, !7680}
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7667, file: !7668, line: 107, baseType: !231, size: 64)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7667, file: !7668, line: 108, baseType: !231, size: 64, offset: 64)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !7667, file: !7668, line: 109, baseType: !231, size: 64, offset: 128)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7667, file: !7668, line: 110, baseType: !1399, size: 8, offset: 192)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !7667, file: !7668, line: 111, baseType: !1399, size: 8, offset: 200)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !7667, file: !7668, line: 112, baseType: !1399, size: 8, offset: 208)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !7667, file: !7668, line: 113, baseType: !1399, size: 8, offset: 216)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !7667, file: !7668, line: 114, baseType: !7678, size: 32, offset: 224)
!7678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 32, elements: !1207)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !7667, file: !7668, line: 115, baseType: !231, size: 64, offset: 256)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7667, file: !7668, line: 116, baseType: !7681, size: 192, offset: 320)
!7681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 192, elements: !7682)
!7682 = !{!7683}
!7683 = !DISubrange(count: 24)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !7520, file: !7521, line: 1860, baseType: !7685, size: 64, offset: 768)
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7686, size: 64)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!80, !7449, !7688}
!7688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7520, file: !7521, line: 1861, baseType: !441, size: 64, offset: 832)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !7520, file: !7521, line: 1862, baseType: !7691, size: 64, offset: 896)
!7691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7692, size: 64)
!7692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7693)
!7693 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !7521, line: 41, flags: DIFlagFwdDecl)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !7450, file: !7451, line: 190, baseType: !7695, size: 64, offset: 7104)
!7695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7696, size: 64)
!7696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !7521, line: 399, size: 14464, elements: !7697)
!7697 = !{!7698, !7833, !7962, !7963, !7966, !7969, !7973, !7974, !7975, !7977, !7978, !7979, !7980, !7981, !7982, !7983, !7984, !7985, !7986, !7987, !8023, !8024, !8032, !8033, !8034, !8035, !8036, !8037, !8038, !8041, !8050, !8051, !8052, !8053, !8054, !8089, !8090, !8091, !8092, !8093, !8094, !8097, !8098, !8099, !8100, !8101, !8102, !8103, !8104, !8105, !8167, !8168, !8169, !8170, !8173, !8174, !8207, !8208, !8209, !8210}
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !7696, file: !7521, line: 400, baseType: !7699, size: 64)
!7699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7700, size: 64)
!7700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !7521, line: 130, size: 2176, elements: !7701)
!7701 = !{!7702, !7703, !7706, !7709, !7710, !7712, !7713, !7714, !7715, !7716, !7717, !7718, !7719, !7724, !7731, !7780, !7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7795, !7796, !7797, !7798, !7831, !7832}
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !7700, file: !7521, line: 131, baseType: !7695, size: 64)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !7700, file: !7521, line: 132, baseType: !7704, size: 64, offset: 64)
!7704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7705, size: 64)
!7705 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !7521, line: 132, flags: DIFlagFwdDecl)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !7700, file: !7521, line: 133, baseType: !7707, size: 64, offset: 128)
!7707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7708, size: 64)
!7708 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !7521, line: 133, flags: DIFlagFwdDecl)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !7700, file: !7521, line: 135, baseType: !194, size: 32, offset: 192)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !7700, file: !7521, line: 136, baseType: !7711, size: 32, offset: 224)
!7711 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !7521, line: 66, baseType: !226)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !7700, file: !7521, line: 138, baseType: !6, size: 32, offset: 256)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !7700, file: !7521, line: 139, baseType: !6, size: 32, offset: 288)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !7700, file: !7521, line: 142, baseType: !194, size: 32, offset: 320)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !7700, file: !7521, line: 143, baseType: !710, size: 64, offset: 384)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !7700, file: !7521, line: 145, baseType: !7443, size: 64, offset: 448)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !7700, file: !7521, line: 146, baseType: !7443, size: 64, offset: 512)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !7700, file: !7521, line: 148, baseType: !25, size: 128, offset: 576)
!7719 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !7521, line: 157, baseType: !7720, size: 128, offset: 704)
!7720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !7521, line: 157, size: 128, elements: !7721)
!7721 = !{!7722, !7723}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !7720, file: !7521, line: 158, baseType: !450, size: 128)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !7720, file: !7521, line: 159, baseType: !25, size: 128)
!7724 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !7521, line: 167, baseType: !7725, size: 192, offset: 832)
!7725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !7521, line: 167, size: 192, elements: !7726)
!7726 = !{!7727, !7728, !7729, !7730}
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !7725, file: !7521, line: 168, baseType: !640, size: 192, align: 64)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !7725, file: !7521, line: 169, baseType: !794, size: 128)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !7725, file: !7521, line: 170, baseType: !154, size: 64)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !7725, file: !7521, line: 171, baseType: !6, size: 32)
!7731 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !7521, line: 180, baseType: !7732, size: 256, offset: 1024)
!7732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !7521, line: 180, size: 256, elements: !7733)
!7733 = !{!7734, !7769}
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !7732, file: !7521, line: 184, baseType: !7735, size: 192)
!7735 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7732, file: !7521, line: 181, size: 192, elements: !7736)
!7736 = !{!7737, !7767}
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !7735, file: !7521, line: 182, baseType: !7738, size: 64)
!7738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7739, size: 64)
!7739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !7740, line: 73, size: 448, elements: !7741)
!7740 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!7741 = !{!7742, !7743, !7756, !7761, !7766}
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !7739, file: !7740, line: 74, baseType: !7695, size: 64)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !7739, file: !7740, line: 75, baseType: !7744, size: 64, offset: 64)
!7744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7745, size: 64)
!7745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !7740, line: 99, size: 704, elements: !7746)
!7746 = !{!7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755}
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !7745, file: !7740, line: 100, baseType: !557, size: 64)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !7745, file: !7740, line: 101, baseType: !627, size: 32, offset: 64)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !7745, file: !7740, line: 102, baseType: !627, size: 32, offset: 96)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7745, file: !7740, line: 105, baseType: !39, offset: 128)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !7745, file: !7740, line: 107, baseType: !122, size: 16, offset: 128)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !7745, file: !7740, line: 109, baseType: !618, size: 128, offset: 192)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !7745, file: !7740, line: 110, baseType: !7738, size: 64, offset: 320)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !7745, file: !7740, line: 111, baseType: !446, size: 64, offset: 384)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !7745, file: !7740, line: 113, baseType: !1723, size: 256, offset: 448)
!7756 = !DIDerivedType(tag: DW_TAG_member, scope: !7739, file: !7740, line: 83, baseType: !7757, size: 128, offset: 128)
!7757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7739, file: !7740, line: 83, size: 128, elements: !7758)
!7758 = !{!7759, !7760}
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !7757, file: !7740, line: 84, baseType: !25, size: 128)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !7757, file: !7740, line: 85, baseType: !980, size: 64)
!7761 = !DIDerivedType(tag: DW_TAG_member, scope: !7739, file: !7740, line: 87, baseType: !7762, size: 128, offset: 256)
!7762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7739, file: !7740, line: 87, size: 128, elements: !7763)
!7763 = !{!7764, !7765}
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !7762, file: !7740, line: 88, baseType: !450, size: 128)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !7762, file: !7740, line: 89, baseType: !173, size: 128, align: 64)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7739, file: !7740, line: 92, baseType: !194, size: 32, offset: 384)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7735, file: !7521, line: 183, baseType: !7768, size: 128, offset: 64)
!7768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 128, elements: !1906)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !7732, file: !7521, line: 190, baseType: !7770, size: 256)
!7770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7732, file: !7521, line: 186, size: 256, elements: !7771)
!7771 = !{!7772, !7773, !7774}
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7770, file: !7521, line: 187, baseType: !194, size: 32)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7770, file: !7521, line: 188, baseType: !25, size: 128, offset: 64)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !7770, file: !7521, line: 189, baseType: !7775, size: 64, offset: 192)
!7775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7776, size: 64)
!7776 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !7521, line: 62, baseType: !7777)
!7777 = !DISubroutineType(types: !7778)
!7778 = !{null, !7699, !7779}
!7779 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !7445, line: 58, baseType: !1398)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !7700, file: !7521, line: 193, baseType: !7449, size: 64, offset: 1280)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !7700, file: !7521, line: 194, baseType: !7466, size: 64, offset: 1344)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !7700, file: !7521, line: 200, baseType: !230, size: 64, offset: 1408)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !7700, file: !7521, line: 202, baseType: !230, size: 64, offset: 1472)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !7700, file: !7521, line: 212, baseType: !122, size: 16, offset: 1536)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !7700, file: !7521, line: 218, baseType: !122, size: 16, offset: 1552)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !7700, file: !7521, line: 221, baseType: !122, size: 16, offset: 1568)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !7700, file: !7521, line: 229, baseType: !122, size: 16, offset: 1584)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !7700, file: !7521, line: 230, baseType: !122, size: 16, offset: 1600)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7700, file: !7521, line: 232, baseType: !7790, size: 32, offset: 1632)
!7790 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !7521, line: 118, baseType: !194, size: 32, elements: !7791)
!7791 = !{!7792, !7793, !7794}
!7792 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!7793 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!7794 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7700, file: !7521, line: 233, baseType: !875, size: 32, offset: 1664)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7700, file: !7521, line: 235, baseType: !194, size: 32, offset: 1696)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !7700, file: !7521, line: 236, baseType: !130, size: 64, offset: 1728)
!7798 = !DIDerivedType(tag: DW_TAG_member, scope: !7700, file: !7521, line: 238, baseType: !7799, size: 256, offset: 1792)
!7799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7700, file: !7521, line: 238, size: 256, elements: !7800)
!7800 = !{!7801, !7830}
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !7799, file: !7521, line: 239, baseType: !7802, size: 256)
!7802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !7803, line: 23, size: 256, elements: !7804)
!7803 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!7804 = !{!7805, !7827, !7829}
!7805 = !DIDerivedType(tag: DW_TAG_member, scope: !7802, file: !7803, line: 24, baseType: !7806, size: 128)
!7806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7802, file: !7803, line: 24, size: 128, elements: !7807)
!7807 = !{!7808, !7820}
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7806, file: !7803, line: 25, baseType: !7809, size: 128)
!7809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !7810, line: 58, size: 128, elements: !7811)
!7810 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!7811 = !{!7812, !7813, !7818, !7819}
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !7809, file: !7810, line: 59, baseType: !167, size: 64)
!7813 = !DIDerivedType(tag: DW_TAG_member, scope: !7809, file: !7810, line: 60, baseType: !7814, size: 32, offset: 64)
!7814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7809, file: !7810, line: 60, size: 32, elements: !7815)
!7815 = !{!7816, !7817}
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !7814, file: !7810, line: 61, baseType: !194, size: 32)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !7814, file: !7810, line: 62, baseType: !627, size: 32)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !7809, file: !7810, line: 65, baseType: !739, size: 16, offset: 96)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !7809, file: !7810, line: 65, baseType: !739, size: 16, offset: 112)
!7820 = !DIDerivedType(tag: DW_TAG_member, scope: !7806, file: !7803, line: 26, baseType: !7821, size: 128)
!7821 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7806, file: !7803, line: 26, size: 128, elements: !7822)
!7822 = !{!7823, !7824, !7825, !7826}
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !7821, file: !7803, line: 27, baseType: !167, size: 64)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7821, file: !7803, line: 28, baseType: !194, size: 32, offset: 64)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !7821, file: !7803, line: 30, baseType: !739, size: 16, offset: 96)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !7821, file: !7803, line: 30, baseType: !739, size: 16, offset: 112)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7802, file: !7803, line: 34, baseType: !7828, size: 64, offset: 128)
!7828 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !7803, line: 17, baseType: !277)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !7802, file: !7803, line: 35, baseType: !154, size: 64, offset: 192)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !7799, file: !7521, line: 240, baseType: !230, size: 64)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !7700, file: !7521, line: 246, baseType: !7775, size: 64, offset: 2048)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !7700, file: !7521, line: 247, baseType: !154, size: 64, offset: 2112)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !7696, file: !7521, line: 401, baseType: !7834, size: 64, offset: 64)
!7834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7835, size: 64)
!7835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !7836, line: 101, size: 4992, elements: !7837)
!7836 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!7837 = !{!7838, !7956, !7957, !7958, !7959, !7960}
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7835, file: !7836, line: 103, baseType: !7839, size: 64)
!7839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7840, size: 64)
!7840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !7836, line: 66, size: 2240, elements: !7841)
!7841 = !{!7842, !7843, !7931, !7932, !7933, !7946, !7947, !7948, !7950, !7951, !7955}
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !7840, file: !7836, line: 69, baseType: !980, size: 64)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7840, file: !7836, line: 72, baseType: !7844, size: 1408, offset: 64)
!7844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !7836, line: 29, size: 1408, elements: !7845)
!7845 = !{!7846, !7850, !7854, !7858, !7862, !7866, !7870, !7874, !7879, !7889, !7893, !7899, !7903, !7904, !7908, !7912, !7916, !7920, !7921, !7925, !7926, !7930}
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !7844, file: !7836, line: 30, baseType: !7847, size: 64)
!7847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7848, size: 64)
!7848 = !DISubroutineType(types: !7849)
!7849 = !{!6, !7695, !7839}
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !7844, file: !7836, line: 31, baseType: !7851, size: 64, offset: 64)
!7851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7852, size: 64)
!7852 = !DISubroutineType(types: !7853)
!7853 = !{null, !7834}
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !7844, file: !7836, line: 32, baseType: !7855, size: 64, offset: 128)
!7855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7856, size: 64)
!7856 = !DISubroutineType(types: !7857)
!7857 = !{!6, !7707, !194}
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !7844, file: !7836, line: 33, baseType: !7859, size: 64, offset: 192)
!7859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7860, size: 64)
!7860 = !DISubroutineType(types: !7861)
!7861 = !{null, !7707, !194}
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !7844, file: !7836, line: 34, baseType: !7863, size: 64, offset: 256)
!7863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7864, size: 64)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{null, !7707}
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !7844, file: !7836, line: 36, baseType: !7867, size: 64, offset: 320)
!7867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7868, size: 64)
!7868 = !DISubroutineType(types: !7869)
!7869 = !{!299, !7695, !7699, !7443}
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !7844, file: !7836, line: 37, baseType: !7871, size: 64, offset: 384)
!7871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7872, size: 64)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!299, !7707, !7443, !194}
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !7844, file: !7836, line: 38, baseType: !7875, size: 64, offset: 448)
!7875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7876, size: 64)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!6, !7695, !7878, !7443}
!7878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7699, size: 64)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !7844, file: !7836, line: 39, baseType: !7880, size: 64, offset: 512)
!7880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7881, size: 64)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{null, !7695, !7699, !7883}
!7883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !7836, line: 19, baseType: !194, size: 32, elements: !7884)
!7884 = !{!7885, !7886, !7887, !7888}
!7885 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!7886 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!7887 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!7888 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !7844, file: !7836, line: 40, baseType: !7890, size: 64, offset: 576)
!7890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7891, size: 64)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{null, !7695, !7699, !7699}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !7844, file: !7836, line: 41, baseType: !7894, size: 64, offset: 640)
!7894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7895, size: 64)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{null, !194, !7897}
!7897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7898, size: 64)
!7898 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !7836, line: 26, flags: DIFlagFwdDecl)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !7844, file: !7836, line: 42, baseType: !7900, size: 64, offset: 704)
!7900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7901, size: 64)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{null, !7699}
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !7844, file: !7836, line: 43, baseType: !7900, size: 64, offset: 768)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !7844, file: !7836, line: 44, baseType: !7905, size: 64, offset: 832)
!7905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7906, size: 64)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{null, !7707, !29, !299}
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !7844, file: !7836, line: 45, baseType: !7909, size: 64, offset: 896)
!7909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7910, size: 64)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{!7699, !7707}
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !7844, file: !7836, line: 46, baseType: !7913, size: 64, offset: 960)
!7913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7914, size: 64)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{!299, !7707}
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !7844, file: !7836, line: 47, baseType: !7917, size: 64, offset: 1024)
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7918, size: 64)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{null, !7699, !230}
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !7844, file: !7836, line: 48, baseType: !7900, size: 64, offset: 1088)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !7844, file: !7836, line: 49, baseType: !7922, size: 64, offset: 1152)
!7922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7923, size: 64)
!7923 = !DISubroutineType(types: !7924)
!7924 = !{!7699, !7695, !7699}
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !7844, file: !7836, line: 50, baseType: !7922, size: 64, offset: 1216)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !7844, file: !7836, line: 51, baseType: !7927, size: 64, offset: 1280)
!7927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7928, size: 64)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{null, !7738}
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !7844, file: !7836, line: 52, baseType: !7927, size: 64, offset: 1344)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !7840, file: !7836, line: 74, baseType: !127, size: 64, offset: 1472)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !7840, file: !7836, line: 75, baseType: !127, size: 64, offset: 1536)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !7840, file: !7836, line: 76, baseType: !7934, size: 64, offset: 1600)
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7935, size: 64)
!7935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !7836, line: 57, size: 256, elements: !7936)
!7936 = !{!7937, !7938, !7942}
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7935, file: !7836, line: 58, baseType: !117, size: 128)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !7935, file: !7836, line: 59, baseType: !7939, size: 64, offset: 128)
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7940, size: 64)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!111, !7834, !80}
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !7935, file: !7836, line: 60, baseType: !7943, size: 64, offset: 192)
!7943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7944, size: 64)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!111, !7834, !21, !127}
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !7840, file: !7836, line: 77, baseType: !21, size: 64, offset: 1664)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !7840, file: !7836, line: 78, baseType: !21, size: 64, offset: 1728)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !7840, file: !7836, line: 79, baseType: !7949, size: 32, offset: 1792)
!7949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !7840, file: !7836, line: 80, baseType: !441, size: 64, offset: 1856)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !7840, file: !7836, line: 87, baseType: !7952, size: 176, offset: 1920)
!7952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 176, elements: !7953)
!7953 = !{!7954}
!7954 = !DISubrange(count: 22)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7840, file: !7836, line: 88, baseType: !25, size: 128, offset: 2112)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !7835, file: !7836, line: 104, baseType: !154, size: 64, offset: 64)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7835, file: !7836, line: 105, baseType: !17, size: 512, offset: 128)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !7835, file: !7836, line: 106, baseType: !553, size: 192, offset: 640)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !7835, file: !7836, line: 107, baseType: !194, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !7835, file: !7836, line: 108, baseType: !7961, size: 4096, offset: 896)
!7961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 4096, elements: !85)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !7696, file: !7521, line: 403, baseType: !7476, size: 128, offset: 128)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7696, file: !7521, line: 405, baseType: !7964, size: 64, offset: 256)
!7964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7965, size: 64)
!7965 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !7521, line: 43, flags: DIFlagFwdDecl)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !7696, file: !7521, line: 406, baseType: !7967, size: 64, offset: 320)
!7967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7968, size: 64)
!7968 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !7521, line: 42, flags: DIFlagFwdDecl)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !7696, file: !7521, line: 408, baseType: !7970, size: 64, offset: 384)
!7970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7971, size: 64)
!7971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7972)
!7972 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !7521, line: 408, flags: DIFlagFwdDecl)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !7696, file: !7521, line: 411, baseType: !7704, size: 64, offset: 448)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !7696, file: !7521, line: 413, baseType: !194, size: 32, offset: 512)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !7696, file: !7521, line: 416, baseType: !7976, size: 64, offset: 576)
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7707, size: 64)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !7696, file: !7521, line: 417, baseType: !194, size: 32, offset: 640)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !7696, file: !7521, line: 419, baseType: !7552, size: 64, offset: 704)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !7696, file: !7521, line: 425, baseType: !154, size: 64, offset: 768)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !7696, file: !7521, line: 430, baseType: !130, size: 64, offset: 832)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !7696, file: !7521, line: 436, baseType: !627, size: 32, offset: 896)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7696, file: !7521, line: 442, baseType: !6, size: 32, offset: 928)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !7696, file: !7521, line: 447, baseType: !623, size: 32, offset: 960)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !7696, file: !7521, line: 449, baseType: !39, offset: 992)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7696, file: !7521, line: 454, baseType: !17, size: 512, offset: 1024)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !7696, file: !7521, line: 459, baseType: !32, size: 64, offset: 1536)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !7696, file: !7521, line: 462, baseType: !7988, size: 128, offset: 1600)
!7988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !7451, line: 159, size: 128, elements: !7989)
!7989 = !{!7990, !8019, !8020, !8021, !8022}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !7988, file: !7451, line: 160, baseType: !7991, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 64)
!7992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7993)
!7993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !7521, line: 1664, size: 320, elements: !7994)
!7994 = !{!7995, !8009, !8010, !8013, !8018}
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !7993, file: !7521, line: 1665, baseType: !7996, size: 64)
!7996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7997, size: 64)
!7997 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !7521, line: 1660, baseType: !7998)
!7998 = !DISubroutineType(types: !7999)
!7999 = !{!7779, !8000}
!8000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8001, size: 64)
!8001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !7521, line: 1651, size: 320, elements: !8002)
!8002 = !{!8003, !8004, !8005, !8006, !8007, !8008}
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !8001, file: !7521, line: 1652, baseType: !154, size: 64)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !8001, file: !7521, line: 1653, baseType: !154, size: 64, offset: 64)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !8001, file: !7521, line: 1654, baseType: !710, size: 64, offset: 128)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !8001, file: !7521, line: 1655, baseType: !194, size: 32, offset: 192)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !8001, file: !7521, line: 1656, baseType: !122, size: 16, offset: 224)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !8001, file: !7521, line: 1657, baseType: !21, size: 64, offset: 256)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !7993, file: !7521, line: 1666, baseType: !7996, size: 64, offset: 64)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !7993, file: !7521, line: 1667, baseType: !8011, size: 64, offset: 128)
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8012, size: 64)
!8012 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !7521, line: 1661, baseType: !7901)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !7993, file: !7521, line: 1668, baseType: !8014, size: 64, offset: 192)
!8014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8015, size: 64)
!8015 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !7521, line: 1662, baseType: !8016)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{null, !7699, !194}
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7993, file: !7521, line: 1669, baseType: !21, size: 64, offset: 256)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7988, file: !7451, line: 161, baseType: !236, size: 8, offset: 64)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !7988, file: !7451, line: 162, baseType: !236, size: 8, offset: 72)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !7988, file: !7451, line: 163, baseType: !236, size: 8, offset: 80)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !7988, file: !7451, line: 164, baseType: !236, size: 8, offset: 88)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7696, file: !7521, line: 466, baseType: !12, size: 64, offset: 1728)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !7696, file: !7521, line: 467, baseType: !8025, size: 32, offset: 1792)
!8025 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !8026, line: 502, baseType: !194, size: 32, elements: !8027)
!8026 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!8027 = !{!8028, !8029, !8030, !8031}
!8028 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!8029 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!8030 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!8031 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !7696, file: !7521, line: 468, baseType: !194, size: 32, offset: 1824)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !7696, file: !7521, line: 474, baseType: !130, size: 64, offset: 1856)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !7696, file: !7521, line: 476, baseType: !194, size: 32, offset: 1920)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !7696, file: !7521, line: 477, baseType: !194, size: 32, offset: 1952)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !7696, file: !7521, line: 484, baseType: !194, size: 32, offset: 1984)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !7696, file: !7521, line: 485, baseType: !6, size: 32, offset: 2016)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !7696, file: !7521, line: 487, baseType: !8039, size: 64, offset: 2048)
!8039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8040, size: 64)
!8040 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !7521, line: 44, flags: DIFlagFwdDecl)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !7696, file: !7521, line: 488, baseType: !8042, size: 5120, offset: 2112)
!8042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8043, size: 5120, elements: !1939)
!8043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !7445, line: 540, size: 320, elements: !8044)
!8044 = !{!8045, !8046, !8047, !8048, !8049}
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !8043, file: !7445, line: 541, baseType: !230, size: 64)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !8043, file: !7445, line: 542, baseType: !230, size: 64, offset: 64)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !8043, file: !7445, line: 543, baseType: !230, size: 64, offset: 128)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !8043, file: !7445, line: 544, baseType: !224, size: 32, offset: 192)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !8043, file: !7445, line: 545, baseType: !230, size: 64, offset: 256)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7696, file: !7521, line: 490, baseType: !2561, size: 320, offset: 7232)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !7696, file: !7521, line: 491, baseType: !1723, size: 256, offset: 7552)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !7696, file: !7521, line: 493, baseType: !627, size: 32, offset: 7808)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !7696, file: !7521, line: 495, baseType: !25, size: 128, offset: 7872)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !7696, file: !7521, line: 502, baseType: !8055, size: 896, offset: 8000)
!8055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !7521, line: 321, size: 896, elements: !8056)
!8056 = !{!8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083}
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !8055, file: !7521, line: 322, baseType: !130, size: 64)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !8055, file: !7521, line: 323, baseType: !130, size: 64, offset: 64)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !8055, file: !7521, line: 324, baseType: !130, size: 64, offset: 128)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !8055, file: !7521, line: 326, baseType: !194, size: 32, offset: 192)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !8055, file: !7521, line: 327, baseType: !194, size: 32, offset: 224)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !8055, file: !7521, line: 328, baseType: !194, size: 32, offset: 256)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !8055, file: !7521, line: 329, baseType: !194, size: 32, offset: 288)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !8055, file: !7521, line: 330, baseType: !194, size: 32, offset: 320)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !8055, file: !7521, line: 331, baseType: !194, size: 32, offset: 352)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !8055, file: !7521, line: 332, baseType: !194, size: 32, offset: 384)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !8055, file: !7521, line: 333, baseType: !194, size: 32, offset: 416)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !8055, file: !7521, line: 334, baseType: !194, size: 32, offset: 448)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !8055, file: !7521, line: 335, baseType: !194, size: 32, offset: 480)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !8055, file: !7521, line: 336, baseType: !194, size: 32, offset: 512)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !8055, file: !7521, line: 337, baseType: !194, size: 32, offset: 544)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !8055, file: !7521, line: 338, baseType: !194, size: 32, offset: 576)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !8055, file: !7521, line: 339, baseType: !194, size: 32, offset: 608)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !8055, file: !7521, line: 340, baseType: !194, size: 32, offset: 640)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !8055, file: !7521, line: 341, baseType: !194, size: 32, offset: 672)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !8055, file: !7521, line: 342, baseType: !194, size: 32, offset: 704)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !8055, file: !7521, line: 344, baseType: !122, size: 16, offset: 736)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !8055, file: !7521, line: 345, baseType: !122, size: 16, offset: 752)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !8055, file: !7521, line: 346, baseType: !122, size: 16, offset: 768)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !8055, file: !7521, line: 348, baseType: !236, size: 8, offset: 784)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !8055, file: !7521, line: 349, baseType: !236, size: 8, offset: 792)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !8055, file: !7521, line: 350, baseType: !236, size: 8, offset: 800)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !8055, file: !7521, line: 351, baseType: !8084, size: 32, offset: 832)
!8084 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !7521, line: 315, baseType: !194, size: 32, elements: !8085)
!8085 = !{!8086, !8087, !8088}
!8086 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!8087 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!8088 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !7696, file: !7521, line: 504, baseType: !194, size: 32, offset: 8896)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !7696, file: !7521, line: 534, baseType: !194, size: 32, offset: 8928)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !7696, file: !7521, line: 535, baseType: !194, size: 32, offset: 8960)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7696, file: !7521, line: 536, baseType: !6, size: 32, offset: 8992)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !7696, file: !7521, line: 537, baseType: !553, size: 192, offset: 9024)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !7696, file: !7521, line: 544, baseType: !8095, size: 64, offset: 9216)
!8095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8096, size: 64)
!8096 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !7521, line: 40, flags: DIFlagFwdDecl)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !7696, file: !7521, line: 546, baseType: !25, size: 128, offset: 9280)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !7696, file: !7521, line: 547, baseType: !39, offset: 9408)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !7696, file: !7521, line: 548, baseType: !2557, size: 704, offset: 9408)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !7696, file: !7521, line: 550, baseType: !553, size: 192, offset: 10112)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !7696, file: !7521, line: 551, baseType: !553, size: 192, offset: 10304)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !7696, file: !7521, line: 557, baseType: !25, size: 128, offset: 10496)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !7696, file: !7521, line: 558, baseType: !39, offset: 10624)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !7696, file: !7521, line: 560, baseType: !6, size: 32, offset: 10624)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !7696, file: !7521, line: 563, baseType: !8106, size: 256, offset: 10688)
!8106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !8107, line: 18, size: 256, elements: !8108)
!8107 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!8108 = !{!8109, !8110, !8111, !8112}
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !8106, file: !8107, line: 19, baseType: !12, size: 64)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !8106, file: !8107, line: 20, baseType: !6, size: 32, offset: 64)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !8106, file: !8107, line: 21, baseType: !7695, size: 64, offset: 128)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8106, file: !8107, line: 22, baseType: !8113, size: 64, offset: 192)
!8113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8114, size: 64)
!8114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8115)
!8115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !8107, line: 10, size: 256, elements: !8116)
!8116 = !{!8117, !8158, !8162, !8166}
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !8115, file: !8107, line: 11, baseType: !8118, size: 64)
!8118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8119, size: 64)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!6, !8121}
!8121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8122, size: 64)
!8122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !8123, line: 22, size: 1280, elements: !8124)
!8123 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!8124 = !{!8125, !8126, !8127, !8128, !8129, !8130, !8131, !8132, !8133, !8134, !8135, !8136, !8137, !8138, !8139, !8140, !8141, !8142, !8143, !8144, !8145, !8146, !8147, !8148, !8149, !8150, !8151, !8152, !8153, !8154, !8155, !8156, !8157}
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !8122, file: !8123, line: 23, baseType: !1497, size: 32)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8122, file: !8123, line: 24, baseType: !226, size: 32, offset: 32)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !8122, file: !8123, line: 25, baseType: !226, size: 32, offset: 64)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !8122, file: !8123, line: 28, baseType: !226, size: 32, offset: 96)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !8122, file: !8123, line: 29, baseType: !231, size: 64, offset: 128)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !8122, file: !8123, line: 30, baseType: !231, size: 64, offset: 192)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !8122, file: !8123, line: 31, baseType: !226, size: 32, offset: 256)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !8122, file: !8123, line: 32, baseType: !226, size: 32, offset: 288)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !8122, file: !8123, line: 33, baseType: !226, size: 32, offset: 320)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !8122, file: !8123, line: 34, baseType: !226, size: 32, offset: 352)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !8122, file: !8123, line: 35, baseType: !231, size: 64, offset: 384)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !8122, file: !8123, line: 38, baseType: !226, size: 32, offset: 448)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !8122, file: !8123, line: 40, baseType: !226, size: 32, offset: 480)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !8122, file: !8123, line: 41, baseType: !226, size: 32, offset: 512)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !8122, file: !8123, line: 42, baseType: !226, size: 32, offset: 544)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !8122, file: !8123, line: 43, baseType: !231, size: 64, offset: 576)
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !8122, file: !8123, line: 44, baseType: !231, size: 64, offset: 640)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8122, file: !8123, line: 46, baseType: !226, size: 32, offset: 704)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8122, file: !8123, line: 47, baseType: !226, size: 32, offset: 736)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !8122, file: !8123, line: 48, baseType: !231, size: 64, offset: 768)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !8122, file: !8123, line: 49, baseType: !226, size: 32, offset: 832)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !8122, file: !8123, line: 51, baseType: !226, size: 32, offset: 864)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !8122, file: !8123, line: 52, baseType: !226, size: 32, offset: 896)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !8122, file: !8123, line: 53, baseType: !226, size: 32, offset: 928)
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !8122, file: !8123, line: 54, baseType: !226, size: 32, offset: 960)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8122, file: !8123, line: 55, baseType: !226, size: 32, offset: 992)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !8122, file: !8123, line: 56, baseType: !226, size: 32, offset: 1024)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !8122, file: !8123, line: 57, baseType: !226, size: 32, offset: 1056)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !8122, file: !8123, line: 58, baseType: !1497, size: 32, offset: 1088)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !8122, file: !8123, line: 59, baseType: !1497, size: 32, offset: 1120)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !8122, file: !8123, line: 60, baseType: !231, size: 64, offset: 1152)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !8122, file: !8123, line: 61, baseType: !226, size: 32, offset: 1216)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8122, file: !8123, line: 63, baseType: !226, size: 32, offset: 1248)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !8115, file: !8107, line: 12, baseType: !8159, size: 64, offset: 64)
!8159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8160, size: 64)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!6, !7699, !8121, !7622}
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !8115, file: !8107, line: 14, baseType: !8163, size: 64, offset: 128)
!8163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8164, size: 64)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{!6, !7699, !8121}
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !8115, file: !8107, line: 15, baseType: !7900, size: 64, offset: 192)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7696, file: !7521, line: 570, baseType: !173, size: 128, align: 64, offset: 10944)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !7696, file: !7521, line: 571, baseType: !807, size: 128, offset: 11072)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !7696, file: !7521, line: 576, baseType: !553, size: 192, offset: 11200)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !7696, file: !7521, line: 578, baseType: !8171, size: 64, offset: 11392)
!8171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8172, size: 64)
!8172 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !7521, line: 578, flags: DIFlagFwdDecl)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !7696, file: !7521, line: 579, baseType: !25, size: 128, offset: 11456)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !7696, file: !7521, line: 580, baseType: !8175, size: 2368, offset: 11584)
!8175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !7440, line: 682, size: 2368, elements: !8176)
!8176 = !{!8177, !8178, !8179, !8200, !8201, !8202, !8203, !8204, !8205, !8206}
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !8175, file: !7440, line: 683, baseType: !980, size: 64)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !8175, file: !7440, line: 684, baseType: !194, size: 32, offset: 64)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !8175, file: !7440, line: 686, baseType: !8180, size: 448, offset: 128)
!8180 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !8181, line: 26, baseType: !8182)
!8181 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!8182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !8181, line: 16, size: 448, elements: !8183)
!8183 = !{!8184, !8185, !8186, !8187, !8188, !8189, !8194, !8199}
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8182, file: !8181, line: 17, baseType: !39)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !8182, file: !8181, line: 18, baseType: !6, size: 32)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !8182, file: !8181, line: 19, baseType: !6, size: 32, offset: 32)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !8182, file: !8181, line: 20, baseType: !701, size: 64, offset: 64)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !8182, file: !8181, line: 22, baseType: !154, size: 64, offset: 128)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8182, file: !8181, line: 23, baseType: !8190, size: 64, offset: 192)
!8190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8191, size: 64)
!8191 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !8181, line: 13, baseType: !8192)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!154, !623, !154}
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !8182, file: !8181, line: 24, baseType: !8195, size: 64, offset: 256)
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 64)
!8196 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !8181, line: 14, baseType: !8197)
!8197 = !DISubroutineType(types: !8198)
!8198 = !{null, !154, !154}
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !8182, file: !8181, line: 25, baseType: !807, size: 128, offset: 320)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !8175, file: !7440, line: 687, baseType: !8180, size: 448, offset: 576)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !8175, file: !7440, line: 689, baseType: !8180, size: 448, offset: 1024)
!8202 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !8175, file: !7440, line: 690, baseType: !8180, size: 448, offset: 1472)
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !8175, file: !7440, line: 697, baseType: !39, offset: 1920)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !8175, file: !7440, line: 698, baseType: !7439, size: 128, offset: 1920)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !8175, file: !7440, line: 699, baseType: !1723, size: 256, offset: 2048)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !8175, file: !7440, line: 700, baseType: !2573, size: 64, offset: 2304)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !7696, file: !7521, line: 582, baseType: !190, size: 64, offset: 13952)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !7696, file: !7521, line: 589, baseType: !299, size: 8, offset: 14016)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !7696, file: !7521, line: 591, baseType: !127, size: 64, offset: 14080)
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !7696, file: !7521, line: 594, baseType: !8211, size: 320, offset: 14144)
!8211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 320, elements: !1587)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !7450, file: !7451, line: 191, baseType: !154, size: 64, offset: 7168)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7450, file: !7451, line: 193, baseType: !6, size: 32, offset: 7232)
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7450, file: !7451, line: 194, baseType: !130, size: 64, offset: 7296)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !7450, file: !7451, line: 196, baseType: !647, size: 256, offset: 7360)
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !7450, file: !7451, line: 197, baseType: !32, size: 64, offset: 7616)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !7450, file: !7451, line: 199, baseType: !8218, size: 64, offset: 7680)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 64)
!8219 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !7451, line: 199, flags: DIFlagFwdDecl)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !7450, file: !7451, line: 200, baseType: !627, size: 32, offset: 7744)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !7450, file: !7451, line: 201, baseType: !8222, size: 64, offset: 7808)
!8222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8223, size: 64)
!8223 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !7451, line: 156, flags: DIFlagFwdDecl)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !7450, file: !7451, line: 203, baseType: !17, size: 512, offset: 7872)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !7450, file: !7451, line: 208, baseType: !6, size: 32, offset: 8384)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !7450, file: !7451, line: 209, baseType: !8227, size: 64, offset: 8448)
!8227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8228, size: 64)
!8228 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !7451, line: 157, flags: DIFlagFwdDecl)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !7450, file: !7451, line: 210, baseType: !6946, offset: 8512)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !7444, file: !7445, line: 206, baseType: !194, size: 32, offset: 128)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !7444, file: !7445, line: 210, baseType: !122, size: 16, offset: 160)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !7444, file: !7445, line: 211, baseType: !122, size: 16, offset: 176)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !7444, file: !7445, line: 212, baseType: !122, size: 16, offset: 192)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !7444, file: !7445, line: 213, baseType: !7779, size: 8, offset: 208)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !7444, file: !7445, line: 214, baseType: !1398, size: 8, offset: 216)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !7444, file: !7445, line: 215, baseType: !627, size: 32, offset: 224)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !7444, file: !7445, line: 217, baseType: !8238, size: 192, offset: 256)
!8238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !795, line: 37, size: 192, elements: !8239)
!8239 = !{!8240, !8241, !8242, !8243}
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !8238, file: !795, line: 38, baseType: !710, size: 64)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !8238, file: !795, line: 40, baseType: !194, size: 32, offset: 64)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !8238, file: !795, line: 42, baseType: !194, size: 32, offset: 96)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !8238, file: !795, line: 44, baseType: !194, size: 32, offset: 128)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !7444, file: !7445, line: 219, baseType: !8245, size: 64, offset: 448)
!8245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8246, size: 64)
!8246 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !7445, line: 19, baseType: !8247)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{null, !7443}
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !7444, file: !7445, line: 221, baseType: !154, size: 64, offset: 512)
!8250 = !DIDerivedType(tag: DW_TAG_member, scope: !7444, file: !7445, line: 240, baseType: !8251, size: 64, offset: 576)
!8251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7444, file: !7445, line: 240, size: 64, elements: !8252)
!8252 = !{!8253}
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !8251, file: !7445, line: 242, baseType: !8254, size: 64)
!8254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8255, size: 64)
!8255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !7440, line: 313, size: 832, elements: !8256)
!8256 = !{!8257, !8258, !8259, !8260, !8261, !8262, !8263, !8264, !8265, !8267}
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !8255, file: !7440, line: 314, baseType: !7443, size: 64)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !8255, file: !7440, line: 316, baseType: !8238, size: 192, offset: 64)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !8255, file: !7440, line: 318, baseType: !122, size: 16, offset: 256)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !8255, file: !7440, line: 319, baseType: !122, size: 16, offset: 272)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !8255, file: !7440, line: 320, baseType: !122, size: 16, offset: 288)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !8255, file: !7440, line: 321, baseType: !122, size: 16, offset: 304)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !8255, file: !7440, line: 323, baseType: !8238, size: 192, offset: 320)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !8255, file: !7440, line: 325, baseType: !1723, size: 256, offset: 512)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !8255, file: !7440, line: 327, baseType: !8266, size: 64, offset: 768)
!8266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !8255, file: !7440, line: 328, baseType: !8268, offset: 832)
!8268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !2184)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !7444, file: !7445, line: 246, baseType: !122, size: 16, offset: 640)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !7444, file: !7445, line: 252, baseType: !122, size: 16, offset: 656)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !7444, file: !7445, line: 254, baseType: !627, size: 32, offset: 672)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !7444, file: !7445, line: 256, baseType: !8266, size: 64, offset: 704)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !7444, file: !7445, line: 258, baseType: !8274, size: 64, offset: 768)
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8175, size: 64)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !7444, file: !7445, line: 265, baseType: !8268, offset: 832)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7439, file: !7440, line: 556, baseType: !7443, size: 64, offset: 64)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1263, file: !1264, line: 1050, baseType: !8278, size: 64, offset: 10688)
!8278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8279, size: 64)
!8279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !7521, line: 1236, size: 320, elements: !8280)
!8280 = !{!8281, !8282, !8283, !8284, !8285}
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !8279, file: !7521, line: 1237, baseType: !25, size: 128)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !8279, file: !7521, line: 1238, baseType: !25, size: 128, offset: 128)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !8279, file: !7521, line: 1239, baseType: !122, size: 16, offset: 256)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !8279, file: !7521, line: 1240, baseType: !299, size: 8, offset: 272)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !8279, file: !7521, line: 1241, baseType: !299, size: 8, offset: 280)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1263, file: !1264, line: 1054, baseType: !8287, size: 64, offset: 10752)
!8287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8288, size: 64)
!8288 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1264, line: 55, flags: DIFlagFwdDecl)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1263, file: !1264, line: 1056, baseType: !7552, size: 64, offset: 10816)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1263, file: !1264, line: 1058, baseType: !7744, size: 64, offset: 10880)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1263, file: !1264, line: 1061, baseType: !8292, size: 64, offset: 10944)
!8292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8293, size: 64)
!8293 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1264, line: 43, flags: DIFlagFwdDecl)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1263, file: !1264, line: 1064, baseType: !130, size: 64, offset: 11008)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1263, file: !1264, line: 1065, baseType: !8296, size: 64, offset: 11072)
!8296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8297, size: 64)
!8297 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !7293, line: 14, baseType: !8298)
!8298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !7293, line: 12, size: 384, elements: !8299)
!8299 = !{!8300}
!8300 = !DIDerivedType(tag: DW_TAG_member, scope: !8298, file: !7293, line: 13, baseType: !8301, size: 384)
!8301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8298, file: !7293, line: 13, size: 384, elements: !8302)
!8302 = !{!8303, !8304, !8305, !8306}
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !8301, file: !7293, line: 13, baseType: !6, size: 32)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !8301, file: !7293, line: 13, baseType: !6, size: 32, offset: 32)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !8301, file: !7293, line: 13, baseType: !6, size: 32, offset: 64)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !8301, file: !7293, line: 13, baseType: !8307, size: 256, offset: 128)
!8307 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !8308, line: 32, size: 256, elements: !8309)
!8308 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!8309 = !{!8310, !8315, !8328, !8334, !8343, !8363, !8368}
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !8307, file: !8308, line: 37, baseType: !8311, size: 64)
!8311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8307, file: !8308, line: 34, size: 64, elements: !8312)
!8312 = !{!8313, !8314}
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !8311, file: !8308, line: 35, baseType: !1517, size: 32)
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !8311, file: !8308, line: 36, baseType: !250, size: 32, offset: 32)
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !8307, file: !8308, line: 45, baseType: !8316, size: 192)
!8316 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8307, file: !8308, line: 40, size: 192, elements: !8317)
!8317 = !{!8318, !8320, !8321, !8327}
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !8316, file: !8308, line: 41, baseType: !8319, size: 32)
!8319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !113, line: 95, baseType: !6)
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !8316, file: !8308, line: 42, baseType: !6, size: 32, offset: 32)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !8316, file: !8308, line: 43, baseType: !8322, size: 64, offset: 64)
!8322 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !8308, line: 11, baseType: !8323)
!8323 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !8308, line: 8, size: 64, elements: !8324)
!8324 = !{!8325, !8326}
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !8323, file: !8308, line: 9, baseType: !6, size: 32)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !8323, file: !8308, line: 10, baseType: !154, size: 64)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !8316, file: !8308, line: 44, baseType: !6, size: 32, offset: 128)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !8307, file: !8308, line: 52, baseType: !8329, size: 128)
!8329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8307, file: !8308, line: 48, size: 128, elements: !8330)
!8330 = !{!8331, !8332, !8333}
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !8329, file: !8308, line: 49, baseType: !1517, size: 32)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !8329, file: !8308, line: 50, baseType: !250, size: 32, offset: 32)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !8329, file: !8308, line: 51, baseType: !8322, size: 64, offset: 64)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !8307, file: !8308, line: 61, baseType: !8335, size: 256)
!8335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8307, file: !8308, line: 55, size: 256, elements: !8336)
!8336 = !{!8337, !8338, !8339, !8340, !8342}
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !8335, file: !8308, line: 56, baseType: !1517, size: 32)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !8335, file: !8308, line: 57, baseType: !250, size: 32, offset: 32)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !8335, file: !8308, line: 58, baseType: !6, size: 32, offset: 64)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !8335, file: !8308, line: 59, baseType: !8341, size: 64, offset: 128)
!8341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !113, line: 94, baseType: !114)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !8335, file: !8308, line: 60, baseType: !8341, size: 64, offset: 192)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !8307, file: !8308, line: 95, baseType: !8344, size: 256)
!8344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8307, file: !8308, line: 64, size: 256, elements: !8345)
!8345 = !{!8346, !8347}
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !8344, file: !8308, line: 65, baseType: !154, size: 64)
!8347 = !DIDerivedType(tag: DW_TAG_member, scope: !8344, file: !8308, line: 77, baseType: !8348, size: 192, offset: 64)
!8348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8344, file: !8308, line: 77, size: 192, elements: !8349)
!8349 = !{!8350, !8351, !8358}
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !8348, file: !8308, line: 82, baseType: !1251, size: 16)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !8348, file: !8308, line: 88, baseType: !8352, size: 192)
!8352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8348, file: !8308, line: 84, size: 192, elements: !8353)
!8353 = !{!8354, !8356, !8357}
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !8352, file: !8308, line: 85, baseType: !8355, size: 64)
!8355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 64, elements: !1376)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !8352, file: !8308, line: 86, baseType: !154, size: 64, offset: 64)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !8352, file: !8308, line: 87, baseType: !154, size: 64, offset: 128)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !8348, file: !8308, line: 93, baseType: !8359, size: 96)
!8359 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8348, file: !8308, line: 90, size: 96, elements: !8360)
!8360 = !{!8361, !8362}
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !8359, file: !8308, line: 91, baseType: !8355, size: 64)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !8359, file: !8308, line: 92, baseType: !226, size: 32, offset: 64)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !8307, file: !8308, line: 101, baseType: !8364, size: 128)
!8364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8307, file: !8308, line: 98, size: 128, elements: !8365)
!8365 = !{!8366, !8367}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !8364, file: !8308, line: 99, baseType: !115, size: 64)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !8364, file: !8308, line: 100, baseType: !6, size: 32, offset: 64)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !8307, file: !8308, line: 108, baseType: !8369, size: 128)
!8369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8307, file: !8308, line: 104, size: 128, elements: !8370)
!8370 = !{!8371, !8372, !8373}
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !8369, file: !8308, line: 105, baseType: !154, size: 64)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !8369, file: !8308, line: 106, baseType: !6, size: 32, offset: 64)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !8369, file: !8308, line: 107, baseType: !194, size: 32, offset: 96)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1263, file: !1264, line: 1067, baseType: !7360, offset: 11136)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1263, file: !1264, line: 1099, baseType: !8376, size: 64, offset: 11136)
!8376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8377, size: 64)
!8377 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1264, line: 56, flags: DIFlagFwdDecl)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1263, file: !1264, line: 1103, baseType: !25, size: 128, offset: 11200)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1263, file: !1264, line: 1104, baseType: !8380, size: 64, offset: 11328)
!8380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8381, size: 64)
!8381 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1264, line: 46, flags: DIFlagFwdDecl)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1263, file: !1264, line: 1105, baseType: !553, size: 192, offset: 11392)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1263, file: !1264, line: 1106, baseType: !194, size: 32, offset: 11584)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1263, file: !1264, line: 1109, baseType: !8385, size: 128, offset: 11648)
!8385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8386, size: 128, elements: !1906)
!8386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8387, size: 64)
!8387 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1264, line: 51, flags: DIFlagFwdDecl)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1263, file: !1264, line: 1110, baseType: !553, size: 192, offset: 11776)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1263, file: !1264, line: 1111, baseType: !25, size: 128, offset: 11968)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1263, file: !1264, line: 1173, baseType: !8391, size: 64, offset: 12096)
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 64)
!8392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !8393, line: 62, size: 256, align: 256, elements: !8394)
!8393 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!8394 = !{!8395, !8396, !8397, !8402}
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !8392, file: !8393, line: 75, baseType: !226, size: 32)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !8392, file: !8393, line: 90, baseType: !226, size: 32, offset: 32)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !8392, file: !8393, line: 124, baseType: !8398, size: 64, offset: 64)
!8398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8392, file: !8393, line: 109, size: 64, elements: !8399)
!8399 = !{!8400, !8401}
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !8398, file: !8393, line: 110, baseType: !231, size: 64)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8398, file: !8393, line: 112, baseType: !231, size: 64)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8392, file: !8393, line: 144, baseType: !226, size: 32, offset: 128)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1263, file: !1264, line: 1174, baseType: !224, size: 32, offset: 12160)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1263, file: !1264, line: 1179, baseType: !130, size: 64, offset: 12224)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1263, file: !1264, line: 1182, baseType: !8406, size: 128, offset: 12288)
!8406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1203, line: 76, size: 128, elements: !8407)
!8407 = !{!8408, !8413, !8414}
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8406, file: !1203, line: 85, baseType: !8409, size: 64)
!8409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !8410, line: 7, size: 64, elements: !8411)
!8410 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!8411 = !{!8412}
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !8409, file: !8410, line: 12, baseType: !1413, size: 64)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !8406, file: !1203, line: 88, baseType: !299, size: 8, offset: 64)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !8406, file: !1203, line: 95, baseType: !299, size: 8, offset: 72)
!8415 = !DIDerivedType(tag: DW_TAG_member, scope: !1263, file: !1264, line: 1184, baseType: !8416, size: 128, offset: 12416)
!8416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1263, file: !1264, line: 1184, size: 128, elements: !8417)
!8417 = !{!8418, !8419}
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !8416, file: !1264, line: 1185, baseType: !875, size: 32)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8416, file: !1264, line: 1186, baseType: !173, size: 128, align: 64)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1263, file: !1264, line: 1190, baseType: !801, size: 64, offset: 12544)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1263, file: !1264, line: 1192, baseType: !6507, size: 128, offset: 12608)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1263, file: !1264, line: 1206, baseType: !6, size: 32, offset: 12736)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1263, file: !1264, line: 1207, baseType: !6, size: 32, offset: 12768)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1263, file: !1264, line: 1209, baseType: !130, size: 64, offset: 12800)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1263, file: !1264, line: 1219, baseType: !230, size: 64, offset: 12864)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1263, file: !1264, line: 1220, baseType: !230, size: 64, offset: 12928)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1263, file: !1264, line: 1317, baseType: !6, size: 32, offset: 12992)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1263, file: !1264, line: 1319, baseType: !1262, size: 64, offset: 13056)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1263, file: !1264, line: 1322, baseType: !8430, size: 64, offset: 13120)
!8430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8431, size: 64)
!8431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !8432, line: 56, size: 512, elements: !8433)
!8432 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!8433 = !{!8434, !8435, !8436, !8437, !8438, !8439, !8440, !8442}
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8431, file: !8432, line: 57, baseType: !8430, size: 64)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !8431, file: !8432, line: 58, baseType: !154, size: 64, offset: 64)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8431, file: !8432, line: 59, baseType: !130, size: 64, offset: 128)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8431, file: !8432, line: 60, baseType: !130, size: 64, offset: 192)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !8431, file: !8432, line: 61, baseType: !700, size: 64, offset: 256)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !8431, file: !8432, line: 62, baseType: !194, size: 32, offset: 320)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !8431, file: !8432, line: 63, baseType: !8441, size: 64, offset: 384)
!8441 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !26, line: 153, baseType: !230)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !8431, file: !8432, line: 64, baseType: !2449, size: 64, offset: 448)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1263, file: !1264, line: 1326, baseType: !875, size: 32, offset: 13184)
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1263, file: !1264, line: 1342, baseType: !154, size: 64, offset: 13248)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1263, file: !1264, line: 1343, baseType: !231, size: 64, offset: 13312)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1263, file: !1264, line: 1344, baseType: !230, size: 64, offset: 13376)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1263, file: !1264, line: 1345, baseType: !231, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1263, file: !1264, line: 1346, baseType: !231, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1263, file: !1264, line: 1347, baseType: !231, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1263, file: !1264, line: 1348, baseType: !173, size: 128, align: 64, offset: 13504)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1263, file: !1264, line: 1358, baseType: !8452, size: 34816, offset: 13824)
!8452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !8453, line: 485, size: 34816, elements: !8454)
!8453 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!8454 = !{!8455, !8473, !8474, !8475, !8476, !8477, !8478, !8479, !8480, !8484, !8485, !8486, !8487, !8488, !8489, !8492, !8493, !8494}
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !8452, file: !8453, line: 487, baseType: !8456, size: 192)
!8456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8457, size: 192, elements: !81)
!8457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !8458, line: 16, size: 64, elements: !8459)
!8458 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!8459 = !{!8460, !8461, !8462, !8463, !8464, !8465, !8466, !8467, !8468, !8469, !8470, !8471, !8472}
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !8457, file: !8458, line: 17, baseType: !739, size: 16)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !8457, file: !8458, line: 18, baseType: !739, size: 16, offset: 16)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !8457, file: !8458, line: 19, baseType: !739, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8457, file: !8458, line: 19, baseType: !739, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !8457, file: !8458, line: 19, baseType: !739, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !8457, file: !8458, line: 19, baseType: !739, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !8457, file: !8458, line: 19, baseType: !739, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !8457, file: !8458, line: 20, baseType: !739, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !8457, file: !8458, line: 20, baseType: !739, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !8457, file: !8458, line: 20, baseType: !739, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !8457, file: !8458, line: 20, baseType: !739, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !8457, file: !8458, line: 20, baseType: !739, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !8457, file: !8458, line: 20, baseType: !739, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !8452, file: !8453, line: 491, baseType: !130, size: 64, offset: 192)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !8452, file: !8453, line: 495, baseType: !122, size: 16, offset: 256)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !8452, file: !8453, line: 496, baseType: !122, size: 16, offset: 272)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !8452, file: !8453, line: 497, baseType: !122, size: 16, offset: 288)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !8452, file: !8453, line: 498, baseType: !122, size: 16, offset: 304)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !8452, file: !8453, line: 502, baseType: !130, size: 64, offset: 320)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !8452, file: !8453, line: 503, baseType: !130, size: 64, offset: 384)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !8452, file: !8453, line: 514, baseType: !8481, size: 256, offset: 448)
!8481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8482, size: 256, elements: !1207)
!8482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8483, size: 64)
!8483 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !8453, line: 483, flags: DIFlagFwdDecl)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !8452, file: !8453, line: 516, baseType: !130, size: 64, offset: 704)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !8452, file: !8453, line: 518, baseType: !130, size: 64, offset: 768)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !8452, file: !8453, line: 520, baseType: !130, size: 64, offset: 832)
!8487 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !8452, file: !8453, line: 521, baseType: !130, size: 64, offset: 896)
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !8452, file: !8453, line: 522, baseType: !130, size: 64, offset: 960)
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !8452, file: !8453, line: 528, baseType: !8490, size: 64, offset: 1024)
!8490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8491, size: 64)
!8491 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !8453, line: 10, flags: DIFlagFwdDecl)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !8452, file: !8453, line: 535, baseType: !130, size: 64, offset: 1088)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !8452, file: !8453, line: 537, baseType: !194, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !8452, file: !8453, line: 540, baseType: !8495, size: 33280, offset: 1536)
!8495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !8496, line: 317, size: 33280, elements: !8497)
!8496 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!8497 = !{!8498, !8499, !8500}
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !8495, file: !8496, line: 330, baseType: !194, size: 32)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !8495, file: !8496, line: 337, baseType: !130, size: 64, offset: 64)
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8495, file: !8496, line: 348, baseType: !8501, size: 32768, offset: 512)
!8501 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !8496, line: 304, size: 32768, elements: !8502)
!8502 = !{!8503, !8516, !8551, !8601, !8613}
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !8501, file: !8496, line: 305, baseType: !8504, size: 896)
!8504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !8496, line: 12, size: 896, elements: !8505)
!8505 = !{!8506, !8507, !8508, !8509, !8510, !8511, !8512, !8513, !8515}
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !8504, file: !8496, line: 13, baseType: !224, size: 32)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !8504, file: !8496, line: 14, baseType: !224, size: 32, offset: 32)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !8504, file: !8496, line: 15, baseType: !224, size: 32, offset: 64)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !8504, file: !8496, line: 16, baseType: !224, size: 32, offset: 96)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !8504, file: !8496, line: 17, baseType: !224, size: 32, offset: 128)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !8504, file: !8496, line: 18, baseType: !224, size: 32, offset: 160)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !8504, file: !8496, line: 19, baseType: !224, size: 32, offset: 192)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !8504, file: !8496, line: 22, baseType: !8514, size: 640, offset: 224)
!8514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 640, elements: !2545)
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8504, file: !8496, line: 25, baseType: !224, size: 32, offset: 864)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !8501, file: !8496, line: 306, baseType: !8517, size: 4096, align: 128)
!8517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !8496, line: 34, size: 4096, align: 128, elements: !8518)
!8518 = !{!8519, !8520, !8521, !8522, !8523, !8538, !8539, !8540, !8542, !8544, !8546}
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !8517, file: !8496, line: 35, baseType: !739, size: 16)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !8517, file: !8496, line: 36, baseType: !739, size: 16, offset: 16)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !8517, file: !8496, line: 37, baseType: !739, size: 16, offset: 32)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !8517, file: !8496, line: 38, baseType: !739, size: 16, offset: 48)
!8523 = !DIDerivedType(tag: DW_TAG_member, scope: !8517, file: !8496, line: 39, baseType: !8524, size: 128, offset: 64)
!8524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8517, file: !8496, line: 39, size: 128, elements: !8525)
!8525 = !{!8526, !8531}
!8526 = !DIDerivedType(tag: DW_TAG_member, scope: !8524, file: !8496, line: 40, baseType: !8527, size: 128)
!8527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8524, file: !8496, line: 40, size: 128, elements: !8528)
!8528 = !{!8529, !8530}
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !8527, file: !8496, line: 41, baseType: !230, size: 64)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !8527, file: !8496, line: 42, baseType: !230, size: 64, offset: 64)
!8531 = !DIDerivedType(tag: DW_TAG_member, scope: !8524, file: !8496, line: 44, baseType: !8532, size: 128)
!8532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8524, file: !8496, line: 44, size: 128, elements: !8533)
!8533 = !{!8534, !8535, !8536, !8537}
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !8532, file: !8496, line: 45, baseType: !224, size: 32)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !8532, file: !8496, line: 46, baseType: !224, size: 32, offset: 32)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !8532, file: !8496, line: 47, baseType: !224, size: 32, offset: 64)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !8532, file: !8496, line: 48, baseType: !224, size: 32, offset: 96)
!8538 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !8517, file: !8496, line: 51, baseType: !224, size: 32, offset: 192)
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !8517, file: !8496, line: 52, baseType: !224, size: 32, offset: 224)
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !8517, file: !8496, line: 55, baseType: !8541, size: 1024, offset: 256)
!8541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 1024, elements: !2640)
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !8517, file: !8496, line: 58, baseType: !8543, size: 2048, offset: 1280)
!8543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 2048, elements: !85)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8517, file: !8496, line: 60, baseType: !8545, size: 384, offset: 3328)
!8545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 384, elements: !2649)
!8546 = !DIDerivedType(tag: DW_TAG_member, scope: !8517, file: !8496, line: 62, baseType: !8547, size: 384, offset: 3712)
!8547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8517, file: !8496, line: 62, size: 384, elements: !8548)
!8548 = !{!8549, !8550}
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !8547, file: !8496, line: 63, baseType: !8545, size: 384)
!8550 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !8547, file: !8496, line: 64, baseType: !8545, size: 384)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !8501, file: !8496, line: 307, baseType: !8552, size: 1088)
!8552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !8496, line: 79, size: 1088, elements: !8553)
!8553 = !{!8554, !8555, !8556, !8557, !8558, !8559, !8560, !8561, !8562, !8563, !8564, !8565, !8566, !8567, !8568, !8600}
!8554 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !8552, file: !8496, line: 80, baseType: !224, size: 32)
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !8552, file: !8496, line: 81, baseType: !224, size: 32, offset: 32)
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !8552, file: !8496, line: 82, baseType: !224, size: 32, offset: 64)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !8552, file: !8496, line: 83, baseType: !224, size: 32, offset: 96)
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !8552, file: !8496, line: 84, baseType: !224, size: 32, offset: 128)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !8552, file: !8496, line: 85, baseType: !224, size: 32, offset: 160)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !8552, file: !8496, line: 86, baseType: !224, size: 32, offset: 192)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !8552, file: !8496, line: 88, baseType: !8514, size: 640, offset: 224)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !8552, file: !8496, line: 89, baseType: !1398, size: 8, offset: 864)
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !8552, file: !8496, line: 90, baseType: !1398, size: 8, offset: 872)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !8552, file: !8496, line: 91, baseType: !1398, size: 8, offset: 880)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !8552, file: !8496, line: 92, baseType: !1398, size: 8, offset: 888)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !8552, file: !8496, line: 93, baseType: !1398, size: 8, offset: 896)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !8552, file: !8496, line: 94, baseType: !1398, size: 8, offset: 904)
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8552, file: !8496, line: 95, baseType: !8569, size: 64, offset: 960)
!8569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8570, size: 64)
!8570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !8571, line: 11, size: 128, elements: !8572)
!8571 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!8572 = !{!8573, !8574}
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !8570, file: !8571, line: 12, baseType: !115, size: 64)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !8570, file: !8571, line: 13, baseType: !8575, size: 64, offset: 64)
!8575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8576, size: 64)
!8576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !8577, line: 56, size: 1344, elements: !8578)
!8577 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!8578 = !{!8579, !8580, !8581, !8582, !8583, !8584, !8585, !8586, !8587, !8588, !8589, !8590, !8591, !8592, !8593, !8594, !8595, !8596, !8597, !8598, !8599}
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8576, file: !8577, line: 61, baseType: !130, size: 64)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8576, file: !8577, line: 62, baseType: !130, size: 64, offset: 64)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !8576, file: !8577, line: 63, baseType: !130, size: 64, offset: 128)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8576, file: !8577, line: 64, baseType: !130, size: 64, offset: 192)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !8576, file: !8577, line: 65, baseType: !130, size: 64, offset: 256)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !8576, file: !8577, line: 66, baseType: !130, size: 64, offset: 320)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !8576, file: !8577, line: 68, baseType: !130, size: 64, offset: 384)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !8576, file: !8577, line: 69, baseType: !130, size: 64, offset: 448)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !8576, file: !8577, line: 70, baseType: !130, size: 64, offset: 512)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !8576, file: !8577, line: 71, baseType: !130, size: 64, offset: 576)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !8576, file: !8577, line: 72, baseType: !130, size: 64, offset: 640)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !8576, file: !8577, line: 73, baseType: !130, size: 64, offset: 704)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !8576, file: !8577, line: 74, baseType: !130, size: 64, offset: 768)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !8576, file: !8577, line: 75, baseType: !130, size: 64, offset: 832)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !8576, file: !8577, line: 76, baseType: !130, size: 64, offset: 896)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !8576, file: !8577, line: 81, baseType: !130, size: 64, offset: 960)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8576, file: !8577, line: 83, baseType: !130, size: 64, offset: 1024)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !8576, file: !8577, line: 84, baseType: !130, size: 64, offset: 1088)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8576, file: !8577, line: 85, baseType: !130, size: 64, offset: 1152)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !8576, file: !8577, line: 86, baseType: !130, size: 64, offset: 1216)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !8576, file: !8577, line: 87, baseType: !130, size: 64, offset: 1280)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !8552, file: !8496, line: 96, baseType: !224, size: 32, offset: 1024)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !8501, file: !8496, line: 308, baseType: !8602, size: 4608, align: 512)
!8602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !8496, line: 289, size: 4608, align: 512, elements: !8603)
!8603 = !{!8604, !8605, !8612}
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !8602, file: !8496, line: 290, baseType: !8517, size: 4096, align: 128)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !8602, file: !8496, line: 291, baseType: !8606, size: 512, offset: 4096)
!8606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !8496, line: 268, size: 512, elements: !8607)
!8607 = !{!8608, !8609, !8610}
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !8606, file: !8496, line: 269, baseType: !230, size: 64)
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !8606, file: !8496, line: 270, baseType: !230, size: 64, offset: 64)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8606, file: !8496, line: 271, baseType: !8611, size: 384, offset: 128)
!8611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 384, elements: !1663)
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !8602, file: !8496, line: 292, baseType: !2672, offset: 4608)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !8501, file: !8496, line: 309, baseType: !8614, size: 32768)
!8614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 32768, elements: !8615)
!8615 = !{!8616}
!8616 = !DISubrange(count: 4096)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1259, file: !602, line: 378, baseType: !8618, size: 64, offset: 64)
!8618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1255, file: !602, line: 384, baseType: !1784, size: 192, offset: 192)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1024, file: !602, line: 500, baseType: !39, offset: 6656)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1024, file: !602, line: 501, baseType: !8622, size: 64, offset: 6656)
!8622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8623, size: 64)
!8623 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !602, line: 387, flags: DIFlagFwdDecl)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1024, file: !602, line: 516, baseType: !1569, size: 64, offset: 6720)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1024, file: !602, line: 519, baseType: !159, size: 64, offset: 6784)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1024, file: !602, line: 521, baseType: !8627, size: 64, offset: 6848)
!8627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8628, size: 64)
!8628 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !602, line: 521, flags: DIFlagFwdDecl)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1024, file: !602, line: 545, baseType: !627, size: 32, offset: 6912)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1024, file: !602, line: 548, baseType: !299, size: 8, offset: 6944)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1024, file: !602, line: 550, baseType: !8632, offset: 6952)
!8632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !8633, line: 142, elements: !53)
!8633 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1024, file: !602, line: 554, baseType: !1723, size: 256, offset: 6976)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1024, file: !602, line: 557, baseType: !224, size: 32, offset: 7232)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1021, file: !602, line: 565, baseType: !8637, offset: 7296)
!8637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, elements: !2184)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1017, file: !602, line: 151, baseType: !627, size: 32)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1009, file: !602, line: 156, baseType: !39, offset: 256)
!8640 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !602, line: 159, baseType: !8641, size: 128)
!8641 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !602, line: 159, size: 128, elements: !8642)
!8642 = !{!8643, !8694}
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !8641, file: !602, line: 161, baseType: !8644, size: 64)
!8644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8645, size: 64)
!8645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !8646, line: 110, size: 1152, elements: !8647)
!8646 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!8647 = !{!8648, !8658, !8659, !8660, !8661, !8668, !8669, !8681, !8682, !8683}
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !8645, file: !8646, line: 111, baseType: !8649, size: 384)
!8649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !8646, line: 19, size: 384, elements: !8650)
!8650 = !{!8651, !8653, !8654, !8655, !8656, !8657}
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !8649, file: !8646, line: 20, baseType: !8652, size: 64)
!8652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !8649, file: !8646, line: 21, baseType: !8652, size: 64, offset: 64)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !8649, file: !8646, line: 22, baseType: !8652, size: 64, offset: 128)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !8649, file: !8646, line: 23, baseType: !130, size: 64, offset: 192)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !8649, file: !8646, line: 24, baseType: !130, size: 64, offset: 256)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8649, file: !8646, line: 25, baseType: !130, size: 64, offset: 320)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !8645, file: !8646, line: 112, baseType: !7490, size: 64, offset: 384)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !8645, file: !8646, line: 113, baseType: !7476, size: 128, offset: 448)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8645, file: !8646, line: 114, baseType: !1784, size: 192, offset: 576)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8645, file: !8646, line: 115, baseType: !8662, size: 32, offset: 768)
!8662 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !8646, line: 59, baseType: !194, size: 32, elements: !8663)
!8663 = !{!8664, !8665, !8666, !8667}
!8664 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!8665 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!8666 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!8667 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8645, file: !8646, line: 116, baseType: !194, size: 32, offset: 800)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8645, file: !8646, line: 117, baseType: !8670, size: 64, offset: 832)
!8670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8671, size: 64)
!8671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8672)
!8672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !8646, line: 67, size: 256, elements: !8673)
!8673 = !{!8674, !8675, !8679, !8680}
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !8672, file: !8646, line: 73, baseType: !720, size: 64)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !8672, file: !8646, line: 78, baseType: !8676, size: 64, offset: 64)
!8676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8677, size: 64)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{null, !8644}
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !8672, file: !8646, line: 83, baseType: !8676, size: 64, offset: 128)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !8672, file: !8646, line: 89, baseType: !1074, size: 64, offset: 192)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8645, file: !8646, line: 118, baseType: !154, size: 64, offset: 896)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !8645, file: !8646, line: 119, baseType: !6, size: 32, offset: 960)
!8683 = !DIDerivedType(tag: DW_TAG_member, scope: !8645, file: !8646, line: 120, baseType: !8684, size: 128, offset: 1024)
!8684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8645, file: !8646, line: 120, size: 128, elements: !8685)
!8685 = !{!8686, !8692}
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !8684, file: !8646, line: 121, baseType: !8687, size: 128)
!8687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !8688, line: 6, size: 128, elements: !8689)
!8688 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!8689 = !{!8690, !8691}
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8687, file: !8688, line: 7, baseType: !230, size: 64)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !8687, file: !8688, line: 8, baseType: !230, size: 64, offset: 64)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !8684, file: !8646, line: 122, baseType: !8693)
!8693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8687, elements: !1927)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !8641, file: !602, line: 162, baseType: !154, size: 64, offset: 64)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !606, file: !602, line: 176, baseType: !173, size: 128, align: 64)
!8696 = !DIDerivedType(tag: DW_TAG_member, scope: !601, file: !602, line: 179, baseType: !8697, size: 32, offset: 384)
!8697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !601, file: !602, line: 179, size: 32, elements: !8698)
!8698 = !{!8699, !8700, !8701, !8702}
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !8697, file: !602, line: 184, baseType: !627, size: 32)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !8697, file: !602, line: 192, baseType: !194, size: 32)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !8697, file: !602, line: 194, baseType: !194, size: 32)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !8697, file: !602, line: 195, baseType: !6, size: 32)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !601, file: !602, line: 199, baseType: !627, size: 32, offset: 416)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !468, file: !161, line: 1964, baseType: !8705, size: 64, offset: 1344)
!8705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8706, size: 64)
!8706 = !DISubroutineType(types: !8707)
!8707 = !{!115, !408, !8708}
!8708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8709, size: 64)
!8709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !8710, line: 12, size: 256, elements: !8711)
!8710 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!8711 = !{!8712, !8713, !8714, !8715, !8716}
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !8709, file: !8710, line: 13, baseType: !623, size: 32)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !8709, file: !8710, line: 16, baseType: !6, size: 32, offset: 32)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !8709, file: !8710, line: 23, baseType: !130, size: 64, offset: 64)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !8709, file: !8710, line: 30, baseType: !130, size: 64, offset: 128)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !8709, file: !8710, line: 33, baseType: !6675, size: 64, offset: 192)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !468, file: !161, line: 1966, baseType: !8705, size: 64, offset: 1408)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !409, file: !161, line: 1424, baseType: !8719, size: 64, offset: 448)
!8719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8720, size: 64)
!8720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8721)
!8721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !8722, line: 322, size: 704, elements: !8723)
!8722 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!8723 = !{!8724, !8775, !8779, !8783, !8784, !8785, !8786, !8787, !8792, !8797, !8801}
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !8721, file: !8722, line: 323, baseType: !8725, size: 64)
!8725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8726, size: 64)
!8726 = !DISubroutineType(types: !8727)
!8727 = !{!6, !8728}
!8728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8729, size: 64)
!8729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !8722, line: 294, size: 1600, elements: !8730)
!8730 = !{!8731, !8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8760, !8761, !8762}
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !8729, file: !8722, line: 295, baseType: !450, size: 128)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !8729, file: !8722, line: 296, baseType: !25, size: 128, offset: 128)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !8729, file: !8722, line: 297, baseType: !25, size: 128, offset: 256)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !8729, file: !8722, line: 298, baseType: !25, size: 128, offset: 384)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !8729, file: !8722, line: 299, baseType: !553, size: 192, offset: 512)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !8729, file: !8722, line: 300, baseType: !39, offset: 704)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !8729, file: !8722, line: 301, baseType: !627, size: 32, offset: 704)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !8729, file: !8722, line: 302, baseType: !408, size: 64, offset: 768)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !8729, file: !8722, line: 303, baseType: !8740, size: 64, offset: 832)
!8740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !8722, line: 68, size: 64, elements: !8741)
!8741 = !{!8742, !8754}
!8742 = !DIDerivedType(tag: DW_TAG_member, scope: !8740, file: !8722, line: 69, baseType: !8743, size: 32)
!8743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8740, file: !8722, line: 69, size: 32, elements: !8744)
!8744 = !{!8745, !8746, !8747}
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !8743, file: !8722, line: 70, baseType: !244, size: 32)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !8743, file: !8722, line: 71, baseType: !252, size: 32)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !8743, file: !8722, line: 72, baseType: !8748, size: 32)
!8748 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !8749, line: 24, baseType: !8750)
!8749 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!8750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8749, line: 22, size: 32, elements: !8751)
!8751 = !{!8752}
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !8750, file: !8749, line: 23, baseType: !8753, size: 32)
!8753 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !8749, line: 20, baseType: !250)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8740, file: !8722, line: 74, baseType: !8755, size: 32, offset: 32)
!8755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !8722, line: 54, baseType: !194, size: 32, elements: !8756)
!8756 = !{!8757, !8758, !8759}
!8757 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!8758 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!8759 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !8729, file: !8722, line: 304, baseType: !340, size: 64, offset: 896)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !8729, file: !8722, line: 305, baseType: !130, size: 64, offset: 960)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !8729, file: !8722, line: 306, baseType: !8763, size: 576, offset: 1024)
!8763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !8722, line: 205, size: 576, elements: !8764)
!8764 = !{!8765, !8767, !8768, !8769, !8770, !8771, !8772, !8773, !8774}
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !8763, file: !8722, line: 206, baseType: !8766, size: 64)
!8766 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !8722, line: 66, baseType: !342)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !8763, file: !8722, line: 207, baseType: !8766, size: 64, offset: 64)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !8763, file: !8722, line: 208, baseType: !8766, size: 64, offset: 128)
!8769 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !8763, file: !8722, line: 209, baseType: !8766, size: 64, offset: 192)
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !8763, file: !8722, line: 210, baseType: !8766, size: 64, offset: 256)
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !8763, file: !8722, line: 211, baseType: !8766, size: 64, offset: 320)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !8763, file: !8722, line: 212, baseType: !8766, size: 64, offset: 384)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !8763, file: !8722, line: 213, baseType: !348, size: 64, offset: 448)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !8763, file: !8722, line: 214, baseType: !348, size: 64, offset: 512)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !8721, file: !8722, line: 324, baseType: !8776, size: 64, offset: 64)
!8776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8777, size: 64)
!8777 = !DISubroutineType(types: !8778)
!8778 = !{!8728, !408, !6}
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !8721, file: !8722, line: 325, baseType: !8780, size: 64, offset: 128)
!8780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8781, size: 64)
!8781 = !DISubroutineType(types: !8782)
!8782 = !{null, !8728}
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !8721, file: !8722, line: 326, baseType: !8725, size: 64, offset: 192)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !8721, file: !8722, line: 327, baseType: !8725, size: 64, offset: 256)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !8721, file: !8722, line: 328, baseType: !8725, size: 64, offset: 320)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !8721, file: !8722, line: 329, baseType: !515, size: 64, offset: 384)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !8721, file: !8722, line: 332, baseType: !8788, size: 64, offset: 448)
!8788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8789, size: 64)
!8789 = !DISubroutineType(types: !8790)
!8790 = !{!8791, !238}
!8791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8766, size: 64)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !8721, file: !8722, line: 333, baseType: !8793, size: 64, offset: 512)
!8793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8794, size: 64)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!6, !238, !8796}
!8796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8748, size: 64)
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !8721, file: !8722, line: 335, baseType: !8798, size: 64, offset: 576)
!8798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8799, size: 64)
!8799 = !DISubroutineType(types: !8800)
!8800 = !{!6, !238, !8791}
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !8721, file: !8722, line: 337, baseType: !8802, size: 64, offset: 640)
!8802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8803, size: 64)
!8803 = !DISubroutineType(types: !8804)
!8804 = !{!6, !408, !8805}
!8805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8740, size: 64)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !409, file: !161, line: 1425, baseType: !8807, size: 64, offset: 512)
!8807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8808, size: 64)
!8808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8809)
!8809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !8722, line: 428, size: 704, elements: !8810)
!8810 = !{!8811, !8815, !8816, !8820, !8821, !8822, !8837, !8860, !8864, !8865, !8888}
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !8809, file: !8722, line: 429, baseType: !8812, size: 64)
!8812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8813, size: 64)
!8813 = !DISubroutineType(types: !8814)
!8814 = !{!6, !408, !6, !6, !358}
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !8809, file: !8722, line: 430, baseType: !515, size: 64, offset: 64)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !8809, file: !8722, line: 431, baseType: !8817, size: 64, offset: 128)
!8817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8818, size: 64)
!8818 = !DISubroutineType(types: !8819)
!8819 = !{!6, !408, !194}
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !8809, file: !8722, line: 432, baseType: !8817, size: 64, offset: 192)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !8809, file: !8722, line: 433, baseType: !515, size: 64, offset: 256)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !8809, file: !8722, line: 434, baseType: !8823, size: 64, offset: 320)
!8823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8824, size: 64)
!8824 = !DISubroutineType(types: !8825)
!8825 = !{!6, !408, !6, !8826}
!8826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8827, size: 64)
!8827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !8722, line: 415, size: 256, elements: !8828)
!8828 = !{!8829, !8830, !8831, !8832, !8833, !8834, !8835, !8836}
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !8827, file: !8722, line: 416, baseType: !6, size: 32)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !8827, file: !8722, line: 417, baseType: !194, size: 32, offset: 32)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !8827, file: !8722, line: 418, baseType: !194, size: 32, offset: 64)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !8827, file: !8722, line: 420, baseType: !194, size: 32, offset: 96)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !8827, file: !8722, line: 421, baseType: !194, size: 32, offset: 128)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !8827, file: !8722, line: 422, baseType: !194, size: 32, offset: 160)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !8827, file: !8722, line: 423, baseType: !194, size: 32, offset: 192)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !8827, file: !8722, line: 424, baseType: !194, size: 32, offset: 224)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !8809, file: !8722, line: 435, baseType: !8838, size: 64, offset: 384)
!8838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8839, size: 64)
!8839 = !DISubroutineType(types: !8840)
!8840 = !{!6, !408, !8740, !8841}
!8841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8842, size: 64)
!8842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !8722, line: 343, size: 960, elements: !8843)
!8843 = !{!8844, !8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852, !8853, !8854, !8855, !8856, !8857, !8858, !8859}
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !8842, file: !8722, line: 344, baseType: !6, size: 32)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !8842, file: !8722, line: 345, baseType: !230, size: 64, offset: 64)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !8842, file: !8722, line: 346, baseType: !230, size: 64, offset: 128)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !8842, file: !8722, line: 347, baseType: !230, size: 64, offset: 192)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !8842, file: !8722, line: 348, baseType: !230, size: 64, offset: 256)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !8842, file: !8722, line: 349, baseType: !230, size: 64, offset: 320)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !8842, file: !8722, line: 350, baseType: !230, size: 64, offset: 384)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !8842, file: !8722, line: 351, baseType: !563, size: 64, offset: 448)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !8842, file: !8722, line: 353, baseType: !563, size: 64, offset: 512)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !8842, file: !8722, line: 354, baseType: !6, size: 32, offset: 576)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !8842, file: !8722, line: 355, baseType: !6, size: 32, offset: 608)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !8842, file: !8722, line: 356, baseType: !230, size: 64, offset: 640)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !8842, file: !8722, line: 357, baseType: !230, size: 64, offset: 704)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !8842, file: !8722, line: 358, baseType: !230, size: 64, offset: 768)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !8842, file: !8722, line: 359, baseType: !563, size: 64, offset: 832)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !8842, file: !8722, line: 360, baseType: !6, size: 32, offset: 896)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !8809, file: !8722, line: 436, baseType: !8861, size: 64, offset: 448)
!8861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8862, size: 64)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{!6, !408, !8805, !8841}
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !8809, file: !8722, line: 438, baseType: !8838, size: 64, offset: 512)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !8809, file: !8722, line: 439, baseType: !8866, size: 64, offset: 576)
!8866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8867, size: 64)
!8867 = !DISubroutineType(types: !8868)
!8868 = !{!6, !408, !8869}
!8869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8870, size: 64)
!8870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !8722, line: 409, size: 1408, elements: !8871)
!8871 = !{!8872, !8873}
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !8870, file: !8722, line: 410, baseType: !194, size: 32)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !8870, file: !8722, line: 411, baseType: !8874, size: 1344, offset: 64)
!8874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8875, size: 1344, elements: !81)
!8875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !8722, line: 395, size: 448, elements: !8876)
!8876 = !{!8877, !8878, !8879, !8880, !8881, !8882, !8883, !8884, !8885, !8887}
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8875, file: !8722, line: 396, baseType: !194, size: 32)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !8875, file: !8722, line: 397, baseType: !194, size: 32, offset: 32)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !8875, file: !8722, line: 399, baseType: !194, size: 32, offset: 64)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !8875, file: !8722, line: 400, baseType: !194, size: 32, offset: 96)
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !8875, file: !8722, line: 401, baseType: !194, size: 32, offset: 128)
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !8875, file: !8722, line: 402, baseType: !194, size: 32, offset: 160)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !8875, file: !8722, line: 403, baseType: !194, size: 32, offset: 192)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !8875, file: !8722, line: 404, baseType: !232, size: 64, offset: 256)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !8875, file: !8722, line: 405, baseType: !8886, size: 64, offset: 320)
!8886 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !26, line: 126, baseType: !230)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !8875, file: !8722, line: 406, baseType: !8886, size: 64, offset: 384)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !8809, file: !8722, line: 440, baseType: !8817, size: 64, offset: 640)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !409, file: !161, line: 1426, baseType: !8890, size: 64, offset: 576)
!8890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8891, size: 64)
!8891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8892)
!8892 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !161, line: 49, flags: DIFlagFwdDecl)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !409, file: !161, line: 1427, baseType: !130, size: 64, offset: 640)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !409, file: !161, line: 1428, baseType: !130, size: 64, offset: 704)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !409, file: !161, line: 1429, baseType: !130, size: 64, offset: 768)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !409, file: !161, line: 1430, baseType: !190, size: 64, offset: 832)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !409, file: !161, line: 1431, baseType: !647, size: 256, offset: 896)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !409, file: !161, line: 1432, baseType: !6, size: 32, offset: 1152)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !409, file: !161, line: 1433, baseType: !627, size: 32, offset: 1184)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !409, file: !161, line: 1437, baseType: !8901, size: 64, offset: 1216)
!8901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8902, size: 64)
!8902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8903, size: 64)
!8903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8904)
!8904 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !161, line: 1437, flags: DIFlagFwdDecl)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !409, file: !161, line: 1449, baseType: !8906, size: 64, offset: 1280)
!8906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !207, line: 34, size: 64, elements: !8907)
!8907 = !{!8908}
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !8906, file: !207, line: 35, baseType: !210, size: 64)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !409, file: !161, line: 1450, baseType: !25, size: 128, offset: 1344)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !409, file: !161, line: 1451, baseType: !7532, size: 64, offset: 1472)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !409, file: !161, line: 1452, baseType: !7552, size: 64, offset: 1536)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !409, file: !161, line: 1453, baseType: !8913, size: 64, offset: 1600)
!8913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8914, size: 64)
!8914 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !161, line: 1453, flags: DIFlagFwdDecl)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !409, file: !161, line: 1454, baseType: !450, size: 128, offset: 1664)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !409, file: !161, line: 1455, baseType: !194, size: 32, offset: 1792)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !409, file: !161, line: 1456, baseType: !8918, size: 2432, offset: 1856)
!8918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !8722, line: 518, size: 2432, elements: !8919)
!8919 = !{!8920, !8921, !8922, !8924, !8956}
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8918, file: !8722, line: 519, baseType: !194, size: 32)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !8918, file: !8722, line: 520, baseType: !647, size: 256, offset: 64)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !8918, file: !8722, line: 521, baseType: !8923, size: 192, offset: 320)
!8923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 192, elements: !81)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8918, file: !8722, line: 522, baseType: !8925, size: 1728, offset: 512)
!8925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8926, size: 1728, elements: !81)
!8926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !8722, line: 222, size: 576, elements: !8927)
!8927 = !{!8928, !8948, !8949, !8950, !8951, !8952, !8953, !8954, !8955}
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !8926, file: !8722, line: 223, baseType: !8929, size: 64)
!8929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8930, size: 64)
!8930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !8722, line: 443, size: 256, elements: !8931)
!8931 = !{!8932, !8933, !8946, !8947}
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !8930, file: !8722, line: 444, baseType: !6, size: 32)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !8930, file: !8722, line: 445, baseType: !8934, size: 64, offset: 64)
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8935, size: 64)
!8935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8936)
!8936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !8722, line: 310, size: 512, elements: !8937)
!8937 = !{!8938, !8939, !8940, !8941, !8942, !8943, !8944, !8945}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !8936, file: !8722, line: 311, baseType: !515, size: 64)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !8936, file: !8722, line: 312, baseType: !515, size: 64, offset: 64)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !8936, file: !8722, line: 313, baseType: !515, size: 64, offset: 128)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !8936, file: !8722, line: 314, baseType: !515, size: 64, offset: 192)
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !8936, file: !8722, line: 315, baseType: !8725, size: 64, offset: 256)
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !8936, file: !8722, line: 316, baseType: !8725, size: 64, offset: 320)
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !8936, file: !8722, line: 317, baseType: !8725, size: 64, offset: 384)
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !8936, file: !8722, line: 318, baseType: !8802, size: 64, offset: 448)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !8930, file: !8722, line: 446, baseType: !441, size: 64, offset: 128)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !8930, file: !8722, line: 447, baseType: !8929, size: 64, offset: 192)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !8926, file: !8722, line: 224, baseType: !6, size: 32, offset: 64)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !8926, file: !8722, line: 226, baseType: !25, size: 128, offset: 128)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !8926, file: !8722, line: 227, baseType: !130, size: 64, offset: 256)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !8926, file: !8722, line: 228, baseType: !194, size: 32, offset: 320)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !8926, file: !8722, line: 229, baseType: !194, size: 32, offset: 352)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !8926, file: !8722, line: 230, baseType: !8766, size: 64, offset: 384)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !8926, file: !8722, line: 231, baseType: !8766, size: 64, offset: 448)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !8926, file: !8722, line: 232, baseType: !154, size: 64, offset: 512)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8918, file: !8722, line: 523, baseType: !8957, size: 192, offset: 2240)
!8957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8934, size: 192, elements: !81)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !409, file: !161, line: 1458, baseType: !8959, size: 2112, offset: 4288)
!8959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !161, line: 1410, size: 2112, elements: !8960)
!8960 = !{!8961, !8962, !8963}
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !8959, file: !161, line: 1411, baseType: !6, size: 32)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !8959, file: !161, line: 1412, baseType: !807, size: 128, offset: 64)
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !8959, file: !161, line: 1413, baseType: !8964, size: 1920, offset: 192)
!8964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8965, size: 1920, elements: !81)
!8965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !8966, line: 12, size: 640, elements: !8967)
!8966 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!8967 = !{!8968, !8976, !8978, !8983, !8984}
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !8965, file: !8966, line: 13, baseType: !8969, size: 320)
!8969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !8970, line: 17, size: 320, elements: !8971)
!8970 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!8971 = !{!8972, !8973, !8974, !8975}
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !8969, file: !8970, line: 18, baseType: !6, size: 32)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !8969, file: !8970, line: 19, baseType: !6, size: 32, offset: 32)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !8969, file: !8970, line: 20, baseType: !807, size: 128, offset: 64)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !8969, file: !8970, line: 22, baseType: !173, size: 128, align: 64, offset: 192)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !8965, file: !8966, line: 14, baseType: !8977, size: 64, offset: 320)
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !8965, file: !8966, line: 15, baseType: !8979, size: 64, offset: 384)
!8979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !8980, line: 16, size: 64, elements: !8981)
!8980 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!8981 = !{!8982}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !8979, file: !8980, line: 17, baseType: !1262, size: 64)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !8965, file: !8966, line: 16, baseType: !807, size: 128, offset: 448)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !8965, file: !8966, line: 17, baseType: !627, size: 32, offset: 576)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !409, file: !161, line: 1465, baseType: !154, size: 64, offset: 6400)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !409, file: !161, line: 1468, baseType: !224, size: 32, offset: 6464)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !409, file: !161, line: 1470, baseType: !348, size: 64, offset: 6528)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !409, file: !161, line: 1471, baseType: !348, size: 64, offset: 6592)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !409, file: !161, line: 1473, baseType: !226, size: 32, offset: 6656)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !409, file: !161, line: 1474, baseType: !8991, size: 64, offset: 6720)
!8991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8992, size: 64)
!8992 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !161, line: 603, flags: DIFlagFwdDecl)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !409, file: !161, line: 1477, baseType: !4267, size: 256, offset: 6784)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !409, file: !161, line: 1478, baseType: !8995, size: 128, offset: 7040)
!8995 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !8996, line: 18, baseType: !8997)
!8996 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!8997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8996, line: 16, size: 128, elements: !8998)
!8998 = !{!8999}
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !8997, file: !8996, line: 17, baseType: !4885, size: 128)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !409, file: !161, line: 1480, baseType: !194, size: 32, offset: 7168)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !409, file: !161, line: 1481, baseType: !7622, size: 32, offset: 7200)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !409, file: !161, line: 1487, baseType: !553, size: 192, offset: 7232)
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !409, file: !161, line: 1493, baseType: !21, size: 64, offset: 7424)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !409, file: !161, line: 1495, baseType: !9005, size: 64, offset: 7488)
!9005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9006, size: 64)
!9006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9007)
!9007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !188, line: 135, size: 1024, align: 512, elements: !9008)
!9008 = !{!9009, !9013, !9014, !9021, !9027, !9031, !9035, !9039, !9040, !9044, !9048, !9053, !9057}
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !9007, file: !188, line: 136, baseType: !9010, size: 64)
!9010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9011, size: 64)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{!6, !190, !194}
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !9007, file: !188, line: 137, baseType: !9010, size: 64, offset: 64)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !9007, file: !188, line: 138, baseType: !9015, size: 64, offset: 128)
!9015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 64)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{!6, !9018, !9020}
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9019, size: 64)
!9019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!9020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !9007, file: !188, line: 139, baseType: !9022, size: 64, offset: 192)
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9023, size: 64)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!6, !9018, !194, !21, !9025}
!9025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9026, size: 64)
!9026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !9007, file: !188, line: 141, baseType: !9028, size: 64, offset: 256)
!9028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9029, size: 64)
!9029 = !DISubroutineType(types: !9030)
!9030 = !{!6, !9018}
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !9007, file: !188, line: 142, baseType: !9032, size: 64, offset: 320)
!9032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9033, size: 64)
!9033 = !DISubroutineType(types: !9034)
!9034 = !{!6, !190}
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !9007, file: !188, line: 143, baseType: !9036, size: 64, offset: 384)
!9036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9037, size: 64)
!9037 = !DISubroutineType(types: !9038)
!9038 = !{null, !190}
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !9007, file: !188, line: 144, baseType: !9036, size: 64, offset: 448)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !9007, file: !188, line: 145, baseType: !9041, size: 64, offset: 512)
!9041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9042, size: 64)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{null, !190, !238}
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !9007, file: !188, line: 146, baseType: !9045, size: 64, offset: 576)
!9045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9046, size: 64)
!9046 = !DISubroutineType(types: !9047)
!9047 = !{!80, !190, !80, !6}
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !9007, file: !188, line: 147, baseType: !9049, size: 64, offset: 640)
!9049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9050, size: 64)
!9050 = !DISubroutineType(types: !9051)
!9051 = !{!186, !9052}
!9052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !9007, file: !188, line: 148, baseType: !9054, size: 64, offset: 704)
!9054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9055, size: 64)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{!6, !358, !299}
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !9007, file: !188, line: 149, baseType: !9058, size: 64, offset: 768)
!9058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9059, size: 64)
!9059 = !DISubroutineType(types: !9060)
!9060 = !{!190, !190, !9061}
!9061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9062, size: 64)
!9062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !409, file: !161, line: 1500, baseType: !6, size: 32, offset: 7552)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !409, file: !161, line: 1502, baseType: !9065, size: 448, offset: 7616)
!9065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !8710, line: 60, size: 448, elements: !9066)
!9066 = !{!9067, !9072, !9073, !9074, !9075, !9076, !9077}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !9065, file: !8710, line: 61, baseType: !9068, size: 64)
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 64)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{!130, !9071, !8708}
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9065, size: 64)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !9065, file: !8710, line: 63, baseType: !9068, size: 64, offset: 64)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !9065, file: !8710, line: 66, baseType: !115, size: 64, offset: 128)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !9065, file: !8710, line: 67, baseType: !6, size: 32, offset: 192)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9065, file: !8710, line: 68, baseType: !194, size: 32, offset: 224)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9065, file: !8710, line: 71, baseType: !25, size: 128, offset: 256)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !9065, file: !8710, line: 77, baseType: !6274, size: 64, offset: 384)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !409, file: !161, line: 1505, baseType: !557, size: 64, offset: 8064)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !409, file: !161, line: 1508, baseType: !557, size: 64, offset: 8128)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !409, file: !161, line: 1511, baseType: !6, size: 32, offset: 8192)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !409, file: !161, line: 1514, baseType: !954, size: 32, offset: 8224)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !409, file: !161, line: 1517, baseType: !2573, size: 64, offset: 8256)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !409, file: !161, line: 1518, baseType: !446, size: 64, offset: 8320)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !409, file: !161, line: 1525, baseType: !1569, size: 64, offset: 8384)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !409, file: !161, line: 1532, baseType: !9086, size: 64, offset: 8448)
!9086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !9087, line: 52, size: 64, elements: !9088)
!9087 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!9088 = !{!9089}
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9086, file: !9087, line: 53, baseType: !9090, size: 64)
!9090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9091, size: 64)
!9091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !9087, line: 40, size: 256, elements: !9092)
!9092 = !{!9093, !9094, !9099}
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9091, file: !9087, line: 42, baseType: !39)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !9091, file: !9087, line: 44, baseType: !9095, size: 192)
!9095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !9087, line: 28, size: 192, elements: !9096)
!9096 = !{!9097, !9098}
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9095, file: !9087, line: 29, baseType: !25, size: 128)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !9095, file: !9087, line: 31, baseType: !115, size: 64, offset: 128)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !9091, file: !9087, line: 49, baseType: !115, size: 64, offset: 192)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !409, file: !161, line: 1533, baseType: !9086, size: 64, offset: 8512)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !409, file: !161, line: 1534, baseType: !173, size: 128, align: 64, offset: 8576)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !409, file: !161, line: 1535, baseType: !1723, size: 256, offset: 8704)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !409, file: !161, line: 1537, baseType: !553, size: 192, offset: 8960)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !409, file: !161, line: 1542, baseType: !6, size: 32, offset: 9152)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !409, file: !161, line: 1545, baseType: !39, offset: 9184)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !409, file: !161, line: 1546, baseType: !25, size: 128, offset: 9216)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !409, file: !161, line: 1548, baseType: !39, offset: 9344)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !409, file: !161, line: 1549, baseType: !25, size: 128, offset: 9344)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !239, file: !161, line: 624, baseType: !613, size: 64, offset: 256)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !239, file: !161, line: 631, baseType: !130, size: 64, offset: 320)
!9111 = !DIDerivedType(tag: DW_TAG_member, scope: !239, file: !161, line: 639, baseType: !9112, size: 32, offset: 384)
!9112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !239, file: !161, line: 639, size: 32, elements: !9113)
!9113 = !{!9114, !9115}
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !9112, file: !161, line: 640, baseType: !7949, size: 32)
!9115 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !9112, file: !161, line: 641, baseType: !194, size: 32)
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !239, file: !161, line: 643, baseType: !322, size: 32, offset: 416)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !239, file: !161, line: 644, baseType: !340, size: 64, offset: 448)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !239, file: !161, line: 645, baseType: !344, size: 128, offset: 512)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !239, file: !161, line: 646, baseType: !344, size: 128, offset: 640)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !239, file: !161, line: 647, baseType: !344, size: 128, offset: 768)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !239, file: !161, line: 648, baseType: !39, offset: 896)
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !239, file: !161, line: 649, baseType: !122, size: 16, offset: 896)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !239, file: !161, line: 650, baseType: !1398, size: 8, offset: 912)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !239, file: !161, line: 651, baseType: !1398, size: 8, offset: 920)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !239, file: !161, line: 652, baseType: !8886, size: 64, offset: 960)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !239, file: !161, line: 659, baseType: !130, size: 64, offset: 1024)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !239, file: !161, line: 660, baseType: !647, size: 256, offset: 1088)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !239, file: !161, line: 662, baseType: !130, size: 64, offset: 1344)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !239, file: !161, line: 663, baseType: !130, size: 64, offset: 1408)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !239, file: !161, line: 665, baseType: !450, size: 128, offset: 1472)
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !239, file: !161, line: 666, baseType: !25, size: 128, offset: 1600)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !239, file: !161, line: 675, baseType: !25, size: 128, offset: 1728)
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !239, file: !161, line: 676, baseType: !25, size: 128, offset: 1856)
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !239, file: !161, line: 677, baseType: !25, size: 128, offset: 1984)
!9135 = !DIDerivedType(tag: DW_TAG_member, scope: !239, file: !161, line: 678, baseType: !9136, size: 128, offset: 2112)
!9136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !239, file: !161, line: 678, size: 128, elements: !9137)
!9137 = !{!9138, !9139}
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !9136, file: !161, line: 679, baseType: !446, size: 64)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !9136, file: !161, line: 680, baseType: !173, size: 128, align: 64)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !239, file: !161, line: 682, baseType: !559, size: 64, offset: 2240)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !239, file: !161, line: 683, baseType: !559, size: 64, offset: 2304)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !239, file: !161, line: 684, baseType: !627, size: 32, offset: 2368)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !239, file: !161, line: 685, baseType: !627, size: 32, offset: 2400)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !239, file: !161, line: 686, baseType: !627, size: 32, offset: 2432)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !239, file: !161, line: 688, baseType: !627, size: 32, offset: 2464)
!9146 = !DIDerivedType(tag: DW_TAG_member, scope: !239, file: !161, line: 690, baseType: !9147, size: 64, offset: 2496)
!9147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !239, file: !161, line: 690, size: 64, elements: !9148)
!9148 = !{!9149, !9351}
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !9147, file: !161, line: 691, baseType: !9150, size: 64)
!9150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9151, size: 64)
!9151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9152)
!9152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !161, line: 1822, size: 2048, elements: !9153)
!9153 = !{!9154, !9155, !9159, !9163, !9167, !9168, !9169, !9173, !9186, !9187, !9191, !9195, !9196, !9200, !9201, !9205, !9210, !9211, !9215, !9219, !9311, !9315, !9316, !9320, !9321, !9325, !9329, !9334, !9338, !9342, !9346, !9350}
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9152, file: !161, line: 1823, baseType: !441, size: 64)
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !9152, file: !161, line: 1824, baseType: !9156, size: 64, offset: 64)
!9156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9157, size: 64)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{!340, !159, !340, !6}
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9152, file: !161, line: 1825, baseType: !9160, size: 64, offset: 128)
!9160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9161, size: 64)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{!111, !159, !80, !127, !575}
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9152, file: !161, line: 1826, baseType: !9164, size: 64, offset: 192)
!9164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9165, size: 64)
!9165 = !DISubroutineType(types: !9166)
!9166 = !{!111, !159, !21, !127, !575}
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !9152, file: !161, line: 1827, baseType: !724, size: 64, offset: 256)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !9152, file: !161, line: 1828, baseType: !724, size: 64, offset: 320)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !9152, file: !161, line: 1829, baseType: !9170, size: 64, offset: 384)
!9170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9171, size: 64)
!9171 = !DISubroutineType(types: !9172)
!9172 = !{!6, !727, !299}
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !9152, file: !161, line: 1830, baseType: !9174, size: 64, offset: 448)
!9174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9175, size: 64)
!9175 = !DISubroutineType(types: !9176)
!9176 = !{!6, !159, !9177}
!9177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9178, size: 64)
!9178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !161, line: 1776, size: 128, elements: !9179)
!9179 = !{!9180, !9185}
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !9178, file: !161, line: 1777, baseType: !9181, size: 64)
!9181 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !161, line: 1773, baseType: !9182)
!9182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9183, size: 64)
!9183 = !DISubroutineType(types: !9184)
!9184 = !{!6, !9177, !21, !6, !340, !230, !194}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !9178, file: !161, line: 1778, baseType: !340, size: 64, offset: 64)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !9152, file: !161, line: 1831, baseType: !9174, size: 64, offset: 512)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9152, file: !161, line: 1832, baseType: !9188, size: 64, offset: 576)
!9188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9189, size: 64)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{!3580, !159, !3581}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !9152, file: !161, line: 1833, baseType: !9192, size: 64, offset: 640)
!9192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9193, size: 64)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!115, !159, !194, !130}
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !9152, file: !161, line: 1834, baseType: !9192, size: 64, offset: 704)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !9152, file: !161, line: 1835, baseType: !9197, size: 64, offset: 768)
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9198, size: 64)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{!6, !159, !1027}
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !9152, file: !161, line: 1836, baseType: !130, size: 64, offset: 832)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !9152, file: !161, line: 1837, baseType: !9202, size: 64, offset: 896)
!9202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9203, size: 64)
!9203 = !DISubroutineType(types: !9204)
!9204 = !{!6, !238, !159}
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !9152, file: !161, line: 1838, baseType: !9206, size: 64, offset: 960)
!9206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9207, size: 64)
!9207 = !DISubroutineType(types: !9208)
!9208 = !{!6, !159, !9209}
!9209 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !161, line: 1007, baseType: !154)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9152, file: !161, line: 1839, baseType: !9202, size: 64, offset: 1024)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !9152, file: !161, line: 1840, baseType: !9212, size: 64, offset: 1088)
!9212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9213, size: 64)
!9213 = !DISubroutineType(types: !9214)
!9214 = !{!6, !159, !340, !340, !6}
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !9152, file: !161, line: 1841, baseType: !9216, size: 64, offset: 1152)
!9216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9217, size: 64)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{!6, !6, !159, !6}
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9152, file: !161, line: 1842, baseType: !9220, size: 64, offset: 1216)
!9220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9221, size: 64)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!6, !159, !6, !9223}
!9223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9224, size: 64)
!9224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !161, line: 1062, size: 1664, elements: !9225)
!9225 = !{!9226, !9227, !9228, !9229, !9230, !9231, !9232, !9233, !9234, !9235, !9236, !9237, !9238, !9239, !9240, !9241, !9242, !9243, !9256, !9287}
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !9224, file: !161, line: 1063, baseType: !9223, size: 64)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !9224, file: !161, line: 1064, baseType: !25, size: 128, offset: 64)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !9224, file: !161, line: 1065, baseType: !450, size: 128, offset: 192)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !9224, file: !161, line: 1066, baseType: !25, size: 128, offset: 320)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !9224, file: !161, line: 1069, baseType: !25, size: 128, offset: 448)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !9224, file: !161, line: 1072, baseType: !9209, size: 64, offset: 576)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !9224, file: !161, line: 1073, baseType: !194, size: 32, offset: 640)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !9224, file: !161, line: 1074, baseType: !236, size: 8, offset: 672)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !9224, file: !161, line: 1075, baseType: !194, size: 32, offset: 704)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !9224, file: !161, line: 1076, baseType: !6, size: 32, offset: 736)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !9224, file: !161, line: 1077, baseType: !807, size: 128, offset: 768)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !9224, file: !161, line: 1078, baseType: !159, size: 64, offset: 896)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !9224, file: !161, line: 1079, baseType: !340, size: 64, offset: 960)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !9224, file: !161, line: 1080, baseType: !340, size: 64, offset: 1024)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !9224, file: !161, line: 1082, baseType: !825, size: 64, offset: 1088)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !9224, file: !161, line: 1084, baseType: !130, size: 64, offset: 1152)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !9224, file: !161, line: 1085, baseType: !130, size: 64, offset: 1216)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !9224, file: !161, line: 1087, baseType: !9244, size: 64, offset: 1280)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9245, size: 64)
!9245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9246)
!9246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !161, line: 1011, size: 128, elements: !9247)
!9247 = !{!9248, !9252}
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !9246, file: !161, line: 1012, baseType: !9249, size: 64)
!9249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9250, size: 64)
!9250 = !DISubroutineType(types: !9251)
!9251 = !{null, !9223, !9223}
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !9246, file: !161, line: 1013, baseType: !9253, size: 64, offset: 64)
!9253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9254, size: 64)
!9254 = !DISubroutineType(types: !9255)
!9255 = !{null, !9223}
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !9224, file: !161, line: 1088, baseType: !9257, size: 64, offset: 1344)
!9257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9258, size: 64)
!9258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9259)
!9259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !161, line: 1016, size: 512, elements: !9260)
!9260 = !{!9261, !9265, !9269, !9270, !9274, !9278, !9282, !9286}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !9259, file: !161, line: 1017, baseType: !9262, size: 64)
!9262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9263, size: 64)
!9263 = !DISubroutineType(types: !9264)
!9264 = !{!9209, !9209}
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !9259, file: !161, line: 1018, baseType: !9266, size: 64, offset: 64)
!9266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9267, size: 64)
!9267 = !DISubroutineType(types: !9268)
!9268 = !{null, !9209}
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !9259, file: !161, line: 1019, baseType: !9253, size: 64, offset: 128)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !9259, file: !161, line: 1020, baseType: !9271, size: 64, offset: 192)
!9271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9272, size: 64)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{!6, !9223, !6}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !9259, file: !161, line: 1021, baseType: !9275, size: 64, offset: 256)
!9275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9276, size: 64)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{!299, !9223}
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !9259, file: !161, line: 1022, baseType: !9279, size: 64, offset: 320)
!9279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9280, size: 64)
!9280 = !DISubroutineType(types: !9281)
!9281 = !{!6, !9223, !6, !29}
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !9259, file: !161, line: 1023, baseType: !9283, size: 64, offset: 384)
!9283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9284, size: 64)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{null, !9223, !701}
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !9259, file: !161, line: 1024, baseType: !9275, size: 64, offset: 448)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !9224, file: !161, line: 1097, baseType: !9288, size: 256, offset: 1408)
!9288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9224, file: !161, line: 1089, size: 256, elements: !9289)
!9289 = !{!9290, !9299, !9305}
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !9288, file: !161, line: 1090, baseType: !9291, size: 256)
!9291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !9292, line: 10, size: 256, elements: !9293)
!9292 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!9293 = !{!9294, !9295, !9298}
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9291, file: !9292, line: 11, baseType: !224, size: 32)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9291, file: !9292, line: 12, baseType: !9296, size: 64, offset: 64)
!9296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9297, size: 64)
!9297 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !9292, line: 5, flags: DIFlagFwdDecl)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9291, file: !9292, line: 13, baseType: !25, size: 128, offset: 128)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !9288, file: !161, line: 1091, baseType: !9300, size: 64)
!9300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !9292, line: 17, size: 64, elements: !9301)
!9301 = !{!9302}
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9300, file: !9292, line: 18, baseType: !9303, size: 64)
!9303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9304, size: 64)
!9304 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !9292, line: 16, flags: DIFlagFwdDecl)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !9288, file: !161, line: 1096, baseType: !9306, size: 192)
!9306 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9288, file: !161, line: 1092, size: 192, elements: !9307)
!9307 = !{!9308, !9309, !9310}
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9306, file: !161, line: 1093, baseType: !25, size: 128)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9306, file: !161, line: 1094, baseType: !6, size: 32, offset: 128)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !9306, file: !161, line: 1095, baseType: !194, size: 32, offset: 160)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !9152, file: !161, line: 1843, baseType: !9312, size: 64, offset: 1280)
!9312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9313, size: 64)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!111, !159, !600, !6, !127, !575, !6}
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !9152, file: !161, line: 1844, baseType: !1153, size: 64, offset: 1344)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !9152, file: !161, line: 1845, baseType: !9317, size: 64, offset: 1408)
!9317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9318, size: 64)
!9318 = !DISubroutineType(types: !9319)
!9319 = !{!6, !6}
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !9152, file: !161, line: 1846, baseType: !9220, size: 64, offset: 1472)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !9152, file: !161, line: 1847, baseType: !9322, size: 64, offset: 1536)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 64)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!111, !801, !159, !575, !127, !194}
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !9152, file: !161, line: 1848, baseType: !9326, size: 64, offset: 1600)
!9326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9327, size: 64)
!9327 = !DISubroutineType(types: !9328)
!9328 = !{!111, !159, !575, !801, !127, !194}
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !9152, file: !161, line: 1849, baseType: !9330, size: 64, offset: 1664)
!9330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9331, size: 64)
!9331 = !DISubroutineType(types: !9332)
!9332 = !{!6, !159, !115, !9333, !701}
!9333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9223, size: 64)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !9152, file: !161, line: 1850, baseType: !9335, size: 64, offset: 1728)
!9335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9336, size: 64)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!115, !159, !6, !340, !340}
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !9152, file: !161, line: 1852, baseType: !9339, size: 64, offset: 1792)
!9339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9340, size: 64)
!9340 = !DISubroutineType(types: !9341)
!9341 = !{null, !541, !159}
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !9152, file: !161, line: 1856, baseType: !9343, size: 64, offset: 1856)
!9343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9344, size: 64)
!9344 = !DISubroutineType(types: !9345)
!9345 = !{!111, !159, !340, !159, !340, !127, !194}
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !9152, file: !161, line: 1858, baseType: !9347, size: 64, offset: 1920)
!9347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9348, size: 64)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{!340, !159, !340, !159, !340, !340, !194}
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !9152, file: !161, line: 1861, baseType: !9212, size: 64, offset: 1984)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !9147, file: !161, line: 692, baseType: !475, size: 64)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !239, file: !161, line: 694, baseType: !9353, size: 64, offset: 2560)
!9353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9354, size: 64)
!9354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !161, line: 1100, size: 384, elements: !9355)
!9355 = !{!9356, !9357, !9358, !9359}
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !9354, file: !161, line: 1101, baseType: !39)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !9354, file: !161, line: 1102, baseType: !25, size: 128)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !9354, file: !161, line: 1103, baseType: !25, size: 128, offset: 128)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !9354, file: !161, line: 1104, baseType: !25, size: 128, offset: 256)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !239, file: !161, line: 695, baseType: !614, size: 1216, align: 64, offset: 2624)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !239, file: !161, line: 696, baseType: !25, size: 128, offset: 3840)
!9362 = !DIDerivedType(tag: DW_TAG_member, scope: !239, file: !161, line: 697, baseType: !9363, size: 64, offset: 3968)
!9363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !239, file: !161, line: 697, size: 64, elements: !9364)
!9364 = !{!9365, !9366, !9367, !9378, !9379}
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !9363, file: !161, line: 698, baseType: !801, size: 64)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !9363, file: !161, line: 699, baseType: !7532, size: 64)
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !9363, file: !161, line: 700, baseType: !9368, size: 64)
!9368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9369, size: 64)
!9369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !9370, line: 14, size: 832, elements: !9371)
!9370 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!9371 = !{!9372, !9373, !9374, !9375, !9376, !9377}
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9369, file: !9370, line: 15, baseType: !17, size: 512)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9369, file: !9370, line: 16, baseType: !441, size: 64, offset: 512)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9369, file: !9370, line: 17, baseType: !9150, size: 64, offset: 576)
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9369, file: !9370, line: 18, baseType: !25, size: 128, offset: 640)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9369, file: !9370, line: 19, baseType: !322, size: 32, offset: 768)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9369, file: !9370, line: 20, baseType: !194, size: 32, offset: 800)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !9363, file: !161, line: 701, baseType: !80, size: 64)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !9363, file: !161, line: 702, baseType: !194, size: 32)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !239, file: !161, line: 705, baseType: !226, size: 32, offset: 4032)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !239, file: !161, line: 708, baseType: !226, size: 32, offset: 4064)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !239, file: !161, line: 709, baseType: !8991, size: 64, offset: 4096)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !239, file: !161, line: 720, baseType: !154, size: 64, offset: 4160)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !191, file: !188, line: 98, baseType: !2639, size: 256, offset: 448)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !191, file: !188, line: 101, baseType: !9386, size: 32, offset: 704)
!9386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !9387, line: 25, size: 32, elements: !9388)
!9387 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!9388 = !{!9389}
!9389 = !DIDerivedType(tag: DW_TAG_member, scope: !9386, file: !9387, line: 26, baseType: !9390, size: 32)
!9390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9386, file: !9387, line: 26, size: 32, elements: !9391)
!9391 = !{!9392}
!9392 = !DIDerivedType(tag: DW_TAG_member, scope: !9390, file: !9387, line: 30, baseType: !9393, size: 32)
!9393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9390, file: !9387, line: 30, size: 32, elements: !9394)
!9394 = !{!9395, !9396}
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9393, file: !9387, line: 31, baseType: !39)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9393, file: !9387, line: 32, baseType: !6, size: 32)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !191, file: !188, line: 102, baseType: !9005, size: 64, offset: 768)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !191, file: !188, line: 103, baseType: !408, size: 64, offset: 832)
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !191, file: !188, line: 104, baseType: !130, size: 64, offset: 896)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !191, file: !188, line: 105, baseType: !154, size: 64, offset: 960)
!9401 = !DIDerivedType(tag: DW_TAG_member, scope: !191, file: !188, line: 107, baseType: !9402, size: 128, offset: 1024)
!9402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !191, file: !188, line: 107, size: 128, elements: !9403)
!9403 = !{!9404, !9405}
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !9402, file: !188, line: 108, baseType: !25, size: 128)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !9402, file: !188, line: 109, baseType: !3590, size: 64)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !191, file: !188, line: 111, baseType: !25, size: 128, offset: 1152)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !191, file: !188, line: 112, baseType: !25, size: 128, offset: 1280)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !191, file: !188, line: 120, baseType: !9409, size: 128, offset: 1408)
!9409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !191, file: !188, line: 116, size: 128, elements: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !9409, file: !188, line: 117, baseType: !450, size: 128)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !9409, file: !188, line: 118, baseType: !206, size: 128)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !9409, file: !188, line: 119, baseType: !173, size: 128, align: 64)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !160, file: !161, line: 922, baseType: !238, size: 64, offset: 256)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !160, file: !161, line: 923, baseType: !9150, size: 64, offset: 320)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !160, file: !161, line: 929, baseType: !39, offset: 384)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !160, file: !161, line: 930, baseType: !9418, size: 32, offset: 384)
!9418 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !161, line: 296, baseType: !194, size: 32, elements: !9419)
!9419 = !{!9420, !9421, !9422, !9423, !9424, !9425}
!9420 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!9421 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!9422 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!9423 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!9424 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!9425 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !160, file: !161, line: 931, baseType: !557, size: 64, offset: 448)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !160, file: !161, line: 932, baseType: !194, size: 32, offset: 512)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !160, file: !161, line: 933, baseType: !7622, size: 32, offset: 544)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !160, file: !161, line: 934, baseType: !553, size: 192, offset: 576)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !160, file: !161, line: 935, baseType: !340, size: 64, offset: 768)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !160, file: !161, line: 936, baseType: !9432, size: 192, offset: 832)
!9432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !161, line: 885, size: 192, elements: !9433)
!9433 = !{!9434, !9435, !9436, !9444, !9445, !9446}
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9432, file: !161, line: 886, baseType: !829)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !9432, file: !161, line: 887, baseType: !1528, size: 64)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !9432, file: !161, line: 888, baseType: !9437, size: 32, offset: 64)
!9437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1530, line: 9, baseType: !194, size: 32, elements: !9438)
!9438 = !{!9439, !9440, !9441, !9442, !9443}
!9439 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!9440 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!9441 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!9442 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!9443 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !9432, file: !161, line: 889, baseType: !244, size: 32, offset: 96)
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !9432, file: !161, line: 889, baseType: !244, size: 32, offset: 128)
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !9432, file: !161, line: 890, baseType: !6, size: 32, offset: 160)
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !160, file: !161, line: 937, baseType: !1884, size: 64, offset: 1024)
!9448 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !160, file: !161, line: 938, baseType: !9449, size: 256, offset: 1088)
!9449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !161, line: 896, size: 256, elements: !9450)
!9450 = !{!9451, !9452, !9453, !9454, !9455, !9456}
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9449, file: !161, line: 897, baseType: !130, size: 64)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9449, file: !161, line: 898, baseType: !194, size: 32, offset: 64)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !9449, file: !161, line: 899, baseType: !194, size: 32, offset: 96)
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !9449, file: !161, line: 902, baseType: !194, size: 32, offset: 128)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !9449, file: !161, line: 903, baseType: !194, size: 32, offset: 160)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !9449, file: !161, line: 904, baseType: !340, size: 64, offset: 192)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !160, file: !161, line: 940, baseType: !230, size: 64, offset: 1344)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !160, file: !161, line: 945, baseType: !154, size: 64, offset: 1408)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !160, file: !161, line: 949, baseType: !25, size: 128, offset: 1472)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !160, file: !161, line: 950, baseType: !25, size: 128, offset: 1600)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !160, file: !161, line: 952, baseType: !613, size: 64, offset: 1728)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !160, file: !161, line: 953, baseType: !954, size: 32, offset: 1792)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !160, file: !161, line: 954, baseType: !954, size: 32, offset: 1824)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !149, file: !105, line: 174, baseType: !156, size: 64, offset: 320)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !149, file: !105, line: 176, baseType: !9466, size: 64, offset: 384)
!9466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9467, size: 64)
!9467 = !DISubroutineType(types: !9468)
!9468 = !{!6, !159, !32, !148, !1027}
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !137, file: !105, line: 90, baseType: !132, size: 64, offset: 192)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !137, file: !105, line: 91, baseType: !9471, size: 64, offset: 256)
!9471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !95, file: !18, line: 143, baseType: !9473, size: 64, offset: 256)
!9473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9474, size: 64)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!9476, !32}
!9476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9477, size: 64)
!9477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9478)
!9478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !9479, line: 39, size: 384, elements: !9480)
!9479 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!9480 = !{!9481, !9487, !9491, !9495, !9499, !9503}
!9481 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9478, file: !9479, line: 40, baseType: !9482, size: 32)
!9482 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !9479, line: 26, baseType: !194, size: 32, elements: !9483)
!9483 = !{!9484, !9485, !9486}
!9484 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!9485 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!9486 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !9478, file: !9479, line: 41, baseType: !9488, size: 64, offset: 64)
!9488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9489, size: 64)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!299}
!9491 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !9478, file: !9479, line: 42, baseType: !9492, size: 64, offset: 128)
!9492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9493, size: 64)
!9493 = !DISubroutineType(types: !9494)
!9494 = !{!154}
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !9478, file: !9479, line: 43, baseType: !9496, size: 64, offset: 192)
!9496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9497, size: 64)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{!2449, !1998}
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !9478, file: !9479, line: 44, baseType: !9500, size: 64, offset: 256)
!9500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9501, size: 64)
!9501 = !DISubroutineType(types: !9502)
!9502 = !{!2449}
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !9478, file: !9479, line: 45, baseType: !277, size: 64, offset: 320)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !95, file: !18, line: 144, baseType: !9505, size: 64, offset: 320)
!9505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9506, size: 64)
!9506 = !DISubroutineType(types: !9507)
!9507 = !{!2449, !32}
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !95, file: !18, line: 145, baseType: !9509, size: 64, offset: 384)
!9509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9510, size: 64)
!9510 = !DISubroutineType(types: !9511)
!9511 = !{null, !32, !1809, !1810}
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !17, file: !18, line: 70, baseType: !9513, size: 64, offset: 384)
!9513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9514, size: 64)
!9514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !9515, line: 123, size: 1024, elements: !9516)
!9515 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!9516 = !{!9517, !9518, !9519, !9520, !9521, !9522, !9523, !9524, !9627, !9628, !9629, !9630, !9631}
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9514, file: !9515, line: 124, baseType: !627, size: 32)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !9514, file: !9515, line: 125, baseType: !627, size: 32, offset: 32)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9514, file: !9515, line: 135, baseType: !9513, size: 64, offset: 64)
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9514, file: !9515, line: 136, baseType: !21, size: 64, offset: 128)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !9514, file: !9515, line: 138, baseType: !640, size: 192, align: 64, offset: 192)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !9514, file: !9515, line: 140, baseType: !2449, size: 64, offset: 384)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !9514, file: !9515, line: 141, baseType: !194, size: 32, offset: 448)
!9524 = !DIDerivedType(tag: DW_TAG_member, scope: !9514, file: !9515, line: 142, baseType: !9525, size: 256, offset: 512)
!9525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9514, file: !9515, line: 142, size: 256, elements: !9526)
!9526 = !{!9527, !9567, !9571}
!9527 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !9525, file: !9515, line: 143, baseType: !9528, size: 192)
!9528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !9515, line: 91, size: 192, elements: !9529)
!9529 = !{!9530, !9531, !9532}
!9530 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !9528, file: !9515, line: 92, baseType: !130, size: 64)
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9528, file: !9515, line: 94, baseType: !636, size: 64, offset: 64)
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9528, file: !9515, line: 100, baseType: !9533, size: 64, offset: 128)
!9533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9534, size: 64)
!9534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !9515, line: 180, size: 704, elements: !9535)
!9535 = !{!9536, !9537, !9538, !9539, !9540, !9541, !9565, !9566}
!9536 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !9534, file: !9515, line: 182, baseType: !9513, size: 64)
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9534, file: !9515, line: 183, baseType: !194, size: 32, offset: 64)
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !9534, file: !9515, line: 186, baseType: !1556, size: 192, offset: 128)
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !9534, file: !9515, line: 187, baseType: !224, size: 32, offset: 320)
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !9534, file: !9515, line: 188, baseType: !224, size: 32, offset: 352)
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !9534, file: !9515, line: 189, baseType: !9542, size: 64, offset: 384)
!9542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9543, size: 64)
!9543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !9515, line: 168, size: 320, elements: !9544)
!9544 = !{!9545, !9549, !9553, !9557, !9561}
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !9543, file: !9515, line: 169, baseType: !9546, size: 64)
!9546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9547, size: 64)
!9547 = !DISubroutineType(types: !9548)
!9548 = !{!6, !541, !9533}
!9549 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !9543, file: !9515, line: 171, baseType: !9550, size: 64, offset: 64)
!9550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9551, size: 64)
!9551 = !DISubroutineType(types: !9552)
!9552 = !{!6, !9513, !21, !121}
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !9543, file: !9515, line: 173, baseType: !9554, size: 64, offset: 128)
!9554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9555, size: 64)
!9555 = !DISubroutineType(types: !9556)
!9556 = !{!6, !9513}
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !9543, file: !9515, line: 174, baseType: !9558, size: 64, offset: 192)
!9558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9559, size: 64)
!9559 = !DISubroutineType(types: !9560)
!9560 = !{!6, !9513, !9513, !21}
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !9543, file: !9515, line: 176, baseType: !9562, size: 64, offset: 256)
!9562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9563, size: 64)
!9563 = !DISubroutineType(types: !9564)
!9564 = !{!6, !541, !9513, !9533}
!9565 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !9534, file: !9515, line: 192, baseType: !25, size: 128, offset: 448)
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !9534, file: !9515, line: 194, baseType: !807, size: 128, offset: 576)
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !9525, file: !9515, line: 144, baseType: !9568, size: 64)
!9568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !9515, line: 103, size: 64, elements: !9569)
!9569 = !{!9570}
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !9568, file: !9515, line: 104, baseType: !9513, size: 64)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9525, file: !9515, line: 145, baseType: !9572, size: 256)
!9572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !9515, line: 107, size: 256, elements: !9573)
!9573 = !{!9574, !9622, !9625, !9626}
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9572, file: !9515, line: 108, baseType: !9575, size: 64)
!9575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9576, size: 64)
!9576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9577)
!9577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !9515, line: 217, size: 768, elements: !9578)
!9578 = !{!9579, !9599, !9603, !9604, !9605, !9606, !9607, !9611, !9612, !9613, !9614, !9618}
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !9577, file: !9515, line: 222, baseType: !9580, size: 64)
!9580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9581, size: 64)
!9581 = !DISubroutineType(types: !9582)
!9582 = !{!6, !9583}
!9583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9584, size: 64)
!9584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !9515, line: 197, size: 1088, elements: !9585)
!9585 = !{!9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593, !9594, !9595, !9596, !9597, !9598}
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !9584, file: !9515, line: 199, baseType: !9513, size: 64)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !9584, file: !9515, line: 200, baseType: !159, size: 64, offset: 64)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !9584, file: !9515, line: 201, baseType: !541, size: 64, offset: 128)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9584, file: !9515, line: 202, baseType: !154, size: 64, offset: 192)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9584, file: !9515, line: 205, baseType: !553, size: 192, offset: 256)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !9584, file: !9515, line: 206, baseType: !553, size: 192, offset: 448)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !9584, file: !9515, line: 207, baseType: !6, size: 32, offset: 640)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9584, file: !9515, line: 208, baseType: !25, size: 128, offset: 704)
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !9584, file: !9515, line: 209, baseType: !80, size: 64, offset: 832)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !9584, file: !9515, line: 211, baseType: !127, size: 64, offset: 896)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !9584, file: !9515, line: 212, baseType: !299, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !9584, file: !9515, line: 213, baseType: !299, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !9584, file: !9515, line: 214, baseType: !1055, size: 64, offset: 1024)
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9577, file: !9515, line: 223, baseType: !9600, size: 64, offset: 64)
!9600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9601, size: 64)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{null, !9583}
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !9577, file: !9515, line: 236, baseType: !585, size: 64, offset: 128)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !9577, file: !9515, line: 238, baseType: !572, size: 64, offset: 192)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !9577, file: !9515, line: 239, baseType: !581, size: 64, offset: 256)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !9577, file: !9515, line: 240, baseType: !577, size: 64, offset: 320)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9577, file: !9515, line: 242, baseType: !9608, size: 64, offset: 384)
!9608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9609, size: 64)
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!111, !9583, !80, !127, !340}
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !9577, file: !9515, line: 252, baseType: !127, size: 64, offset: 448)
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !9577, file: !9515, line: 259, baseType: !299, size: 8, offset: 512)
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9577, file: !9515, line: 260, baseType: !9608, size: 64, offset: 576)
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9577, file: !9515, line: 263, baseType: !9615, size: 64, offset: 640)
!9615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9616, size: 64)
!9616 = !DISubroutineType(types: !9617)
!9617 = !{!3580, !9583, !3581}
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !9577, file: !9515, line: 266, baseType: !9619, size: 64, offset: 704)
!9619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9620, size: 64)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{!6, !9583, !1027}
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !9572, file: !9515, line: 109, baseType: !9623, size: 64, offset: 64)
!9623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9624, size: 64)
!9624 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !9515, line: 31, flags: DIFlagFwdDecl)
!9625 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9572, file: !9515, line: 110, baseType: !340, size: 64, offset: 128)
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !9572, file: !9515, line: 111, baseType: !9513, size: 64, offset: 192)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9514, file: !9515, line: 148, baseType: !154, size: 64, offset: 768)
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9514, file: !9515, line: 154, baseType: !230, size: 64, offset: 832)
!9629 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9514, file: !9515, line: 156, baseType: !122, size: 16, offset: 896)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9514, file: !9515, line: 157, baseType: !121, size: 16, offset: 912)
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !9514, file: !9515, line: 158, baseType: !9632, size: 64, offset: 960)
!9632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9633, size: 64)
!9633 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !9515, line: 32, flags: DIFlagFwdDecl)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !17, file: !18, line: 71, baseType: !1551, size: 32, offset: 448)
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !17, file: !18, line: 75, baseType: !194, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !17, file: !18, line: 76, baseType: !194, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !17, file: !18, line: 77, baseType: !194, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !17, file: !18, line: 78, baseType: !194, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !17, file: !18, line: 79, baseType: !194, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !13, file: !14, line: 463, baseType: !12, size: 64, offset: 512)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !13, file: !14, line: 465, baseType: !9642, size: 64, offset: 576)
!9642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9643, size: 64)
!9643 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !14, line: 36, flags: DIFlagFwdDecl)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13, file: !14, line: 467, baseType: !21, size: 64, offset: 640)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13, file: !14, line: 468, baseType: !9646, size: 64, offset: 704)
!9646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9647, size: 64)
!9647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9648)
!9648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !14, line: 87, size: 384, elements: !9649)
!9649 = !{!9650, !9651, !9652, !9656, !9660, !9664}
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9648, file: !14, line: 88, baseType: !21, size: 64)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !9648, file: !14, line: 89, baseType: !134, size: 64, offset: 64)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !9648, file: !14, line: 90, baseType: !9653, size: 64, offset: 128)
!9653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9654, size: 64)
!9654 = !DISubroutineType(types: !9655)
!9655 = !{!6, !12, !75}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !9648, file: !14, line: 91, baseType: !9657, size: 64, offset: 192)
!9657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9658, size: 64)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!80, !12, !7688, !1809, !1810}
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9648, file: !14, line: 93, baseType: !9661, size: 64, offset: 256)
!9661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9662, size: 64)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{null, !12}
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !9648, file: !14, line: 95, baseType: !9665, size: 64, offset: 320)
!9665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9666, size: 64)
!9666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9667)
!9667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !8026, line: 278, size: 1472, elements: !9668)
!9668 = !{!9669, !9673, !9674, !9675, !9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694}
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !9667, file: !8026, line: 279, baseType: !9670, size: 64)
!9670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9671, size: 64)
!9671 = !DISubroutineType(types: !9672)
!9672 = !{!6, !12}
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !9667, file: !8026, line: 280, baseType: !9661, size: 64, offset: 64)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9667, file: !8026, line: 281, baseType: !9670, size: 64, offset: 128)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9667, file: !8026, line: 282, baseType: !9670, size: 64, offset: 192)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !9667, file: !8026, line: 283, baseType: !9670, size: 64, offset: 256)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !9667, file: !8026, line: 284, baseType: !9670, size: 64, offset: 320)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !9667, file: !8026, line: 285, baseType: !9670, size: 64, offset: 384)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !9667, file: !8026, line: 286, baseType: !9670, size: 64, offset: 448)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !9667, file: !8026, line: 287, baseType: !9670, size: 64, offset: 512)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !9667, file: !8026, line: 288, baseType: !9670, size: 64, offset: 576)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !9667, file: !8026, line: 289, baseType: !9670, size: 64, offset: 640)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !9667, file: !8026, line: 290, baseType: !9670, size: 64, offset: 704)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !9667, file: !8026, line: 291, baseType: !9670, size: 64, offset: 768)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !9667, file: !8026, line: 292, baseType: !9670, size: 64, offset: 832)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !9667, file: !8026, line: 293, baseType: !9670, size: 64, offset: 896)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !9667, file: !8026, line: 294, baseType: !9670, size: 64, offset: 960)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !9667, file: !8026, line: 295, baseType: !9670, size: 64, offset: 1024)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !9667, file: !8026, line: 296, baseType: !9670, size: 64, offset: 1088)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !9667, file: !8026, line: 297, baseType: !9670, size: 64, offset: 1152)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !9667, file: !8026, line: 298, baseType: !9670, size: 64, offset: 1216)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !9667, file: !8026, line: 299, baseType: !9670, size: 64, offset: 1280)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !9667, file: !8026, line: 300, baseType: !9670, size: 64, offset: 1344)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !9667, file: !8026, line: 301, baseType: !9670, size: 64, offset: 1408)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !13, file: !14, line: 470, baseType: !9696, size: 64, offset: 768)
!9696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9697, size: 64)
!9697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !9698, line: 82, size: 1408, elements: !9699)
!9698 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!9699 = !{!9700, !9701, !9702, !9703, !9704, !9705, !9706, !9766, !9767, !9768, !9769, !9770, !9771, !9772, !9773, !9774, !9775, !9776, !9777, !9778, !9782, !9785, !9786}
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9697, file: !9698, line: 83, baseType: !21, size: 64)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !9697, file: !9698, line: 84, baseType: !21, size: 64, offset: 64)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !9697, file: !9698, line: 85, baseType: !12, size: 64, offset: 128)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !9697, file: !9698, line: 86, baseType: !134, size: 64, offset: 192)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !9697, file: !9698, line: 87, baseType: !134, size: 64, offset: 256)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !9697, file: !9698, line: 88, baseType: !134, size: 64, offset: 320)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !9697, file: !9698, line: 90, baseType: !9707, size: 64, offset: 384)
!9707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9708, size: 64)
!9708 = !DISubroutineType(types: !9709)
!9709 = !{!6, !12, !9710}
!9710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9711, size: 64)
!9711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !9712, line: 95, size: 1152, elements: !9713)
!9712 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!9713 = !{!9714, !9715, !9716, !9717, !9718, !9719, !9725, !9735, !9746, !9747, !9748, !9749, !9750, !9758, !9759, !9760, !9761, !9762, !9763}
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9711, file: !9712, line: 96, baseType: !21, size: 64)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9711, file: !9712, line: 97, baseType: !9696, size: 64, offset: 64)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9711, file: !9712, line: 99, baseType: !441, size: 64, offset: 128)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !9711, file: !9712, line: 100, baseType: !21, size: 64, offset: 192)
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !9711, file: !9712, line: 102, baseType: !299, size: 8, offset: 256)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !9711, file: !9712, line: 103, baseType: !9720, size: 32, offset: 288)
!9720 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !9712, line: 44, baseType: !194, size: 32, elements: !9721)
!9721 = !{!9722, !9723, !9724}
!9722 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!9723 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!9724 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !9711, file: !9712, line: 105, baseType: !9726, size: 64, offset: 320)
!9726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9727, size: 64)
!9727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9728)
!9728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !9729, line: 262, size: 1600, elements: !9730)
!9729 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!9730 = !{!9731, !9732, !9733, !9734}
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9728, file: !9729, line: 263, baseType: !4267, size: 256)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9728, file: !9729, line: 264, baseType: !4267, size: 256, offset: 256)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !9728, file: !9729, line: 265, baseType: !3215, size: 1024, offset: 512)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9728, file: !9729, line: 266, baseType: !2449, size: 64, offset: 1536)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !9711, file: !9712, line: 106, baseType: !9736, size: 64, offset: 384)
!9736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9737, size: 64)
!9737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9738)
!9738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !9729, line: 210, size: 256, elements: !9739)
!9739 = !{!9740, !9742, !9744, !9745}
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9738, file: !9729, line: 211, baseType: !9741, size: 72)
!9741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 72, elements: !6746)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !9738, file: !9729, line: 212, baseType: !9743, size: 64, offset: 128)
!9743 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !9729, line: 14, baseType: !130)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !9738, file: !9729, line: 213, baseType: !226, size: 32, offset: 192)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !9738, file: !9729, line: 214, baseType: !226, size: 32, offset: 224)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !9711, file: !9712, line: 108, baseType: !9670, size: 64, offset: 448)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !9711, file: !9712, line: 109, baseType: !9661, size: 64, offset: 512)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9711, file: !9712, line: 110, baseType: !9670, size: 64, offset: 576)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !9711, file: !9712, line: 111, baseType: !9661, size: 64, offset: 640)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9711, file: !9712, line: 112, baseType: !9751, size: 64, offset: 704)
!9751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9752, size: 64)
!9752 = !DISubroutineType(types: !9753)
!9753 = !{!6, !12, !9754}
!9754 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !8026, line: 52, baseType: !9755)
!9755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !8026, line: 50, size: 32, elements: !9756)
!9756 = !{!9757}
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !9755, file: !8026, line: 51, baseType: !6, size: 32)
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9711, file: !9712, line: 113, baseType: !9670, size: 64, offset: 768)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !9711, file: !9712, line: 114, baseType: !134, size: 64, offset: 832)
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !9711, file: !9712, line: 115, baseType: !134, size: 64, offset: 896)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !9711, file: !9712, line: 117, baseType: !9665, size: 64, offset: 960)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !9711, file: !9712, line: 118, baseType: !9661, size: 64, offset: 1024)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !9711, file: !9712, line: 120, baseType: !9764, size: 64, offset: 1088)
!9764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9765, size: 64)
!9765 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !9712, line: 120, flags: DIFlagFwdDecl)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !9697, file: !9698, line: 91, baseType: !9653, size: 64, offset: 448)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !9697, file: !9698, line: 92, baseType: !9670, size: 64, offset: 512)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !9697, file: !9698, line: 93, baseType: !9661, size: 64, offset: 576)
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9697, file: !9698, line: 94, baseType: !9670, size: 64, offset: 640)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !9697, file: !9698, line: 95, baseType: !9661, size: 64, offset: 704)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !9697, file: !9698, line: 97, baseType: !9670, size: 64, offset: 768)
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !9697, file: !9698, line: 98, baseType: !9670, size: 64, offset: 832)
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9697, file: !9698, line: 100, baseType: !9751, size: 64, offset: 896)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9697, file: !9698, line: 101, baseType: !9670, size: 64, offset: 960)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !9697, file: !9698, line: 103, baseType: !9670, size: 64, offset: 1024)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !9697, file: !9698, line: 105, baseType: !9670, size: 64, offset: 1088)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !9697, file: !9698, line: 107, baseType: !9665, size: 64, offset: 1152)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !9697, file: !9698, line: 109, baseType: !9779, size: 64, offset: 1216)
!9779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9780, size: 64)
!9780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9781)
!9781 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !9698, line: 109, flags: DIFlagFwdDecl)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !9697, file: !9698, line: 111, baseType: !9783, size: 64, offset: 1280)
!9783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9784, size: 64)
!9784 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !9698, line: 111, flags: DIFlagFwdDecl)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !9697, file: !9698, line: 112, baseType: !456, offset: 1344)
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !9697, file: !9698, line: 114, baseType: !299, size: 8, offset: 1344)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !13, file: !14, line: 471, baseType: !9710, size: 64, offset: 832)
!9788 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !13, file: !14, line: 473, baseType: !154, size: 64, offset: 896)
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !13, file: !14, line: 475, baseType: !154, size: 64, offset: 960)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !13, file: !14, line: 480, baseType: !553, size: 192, offset: 1024)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !13, file: !14, line: 484, baseType: !9792, size: 576, offset: 1216)
!9792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !14, line: 361, size: 576, elements: !9793)
!9793 = !{!9794, !9795, !9796, !9797, !9798, !9799}
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !9792, file: !14, line: 362, baseType: !25, size: 128)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !9792, file: !14, line: 363, baseType: !25, size: 128, offset: 128)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !9792, file: !14, line: 364, baseType: !25, size: 128, offset: 256)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !9792, file: !14, line: 365, baseType: !25, size: 128, offset: 384)
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !9792, file: !14, line: 366, baseType: !299, size: 8, offset: 512)
!9799 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !9792, file: !14, line: 367, baseType: !9800, size: 32, offset: 544)
!9800 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !14, line: 343, baseType: !194, size: 32, elements: !9801)
!9801 = !{!9802, !9803, !9804, !9805}
!9802 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!9803 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!9804 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!9805 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !13, file: !14, line: 485, baseType: !9807, size: 2304, offset: 1792)
!9807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !8026, line: 565, size: 2304, elements: !9808)
!9808 = !{!9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9851, !9852, !9853, !9854, !9855, !9856, !9857, !9858, !9859, !9860, !9861, !9862, !9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9883, !9884, !9885, !9886, !9887, !9888, !9889, !9890, !9900, !9904}
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !9807, file: !8026, line: 566, baseType: !9754, size: 32)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !9807, file: !8026, line: 567, baseType: !194, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !9807, file: !8026, line: 568, baseType: !194, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !9807, file: !8026, line: 569, baseType: !299, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !9807, file: !8026, line: 570, baseType: !299, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !9807, file: !8026, line: 571, baseType: !299, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !9807, file: !8026, line: 572, baseType: !299, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !9807, file: !8026, line: 573, baseType: !299, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !9807, file: !8026, line: 574, baseType: !299, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !9807, file: !8026, line: 575, baseType: !299, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !9807, file: !8026, line: 576, baseType: !299, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !9807, file: !8026, line: 577, baseType: !224, size: 32, offset: 64)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9807, file: !8026, line: 578, baseType: !39, offset: 96)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9807, file: !8026, line: 580, baseType: !25, size: 128, offset: 128)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !9807, file: !8026, line: 581, baseType: !1784, size: 192, offset: 256)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !9807, file: !8026, line: 582, baseType: !9825, size: 64, offset: 448)
!9825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9826, size: 64)
!9826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !9827, line: 43, size: 1472, elements: !9828)
!9827 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!9828 = !{!9829, !9830, !9831, !9832, !9833, !9836, !9837, !9838, !9839, !9840, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850}
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9826, file: !9827, line: 44, baseType: !21, size: 64)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9826, file: !9827, line: 45, baseType: !6, size: 32, offset: 64)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9826, file: !9827, line: 46, baseType: !25, size: 128, offset: 128)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9826, file: !9827, line: 47, baseType: !39, offset: 256)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !9826, file: !9827, line: 48, baseType: !9834, size: 64, offset: 256)
!9834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9835, size: 64)
!9835 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !8026, line: 533, flags: DIFlagFwdDecl)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !9826, file: !9827, line: 49, baseType: !2561, size: 320, offset: 320)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !9826, file: !9827, line: 50, baseType: !130, size: 64, offset: 640)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !9826, file: !9827, line: 51, baseType: !1342, size: 64, offset: 704)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !9826, file: !9827, line: 52, baseType: !1342, size: 64, offset: 768)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !9826, file: !9827, line: 53, baseType: !1342, size: 64, offset: 832)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !9826, file: !9827, line: 54, baseType: !1342, size: 64, offset: 896)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !9826, file: !9827, line: 55, baseType: !1342, size: 64, offset: 960)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !9826, file: !9827, line: 56, baseType: !130, size: 64, offset: 1024)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !9826, file: !9827, line: 57, baseType: !130, size: 64, offset: 1088)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !9826, file: !9827, line: 58, baseType: !130, size: 64, offset: 1152)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !9826, file: !9827, line: 59, baseType: !130, size: 64, offset: 1216)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !9826, file: !9827, line: 60, baseType: !130, size: 64, offset: 1280)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9826, file: !9827, line: 61, baseType: !12, size: 64, offset: 1344)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !9826, file: !9827, line: 62, baseType: !299, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !9826, file: !9827, line: 63, baseType: !299, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !9807, file: !8026, line: 583, baseType: !299, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !9807, file: !8026, line: 584, baseType: !299, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !9807, file: !8026, line: 585, baseType: !299, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !9807, file: !8026, line: 586, baseType: !194, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !9807, file: !8026, line: 587, baseType: !194, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !9807, file: !8026, line: 592, baseType: !1333, size: 512, offset: 576)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !9807, file: !8026, line: 593, baseType: !230, size: 64, offset: 1088)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !9807, file: !8026, line: 594, baseType: !1723, size: 256, offset: 1152)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !9807, file: !8026, line: 595, baseType: !807, size: 128, offset: 1408)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !9807, file: !8026, line: 596, baseType: !9834, size: 64, offset: 1536)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !9807, file: !8026, line: 597, baseType: !627, size: 32, offset: 1600)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !9807, file: !8026, line: 598, baseType: !627, size: 32, offset: 1632)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !9807, file: !8026, line: 599, baseType: !194, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !9807, file: !8026, line: 600, baseType: !194, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !9807, file: !8026, line: 601, baseType: !194, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !9807, file: !8026, line: 602, baseType: !194, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !9807, file: !8026, line: 603, baseType: !194, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !9807, file: !8026, line: 604, baseType: !299, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !9807, file: !8026, line: 605, baseType: !194, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !9807, file: !8026, line: 606, baseType: !194, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !9807, file: !8026, line: 607, baseType: !194, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !9807, file: !8026, line: 608, baseType: !194, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !9807, file: !8026, line: 609, baseType: !194, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !9807, file: !8026, line: 610, baseType: !194, size: 32, offset: 1696)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !9807, file: !8026, line: 611, baseType: !9876, size: 32, offset: 1728)
!9876 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !8026, line: 524, baseType: !194, size: 32, elements: !9877)
!9877 = !{!9878, !9879, !9880, !9881, !9882}
!9878 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!9879 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!9880 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!9881 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!9882 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !9807, file: !8026, line: 612, baseType: !8025, size: 32, offset: 1760)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !9807, file: !8026, line: 613, baseType: !6, size: 32, offset: 1792)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !9807, file: !8026, line: 614, baseType: !6, size: 32, offset: 1824)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !9807, file: !8026, line: 615, baseType: !230, size: 64, offset: 1856)
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !9807, file: !8026, line: 616, baseType: !230, size: 64, offset: 1920)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !9807, file: !8026, line: 617, baseType: !230, size: 64, offset: 1984)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !9807, file: !8026, line: 618, baseType: !230, size: 64, offset: 2048)
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !9807, file: !8026, line: 620, baseType: !9891, size: 64, offset: 2112)
!9891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9892, size: 64)
!9892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !8026, line: 536, size: 256, elements: !9893)
!9893 = !{!9894, !9895, !9896, !9897}
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9892, file: !8026, line: 537, baseType: !39)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !9892, file: !8026, line: 538, baseType: !194, size: 32)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !9892, file: !8026, line: 540, baseType: !25, size: 128, offset: 64)
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !9892, file: !8026, line: 543, baseType: !9898, size: 64, offset: 192)
!9898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9899, size: 64)
!9899 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !8026, line: 534, flags: DIFlagFwdDecl)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !9807, file: !8026, line: 621, baseType: !9901, size: 64, offset: 2176)
!9901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9902, size: 64)
!9902 = !DISubroutineType(types: !9903)
!9903 = !{null, !12, !1496}
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !9807, file: !8026, line: 622, baseType: !9905, size: 64, offset: 2240)
!9905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9906, size: 64)
!9906 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !8026, line: 622, flags: DIFlagFwdDecl)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !13, file: !14, line: 486, baseType: !9908, size: 64, offset: 4096)
!9908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9909, size: 64)
!9909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !8026, line: 642, size: 1792, elements: !9910)
!9910 = !{!9911, !9912, !9913, !9917, !9918, !9919}
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9909, file: !8026, line: 643, baseType: !9667, size: 1472)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9909, file: !8026, line: 644, baseType: !9670, size: 64, offset: 1472)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !9909, file: !8026, line: 645, baseType: !9914, size: 64, offset: 1536)
!9914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9915, size: 64)
!9915 = !DISubroutineType(types: !9916)
!9916 = !{null, !12, !299}
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !9909, file: !8026, line: 646, baseType: !9670, size: 64, offset: 1600)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !9909, file: !8026, line: 647, baseType: !9661, size: 64, offset: 1664)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !9909, file: !8026, line: 648, baseType: !9661, size: 64, offset: 1728)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !13, file: !14, line: 493, baseType: !9921, size: 64, offset: 4160)
!9921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9922, size: 64)
!9922 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !9923, line: 13, flags: DIFlagFwdDecl)
!9923 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !13, file: !14, line: 499, baseType: !25, size: 128, offset: 4224)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !13, file: !14, line: 502, baseType: !9926, size: 64, offset: 4352)
!9926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9927, size: 64)
!9927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9928)
!9928 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !14, line: 502, flags: DIFlagFwdDecl)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !13, file: !14, line: 504, baseType: !3567, size: 64, offset: 4416)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !13, file: !14, line: 505, baseType: !230, size: 64, offset: 4480)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !13, file: !14, line: 510, baseType: !230, size: 64, offset: 4544)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !13, file: !14, line: 511, baseType: !9933, size: 64, offset: 4608)
!9933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9934, size: 64)
!9934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9935)
!9935 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !14, line: 511, flags: DIFlagFwdDecl)
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !13, file: !14, line: 513, baseType: !9937, size: 64, offset: 4672)
!9937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9938, size: 64)
!9938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !14, line: 288, size: 128, elements: !9939)
!9939 = !{!9940, !9941}
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !9938, file: !14, line: 293, baseType: !194, size: 32)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !9938, file: !14, line: 294, baseType: !130, size: 64, offset: 64)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !13, file: !14, line: 515, baseType: !25, size: 128, offset: 4736)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !13, file: !14, line: 526, baseType: !9944, offset: 4864)
!9944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !9945, line: 5, elements: !53)
!9945 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !13, file: !14, line: 528, baseType: !9947, size: 64, offset: 4864)
!9947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9948, size: 64)
!9948 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !9949, line: 14, flags: DIFlagFwdDecl)
!9949 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !13, file: !14, line: 529, baseType: !9951, size: 64, offset: 4928)
!9951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9952, size: 64)
!9952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !9953, line: 17, size: 192, elements: !9954)
!9953 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!9954 = !{!9955, !9956, !10039}
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !9952, file: !9953, line: 18, baseType: !9951, size: 64)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9952, file: !9953, line: 19, baseType: !9957, size: 64, offset: 64)
!9957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9958, size: 64)
!9958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9959)
!9959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !9953, line: 110, size: 1152, elements: !9960)
!9960 = !{!9961, !9965, !9969, !9975, !9981, !9985, !9989, !9994, !9998, !9999, !10003, !10007, !10011, !10022, !10023, !10024, !10025, !10035}
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9959, file: !9953, line: 111, baseType: !9962, size: 64)
!9962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9963, size: 64)
!9963 = !DISubroutineType(types: !9964)
!9964 = !{!9951, !9951}
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9959, file: !9953, line: 112, baseType: !9966, size: 64, offset: 64)
!9966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9967, size: 64)
!9967 = !DISubroutineType(types: !9968)
!9968 = !{null, !9951}
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !9959, file: !9953, line: 113, baseType: !9970, size: 64, offset: 128)
!9970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9971, size: 64)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!299, !9973}
!9973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9974, size: 64)
!9974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9952)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !9959, file: !9953, line: 114, baseType: !9976, size: 64, offset: 192)
!9976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9977, size: 64)
!9977 = !DISubroutineType(types: !9978)
!9978 = !{!2449, !9973, !9979}
!9979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9980, size: 64)
!9980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !9959, file: !9953, line: 116, baseType: !9982, size: 64, offset: 256)
!9982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9983, size: 64)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{!299, !9973, !21}
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !9959, file: !9953, line: 118, baseType: !9986, size: 64, offset: 320)
!9986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9987, size: 64)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{!6, !9973, !21, !194, !154, !127}
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !9959, file: !9953, line: 123, baseType: !9990, size: 64, offset: 384)
!9990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9991, size: 64)
!9991 = !DISubroutineType(types: !9992)
!9992 = !{!6, !9973, !21, !9993, !127}
!9993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!9994 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !9959, file: !9953, line: 126, baseType: !9995, size: 64, offset: 448)
!9995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9996, size: 64)
!9996 = !DISubroutineType(types: !9997)
!9997 = !{!21, !9973}
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !9959, file: !9953, line: 127, baseType: !9995, size: 64, offset: 512)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !9959, file: !9953, line: 128, baseType: !10000, size: 64, offset: 576)
!10000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10001, size: 64)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!9951, !9973}
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !9959, file: !9953, line: 130, baseType: !10004, size: 64, offset: 640)
!10004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10005, size: 64)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{!9951, !9973, !9951}
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !9959, file: !9953, line: 133, baseType: !10008, size: 64, offset: 704)
!10008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10009, size: 64)
!10009 = !DISubroutineType(types: !10010)
!10010 = !{!9951, !9973, !21}
!10011 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !9959, file: !9953, line: 135, baseType: !10012, size: 64, offset: 768)
!10012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10013, size: 64)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{!6, !9973, !21, !21, !194, !194, !10015}
!10015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10016, size: 64)
!10016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !9953, line: 43, size: 640, elements: !10017)
!10017 = !{!10018, !10019, !10020}
!10018 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !10016, file: !9953, line: 44, baseType: !9951, size: 64)
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !10016, file: !9953, line: 45, baseType: !194, size: 32, offset: 64)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !10016, file: !9953, line: 46, baseType: !10021, size: 512, offset: 128)
!10021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 512, elements: !1376)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !9959, file: !9953, line: 140, baseType: !10004, size: 64, offset: 832)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !9959, file: !9953, line: 143, baseType: !10000, size: 64, offset: 896)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !9959, file: !9953, line: 145, baseType: !9962, size: 64, offset: 960)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !9959, file: !9953, line: 146, baseType: !10026, size: 64, offset: 1024)
!10026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10027, size: 64)
!10027 = !DISubroutineType(types: !10028)
!10028 = !{!6, !9973, !10029}
!10029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10030, size: 64)
!10030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !9953, line: 29, size: 128, elements: !10031)
!10031 = !{!10032, !10033, !10034}
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !10030, file: !9953, line: 30, baseType: !194, size: 32)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10030, file: !9953, line: 31, baseType: !194, size: 32, offset: 32)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !10030, file: !9953, line: 32, baseType: !9973, size: 64, offset: 64)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !9959, file: !9953, line: 148, baseType: !10036, size: 64, offset: 1088)
!10036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10037, size: 64)
!10037 = !DISubroutineType(types: !10038)
!10038 = !{!6, !9973, !12}
!10039 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9952, file: !9953, line: 20, baseType: !12, size: 64, offset: 128)
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !13, file: !14, line: 534, baseType: !322, size: 32, offset: 4992)
!10041 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13, file: !14, line: 535, baseType: !224, size: 32, offset: 5024)
!10042 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !13, file: !14, line: 537, baseType: !39, offset: 5056)
!10043 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !13, file: !14, line: 538, baseType: !25, size: 128, offset: 5056)
!10044 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !13, file: !14, line: 540, baseType: !10045, size: 64, offset: 5184)
!10045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10046, size: 64)
!10046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !10047, line: 54, size: 960, elements: !10048)
!10047 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!10048 = !{!10049, !10050, !10051, !10052, !10053, !10054, !10055, !10059, !10063, !10064, !10065, !10066, !10070, !10074, !10075}
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10046, file: !10047, line: 55, baseType: !21, size: 64)
!10050 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !10046, file: !10047, line: 56, baseType: !441, size: 64, offset: 64)
!10051 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !10046, file: !10047, line: 58, baseType: !134, size: 64, offset: 128)
!10052 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !10046, file: !10047, line: 59, baseType: !134, size: 64, offset: 192)
!10053 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !10046, file: !10047, line: 60, baseType: !32, size: 64, offset: 256)
!10054 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !10046, file: !10047, line: 62, baseType: !9653, size: 64, offset: 320)
!10055 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !10046, file: !10047, line: 63, baseType: !10056, size: 64, offset: 384)
!10056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10057, size: 64)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{!80, !12, !7688}
!10059 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !10046, file: !10047, line: 65, baseType: !10060, size: 64, offset: 448)
!10060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10061, size: 64)
!10061 = !DISubroutineType(types: !10062)
!10062 = !{null, !10045}
!10063 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !10046, file: !10047, line: 66, baseType: !9661, size: 64, offset: 512)
!10064 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !10046, file: !10047, line: 68, baseType: !9670, size: 64, offset: 576)
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !10046, file: !10047, line: 70, baseType: !9476, size: 64, offset: 640)
!10066 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !10046, file: !10047, line: 71, baseType: !10067, size: 64, offset: 704)
!10067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10068, size: 64)
!10068 = !DISubroutineType(types: !10069)
!10069 = !{!2449, !12}
!10070 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !10046, file: !10047, line: 73, baseType: !10071, size: 64, offset: 768)
!10071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10072, size: 64)
!10072 = !DISubroutineType(types: !10073)
!10073 = !{null, !12, !1809, !1810}
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !10046, file: !10047, line: 75, baseType: !9665, size: 64, offset: 832)
!10075 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !10046, file: !10047, line: 77, baseType: !9783, size: 64, offset: 896)
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !13, file: !14, line: 541, baseType: !134, size: 64, offset: 5248)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !13, file: !14, line: 543, baseType: !9661, size: 64, offset: 5312)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !13, file: !14, line: 544, baseType: !10079, size: 64, offset: 5376)
!10079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10080, size: 64)
!10080 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !14, line: 45, flags: DIFlagFwdDecl)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !13, file: !14, line: 545, baseType: !10082, size: 64, offset: 5440)
!10082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10083, size: 64)
!10083 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !14, line: 47, flags: DIFlagFwdDecl)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !13, file: !14, line: 547, baseType: !299, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !13, file: !14, line: 548, baseType: !299, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !13, file: !14, line: 549, baseType: !299, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !13, file: !14, line: 550, baseType: !299, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "coredev_type", scope: !8, file: !9, line: 672, baseType: !10089, size: 32, offset: 64)
!10089 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_coredev_type", file: !9, line: 191, baseType: !194, size: 32, elements: !10090)
!10090 = !{!10091, !10092}
!10091 = !DIEnumerator(name: "MLX5_COREDEV_PF", value: 0, isUnsigned: true)
!10092 = !DIEnumerator(name: "MLX5_COREDEV_VF", value: 1, isUnsigned: true)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !8, file: !9, line: 673, baseType: !10094, size: 64, offset: 128)
!10094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10095, size: 64)
!10095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !10096, line: 309, size: 19264, elements: !10097)
!10096 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!10097 = !{!10098, !10099, !10168, !10169, !10170, !10171, !10182, !10183, !10184, !10185, !10186, !10187, !10188, !10189, !10190, !10191, !10192, !10193, !10194, !10195, !10196, !10197, !10198, !10263, !10264, !10265, !10267, !10268, !10269, !10270, !10271, !10272, !10273, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286, !10289, !10290, !10291, !10292, !10293, !10294, !10295, !10296, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313, !10314, !10315, !10316, !10317, !10318, !10319, !10320, !10321, !10322, !10323, !10324, !10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334, !10335, !10337, !10338, !10340, !10341, !10342, !10343, !10345, !10346, !10347, !10350, !10357, !10358, !10359, !10360, !10361, !10362, !10363}
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !10095, file: !10096, line: 310, baseType: !25, size: 128)
!10099 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10095, file: !10096, line: 311, baseType: !10100, size: 64, offset: 128)
!10100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10101, size: 64)
!10101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !10096, line: 605, size: 8064, elements: !10102)
!10102 = !{!10103, !10104, !10105, !10106, !10107, !10108, !10109, !10124, !10125, !10126, !10150, !10153, !10154, !10155, !10156, !10157, !10158, !10159, !10160, !10161, !10163, !10164, !10165, !10166, !10167}
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10101, file: !10096, line: 606, baseType: !25, size: 128)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10101, file: !10096, line: 607, baseType: !10100, size: 64, offset: 128)
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10101, file: !10096, line: 608, baseType: !25, size: 128, offset: 192)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !10101, file: !10096, line: 609, baseType: !25, size: 128, offset: 320)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !10101, file: !10096, line: 610, baseType: !10094, size: 64, offset: 448)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !10101, file: !10096, line: 611, baseType: !25, size: 128, offset: 512)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10101, file: !10096, line: 613, baseType: !10110, size: 256, offset: 640)
!10110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10111, size: 256, elements: !1207)
!10111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10112, size: 64)
!10112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !10113, line: 20, size: 512, elements: !10114)
!10113 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!10114 = !{!10115, !10117, !10118, !10119, !10120, !10121, !10122, !10123}
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10112, file: !10113, line: 21, baseType: !10116, size: 64)
!10116 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !26, line: 158, baseType: !8441)
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !10112, file: !10113, line: 22, baseType: !10116, size: 64, offset: 64)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10112, file: !10113, line: 23, baseType: !21, size: 64, offset: 128)
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10112, file: !10113, line: 24, baseType: !130, size: 64, offset: 192)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10112, file: !10113, line: 25, baseType: !130, size: 64, offset: 256)
!10121 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10112, file: !10113, line: 26, baseType: !10111, size: 64, offset: 320)
!10122 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !10112, file: !10113, line: 26, baseType: !10111, size: 64, offset: 384)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !10112, file: !10113, line: 26, baseType: !10111, size: 64, offset: 448)
!10124 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !10101, file: !10096, line: 614, baseType: !25, size: 128, offset: 896)
!10125 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !10101, file: !10096, line: 615, baseType: !10112, size: 512, offset: 1024)
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10101, file: !10096, line: 617, baseType: !10127, size: 64, offset: 1536)
!10127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10128, size: 64)
!10128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !10096, line: 731, size: 320, elements: !10129)
!10129 = !{!10130, !10134, !10138, !10142, !10146}
!10130 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !10128, file: !10096, line: 732, baseType: !10131, size: 64)
!10131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10132, size: 64)
!10132 = !DISubroutineType(types: !10133)
!10133 = !{!6, !10100}
!10134 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !10128, file: !10096, line: 733, baseType: !10135, size: 64, offset: 64)
!10135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10136, size: 64)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{null, !10100}
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !10128, file: !10096, line: 734, baseType: !10139, size: 64, offset: 128)
!10139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10140, size: 64)
!10140 = !DISubroutineType(types: !10141)
!10141 = !{!154, !10100, !194, !6}
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !10128, file: !10096, line: 735, baseType: !10143, size: 64, offset: 192)
!10143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10144, size: 64)
!10144 = !DISubroutineType(types: !10145)
!10145 = !{!6, !10100, !194, !6, !6, !1462}
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !10128, file: !10096, line: 736, baseType: !10147, size: 64, offset: 256)
!10147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10148, size: 64)
!10148 = !DISubroutineType(types: !10149)
!10149 = !{!6, !10100, !194, !6, !6, !224}
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !10101, file: !10096, line: 618, baseType: !10151, size: 64, offset: 1600)
!10151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10152, size: 64)
!10152 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !10096, line: 537, flags: DIFlagFwdDecl)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10101, file: !10096, line: 619, baseType: !154, size: 64, offset: 1664)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !10101, file: !10096, line: 620, baseType: !1992, size: 64, offset: 1728)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10101, file: !10096, line: 622, baseType: !236, size: 8, offset: 1792)
!10156 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !10101, file: !10096, line: 623, baseType: !236, size: 8, offset: 1800)
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !10101, file: !10096, line: 624, baseType: !236, size: 8, offset: 1808)
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !10101, file: !10096, line: 625, baseType: !236, size: 8, offset: 1816)
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10101, file: !10096, line: 630, baseType: !6158, size: 384, offset: 1824)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !10101, file: !10096, line: 632, baseType: !122, size: 16, offset: 2208)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !10101, file: !10096, line: 633, baseType: !10162, size: 16, offset: 2224)
!10162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !10096, line: 237, baseType: !122)
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !10101, file: !10096, line: 634, baseType: !12, size: 64, offset: 2240)
!10164 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10101, file: !10096, line: 635, baseType: !13, size: 5568, offset: 2304)
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !10101, file: !10096, line: 636, baseType: !148, size: 64, offset: 7872)
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !10101, file: !10096, line: 637, baseType: !148, size: 64, offset: 7936)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !10101, file: !10096, line: 638, baseType: !194, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !10095, file: !10096, line: 312, baseType: !10100, size: 64, offset: 192)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10095, file: !10096, line: 314, baseType: !154, size: 64, offset: 256)
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !10095, file: !10096, line: 315, baseType: !1992, size: 64, offset: 320)
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !10095, file: !10096, line: 316, baseType: !10172, size: 64, offset: 384)
!10172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10173, size: 64)
!10173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !10096, line: 69, size: 832, elements: !10174)
!10174 = !{!10175, !10176, !10177, !10180, !10181}
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10173, file: !10096, line: 70, baseType: !10100, size: 64)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10173, file: !10096, line: 71, baseType: !25, size: 128, offset: 64)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !10173, file: !10096, line: 72, baseType: !10178, size: 64, offset: 192)
!10178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10179, size: 64)
!10179 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !10096, line: 72, flags: DIFlagFwdDecl)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10173, file: !10096, line: 73, baseType: !236, size: 8, offset: 256)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10173, file: !10096, line: 74, baseType: !17, size: 512, offset: 320)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !10095, file: !10096, line: 318, baseType: !194, size: 32, offset: 448)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10095, file: !10096, line: 319, baseType: !122, size: 16, offset: 480)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10095, file: !10096, line: 320, baseType: !122, size: 16, offset: 496)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !10095, file: !10096, line: 321, baseType: !122, size: 16, offset: 512)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !10095, file: !10096, line: 322, baseType: !122, size: 16, offset: 528)
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10095, file: !10096, line: 323, baseType: !194, size: 32, offset: 544)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !10095, file: !10096, line: 324, baseType: !1398, size: 8, offset: 576)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !10095, file: !10096, line: 325, baseType: !1398, size: 8, offset: 584)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !10095, file: !10096, line: 330, baseType: !1398, size: 8, offset: 592)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !10095, file: !10096, line: 331, baseType: !1398, size: 8, offset: 600)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !10095, file: !10096, line: 332, baseType: !1398, size: 8, offset: 608)
!10193 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !10095, file: !10096, line: 333, baseType: !1398, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!10194 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !10095, file: !10096, line: 334, baseType: !1398, size: 8, offset: 624)
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10095, file: !10096, line: 335, baseType: !1398, size: 8, offset: 632)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !10095, file: !10096, line: 336, baseType: !739, size: 16, offset: 640)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !10095, file: !10096, line: 337, baseType: !5577, size: 64, offset: 704)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10095, file: !10096, line: 339, baseType: !10199, size: 64, offset: 768)
!10199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10200, size: 64)
!10200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !10096, line: 858, size: 2048, elements: !10201)
!10201 = !{!10202, !10203, !10204, !10216, !10220, !10224, !10228, !10232, !10233, !10237, !10256, !10257, !10258}
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10200, file: !10096, line: 859, baseType: !25, size: 128)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10200, file: !10096, line: 860, baseType: !21, size: 64, offset: 128)
!10204 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10200, file: !10096, line: 861, baseType: !10205, size: 64, offset: 192)
!10205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10206, size: 64)
!10206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10207)
!10207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !9729, line: 38, size: 256, elements: !10208)
!10208 = !{!10209, !10210, !10211, !10212, !10213, !10214, !10215}
!10209 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10207, file: !9729, line: 39, baseType: !226, size: 32)
!10210 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10207, file: !9729, line: 39, baseType: !226, size: 32, offset: 32)
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !10207, file: !9729, line: 40, baseType: !226, size: 32, offset: 64)
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !10207, file: !9729, line: 40, baseType: !226, size: 32, offset: 96)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10207, file: !9729, line: 41, baseType: !226, size: 32, offset: 128)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !10207, file: !9729, line: 41, baseType: !226, size: 32, offset: 160)
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10207, file: !9729, line: 42, baseType: !9743, size: 64, offset: 192)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10200, file: !10096, line: 862, baseType: !10217, size: 64, offset: 256)
!10217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10218, size: 64)
!10218 = !DISubroutineType(types: !10219)
!10219 = !{!6, !10094, !10205}
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10200, file: !10096, line: 863, baseType: !10221, size: 64, offset: 320)
!10221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10222, size: 64)
!10222 = !DISubroutineType(types: !10223)
!10223 = !{null, !10094}
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10200, file: !10096, line: 864, baseType: !10225, size: 64, offset: 384)
!10225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10226, size: 64)
!10226 = !DISubroutineType(types: !10227)
!10227 = !{!6, !10094, !9754}
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10200, file: !10096, line: 865, baseType: !10229, size: 64, offset: 448)
!10229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10230, size: 64)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{!6, !10094}
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !10200, file: !10096, line: 866, baseType: !10221, size: 64, offset: 512)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !10200, file: !10096, line: 867, baseType: !10234, size: 64, offset: 576)
!10234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10235, size: 64)
!10235 = !DISubroutineType(types: !10236)
!10236 = !{!6, !10094, !6}
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !10200, file: !10096, line: 868, baseType: !10238, size: 64, offset: 640)
!10238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10239, size: 64)
!10239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10240)
!10240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !10096, line: 795, size: 384, elements: !10241)
!10241 = !{!10242, !10248, !10252, !10253, !10254, !10255}
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !10240, file: !10096, line: 797, baseType: !10243, size: 64)
!10243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10244, size: 64)
!10244 = !DISubroutineType(types: !10245)
!10245 = !{!10246, !10094, !10247}
!10246 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !10096, line: 772, baseType: !194)
!10247 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !10096, line: 180, baseType: !194)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !10240, file: !10096, line: 801, baseType: !10249, size: 64, offset: 64)
!10249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10250, size: 64)
!10250 = !DISubroutineType(types: !10251)
!10251 = !{!10246, !10094}
!10252 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !10240, file: !10096, line: 804, baseType: !10249, size: 64, offset: 128)
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !10240, file: !10096, line: 807, baseType: !10221, size: 64, offset: 192)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !10240, file: !10096, line: 808, baseType: !10221, size: 64, offset: 256)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10240, file: !10096, line: 811, baseType: !10221, size: 64, offset: 320)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !10200, file: !10096, line: 869, baseType: !134, size: 64, offset: 704)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10200, file: !10096, line: 870, baseType: !9711, size: 1152, offset: 768)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !10200, file: !10096, line: 871, baseType: !10259, size: 128, offset: 1920)
!10259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !10096, line: 759, size: 128, elements: !10260)
!10260 = !{!10261, !10262}
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10259, file: !10096, line: 760, baseType: !39)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10259, file: !10096, line: 761, baseType: !25, size: 128)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !10095, file: !10096, line: 340, baseType: !230, size: 64, offset: 832)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !10095, file: !10096, line: 346, baseType: !9938, size: 128, offset: 896)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !10095, file: !10096, line: 348, baseType: !10266, size: 32, offset: 1024)
!10266 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !10096, line: 155, baseType: !6)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !10095, file: !10096, line: 351, baseType: !194, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !10095, file: !10096, line: 352, baseType: !1398, size: 8, offset: 1064)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !10095, file: !10096, line: 353, baseType: !194, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !10095, file: !10096, line: 355, baseType: !194, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !10095, file: !10096, line: 356, baseType: !194, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !10095, file: !10096, line: 357, baseType: !194, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !10095, file: !10096, line: 358, baseType: !194, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !10095, file: !10096, line: 359, baseType: !194, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !10095, file: !10096, line: 360, baseType: !194, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !10095, file: !10096, line: 361, baseType: !194, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !10095, file: !10096, line: 362, baseType: !194, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !10095, file: !10096, line: 364, baseType: !194, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !10095, file: !10096, line: 365, baseType: !194, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !10095, file: !10096, line: 369, baseType: !194, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !10095, file: !10096, line: 370, baseType: !194, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !10095, file: !10096, line: 371, baseType: !194, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !10095, file: !10096, line: 374, baseType: !194, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !10095, file: !10096, line: 376, baseType: !194, size: 32, offset: 1120)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !10095, file: !10096, line: 377, baseType: !194, size: 32, offset: 1152)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !10095, file: !10096, line: 380, baseType: !10287, size: 64, offset: 1216)
!10287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10288, size: 64)
!10288 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !10096, line: 303, flags: DIFlagFwdDecl)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !10095, file: !10096, line: 381, baseType: !194, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !10095, file: !10096, line: 383, baseType: !6, size: 32, offset: 1312)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !10095, file: !10096, line: 385, baseType: !194, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !10095, file: !10096, line: 387, baseType: !10247, size: 32, offset: 1376)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10095, file: !10096, line: 388, baseType: !13, size: 5568, offset: 1408)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !10095, file: !10096, line: 390, baseType: !6, size: 32, offset: 6976)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !10095, file: !10096, line: 396, baseType: !194, size: 32, offset: 7008)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10095, file: !10096, line: 397, baseType: !10297, size: 8704, offset: 7040)
!10297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10112, size: 8704, elements: !4992)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !10095, file: !10096, line: 399, baseType: !299, size: 8, offset: 15744)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !10095, file: !10096, line: 401, baseType: !194, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !10095, file: !10096, line: 402, baseType: !194, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !10095, file: !10096, line: 403, baseType: !194, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !10095, file: !10096, line: 404, baseType: !194, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !10095, file: !10096, line: 405, baseType: !194, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !10095, file: !10096, line: 407, baseType: !194, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !10095, file: !10096, line: 408, baseType: !194, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !10095, file: !10096, line: 409, baseType: !194, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !10095, file: !10096, line: 410, baseType: !194, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !10095, file: !10096, line: 411, baseType: !194, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !10095, file: !10096, line: 412, baseType: !194, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !10095, file: !10096, line: 413, baseType: !194, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !10095, file: !10096, line: 414, baseType: !194, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !10095, file: !10096, line: 415, baseType: !194, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !10095, file: !10096, line: 416, baseType: !194, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !10095, file: !10096, line: 417, baseType: !194, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !10095, file: !10096, line: 418, baseType: !194, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !10095, file: !10096, line: 419, baseType: !194, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !10095, file: !10096, line: 420, baseType: !194, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !10095, file: !10096, line: 421, baseType: !194, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !10095, file: !10096, line: 422, baseType: !194, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !10095, file: !10096, line: 423, baseType: !194, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !10095, file: !10096, line: 424, baseType: !194, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !10095, file: !10096, line: 425, baseType: !194, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !10095, file: !10096, line: 426, baseType: !194, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !10095, file: !10096, line: 427, baseType: !194, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !10095, file: !10096, line: 435, baseType: !194, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !10095, file: !10096, line: 441, baseType: !194, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !10095, file: !10096, line: 442, baseType: !194, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !10095, file: !10096, line: 443, baseType: !194, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !10095, file: !10096, line: 444, baseType: !194, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !10095, file: !10096, line: 445, baseType: !194, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !10095, file: !10096, line: 446, baseType: !194, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !10095, file: !10096, line: 447, baseType: !194, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !10095, file: !10096, line: 448, baseType: !194, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !10095, file: !10096, line: 449, baseType: !194, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !10095, file: !10096, line: 450, baseType: !10336, size: 16, offset: 15792)
!10336 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !10096, line: 206, baseType: !122)
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !10095, file: !10096, line: 451, baseType: !627, size: 32, offset: 15808)
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !10095, file: !10096, line: 453, baseType: !10339, size: 512, offset: 15840)
!10339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 512, elements: !1939)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !10095, file: !10096, line: 454, baseType: !446, size: 64, offset: 16384)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !10095, file: !10096, line: 455, baseType: !148, size: 64, offset: 16448)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !10095, file: !10096, line: 456, baseType: !6, size: 32, offset: 16512)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !10095, file: !10096, line: 457, baseType: !10344, size: 1088, offset: 16576)
!10344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 1088, elements: !4992)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !10095, file: !10096, line: 458, baseType: !10344, size: 1088, offset: 17664)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !10095, file: !10096, line: 469, baseType: !134, size: 64, offset: 18752)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !10095, file: !10096, line: 471, baseType: !10348, size: 64, offset: 18816)
!10348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10349, size: 64)
!10349 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !10096, line: 304, flags: DIFlagFwdDecl)
!10350 = !DIDerivedType(tag: DW_TAG_member, scope: !10095, file: !10096, line: 478, baseType: !10351, size: 64, offset: 18880)
!10351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10095, file: !10096, line: 478, size: 64, elements: !10352)
!10352 = !{!10353, !10356}
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10351, file: !10096, line: 479, baseType: !10354, size: 64)
!10354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10355, size: 64)
!10355 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !10096, line: 305, flags: DIFlagFwdDecl)
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !10351, file: !10096, line: 480, baseType: !10094, size: 64)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !10095, file: !10096, line: 482, baseType: !739, size: 16, offset: 18944)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !10095, file: !10096, line: 483, baseType: !1398, size: 8, offset: 18960)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !10095, file: !10096, line: 497, baseType: !739, size: 16, offset: 18976)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !10095, file: !10096, line: 498, baseType: !8441, size: 64, offset: 19008)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !10095, file: !10096, line: 499, baseType: !127, size: 64, offset: 19072)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !10095, file: !10096, line: 500, baseType: !80, size: 64, offset: 19136)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !10095, file: !10096, line: 502, baseType: !130, size: 64, offset: 19200)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "pci_status_mutex", scope: !8, file: !9, line: 675, baseType: !553, size: 192, offset: 192)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "pci_status", scope: !8, file: !9, line: 676, baseType: !10366, size: 32, offset: 384)
!10366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_pci_status", file: !9, line: 601, baseType: !194, size: 32, elements: !10367)
!10367 = !{!10368, !10369}
!10368 = !DIEnumerator(name: "MLX5_PCI_STATUS_DISABLED", value: 0, isUnsigned: true)
!10369 = !DIEnumerator(name: "MLX5_PCI_STATUS_ENABLED", value: 1, isUnsigned: true)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "rev_id", scope: !8, file: !9, line: 677, baseType: !1398, size: 8, offset: 416)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "board_id", scope: !8, file: !9, line: 678, baseType: !7617, size: 512, offset: 424)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8, file: !9, line: 679, baseType: !10373, size: 5184, offset: 960)
!10373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd", file: !9, line: 266, size: 5184, elements: !10374)
!10374 = !{!10375, !10381, !10387, !10388, !10389, !10390, !10391, !10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10403, !10404, !10411, !10412, !10413, !10414, !10489, !10493, !10502, !10504, !10505}
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !10373, file: !9, line: 267, baseType: !10376, size: 256)
!10376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_nb", file: !10377, line: 50, size: 256, elements: !10378)
!10377 = !DIFile(filename: "./include/linux/mlx5/eq.h", directory: "/home/lizy2001/genbc/linux")
!10378 = !{!10379, !10380}
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !10376, file: !10377, line: 51, baseType: !6700, size: 192)
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !10376, file: !10377, line: 52, baseType: !1398, size: 8, offset: 192)
!10381 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10373, file: !9, line: 269, baseType: !10382, size: 32, offset: 256)
!10382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_cmdif_state", file: !9, line: 218, baseType: !194, size: 32, elements: !10383)
!10383 = !{!10384, !10385, !10386}
!10384 = !DIEnumerator(name: "MLX5_CMDIF_STATE_UNINITIALIZED", value: 0, isUnsigned: true)
!10385 = !DIEnumerator(name: "MLX5_CMDIF_STATE_UP", value: 1, isUnsigned: true)
!10386 = !DIEnumerator(name: "MLX5_CMDIF_STATE_DOWN", value: 2, isUnsigned: true)
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_alloc_buf", scope: !10373, file: !9, line: 270, baseType: !154, size: 64, offset: 320)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dma", scope: !10373, file: !9, line: 271, baseType: !965, size: 64, offset: 384)
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !10373, file: !9, line: 272, baseType: !6, size: 32, offset: 448)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_buf", scope: !10373, file: !9, line: 273, baseType: !154, size: 64, offset: 512)
!10391 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !10373, file: !9, line: 274, baseType: !965, size: 64, offset: 576)
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_rev", scope: !10373, file: !9, line: 275, baseType: !739, size: 16, offset: 640)
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "log_sz", scope: !10373, file: !9, line: 276, baseType: !1398, size: 8, offset: 656)
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "log_stride", scope: !10373, file: !9, line: 277, baseType: !1398, size: 8, offset: 664)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_cmds", scope: !10373, file: !9, line: 278, baseType: !6, size: 32, offset: 672)
!10396 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !10373, file: !9, line: 279, baseType: !6, size: 32, offset: 704)
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !10373, file: !9, line: 280, baseType: !1462, size: 64, offset: 768)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !10373, file: !9, line: 284, baseType: !39, offset: 832)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "token_lock", scope: !10373, file: !9, line: 288, baseType: !39, offset: 832)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10373, file: !9, line: 289, baseType: !1398, size: 8, offset: 832)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !10373, file: !9, line: 290, baseType: !130, size: 64, offset: 896)
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "wq_name", scope: !10373, file: !9, line: 291, baseType: !4267, size: 256, offset: 960)
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10373, file: !9, line: 292, baseType: !2573, size: 64, offset: 1216)
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !10373, file: !9, line: 293, baseType: !10405, size: 192, offset: 1280)
!10405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "semaphore", file: !10406, line: 15, size: 192, elements: !10407)
!10406 = !DIFile(filename: "./include/linux/semaphore.h", directory: "/home/lizy2001/genbc/linux")
!10407 = !{!10408, !10409, !10410}
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10405, file: !10406, line: 16, baseType: !653)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10405, file: !10406, line: 17, baseType: !194, size: 32)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !10405, file: !10406, line: 18, baseType: !25, size: 128, offset: 64)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "pages_sem", scope: !10373, file: !9, line: 294, baseType: !10405, size: 192, offset: 1472)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10373, file: !9, line: 295, baseType: !6, size: 32, offset: 1664)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_opcode", scope: !10373, file: !9, line: 296, baseType: !739, size: 16, offset: 1696)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "ent_arr", scope: !10373, file: !9, line: 297, baseType: !10415, size: 2048, offset: 1728)
!10415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10416, size: 2048, elements: !2640)
!10416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10417, size: 64)
!10417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_work_ent", file: !9, line: 748, size: 2304, elements: !10418)
!10418 = !{!10419, !10420, !10445, !10446, !10447, !10448, !10453, !10454, !10455, !10456, !10457, !10458, !10460, !10461, !10480, !10481, !10482, !10483, !10484, !10485, !10486, !10487, !10488}
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10417, file: !9, line: 749, baseType: !130, size: 64)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !10417, file: !9, line: 750, baseType: !10421, size: 64, offset: 64)
!10421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10422, size: 64)
!10422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_msg", file: !9, line: 228, size: 448, elements: !10423)
!10423 = !{!10424, !10425, !10433, !10434, !10438}
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10422, file: !9, line: 229, baseType: !25, size: 128)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10422, file: !9, line: 230, baseType: !10426, size: 64, offset: 128)
!10426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10427, size: 64)
!10427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmd_msg_cache", file: !9, line: 245, size: 192, elements: !10428)
!10428 = !{!10429, !10430, !10431, !10432}
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10427, file: !9, line: 248, baseType: !39)
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10427, file: !9, line: 249, baseType: !25, size: 128)
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "max_inbox_size", scope: !10427, file: !9, line: 250, baseType: !194, size: 32, offset: 128)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "num_ent", scope: !10427, file: !9, line: 251, baseType: !194, size: 32, offset: 160)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10422, file: !9, line: 231, baseType: !224, size: 32, offset: 192)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !10422, file: !9, line: 232, baseType: !10435, size: 128, offset: 224)
!10435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_first", file: !9, line: 224, size: 128, elements: !10436)
!10436 = !{!10437}
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10435, file: !9, line: 225, baseType: !4558, size: 128)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10422, file: !9, line: 233, baseType: !10439, size: 64, offset: 384)
!10439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10440, size: 64)
!10440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_mailbox", file: !9, line: 312, size: 192, elements: !10441)
!10441 = !{!10442, !10443, !10444}
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !10440, file: !9, line: 313, baseType: !154, size: 64)
!10443 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !10440, file: !9, line: 314, baseType: !965, size: 64, offset: 64)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10440, file: !9, line: 315, baseType: !10439, size: 64, offset: 128)
!10445 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !10417, file: !9, line: 751, baseType: !10421, size: 64, offset: 128)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "uout", scope: !10417, file: !9, line: 752, baseType: !154, size: 64, offset: 192)
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "uout_size", scope: !10417, file: !9, line: 753, baseType: !6, size: 32, offset: 256)
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !10417, file: !9, line: 754, baseType: !10449, size: 64, offset: 320)
!10449 = !DIDerivedType(tag: DW_TAG_typedef, name: "mlx5_cmd_cbk_t", file: !9, line: 742, baseType: !10450)
!10450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10451, size: 64)
!10451 = !DISubroutineType(types: !10452)
!10452 = !{null, !6, !154}
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "cb_timeout_work", scope: !10417, file: !9, line: 755, baseType: !2557, size: 704, offset: 384)
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10417, file: !9, line: 756, baseType: !154, size: 64, offset: 1088)
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !10417, file: !9, line: 757, baseType: !6, size: 32, offset: 1152)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "handling", scope: !10417, file: !9, line: 758, baseType: !1784, size: 192, offset: 1216)
!10457 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !10417, file: !9, line: 759, baseType: !1784, size: 192, offset: 1408)
!10458 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !10417, file: !9, line: 760, baseType: !10459, size: 64, offset: 1600)
!10459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10373, size: 64)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !10417, file: !9, line: 761, baseType: !1723, size: 256, offset: 1664)
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !10417, file: !9, line: 762, baseType: !10462, size: 64, offset: 1920)
!10462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10463, size: 64)
!10463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_layout", file: !10464, line: 524, size: 512, elements: !10465)
!10464 = !DIFile(filename: "./include/linux/mlx5/device.h", directory: "/home/lizy2001/genbc/linux")
!10465 = !{!10466, !10467, !10469, !10470, !10472, !10473, !10474, !10475, !10476, !10477, !10478, !10479}
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10463, file: !10464, line: 525, baseType: !1398, size: 8)
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10463, file: !10464, line: 526, baseType: !10468, size: 24, offset: 8)
!10468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 24, elements: !81)
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !10463, file: !10464, line: 527, baseType: !2014, size: 32, offset: 32)
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "in_ptr", scope: !10463, file: !10464, line: 528, baseType: !10471, size: 64, offset: 64)
!10471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !2015, line: 34, baseType: !231)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !10463, file: !10464, line: 529, baseType: !4558, size: 128, offset: 128)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !10463, file: !10464, line: 530, baseType: !4558, size: 128, offset: 256)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "out_ptr", scope: !10463, file: !10464, line: 531, baseType: !10471, size: 64, offset: 384)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !10463, file: !10464, line: 532, baseType: !2014, size: 32, offset: 448)
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10463, file: !10464, line: 533, baseType: !1398, size: 8, offset: 480)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !10463, file: !10464, line: 534, baseType: !1398, size: 8, offset: 488)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10463, file: !10464, line: 535, baseType: !1398, size: 8, offset: 496)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "status_own", scope: !10463, file: !10464, line: 536, baseType: !1398, size: 8, offset: 504)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !10417, file: !9, line: 763, baseType: !6, size: 32, offset: 1984)
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "page_queue", scope: !10417, file: !9, line: 764, baseType: !6, size: 32, offset: 2016)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10417, file: !9, line: 765, baseType: !1398, size: 8, offset: 2048)
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10417, file: !9, line: 766, baseType: !1398, size: 8, offset: 2056)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "ts1", scope: !10417, file: !9, line: 767, baseType: !230, size: 64, offset: 2112)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "ts2", scope: !10417, file: !9, line: 768, baseType: !230, size: 64, offset: 2176)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !10417, file: !9, line: 769, baseType: !739, size: 16, offset: 2240)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "polling", scope: !10417, file: !9, line: 770, baseType: !299, size: 8, offset: 2256)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !10417, file: !9, line: 772, baseType: !875, size: 32, offset: 2272)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !10373, file: !9, line: 298, baseType: !10490, size: 64, offset: 3776)
!10490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10491, size: 64)
!10491 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !10492, line: 21, flags: DIFlagFwdDecl)
!10492 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "dbg", scope: !10373, file: !9, line: 299, baseType: !10494, size: 256, offset: 3840)
!10494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_debug", file: !9, line: 236, size: 256, elements: !10495)
!10495 = !{!10496, !10497, !10498, !10499, !10500, !10501}
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_root", scope: !10494, file: !9, line: 237, baseType: !190, size: 64)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "in_msg", scope: !10494, file: !9, line: 238, baseType: !154, size: 64, offset: 64)
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "out_msg", scope: !10494, file: !9, line: 239, baseType: !154, size: 64, offset: 128)
!10499 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10494, file: !9, line: 240, baseType: !1398, size: 8, offset: 192)
!10500 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !10494, file: !9, line: 241, baseType: !739, size: 16, offset: 208)
!10501 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !10494, file: !9, line: 242, baseType: !739, size: 16, offset: 224)
!10502 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !10373, file: !9, line: 300, baseType: !10503, size: 960, offset: 4096)
!10503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10427, size: 960, elements: !1587)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_disabled", scope: !10373, file: !9, line: 301, baseType: !6, size: 32, offset: 5056)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !10373, file: !9, line: 302, baseType: !10506, size: 64, offset: 5120)
!10506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10507, size: 64)
!10507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_stats", file: !9, line: 258, size: 192, elements: !10508)
!10508 = !{!10509, !10510, !10511, !10512}
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "sum", scope: !10507, file: !9, line: 259, baseType: !230, size: 64)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !10507, file: !9, line: 260, baseType: !230, size: 64, offset: 64)
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10507, file: !9, line: 261, baseType: !190, size: 64, offset: 128)
!10512 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10507, file: !9, line: 263, baseType: !39, offset: 192)
!10513 = !DIDerivedType(tag: DW_TAG_member, name: "port_caps", scope: !8, file: !9, line: 680, baseType: !10514, size: 192, offset: 6144)
!10514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10515, size: 192, elements: !1906)
!10515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_port_caps", file: !9, line: 305, size: 96, elements: !10516)
!10516 = !{!10517, !10518, !10519, !10520}
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "gid_table_len", scope: !10515, file: !9, line: 306, baseType: !6, size: 32)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_table_len", scope: !10515, file: !9, line: 307, baseType: !6, size: 32, offset: 32)
!10519 = !DIDerivedType(tag: DW_TAG_member, name: "ext_port_cap", scope: !10515, file: !9, line: 308, baseType: !1398, size: 8, offset: 64)
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "has_smi", scope: !10515, file: !9, line: 309, baseType: !299, size: 8, offset: 72)
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !8, file: !9, line: 689, baseType: !10522, size: 1446816, offset: 6336)
!10522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8, file: !9, line: 681, size: 1446816, elements: !10523)
!10523 = !{!10524, !10528, !10529, !10530, !10534, !10535, !10538}
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "hca_cur", scope: !10522, file: !9, line: 682, baseType: !10525, size: 720896)
!10525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 720896, elements: !10526)
!10526 = !{!7954, !10527}
!10527 = !DISubrange(count: 1024)
!10528 = !DIDerivedType(tag: DW_TAG_member, name: "hca_max", scope: !10522, file: !9, line: 683, baseType: !10525, size: 720896, offset: 720896)
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "pcam", scope: !10522, file: !9, line: 684, baseType: !8514, size: 640, offset: 1441792)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "mcam", scope: !10522, file: !9, line: 685, baseType: !10531, size: 1728, offset: 1442432)
!10531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 1728, elements: !10532)
!10532 = !{!82, !10533}
!10533 = !DISubrange(count: 18)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "fpga", scope: !10522, file: !9, line: 686, baseType: !8543, size: 2048, offset: 1444160)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "qcam", scope: !10522, file: !9, line: 687, baseType: !10536, size: 576, offset: 1446208)
!10536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 576, elements: !10537)
!10537 = !{!10533}
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "embedded_cpu", scope: !10522, file: !9, line: 688, baseType: !1398, size: 8, offset: 1446784)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !8, file: !9, line: 690, baseType: !230, size: 64, offset: 1453184)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "iseg_base", scope: !8, file: !9, line: 691, baseType: !8441, size: 64, offset: 1453248)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "iseg", scope: !8, file: !9, line: 692, baseType: !10542, size: 64, offset: 1453312)
!10542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10543, size: 64)
!10543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_init_seg", file: !10464, line: 565, size: 65664, elements: !10544)
!10544 = !{!10545, !10546, !10547, !10548, !10549, !10550, !10551, !10555, !10556, !10572, !10576, !10577, !10578, !10579, !10580, !10584, !10585, !10586}
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "fw_rev", scope: !10543, file: !10464, line: 566, baseType: !2014, size: 32)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_rev_fw_sub", scope: !10543, file: !10464, line: 567, baseType: !2014, size: 32, offset: 32)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10543, file: !10464, line: 568, baseType: !4602, size: 64, offset: 64)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_addr_h", scope: !10543, file: !10464, line: 569, baseType: !2014, size: 32, offset: 128)
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_addr_l_sz", scope: !10543, file: !10464, line: 570, baseType: !2014, size: 32, offset: 160)
!10550 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_dbell", scope: !10543, file: !10464, line: 571, baseType: !2014, size: 32, offset: 192)
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10543, file: !10464, line: 572, baseType: !10552, size: 3840, offset: 224)
!10552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 3840, elements: !10553)
!10553 = !{!10554}
!10554 = !DISubrange(count: 120)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "initializing", scope: !10543, file: !10464, line: 573, baseType: !2014, size: 32, offset: 4064)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10543, file: !10464, line: 574, baseType: !10557, size: 512, offset: 4096)
!10557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "health_buffer", file: !10464, line: 543, size: 512, elements: !10558)
!10558 = !{!10559, !10561, !10563, !10564, !10565, !10566, !10567, !10568, !10569, !10570, !10571}
!10559 = !DIDerivedType(tag: DW_TAG_member, name: "assert_var", scope: !10557, file: !10464, line: 544, baseType: !10560, size: 160)
!10560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 160, elements: !1587)
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10557, file: !10464, line: 545, baseType: !10562, size: 96, offset: 160)
!10562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 96, elements: !81)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "assert_exit_ptr", scope: !10557, file: !10464, line: 546, baseType: !2014, size: 32, offset: 256)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "assert_callra", scope: !10557, file: !10464, line: 547, baseType: !2014, size: 32, offset: 288)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10557, file: !10464, line: 548, baseType: !4602, size: 64, offset: 320)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver", scope: !10557, file: !10464, line: 549, baseType: !2014, size: 32, offset: 384)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "hw_id", scope: !10557, file: !10464, line: 550, baseType: !2014, size: 32, offset: 416)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "rfr", scope: !10557, file: !10464, line: 551, baseType: !2014, size: 32, offset: 448)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "irisc_index", scope: !10557, file: !10464, line: 552, baseType: !1398, size: 8, offset: 480)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "synd", scope: !10557, file: !10464, line: 553, baseType: !1398, size: 8, offset: 488)
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "ext_synd", scope: !10557, file: !10464, line: 554, baseType: !2032, size: 16, offset: 496)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !10543, file: !10464, line: 575, baseType: !10573, size: 28160, offset: 4608)
!10573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 28160, elements: !10574)
!10574 = !{!10575}
!10575 = !DISubrange(count: 880)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "internal_timer_h", scope: !10543, file: !10464, line: 576, baseType: !2014, size: 32, offset: 32768)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "internal_timer_l", scope: !10543, file: !10464, line: 577, baseType: !2014, size: 32, offset: 32800)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !10543, file: !10464, line: 578, baseType: !4602, size: 64, offset: 32832)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "health_counter", scope: !10543, file: !10464, line: 579, baseType: !2014, size: 32, offset: 32896)
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !10543, file: !10464, line: 580, baseType: !10581, size: 32608, offset: 32928)
!10581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 32608, elements: !10582)
!10582 = !{!10583}
!10583 = !DISubrange(count: 1019)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "ieee1588_clk", scope: !10543, file: !10464, line: 581, baseType: !10471, size: 64, offset: 65536)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "ieee1588_clk_type", scope: !10543, file: !10464, line: 582, baseType: !2014, size: 32, offset: 65600)
!10586 = !DIDerivedType(tag: DW_TAG_member, name: "clr_intx", scope: !10543, file: !10464, line: 583, baseType: !2014, size: 32, offset: 65632)
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "bar_addr", scope: !8, file: !9, line: 693, baseType: !8441, size: 64, offset: 1453376)
!10588 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8, file: !9, line: 694, baseType: !10589, size: 32, offset: 1453440)
!10589 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_device_state", file: !9, line: 591, baseType: !194, size: 32, elements: !10590)
!10590 = !{!10591, !10592, !10593}
!10591 = !DIEnumerator(name: "MLX5_DEVICE_STATE_UNINITIALIZED", value: 0, isUnsigned: true)
!10592 = !DIEnumerator(name: "MLX5_DEVICE_STATE_UP", value: 1, isUnsigned: true)
!10593 = !DIEnumerator(name: "MLX5_DEVICE_STATE_INTERNAL_ERROR", value: 2, isUnsigned: true)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "intf_state_mutex", scope: !8, file: !9, line: 696, baseType: !553, size: 192, offset: 1453504)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "intf_state", scope: !8, file: !9, line: 697, baseType: !130, size: 64, offset: 1453696)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8, file: !9, line: 698, baseType: !10597, size: 8128, offset: 1453760)
!10597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_priv", file: !9, line: 537, size: 8128, elements: !10598)
!10598 = !{!10599, !10602, !10605, !10606, !10607, !10608, !10609, !10610, !10611, !10612, !10613, !10636, !10637, !10638, !10639, !10640, !10641, !10642, !10643, !10644, !10645, !10646, !10647, !10648, !10651, !10787, !10790, !11129, !11150, !11153, !11156, !11159, !11165, !11192, !11208, !11217}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "irq_table", scope: !10597, file: !9, line: 539, baseType: !10600, size: 64)
!10600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10601, size: 64)
!10601 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_irq_table", file: !9, line: 506, flags: DIFlagFwdDecl)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "eq_table", scope: !10597, file: !9, line: 540, baseType: !10603, size: 64, offset: 64)
!10603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10604, size: 64)
!10604 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eq_table", file: !9, line: 505, flags: DIFlagFwdDecl)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "pg_nb", scope: !10597, file: !9, line: 543, baseType: !10376, size: 256, offset: 128)
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "pg_wq", scope: !10597, file: !9, line: 544, baseType: !2573, size: 64, offset: 384)
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "page_root_xa", scope: !10597, file: !9, line: 545, baseType: !618, size: 128, offset: 448)
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "fw_pages", scope: !10597, file: !9, line: 546, baseType: !6, size: 32, offset: 576)
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pages", scope: !10597, file: !9, line: 547, baseType: !627, size: 32, offset: 608)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !10597, file: !9, line: 548, baseType: !25, size: 128, offset: 640)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_pages", scope: !10597, file: !9, line: 549, baseType: !6, size: 32, offset: 768)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "peer_pf_pages", scope: !10597, file: !9, line: 550, baseType: !6, size: 32, offset: 800)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10597, file: !9, line: 552, baseType: !10614, size: 2112, offset: 832)
!10614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_health", file: !9, line: 426, size: 2112, elements: !10615)
!10615 = !{!10616, !10618, !10620, !10621, !10622, !10623, !10624, !10625, !10626, !10627, !10628, !10629, !10630, !10631, !10632, !10635}
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10614, file: !9, line: 427, baseType: !10617, size: 64)
!10617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10557, size: 64)
!10618 = !DIDerivedType(tag: DW_TAG_member, name: "health_counter", scope: !10614, file: !9, line: 428, baseType: !10619, size: 64, offset: 64)
!10619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!10620 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !10614, file: !9, line: 429, baseType: !2561, size: 320, offset: 128)
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10614, file: !9, line: 430, baseType: !224, size: 32, offset: 448)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "miss_counter", scope: !10614, file: !9, line: 431, baseType: !6, size: 32, offset: 480)
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "synd", scope: !10614, file: !9, line: 432, baseType: !1398, size: 8, offset: 512)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_error", scope: !10614, file: !9, line: 433, baseType: !224, size: 32, offset: 544)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "crdump_size", scope: !10614, file: !9, line: 434, baseType: !224, size: 32, offset: 576)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "wq_lock", scope: !10614, file: !9, line: 436, baseType: !39, offset: 608)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10614, file: !9, line: 437, baseType: !2573, size: 64, offset: 640)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10614, file: !9, line: 438, baseType: !130, size: 64, offset: 704)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_report_work", scope: !10614, file: !9, line: 439, baseType: !1723, size: 256, offset: 768)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "report_work", scope: !10614, file: !9, line: 440, baseType: !1723, size: 256, offset: 1024)
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "recover_work", scope: !10614, file: !9, line: 441, baseType: !2557, size: 704, offset: 1280)
!10632 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reporter", scope: !10614, file: !9, line: 442, baseType: !10633, size: 64, offset: 1984)
!10633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10634, size: 64)
!10634 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_health_reporter", file: !3869, line: 629, flags: DIFlagFwdDecl)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "fw_fatal_reporter", scope: !10614, file: !9, line: 443, baseType: !10633, size: 64, offset: 2048)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "qp_debugfs", scope: !10597, file: !9, line: 555, baseType: !190, size: 64, offset: 2944)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "eq_debugfs", scope: !10597, file: !9, line: 556, baseType: !190, size: 64, offset: 3008)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "cq_debugfs", scope: !10597, file: !9, line: 557, baseType: !190, size: 64, offset: 3072)
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_debugfs", scope: !10597, file: !9, line: 558, baseType: !190, size: 64, offset: 3136)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mutex", scope: !10597, file: !9, line: 563, baseType: !553, size: 192, offset: 3200)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !10597, file: !9, line: 564, baseType: !6, size: 32, offset: 3392)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "pgdir_mutex", scope: !10597, file: !9, line: 566, baseType: !553, size: 192, offset: 3456)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "pgdir_list", scope: !10597, file: !9, line: 567, baseType: !25, size: 128, offset: 3648)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_root", scope: !10597, file: !9, line: 569, baseType: !190, size: 64, offset: 3776)
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !10597, file: !9, line: 571, baseType: !25, size: 128, offset: 3840)
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_list", scope: !10597, file: !9, line: 572, baseType: !25, size: 128, offset: 3968)
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_lock", scope: !10597, file: !9, line: 573, baseType: !39, offset: 4096)
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !10597, file: !9, line: 574, baseType: !10649, size: 64, offset: 4096)
!10649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10650, size: 64)
!10650 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_events", file: !9, line: 499, flags: DIFlagFwdDecl)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "steering", scope: !10597, file: !9, line: 576, baseType: !10652, size: 64, offset: 4160)
!10652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10653, size: 64)
!10653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_steering", file: !10654, line: 117, size: 896, elements: !10655)
!10654 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/fs_core.h", directory: "/home/lizy2001/genbc/linux")
!10655 = !{!10656, !10657, !10662, !10663, !10664, !10776, !10777, !10779, !10781, !10782, !10783, !10784, !10785, !10786}
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10653, file: !10654, line: 118, baseType: !7, size: 64)
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10653, file: !10654, line: 119, baseType: !10658, size: 32, offset: 64)
!10658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_steering_mode", file: !10654, line: 112, baseType: !194, size: 32, elements: !10659)
!10659 = !{!10660, !10661}
!10660 = !DIEnumerator(name: "MLX5_FLOW_STEERING_MODE_DMFS", value: 0, isUnsigned: true)
!10661 = !DIEnumerator(name: "MLX5_FLOW_STEERING_MODE_SMFS", value: 1, isUnsigned: true)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "fgs_cache", scope: !10653, file: !10654, line: 120, baseType: !980, size: 64, offset: 128)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "ftes_cache", scope: !10653, file: !10654, line: 121, baseType: !980, size: 64, offset: 192)
!10664 = !DIDerivedType(tag: DW_TAG_member, name: "root_ns", scope: !10653, file: !10654, line: 122, baseType: !10665, size: 64, offset: 256)
!10665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10666, size: 64)
!10666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_root_namespace", file: !10654, line: 258, size: 1728, elements: !10667)
!10667 = !{!10668, !10705, !10706, !10714, !10727, !10728, !10770, !10771, !10772}
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !10666, file: !10654, line: 259, baseType: !10669, size: 1024)
!10669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_namespace", file: !10654, line: 234, size: 1024, elements: !10670)
!10670 = !{!10671, !10698}
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10669, file: !10654, line: 236, baseType: !10672, size: 960)
!10672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_node", file: !10654, line: 134, size: 960, elements: !10673)
!10673 = !{!10674, !10675, !10676, !10686, !10688, !10689, !10690, !10691, !10692, !10696, !10697}
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10672, file: !10654, line: 135, baseType: !25, size: 128)
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10672, file: !10654, line: 136, baseType: !25, size: 128, offset: 128)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10672, file: !10654, line: 137, baseType: !10677, size: 32, offset: 256)
!10677 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_node_type", file: !10654, line: 80, baseType: !194, size: 32, elements: !10678)
!10678 = !{!10679, !10680, !10681, !10682, !10683, !10684, !10685}
!10679 = !DIEnumerator(name: "FS_TYPE_NAMESPACE", value: 0, isUnsigned: true)
!10680 = !DIEnumerator(name: "FS_TYPE_PRIO", value: 1, isUnsigned: true)
!10681 = !DIEnumerator(name: "FS_TYPE_PRIO_CHAINS", value: 2, isUnsigned: true)
!10682 = !DIEnumerator(name: "FS_TYPE_FLOW_TABLE", value: 3, isUnsigned: true)
!10683 = !DIEnumerator(name: "FS_TYPE_FLOW_GROUP", value: 4, isUnsigned: true)
!10684 = !DIEnumerator(name: "FS_TYPE_FLOW_ENTRY", value: 5, isUnsigned: true)
!10685 = !DIEnumerator(name: "FS_TYPE_FLOW_DEST", value: 6, isUnsigned: true)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10672, file: !10654, line: 138, baseType: !10687, size: 64, offset: 320)
!10687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10672, size: 64)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10672, file: !10654, line: 139, baseType: !10687, size: 64, offset: 384)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10672, file: !10654, line: 141, baseType: !647, size: 256, offset: 448)
!10690 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10672, file: !10654, line: 142, baseType: !875, size: 32, offset: 704)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !10672, file: !10654, line: 143, baseType: !299, size: 8, offset: 736)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "del_hw_func", scope: !10672, file: !10654, line: 144, baseType: !10693, size: 64, offset: 768)
!10693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10694, size: 64)
!10694 = !DISubroutineType(types: !10695)
!10695 = !{null, !10687}
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "del_sw_func", scope: !10672, file: !10654, line: 145, baseType: !10693, size: 64, offset: 832)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10672, file: !10654, line: 146, baseType: !627, size: 32, offset: 896)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "def_miss_action", scope: !10669, file: !10654, line: 237, baseType: !10699, size: 32, offset: 960)
!10699 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_table_miss_action", file: !10700, line: 1632, baseType: !194, size: 32, elements: !10701)
!10700 = !DIFile(filename: "./include/linux/mlx5/mlx5_ifc.h", directory: "/home/lizy2001/genbc/linux")
!10701 = !{!10702, !10703, !10704}
!10702 = !DIEnumerator(name: "MLX5_FLOW_TABLE_MISS_ACTION_DEF", value: 0, isUnsigned: true)
!10703 = !DIEnumerator(name: "MLX5_FLOW_TABLE_MISS_ACTION_FWD", value: 1, isUnsigned: true)
!10704 = !DIEnumerator(name: "MLX5_FLOW_TABLE_MISS_ACTION_SWITCH_DOMAIN", value: 2, isUnsigned: true)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10666, file: !10654, line: 260, baseType: !10658, size: 32, offset: 1024)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "fs_dr_domain", scope: !10666, file: !10654, line: 261, baseType: !10707, size: 64, offset: 1088)
!10707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_domain", file: !10708, line: 28, size: 64, elements: !10709)
!10708 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/steering/fs_dr.h", directory: "/home/lizy2001/genbc/linux")
!10709 = !{!10710}
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "dr_domain", scope: !10707, file: !10708, line: 29, baseType: !10711, size: 64)
!10711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10712, size: 64)
!10712 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_domain", file: !10713, line: 7, flags: DIFlagFwdDecl)
!10713 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/steering/mlx5dr.h", directory: "/home/lizy2001/genbc/linux")
!10714 = !DIDerivedType(tag: DW_TAG_member, name: "table_type", scope: !10666, file: !10654, line: 262, baseType: !10715, size: 32, offset: 1152)
!10715 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_flow_table_type", file: !10654, line: 90, baseType: !194, size: 32, elements: !10716)
!10716 = !{!10717, !10718, !10719, !10720, !10721, !10722, !10723, !10724, !10725, !10726}
!10717 = !DIEnumerator(name: "FS_FT_NIC_RX", value: 0, isUnsigned: true)
!10718 = !DIEnumerator(name: "FS_FT_NIC_TX", value: 1, isUnsigned: true)
!10719 = !DIEnumerator(name: "FS_FT_ESW_EGRESS_ACL", value: 2, isUnsigned: true)
!10720 = !DIEnumerator(name: "FS_FT_ESW_INGRESS_ACL", value: 3, isUnsigned: true)
!10721 = !DIEnumerator(name: "FS_FT_FDB", value: 4, isUnsigned: true)
!10722 = !DIEnumerator(name: "FS_FT_SNIFFER_RX", value: 5, isUnsigned: true)
!10723 = !DIEnumerator(name: "FS_FT_SNIFFER_TX", value: 6, isUnsigned: true)
!10724 = !DIEnumerator(name: "FS_FT_RDMA_RX", value: 7, isUnsigned: true)
!10725 = !DIEnumerator(name: "FS_FT_RDMA_TX", value: 8, isUnsigned: true)
!10726 = !DIEnumerator(name: "FS_FT_MAX_TYPE", value: 8, isUnsigned: true)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10666, file: !10654, line: 263, baseType: !7, size: 64, offset: 1216)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "root_ft", scope: !10666, file: !10654, line: 264, baseType: !10729, size: 64, offset: 1280)
!10729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10730, size: 64)
!10730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_table", file: !10654, line: 166, size: 3008, elements: !10731)
!10731 = !{!10732, !10733, !10742, !10743, !10744, !10745, !10746, !10747, !10752, !10760, !10761, !10762, !10763, !10767, !10768}
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10730, file: !10654, line: 167, baseType: !10672, size: 960)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "fs_dr_table", scope: !10730, file: !10654, line: 168, baseType: !10734, size: 128, offset: 960)
!10734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_table", file: !10708, line: 36, size: 128, elements: !10735)
!10735 = !{!10736, !10739}
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "dr_table", scope: !10734, file: !10708, line: 37, baseType: !10737, size: 64)
!10737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10738, size: 64)
!10738 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_table", file: !10713, line: 8, flags: DIFlagFwdDecl)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "miss_action", scope: !10734, file: !10708, line: 38, baseType: !10740, size: 64, offset: 64)
!10740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10741, size: 64)
!10741 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_action", file: !10713, line: 11, flags: DIFlagFwdDecl)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10730, file: !10654, line: 169, baseType: !224, size: 32, offset: 1088)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !10730, file: !10654, line: 170, baseType: !739, size: 16, offset: 1120)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "max_fte", scope: !10730, file: !10654, line: 171, baseType: !194, size: 32, offset: 1152)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !10730, file: !10654, line: 172, baseType: !194, size: 32, offset: 1184)
!10746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10730, file: !10654, line: 173, baseType: !10715, size: 32, offset: 1216)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "op_mod", scope: !10730, file: !10654, line: 174, baseType: !10748, size: 32, offset: 1248)
!10748 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_flow_table_op_mod", file: !10654, line: 103, baseType: !194, size: 32, elements: !10749)
!10749 = !{!10750, !10751}
!10750 = !DIEnumerator(name: "FS_FT_OP_MOD_NORMAL", value: 0, isUnsigned: true)
!10751 = !DIEnumerator(name: "FS_FT_OP_MOD_LAG_DEMUX", value: 1, isUnsigned: true)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "autogroup", scope: !10730, file: !10654, line: 181, baseType: !10753, size: 160, offset: 1280)
!10753 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10730, file: !10654, line: 175, size: 160, elements: !10754)
!10754 = !{!10755, !10756, !10757, !10758, !10759}
!10755 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !10753, file: !10654, line: 176, baseType: !299, size: 8)
!10756 = !DIDerivedType(tag: DW_TAG_member, name: "required_groups", scope: !10753, file: !10654, line: 177, baseType: !194, size: 32, offset: 32)
!10757 = !DIDerivedType(tag: DW_TAG_member, name: "group_size", scope: !10753, file: !10654, line: 178, baseType: !194, size: 32, offset: 64)
!10758 = !DIDerivedType(tag: DW_TAG_member, name: "num_groups", scope: !10753, file: !10654, line: 179, baseType: !194, size: 32, offset: 96)
!10759 = !DIDerivedType(tag: DW_TAG_member, name: "max_fte", scope: !10753, file: !10654, line: 180, baseType: !194, size: 32, offset: 128)
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10730, file: !10654, line: 183, baseType: !553, size: 192, offset: 1472)
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "fwd_rules", scope: !10730, file: !10654, line: 185, baseType: !25, size: 128, offset: 1664)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10730, file: !10654, line: 186, baseType: !224, size: 32, offset: 1792)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "fgs_hash", scope: !10730, file: !10654, line: 187, baseType: !10764, size: 1024, offset: 1856)
!10764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhltable", file: !6861, line: 97, size: 1024, elements: !10765)
!10765 = !{!10766}
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !10764, file: !6861, line: 98, baseType: !6932, size: 1024)
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "def_miss_action", scope: !10730, file: !10654, line: 188, baseType: !10699, size: 32, offset: 2880)
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !10730, file: !10654, line: 189, baseType: !10769, size: 64, offset: 2944)
!10769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10669, size: 64)
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "chain_lock", scope: !10666, file: !10654, line: 266, baseType: !553, size: 192, offset: 1344)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "underlay_qpns", scope: !10666, file: !10654, line: 267, baseType: !25, size: 128, offset: 1536)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !10666, file: !10654, line: 268, baseType: !10773, size: 64, offset: 1664)
!10773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10774, size: 64)
!10774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10775)
!10775 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_cmds", file: !10708, line: 45, flags: DIFlagFwdDecl)
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_root_ns", scope: !10653, file: !10654, line: 123, baseType: !10665, size: 64, offset: 320)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_sub_ns", scope: !10653, file: !10654, line: 124, baseType: !10778, size: 64, offset: 384)
!10778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10769, size: 64)
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "esw_egress_root_ns", scope: !10653, file: !10654, line: 125, baseType: !10780, size: 64, offset: 448)
!10780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10665, size: 64)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "esw_ingress_root_ns", scope: !10653, file: !10654, line: 126, baseType: !10780, size: 64, offset: 512)
!10782 = !DIDerivedType(tag: DW_TAG_member, name: "sniffer_tx_root_ns", scope: !10653, file: !10654, line: 127, baseType: !10665, size: 64, offset: 576)
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "sniffer_rx_root_ns", scope: !10653, file: !10654, line: 128, baseType: !10665, size: 64, offset: 640)
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_rx_root_ns", scope: !10653, file: !10654, line: 129, baseType: !10665, size: 64, offset: 704)
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_tx_root_ns", scope: !10653, file: !10654, line: 130, baseType: !10665, size: 64, offset: 768)
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "egress_root_ns", scope: !10653, file: !10654, line: 131, baseType: !10665, size: 64, offset: 832)
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "mpfs", scope: !10597, file: !9, line: 577, baseType: !10788, size: 64, offset: 4224)
!10788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10789, size: 64)
!10789 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_mpfs", file: !9, line: 500, flags: DIFlagFwdDecl)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch", scope: !10597, file: !9, line: 578, baseType: !10791, size: 64, offset: 4288)
!10791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10792, size: 64)
!10792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch", file: !10793, line: 244, size: 102976, elements: !10794)
!10793 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/eswitch.h", directory: "/home/lizy2001/genbc/linux")
!10794 = !{!10795, !10796, !10797, !10943, !10944, !10956, !10957, !11048, !11049, !11050, !11051, !11052, !11053, !11058, !11117, !11118, !11119, !11120, !11125}
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10792, file: !10793, line: 245, baseType: !7, size: 64)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !10792, file: !10793, line: 246, baseType: !10376, size: 256, offset: 64)
!10797 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_table", scope: !10792, file: !10793, line: 247, baseType: !10798, size: 17280, offset: 320)
!10798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_fdb", file: !10793, line: 162, size: 17280, elements: !10799)
!10799 = !{!10800, !10942}
!10800 = !DIDerivedType(tag: DW_TAG_member, scope: !10798, file: !10793, line: 163, baseType: !10801, size: 17216)
!10801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10798, file: !10793, line: 163, size: 17216, elements: !10802)
!10802 = !{!10803, !10917}
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !10801, file: !10793, line: 172, baseType: !10804, size: 448)
!10804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "legacy_fdb", file: !10793, line: 164, size: 448, elements: !10805)
!10805 = !{!10806, !10807, !10840, !10841, !10842, !10843, !10916}
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "fdb", scope: !10804, file: !10793, line: 165, baseType: !10729, size: 64)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "addr_grp", scope: !10804, file: !10793, line: 166, baseType: !10808, size: 64, offset: 64)
!10808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10809, size: 64)
!10809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_group", file: !10654, line: 246, size: 5056, elements: !10810)
!10810 = !{!10811, !10812, !10818, !10826, !10827, !10828, !10832, !10833, !10834}
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10809, file: !10654, line: 247, baseType: !10672, size: 960)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "fs_dr_matcher", scope: !10809, file: !10654, line: 248, baseType: !10813, size: 64, offset: 960)
!10813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_matcher", file: !10708, line: 32, size: 64, elements: !10814)
!10814 = !{!10815}
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "dr_matcher", scope: !10813, file: !10708, line: 33, baseType: !10816, size: 64)
!10816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10817, size: 64)
!10817 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_matcher", file: !10713, line: 9, flags: DIFlagFwdDecl)
!10818 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !10809, file: !10654, line: 249, baseType: !10819, size: 2592, offset: 1024)
!10819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_group_mask", file: !10654, line: 240, size: 2592, elements: !10820)
!10820 = !{!10821, !10822}
!10821 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria_enable", scope: !10819, file: !10654, line: 241, baseType: !1398, size: 8)
!10822 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria", scope: !10819, file: !10654, line: 242, baseType: !10823, size: 2560, offset: 32)
!10823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 2560, elements: !10824)
!10824 = !{!10825}
!10825 = !DISubrange(count: 80)
!10826 = !DIDerivedType(tag: DW_TAG_member, name: "start_index", scope: !10809, file: !10654, line: 250, baseType: !224, size: 32, offset: 3616)
!10827 = !DIDerivedType(tag: DW_TAG_member, name: "max_ftes", scope: !10809, file: !10654, line: 251, baseType: !224, size: 32, offset: 3648)
!10828 = !DIDerivedType(tag: DW_TAG_member, name: "fte_allocator", scope: !10809, file: !10654, line: 252, baseType: !10829, size: 128, offset: 3712)
!10829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !1557, line: 244, size: 128, elements: !10830)
!10830 = !{!10831}
!10831 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !10829, file: !1557, line: 245, baseType: !618, size: 128)
!10832 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10809, file: !10654, line: 253, baseType: !224, size: 32, offset: 3840)
!10833 = !DIDerivedType(tag: DW_TAG_member, name: "ftes_hash", scope: !10809, file: !10654, line: 254, baseType: !6932, size: 1024, offset: 3904)
!10834 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !10809, file: !10654, line: 255, baseType: !10835, size: 128, offset: 4928)
!10835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhlist_head", file: !6861, line: 21, size: 128, elements: !10836)
!10836 = !{!10837, !10838}
!10837 = !DIDerivedType(tag: DW_TAG_member, name: "rhead", scope: !10835, file: !6861, line: 22, baseType: !6860, size: 64)
!10838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10835, file: !6861, line: 23, baseType: !10839, size: 64, offset: 64)
!10839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10835, size: 64)
!10840 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti_grp", scope: !10804, file: !10793, line: 167, baseType: !10808, size: 64, offset: 128)
!10841 = !DIDerivedType(tag: DW_TAG_member, name: "promisc_grp", scope: !10804, file: !10793, line: 168, baseType: !10808, size: 64, offset: 192)
!10842 = !DIDerivedType(tag: DW_TAG_member, name: "vepa_fdb", scope: !10804, file: !10793, line: 169, baseType: !10729, size: 64, offset: 256)
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "vepa_uplink_rule", scope: !10804, file: !10793, line: 170, baseType: !10844, size: 64, offset: 320)
!10844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10845, size: 64)
!10845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_handle", file: !10654, line: 160, size: 64, elements: !10846)
!10846 = !{!10847, !10848}
!10847 = !DIDerivedType(tag: DW_TAG_member, name: "num_rules", scope: !10845, file: !10654, line: 161, baseType: !6, size: 32)
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "rule", scope: !10845, file: !10654, line: 162, baseType: !10849, offset: 64)
!10849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10850, elements: !2184)
!10850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10851, size: 64)
!10851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_rule", file: !10654, line: 149, size: 1472, elements: !10852)
!10852 = !{!10853, !10854, !10855, !10914, !10915}
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10851, file: !10654, line: 150, baseType: !10672, size: 960)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !10851, file: !10654, line: 151, baseType: !10729, size: 64, offset: 960)
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "dest_attr", scope: !10851, file: !10654, line: 152, baseType: !10856, size: 256, offset: 1024)
!10856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_destination", file: !10857, line: 122, size: 256, elements: !10858)
!10857 = !DIFile(filename: "./include/linux/mlx5/fs.h", directory: "/home/lizy2001/genbc/linux")
!10858 = !{!10859, !10868}
!10859 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10856, file: !10857, line: 123, baseType: !10860, size: 32)
!10860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_destination_type", file: !10700, line: 1622, baseType: !194, size: 32, elements: !10861)
!10861 = !{!10862, !10863, !10864, !10865, !10866, !10867}
!10862 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_VPORT", value: 0, isUnsigned: true)
!10863 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE", value: 1, isUnsigned: true)
!10864 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_TIR", value: 2, isUnsigned: true)
!10865 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_PORT", value: 153, isUnsigned: true)
!10866 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_COUNTER", value: 256, isUnsigned: true)
!10867 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE_NUM", value: 257, isUnsigned: true)
!10868 = !DIDerivedType(tag: DW_TAG_member, scope: !10856, file: !10857, line: 124, baseType: !10869, size: 192, offset: 64)
!10869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10856, file: !10857, line: 124, size: 192, elements: !10870)
!10870 = !{!10871, !10872, !10873, !10874, !10875}
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "tir_num", scope: !10869, file: !10857, line: 125, baseType: !224, size: 32)
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "ft_num", scope: !10869, file: !10857, line: 126, baseType: !224, size: 32)
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !10869, file: !10857, line: 127, baseType: !10729, size: 64)
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "counter_id", scope: !10869, file: !10857, line: 128, baseType: !224, size: 32)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !10869, file: !10857, line: 134, baseType: !10876, size: 192)
!10876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10869, file: !10857, line: 129, size: 192, elements: !10877)
!10877 = !{!10878, !10879, !10880, !10913}
!10878 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !10876, file: !10857, line: 130, baseType: !739, size: 16)
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "vhca_id", scope: !10876, file: !10857, line: 131, baseType: !739, size: 16, offset: 16)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_reformat", scope: !10876, file: !10857, line: 132, baseType: !10881, size: 64, offset: 64)
!10881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10882, size: 64)
!10882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_pkt_reformat", file: !10654, line: 60, size: 128, elements: !10883)
!10883 = !{!10884, !10904, !10905}
!10884 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !10882, file: !10654, line: 61, baseType: !10885, size: 32)
!10885 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_namespace_type", file: !10857, line: 65, baseType: !194, size: 32, elements: !10886)
!10886 = !{!10887, !10888, !10889, !10890, !10891, !10892, !10893, !10894, !10895, !10896, !10897, !10898, !10899, !10900, !10901, !10902, !10903}
!10887 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_BYPASS", value: 0, isUnsigned: true)
!10888 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_LAG", value: 1, isUnsigned: true)
!10889 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_OFFLOADS", value: 2, isUnsigned: true)
!10890 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ETHTOOL", value: 3, isUnsigned: true)
!10891 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_KERNEL", value: 4, isUnsigned: true)
!10892 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_LEFTOVERS", value: 5, isUnsigned: true)
!10893 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ANCHOR", value: 6, isUnsigned: true)
!10894 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_FDB", value: 7, isUnsigned: true)
!10895 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ESW_EGRESS", value: 8, isUnsigned: true)
!10896 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ESW_INGRESS", value: 9, isUnsigned: true)
!10897 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_SNIFFER_RX", value: 10, isUnsigned: true)
!10898 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_SNIFFER_TX", value: 11, isUnsigned: true)
!10899 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_EGRESS", value: 12, isUnsigned: true)
!10900 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_EGRESS_KERNEL", value: 13, isUnsigned: true)
!10901 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_RDMA_RX", value: 14, isUnsigned: true)
!10902 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_RDMA_RX_KERNEL", value: 15, isUnsigned: true)
!10903 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_RDMA_TX", value: 16, isUnsigned: true)
!10904 = !DIDerivedType(tag: DW_TAG_member, name: "reformat_type", scope: !10882, file: !10654, line: 62, baseType: !6, size: 32, offset: 32)
!10905 = !DIDerivedType(tag: DW_TAG_member, scope: !10882, file: !10654, line: 63, baseType: !10906, size: 64, offset: 64)
!10906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10882, file: !10654, line: 63, size: 64, elements: !10907)
!10907 = !{!10908, !10912}
!10908 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !10906, file: !10654, line: 64, baseType: !10909, size: 64)
!10909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_action", file: !10708, line: 13, size: 64, elements: !10910)
!10910 = !{!10911}
!10911 = !DIDerivedType(tag: DW_TAG_member, name: "dr_action", scope: !10909, file: !10708, line: 14, baseType: !10740, size: 64)
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10906, file: !10654, line: 65, baseType: !224, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10876, file: !10857, line: 133, baseType: !1398, size: 8, offset: 128)
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "next_ft", scope: !10851, file: !10654, line: 156, baseType: !25, size: 128, offset: 1280)
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "sw_action", scope: !10851, file: !10654, line: 157, baseType: !224, size: 32, offset: 1408)
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "vepa_star_rule", scope: !10804, file: !10793, line: 171, baseType: !10844, size: 64, offset: 384)
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !10801, file: !10793, line: 192, baseType: !10918, size: 17216)
!10918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "offloads_fdb", file: !10793, line: 174, size: 17216, elements: !10919)
!10919 = !{!10920, !10921, !10922, !10923, !10924, !10926, !10927, !10928, !10929, !10930, !10934}
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !10918, file: !10793, line: 175, baseType: !10769, size: 64)
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "slow_fdb", scope: !10918, file: !10793, line: 176, baseType: !10729, size: 64, offset: 64)
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "send_to_vport_grp", scope: !10918, file: !10793, line: 177, baseType: !10808, size: 64, offset: 128)
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "peer_miss_grp", scope: !10918, file: !10793, line: 178, baseType: !10808, size: 64, offset: 192)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "peer_miss_rules", scope: !10918, file: !10793, line: 179, baseType: !10925, size: 64, offset: 256)
!10925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10844, size: 64)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "miss_grp", scope: !10918, file: !10793, line: 180, baseType: !10808, size: 64, offset: 320)
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "miss_rule_uni", scope: !10918, file: !10793, line: 181, baseType: !10844, size: 64, offset: 384)
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "miss_rule_multi", scope: !10918, file: !10793, line: 182, baseType: !10844, size: 64, offset: 448)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_push_pop_refcount", scope: !10918, file: !10793, line: 183, baseType: !6, size: 32, offset: 512)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "esw_chains_priv", scope: !10918, file: !10793, line: 185, baseType: !10931, size: 64, offset: 576)
!10931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10932, size: 64)
!10932 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_chains", file: !10933, line: 9, flags: DIFlagFwdDecl)
!10933 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/lib/fs_chains.h", directory: "/home/lizy2001/genbc/linux")
!10934 = !DIDerivedType(tag: DW_TAG_member, name: "vports", scope: !10918, file: !10793, line: 190, baseType: !10935, size: 16576, offset: 640)
!10935 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10918, file: !10793, line: 186, size: 16576, elements: !10936)
!10936 = !{!10937, !10941}
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !10935, file: !10793, line: 187, baseType: !10938, size: 16384)
!10938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 16384, elements: !10939)
!10939 = !{!10940}
!10940 = !DISubrange(count: 256)
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10935, file: !10793, line: 189, baseType: !553, size: 192, offset: 16384)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10798, file: !10793, line: 194, baseType: !224, size: 32, offset: 17216)
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "mc_table", scope: !10792, file: !10793, line: 249, baseType: !10938, size: 16384, offset: 17600)
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "mc_promisc", scope: !10792, file: !10793, line: 250, baseType: !10945, size: 320, offset: 33984)
!10945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esw_mc_addr", file: !10793, line: 223, size: 320, elements: !10946)
!10946 = !{!10947, !10954, !10955}
!10947 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10945, file: !10793, line: 224, baseType: !10948, size: 192)
!10948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "l2addr_node", file: !10949, line: 43, size: 192, elements: !10950)
!10949 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/lib/mpfs.h", directory: "/home/lizy2001/genbc/linux")
!10950 = !{!10951, !10952}
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !10948, file: !10949, line: 44, baseType: !450, size: 128)
!10952 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !10948, file: !10949, line: 45, baseType: !10953, size: 48, offset: 128)
!10953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 48, elements: !1663)
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "uplink_rule", scope: !10945, file: !10793, line: 225, baseType: !10844, size: 64, offset: 192)
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !10945, file: !10793, line: 226, baseType: !224, size: 32, offset: 256)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "work_queue", scope: !10792, file: !10793, line: 252, baseType: !2573, size: 64, offset: 34304)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "vports", scope: !10792, file: !10793, line: 253, baseType: !10958, size: 64, offset: 34368)
!10958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10959, size: 64)
!10959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport", file: !10793, line: 135, size: 35072, elements: !10960)
!10960 = !{!10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !11000, !11020, !11021, !11022, !11034, !11040, !11041, !11047}
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10959, file: !10793, line: 136, baseType: !7, size: 64)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !10959, file: !10793, line: 137, baseType: !6, size: 32, offset: 64)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "uc_list", scope: !10959, file: !10793, line: 138, baseType: !10938, size: 16384, offset: 128)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !10959, file: !10793, line: 139, baseType: !10938, size: 16384, offset: 16512)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "promisc_rule", scope: !10959, file: !10793, line: 140, baseType: !10844, size: 64, offset: 32896)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti_rule", scope: !10959, file: !10793, line: 141, baseType: !10844, size: 64, offset: 32960)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "vport_change_handler", scope: !10959, file: !10793, line: 142, baseType: !1723, size: 256, offset: 33024)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !10959, file: !10793, line: 144, baseType: !10969, size: 768, offset: 33280)
!10969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vport_ingress", file: !10793, line: 69, size: 768, elements: !10970)
!10970 = !{!10971, !10972, !10973, !10984}
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !10969, file: !10793, line: 70, baseType: !10729, size: 64)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rule", scope: !10969, file: !10793, line: 71, baseType: !10844, size: 64, offset: 64)
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !10969, file: !10793, line: 79, baseType: !10974, size: 384, offset: 128)
!10974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10969, file: !10793, line: 72, size: 384, elements: !10975)
!10975 = !{!10976, !10977, !10978, !10979, !10980, !10981}
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "allow_spoofchk_only_grp", scope: !10974, file: !10793, line: 73, baseType: !10808, size: 64)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "allow_untagged_spoofchk_grp", scope: !10974, file: !10793, line: 74, baseType: !10808, size: 64, offset: 64)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "allow_untagged_only_grp", scope: !10974, file: !10793, line: 75, baseType: !10808, size: 64, offset: 128)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "drop_grp", scope: !10974, file: !10793, line: 76, baseType: !10808, size: 64, offset: 192)
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "drop_rule", scope: !10974, file: !10793, line: 77, baseType: !10844, size: 64, offset: 256)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "drop_counter", scope: !10974, file: !10793, line: 78, baseType: !10982, size: 64, offset: 320)
!10982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10983, size: 64)
!10983 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc", file: !10857, line: 239, flags: DIFlagFwdDecl)
!10984 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !10969, file: !10793, line: 91, baseType: !10985, size: 256, offset: 512)
!10985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10969, file: !10793, line: 80, size: 256, elements: !10986)
!10986 = !{!10987, !10988, !10989, !10999}
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_prio_tag_grp", scope: !10985, file: !10793, line: 84, baseType: !10808, size: 64)
!10988 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_allmatch_grp", scope: !10985, file: !10793, line: 88, baseType: !10808, size: 64, offset: 64)
!10989 = !DIDerivedType(tag: DW_TAG_member, name: "modify_metadata", scope: !10985, file: !10793, line: 89, baseType: !10990, size: 64, offset: 128)
!10990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10991, size: 64)
!10991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_modify_hdr", file: !10654, line: 52, size: 128, elements: !10992)
!10992 = !{!10993, !10994}
!10993 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !10991, file: !10654, line: 53, baseType: !10885, size: 32)
!10994 = !DIDerivedType(tag: DW_TAG_member, scope: !10991, file: !10654, line: 54, baseType: !10995, size: 64, offset: 64)
!10995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10991, file: !10654, line: 54, size: 64, elements: !10996)
!10996 = !{!10997, !10998}
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !10995, file: !10654, line: 55, baseType: !10909, size: 64)
!10998 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10995, file: !10654, line: 56, baseType: !224, size: 32)
!10999 = !DIDerivedType(tag: DW_TAG_member, name: "modify_metadata_rule", scope: !10985, file: !10793, line: 90, baseType: !10844, size: 64, offset: 192)
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "egress", scope: !10959, file: !10793, line: 145, baseType: !11001, size: 384, offset: 34048)
!11001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vport_egress", file: !10793, line: 94, size: 384, elements: !11002)
!11002 = !{!11003, !11004, !11005, !11006}
!11003 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !11001, file: !10793, line: 95, baseType: !10729, size: 64)
!11004 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_vlan", scope: !11001, file: !10793, line: 96, baseType: !10844, size: 64, offset: 64)
!11005 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_grp", scope: !11001, file: !10793, line: 97, baseType: !10808, size: 64, offset: 128)
!11006 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !10793, line: 98, baseType: !11007, size: 192, offset: 192)
!11007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !10793, line: 98, size: 192, elements: !11008)
!11008 = !{!11009, !11015}
!11009 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !11007, file: !10793, line: 103, baseType: !11010, size: 192)
!11010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11007, file: !10793, line: 99, size: 192, elements: !11011)
!11011 = !{!11012, !11013, !11014}
!11012 = !DIDerivedType(tag: DW_TAG_member, name: "drop_grp", scope: !11010, file: !10793, line: 100, baseType: !10808, size: 64)
!11013 = !DIDerivedType(tag: DW_TAG_member, name: "drop_rule", scope: !11010, file: !10793, line: 101, baseType: !10844, size: 64, offset: 64)
!11014 = !DIDerivedType(tag: DW_TAG_member, name: "drop_counter", scope: !11010, file: !10793, line: 102, baseType: !10982, size: 64, offset: 128)
!11015 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !11007, file: !10793, line: 107, baseType: !11016, size: 128)
!11016 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11007, file: !10793, line: 104, size: 128, elements: !11017)
!11017 = !{!11018, !11019}
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "fwd_grp", scope: !11016, file: !10793, line: 105, baseType: !10808, size: 64)
!11019 = !DIDerivedType(tag: DW_TAG_member, name: "fwd_rule", scope: !11016, file: !10793, line: 106, baseType: !10844, size: 64, offset: 64)
!11020 = !DIDerivedType(tag: DW_TAG_member, name: "default_metadata", scope: !10959, file: !10793, line: 146, baseType: !224, size: 32, offset: 34432)
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !10959, file: !10793, line: 147, baseType: !224, size: 32, offset: 34464)
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !10959, file: !10793, line: 149, baseType: !11023, size: 320, offset: 34496)
!11023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport_info", file: !10793, line: 116, size: 320, elements: !11024)
!11024 = !{!11025, !11026, !11027, !11028, !11029, !11030, !11031, !11032, !11033}
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !11023, file: !10793, line: 117, baseType: !10953, size: 48)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !11023, file: !10793, line: 118, baseType: !739, size: 16, offset: 48)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !11023, file: !10793, line: 119, baseType: !1398, size: 8, offset: 64)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !11023, file: !10793, line: 120, baseType: !230, size: 64, offset: 128)
!11029 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !11023, file: !10793, line: 121, baseType: !6, size: 32, offset: 192)
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !11023, file: !10793, line: 122, baseType: !224, size: 32, offset: 224)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !11023, file: !10793, line: 123, baseType: !224, size: 32, offset: 256)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !11023, file: !10793, line: 124, baseType: !299, size: 8, offset: 288)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !11023, file: !10793, line: 125, baseType: !299, size: 8, offset: 296)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !10959, file: !10793, line: 155, baseType: !11035, size: 96, offset: 34816)
!11035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10959, file: !10793, line: 151, size: 96, elements: !11036)
!11036 = !{!11037, !11038, !11039}
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11035, file: !10793, line: 152, baseType: !299, size: 8)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "esw_tsar_ix", scope: !11035, file: !10793, line: 153, baseType: !224, size: 32, offset: 32)
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "bw_share", scope: !11035, file: !10793, line: 154, baseType: !224, size: 32, offset: 64)
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !10959, file: !10793, line: 157, baseType: !299, size: 8, offset: 34912)
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_events", scope: !10959, file: !10793, line: 158, baseType: !11042, size: 32, offset: 34944)
!11042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_eswitch_vport_event", file: !10793, line: 129, baseType: !194, size: 32, elements: !11043)
!11043 = !{!11044, !11045, !11046}
!11044 = !DIEnumerator(name: "MLX5_VPORT_UC_ADDR_CHANGE", value: 1, isUnsigned: true)
!11045 = !DIEnumerator(name: "MLX5_VPORT_MC_ADDR_CHANGE", value: 2, isUnsigned: true)
!11046 = !DIEnumerator(name: "MLX5_VPORT_PROMISC_CHANGE", value: 8, isUnsigned: true)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "dl_port", scope: !10959, file: !10793, line: 159, baseType: !3867, size: 64, offset: 35008)
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10792, file: !10793, line: 254, baseType: !224, size: 32, offset: 34432)
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "total_vports", scope: !10792, file: !10793, line: 255, baseType: !6, size: 32, offset: 34464)
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_vports", scope: !10792, file: !10793, line: 256, baseType: !6, size: 32, offset: 34496)
!11051 = !DIDerivedType(tag: DW_TAG_member, name: "state_lock", scope: !10792, file: !10793, line: 260, baseType: !553, size: 192, offset: 34560)
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "mode_lock", scope: !10792, file: !10793, line: 265, baseType: !553, size: 192, offset: 34752)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !10792, file: !10793, line: 270, baseType: !11054, size: 64, offset: 34944)
!11054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10792, file: !10793, line: 267, size: 64, elements: !11055)
!11055 = !{!11056, !11057}
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11054, file: !10793, line: 268, baseType: !299, size: 8)
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "root_tsar_id", scope: !11054, file: !10793, line: 269, baseType: !224, size: 32, offset: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !10792, file: !10793, line: 272, baseType: !11059, size: 67520, offset: 35008)
!11059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_esw_offload", file: !10793, line: 197, size: 67520, elements: !11060)
!11060 = !{!11061, !11062, !11063, !11064, !11065, !11066, !11081, !11082, !11083, !11084, !11085, !11086, !11087, !11092, !11093, !11094, !11112, !11113, !11114, !11115, !11116}
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "ft_offloads_restore", scope: !11059, file: !10793, line: 198, baseType: !10729, size: 64)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "restore_group", scope: !11059, file: !10793, line: 199, baseType: !10808, size: 64, offset: 64)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "restore_copy_hdr_id", scope: !11059, file: !10793, line: 200, baseType: !10990, size: 64, offset: 128)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "ft_offloads", scope: !11059, file: !10793, line: 202, baseType: !10729, size: 64, offset: 192)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "vport_rx_group", scope: !11059, file: !10793, line: 203, baseType: !10808, size: 64, offset: 256)
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "vport_reps", scope: !11059, file: !10793, line: 204, baseType: !11067, size: 64, offset: 320)
!11067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11068, size: 64)
!11068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_rep", file: !11069, line: 44, size: 384, elements: !11070)
!11069 = !DIFile(filename: "./include/linux/mlx5/eswitch.h", directory: "/home/lizy2001/genbc/linux")
!11070 = !{!11071, !11077, !11078, !11079, !11080}
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "rep_data", scope: !11068, file: !11069, line: 45, baseType: !11072, size: 256)
!11072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11073, size: 256, elements: !1906)
!11073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_rep_data", file: !11069, line: 39, size: 128, elements: !11074)
!11074 = !{!11075, !11076}
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !11073, file: !11069, line: 40, baseType: !154, size: 64)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11073, file: !11069, line: 41, baseType: !627, size: 32, offset: 64)
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !11068, file: !11069, line: 46, baseType: !739, size: 16, offset: 256)
!11078 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !11068, file: !11069, line: 47, baseType: !739, size: 16, offset: 272)
!11079 = !DIDerivedType(tag: DW_TAG_member, name: "vport_index", scope: !11068, file: !11069, line: 49, baseType: !739, size: 16, offset: 288)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_refcount", scope: !11068, file: !11069, line: 50, baseType: !224, size: 32, offset: 320)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "peer_flows", scope: !11059, file: !10793, line: 205, baseType: !25, size: 128, offset: 384)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "peer_mutex", scope: !11059, file: !10793, line: 206, baseType: !553, size: 192, offset: 512)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "encap_tbl_lock", scope: !11059, file: !10793, line: 207, baseType: !553, size: 192, offset: 704)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "encap_tbl", scope: !11059, file: !10793, line: 208, baseType: !10938, size: 16384, offset: 896)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "decap_tbl_lock", scope: !11059, file: !10793, line: 209, baseType: !553, size: 192, offset: 17280)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "decap_tbl", scope: !11059, file: !10793, line: 210, baseType: !10938, size: 16384, offset: 17472)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "mod_hdr", scope: !11059, file: !10793, line: 211, baseType: !11088, size: 16576, offset: 33856)
!11088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mod_hdr_tbl", file: !10857, line: 138, size: 16576, elements: !11089)
!11089 = !{!11090, !11091}
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11088, file: !10857, line: 139, baseType: !553, size: 192)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !11088, file: !10857, line: 140, baseType: !10938, size: 16384, offset: 192)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "termtbl_tbl", scope: !11059, file: !10793, line: 212, baseType: !10938, size: 16384, offset: 50432)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "termtbl_mutex", scope: !11059, file: !10793, line: 213, baseType: !553, size: 192, offset: 66816)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "rep_ops", scope: !11059, file: !10793, line: 214, baseType: !11095, size: 128, offset: 67008)
!11095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11096, size: 128, elements: !1906)
!11096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11097, size: 64)
!11097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11098)
!11098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_rep_ops", file: !11069, line: 33, size: 192, elements: !11099)
!11099 = !{!11100, !11104, !11108}
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !11098, file: !11069, line: 34, baseType: !11101, size: 64)
!11101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11102, size: 64)
!11102 = !DISubroutineType(types: !11103)
!11103 = !{!6, !7, !11067}
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "unload", scope: !11098, file: !11069, line: 35, baseType: !11105, size: 64, offset: 64)
!11105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11106, size: 64)
!11106 = !DISubroutineType(types: !11107)
!11107 = !{null, !11067}
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "get_proto_dev", scope: !11098, file: !11069, line: 36, baseType: !11109, size: 64, offset: 128)
!11109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11110, size: 64)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{!154, !11067}
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "inline_mode", scope: !11059, file: !10793, line: 215, baseType: !1398, size: 8, offset: 67136)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "num_flows", scope: !11059, file: !10793, line: 216, baseType: !559, size: 64, offset: 67200)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "encap", scope: !11059, file: !10793, line: 217, baseType: !4038, size: 32, offset: 67264)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "vport_metadata_ida", scope: !11059, file: !10793, line: 218, baseType: !10829, size: 128, offset: 67328)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "host_number", scope: !11059, file: !10793, line: 219, baseType: !194, size: 32, offset: 67456)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10792, file: !10793, line: 273, baseType: !6, size: 32, offset: 102528)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "manager_vport", scope: !10792, file: !10793, line: 274, baseType: !739, size: 16, offset: 102560)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "first_host_vport", scope: !10792, file: !10793, line: 275, baseType: !739, size: 16, offset: 102576)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "esw_funcs", scope: !10792, file: !10793, line: 276, baseType: !11121, size: 320, offset: 102592)
!11121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_esw_functions", file: !10793, line: 234, size: 320, elements: !11122)
!11122 = !{!11123, !11124}
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !11121, file: !10793, line: 235, baseType: !10376, size: 256)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "num_vfs", scope: !11121, file: !10793, line: 236, baseType: !739, size: 16, offset: 256)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !10792, file: !10793, line: 279, baseType: !11126, size: 32, offset: 102912)
!11126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10792, file: !10793, line: 277, size: 32, elements: !11127)
!11127 = !{!11128}
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "large_group_num", scope: !11126, file: !10793, line: 278, baseType: !224, size: 32)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10597, file: !9, line: 579, baseType: !11130, size: 128, offset: 4352)
!11130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_sriov", file: !9, line: 467, size: 128, elements: !11131)
!11131 = !{!11132, !11148, !11149}
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_ctx", scope: !11130, file: !9, line: 468, baseType: !11133, size: 64)
!11133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11134, size: 64)
!11134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vf_context", file: !9, line: 455, size: 256, elements: !11135)
!11135 = !{!11136, !11137, !11138, !11139, !11140, !11141}
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11134, file: !9, line: 456, baseType: !6, size: 32)
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "port_guid", scope: !11134, file: !9, line: 457, baseType: !230, size: 64, offset: 64)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !11134, file: !9, line: 458, baseType: !230, size: 64, offset: 128)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "port_guid_valid", scope: !11134, file: !9, line: 462, baseType: !1398, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid_valid", scope: !11134, file: !9, line: 463, baseType: !1398, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !11134, file: !9, line: 464, baseType: !11142, size: 32, offset: 224)
!11142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "port_state_policy", file: !9, line: 184, baseType: !194, size: 32, elements: !11143)
!11143 = !{!11144, !11145, !11146, !11147}
!11144 = !DIEnumerator(name: "MLX5_POLICY_DOWN", value: 0, isUnsigned: true)
!11145 = !DIEnumerator(name: "MLX5_POLICY_UP", value: 1, isUnsigned: true)
!11146 = !DIEnumerator(name: "MLX5_POLICY_FOLLOW", value: 2, isUnsigned: true)
!11147 = !DIEnumerator(name: "MLX5_POLICY_INVALID", value: 4294967295, isUnsigned: true)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "num_vfs", scope: !11130, file: !9, line: 469, baseType: !6, size: 32, offset: 64)
!11149 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfs", scope: !11130, file: !9, line: 470, baseType: !739, size: 16, offset: 96)
!11150 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !10597, file: !9, line: 580, baseType: !11151, size: 64, offset: 4480)
!11151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11152, size: 64)
!11152 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_lag", file: !9, line: 502, flags: DIFlagFwdDecl)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "devcom", scope: !10597, file: !9, line: 581, baseType: !11154, size: 64, offset: 4544)
!11154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11155, size: 64)
!11155 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_devcom", file: !9, line: 503, flags: DIFlagFwdDecl)
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reset", scope: !10597, file: !9, line: 582, baseType: !11157, size: 64, offset: 4608)
!11157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11158, size: 64)
!11158 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fw_reset", file: !9, line: 504, flags: DIFlagFwdDecl)
!11159 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !10597, file: !9, line: 583, baseType: !11160, size: 192, offset: 4672)
!11160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_roce", file: !9, line: 531, size: 192, elements: !11161)
!11161 = !{!11162, !11163, !11164}
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !11160, file: !9, line: 532, baseType: !10729, size: 64)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !11160, file: !9, line: 533, baseType: !10808, size: 64, offset: 64)
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rule", scope: !11160, file: !9, line: 534, baseType: !10844, size: 64, offset: 128)
!11165 = !DIDerivedType(tag: DW_TAG_member, name: "fc_stats", scope: !10597, file: !9, line: 584, baseType: !11166, size: 2176, offset: 4864)
!11166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc_stats", file: !9, line: 484, size: 2176, elements: !11167)
!11167 = !{!11168, !11169, !11170, !11171, !11175, !11176, !11177, !11178, !11179, !11180, !11181}
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "counters_idr_lock", scope: !11166, file: !9, line: 485, baseType: !39)
!11169 = !DIDerivedType(tag: DW_TAG_member, name: "counters_idr", scope: !11166, file: !9, line: 486, baseType: !1556, size: 192)
!11170 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !11166, file: !9, line: 487, baseType: !25, size: 128, offset: 192)
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "addlist", scope: !11166, file: !9, line: 488, baseType: !11172, size: 64, offset: 320)
!11172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !168, line: 54, size: 64, elements: !11173)
!11173 = !{!11174}
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !11172, file: !168, line: 55, baseType: !171, size: 64)
!11175 = !DIDerivedType(tag: DW_TAG_member, name: "dellist", scope: !11166, file: !9, line: 489, baseType: !11172, size: 64, offset: 384)
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !11166, file: !9, line: 491, baseType: !2573, size: 64, offset: 448)
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !11166, file: !9, line: 492, baseType: !2557, size: 704, offset: 512)
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "next_query", scope: !11166, file: !9, line: 493, baseType: !130, size: 64, offset: 1216)
!11179 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_interval", scope: !11166, file: !9, line: 494, baseType: !130, size: 64, offset: 1280)
!11180 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_query_out", scope: !11166, file: !9, line: 495, baseType: !1462, size: 64, offset: 1344)
!11181 = !DIDerivedType(tag: DW_TAG_member, name: "fc_pool", scope: !11166, file: !9, line: 496, baseType: !11182, size: 768, offset: 1408)
!11182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc_pool", file: !9, line: 473, size: 768, elements: !11183)
!11183 = !{!11184, !11185, !11186, !11187, !11188, !11189, !11190, !11191}
!11184 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11182, file: !9, line: 474, baseType: !7, size: 64)
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "pool_lock", scope: !11182, file: !9, line: 475, baseType: !553, size: 192, offset: 64)
!11186 = !DIDerivedType(tag: DW_TAG_member, name: "fully_used", scope: !11182, file: !9, line: 476, baseType: !25, size: 128, offset: 256)
!11187 = !DIDerivedType(tag: DW_TAG_member, name: "partially_used", scope: !11182, file: !9, line: 477, baseType: !25, size: 128, offset: 384)
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !11182, file: !9, line: 478, baseType: !25, size: 128, offset: 512)
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "available_fcs", scope: !11182, file: !9, line: 479, baseType: !6, size: 32, offset: 640)
!11190 = !DIDerivedType(tag: DW_TAG_member, name: "used_fcs", scope: !11182, file: !9, line: 480, baseType: !6, size: 32, offset: 672)
!11191 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !11182, file: !9, line: 481, baseType: !6, size: 32, offset: 704)
!11192 = !DIDerivedType(tag: DW_TAG_member, name: "rl_table", scope: !10597, file: !9, line: 585, baseType: !11193, size: 384, offset: 7040)
!11193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rl_table", file: !9, line: 522, size: 384, elements: !11194)
!11194 = !{!11195, !11196, !11197, !11198, !11199}
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "rl_lock", scope: !11193, file: !9, line: 524, baseType: !553, size: 192)
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !11193, file: !9, line: 525, baseType: !739, size: 16, offset: 192)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !11193, file: !9, line: 526, baseType: !224, size: 32, offset: 224)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !11193, file: !9, line: 527, baseType: !224, size: 32, offset: 256)
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "rl_entry", scope: !11193, file: !9, line: 528, baseType: !11200, size: 64, offset: 320)
!11200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11201, size: 64)
!11201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rl_entry", file: !9, line: 514, size: 576, elements: !11202)
!11202 = !{!11203, !11204, !11205, !11206, !11207}
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "rl_raw", scope: !11201, file: !9, line: 515, baseType: !2929, size: 384)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11201, file: !9, line: 516, baseType: !739, size: 16, offset: 384)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !11201, file: !9, line: 517, baseType: !230, size: 64, offset: 448)
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !11201, file: !9, line: 518, baseType: !739, size: 16, offset: 512)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "dedicated", scope: !11201, file: !9, line: 519, baseType: !1398, size: 1, offset: 528, flags: DIFlagBitField, extraData: i64 528)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "bfregs", scope: !10597, file: !9, line: 587, baseType: !11209, size: 640, offset: 7424)
!11209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_bfreg_data", file: !9, line: 413, size: 640, elements: !11210)
!11210 = !{!11211, !11216}
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "reg_head", scope: !11209, file: !9, line: 414, baseType: !11212, size: 320)
!11212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_bfreg_head", file: !9, line: 407, size: 320, elements: !11213)
!11213 = !{!11214, !11215}
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11212, file: !9, line: 409, baseType: !553, size: 192)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11212, file: !9, line: 410, baseType: !25, size: 128, offset: 192)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "wc_head", scope: !11209, file: !9, line: 415, baseType: !11212, size: 320, offset: 320)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "uar", scope: !10597, file: !9, line: 588, baseType: !11218, size: 64, offset: 8064)
!11218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11219, size: 64)
!11219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_uars_page", file: !9, line: 393, size: 640, elements: !11220)
!11220 = !{!11221, !11222, !11223, !11224, !11225, !11226, !11227, !11228, !11229, !11230, !11231}
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !11219, file: !9, line: 394, baseType: !154, size: 64)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !11219, file: !9, line: 395, baseType: !299, size: 8, offset: 64)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11219, file: !9, line: 396, baseType: !224, size: 32, offset: 96)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11219, file: !9, line: 397, baseType: !25, size: 128, offset: 128)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "bfregs", scope: !11219, file: !9, line: 398, baseType: !194, size: 32, offset: 256)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "reg_bitmap", scope: !11219, file: !9, line: 399, baseType: !5577, size: 64, offset: 320)
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "fp_bitmap", scope: !11219, file: !9, line: 400, baseType: !5577, size: 64, offset: 384)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "reg_avail", scope: !11219, file: !9, line: 401, baseType: !194, size: 32, offset: 448)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "fp_avail", scope: !11219, file: !9, line: 402, baseType: !194, size: 32, offset: 480)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !11219, file: !9, line: 403, baseType: !1551, size: 32, offset: 512)
!11231 = !DIDerivedType(tag: DW_TAG_member, name: "mdev", scope: !11219, file: !9, line: 404, baseType: !7, size: 64, offset: 576)
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !8, file: !9, line: 699, baseType: !11233, size: 64, offset: 1461888)
!11233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11234, size: 64)
!11234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_profile", file: !9, line: 1117, size: 1600, elements: !11235)
!11235 = !{!11236, !11237, !11238}
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11234, file: !9, line: 1118, baseType: !230, size: 64)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "log_max_qp", scope: !11234, file: !9, line: 1119, baseType: !1398, size: 8, offset: 64)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "mr_cache", scope: !11234, file: !9, line: 1123, baseType: !11239, size: 1472, offset: 96)
!11239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11240, size: 1472, elements: !11244)
!11240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11234, file: !9, line: 1120, size: 64, elements: !11241)
!11241 = !{!11242, !11243}
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11240, file: !9, line: 1121, baseType: !6, size: 32)
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !11240, file: !9, line: 1122, baseType: !6, size: 32, offset: 32)
!11244 = !{!11245}
!11245 = !DISubrange(count: 23)
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "issi", scope: !8, file: !9, line: 700, baseType: !224, size: 32, offset: 1461952)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "mlx5e_res", scope: !8, file: !9, line: 701, baseType: !11248, size: 960, offset: 1462016)
!11248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5e_resources", file: !9, line: 619, size: 960, elements: !11249)
!11249 = !{!11250, !11251, !11257, !11265}
!11250 = !DIDerivedType(tag: DW_TAG_member, name: "pdn", scope: !11248, file: !9, line: 620, baseType: !224, size: 32)
!11251 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !11248, file: !9, line: 621, baseType: !11252, size: 384, offset: 64)
!11252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_td", file: !9, line: 612, size: 384, elements: !11253)
!11253 = !{!11254, !11255, !11256}
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !11252, file: !9, line: 614, baseType: !553, size: 192)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "tirs_list", scope: !11252, file: !9, line: 615, baseType: !25, size: 128, offset: 192)
!11256 = !DIDerivedType(tag: DW_TAG_member, name: "tdn", scope: !11252, file: !9, line: 616, baseType: !224, size: 32, offset: 320)
!11257 = !DIDerivedType(tag: DW_TAG_member, name: "mkey", scope: !11248, file: !9, line: 622, baseType: !11258, size: 256, offset: 448)
!11258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_mkey", file: !9, line: 367, size: 256, elements: !11259)
!11259 = !{!11260, !11261, !11262, !11263, !11264}
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "iova", scope: !11258, file: !9, line: 368, baseType: !230, size: 64)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11258, file: !9, line: 369, baseType: !230, size: 64, offset: 64)
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11258, file: !9, line: 370, baseType: !224, size: 32, offset: 128)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !11258, file: !9, line: 371, baseType: !224, size: 32, offset: 160)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11258, file: !9, line: 372, baseType: !224, size: 32, offset: 192)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "bfreg", scope: !11248, file: !9, line: 623, baseType: !11266, size: 256, offset: 704)
!11266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_sq_bfreg", file: !9, line: 418, size: 256, elements: !11267)
!11267 = !{!11268, !11269, !11270, !11271, !11272}
!11268 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !11266, file: !9, line: 419, baseType: !154, size: 64)
!11269 = !DIDerivedType(tag: DW_TAG_member, name: "up", scope: !11266, file: !9, line: 420, baseType: !11218, size: 64, offset: 64)
!11270 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !11266, file: !9, line: 421, baseType: !299, size: 8, offset: 128)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11266, file: !9, line: 422, baseType: !224, size: 32, offset: 160)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !11266, file: !9, line: 423, baseType: !194, size: 32, offset: 192)
!11273 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !8, file: !9, line: 702, baseType: !11274, size: 64, offset: 1462976)
!11274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11275, size: 64)
!11275 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_dm", file: !9, line: 661, flags: DIFlagFwdDecl)
!11276 = !DIDerivedType(tag: DW_TAG_member, name: "vxlan", scope: !8, file: !9, line: 703, baseType: !11277, size: 64, offset: 1463040)
!11277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11278, size: 64)
!11278 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vxlan", file: !9, line: 663, flags: DIFlagFwdDecl)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "geneve", scope: !8, file: !9, line: 704, baseType: !11280, size: 64, offset: 1463104)
!11280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11281, size: 64)
!11281 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_geneve", file: !9, line: 664, flags: DIFlagFwdDecl)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !8, file: !9, line: 708, baseType: !11283, size: 256, offset: 1463168)
!11283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8, file: !9, line: 705, size: 256, elements: !11284)
!11284 = !{!11285, !11291}
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_gids", scope: !11283, file: !9, line: 706, baseType: !11286, size: 192)
!11286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rsvd_gids", file: !9, line: 633, size: 192, elements: !11287)
!11287 = !{!11288, !11289, !11290}
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11286, file: !9, line: 634, baseType: !194, size: 32)
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11286, file: !9, line: 635, baseType: !194, size: 32, offset: 32)
!11290 = !DIDerivedType(tag: DW_TAG_member, name: "ida", scope: !11286, file: !9, line: 636, baseType: !10829, size: 128, offset: 64)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "roce_en", scope: !11283, file: !9, line: 707, baseType: !224, size: 32, offset: 192)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !8, file: !9, line: 715, baseType: !11293, size: 3840, offset: 1463424)
!11293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_clock", file: !9, line: 647, size: 3840, elements: !11294)
!11294 = !{!11295, !11296, !11297, !11310, !11318, !11325, !11326, !11327, !11328, !11332, !11457}
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "pps_nb", scope: !11293, file: !9, line: 648, baseType: !10376, size: 256)
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11293, file: !9, line: 649, baseType: !2633, size: 32, offset: 256)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !11293, file: !9, line: 650, baseType: !11298, size: 192, offset: 320)
!11298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclecounter", file: !11299, line: 30, size: 192, elements: !11300)
!11299 = !DIFile(filename: "./include/linux/timecounter.h", directory: "/home/lizy2001/genbc/linux")
!11300 = !{!11301, !11307, !11308, !11309}
!11301 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !11298, file: !11299, line: 31, baseType: !11302, size: 64)
!11302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11303, size: 64)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!230, !11305}
!11305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11306, size: 64)
!11306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11298)
!11307 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11298, file: !11299, line: 32, baseType: !230, size: 64, offset: 64)
!11308 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !11298, file: !11299, line: 33, baseType: !224, size: 32, offset: 128)
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !11298, file: !11299, line: 34, baseType: !224, size: 32, offset: 160)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !11293, file: !9, line: 651, baseType: !11311, size: 320, offset: 512)
!11311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timecounter", file: !11299, line: 55, size: 320, elements: !11312)
!11312 = !{!11313, !11314, !11315, !11316, !11317}
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "cc", scope: !11311, file: !11299, line: 56, baseType: !11305, size: 64)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "cycle_last", scope: !11311, file: !11299, line: 57, baseType: !230, size: 64, offset: 64)
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "nsec", scope: !11311, file: !11299, line: 58, baseType: !230, size: 64, offset: 128)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11311, file: !11299, line: 59, baseType: !230, size: 64, offset: 192)
!11317 = !DIDerivedType(tag: DW_TAG_member, name: "frac", scope: !11311, file: !11299, line: 60, baseType: !230, size: 64, offset: 256)
!11318 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_config", scope: !11293, file: !9, line: 652, baseType: !11319, size: 96, offset: 832)
!11319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hwtstamp_config", file: !11320, line: 62, size: 96, elements: !11321)
!11320 = !DIFile(filename: "./include/uapi/linux/net_tstamp.h", directory: "/home/lizy2001/genbc/linux")
!11321 = !{!11322, !11323, !11324}
!11322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11319, file: !11320, line: 63, baseType: !6, size: 32)
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "tx_type", scope: !11319, file: !11320, line: 64, baseType: !6, size: 32, offset: 32)
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filter", scope: !11319, file: !11320, line: 65, baseType: !6, size: 32, offset: 64)
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "nominal_c_mult", scope: !11293, file: !9, line: 653, baseType: !224, size: 32, offset: 928)
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_period", scope: !11293, file: !9, line: 654, baseType: !130, size: 64, offset: 960)
!11327 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_work", scope: !11293, file: !9, line: 655, baseType: !2557, size: 704, offset: 1024)
!11328 = !DIDerivedType(tag: DW_TAG_member, name: "ptp", scope: !11293, file: !9, line: 656, baseType: !11329, size: 64, offset: 1728)
!11329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11330, size: 64)
!11330 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock", file: !11331, line: 149, flags: DIFlagFwdDecl)
!11331 = !DIFile(filename: "./include/linux/ptp_clock_kernel.h", directory: "/home/lizy2001/genbc/linux")
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_info", scope: !11293, file: !9, line: 657, baseType: !11333, size: 1152, offset: 1792)
!11333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_info", file: !11331, line: 122, size: 1152, elements: !11334)
!11334 = !{!11335, !11336, !11337, !11338, !11339, !11340, !11341, !11342, !11343, !11354, !11359, !11363, !11364, !11368, !11372, !11381, !11392, !11398, !11443, !11453}
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !11333, file: !11331, line: 123, baseType: !441, size: 64)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11333, file: !11331, line: 124, baseType: !1938, size: 128, offset: 64)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "max_adj", scope: !11333, file: !11331, line: 125, baseType: !1496, size: 32, offset: 192)
!11338 = !DIDerivedType(tag: DW_TAG_member, name: "n_alarm", scope: !11333, file: !11331, line: 126, baseType: !6, size: 32, offset: 224)
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "n_ext_ts", scope: !11333, file: !11331, line: 127, baseType: !6, size: 32, offset: 256)
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "n_per_out", scope: !11333, file: !11331, line: 128, baseType: !6, size: 32, offset: 288)
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "n_pins", scope: !11333, file: !11331, line: 129, baseType: !6, size: 32, offset: 320)
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !11333, file: !11331, line: 130, baseType: !6, size: 32, offset: 352)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !11333, file: !11331, line: 131, baseType: !11344, size: 64, offset: 384)
!11344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11345, size: 64)
!11345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_pin_desc", file: !11346, line: 174, size: 768, elements: !11347)
!11346 = !DIFile(filename: "./include/uapi/linux/ptp_clock.h", directory: "/home/lizy2001/genbc/linux")
!11347 = !{!11348, !11349, !11350, !11351, !11352}
!11348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11345, file: !11346, line: 180, baseType: !7617, size: 512)
!11349 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11345, file: !11346, line: 184, baseType: !194, size: 32, offset: 512)
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !11345, file: !11346, line: 188, baseType: !194, size: 32, offset: 544)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !11345, file: !11346, line: 194, baseType: !194, size: 32, offset: 576)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !11345, file: !11346, line: 198, baseType: !11353, size: 160, offset: 608)
!11353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 160, elements: !1587)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "adjfine", scope: !11333, file: !11331, line: 132, baseType: !11355, size: 64, offset: 448)
!11355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11356, size: 64)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{!6, !11358, !115}
!11358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11333, size: 64)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "adjfreq", scope: !11333, file: !11331, line: 133, baseType: !11360, size: 64, offset: 512)
!11360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11361, size: 64)
!11361 = !DISubroutineType(types: !11362)
!11362 = !{!6, !11358, !1496}
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "adjphase", scope: !11333, file: !11331, line: 134, baseType: !11360, size: 64, offset: 576)
!11364 = !DIDerivedType(tag: DW_TAG_member, name: "adjtime", scope: !11333, file: !11331, line: 135, baseType: !11365, size: 64, offset: 640)
!11365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11366, size: 64)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{!6, !11358, !563}
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "gettime64", scope: !11333, file: !11331, line: 136, baseType: !11369, size: 64, offset: 704)
!11369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11370, size: 64)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{!6, !11358, !397}
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "gettimex64", scope: !11333, file: !11331, line: 137, baseType: !11373, size: 64, offset: 768)
!11373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11374, size: 64)
!11374 = !DISubroutineType(types: !11375)
!11375 = !{!6, !11358, !397, !11376}
!11376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11377, size: 64)
!11377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_system_timestamp", file: !11331, line: 33, size: 256, elements: !11378)
!11378 = !{!11379, !11380}
!11379 = !DIDerivedType(tag: DW_TAG_member, name: "pre_ts", scope: !11377, file: !11331, line: 34, baseType: !344, size: 128)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "post_ts", scope: !11377, file: !11331, line: 35, baseType: !344, size: 128, offset: 128)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "getcrosststamp", scope: !11333, file: !11331, line: 139, baseType: !11382, size: 64, offset: 832)
!11382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11383, size: 64)
!11383 = !DISubroutineType(types: !11384)
!11384 = !{!6, !11358, !11385}
!11385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11386, size: 64)
!11386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "system_device_crosststamp", file: !11387, line: 261, size: 192, elements: !11388)
!11387 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!11388 = !{!11389, !11390, !11391}
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !11386, file: !11387, line: 262, baseType: !1342, size: 64)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "sys_realtime", scope: !11386, file: !11387, line: 263, baseType: !1342, size: 64, offset: 64)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "sys_monoraw", scope: !11386, file: !11387, line: 264, baseType: !1342, size: 64, offset: 128)
!11392 = !DIDerivedType(tag: DW_TAG_member, name: "settime64", scope: !11333, file: !11331, line: 141, baseType: !11393, size: 64, offset: 896)
!11393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11394, size: 64)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!6, !11358, !11396}
!11396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11397, size: 64)
!11397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!11398 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !11333, file: !11331, line: 142, baseType: !11399, size: 64, offset: 960)
!11399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11400, size: 64)
!11400 = !DISubroutineType(types: !11401)
!11401 = !{!6, !11358, !11402, !6}
!11402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11403, size: 64)
!11403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_request", file: !11331, line: 16, size: 512, elements: !11404)
!11404 = !{!11405, !11411}
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11403, file: !11331, line: 21, baseType: !11406, size: 32)
!11406 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !11403, file: !11331, line: 17, baseType: !194, size: 32, elements: !11407)
!11407 = !{!11408, !11409, !11410}
!11408 = !DIEnumerator(name: "PTP_CLK_REQ_EXTTS", value: 0, isUnsigned: true)
!11409 = !DIEnumerator(name: "PTP_CLK_REQ_PEROUT", value: 1, isUnsigned: true)
!11410 = !DIEnumerator(name: "PTP_CLK_REQ_PPS", value: 2, isUnsigned: true)
!11411 = !DIDerivedType(tag: DW_TAG_member, scope: !11403, file: !11331, line: 22, baseType: !11412, size: 448, offset: 64)
!11412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11403, file: !11331, line: 22, size: 448, elements: !11413)
!11413 = !{!11414, !11421}
!11414 = !DIDerivedType(tag: DW_TAG_member, name: "extts", scope: !11412, file: !11331, line: 23, baseType: !11415, size: 128)
!11415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_extts_request", file: !11346, line: 101, size: 128, elements: !11416)
!11416 = !{!11417, !11418, !11419}
!11417 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11415, file: !11346, line: 102, baseType: !194, size: 32)
!11418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11415, file: !11346, line: 103, baseType: !194, size: 32, offset: 32)
!11419 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !11415, file: !11346, line: 104, baseType: !11420, size: 64, offset: 64)
!11420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, elements: !1906)
!11421 = !DIDerivedType(tag: DW_TAG_member, name: "perout", scope: !11412, file: !11331, line: 24, baseType: !11422, size: 448)
!11422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_perout_request", file: !11346, line: 107, size: 448, elements: !11423)
!11423 = !{!11424, !11434, !11435, !11436, !11437}
!11424 = !DIDerivedType(tag: DW_TAG_member, scope: !11422, file: !11346, line: 108, baseType: !11425, size: 128)
!11425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11422, file: !11346, line: 108, size: 128, elements: !11426)
!11426 = !{!11427, !11433}
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11425, file: !11346, line: 113, baseType: !11428, size: 128)
!11428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_time", file: !11346, line: 81, size: 128, elements: !11429)
!11429 = !{!11430, !11431, !11432}
!11430 = !DIDerivedType(tag: DW_TAG_member, name: "sec", scope: !11428, file: !11346, line: 82, baseType: !349, size: 64)
!11431 = !DIDerivedType(tag: DW_TAG_member, name: "nsec", scope: !11428, file: !11346, line: 83, baseType: !226, size: 32, offset: 64)
!11432 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !11428, file: !11346, line: 84, baseType: !226, size: 32, offset: 96)
!11433 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !11425, file: !11346, line: 120, baseType: !11428, size: 128)
!11434 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !11422, file: !11346, line: 122, baseType: !11428, size: 128, offset: 128)
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11422, file: !11346, line: 123, baseType: !194, size: 32, offset: 256)
!11436 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11422, file: !11346, line: 124, baseType: !194, size: 32, offset: 288)
!11437 = !DIDerivedType(tag: DW_TAG_member, scope: !11422, file: !11346, line: 125, baseType: !11438, size: 128, offset: 320)
!11438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11422, file: !11346, line: 125, size: 128, elements: !11439)
!11439 = !{!11440, !11441}
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !11438, file: !11346, line: 131, baseType: !11428, size: 128)
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !11438, file: !11346, line: 133, baseType: !11442, size: 128)
!11442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 128, elements: !1207)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "verify", scope: !11333, file: !11331, line: 144, baseType: !11444, size: 64, offset: 1024)
!11444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11445, size: 64)
!11445 = !DISubroutineType(types: !11446)
!11446 = !{!6, !11358, !194, !11447, !194}
!11447 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ptp_pin_function", file: !11346, line: 167, baseType: !194, size: 32, elements: !11448)
!11448 = !{!11449, !11450, !11451, !11452}
!11449 = !DIEnumerator(name: "PTP_PF_NONE", value: 0, isUnsigned: true)
!11450 = !DIEnumerator(name: "PTP_PF_EXTTS", value: 1, isUnsigned: true)
!11451 = !DIEnumerator(name: "PTP_PF_PEROUT", value: 2, isUnsigned: true)
!11452 = !DIEnumerator(name: "PTP_PF_PHYSYNC", value: 3, isUnsigned: true)
!11453 = !DIDerivedType(tag: DW_TAG_member, name: "do_aux_work", scope: !11333, file: !11331, line: 146, baseType: !11454, size: 64, offset: 1088)
!11454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11455, size: 64)
!11455 = !DISubroutineType(types: !11456)
!11456 = !{!115, !11358}
!11457 = !DIDerivedType(tag: DW_TAG_member, name: "pps_info", scope: !11293, file: !9, line: 658, baseType: !11458, size: 896, offset: 2944)
!11458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_pps", file: !9, line: 640, size: 896, elements: !11459)
!11459 = !{!11460, !11461, !11462, !11463}
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "pin_caps", scope: !11458, file: !9, line: 641, baseType: !3123, size: 64)
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "out_work", scope: !11458, file: !9, line: 642, baseType: !1723, size: 256, offset: 64)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11458, file: !9, line: 643, baseType: !10021, size: 512, offset: 320)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11458, file: !9, line: 644, baseType: !1398, size: 8, offset: 832)
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "clock_info", scope: !8, file: !9, line: 716, baseType: !11465, size: 64, offset: 1467264)
!11465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11466, size: 64)
!11466 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_ib_clock_info", file: !9, line: 716, flags: DIFlagFwdDecl)
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "tracer", scope: !8, file: !9, line: 717, baseType: !11468, size: 64, offset: 1467328)
!11468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11469, size: 64)
!11469 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fw_tracer", file: !9, line: 662, flags: DIFlagFwdDecl)
!11470 = !DIDerivedType(tag: DW_TAG_member, name: "rsc_dump", scope: !8, file: !9, line: 718, baseType: !11471, size: 64, offset: 1467392)
!11471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11472, size: 64)
!11472 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rsc_dump", file: !9, line: 718, flags: DIFlagFwdDecl)
!11473 = !DIDerivedType(tag: DW_TAG_member, name: "vsc_addr", scope: !8, file: !9, line: 719, baseType: !224, size: 32, offset: 1467456)
!11474 = !DIDerivedType(tag: DW_TAG_member, name: "hv_vhca", scope: !8, file: !9, line: 720, baseType: !11475, size: 64, offset: 1467520)
!11475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11476, size: 64)
!11476 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_hv_vhca", file: !9, line: 665, flags: DIFlagFwdDecl)
!11477 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !11478, retainedTypes: !12219, globals: !12247, splitDebugInlining: false, nameTableKind: None)
!11478 = !{!496, !913, !1117, !1349, !1473, !2271, !2823, !3012, !3044, !3079, !3149, !3235, !3634, !3906, !3929, !3936, !3950, !3972, !3978, !4038, !4071, !4077, !4180, !4326, !4342, !4351, !4358, !4366, !4371, !4486, !5500, !5956, !5966, !6555, !7597, !7790, !7883, !8025, !8084, !8662, !8755, !9418, !9437, !9482, !9720, !9800, !9876, !10089, !10366, !10382, !10589, !10658, !10677, !10699, !10715, !10748, !11142, !10860, !10885, !11406, !11447, !11042, !11479, !11503, !11694, !11697, !11701, !11708, !11713, !11718, !11722, !11738, !11743, !11774, !11780, !11785, !11789, !11794, !11800, !11806, !11811, !11817, !11821, !11828, !11866, !11873, !11877, !11899, !11910, !11919, !11924, !11928, !11933, !11938, !11941, !11963, !11970, !11994, !12009, !12015, !12039, !12044, !12051, !12055, !12083, !12089, !12094, !12102, !12109, !12114, !12118, !12124, !12128, !12132, !12141, !12146, !12151, !12156, !12160, !12166, !12183, !12187, !12190, !12194, !12209, !12214}
!11479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_cap_type", file: !10464, line: 1135, baseType: !194, size: 32, elements: !11480)
!11480 = !{!11481, !11482, !11483, !11484, !11485, !11486, !11487, !11488, !11489, !11490, !11491, !11492, !11493, !11494, !11495, !11496, !11497, !11498, !11499, !11500, !11501, !11502}
!11481 = !DIEnumerator(name: "MLX5_CAP_GENERAL", value: 0, isUnsigned: true)
!11482 = !DIEnumerator(name: "MLX5_CAP_ETHERNET_OFFLOADS", value: 1, isUnsigned: true)
!11483 = !DIEnumerator(name: "MLX5_CAP_ODP", value: 2, isUnsigned: true)
!11484 = !DIEnumerator(name: "MLX5_CAP_ATOMIC", value: 3, isUnsigned: true)
!11485 = !DIEnumerator(name: "MLX5_CAP_ROCE", value: 4, isUnsigned: true)
!11486 = !DIEnumerator(name: "MLX5_CAP_IPOIB_OFFLOADS", value: 5, isUnsigned: true)
!11487 = !DIEnumerator(name: "MLX5_CAP_IPOIB_ENHANCED_OFFLOADS", value: 6, isUnsigned: true)
!11488 = !DIEnumerator(name: "MLX5_CAP_FLOW_TABLE", value: 7, isUnsigned: true)
!11489 = !DIEnumerator(name: "MLX5_CAP_ESWITCH_FLOW_TABLE", value: 8, isUnsigned: true)
!11490 = !DIEnumerator(name: "MLX5_CAP_ESWITCH", value: 9, isUnsigned: true)
!11491 = !DIEnumerator(name: "MLX5_CAP_RESERVED", value: 10, isUnsigned: true)
!11492 = !DIEnumerator(name: "MLX5_CAP_VECTOR_CALC", value: 11, isUnsigned: true)
!11493 = !DIEnumerator(name: "MLX5_CAP_QOS", value: 12, isUnsigned: true)
!11494 = !DIEnumerator(name: "MLX5_CAP_DEBUG", value: 13, isUnsigned: true)
!11495 = !DIEnumerator(name: "MLX5_CAP_RESERVED_14", value: 14, isUnsigned: true)
!11496 = !DIEnumerator(name: "MLX5_CAP_DEV_MEM", value: 15, isUnsigned: true)
!11497 = !DIEnumerator(name: "MLX5_CAP_RESERVED_16", value: 16, isUnsigned: true)
!11498 = !DIEnumerator(name: "MLX5_CAP_TLS", value: 17, isUnsigned: true)
!11499 = !DIEnumerator(name: "MLX5_CAP_VDPA_EMULATION", value: 19, isUnsigned: true)
!11500 = !DIEnumerator(name: "MLX5_CAP_DEV_EVENT", value: 20, isUnsigned: true)
!11501 = !DIEnumerator(name: "MLX5_CAP_IPSEC", value: 21, isUnsigned: true)
!11502 = !DIEnumerator(name: "MLX5_CAP_NUM", value: 22, isUnsigned: true)
!11503 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 113, baseType: !194, size: 32, elements: !11504)
!11504 = !{!11505, !11506, !11507, !11508, !11509, !11510, !11511, !11512, !11513, !11514, !11515, !11516, !11517, !11518, !11519, !11520, !11521, !11522, !11523, !11524, !11525, !11526, !11527, !11528, !11529, !11530, !11531, !11532, !11533, !11534, !11535, !11536, !11537, !11538, !11539, !11540, !11541, !11542, !11543, !11544, !11545, !11546, !11547, !11548, !11549, !11550, !11551, !11552, !11553, !11554, !11555, !11556, !11557, !11558, !11559, !11560, !11561, !11562, !11563, !11564, !11565, !11566, !11567, !11568, !11569, !11570, !11571, !11572, !11573, !11574, !11575, !11576, !11577, !11578, !11579, !11580, !11581, !11582, !11583, !11584, !11585, !11586, !11587, !11588, !11589, !11590, !11591, !11592, !11593, !11594, !11595, !11596, !11597, !11598, !11599, !11600, !11601, !11602, !11603, !11604, !11605, !11606, !11607, !11608, !11609, !11610, !11611, !11612, !11613, !11614, !11615, !11616, !11617, !11618, !11619, !11620, !11621, !11622, !11623, !11624, !11625, !11626, !11627, !11628, !11629, !11630, !11631, !11632, !11633, !11634, !11635, !11636, !11637, !11638, !11639, !11640, !11641, !11642, !11643, !11644, !11645, !11646, !11647, !11648, !11649, !11650, !11651, !11652, !11653, !11654, !11655, !11656, !11657, !11658, !11659, !11660, !11661, !11662, !11663, !11664, !11665, !11666, !11667, !11668, !11669, !11670, !11671, !11672, !11673, !11674, !11675, !11676, !11677, !11678, !11679, !11680, !11681, !11682, !11683, !11684, !11685, !11686, !11687, !11688, !11689, !11690, !11691, !11692, !11693}
!11505 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_CAP", value: 256, isUnsigned: true)
!11506 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ADAPTER", value: 257, isUnsigned: true)
!11507 = !DIEnumerator(name: "MLX5_CMD_OP_INIT_HCA", value: 258, isUnsigned: true)
!11508 = !DIEnumerator(name: "MLX5_CMD_OP_TEARDOWN_HCA", value: 259, isUnsigned: true)
!11509 = !DIEnumerator(name: "MLX5_CMD_OP_ENABLE_HCA", value: 260, isUnsigned: true)
!11510 = !DIEnumerator(name: "MLX5_CMD_OP_DISABLE_HCA", value: 261, isUnsigned: true)
!11511 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_PAGES", value: 263, isUnsigned: true)
!11512 = !DIEnumerator(name: "MLX5_CMD_OP_MANAGE_PAGES", value: 264, isUnsigned: true)
!11513 = !DIEnumerator(name: "MLX5_CMD_OP_SET_HCA_CAP", value: 265, isUnsigned: true)
!11514 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ISSI", value: 266, isUnsigned: true)
!11515 = !DIEnumerator(name: "MLX5_CMD_OP_SET_ISSI", value: 267, isUnsigned: true)
!11516 = !DIEnumerator(name: "MLX5_CMD_OP_SET_DRIVER_VERSION", value: 269, isUnsigned: true)
!11517 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SF_PARTITION", value: 273, isUnsigned: true)
!11518 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_SF", value: 275, isUnsigned: true)
!11519 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_SF", value: 276, isUnsigned: true)
!11520 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_MKEY", value: 512, isUnsigned: true)
!11521 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MKEY", value: 513, isUnsigned: true)
!11522 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_MKEY", value: 514, isUnsigned: true)
!11523 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SPECIAL_CONTEXTS", value: 515, isUnsigned: true)
!11524 = !DIEnumerator(name: "MLX5_CMD_OP_PAGE_FAULT_RESUME", value: 516, isUnsigned: true)
!11525 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_MEMIC", value: 517, isUnsigned: true)
!11526 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_MEMIC", value: 518, isUnsigned: true)
!11527 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_EQ", value: 769, isUnsigned: true)
!11528 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_EQ", value: 770, isUnsigned: true)
!11529 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_EQ", value: 771, isUnsigned: true)
!11530 = !DIEnumerator(name: "MLX5_CMD_OP_GEN_EQE", value: 772, isUnsigned: true)
!11531 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_CQ", value: 1024, isUnsigned: true)
!11532 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_CQ", value: 1025, isUnsigned: true)
!11533 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CQ", value: 1026, isUnsigned: true)
!11534 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CQ", value: 1027, isUnsigned: true)
!11535 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_QP", value: 1280, isUnsigned: true)
!11536 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_QP", value: 1281, isUnsigned: true)
!11537 = !DIEnumerator(name: "MLX5_CMD_OP_RST2INIT_QP", value: 1282, isUnsigned: true)
!11538 = !DIEnumerator(name: "MLX5_CMD_OP_INIT2RTR_QP", value: 1283, isUnsigned: true)
!11539 = !DIEnumerator(name: "MLX5_CMD_OP_RTR2RTS_QP", value: 1284, isUnsigned: true)
!11540 = !DIEnumerator(name: "MLX5_CMD_OP_RTS2RTS_QP", value: 1285, isUnsigned: true)
!11541 = !DIEnumerator(name: "MLX5_CMD_OP_SQERR2RTS_QP", value: 1286, isUnsigned: true)
!11542 = !DIEnumerator(name: "MLX5_CMD_OP_2ERR_QP", value: 1287, isUnsigned: true)
!11543 = !DIEnumerator(name: "MLX5_CMD_OP_2RST_QP", value: 1290, isUnsigned: true)
!11544 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_QP", value: 1291, isUnsigned: true)
!11545 = !DIEnumerator(name: "MLX5_CMD_OP_SQD_RTS_QP", value: 1292, isUnsigned: true)
!11546 = !DIEnumerator(name: "MLX5_CMD_OP_INIT2INIT_QP", value: 1294, isUnsigned: true)
!11547 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_PSV", value: 1536, isUnsigned: true)
!11548 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_PSV", value: 1537, isUnsigned: true)
!11549 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SRQ", value: 1792, isUnsigned: true)
!11550 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SRQ", value: 1793, isUnsigned: true)
!11551 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SRQ", value: 1794, isUnsigned: true)
!11552 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_RQ", value: 1795, isUnsigned: true)
!11553 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_XRC_SRQ", value: 1797, isUnsigned: true)
!11554 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_XRC_SRQ", value: 1798, isUnsigned: true)
!11555 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRC_SRQ", value: 1799, isUnsigned: true)
!11556 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_XRC_SRQ", value: 1800, isUnsigned: true)
!11557 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_DCT", value: 1808, isUnsigned: true)
!11558 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_DCT", value: 1809, isUnsigned: true)
!11559 = !DIEnumerator(name: "MLX5_CMD_OP_DRAIN_DCT", value: 1810, isUnsigned: true)
!11560 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_DCT", value: 1811, isUnsigned: true)
!11561 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_DCT_FOR_KEY_VIOLATION", value: 1812, isUnsigned: true)
!11562 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_XRQ", value: 1815, isUnsigned: true)
!11563 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_XRQ", value: 1816, isUnsigned: true)
!11564 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ", value: 1817, isUnsigned: true)
!11565 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_XRQ", value: 1818, isUnsigned: true)
!11566 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ_DC_PARAMS_ENTRY", value: 1829, isUnsigned: true)
!11567 = !DIEnumerator(name: "MLX5_CMD_OP_SET_XRQ_DC_PARAMS_ENTRY", value: 1830, isUnsigned: true)
!11568 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ_ERROR_PARAMS", value: 1831, isUnsigned: true)
!11569 = !DIEnumerator(name: "MLX5_CMD_OP_RELEASE_XRQ_ERROR", value: 1833, isUnsigned: true)
!11570 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_XRQ", value: 1834, isUnsigned: true)
!11571 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ESW_FUNCTIONS", value: 1856, isUnsigned: true)
!11572 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VPORT_STATE", value: 1872, isUnsigned: true)
!11573 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_VPORT_STATE", value: 1873, isUnsigned: true)
!11574 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ESW_VPORT_CONTEXT", value: 1874, isUnsigned: true)
!11575 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_ESW_VPORT_CONTEXT", value: 1875, isUnsigned: true)
!11576 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_NIC_VPORT_CONTEXT", value: 1876, isUnsigned: true)
!11577 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_NIC_VPORT_CONTEXT", value: 1877, isUnsigned: true)
!11578 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ROCE_ADDRESS", value: 1888, isUnsigned: true)
!11579 = !DIEnumerator(name: "MLX5_CMD_OP_SET_ROCE_ADDRESS", value: 1889, isUnsigned: true)
!11580 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_CONTEXT", value: 1890, isUnsigned: true)
!11581 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_HCA_VPORT_CONTEXT", value: 1891, isUnsigned: true)
!11582 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_GID", value: 1892, isUnsigned: true)
!11583 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_PKEY", value: 1893, isUnsigned: true)
!11584 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VNIC_ENV", value: 1903, isUnsigned: true)
!11585 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VPORT_COUNTER", value: 1904, isUnsigned: true)
!11586 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_Q_COUNTER", value: 1905, isUnsigned: true)
!11587 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_Q_COUNTER", value: 1906, isUnsigned: true)
!11588 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_Q_COUNTER", value: 1907, isUnsigned: true)
!11589 = !DIEnumerator(name: "MLX5_CMD_OP_SET_MONITOR_COUNTER", value: 1908, isUnsigned: true)
!11590 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_MONITOR_COUNTER", value: 1909, isUnsigned: true)
!11591 = !DIEnumerator(name: "MLX5_CMD_OP_SET_PP_RATE_LIMIT", value: 1920, isUnsigned: true)
!11592 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RATE_LIMIT", value: 1921, isUnsigned: true)
!11593 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SCHEDULING_ELEMENT", value: 1922, isUnsigned: true)
!11594 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SCHEDULING_ELEMENT", value: 1923, isUnsigned: true)
!11595 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SCHEDULING_ELEMENT", value: 1924, isUnsigned: true)
!11596 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_SCHEDULING_ELEMENT", value: 1925, isUnsigned: true)
!11597 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_QOS_PARA_VPORT", value: 1926, isUnsigned: true)
!11598 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_QOS_PARA_VPORT", value: 1927, isUnsigned: true)
!11599 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_PD", value: 2048, isUnsigned: true)
!11600 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_PD", value: 2049, isUnsigned: true)
!11601 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_UAR", value: 2050, isUnsigned: true)
!11602 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_UAR", value: 2051, isUnsigned: true)
!11603 = !DIEnumerator(name: "MLX5_CMD_OP_CONFIG_INT_MODERATION", value: 2052, isUnsigned: true)
!11604 = !DIEnumerator(name: "MLX5_CMD_OP_ACCESS_REG", value: 2053, isUnsigned: true)
!11605 = !DIEnumerator(name: "MLX5_CMD_OP_ATTACH_TO_MCG", value: 2054, isUnsigned: true)
!11606 = !DIEnumerator(name: "MLX5_CMD_OP_DETACH_FROM_MCG", value: 2055, isUnsigned: true)
!11607 = !DIEnumerator(name: "MLX5_CMD_OP_GET_DROPPED_PACKET_LOG", value: 2058, isUnsigned: true)
!11608 = !DIEnumerator(name: "MLX5_CMD_OP_MAD_IFC", value: 1293, isUnsigned: true)
!11609 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MAD_DEMUX", value: 2059, isUnsigned: true)
!11610 = !DIEnumerator(name: "MLX5_CMD_OP_SET_MAD_DEMUX", value: 2060, isUnsigned: true)
!11611 = !DIEnumerator(name: "MLX5_CMD_OP_NOP", value: 2061, isUnsigned: true)
!11612 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_XRCD", value: 2062, isUnsigned: true)
!11613 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_XRCD", value: 2063, isUnsigned: true)
!11614 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_TRANSPORT_DOMAIN", value: 2070, isUnsigned: true)
!11615 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_TRANSPORT_DOMAIN", value: 2071, isUnsigned: true)
!11616 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_STATUS", value: 2082, isUnsigned: true)
!11617 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CONG_STATUS", value: 2083, isUnsigned: true)
!11618 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_PARAMS", value: 2084, isUnsigned: true)
!11619 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CONG_PARAMS", value: 2085, isUnsigned: true)
!11620 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_STATISTICS", value: 2086, isUnsigned: true)
!11621 = !DIEnumerator(name: "MLX5_CMD_OP_ADD_VXLAN_UDP_DPORT", value: 2087, isUnsigned: true)
!11622 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_VXLAN_UDP_DPORT", value: 2088, isUnsigned: true)
!11623 = !DIEnumerator(name: "MLX5_CMD_OP_SET_L2_TABLE_ENTRY", value: 2089, isUnsigned: true)
!11624 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_L2_TABLE_ENTRY", value: 2090, isUnsigned: true)
!11625 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_L2_TABLE_ENTRY", value: 2091, isUnsigned: true)
!11626 = !DIEnumerator(name: "MLX5_CMD_OP_SET_WOL_ROL", value: 2096, isUnsigned: true)
!11627 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_WOL_ROL", value: 2097, isUnsigned: true)
!11628 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_LAG", value: 2112, isUnsigned: true)
!11629 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_LAG", value: 2113, isUnsigned: true)
!11630 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_LAG", value: 2114, isUnsigned: true)
!11631 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_LAG", value: 2115, isUnsigned: true)
!11632 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_VPORT_LAG", value: 2116, isUnsigned: true)
!11633 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_VPORT_LAG", value: 2117, isUnsigned: true)
!11634 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_TIR", value: 2304, isUnsigned: true)
!11635 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_TIR", value: 2305, isUnsigned: true)
!11636 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_TIR", value: 2306, isUnsigned: true)
!11637 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_TIR", value: 2307, isUnsigned: true)
!11638 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SQ", value: 2308, isUnsigned: true)
!11639 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_SQ", value: 2309, isUnsigned: true)
!11640 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SQ", value: 2310, isUnsigned: true)
!11641 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SQ", value: 2311, isUnsigned: true)
!11642 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RQ", value: 2312, isUnsigned: true)
!11643 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RQ", value: 2313, isUnsigned: true)
!11644 = !DIEnumerator(name: "MLX5_CMD_OP_SET_DELAY_DROP_PARAMS", value: 2320, isUnsigned: true)
!11645 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RQ", value: 2314, isUnsigned: true)
!11646 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RQ", value: 2315, isUnsigned: true)
!11647 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RMP", value: 2316, isUnsigned: true)
!11648 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RMP", value: 2317, isUnsigned: true)
!11649 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RMP", value: 2318, isUnsigned: true)
!11650 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RMP", value: 2319, isUnsigned: true)
!11651 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_TIS", value: 2322, isUnsigned: true)
!11652 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_TIS", value: 2323, isUnsigned: true)
!11653 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_TIS", value: 2324, isUnsigned: true)
!11654 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_TIS", value: 2325, isUnsigned: true)
!11655 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RQT", value: 2326, isUnsigned: true)
!11656 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RQT", value: 2327, isUnsigned: true)
!11657 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RQT", value: 2328, isUnsigned: true)
!11658 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RQT", value: 2329, isUnsigned: true)
!11659 = !DIEnumerator(name: "MLX5_CMD_OP_SET_FLOW_TABLE_ROOT", value: 2351, isUnsigned: true)
!11660 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_FLOW_TABLE", value: 2352, isUnsigned: true)
!11661 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_FLOW_TABLE", value: 2353, isUnsigned: true)
!11662 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_TABLE", value: 2354, isUnsigned: true)
!11663 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_FLOW_GROUP", value: 2355, isUnsigned: true)
!11664 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_FLOW_GROUP", value: 2356, isUnsigned: true)
!11665 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_GROUP", value: 2357, isUnsigned: true)
!11666 = !DIEnumerator(name: "MLX5_CMD_OP_SET_FLOW_TABLE_ENTRY", value: 2358, isUnsigned: true)
!11667 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_TABLE_ENTRY", value: 2359, isUnsigned: true)
!11668 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_FLOW_TABLE_ENTRY", value: 2360, isUnsigned: true)
!11669 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_FLOW_COUNTER", value: 2361, isUnsigned: true)
!11670 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_FLOW_COUNTER", value: 2362, isUnsigned: true)
!11671 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_COUNTER", value: 2363, isUnsigned: true)
!11672 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_FLOW_TABLE", value: 2364, isUnsigned: true)
!11673 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_PACKET_REFORMAT_CONTEXT", value: 2365, isUnsigned: true)
!11674 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_PACKET_REFORMAT_CONTEXT", value: 2366, isUnsigned: true)
!11675 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_PACKET_REFORMAT_CONTEXT", value: 2367, isUnsigned: true)
!11676 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_MODIFY_HEADER_CONTEXT", value: 2368, isUnsigned: true)
!11677 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_MODIFY_HEADER_CONTEXT", value: 2369, isUnsigned: true)
!11678 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MODIFY_HEADER_CONTEXT", value: 2370, isUnsigned: true)
!11679 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_CREATE_QP", value: 2400, isUnsigned: true)
!11680 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_MODIFY_QP", value: 2401, isUnsigned: true)
!11681 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_QUERY_QP", value: 2402, isUnsigned: true)
!11682 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_DESTROY_QP", value: 2403, isUnsigned: true)
!11683 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_QUERY_QP_COUNTERS", value: 2404, isUnsigned: true)
!11684 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_GENERAL_OBJECT", value: 2560, isUnsigned: true)
!11685 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_GENERAL_OBJECT", value: 2561, isUnsigned: true)
!11686 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_GENERAL_OBJECT", value: 2562, isUnsigned: true)
!11687 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_GENERAL_OBJECT", value: 2563, isUnsigned: true)
!11688 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_UCTX", value: 2564, isUnsigned: true)
!11689 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_UCTX", value: 2566, isUnsigned: true)
!11690 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_UMEM", value: 2568, isUnsigned: true)
!11691 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_UMEM", value: 2570, isUnsigned: true)
!11692 = !DIEnumerator(name: "MLX5_CMD_OP_SYNC_STEERING", value: 2816, isUnsigned: true)
!11693 = !DIEnumerator(name: "MLX5_CMD_OP_MAX", value: 2817, isUnsigned: true)
!11694 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 4755, baseType: !194, size: 32, elements: !11695)
!11695 = !{!11696}
!11696 = !DIEnumerator(name: "SCHEDULING_HIERARCHY_E_SWITCH", value: 2, isUnsigned: true)
!11697 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 6262, baseType: !194, size: 32, elements: !11698)
!11698 = !{!11699, !11700}
!11699 = !DIEnumerator(name: "MODIFY_SCHEDULING_ELEMENT_IN_MODIFY_BITMASK_BW_SHARE", value: 1, isUnsigned: true)
!11700 = !DIEnumerator(name: "MODIFY_SCHEDULING_ELEMENT_IN_MODIFY_BITMASK_MAX_AVERAGE_BW", value: 2, isUnsigned: true)
!11701 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11702, line: 59, baseType: !194, size: 32, elements: !11703)
!11702 = !DIFile(filename: "./include/linux/mlx5/vport.h", directory: "/home/lizy2001/genbc/linux")
!11703 = !{!11704, !11705, !11706, !11707}
!11704 = !DIEnumerator(name: "MLX5_VPORT_PF", value: 0, isUnsigned: true)
!11705 = !DIEnumerator(name: "MLX5_VPORT_FIRST_VF", value: 1, isUnsigned: true)
!11706 = !DIEnumerator(name: "MLX5_VPORT_ECPF", value: 65534, isUnsigned: true)
!11707 = !DIEnumerator(name: "MLX5_VPORT_UPLINK", value: 65535, isUnsigned: true)
!11708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11069, line: 14, baseType: !194, size: 32, elements: !11709)
!11709 = !{!11710, !11711, !11712}
!11710 = !DIEnumerator(name: "MLX5_ESWITCH_NONE", value: 0, isUnsigned: true)
!11711 = !DIEnumerator(name: "MLX5_ESWITCH_LEGACY", value: 1, isUnsigned: true)
!11712 = !DIEnumerator(name: "MLX5_ESWITCH_OFFLOADS", value: 2, isUnsigned: true)
!11713 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 1062, baseType: !194, size: 32, elements: !11714)
!11714 = !{!11715, !11716, !11717}
!11715 = !DIEnumerator(name: "MLX5_INTERFACE_PROTOCOL_IB", value: 0, isUnsigned: true)
!11716 = !DIEnumerator(name: "MLX5_INTERFACE_PROTOCOL_ETH", value: 1, isUnsigned: true)
!11717 = !DIEnumerator(name: "MLX5_INTERFACE_PROTOCOL_VDPA", value: 2, isUnsigned: true)
!11718 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 1188, baseType: !194, size: 32, elements: !11719)
!11719 = !{!11720, !11721}
!11720 = !DIEnumerator(name: "MLX5_CAP_PORT_TYPE_IB", value: 0, isUnsigned: true)
!11721 = !DIEnumerator(name: "MLX5_CAP_PORT_TYPE_ETH", value: 1, isUnsigned: true)
!11722 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1724, line: 308, baseType: !194, size: 32, elements: !11723)
!11723 = !{!11724, !11725, !11726, !11727, !11728, !11729, !11730, !11731, !11732, !11733, !11734, !11735, !11736, !11737}
!11724 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!11725 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!11726 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!11727 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!11728 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!11729 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!11730 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!11731 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!11732 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!11733 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!11734 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!11735 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!11736 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!11737 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!11738 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10464, line: 1049, baseType: !194, size: 32, elements: !11739)
!11739 = !{!11740, !11741, !11742}
!11740 = !DIEnumerator(name: "MLX5_VPORT_ADMIN_STATE_DOWN", value: 0, isUnsigned: true)
!11741 = !DIEnumerator(name: "MLX5_VPORT_ADMIN_STATE_UP", value: 1, isUnsigned: true)
!11742 = !DIEnumerator(name: "MLX5_VPORT_ADMIN_STATE_AUTO", value: 2, isUnsigned: true)
!11743 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1724, line: 30, baseType: !115, size: 64, elements: !11744)
!11744 = !{!11745, !11746, !11747, !11748, !11749, !11750, !11751, !11752, !11753, !11754, !11755, !11756, !11757, !11758, !11759, !11760, !11761, !11762, !11763, !11764, !11765, !11766, !11767, !11768, !11769, !11770, !11771, !11772, !11773}
!11745 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!11746 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!11747 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!11748 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!11749 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!11750 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!11751 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!11752 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!11753 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!11754 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!11755 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!11756 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!11757 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!11758 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!11759 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!11760 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!11761 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!11762 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!11763 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!11764 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!11765 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!11766 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!11767 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!11768 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!11769 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!11770 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!11771 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!11772 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!11773 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!11774 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_inline_modes", file: !10464, line: 164, baseType: !194, size: 32, elements: !11775)
!11775 = !{!11776, !11777, !11778, !11779}
!11776 = !DIEnumerator(name: "MLX5_INLINE_MODE_NONE", value: 0, isUnsigned: true)
!11777 = !DIEnumerator(name: "MLX5_INLINE_MODE_L2", value: 1, isUnsigned: true)
!11778 = !DIEnumerator(name: "MLX5_INLINE_MODE_IP", value: 2, isUnsigned: true)
!11779 = !DIEnumerator(name: "MLX5_INLINE_MODE_TCP_UDP", value: 3, isUnsigned: true)
!11780 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 4431, baseType: !194, size: 32, elements: !11781)
!11781 = !{!11782, !11783, !11784}
!11782 = !DIEnumerator(name: "MLX5_VPORT_STATE_OP_MOD_VNIC_VPORT", value: 0, isUnsigned: true)
!11783 = !DIEnumerator(name: "MLX5_VPORT_STATE_OP_MOD_ESW_VPORT", value: 1, isUnsigned: true)
!11784 = !DIEnumerator(name: "MLX5_VPORT_STATE_OP_MOD_UPLINK", value: 2, isUnsigned: true)
!11785 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10793, line: 370, baseType: !194, size: 32, elements: !11786)
!11786 = !{!11787, !11788}
!11787 = !DIEnumerator(name: "SET_VLAN_STRIP", value: 1, isUnsigned: true)
!11788 = !DIEnumerator(name: "SET_VLAN_INSERT", value: 2, isUnsigned: true)
!11789 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11790, line: 10, baseType: !194, size: 32, elements: !11791)
!11790 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!11791 = !{!11792, !11793}
!11792 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!11793 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!11794 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 3313, baseType: !194, size: 32, elements: !11795)
!11795 = !{!11796, !11797, !11798, !11799}
!11796 = !DIEnumerator(name: "SCHEDULING_CONTEXT_ELEMENT_TYPE_TSAR", value: 0, isUnsigned: true)
!11797 = !DIEnumerator(name: "SCHEDULING_CONTEXT_ELEMENT_TYPE_VPORT", value: 1, isUnsigned: true)
!11798 = !DIEnumerator(name: "SCHEDULING_CONTEXT_ELEMENT_TYPE_VPORT_TC", value: 2, isUnsigned: true)
!11799 = !DIEnumerator(name: "SCHEDULING_CONTEXT_ELEMENT_TYPE_PARA_VPORT_TC", value: 3, isUnsigned: true)
!11800 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_devlink_param_id", file: !11801, line: 9, baseType: !194, size: 32, elements: !11802)
!11801 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/devlink.h", directory: "/home/lizy2001/genbc/linux")
!11802 = !{!11803, !11804, !11805}
!11803 = !DIEnumerator(name: "MLX5_DEVLINK_PARAM_ID_BASE", value: 10, isUnsigned: true)
!11804 = !DIEnumerator(name: "MLX5_DEVLINK_PARAM_ID_FLOW_STEERING_MODE", value: 11, isUnsigned: true)
!11805 = !DIEnumerator(name: "MLX5_DEVLINK_PARAM_ID_ESW_LARGE_GROUP_NUM", value: 12, isUnsigned: true)
!11806 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 3984, baseType: !194, size: 32, elements: !11807)
!11807 = !{!11808, !11809, !11810}
!11808 = !DIEnumerator(name: "TSAR_ELEMENT_TSAR_TYPE_DWRR", value: 0, isUnsigned: true)
!11809 = !DIEnumerator(name: "TSAR_ELEMENT_TSAR_TYPE_ROUND_ROBIN", value: 1, isUnsigned: true)
!11810 = !DIEnumerator(name: "TSAR_ELEMENT_TSAR_TYPE_ETS", value: 2, isUnsigned: true)
!11811 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 3320, baseType: !194, size: 32, elements: !11812)
!11812 = !{!11813, !11814, !11815, !11816}
!11813 = !DIEnumerator(name: "ELEMENT_TYPE_CAP_MASK_TASR", value: 1, isUnsigned: true)
!11814 = !DIEnumerator(name: "ELEMENT_TYPE_CAP_MASK_VPORT", value: 2, isUnsigned: true)
!11815 = !DIEnumerator(name: "ELEMENT_TYPE_CAP_MASK_VPORT_TC", value: 4, isUnsigned: true)
!11816 = !DIEnumerator(name: "ELEMENT_TYPE_CAP_MASK_PARA_VPORT_TC", value: 8, isUnsigned: true)
!11817 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 281, baseType: !194, size: 32, elements: !11818)
!11818 = !{!11819, !11820}
!11819 = !DIEnumerator(name: "LEGACY_VEPA_PRIO", value: 0, isUnsigned: true)
!11820 = !DIEnumerator(name: "LEGACY_FDB_PRIO", value: 1, isUnsigned: true)
!11821 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10464, line: 1073, baseType: !194, size: 32, elements: !11822)
!11822 = !{!11823, !11824, !11825, !11826, !11827}
!11823 = !DIEnumerator(name: "MLX5_MATCH_OUTER_HEADERS", value: 1, isUnsigned: true)
!11824 = !DIEnumerator(name: "MLX5_MATCH_MISC_PARAMETERS", value: 2, isUnsigned: true)
!11825 = !DIEnumerator(name: "MLX5_MATCH_INNER_HEADERS", value: 4, isUnsigned: true)
!11826 = !DIEnumerator(name: "MLX5_MATCH_MISC_PARAMETERS_2", value: 8, isUnsigned: true)
!11827 = !DIEnumerator(name: "MLX5_MATCH_MISC_PARAMETERS_3", value: 16, isUnsigned: true)
!11828 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_event", file: !10464, line: 309, baseType: !194, size: 32, elements: !11829)
!11829 = !{!11830, !11831, !11832, !11833, !11834, !11835, !11836, !11837, !11838, !11839, !11840, !11841, !11842, !11843, !11844, !11845, !11846, !11847, !11848, !11849, !11850, !11851, !11852, !11853, !11854, !11855, !11856, !11857, !11858, !11859, !11860, !11861, !11862, !11863, !11864, !11865}
!11830 = !DIEnumerator(name: "MLX5_EVENT_TYPE_NOTIFY_ANY", value: 0, isUnsigned: true)
!11831 = !DIEnumerator(name: "MLX5_EVENT_TYPE_COMP", value: 0, isUnsigned: true)
!11832 = !DIEnumerator(name: "MLX5_EVENT_TYPE_PATH_MIG", value: 1, isUnsigned: true)
!11833 = !DIEnumerator(name: "MLX5_EVENT_TYPE_COMM_EST", value: 2, isUnsigned: true)
!11834 = !DIEnumerator(name: "MLX5_EVENT_TYPE_SQ_DRAINED", value: 3, isUnsigned: true)
!11835 = !DIEnumerator(name: "MLX5_EVENT_TYPE_SRQ_LAST_WQE", value: 19, isUnsigned: true)
!11836 = !DIEnumerator(name: "MLX5_EVENT_TYPE_SRQ_RQ_LIMIT", value: 20, isUnsigned: true)
!11837 = !DIEnumerator(name: "MLX5_EVENT_TYPE_CQ_ERROR", value: 4, isUnsigned: true)
!11838 = !DIEnumerator(name: "MLX5_EVENT_TYPE_WQ_CATAS_ERROR", value: 5, isUnsigned: true)
!11839 = !DIEnumerator(name: "MLX5_EVENT_TYPE_PATH_MIG_FAILED", value: 7, isUnsigned: true)
!11840 = !DIEnumerator(name: "MLX5_EVENT_TYPE_WQ_INVAL_REQ_ERROR", value: 16, isUnsigned: true)
!11841 = !DIEnumerator(name: "MLX5_EVENT_TYPE_WQ_ACCESS_ERROR", value: 17, isUnsigned: true)
!11842 = !DIEnumerator(name: "MLX5_EVENT_TYPE_SRQ_CATAS_ERROR", value: 18, isUnsigned: true)
!11843 = !DIEnumerator(name: "MLX5_EVENT_TYPE_INTERNAL_ERROR", value: 8, isUnsigned: true)
!11844 = !DIEnumerator(name: "MLX5_EVENT_TYPE_PORT_CHANGE", value: 9, isUnsigned: true)
!11845 = !DIEnumerator(name: "MLX5_EVENT_TYPE_GPIO_EVENT", value: 21, isUnsigned: true)
!11846 = !DIEnumerator(name: "MLX5_EVENT_TYPE_PORT_MODULE_EVENT", value: 22, isUnsigned: true)
!11847 = !DIEnumerator(name: "MLX5_EVENT_TYPE_TEMP_WARN_EVENT", value: 23, isUnsigned: true)
!11848 = !DIEnumerator(name: "MLX5_EVENT_TYPE_XRQ_ERROR", value: 24, isUnsigned: true)
!11849 = !DIEnumerator(name: "MLX5_EVENT_TYPE_REMOTE_CONFIG", value: 25, isUnsigned: true)
!11850 = !DIEnumerator(name: "MLX5_EVENT_TYPE_GENERAL_EVENT", value: 34, isUnsigned: true)
!11851 = !DIEnumerator(name: "MLX5_EVENT_TYPE_MONITOR_COUNTER", value: 36, isUnsigned: true)
!11852 = !DIEnumerator(name: "MLX5_EVENT_TYPE_PPS_EVENT", value: 37, isUnsigned: true)
!11853 = !DIEnumerator(name: "MLX5_EVENT_TYPE_DB_BF_CONGESTION", value: 26, isUnsigned: true)
!11854 = !DIEnumerator(name: "MLX5_EVENT_TYPE_STALL_EVENT", value: 27, isUnsigned: true)
!11855 = !DIEnumerator(name: "MLX5_EVENT_TYPE_CMD", value: 10, isUnsigned: true)
!11856 = !DIEnumerator(name: "MLX5_EVENT_TYPE_PAGE_REQUEST", value: 11, isUnsigned: true)
!11857 = !DIEnumerator(name: "MLX5_EVENT_TYPE_PAGE_FAULT", value: 12, isUnsigned: true)
!11858 = !DIEnumerator(name: "MLX5_EVENT_TYPE_NIC_VPORT_CHANGE", value: 13, isUnsigned: true)
!11859 = !DIEnumerator(name: "MLX5_EVENT_TYPE_ESW_FUNCTIONS_CHANGED", value: 14, isUnsigned: true)
!11860 = !DIEnumerator(name: "MLX5_EVENT_TYPE_DCT_DRAINED", value: 28, isUnsigned: true)
!11861 = !DIEnumerator(name: "MLX5_EVENT_TYPE_DCT_KEY_VIOLATION", value: 29, isUnsigned: true)
!11862 = !DIEnumerator(name: "MLX5_EVENT_TYPE_FPGA_ERROR", value: 32, isUnsigned: true)
!11863 = !DIEnumerator(name: "MLX5_EVENT_TYPE_FPGA_QP_ERROR", value: 33, isUnsigned: true)
!11864 = !DIEnumerator(name: "MLX5_EVENT_TYPE_DEVICE_TRACER", value: 38, isUnsigned: true)
!11865 = !DIEnumerator(name: "MLX5_EVENT_TYPE_MAX", value: 256, isUnsigned: true)
!11866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !11867, line: 305, baseType: !194, size: 32, elements: !11868)
!11867 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!11868 = !{!11869, !11870, !11871, !11872}
!11869 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!11870 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!11871 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!11872 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!11873 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xa_lock_type", file: !619, line: 254, baseType: !194, size: 32, elements: !11874)
!11874 = !{!11875, !11876}
!11875 = !DIEnumerator(name: "XA_LOCK_IRQ", value: 1, isUnsigned: true)
!11876 = !DIEnumerator(name: "XA_LOCK_BH", value: 2, isUnsigned: true)
!11877 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_driver_id", file: !11878, line: 232, baseType: !194, size: 32, elements: !11879)
!11878 = !DIFile(filename: "./include/uapi/rdma/ib_user_ioctl_verbs.h", directory: "/home/lizy2001/genbc/linux")
!11879 = !{!11880, !11881, !11882, !11883, !11884, !11885, !11886, !11887, !11888, !11889, !11890, !11891, !11892, !11893, !11894, !11895, !11896, !11897, !11898}
!11880 = !DIEnumerator(name: "RDMA_DRIVER_UNKNOWN", value: 0, isUnsigned: true)
!11881 = !DIEnumerator(name: "RDMA_DRIVER_MLX5", value: 1, isUnsigned: true)
!11882 = !DIEnumerator(name: "RDMA_DRIVER_MLX4", value: 2, isUnsigned: true)
!11883 = !DIEnumerator(name: "RDMA_DRIVER_CXGB3", value: 3, isUnsigned: true)
!11884 = !DIEnumerator(name: "RDMA_DRIVER_CXGB4", value: 4, isUnsigned: true)
!11885 = !DIEnumerator(name: "RDMA_DRIVER_MTHCA", value: 5, isUnsigned: true)
!11886 = !DIEnumerator(name: "RDMA_DRIVER_BNXT_RE", value: 6, isUnsigned: true)
!11887 = !DIEnumerator(name: "RDMA_DRIVER_OCRDMA", value: 7, isUnsigned: true)
!11888 = !DIEnumerator(name: "RDMA_DRIVER_NES", value: 8, isUnsigned: true)
!11889 = !DIEnumerator(name: "RDMA_DRIVER_I40IW", value: 9, isUnsigned: true)
!11890 = !DIEnumerator(name: "RDMA_DRIVER_VMW_PVRDMA", value: 10, isUnsigned: true)
!11891 = !DIEnumerator(name: "RDMA_DRIVER_QEDR", value: 11, isUnsigned: true)
!11892 = !DIEnumerator(name: "RDMA_DRIVER_HNS", value: 12, isUnsigned: true)
!11893 = !DIEnumerator(name: "RDMA_DRIVER_USNIC", value: 13, isUnsigned: true)
!11894 = !DIEnumerator(name: "RDMA_DRIVER_RXE", value: 14, isUnsigned: true)
!11895 = !DIEnumerator(name: "RDMA_DRIVER_HFI1", value: 15, isUnsigned: true)
!11896 = !DIEnumerator(name: "RDMA_DRIVER_QIB", value: 16, isUnsigned: true)
!11897 = !DIEnumerator(name: "RDMA_DRIVER_EFA", value: 17, isUnsigned: true)
!11898 = !DIEnumerator(name: "RDMA_DRIVER_SIW", value: 18, isUnsigned: true)
!11899 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_restrack_type", file: !11900, line: 23, baseType: !194, size: 32, elements: !11901)
!11900 = !DIFile(filename: "./include/rdma/restrack.h", directory: "/home/lizy2001/genbc/linux")
!11901 = !{!11902, !11903, !11904, !11905, !11906, !11907, !11908, !11909}
!11902 = !DIEnumerator(name: "RDMA_RESTRACK_PD", value: 0, isUnsigned: true)
!11903 = !DIEnumerator(name: "RDMA_RESTRACK_CQ", value: 1, isUnsigned: true)
!11904 = !DIEnumerator(name: "RDMA_RESTRACK_QP", value: 2, isUnsigned: true)
!11905 = !DIEnumerator(name: "RDMA_RESTRACK_CM_ID", value: 3, isUnsigned: true)
!11906 = !DIEnumerator(name: "RDMA_RESTRACK_MR", value: 4, isUnsigned: true)
!11907 = !DIEnumerator(name: "RDMA_RESTRACK_CTX", value: 5, isUnsigned: true)
!11908 = !DIEnumerator(name: "RDMA_RESTRACK_COUNTER", value: 6, isUnsigned: true)
!11909 = !DIEnumerator(name: "RDMA_RESTRACK_MAX", value: 7, isUnsigned: true)
!11910 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mr_type", file: !11911, line: 856, baseType: !194, size: 32, elements: !11912)
!11911 = !DIFile(filename: "./include/rdma/ib_verbs.h", directory: "/home/lizy2001/genbc/linux")
!11912 = !{!11913, !11914, !11915, !11916, !11917, !11918}
!11913 = !DIEnumerator(name: "IB_MR_TYPE_MEM_REG", value: 0, isUnsigned: true)
!11914 = !DIEnumerator(name: "IB_MR_TYPE_SG_GAPS", value: 1, isUnsigned: true)
!11915 = !DIEnumerator(name: "IB_MR_TYPE_DM", value: 2, isUnsigned: true)
!11916 = !DIEnumerator(name: "IB_MR_TYPE_USER", value: 3, isUnsigned: true)
!11917 = !DIEnumerator(name: "IB_MR_TYPE_DMA", value: 4, isUnsigned: true)
!11918 = !DIEnumerator(name: "IB_MR_TYPE_INTEGRITY", value: 5, isUnsigned: true)
!11919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_signature_type", file: !11920, line: 27, baseType: !194, size: 32, elements: !11921)
!11920 = !DIFile(filename: "./include/rdma/signature.h", directory: "/home/lizy2001/genbc/linux")
!11921 = !{!11922, !11923}
!11922 = !DIEnumerator(name: "IB_SIG_TYPE_NONE", value: 0, isUnsigned: true)
!11923 = !DIEnumerator(name: "IB_SIG_TYPE_T10_DIF", value: 1, isUnsigned: true)
!11924 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_t10_dif_bg_type", file: !11920, line: 37, baseType: !194, size: 32, elements: !11925)
!11925 = !{!11926, !11927}
!11926 = !DIEnumerator(name: "IB_T10DIF_CRC", value: 0, isUnsigned: true)
!11927 = !DIEnumerator(name: "IB_T10DIF_CSUM", value: 1, isUnsigned: true)
!11928 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_srq_type", file: !11911, line: 1021, baseType: !194, size: 32, elements: !11929)
!11929 = !{!11930, !11931, !11932}
!11930 = !DIEnumerator(name: "IB_SRQT_BASIC", value: 0, isUnsigned: true)
!11931 = !DIEnumerator(name: "IB_SRQT_XRC", value: 1, isUnsigned: true)
!11932 = !DIEnumerator(name: "IB_SRQT_TM", value: 2, isUnsigned: true)
!11933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wq_state", file: !11911, line: 1632, baseType: !194, size: 32, elements: !11934)
!11934 = !{!11935, !11936, !11937}
!11935 = !DIEnumerator(name: "IB_WQS_RESET", value: 0, isUnsigned: true)
!11936 = !DIEnumerator(name: "IB_WQS_RDY", value: 1, isUnsigned: true)
!11937 = !DIEnumerator(name: "IB_WQS_ERR", value: 2, isUnsigned: true)
!11938 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wq_type", file: !11911, line: 1628, baseType: !194, size: 32, elements: !11939)
!11939 = !{!11940}
!11940 = !DIEnumerator(name: "IB_WQT_RQ", value: 0, isUnsigned: true)
!11941 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_event_type", file: !11911, line: 706, baseType: !194, size: 32, elements: !11942)
!11942 = !{!11943, !11944, !11945, !11946, !11947, !11948, !11949, !11950, !11951, !11952, !11953, !11954, !11955, !11956, !11957, !11958, !11959, !11960, !11961, !11962}
!11943 = !DIEnumerator(name: "IB_EVENT_CQ_ERR", value: 0, isUnsigned: true)
!11944 = !DIEnumerator(name: "IB_EVENT_QP_FATAL", value: 1, isUnsigned: true)
!11945 = !DIEnumerator(name: "IB_EVENT_QP_REQ_ERR", value: 2, isUnsigned: true)
!11946 = !DIEnumerator(name: "IB_EVENT_QP_ACCESS_ERR", value: 3, isUnsigned: true)
!11947 = !DIEnumerator(name: "IB_EVENT_COMM_EST", value: 4, isUnsigned: true)
!11948 = !DIEnumerator(name: "IB_EVENT_SQ_DRAINED", value: 5, isUnsigned: true)
!11949 = !DIEnumerator(name: "IB_EVENT_PATH_MIG", value: 6, isUnsigned: true)
!11950 = !DIEnumerator(name: "IB_EVENT_PATH_MIG_ERR", value: 7, isUnsigned: true)
!11951 = !DIEnumerator(name: "IB_EVENT_DEVICE_FATAL", value: 8, isUnsigned: true)
!11952 = !DIEnumerator(name: "IB_EVENT_PORT_ACTIVE", value: 9, isUnsigned: true)
!11953 = !DIEnumerator(name: "IB_EVENT_PORT_ERR", value: 10, isUnsigned: true)
!11954 = !DIEnumerator(name: "IB_EVENT_LID_CHANGE", value: 11, isUnsigned: true)
!11955 = !DIEnumerator(name: "IB_EVENT_PKEY_CHANGE", value: 12, isUnsigned: true)
!11956 = !DIEnumerator(name: "IB_EVENT_SM_CHANGE", value: 13, isUnsigned: true)
!11957 = !DIEnumerator(name: "IB_EVENT_SRQ_ERR", value: 14, isUnsigned: true)
!11958 = !DIEnumerator(name: "IB_EVENT_SRQ_LIMIT_REACHED", value: 15, isUnsigned: true)
!11959 = !DIEnumerator(name: "IB_EVENT_QP_LAST_WQE_REACHED", value: 16, isUnsigned: true)
!11960 = !DIEnumerator(name: "IB_EVENT_CLIENT_REREGISTER", value: 17, isUnsigned: true)
!11961 = !DIEnumerator(name: "IB_EVENT_GID_CHANGE", value: 18, isUnsigned: true)
!11962 = !DIEnumerator(name: "IB_EVENT_WQ_FATAL", value: 19, isUnsigned: true)
!11963 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_poll_context", file: !11911, line: 1552, baseType: !194, size: 32, elements: !11964)
!11964 = !{!11965, !11966, !11967, !11968, !11969}
!11965 = !DIEnumerator(name: "IB_POLL_SOFTIRQ", value: 0, isUnsigned: true)
!11966 = !DIEnumerator(name: "IB_POLL_WORKQUEUE", value: 1, isUnsigned: true)
!11967 = !DIEnumerator(name: "IB_POLL_UNBOUND_WORKQUEUE", value: 2, isUnsigned: true)
!11968 = !DIEnumerator(name: "IB_POLL_LAST_POOL_TYPE", value: 2, isUnsigned: true)
!11969 = !DIEnumerator(name: "IB_POLL_DIRECT", value: 3, isUnsigned: true)
!11970 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wc_status", file: !11911, line: 931, baseType: !194, size: 32, elements: !11971)
!11971 = !{!11972, !11973, !11974, !11975, !11976, !11977, !11978, !11979, !11980, !11981, !11982, !11983, !11984, !11985, !11986, !11987, !11988, !11989, !11990, !11991, !11992, !11993}
!11972 = !DIEnumerator(name: "IB_WC_SUCCESS", value: 0, isUnsigned: true)
!11973 = !DIEnumerator(name: "IB_WC_LOC_LEN_ERR", value: 1, isUnsigned: true)
!11974 = !DIEnumerator(name: "IB_WC_LOC_QP_OP_ERR", value: 2, isUnsigned: true)
!11975 = !DIEnumerator(name: "IB_WC_LOC_EEC_OP_ERR", value: 3, isUnsigned: true)
!11976 = !DIEnumerator(name: "IB_WC_LOC_PROT_ERR", value: 4, isUnsigned: true)
!11977 = !DIEnumerator(name: "IB_WC_WR_FLUSH_ERR", value: 5, isUnsigned: true)
!11978 = !DIEnumerator(name: "IB_WC_MW_BIND_ERR", value: 6, isUnsigned: true)
!11979 = !DIEnumerator(name: "IB_WC_BAD_RESP_ERR", value: 7, isUnsigned: true)
!11980 = !DIEnumerator(name: "IB_WC_LOC_ACCESS_ERR", value: 8, isUnsigned: true)
!11981 = !DIEnumerator(name: "IB_WC_REM_INV_REQ_ERR", value: 9, isUnsigned: true)
!11982 = !DIEnumerator(name: "IB_WC_REM_ACCESS_ERR", value: 10, isUnsigned: true)
!11983 = !DIEnumerator(name: "IB_WC_REM_OP_ERR", value: 11, isUnsigned: true)
!11984 = !DIEnumerator(name: "IB_WC_RETRY_EXC_ERR", value: 12, isUnsigned: true)
!11985 = !DIEnumerator(name: "IB_WC_RNR_RETRY_EXC_ERR", value: 13, isUnsigned: true)
!11986 = !DIEnumerator(name: "IB_WC_LOC_RDD_VIOL_ERR", value: 14, isUnsigned: true)
!11987 = !DIEnumerator(name: "IB_WC_REM_INV_RD_REQ_ERR", value: 15, isUnsigned: true)
!11988 = !DIEnumerator(name: "IB_WC_REM_ABORT_ERR", value: 16, isUnsigned: true)
!11989 = !DIEnumerator(name: "IB_WC_INV_EECN_ERR", value: 17, isUnsigned: true)
!11990 = !DIEnumerator(name: "IB_WC_INV_EEC_STATE_ERR", value: 18, isUnsigned: true)
!11991 = !DIEnumerator(name: "IB_WC_FATAL_ERR", value: 19, isUnsigned: true)
!11992 = !DIEnumerator(name: "IB_WC_RESP_TIMEOUT_ERR", value: 20, isUnsigned: true)
!11993 = !DIEnumerator(name: "IB_WC_GENERAL_ERR", value: 21, isUnsigned: true)
!11994 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wc_opcode", file: !11911, line: 958, baseType: !194, size: 32, elements: !11995)
!11995 = !{!11996, !11997, !11998, !11999, !12000, !12001, !12002, !12003, !12004, !12005, !12006, !12007, !12008}
!11996 = !DIEnumerator(name: "IB_WC_SEND", value: 0, isUnsigned: true)
!11997 = !DIEnumerator(name: "IB_WC_RDMA_WRITE", value: 1, isUnsigned: true)
!11998 = !DIEnumerator(name: "IB_WC_RDMA_READ", value: 2, isUnsigned: true)
!11999 = !DIEnumerator(name: "IB_WC_COMP_SWAP", value: 3, isUnsigned: true)
!12000 = !DIEnumerator(name: "IB_WC_FETCH_ADD", value: 4, isUnsigned: true)
!12001 = !DIEnumerator(name: "IB_WC_BIND_MW", value: 5, isUnsigned: true)
!12002 = !DIEnumerator(name: "IB_WC_LOCAL_INV", value: 6, isUnsigned: true)
!12003 = !DIEnumerator(name: "IB_WC_LSO", value: 7, isUnsigned: true)
!12004 = !DIEnumerator(name: "IB_WC_REG_MR", value: 8, isUnsigned: true)
!12005 = !DIEnumerator(name: "IB_WC_MASKED_COMP_SWAP", value: 9, isUnsigned: true)
!12006 = !DIEnumerator(name: "IB_WC_MASKED_FETCH_ADD", value: 10, isUnsigned: true)
!12007 = !DIEnumerator(name: "IB_WC_RECV", value: 128, isUnsigned: true)
!12008 = !DIEnumerator(name: "IB_WC_RECV_RDMA_WITH_IMM", value: 129, isUnsigned: true)
!12009 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_gid_type", file: !11911, line: 140, baseType: !194, size: 32, elements: !12010)
!12010 = !{!12011, !12012, !12013, !12014}
!12011 = !DIEnumerator(name: "IB_GID_TYPE_IB", value: 0, isUnsigned: true)
!12012 = !DIEnumerator(name: "IB_GID_TYPE_ROCE", value: 1, isUnsigned: true)
!12013 = !DIEnumerator(name: "IB_GID_TYPE_ROCE_UDP_ENCAP", value: 2, isUnsigned: true)
!12014 = !DIEnumerator(name: "IB_GID_TYPE_SIZE", value: 3, isUnsigned: true)
!12015 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_qp_type", file: !11911, line: 1084, baseType: !194, size: 32, elements: !12016)
!12016 = !{!12017, !12018, !12019, !12020, !12021, !12022, !12023, !12024, !12025, !12026, !12027, !12028, !12029, !12030, !12031, !12032, !12033, !12034, !12035, !12036, !12037, !12038}
!12017 = !DIEnumerator(name: "IB_QPT_SMI", value: 0, isUnsigned: true)
!12018 = !DIEnumerator(name: "IB_QPT_GSI", value: 1, isUnsigned: true)
!12019 = !DIEnumerator(name: "IB_QPT_RC", value: 2, isUnsigned: true)
!12020 = !DIEnumerator(name: "IB_QPT_UC", value: 3, isUnsigned: true)
!12021 = !DIEnumerator(name: "IB_QPT_UD", value: 4, isUnsigned: true)
!12022 = !DIEnumerator(name: "IB_QPT_RAW_IPV6", value: 5, isUnsigned: true)
!12023 = !DIEnumerator(name: "IB_QPT_RAW_ETHERTYPE", value: 6, isUnsigned: true)
!12024 = !DIEnumerator(name: "IB_QPT_RAW_PACKET", value: 8, isUnsigned: true)
!12025 = !DIEnumerator(name: "IB_QPT_XRC_INI", value: 9, isUnsigned: true)
!12026 = !DIEnumerator(name: "IB_QPT_XRC_TGT", value: 10, isUnsigned: true)
!12027 = !DIEnumerator(name: "IB_QPT_MAX", value: 11, isUnsigned: true)
!12028 = !DIEnumerator(name: "IB_QPT_DRIVER", value: 255, isUnsigned: true)
!12029 = !DIEnumerator(name: "IB_QPT_RESERVED1", value: 4096, isUnsigned: true)
!12030 = !DIEnumerator(name: "IB_QPT_RESERVED2", value: 4097, isUnsigned: true)
!12031 = !DIEnumerator(name: "IB_QPT_RESERVED3", value: 4098, isUnsigned: true)
!12032 = !DIEnumerator(name: "IB_QPT_RESERVED4", value: 4099, isUnsigned: true)
!12033 = !DIEnumerator(name: "IB_QPT_RESERVED5", value: 4100, isUnsigned: true)
!12034 = !DIEnumerator(name: "IB_QPT_RESERVED6", value: 4101, isUnsigned: true)
!12035 = !DIEnumerator(name: "IB_QPT_RESERVED7", value: 4102, isUnsigned: true)
!12036 = !DIEnumerator(name: "IB_QPT_RESERVED8", value: 4103, isUnsigned: true)
!12037 = !DIEnumerator(name: "IB_QPT_RESERVED9", value: 4104, isUnsigned: true)
!12038 = !DIEnumerator(name: "IB_QPT_RESERVED10", value: 4105, isUnsigned: true)
!12039 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "port_pkey_state", file: !11911, line: 1697, baseType: !194, size: 32, elements: !12040)
!12040 = !{!12041, !12042, !12043}
!12041 = !DIEnumerator(name: "IB_PORT_PKEY_NOT_VALID", value: 0, isUnsigned: true)
!12042 = !DIEnumerator(name: "IB_PORT_PKEY_VALID", value: 1, isUnsigned: true)
!12043 = !DIEnumerator(name: "IB_PORT_PKEY_LISTED", value: 2, isUnsigned: true)
!12044 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_nl_counter_mode", file: !12045, line: 545, baseType: !194, size: 32, elements: !12046)
!12045 = !DIFile(filename: "./include/uapi/rdma/rdma_netlink.h", directory: "/home/lizy2001/genbc/linux")
!12046 = !{!12047, !12048, !12049, !12050}
!12047 = !DIEnumerator(name: "RDMA_COUNTER_MODE_NONE", value: 0, isUnsigned: true)
!12048 = !DIEnumerator(name: "RDMA_COUNTER_MODE_AUTO", value: 1, isUnsigned: true)
!12049 = !DIEnumerator(name: "RDMA_COUNTER_MODE_MANUAL", value: 2, isUnsigned: true)
!12050 = !DIEnumerator(name: "RDMA_COUNTER_MODE_MAX", value: 3, isUnsigned: true)
!12051 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_nl_counter_mask", file: !12045, line: 570, baseType: !194, size: 32, elements: !12052)
!12052 = !{!12053, !12054}
!12053 = !DIEnumerator(name: "RDMA_COUNTER_MASK_QP_TYPE", value: 1, isUnsigned: true)
!12054 = !DIEnumerator(name: "RDMA_COUNTER_MASK_PID", value: 2, isUnsigned: true)
!12055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wr_opcode", file: !11911, line: 1290, baseType: !194, size: 32, elements: !12056)
!12056 = !{!12057, !12058, !12059, !12060, !12061, !12062, !12063, !12064, !12065, !12066, !12067, !12068, !12069, !12070, !12071, !12072, !12073, !12074, !12075, !12076, !12077, !12078, !12079, !12080, !12081, !12082}
!12057 = !DIEnumerator(name: "IB_WR_RDMA_WRITE", value: 0, isUnsigned: true)
!12058 = !DIEnumerator(name: "IB_WR_RDMA_WRITE_WITH_IMM", value: 1, isUnsigned: true)
!12059 = !DIEnumerator(name: "IB_WR_SEND", value: 2, isUnsigned: true)
!12060 = !DIEnumerator(name: "IB_WR_SEND_WITH_IMM", value: 3, isUnsigned: true)
!12061 = !DIEnumerator(name: "IB_WR_RDMA_READ", value: 4, isUnsigned: true)
!12062 = !DIEnumerator(name: "IB_WR_ATOMIC_CMP_AND_SWP", value: 5, isUnsigned: true)
!12063 = !DIEnumerator(name: "IB_WR_ATOMIC_FETCH_AND_ADD", value: 6, isUnsigned: true)
!12064 = !DIEnumerator(name: "IB_WR_BIND_MW", value: 8, isUnsigned: true)
!12065 = !DIEnumerator(name: "IB_WR_LSO", value: 10, isUnsigned: true)
!12066 = !DIEnumerator(name: "IB_WR_SEND_WITH_INV", value: 9, isUnsigned: true)
!12067 = !DIEnumerator(name: "IB_WR_RDMA_READ_WITH_INV", value: 11, isUnsigned: true)
!12068 = !DIEnumerator(name: "IB_WR_LOCAL_INV", value: 7, isUnsigned: true)
!12069 = !DIEnumerator(name: "IB_WR_MASKED_ATOMIC_CMP_AND_SWP", value: 12, isUnsigned: true)
!12070 = !DIEnumerator(name: "IB_WR_MASKED_ATOMIC_FETCH_AND_ADD", value: 13, isUnsigned: true)
!12071 = !DIEnumerator(name: "IB_WR_REG_MR", value: 32, isUnsigned: true)
!12072 = !DIEnumerator(name: "IB_WR_REG_MR_INTEGRITY", value: 33, isUnsigned: true)
!12073 = !DIEnumerator(name: "IB_WR_RESERVED1", value: 240, isUnsigned: true)
!12074 = !DIEnumerator(name: "IB_WR_RESERVED2", value: 241, isUnsigned: true)
!12075 = !DIEnumerator(name: "IB_WR_RESERVED3", value: 242, isUnsigned: true)
!12076 = !DIEnumerator(name: "IB_WR_RESERVED4", value: 243, isUnsigned: true)
!12077 = !DIEnumerator(name: "IB_WR_RESERVED5", value: 244, isUnsigned: true)
!12078 = !DIEnumerator(name: "IB_WR_RESERVED6", value: 245, isUnsigned: true)
!12079 = !DIEnumerator(name: "IB_WR_RESERVED7", value: 246, isUnsigned: true)
!12080 = !DIEnumerator(name: "IB_WR_RESERVED8", value: 247, isUnsigned: true)
!12081 = !DIEnumerator(name: "IB_WR_RESERVED9", value: 248, isUnsigned: true)
!12082 = !DIEnumerator(name: "IB_WR_RESERVED10", value: 249, isUnsigned: true)
!12083 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_cq_notify_flags", file: !11911, line: 1014, baseType: !194, size: 32, elements: !12084)
!12084 = !{!12085, !12086, !12087, !12088}
!12085 = !DIEnumerator(name: "IB_CQ_SOLICITED", value: 1, isUnsigned: true)
!12086 = !DIEnumerator(name: "IB_CQ_NEXT_COMP", value: 2, isUnsigned: true)
!12087 = !DIEnumerator(name: "IB_CQ_SOLICITED_MASK", value: 3, isUnsigned: true)
!12088 = !DIEnumerator(name: "IB_CQ_REPORT_MISSED_EVENTS", value: 4, isUnsigned: true)
!12089 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_atomic_cap", file: !11911, line: 293, baseType: !194, size: 32, elements: !12090)
!12090 = !{!12091, !12092, !12093}
!12091 = !DIEnumerator(name: "IB_ATOMIC_NONE", value: 0, isUnsigned: true)
!12092 = !DIEnumerator(name: "IB_ATOMIC_HCA", value: 1, isUnsigned: true)
!12093 = !DIEnumerator(name: "IB_ATOMIC_GLOB", value: 2, isUnsigned: true)
!12094 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_port_state", file: !11911, line: 495, baseType: !194, size: 32, elements: !12095)
!12095 = !{!12096, !12097, !12098, !12099, !12100, !12101}
!12096 = !DIEnumerator(name: "IB_PORT_NOP", value: 0, isUnsigned: true)
!12097 = !DIEnumerator(name: "IB_PORT_DOWN", value: 1, isUnsigned: true)
!12098 = !DIEnumerator(name: "IB_PORT_INIT", value: 2, isUnsigned: true)
!12099 = !DIEnumerator(name: "IB_PORT_ARMED", value: 3, isUnsigned: true)
!12100 = !DIEnumerator(name: "IB_PORT_ACTIVE", value: 4, isUnsigned: true)
!12101 = !DIEnumerator(name: "IB_PORT_ACTIVE_DEFER", value: 5, isUnsigned: true)
!12102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mtu", file: !11911, line: 434, baseType: !194, size: 32, elements: !12103)
!12103 = !{!12104, !12105, !12106, !12107, !12108}
!12104 = !DIEnumerator(name: "IB_MTU_256", value: 1, isUnsigned: true)
!12105 = !DIEnumerator(name: "IB_MTU_512", value: 2, isUnsigned: true)
!12106 = !DIEnumerator(name: "IB_MTU_1024", value: 3, isUnsigned: true)
!12107 = !DIEnumerator(name: "IB_MTU_2048", value: 4, isUnsigned: true)
!12108 = !DIEnumerator(name: "IB_MTU_4096", value: 5, isUnsigned: true)
!12109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_link_layer", file: !11911, line: 213, baseType: !194, size: 32, elements: !12110)
!12110 = !{!12111, !12112, !12113}
!12111 = !DIEnumerator(name: "IB_LINK_LAYER_UNSPECIFIED", value: 0, isUnsigned: true)
!12112 = !DIEnumerator(name: "IB_LINK_LAYER_INFINIBAND", value: 1, isUnsigned: true)
!12113 = !DIEnumerator(name: "IB_LINK_LAYER_ETHERNET", value: 2, isUnsigned: true)
!12114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_netdev_t", file: !11911, line: 2182, baseType: !194, size: 32, elements: !12115)
!12115 = !{!12116, !12117}
!12116 = !DIEnumerator(name: "RDMA_NETDEV_OPA_VNIC", value: 0, isUnsigned: true)
!12117 = !DIEnumerator(name: "RDMA_NETDEV_IPOIB", value: 1, isUnsigned: true)
!12118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_ah_attr_type", file: !11911, line: 895, baseType: !194, size: 32, elements: !12119)
!12119 = !{!12120, !12121, !12122, !12123}
!12120 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_UNDEFINED", value: 0, isUnsigned: true)
!12121 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_IB", value: 1, isUnsigned: true)
!12122 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_ROCE", value: 2, isUnsigned: true)
!12123 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_OPA", value: 3, isUnsigned: true)
!12124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_srq_attr_mask", file: !11911, line: 1033, baseType: !194, size: 32, elements: !12125)
!12125 = !{!12126, !12127}
!12126 = !DIEnumerator(name: "IB_SRQ_MAX_WR", value: 1, isUnsigned: true)
!12127 = !DIEnumerator(name: "IB_SRQ_LIMIT", value: 2, isUnsigned: true)
!12128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_sig_type", file: !11911, line: 1079, baseType: !194, size: 32, elements: !12129)
!12129 = !{!12130, !12131}
!12130 = !DIEnumerator(name: "IB_SIGNAL_ALL_WR", value: 0, isUnsigned: true)
!12131 = !DIEnumerator(name: "IB_SIGNAL_REQ_WR", value: 1, isUnsigned: true)
!12132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_qp_state", file: !11911, line: 1239, baseType: !194, size: 32, elements: !12133)
!12133 = !{!12134, !12135, !12136, !12137, !12138, !12139, !12140}
!12134 = !DIEnumerator(name: "IB_QPS_RESET", value: 0, isUnsigned: true)
!12135 = !DIEnumerator(name: "IB_QPS_INIT", value: 1, isUnsigned: true)
!12136 = !DIEnumerator(name: "IB_QPS_RTR", value: 2, isUnsigned: true)
!12137 = !DIEnumerator(name: "IB_QPS_RTS", value: 3, isUnsigned: true)
!12138 = !DIEnumerator(name: "IB_QPS_SQD", value: 4, isUnsigned: true)
!12139 = !DIEnumerator(name: "IB_QPS_SQE", value: 5, isUnsigned: true)
!12140 = !DIEnumerator(name: "IB_QPS_ERR", value: 6, isUnsigned: true)
!12141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mig_state", file: !11911, line: 1249, baseType: !194, size: 32, elements: !12142)
!12142 = !{!12143, !12144, !12145}
!12143 = !DIEnumerator(name: "IB_MIG_MIGRATED", value: 0, isUnsigned: true)
!12144 = !DIEnumerator(name: "IB_MIG_REARM", value: 1, isUnsigned: true)
!12145 = !DIEnumerator(name: "IB_MIG_ARMED", value: 2, isUnsigned: true)
!12146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_uverbs_advise_mr_advice", file: !11878, line: 208, baseType: !194, size: 32, elements: !12147)
!12147 = !{!12148, !12149, !12150}
!12148 = !DIEnumerator(name: "IB_UVERBS_ADVISE_MR_ADVICE_PREFETCH", value: 0, isUnsigned: true)
!12149 = !DIEnumerator(name: "IB_UVERBS_ADVISE_MR_ADVICE_PREFETCH_WRITE", value: 1, isUnsigned: true)
!12150 = !DIEnumerator(name: "IB_UVERBS_ADVISE_MR_ADVICE_PREFETCH_NO_FAULT", value: 2, isUnsigned: true)
!12151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_sig_err_type", file: !11920, line: 94, baseType: !194, size: 32, elements: !12152)
!12152 = !{!12153, !12154, !12155}
!12153 = !DIEnumerator(name: "IB_SIG_BAD_GUARD", value: 0, isUnsigned: true)
!12154 = !DIEnumerator(name: "IB_SIG_BAD_REFTAG", value: 1, isUnsigned: true)
!12155 = !DIEnumerator(name: "IB_SIG_BAD_APPTAG", value: 2, isUnsigned: true)
!12156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mw_type", file: !11911, line: 1255, baseType: !194, size: 32, elements: !12157)
!12157 = !{!12158, !12159}
!12158 = !DIEnumerator(name: "IB_MW_TYPE_1", value: 1, isUnsigned: true)
!12159 = !DIEnumerator(name: "IB_MW_TYPE_2", value: 2, isUnsigned: true)
!12160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_flow_attr_type", file: !11911, line: 1821, baseType: !194, size: 32, elements: !12161)
!12161 = !{!12162, !12163, !12164, !12165}
!12162 = !DIEnumerator(name: "IB_FLOW_ATTR_NORMAL", value: 0, isUnsigned: true)
!12163 = !DIEnumerator(name: "IB_FLOW_ATTR_ALL_DEFAULT", value: 1, isUnsigned: true)
!12164 = !DIEnumerator(name: "IB_FLOW_ATTR_MC_DEFAULT", value: 2, isUnsigned: true)
!12165 = !DIEnumerator(name: "IB_FLOW_ATTR_SNIFFER", value: 3, isUnsigned: true)
!12166 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_flow_spec_type", file: !11911, line: 1837, baseType: !194, size: 32, elements: !12167)
!12167 = !{!12168, !12169, !12170, !12171, !12172, !12173, !12174, !12175, !12176, !12177, !12178, !12179, !12180, !12181, !12182}
!12168 = !DIEnumerator(name: "IB_FLOW_SPEC_ETH", value: 32, isUnsigned: true)
!12169 = !DIEnumerator(name: "IB_FLOW_SPEC_IB", value: 34, isUnsigned: true)
!12170 = !DIEnumerator(name: "IB_FLOW_SPEC_IPV4", value: 48, isUnsigned: true)
!12171 = !DIEnumerator(name: "IB_FLOW_SPEC_IPV6", value: 49, isUnsigned: true)
!12172 = !DIEnumerator(name: "IB_FLOW_SPEC_ESP", value: 52, isUnsigned: true)
!12173 = !DIEnumerator(name: "IB_FLOW_SPEC_TCP", value: 64, isUnsigned: true)
!12174 = !DIEnumerator(name: "IB_FLOW_SPEC_UDP", value: 65, isUnsigned: true)
!12175 = !DIEnumerator(name: "IB_FLOW_SPEC_VXLAN_TUNNEL", value: 80, isUnsigned: true)
!12176 = !DIEnumerator(name: "IB_FLOW_SPEC_GRE", value: 81, isUnsigned: true)
!12177 = !DIEnumerator(name: "IB_FLOW_SPEC_MPLS", value: 96, isUnsigned: true)
!12178 = !DIEnumerator(name: "IB_FLOW_SPEC_INNER", value: 256, isUnsigned: true)
!12179 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_TAG", value: 4096, isUnsigned: true)
!12180 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_DROP", value: 4097, isUnsigned: true)
!12181 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_HANDLE", value: 4098, isUnsigned: true)
!12182 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_COUNT", value: 4099, isUnsigned: true)
!12183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_flow_action_type", file: !11911, line: 2075, baseType: !194, size: 32, elements: !12184)
!12184 = !{!12185, !12186}
!12185 = !DIEnumerator(name: "IB_FLOW_ACTION_UNSPECIFIED", value: 0, isUnsigned: true)
!12186 = !DIEnumerator(name: "IB_FLOW_ACTION_ESP", value: 1, isUnsigned: true)
!12187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_uverbs_flow_action_esp_keymat", file: !11878, line: 144, baseType: !194, size: 32, elements: !12188)
!12188 = !{!12189}
!12189 = !DIEnumerator(name: "IB_UVERBS_FLOW_ACTION_ESP_KEYMAT_AES_GCM", value: 0, isUnsigned: true)
!12190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_uverbs_flow_action_esp_replay", file: !11878, line: 163, baseType: !194, size: 32, elements: !12191)
!12191 = !{!12192, !12193}
!12192 = !DIEnumerator(name: "IB_UVERBS_FLOW_ACTION_ESP_REPLAY_NONE", value: 0, isUnsigned: true)
!12193 = !DIEnumerator(name: "IB_UVERBS_FLOW_ACTION_ESP_REPLAY_BMP", value: 1, isUnsigned: true)
!12194 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10700, line: 3000, baseType: !194, size: 32, elements: !12195)
!12195 = !{!12196, !12197, !12198, !12199, !12200, !12201, !12202, !12203, !12204, !12205, !12206, !12207, !12208}
!12196 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_ALLOW", value: 1, isUnsigned: true)
!12197 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_DROP", value: 2, isUnsigned: true)
!12198 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_FWD_DEST", value: 4, isUnsigned: true)
!12199 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_COUNT", value: 8, isUnsigned: true)
!12200 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_PACKET_REFORMAT", value: 16, isUnsigned: true)
!12201 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_DECAP", value: 32, isUnsigned: true)
!12202 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_MOD_HDR", value: 64, isUnsigned: true)
!12203 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_POP", value: 128, isUnsigned: true)
!12204 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH", value: 256, isUnsigned: true)
!12205 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_POP_2", value: 1024, isUnsigned: true)
!12206 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH_2", value: 2048, isUnsigned: true)
!12207 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_IPSEC_DECRYPT", value: 4096, isUnsigned: true)
!12208 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_IPSEC_ENCRYPT", value: 8192, isUnsigned: true)
!12209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_list_type", file: !10464, line: 1092, baseType: !194, size: 32, elements: !12210)
!12210 = !{!12211, !12212, !12213}
!12211 = !DIEnumerator(name: "MLX5_NVPRT_LIST_TYPE_UC", value: 0, isUnsigned: true)
!12212 = !DIEnumerator(name: "MLX5_NVPRT_LIST_TYPE_MC", value: 1, isUnsigned: true)
!12213 = !DIEnumerator(name: "MLX5_NVPRT_LIST_TYPE_VLAN", value: 2, isUnsigned: true)
!12214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 47, baseType: !194, size: 32, elements: !12215)
!12215 = !{!12216, !12217, !12218}
!12216 = !DIEnumerator(name: "MLX5_ACTION_NONE", value: 0, isUnsigned: true)
!12217 = !DIEnumerator(name: "MLX5_ACTION_ADD", value: 1, isUnsigned: true)
!12218 = !DIEnumerator(name: "MLX5_ACTION_DEL", value: 2, isUnsigned: true)
!12219 = !{!226, !2014, !10619, !224, !623, !6, !130, !231, !10471, !12220, !154, !12221, !3875, !12223, !10791, !740, !2032, !12224, !194, !12226, !12227, !10958, !115, !4642, !2742, !1462, !12229, !3999, !12231, !1262, !12232, !12233, !12242, !12243, !12245}
!12220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10471, size: 64)
!12221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12222, size: 64)
!12222 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !26, line: 102, baseType: !1398)
!12223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10376, size: 64)
!12224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12225, size: 64)
!12225 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !563)
!12226 = !DIDerivedType(tag: DW_TAG_typedef, name: "xa_mark_t", file: !619, line: 246, baseType: !194)
!12227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12228, size: 64)
!12228 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !29)
!12229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12230, size: 64)
!12230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !739)
!12231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!12232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10948, size: 64)
!12233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12234, size: 64)
!12234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vport_addr", file: !3, line: 54, size: 384, elements: !12235)
!12235 = !{!12236, !12237, !12238, !12239, !12240, !12241}
!12236 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12234, file: !3, line: 55, baseType: !10948, size: 192)
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !12234, file: !3, line: 56, baseType: !1398, size: 8, offset: 192)
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !12234, file: !3, line: 57, baseType: !739, size: 16, offset: 208)
!12239 = !DIDerivedType(tag: DW_TAG_member, name: "flow_rule", scope: !12234, file: !3, line: 58, baseType: !10844, size: 64, offset: 256)
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "mpfs", scope: !12234, file: !3, line: 59, baseType: !299, size: 8, offset: 320)
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "mc_promisc", scope: !12234, file: !3, line: 61, baseType: !299, size: 8, offset: 328)
!12242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10945, size: 64)
!12243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12244, size: 64)
!12244 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !449)
!12245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12246, size: 64)
!12246 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !454)
!12247 = !{!0, !12248, !12250, !12252, !12254, !12258, !12264, !12267, !12269}
!12248 = !DIGlobalVariableExpression(var: !12249, expr: !DIExpression())
!12249 = distinct !DIGlobalVariable(name: "__key", scope: !2, file: !3, line: 1768, type: !456, isLocal: true, isDefinition: true)
!12250 = !DIGlobalVariableExpression(var: !12251, expr: !DIExpression())
!12251 = distinct !DIGlobalVariable(name: "__key", scope: !2, file: !3, line: 1773, type: !456, isLocal: true, isDefinition: true)
!12252 = !DIGlobalVariableExpression(var: !12253, expr: !DIExpression())
!12253 = distinct !DIGlobalVariable(name: "__key", scope: !2, file: !3, line: 1774, type: !456, isLocal: true, isDefinition: true)
!12254 = !DIGlobalVariableExpression(var: !12255, expr: !DIExpression())
!12255 = distinct !DIGlobalVariable(name: "__msg", scope: !12256, file: !3, line: 1901, type: !12257, isLocal: true, isDefinition: true)
!12256 = distinct !DISubprogram(name: "mlx5_devlink_port_function_hw_addr_get", scope: !3, file: !3, line: 1881, type: !4144, scopeLine: 1885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 192, elements: !7682)
!12258 = !DIGlobalVariableExpression(var: !12259, expr: !DIExpression())
!12259 = distinct !DIGlobalVariable(name: "__msg", scope: !12260, file: !3, line: 1927, type: !12261, isLocal: true, isDefinition: true)
!12260 = distinct !DISubprogram(name: "mlx5_devlink_port_function_hw_addr_set", scope: !3, file: !3, line: 1915, type: !4148, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 376, elements: !12262)
!12262 = !{!12263}
!12263 = !DISubrange(count: 47)
!12264 = !DIGlobalVariableExpression(var: !12265, expr: !DIExpression())
!12265 = distinct !DIGlobalVariable(name: "__msg", scope: !12260, file: !3, line: 1933, type: !12266, isLocal: true, isDefinition: true)
!12266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 352, elements: !1199)
!12267 = !DIGlobalVariableExpression(var: !12268, expr: !DIExpression())
!12268 = distinct !DIGlobalVariable(name: "__msg", scope: !12260, file: !3, line: 1938, type: !12257, isLocal: true, isDefinition: true)
!12269 = !DIGlobalVariableExpression(var: !12270, expr: !DIExpression())
!12270 = distinct !DIGlobalVariable(name: "__msg", scope: !12260, file: !3, line: 1946, type: !12271, isLocal: true, isDefinition: true)
!12271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 296, elements: !5369)
!12272 = !{i32 7, !"Dwarf Version", i32 4}
!12273 = !{i32 2, !"Debug Info Version", i32 3}
!12274 = !{i32 1, !"wchar_size", i32 2}
!12275 = !{i32 1, !"Code Model", i32 2}
!12276 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!12277 = distinct !DISubprogram(name: "mlx5_devlink_eswitch_get", scope: !3, file: !3, line: 78, type: !12278, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12278 = !DISubroutineType(types: !12279)
!12279 = !{!10791, !3875}
!12280 = !DILocalVariable(name: "devlink", arg: 1, scope: !12277, file: !3, line: 78, type: !3875)
!12281 = !DILocation(line: 78, column: 63, scope: !12277)
!12282 = !DILocalVariable(name: "dev", scope: !12277, file: !3, line: 80, type: !7)
!12283 = !DILocation(line: 80, column: 24, scope: !12277)
!12284 = !DILocation(line: 80, column: 43, scope: !12277)
!12285 = !DILocation(line: 80, column: 30, scope: !12277)
!12286 = !DILocalVariable(name: "err", scope: !12277, file: !3, line: 81, type: !6)
!12287 = !DILocation(line: 81, column: 6, scope: !12277)
!12288 = !DILocation(line: 83, column: 27, scope: !12277)
!12289 = !DILocation(line: 83, column: 8, scope: !12277)
!12290 = !DILocation(line: 83, column: 6, scope: !12277)
!12291 = !DILocation(line: 84, column: 6, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 84, column: 6)
!12293 = !DILocation(line: 84, column: 6, scope: !12277)
!12294 = !DILocation(line: 85, column: 18, scope: !12292)
!12295 = !DILocation(line: 85, column: 10, scope: !12292)
!12296 = !DILocation(line: 85, column: 3, scope: !12292)
!12297 = !DILocation(line: 87, column: 9, scope: !12277)
!12298 = !DILocation(line: 87, column: 14, scope: !12277)
!12299 = !DILocation(line: 87, column: 19, scope: !12277)
!12300 = !DILocation(line: 87, column: 2, scope: !12277)
!12301 = !DILocation(line: 88, column: 1, scope: !12277)
!12302 = distinct !DISubprogram(name: "devlink_priv", scope: !3869, file: !3869, line: 1350, type: !12303, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12303 = !DISubroutineType(types: !12304)
!12304 = !{!154, !3875}
!12305 = !DILocalVariable(name: "devlink", arg: 1, scope: !12302, file: !3869, line: 1350, type: !3875)
!12306 = !DILocation(line: 1350, column: 50, scope: !12302)
!12307 = !DILocation(line: 1352, column: 2, scope: !12302)
!12308 = !DILocation(line: 1352, column: 2, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !3869, line: 1352, column: 2)
!12310 = distinct !DILexicalBlock(scope: !12302, file: !3869, line: 1352, column: 2)
!12311 = !DILocation(line: 1352, column: 2, scope: !12310)
!12312 = !DILocation(line: 1352, column: 2, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12309, file: !3869, line: 1352, column: 2)
!12314 = !DILocation(line: 1352, column: 2, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12313, file: !3869, line: 1352, column: 2)
!12316 = !DILocation(line: 1352, column: 2, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12313, file: !3869, line: 1352, column: 2)
!12318 = !{i32 -2137050860, i32 -2137050831, i32 -2137050785, i32 -2137050727, i32 -2137050673, i32 -2137050619, i32 -2137050564, i32 -2137050533}
!12319 = !DILocation(line: 1352, column: 2, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !3869, line: 1352, column: 2)
!12321 = distinct !DILexicalBlock(scope: !12313, file: !3869, line: 1352, column: 2)
!12322 = !{i32 -2137050088, i32 -2137050081, i32 -2137050027, i32 -2137049996, i32 -2137049966}
!12323 = !DILocation(line: 1352, column: 2, scope: !12321)
!12324 = !DILocation(line: 1353, column: 10, scope: !12302)
!12325 = !DILocation(line: 1353, column: 19, scope: !12302)
!12326 = !DILocation(line: 1353, column: 9, scope: !12302)
!12327 = !DILocation(line: 1353, column: 2, scope: !12302)
!12328 = distinct !DISubprogram(name: "mlx5_eswitch_check", scope: !3, file: !3, line: 67, type: !12329, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12329 = !DISubroutineType(types: !12330)
!12330 = !{!6, !12331}
!12331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12332, size: 64)
!12332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!12333 = !DILocalVariable(name: "dev", arg: 1, scope: !12328, file: !3, line: 67, type: !12331)
!12334 = !DILocation(line: 67, column: 59, scope: !12328)
!12335 = !DILocation(line: 69, column: 6, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 69, column: 6)
!12337 = !DILocation(line: 69, column: 35, scope: !12336)
!12338 = !DILocation(line: 69, column: 6, scope: !12328)
!12339 = !DILocation(line: 70, column: 3, scope: !12336)
!12340 = !DILocation(line: 72, column: 7, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 72, column: 6)
!12342 = !DILocation(line: 72, column: 6, scope: !12328)
!12343 = !DILocation(line: 73, column: 3, scope: !12341)
!12344 = !DILocation(line: 75, column: 2, scope: !12328)
!12345 = !DILocation(line: 76, column: 1, scope: !12328)
!12346 = distinct !DISubprogram(name: "ERR_PTR", scope: !12347, file: !12347, line: 24, type: !12348, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12347 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!12348 = !DISubroutineType(types: !12349)
!12349 = !{!154, !115}
!12350 = !DILocalVariable(name: "error", arg: 1, scope: !12346, file: !12347, line: 24, type: !115)
!12351 = !DILocation(line: 24, column: 48, scope: !12346)
!12352 = !DILocation(line: 26, column: 18, scope: !12346)
!12353 = !DILocation(line: 26, column: 9, scope: !12346)
!12354 = !DILocation(line: 26, column: 2, scope: !12346)
!12355 = distinct !DISubprogram(name: "mlx5_eswitch_get_vport", scope: !3, file: !3, line: 91, type: !12356, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12356 = !DISubroutineType(types: !12357)
!12357 = !{!10958, !10791, !739}
!12358 = !DILocalVariable(name: "esw", arg: 1, scope: !12355, file: !3, line: 91, type: !10791)
!12359 = !DILocation(line: 91, column: 45, scope: !12355)
!12360 = !DILocalVariable(name: "vport_num", arg: 2, scope: !12355, file: !3, line: 91, type: !739)
!12361 = !DILocation(line: 91, column: 54, scope: !12355)
!12362 = !DILocalVariable(name: "idx", scope: !12355, file: !3, line: 93, type: !739)
!12363 = !DILocation(line: 93, column: 6, scope: !12355)
!12364 = !DILocation(line: 95, column: 7, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 95, column: 6)
!12366 = !DILocation(line: 95, column: 11, scope: !12365)
!12367 = !DILocation(line: 95, column: 15, scope: !12365)
!12368 = !DILocation(line: 95, column: 6, scope: !12355)
!12369 = !DILocation(line: 96, column: 10, scope: !12365)
!12370 = !DILocation(line: 96, column: 3, scope: !12365)
!12371 = !DILocation(line: 98, column: 40, scope: !12355)
!12372 = !DILocation(line: 98, column: 45, scope: !12355)
!12373 = !DILocation(line: 98, column: 8, scope: !12355)
!12374 = !DILocation(line: 98, column: 6, scope: !12355)
!12375 = !DILocation(line: 100, column: 6, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 100, column: 6)
!12377 = !DILocation(line: 100, column: 12, scope: !12376)
!12378 = !DILocation(line: 100, column: 17, scope: !12376)
!12379 = !DILocation(line: 100, column: 30, scope: !12376)
!12380 = !DILocation(line: 100, column: 10, scope: !12376)
!12381 = !DILocation(line: 100, column: 6, scope: !12355)
!12382 = !DILocation(line: 101, column: 3, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12376, file: !3, line: 100, column: 35)
!12384 = !DILocation(line: 101, column: 3, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 101, column: 3)
!12386 = distinct !DILexicalBlock(scope: !12383, file: !3, line: 101, column: 3)
!12387 = !DILocation(line: 101, column: 3, scope: !12386)
!12388 = !DILocation(line: 103, column: 10, scope: !12383)
!12389 = !DILocation(line: 103, column: 3, scope: !12383)
!12390 = !DILocation(line: 106, column: 10, scope: !12355)
!12391 = !DILocation(line: 106, column: 15, scope: !12355)
!12392 = !DILocation(line: 106, column: 22, scope: !12355)
!12393 = !DILocation(line: 106, column: 2, scope: !12355)
!12394 = !DILocation(line: 107, column: 1, scope: !12355)
!12395 = distinct !DISubprogram(name: "__fswab32", scope: !12396, file: !12396, line: 57, type: !12397, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12396 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!12397 = !DISubroutineType(types: !12398)
!12398 = !{!226, !226}
!12399 = !DILocalVariable(name: "val", arg: 1, scope: !12395, file: !12396, line: 57, type: !226)
!12400 = !DILocation(line: 57, column: 57, scope: !12395)
!12401 = !DILocation(line: 60, column: 23, scope: !12395)
!12402 = !DILocation(line: 60, column: 9, scope: !12395)
!12403 = !DILocation(line: 60, column: 2, scope: !12395)
!12404 = distinct !DISubprogram(name: "mlx5_eswitch_vport_num_to_index", scope: !10793, file: !10793, line: 518, type: !12405, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12405 = !DISubroutineType(types: !12406)
!12406 = !{!6, !10791, !739}
!12407 = !DILocalVariable(name: "esw", arg: 1, scope: !12404, file: !10793, line: 518, type: !10791)
!12408 = !DILocation(line: 518, column: 72, scope: !12404)
!12409 = !DILocalVariable(name: "vport_num", arg: 2, scope: !12404, file: !10793, line: 519, type: !739)
!12410 = !DILocation(line: 519, column: 13, scope: !12404)
!12411 = !DILocation(line: 521, column: 6, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12404, file: !10793, line: 521, column: 6)
!12413 = !DILocation(line: 521, column: 16, scope: !12412)
!12414 = !DILocation(line: 521, column: 6, scope: !12404)
!12415 = !DILocation(line: 522, column: 31, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !10793, line: 522, column: 7)
!12417 = distinct !DILexicalBlock(scope: !12412, file: !10793, line: 521, column: 36)
!12418 = !DILocation(line: 522, column: 36, scope: !12416)
!12419 = !DILocation(line: 522, column: 8, scope: !12416)
!12420 = !DILocation(line: 522, column: 7, scope: !12417)
!12421 = !DILocation(line: 523, column: 4, scope: !12416)
!12422 = !DILocation(line: 524, column: 32, scope: !12417)
!12423 = !DILocation(line: 524, column: 10, scope: !12417)
!12424 = !DILocation(line: 524, column: 3, scope: !12417)
!12425 = !DILocation(line: 527, column: 6, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12404, file: !10793, line: 527, column: 6)
!12427 = !DILocation(line: 527, column: 16, scope: !12426)
!12428 = !DILocation(line: 527, column: 6, scope: !12404)
!12429 = !DILocation(line: 528, column: 34, scope: !12426)
!12430 = !DILocation(line: 528, column: 10, scope: !12426)
!12431 = !DILocation(line: 528, column: 3, scope: !12426)
!12432 = !DILocation(line: 530, column: 9, scope: !12404)
!12433 = !DILocation(line: 530, column: 2, scope: !12404)
!12434 = !DILocation(line: 531, column: 1, scope: !12404)
!12435 = distinct !DISubprogram(name: "mlx5_eswitch_modify_esw_vport_context", scope: !3, file: !3, line: 139, type: !12436, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12436 = !DISubroutineType(types: !12437)
!12437 = !{!6, !7, !739, !299, !154}
!12438 = !DILocalVariable(name: "dev", arg: 1, scope: !12435, file: !3, line: 139, type: !7)
!12439 = !DILocation(line: 139, column: 65, scope: !12435)
!12440 = !DILocalVariable(name: "vport", arg: 2, scope: !12435, file: !3, line: 139, type: !739)
!12441 = !DILocation(line: 139, column: 74, scope: !12435)
!12442 = !DILocalVariable(name: "other_vport", arg: 3, scope: !12435, file: !3, line: 140, type: !299)
!12443 = !DILocation(line: 140, column: 13, scope: !12435)
!12444 = !DILocalVariable(name: "in", arg: 4, scope: !12435, file: !3, line: 140, type: !154)
!12445 = !DILocation(line: 140, column: 32, scope: !12435)
!12446 = !DILocation(line: 142, column: 2, scope: !12435)
!12447 = !DILocalVariable(name: "_v", scope: !12448, file: !3, line: 142, type: !224)
!12448 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 142, column: 2)
!12449 = !DILocation(line: 142, column: 2, scope: !12448)
!12450 = !DILocation(line: 142, column: 2, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 142, column: 2)
!12452 = !DILocation(line: 144, column: 2, scope: !12435)
!12453 = !DILocalVariable(name: "_v", scope: !12454, file: !3, line: 144, type: !224)
!12454 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 144, column: 2)
!12455 = !DILocation(line: 144, column: 2, scope: !12454)
!12456 = !DILocation(line: 144, column: 2, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12454, file: !3, line: 144, column: 2)
!12458 = !DILocation(line: 145, column: 2, scope: !12435)
!12459 = !DILocalVariable(name: "_v", scope: !12460, file: !3, line: 145, type: !224)
!12460 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 145, column: 2)
!12461 = !DILocation(line: 145, column: 2, scope: !12460)
!12462 = !DILocation(line: 145, column: 2, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 145, column: 2)
!12464 = !DILocalVariable(name: "_out", scope: !12465, file: !3, line: 146, type: !12466)
!12465 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 146, column: 9)
!12466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 128, elements: !1207)
!12467 = !DILocation(line: 146, column: 9, scope: !12465)
!12468 = !DILocation(line: 146, column: 9, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12465, file: !3, line: 146, column: 9)
!12470 = !DILocation(line: 146, column: 2, scope: !12435)
!12471 = distinct !DISubprogram(name: "mlx5_esw_modify_vport_rate", scope: !3, file: !3, line: 1138, type: !12472, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12472 = !DISubroutineType(types: !12473)
!12473 = !{!6, !10791, !739, !224}
!12474 = !DILocalVariable(name: "esw", arg: 1, scope: !12471, file: !3, line: 1138, type: !10791)
!12475 = !DILocation(line: 1138, column: 53, scope: !12471)
!12476 = !DILocalVariable(name: "vport_num", arg: 2, scope: !12471, file: !3, line: 1138, type: !739)
!12477 = !DILocation(line: 1138, column: 62, scope: !12471)
!12478 = !DILocalVariable(name: "rate_mbps", arg: 3, scope: !12471, file: !3, line: 1139, type: !224)
!12479 = !DILocation(line: 1139, column: 15, scope: !12471)
!12480 = !DILocalVariable(name: "ctx", scope: !12471, file: !3, line: 1141, type: !10339)
!12481 = !DILocation(line: 1141, column: 6, scope: !12471)
!12482 = !DILocalVariable(name: "vport", scope: !12471, file: !3, line: 1142, type: !10958)
!12483 = !DILocation(line: 1142, column: 21, scope: !12471)
!12484 = !DILocation(line: 1144, column: 33, scope: !12471)
!12485 = !DILocation(line: 1144, column: 38, scope: !12471)
!12486 = !DILocation(line: 1144, column: 10, scope: !12471)
!12487 = !DILocation(line: 1144, column: 8, scope: !12471)
!12488 = !DILocation(line: 1146, column: 7, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 1146, column: 6)
!12490 = !DILocation(line: 1146, column: 14, scope: !12489)
!12491 = !DILocation(line: 1146, column: 18, scope: !12489)
!12492 = !DILocation(line: 1146, column: 6, scope: !12471)
!12493 = !DILocation(line: 1147, column: 3, scope: !12489)
!12494 = !DILocation(line: 1149, column: 2, scope: !12471)
!12495 = !DILocalVariable(name: "_v", scope: !12496, file: !3, line: 1149, type: !224)
!12496 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 1149, column: 2)
!12497 = !DILocation(line: 1149, column: 2, scope: !12496)
!12498 = !DILocation(line: 1149, column: 2, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 1149, column: 2)
!12500 = !DILocation(line: 1151, column: 44, scope: !12471)
!12501 = !DILocation(line: 1151, column: 49, scope: !12471)
!12502 = !DILocation(line: 1153, column: 9, scope: !12471)
!12503 = !DILocation(line: 1154, column: 9, scope: !12471)
!12504 = !DILocation(line: 1154, column: 16, scope: !12471)
!12505 = !DILocation(line: 1154, column: 20, scope: !12471)
!12506 = !DILocation(line: 1151, column: 9, scope: !12471)
!12507 = !DILocation(line: 1151, column: 2, scope: !12471)
!12508 = !DILocation(line: 1156, column: 1, scope: !12471)
!12509 = distinct !DISubprogram(name: "mlx5_esw_query_functions", scope: !3, file: !3, line: 1365, type: !12510, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12510 = !DISubroutineType(types: !12511)
!12511 = !{!4642, !7}
!12512 = !DILocalVariable(name: "dev", arg: 1, scope: !12509, file: !3, line: 1365, type: !7)
!12513 = !DILocation(line: 1365, column: 59, scope: !12509)
!12514 = !DILocalVariable(name: "outlen", scope: !12509, file: !3, line: 1367, type: !6)
!12515 = !DILocation(line: 1367, column: 6, scope: !12509)
!12516 = !DILocalVariable(name: "in", scope: !12509, file: !3, line: 1368, type: !12466)
!12517 = !DILocation(line: 1368, column: 6, scope: !12509)
!12518 = !DILocalVariable(name: "out", scope: !12509, file: !3, line: 1369, type: !1462)
!12519 = !DILocation(line: 1369, column: 7, scope: !12509)
!12520 = !DILocalVariable(name: "err", scope: !12509, file: !3, line: 1370, type: !6)
!12521 = !DILocation(line: 1370, column: 6, scope: !12509)
!12522 = !DILocation(line: 1372, column: 17, scope: !12509)
!12523 = !DILocation(line: 1372, column: 8, scope: !12509)
!12524 = !DILocation(line: 1372, column: 6, scope: !12509)
!12525 = !DILocation(line: 1373, column: 7, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12509, file: !3, line: 1373, column: 6)
!12527 = !DILocation(line: 1373, column: 6, scope: !12509)
!12528 = !DILocation(line: 1374, column: 10, scope: !12526)
!12529 = !DILocation(line: 1374, column: 3, scope: !12526)
!12530 = !DILocation(line: 1376, column: 2, scope: !12509)
!12531 = !DILocalVariable(name: "_v", scope: !12532, file: !3, line: 1376, type: !224)
!12532 = distinct !DILexicalBlock(scope: !12509, file: !3, line: 1376, column: 2)
!12533 = !DILocation(line: 1376, column: 2, scope: !12532)
!12534 = !DILocation(line: 1376, column: 2, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 1376, column: 2)
!12536 = !DILocation(line: 1379, column: 8, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12509, file: !3, line: 1379, column: 8)
!12538 = !DILocation(line: 1379, column: 8, scope: !12509)
!12539 = !DILocation(line: 1379, column: 6, scope: !12509)
!12540 = !DILocation(line: 1380, column: 7, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12509, file: !3, line: 1380, column: 6)
!12542 = !DILocation(line: 1380, column: 6, scope: !12509)
!12543 = !DILocation(line: 1381, column: 10, scope: !12541)
!12544 = !DILocation(line: 1381, column: 3, scope: !12541)
!12545 = !DILocation(line: 1383, column: 9, scope: !12509)
!12546 = !DILocation(line: 1383, column: 2, scope: !12509)
!12547 = !DILocation(line: 1384, column: 17, scope: !12509)
!12548 = !DILocation(line: 1384, column: 9, scope: !12509)
!12549 = !DILocation(line: 1384, column: 2, scope: !12509)
!12550 = !DILocation(line: 1385, column: 1, scope: !12509)
!12551 = distinct !DISubprogram(name: "kvzalloc", scope: !1058, file: !1058, line: 771, type: !12552, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12552 = !DISubroutineType(types: !12553)
!12553 = !{!154, !127, !623}
!12554 = !DILocalVariable(name: "size", arg: 1, scope: !12551, file: !1058, line: 771, type: !127)
!12555 = !DILocation(line: 771, column: 37, scope: !12551)
!12556 = !DILocalVariable(name: "flags", arg: 2, scope: !12551, file: !1058, line: 771, type: !623)
!12557 = !DILocation(line: 771, column: 49, scope: !12551)
!12558 = !DILocation(line: 773, column: 18, scope: !12551)
!12559 = !DILocation(line: 773, column: 24, scope: !12551)
!12560 = !DILocation(line: 773, column: 30, scope: !12551)
!12561 = !DILocation(line: 773, column: 9, scope: !12551)
!12562 = !DILocation(line: 773, column: 2, scope: !12551)
!12563 = distinct !DISubprogram(name: "mlx5_eswitch_load_vport", scope: !3, file: !3, line: 1424, type: !12564, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12564 = !DISubroutineType(types: !12565)
!12565 = !{!6, !10791, !739, !11042}
!12566 = !DILocalVariable(name: "esw", arg: 1, scope: !12563, file: !3, line: 1424, type: !10791)
!12567 = !DILocation(line: 1424, column: 50, scope: !12563)
!12568 = !DILocalVariable(name: "vport_num", arg: 2, scope: !12563, file: !3, line: 1424, type: !739)
!12569 = !DILocation(line: 1424, column: 59, scope: !12563)
!12570 = !DILocalVariable(name: "enabled_events", arg: 3, scope: !12563, file: !3, line: 1425, type: !11042)
!12571 = !DILocation(line: 1425, column: 38, scope: !12563)
!12572 = !DILocalVariable(name: "err", scope: !12563, file: !3, line: 1427, type: !6)
!12573 = !DILocation(line: 1427, column: 6, scope: !12563)
!12574 = !DILocation(line: 1429, column: 25, scope: !12563)
!12575 = !DILocation(line: 1429, column: 30, scope: !12563)
!12576 = !DILocation(line: 1429, column: 41, scope: !12563)
!12577 = !DILocation(line: 1429, column: 8, scope: !12563)
!12578 = !DILocation(line: 1429, column: 6, scope: !12563)
!12579 = !DILocation(line: 1430, column: 6, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 1430, column: 6)
!12581 = !DILocation(line: 1430, column: 6, scope: !12563)
!12582 = !DILocation(line: 1431, column: 10, scope: !12580)
!12583 = !DILocation(line: 1431, column: 3, scope: !12580)
!12584 = !DILocation(line: 1433, column: 30, scope: !12563)
!12585 = !DILocation(line: 1433, column: 35, scope: !12563)
!12586 = !DILocation(line: 1433, column: 8, scope: !12563)
!12587 = !DILocation(line: 1433, column: 6, scope: !12563)
!12588 = !DILocation(line: 1434, column: 6, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 1434, column: 6)
!12590 = !DILocation(line: 1434, column: 6, scope: !12563)
!12591 = !DILocation(line: 1435, column: 3, scope: !12589)
!12592 = !DILocation(line: 1437, column: 9, scope: !12563)
!12593 = !DILocation(line: 1437, column: 2, scope: !12563)
!12594 = !DILabel(scope: !12563, name: "err_rep", file: !3, line: 1439)
!12595 = !DILocation(line: 1439, column: 1, scope: !12563)
!12596 = !DILocation(line: 1440, column: 20, scope: !12563)
!12597 = !DILocation(line: 1440, column: 25, scope: !12563)
!12598 = !DILocation(line: 1440, column: 2, scope: !12563)
!12599 = !DILocation(line: 1441, column: 9, scope: !12563)
!12600 = !DILocation(line: 1441, column: 2, scope: !12563)
!12601 = !DILocation(line: 1442, column: 1, scope: !12563)
!12602 = distinct !DISubprogram(name: "esw_enable_vport", scope: !3, file: !3, line: 1276, type: !12564, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12603 = !DILocalVariable(name: "esw", arg: 1, scope: !12602, file: !3, line: 1276, type: !10791)
!12604 = !DILocation(line: 1276, column: 50, scope: !12602)
!12605 = !DILocalVariable(name: "vport_num", arg: 2, scope: !12602, file: !3, line: 1276, type: !739)
!12606 = !DILocation(line: 1276, column: 59, scope: !12602)
!12607 = !DILocalVariable(name: "enabled_events", arg: 3, scope: !12602, file: !3, line: 1277, type: !11042)
!12608 = !DILocation(line: 1277, column: 38, scope: !12602)
!12609 = !DILocalVariable(name: "vport", scope: !12602, file: !3, line: 1279, type: !10958)
!12610 = !DILocation(line: 1279, column: 21, scope: !12602)
!12611 = !DILocalVariable(name: "ret", scope: !12602, file: !3, line: 1280, type: !6)
!12612 = !DILocation(line: 1280, column: 6, scope: !12602)
!12613 = !DILocation(line: 1282, column: 33, scope: !12602)
!12614 = !DILocation(line: 1282, column: 38, scope: !12602)
!12615 = !DILocation(line: 1282, column: 10, scope: !12602)
!12616 = !DILocation(line: 1282, column: 8, scope: !12602)
!12617 = !DILocation(line: 1284, column: 14, scope: !12602)
!12618 = !DILocation(line: 1284, column: 19, scope: !12602)
!12619 = !DILocation(line: 1284, column: 2, scope: !12602)
!12620 = !DILocalVariable(name: "__ret_warn_on", scope: !12621, file: !3, line: 1285, type: !6)
!12621 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 1285, column: 2)
!12622 = !DILocation(line: 1285, column: 2, scope: !12621)
!12623 = !DILocation(line: 1285, column: 2, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 1285, column: 2)
!12625 = !DILocation(line: 1285, column: 2, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12624, file: !3, line: 1285, column: 2)
!12627 = !DILocation(line: 1285, column: 2, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 1285, column: 2)
!12629 = !DILocation(line: 1285, column: 2, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 1285, column: 2)
!12631 = !{i32 -2134939948, i32 -2134939919, i32 -2134939873, i32 -2134939815, i32 -2134939761, i32 -2134939707, i32 -2134939652, i32 -2134939621}
!12632 = !DILocation(line: 1285, column: 2, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 1285, column: 2)
!12634 = !{i32 -2134939189, i32 -2134939182, i32 -2134939130, i32 -2134939099, i32 -2134939069}
!12635 = !DILocation(line: 1285, column: 2, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 1285, column: 2)
!12637 = !DILocation(line: 1287, column: 2, scope: !12602)
!12638 = !DILocation(line: 1287, column: 2, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12640, file: !3, line: 1287, column: 2)
!12640 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 1287, column: 2)
!12641 = !DILocation(line: 1287, column: 2, scope: !12640)
!12642 = !DILocation(line: 1289, column: 24, scope: !12602)
!12643 = !DILocation(line: 1289, column: 29, scope: !12602)
!12644 = !DILocation(line: 1289, column: 8, scope: !12602)
!12645 = !DILocation(line: 1289, column: 6, scope: !12602)
!12646 = !DILocation(line: 1290, column: 6, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 1290, column: 6)
!12648 = !DILocation(line: 1290, column: 6, scope: !12602)
!12649 = !DILocation(line: 1291, column: 3, scope: !12647)
!12650 = !DILocation(line: 1294, column: 26, scope: !12602)
!12651 = !DILocation(line: 1294, column: 2, scope: !12602)
!12652 = !DILocation(line: 1294, column: 9, scope: !12602)
!12653 = !DILocation(line: 1294, column: 24, scope: !12602)
!12654 = !DILocation(line: 1295, column: 2, scope: !12602)
!12655 = !DILocation(line: 1295, column: 9, scope: !12602)
!12656 = !DILocation(line: 1295, column: 17, scope: !12602)
!12657 = !DILocation(line: 1300, column: 32, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 1300, column: 6)
!12659 = !DILocation(line: 1300, column: 37, scope: !12658)
!12660 = !DILocation(line: 1300, column: 6, scope: !12658)
!12661 = !DILocation(line: 1300, column: 48, scope: !12658)
!12662 = !DILocation(line: 1301, column: 8, scope: !12658)
!12663 = !DILocation(line: 1301, column: 18, scope: !12658)
!12664 = !DILocation(line: 1301, column: 39, scope: !12658)
!12665 = !DILocation(line: 1301, column: 44, scope: !12658)
!12666 = !DILocation(line: 1301, column: 21, scope: !12658)
!12667 = !DILocation(line: 1300, column: 6, scope: !12602)
!12668 = !DILocation(line: 1302, column: 3, scope: !12658)
!12669 = !DILocation(line: 1302, column: 10, scope: !12658)
!12670 = !DILocation(line: 1302, column: 15, scope: !12658)
!12671 = !DILocation(line: 1302, column: 23, scope: !12658)
!12672 = !DILocation(line: 1304, column: 33, scope: !12602)
!12673 = !DILocation(line: 1304, column: 2, scope: !12602)
!12674 = !DILocation(line: 1306, column: 2, scope: !12602)
!12675 = !DILocation(line: 1306, column: 7, scope: !12602)
!12676 = !DILocation(line: 1306, column: 21, scope: !12602)
!12677 = !DILocation(line: 1307, column: 2, scope: !12602)
!12678 = !DILocation(line: 1307, column: 2, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 1307, column: 2)
!12680 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 1307, column: 2)
!12681 = !DILocation(line: 1307, column: 2, scope: !12680)
!12682 = !DILabel(scope: !12602, name: "done", file: !3, line: 1308)
!12683 = !DILocation(line: 1308, column: 1, scope: !12602)
!12684 = !DILocation(line: 1309, column: 16, scope: !12602)
!12685 = !DILocation(line: 1309, column: 21, scope: !12602)
!12686 = !DILocation(line: 1309, column: 2, scope: !12602)
!12687 = !DILocation(line: 1310, column: 9, scope: !12602)
!12688 = !DILocation(line: 1310, column: 2, scope: !12602)
!12689 = distinct !DISubprogram(name: "esw_disable_vport", scope: !3, file: !3, line: 1313, type: !12690, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12690 = !DISubroutineType(types: !12691)
!12691 = !{null, !10791, !739}
!12692 = !DILocalVariable(name: "esw", arg: 1, scope: !12689, file: !3, line: 1313, type: !10791)
!12693 = !DILocation(line: 1313, column: 52, scope: !12689)
!12694 = !DILocalVariable(name: "vport_num", arg: 2, scope: !12689, file: !3, line: 1313, type: !739)
!12695 = !DILocation(line: 1313, column: 61, scope: !12689)
!12696 = !DILocalVariable(name: "vport", scope: !12689, file: !3, line: 1315, type: !10958)
!12697 = !DILocation(line: 1315, column: 21, scope: !12689)
!12698 = !DILocation(line: 1317, column: 33, scope: !12689)
!12699 = !DILocation(line: 1317, column: 38, scope: !12689)
!12700 = !DILocation(line: 1317, column: 10, scope: !12689)
!12701 = !DILocation(line: 1317, column: 8, scope: !12689)
!12702 = !DILocation(line: 1319, column: 14, scope: !12689)
!12703 = !DILocation(line: 1319, column: 19, scope: !12689)
!12704 = !DILocation(line: 1319, column: 2, scope: !12689)
!12705 = !DILocation(line: 1320, column: 7, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 1320, column: 6)
!12707 = !DILocation(line: 1320, column: 14, scope: !12706)
!12708 = !DILocation(line: 1320, column: 6, scope: !12689)
!12709 = !DILocation(line: 1321, column: 3, scope: !12706)
!12710 = !DILocation(line: 1323, column: 2, scope: !12689)
!12711 = !DILocation(line: 1323, column: 2, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1323, column: 2)
!12713 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 1323, column: 2)
!12714 = !DILocation(line: 1323, column: 2, scope: !12713)
!12715 = !DILocation(line: 1325, column: 2, scope: !12689)
!12716 = !DILocation(line: 1325, column: 9, scope: !12689)
!12717 = !DILocation(line: 1325, column: 17, scope: !12689)
!12718 = !DILocation(line: 1328, column: 31, scope: !12689)
!12719 = !DILocation(line: 1328, column: 36, scope: !12689)
!12720 = !DILocation(line: 1328, column: 41, scope: !12689)
!12721 = !DILocation(line: 1328, column: 48, scope: !12689)
!12722 = !DILocation(line: 1328, column: 2, scope: !12689)
!12723 = !DILocation(line: 1333, column: 33, scope: !12689)
!12724 = !DILocation(line: 1333, column: 2, scope: !12689)
!12725 = !DILocation(line: 1334, column: 2, scope: !12689)
!12726 = !DILocation(line: 1334, column: 9, scope: !12689)
!12727 = !DILocation(line: 1334, column: 24, scope: !12689)
!12728 = !DILocation(line: 1335, column: 20, scope: !12689)
!12729 = !DILocation(line: 1335, column: 25, scope: !12689)
!12730 = !DILocation(line: 1335, column: 2, scope: !12689)
!12731 = !DILocation(line: 1336, column: 2, scope: !12689)
!12732 = !DILocation(line: 1336, column: 7, scope: !12689)
!12733 = !DILocation(line: 1336, column: 21, scope: !12689)
!12734 = !DILabel(scope: !12689, name: "done", file: !3, line: 1338)
!12735 = !DILocation(line: 1338, column: 1, scope: !12689)
!12736 = !DILocation(line: 1339, column: 16, scope: !12689)
!12737 = !DILocation(line: 1339, column: 21, scope: !12689)
!12738 = !DILocation(line: 1339, column: 2, scope: !12689)
!12739 = !DILocation(line: 1340, column: 1, scope: !12689)
!12740 = distinct !DISubprogram(name: "mlx5_eswitch_unload_vport", scope: !3, file: !3, line: 1444, type: !12690, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12741 = !DILocalVariable(name: "esw", arg: 1, scope: !12740, file: !3, line: 1444, type: !10791)
!12742 = !DILocation(line: 1444, column: 53, scope: !12740)
!12743 = !DILocalVariable(name: "vport_num", arg: 2, scope: !12740, file: !3, line: 1444, type: !739)
!12744 = !DILocation(line: 1444, column: 62, scope: !12740)
!12745 = !DILocation(line: 1446, column: 26, scope: !12740)
!12746 = !DILocation(line: 1446, column: 31, scope: !12740)
!12747 = !DILocation(line: 1446, column: 2, scope: !12740)
!12748 = !DILocation(line: 1447, column: 20, scope: !12740)
!12749 = !DILocation(line: 1447, column: 25, scope: !12740)
!12750 = !DILocation(line: 1447, column: 2, scope: !12740)
!12751 = !DILocation(line: 1448, column: 1, scope: !12740)
!12752 = distinct !DISubprogram(name: "mlx5_eswitch_unload_vf_vports", scope: !3, file: !3, line: 1450, type: !12690, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12753 = !DILocalVariable(name: "esw", arg: 1, scope: !12752, file: !3, line: 1450, type: !10791)
!12754 = !DILocation(line: 1450, column: 57, scope: !12752)
!12755 = !DILocalVariable(name: "num_vfs", arg: 2, scope: !12752, file: !3, line: 1450, type: !739)
!12756 = !DILocation(line: 1450, column: 66, scope: !12752)
!12757 = !DILocalVariable(name: "i", scope: !12752, file: !3, line: 1452, type: !6)
!12758 = !DILocation(line: 1452, column: 6, scope: !12752)
!12759 = !DILocation(line: 1454, column: 2, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 1454, column: 2)
!12761 = !DILocation(line: 1454, column: 2, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 1454, column: 2)
!12763 = !DILocation(line: 1455, column: 29, scope: !12762)
!12764 = !DILocation(line: 1455, column: 34, scope: !12762)
!12765 = !DILocation(line: 1455, column: 3, scope: !12762)
!12766 = distinct !{!12766, !12759, !12767}
!12767 = !DILocation(line: 1455, column: 35, scope: !12760)
!12768 = !DILocation(line: 1456, column: 1, scope: !12752)
!12769 = distinct !DISubprogram(name: "mlx5_eswitch_load_vf_vports", scope: !3, file: !3, line: 1458, type: !12564, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12770 = !DILocalVariable(name: "esw", arg: 1, scope: !12769, file: !3, line: 1458, type: !10791)
!12771 = !DILocation(line: 1458, column: 54, scope: !12769)
!12772 = !DILocalVariable(name: "num_vfs", arg: 2, scope: !12769, file: !3, line: 1458, type: !739)
!12773 = !DILocation(line: 1458, column: 63, scope: !12769)
!12774 = !DILocalVariable(name: "enabled_events", arg: 3, scope: !12769, file: !3, line: 1459, type: !11042)
!12775 = !DILocation(line: 1459, column: 35, scope: !12769)
!12776 = !DILocalVariable(name: "err", scope: !12769, file: !3, line: 1461, type: !6)
!12777 = !DILocation(line: 1461, column: 6, scope: !12769)
!12778 = !DILocalVariable(name: "i", scope: !12769, file: !3, line: 1462, type: !6)
!12779 = !DILocation(line: 1462, column: 6, scope: !12769)
!12780 = !DILocation(line: 1464, column: 2, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 1464, column: 2)
!12782 = !DILocation(line: 1464, column: 2, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 1464, column: 2)
!12784 = !DILocation(line: 1465, column: 33, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 1464, column: 50)
!12786 = !DILocation(line: 1465, column: 38, scope: !12785)
!12787 = !DILocation(line: 1465, column: 41, scope: !12785)
!12788 = !DILocation(line: 1465, column: 9, scope: !12785)
!12789 = !DILocation(line: 1465, column: 7, scope: !12785)
!12790 = !DILocation(line: 1466, column: 7, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12785, file: !3, line: 1466, column: 7)
!12792 = !DILocation(line: 1466, column: 7, scope: !12785)
!12793 = !DILocation(line: 1467, column: 4, scope: !12791)
!12794 = !DILocation(line: 1468, column: 2, scope: !12785)
!12795 = distinct !{!12795, !12780, !12796}
!12796 = !DILocation(line: 1468, column: 2, scope: !12781)
!12797 = !DILocation(line: 1470, column: 2, scope: !12769)
!12798 = !DILabel(scope: !12769, name: "vf_err", file: !3, line: 1472)
!12799 = !DILocation(line: 1472, column: 1, scope: !12769)
!12800 = !DILocation(line: 1473, column: 32, scope: !12769)
!12801 = !DILocation(line: 1473, column: 37, scope: !12769)
!12802 = !DILocation(line: 1473, column: 39, scope: !12769)
!12803 = !DILocation(line: 1473, column: 2, scope: !12769)
!12804 = !DILocation(line: 1474, column: 9, scope: !12769)
!12805 = !DILocation(line: 1474, column: 2, scope: !12769)
!12806 = !DILocation(line: 1475, column: 1, scope: !12769)
!12807 = distinct !DISubprogram(name: "mlx5_eswitch_enable_pf_vf_vports", scope: !3, file: !3, line: 1481, type: !12808, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12808 = !DISubroutineType(types: !12809)
!12809 = !{!6, !10791, !11042}
!12810 = !DILocalVariable(name: "esw", arg: 1, scope: !12807, file: !3, line: 1481, type: !10791)
!12811 = !DILocation(line: 1481, column: 55, scope: !12807)
!12812 = !DILocalVariable(name: "enabled_events", arg: 2, scope: !12807, file: !3, line: 1482, type: !11042)
!12813 = !DILocation(line: 1482, column: 36, scope: !12807)
!12814 = !DILocalVariable(name: "ret", scope: !12807, file: !3, line: 1484, type: !6)
!12815 = !DILocation(line: 1484, column: 6, scope: !12807)
!12816 = !DILocation(line: 1487, column: 32, scope: !12807)
!12817 = !DILocation(line: 1487, column: 52, scope: !12807)
!12818 = !DILocation(line: 1487, column: 8, scope: !12807)
!12819 = !DILocation(line: 1487, column: 6, scope: !12807)
!12820 = !DILocation(line: 1488, column: 6, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 1488, column: 6)
!12822 = !DILocation(line: 1488, column: 6, scope: !12807)
!12823 = !DILocation(line: 1489, column: 10, scope: !12821)
!12824 = !DILocation(line: 1489, column: 3, scope: !12821)
!12825 = !DILocation(line: 1492, column: 29, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 1492, column: 6)
!12827 = !DILocation(line: 1492, column: 34, scope: !12826)
!12828 = !DILocation(line: 1492, column: 6, scope: !12826)
!12829 = !DILocation(line: 1492, column: 6, scope: !12807)
!12830 = !DILocation(line: 1493, column: 33, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 1492, column: 40)
!12832 = !DILocation(line: 1493, column: 55, scope: !12831)
!12833 = !DILocation(line: 1493, column: 9, scope: !12831)
!12834 = !DILocation(line: 1493, column: 7, scope: !12831)
!12835 = !DILocation(line: 1494, column: 7, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 1494, column: 7)
!12837 = !DILocation(line: 1494, column: 7, scope: !12831)
!12838 = !DILocation(line: 1495, column: 4, scope: !12836)
!12839 = !DILocation(line: 1496, column: 2, scope: !12831)
!12840 = !DILocation(line: 1499, column: 36, scope: !12807)
!12841 = !DILocation(line: 1499, column: 41, scope: !12807)
!12842 = !DILocation(line: 1499, column: 46, scope: !12807)
!12843 = !DILocation(line: 1499, column: 56, scope: !12807)
!12844 = !DILocation(line: 1500, column: 8, scope: !12807)
!12845 = !DILocation(line: 1499, column: 8, scope: !12807)
!12846 = !DILocation(line: 1499, column: 6, scope: !12807)
!12847 = !DILocation(line: 1501, column: 6, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 1501, column: 6)
!12849 = !DILocation(line: 1501, column: 6, scope: !12807)
!12850 = !DILocation(line: 1502, column: 3, scope: !12848)
!12851 = !DILocation(line: 1503, column: 2, scope: !12807)
!12852 = !DILabel(scope: !12807, name: "vf_err", file: !3, line: 1505)
!12853 = !DILocation(line: 1505, column: 1, scope: !12807)
!12854 = !DILocation(line: 1506, column: 29, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 1506, column: 6)
!12856 = !DILocation(line: 1506, column: 34, scope: !12855)
!12857 = !DILocation(line: 1506, column: 6, scope: !12855)
!12858 = !DILocation(line: 1506, column: 6, scope: !12807)
!12859 = !DILocation(line: 1507, column: 29, scope: !12855)
!12860 = !DILocation(line: 1507, column: 3, scope: !12855)
!12861 = !DILocation(line: 1506, column: 37, scope: !12855)
!12862 = !DILabel(scope: !12807, name: "ecpf_err", file: !3, line: 1509)
!12863 = !DILocation(line: 1509, column: 1, scope: !12807)
!12864 = !DILocation(line: 1510, column: 28, scope: !12807)
!12865 = !DILocation(line: 1510, column: 2, scope: !12807)
!12866 = !DILocation(line: 1511, column: 9, scope: !12807)
!12867 = !DILocation(line: 1511, column: 2, scope: !12807)
!12868 = !DILocation(line: 1512, column: 1, scope: !12807)
!12869 = distinct !DISubprogram(name: "mlx5_ecpf_vport_exists", scope: !9, file: !9, line: 1151, type: !12870, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12870 = !DISubroutineType(types: !12871)
!12871 = !{!299, !12331}
!12872 = !DILocalVariable(name: "dev", arg: 1, scope: !12869, file: !9, line: 1151, type: !12331)
!12873 = !DILocation(line: 1151, column: 71, scope: !12869)
!12874 = !DILocation(line: 1153, column: 25, scope: !12869)
!12875 = !DILocation(line: 1153, column: 9, scope: !12869)
!12876 = !DILocation(line: 1153, column: 30, scope: !12869)
!12877 = !DILocation(line: 1153, column: 33, scope: !12869)
!12878 = !DILocation(line: 0, scope: !12869)
!12879 = !DILocation(line: 1153, column: 2, scope: !12869)
!12880 = distinct !DISubprogram(name: "mlx5_eswitch_disable_pf_vf_vports", scope: !3, file: !3, line: 1517, type: !12881, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12881 = !DISubroutineType(types: !12882)
!12882 = !{null, !10791}
!12883 = !DILocalVariable(name: "esw", arg: 1, scope: !12880, file: !3, line: 1517, type: !10791)
!12884 = !DILocation(line: 1517, column: 61, scope: !12880)
!12885 = !DILocation(line: 1519, column: 32, scope: !12880)
!12886 = !DILocation(line: 1519, column: 37, scope: !12880)
!12887 = !DILocation(line: 1519, column: 42, scope: !12880)
!12888 = !DILocation(line: 1519, column: 52, scope: !12880)
!12889 = !DILocation(line: 1519, column: 2, scope: !12880)
!12890 = !DILocation(line: 1521, column: 29, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 1521, column: 6)
!12892 = !DILocation(line: 1521, column: 34, scope: !12891)
!12893 = !DILocation(line: 1521, column: 6, scope: !12891)
!12894 = !DILocation(line: 1521, column: 6, scope: !12880)
!12895 = !DILocation(line: 1522, column: 29, scope: !12891)
!12896 = !DILocation(line: 1522, column: 3, scope: !12891)
!12897 = !DILocation(line: 1524, column: 28, scope: !12880)
!12898 = !DILocation(line: 1524, column: 2, scope: !12880)
!12899 = !DILocation(line: 1525, column: 1, scope: !12880)
!12900 = distinct !DISubprogram(name: "mlx5_eswitch_enable_locked", scope: !3, file: !3, line: 1587, type: !12901, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12901 = !DISubroutineType(types: !12902)
!12902 = !{!6, !10791, !6, !6}
!12903 = !DILocalVariable(name: "esw", arg: 1, scope: !12900, file: !3, line: 1587, type: !10791)
!12904 = !DILocation(line: 1587, column: 53, scope: !12900)
!12905 = !DILocalVariable(name: "mode", arg: 2, scope: !12900, file: !3, line: 1587, type: !6)
!12906 = !DILocation(line: 1587, column: 62, scope: !12900)
!12907 = !DILocalVariable(name: "num_vfs", arg: 3, scope: !12900, file: !3, line: 1587, type: !6)
!12908 = !DILocation(line: 1587, column: 72, scope: !12900)
!12909 = !DILocalVariable(name: "err", scope: !12900, file: !3, line: 1589, type: !6)
!12910 = !DILocation(line: 1589, column: 6, scope: !12900)
!12911 = !DILocation(line: 1591, column: 2, scope: !12900)
!12912 = !DILocation(line: 1591, column: 2, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 1591, column: 2)
!12914 = !DILocation(line: 1593, column: 7, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 1593, column: 6)
!12916 = !DILocation(line: 1593, column: 6, scope: !12900)
!12917 = !DILocation(line: 1594, column: 3, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12915, file: !3, line: 1593, column: 57)
!12919 = !DILocation(line: 1595, column: 3, scope: !12918)
!12920 = !DILocation(line: 1598, column: 7, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 1598, column: 6)
!12922 = !DILocation(line: 1598, column: 6, scope: !12900)
!12923 = !DILocation(line: 1599, column: 3, scope: !12921)
!12924 = !DILocation(line: 1601, column: 7, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 1601, column: 6)
!12926 = !DILocation(line: 1601, column: 6, scope: !12900)
!12927 = !DILocation(line: 1602, column: 3, scope: !12925)
!12928 = !DILocation(line: 1604, column: 33, scope: !12900)
!12929 = !DILocation(line: 1604, column: 2, scope: !12900)
!12930 = !DILocation(line: 1606, column: 33, scope: !12900)
!12931 = !DILocation(line: 1606, column: 38, scope: !12900)
!12932 = !DILocation(line: 1606, column: 2, scope: !12900)
!12933 = !DILocation(line: 1608, column: 18, scope: !12900)
!12934 = !DILocation(line: 1608, column: 2, scope: !12900)
!12935 = !DILocation(line: 1610, column: 14, scope: !12900)
!12936 = !DILocation(line: 1610, column: 2, scope: !12900)
!12937 = !DILocation(line: 1610, column: 7, scope: !12900)
!12938 = !DILocation(line: 1610, column: 12, scope: !12900)
!12939 = !DILocation(line: 1612, column: 18, scope: !12900)
!12940 = !DILocation(line: 1612, column: 23, scope: !12900)
!12941 = !DILocation(line: 1612, column: 2, scope: !12900)
!12942 = !DILocation(line: 1614, column: 6, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 1614, column: 6)
!12944 = !DILocation(line: 1614, column: 11, scope: !12943)
!12945 = !DILocation(line: 1614, column: 6, scope: !12900)
!12946 = !DILocation(line: 1615, column: 27, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12943, file: !3, line: 1614, column: 35)
!12948 = !DILocation(line: 1615, column: 9, scope: !12947)
!12949 = !DILocation(line: 1615, column: 7, scope: !12947)
!12950 = !DILocation(line: 1616, column: 2, scope: !12947)
!12951 = !DILocation(line: 1617, column: 25, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12943, file: !3, line: 1616, column: 9)
!12953 = !DILocation(line: 1617, column: 30, scope: !12952)
!12954 = !DILocation(line: 1617, column: 3, scope: !12952)
!12955 = !DILocation(line: 1618, column: 25, scope: !12952)
!12956 = !DILocation(line: 1618, column: 30, scope: !12952)
!12957 = !DILocation(line: 1618, column: 3, scope: !12952)
!12958 = !DILocation(line: 1619, column: 29, scope: !12952)
!12959 = !DILocation(line: 1619, column: 9, scope: !12952)
!12960 = !DILocation(line: 1619, column: 7, scope: !12952)
!12961 = !DILocation(line: 1622, column: 6, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 1622, column: 6)
!12963 = !DILocation(line: 1622, column: 6, scope: !12900)
!12964 = !DILocation(line: 1623, column: 3, scope: !12962)
!12965 = !DILocation(line: 1625, column: 39, scope: !12900)
!12966 = !DILocation(line: 1625, column: 2, scope: !12900)
!12967 = !DILocation(line: 1627, column: 2, scope: !12900)
!12968 = !DILocation(line: 1631, column: 2, scope: !12900)
!12969 = !DILabel(scope: !12900, name: "abort", file: !3, line: 1633)
!12970 = !DILocation(line: 1633, column: 1, scope: !12900)
!12971 = !DILocation(line: 1634, column: 2, scope: !12900)
!12972 = !DILocation(line: 1634, column: 7, scope: !12900)
!12973 = !DILocation(line: 1634, column: 12, scope: !12900)
!12974 = !DILocation(line: 1636, column: 6, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 1636, column: 6)
!12976 = !DILocation(line: 1636, column: 11, scope: !12975)
!12977 = !DILocation(line: 1636, column: 6, scope: !12900)
!12978 = !DILocation(line: 1637, column: 25, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 1636, column: 37)
!12980 = !DILocation(line: 1637, column: 30, scope: !12979)
!12981 = !DILocation(line: 1637, column: 3, scope: !12979)
!12982 = !DILocation(line: 1638, column: 25, scope: !12979)
!12983 = !DILocation(line: 1638, column: 30, scope: !12979)
!12984 = !DILocation(line: 1638, column: 3, scope: !12979)
!12985 = !DILocation(line: 1639, column: 2, scope: !12979)
!12986 = !DILocation(line: 1640, column: 19, scope: !12900)
!12987 = !DILocation(line: 1640, column: 2, scope: !12900)
!12988 = !DILocation(line: 1641, column: 9, scope: !12900)
!12989 = !DILocation(line: 1641, column: 2, scope: !12900)
!12990 = !DILocation(line: 1642, column: 1, scope: !12900)
!12991 = distinct !DISubprogram(name: "mlx5_eswitch_get_devlink_param", scope: !3, file: !3, line: 1527, type: !12881, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!12992 = !DILocalVariable(name: "esw", arg: 1, scope: !12991, file: !3, line: 1527, type: !10791)
!12993 = !DILocation(line: 1527, column: 65, scope: !12991)
!12994 = !DILocalVariable(name: "devlink", scope: !12991, file: !3, line: 1529, type: !3875)
!12995 = !DILocation(line: 1529, column: 18, scope: !12991)
!12996 = !DILocation(line: 1529, column: 44, scope: !12991)
!12997 = !DILocation(line: 1529, column: 49, scope: !12991)
!12998 = !DILocation(line: 1529, column: 28, scope: !12991)
!12999 = !DILocalVariable(name: "val", scope: !12991, file: !3, line: 1530, type: !13000)
!13000 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "devlink_param_value", file: !3869, line: 391, size: 256, elements: !13001)
!13001 = !{!13002, !13003, !13004, !13005, !13006}
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "vu8", scope: !13000, file: !3869, line: 392, baseType: !1398, size: 8)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "vu16", scope: !13000, file: !3869, line: 393, baseType: !739, size: 16)
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "vu32", scope: !13000, file: !3869, line: 394, baseType: !224, size: 32)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "vstr", scope: !13000, file: !3869, line: 395, baseType: !4267, size: 256)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "vbool", scope: !13000, file: !3869, line: 396, baseType: !299, size: 8)
!13007 = !DILocation(line: 1530, column: 28, scope: !12991)
!13008 = !DILocalVariable(name: "err", scope: !12991, file: !3, line: 1531, type: !6)
!13009 = !DILocation(line: 1531, column: 6, scope: !12991)
!13010 = !DILocation(line: 1533, column: 43, scope: !12991)
!13011 = !DILocation(line: 1533, column: 8, scope: !12991)
!13012 = !DILocation(line: 1533, column: 6, scope: !12991)
!13013 = !DILocation(line: 1536, column: 7, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !12991, file: !3, line: 1536, column: 6)
!13015 = !DILocation(line: 1536, column: 6, scope: !12991)
!13016 = !DILocation(line: 1537, column: 37, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13014, file: !3, line: 1536, column: 12)
!13018 = !DILocation(line: 1537, column: 3, scope: !13017)
!13019 = !DILocation(line: 1537, column: 8, scope: !13017)
!13020 = !DILocation(line: 1537, column: 15, scope: !13017)
!13021 = !DILocation(line: 1537, column: 31, scope: !13017)
!13022 = !DILocation(line: 1538, column: 2, scope: !13017)
!13023 = !DILocation(line: 1539, column: 3, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13014, file: !3, line: 1538, column: 9)
!13025 = !DILocation(line: 1542, column: 3, scope: !13024)
!13026 = !DILocation(line: 1542, column: 8, scope: !13024)
!13027 = !DILocation(line: 1542, column: 15, scope: !13024)
!13028 = !DILocation(line: 1542, column: 31, scope: !13024)
!13029 = !DILocation(line: 1544, column: 1, scope: !12991)
!13030 = distinct !DISubprogram(name: "mlx5_eswitch_update_num_of_vfs", scope: !3, file: !3, line: 1547, type: !13031, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13031 = !DISubroutineType(types: !13032)
!13032 = !{null, !10791, !6}
!13033 = !DILocalVariable(name: "esw", arg: 1, scope: !13030, file: !3, line: 1547, type: !10791)
!13034 = !DILocation(line: 1547, column: 53, scope: !13030)
!13035 = !DILocalVariable(name: "num_vfs", arg: 2, scope: !13030, file: !3, line: 1547, type: !6)
!13036 = !DILocation(line: 1547, column: 62, scope: !13030)
!13037 = !DILocalVariable(name: "out", scope: !13030, file: !3, line: 1549, type: !4642)
!13038 = !DILocation(line: 1549, column: 13, scope: !13030)
!13039 = !DILocalVariable(name: "__ret_warn_on", scope: !13040, file: !3, line: 1551, type: !6)
!13040 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 1551, column: 2)
!13041 = !DILocation(line: 1551, column: 2, scope: !13040)
!13042 = !DILocation(line: 1551, column: 2, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 1551, column: 2)
!13044 = !DILocation(line: 1551, column: 2, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 1551, column: 2)
!13046 = !DILocation(line: 1551, column: 2, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13045, file: !3, line: 1551, column: 2)
!13048 = !DILocation(line: 1551, column: 2, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13045, file: !3, line: 1551, column: 2)
!13050 = !{i32 -2134905848, i32 -2134905819, i32 -2134905773, i32 -2134905715, i32 -2134905661, i32 -2134905607, i32 -2134905552, i32 -2134905521}
!13051 = !DILocation(line: 1551, column: 2, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13045, file: !3, line: 1551, column: 2)
!13053 = !{i32 -2134905078, i32 -2134905071, i32 -2134905019, i32 -2134904988, i32 -2134904958}
!13054 = !DILocation(line: 1551, column: 2, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13045, file: !3, line: 1551, column: 2)
!13056 = !DILocation(line: 1553, column: 6, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 1553, column: 6)
!13058 = !DILocation(line: 1553, column: 14, scope: !13057)
!13059 = !DILocation(line: 1553, column: 6, scope: !13030)
!13060 = !DILocation(line: 1554, column: 3, scope: !13057)
!13061 = !DILocation(line: 1556, column: 37, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 1556, column: 6)
!13063 = !DILocation(line: 1556, column: 42, scope: !13062)
!13064 = !DILocation(line: 1556, column: 7, scope: !13062)
!13065 = !DILocation(line: 1556, column: 6, scope: !13030)
!13066 = !DILocation(line: 1557, column: 28, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13062, file: !3, line: 1556, column: 48)
!13068 = !DILocation(line: 1557, column: 3, scope: !13067)
!13069 = !DILocation(line: 1557, column: 8, scope: !13067)
!13070 = !DILocation(line: 1557, column: 18, scope: !13067)
!13071 = !DILocation(line: 1557, column: 26, scope: !13067)
!13072 = !DILocation(line: 1558, column: 3, scope: !13067)
!13073 = !DILocation(line: 1561, column: 33, scope: !13030)
!13074 = !DILocation(line: 1561, column: 38, scope: !13030)
!13075 = !DILocation(line: 1561, column: 8, scope: !13030)
!13076 = !DILocation(line: 1561, column: 6, scope: !13030)
!13077 = !DILocation(line: 1562, column: 13, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 1562, column: 6)
!13079 = !DILocation(line: 1562, column: 6, scope: !13078)
!13080 = !DILocation(line: 1562, column: 6, scope: !13030)
!13081 = !DILocation(line: 1563, column: 3, scope: !13078)
!13082 = !DILocation(line: 1565, column: 27, scope: !13030)
!13083 = !DILocation(line: 1565, column: 2, scope: !13030)
!13084 = !DILocation(line: 1565, column: 7, scope: !13030)
!13085 = !DILocation(line: 1565, column: 17, scope: !13030)
!13086 = !DILocation(line: 1565, column: 25, scope: !13030)
!13087 = !DILocation(line: 1567, column: 9, scope: !13030)
!13088 = !DILocation(line: 1567, column: 2, scope: !13030)
!13089 = !DILocation(line: 1568, column: 1, scope: !13030)
!13090 = distinct !DISubprogram(name: "esw_create_tsar", scope: !3, file: !3, line: 986, type: !12881, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13091 = !DILocalVariable(name: "esw", arg: 1, scope: !13090, file: !3, line: 986, type: !10791)
!13092 = !DILocation(line: 986, column: 50, scope: !13090)
!13093 = !DILocalVariable(name: "tsar_ctx", scope: !13090, file: !3, line: 988, type: !10339)
!13094 = !DILocation(line: 988, column: 6, scope: !13090)
!13095 = !DILocalVariable(name: "dev", scope: !13090, file: !3, line: 989, type: !7)
!13096 = !DILocation(line: 989, column: 24, scope: !13090)
!13097 = !DILocation(line: 989, column: 30, scope: !13090)
!13098 = !DILocation(line: 989, column: 35, scope: !13090)
!13099 = !DILocalVariable(name: "attr", scope: !13090, file: !3, line: 990, type: !10619)
!13100 = !DILocation(line: 990, column: 10, scope: !13090)
!13101 = !DILocalVariable(name: "err", scope: !13090, file: !3, line: 991, type: !6)
!13102 = !DILocation(line: 991, column: 6, scope: !13090)
!13103 = !DILocation(line: 993, column: 7, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 993, column: 6)
!13105 = !DILocation(line: 993, column: 30, scope: !13104)
!13106 = !DILocation(line: 993, column: 34, scope: !13104)
!13107 = !DILocation(line: 993, column: 6, scope: !13090)
!13108 = !DILocation(line: 994, column: 3, scope: !13104)
!13109 = !DILocation(line: 996, column: 30, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 996, column: 6)
!13111 = !DILocation(line: 996, column: 7, scope: !13110)
!13112 = !DILocation(line: 996, column: 6, scope: !13090)
!13113 = !DILocation(line: 997, column: 3, scope: !13110)
!13114 = !DILocation(line: 999, column: 6, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 999, column: 6)
!13116 = !DILocation(line: 999, column: 11, scope: !13115)
!13117 = !DILocation(line: 999, column: 15, scope: !13115)
!13118 = !DILocation(line: 999, column: 6, scope: !13090)
!13119 = !DILocation(line: 1000, column: 3, scope: !13115)
!13120 = !DILocation(line: 1002, column: 2, scope: !13090)
!13121 = !DILocalVariable(name: "_v", scope: !13122, file: !3, line: 1002, type: !224)
!13122 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 1002, column: 2)
!13123 = !DILocation(line: 1002, column: 2, scope: !13122)
!13124 = !DILocation(line: 1002, column: 2, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13122, file: !3, line: 1002, column: 2)
!13126 = !DILocation(line: 1005, column: 9, scope: !13090)
!13127 = !DILocation(line: 1005, column: 7, scope: !13090)
!13128 = !DILocation(line: 1006, column: 3, scope: !13090)
!13129 = !DILocation(line: 1006, column: 8, scope: !13090)
!13130 = !DILocation(line: 1008, column: 43, scope: !13090)
!13131 = !DILocation(line: 1010, column: 8, scope: !13090)
!13132 = !DILocation(line: 1011, column: 9, scope: !13090)
!13133 = !DILocation(line: 1011, column: 14, scope: !13090)
!13134 = !DILocation(line: 1011, column: 18, scope: !13090)
!13135 = !DILocation(line: 1008, column: 8, scope: !13090)
!13136 = !DILocation(line: 1008, column: 6, scope: !13090)
!13137 = !DILocation(line: 1012, column: 6, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 1012, column: 6)
!13139 = !DILocation(line: 1012, column: 6, scope: !13090)
!13140 = !DILocation(line: 1013, column: 3, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 1012, column: 11)
!13142 = !DILocation(line: 1014, column: 3, scope: !13141)
!13143 = !DILocation(line: 1017, column: 2, scope: !13090)
!13144 = !DILocation(line: 1017, column: 7, scope: !13090)
!13145 = !DILocation(line: 1017, column: 11, scope: !13090)
!13146 = !DILocation(line: 1017, column: 19, scope: !13090)
!13147 = !DILocation(line: 1018, column: 1, scope: !13090)
!13148 = distinct !DISubprogram(name: "esw_legacy_enable", scope: !3, file: !3, line: 468, type: !13149, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13149 = !DISubroutineType(types: !13150)
!13150 = !{!6, !10791}
!13151 = !DILocalVariable(name: "esw", arg: 1, scope: !13148, file: !3, line: 468, type: !10791)
!13152 = !DILocation(line: 468, column: 51, scope: !13148)
!13153 = !DILocalVariable(name: "vport", scope: !13148, file: !3, line: 470, type: !10958)
!13154 = !DILocation(line: 470, column: 21, scope: !13148)
!13155 = !DILocalVariable(name: "ret", scope: !13148, file: !3, line: 471, type: !6)
!13156 = !DILocation(line: 471, column: 6, scope: !13148)
!13157 = !DILocalVariable(name: "i", scope: !13148, file: !3, line: 471, type: !6)
!13158 = !DILocation(line: 471, column: 11, scope: !13148)
!13159 = !DILocation(line: 473, column: 32, scope: !13148)
!13160 = !DILocation(line: 473, column: 8, scope: !13148)
!13161 = !DILocation(line: 473, column: 6, scope: !13148)
!13162 = !DILocation(line: 474, column: 6, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 474, column: 6)
!13164 = !DILocation(line: 474, column: 6, scope: !13148)
!13165 = !DILocation(line: 475, column: 10, scope: !13163)
!13166 = !DILocation(line: 475, column: 3, scope: !13163)
!13167 = !DILocation(line: 477, column: 2, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 477, column: 2)
!13169 = !DILocation(line: 477, column: 2, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 477, column: 2)
!13171 = !DILocation(line: 478, column: 3, scope: !13170)
!13172 = !DILocation(line: 478, column: 10, scope: !13170)
!13173 = !DILocation(line: 478, column: 15, scope: !13170)
!13174 = !DILocation(line: 478, column: 26, scope: !13170)
!13175 = distinct !{!13175, !13167, !13176}
!13176 = !DILocation(line: 478, column: 28, scope: !13168)
!13177 = !DILocation(line: 480, column: 41, scope: !13148)
!13178 = !DILocation(line: 480, column: 8, scope: !13148)
!13179 = !DILocation(line: 480, column: 6, scope: !13148)
!13180 = !DILocation(line: 481, column: 6, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 481, column: 6)
!13182 = !DILocation(line: 481, column: 6, scope: !13148)
!13183 = !DILocation(line: 482, column: 28, scope: !13181)
!13184 = !DILocation(line: 482, column: 3, scope: !13181)
!13185 = !DILocation(line: 483, column: 9, scope: !13148)
!13186 = !DILocation(line: 483, column: 2, scope: !13148)
!13187 = !DILocation(line: 484, column: 1, scope: !13148)
!13188 = distinct !DISubprogram(name: "mlx5_eswitch_event_handlers_register", scope: !3, file: !3, line: 1387, type: !12881, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13189 = !DILocalVariable(name: "esw", arg: 1, scope: !13188, file: !3, line: 1387, type: !10791)
!13190 = !DILocation(line: 1387, column: 71, scope: !13188)
!13191 = !DILocation(line: 1389, column: 2, scope: !13188)
!13192 = !DILocation(line: 1389, column: 2, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13188, file: !3, line: 1389, column: 2)
!13194 = !DILocation(line: 1390, column: 28, scope: !13188)
!13195 = !DILocation(line: 1390, column: 33, scope: !13188)
!13196 = !DILocation(line: 1390, column: 39, scope: !13188)
!13197 = !DILocation(line: 1390, column: 44, scope: !13188)
!13198 = !DILocation(line: 1390, column: 2, scope: !13188)
!13199 = !DILocation(line: 1392, column: 6, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13188, file: !3, line: 1392, column: 6)
!13201 = !DILocation(line: 1392, column: 11, scope: !13200)
!13202 = !DILocation(line: 1392, column: 16, scope: !13200)
!13203 = !DILocation(line: 1392, column: 41, scope: !13200)
!13204 = !DILocation(line: 1392, column: 74, scope: !13200)
!13205 = !DILocation(line: 1392, column: 79, scope: !13200)
!13206 = !DILocation(line: 1392, column: 44, scope: !13200)
!13207 = !DILocation(line: 1392, column: 6, scope: !13188)
!13208 = !DILocation(line: 1393, column: 3, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13200, file: !3, line: 1392, column: 85)
!13210 = !DILocation(line: 1393, column: 3, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 1393, column: 3)
!13212 = !DILocation(line: 1395, column: 29, scope: !13209)
!13213 = !DILocation(line: 1395, column: 34, scope: !13209)
!13214 = !DILocation(line: 1395, column: 40, scope: !13209)
!13215 = !DILocation(line: 1395, column: 45, scope: !13209)
!13216 = !DILocation(line: 1395, column: 55, scope: !13209)
!13217 = !DILocation(line: 1395, column: 3, scope: !13209)
!13218 = !DILocation(line: 1396, column: 2, scope: !13209)
!13219 = !DILocation(line: 1397, column: 1, scope: !13188)
!13220 = distinct !DISubprogram(name: "esw_destroy_tsar", scope: !3, file: !3, line: 1020, type: !12881, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13221 = !DILocalVariable(name: "esw", arg: 1, scope: !13220, file: !3, line: 1020, type: !10791)
!13222 = !DILocation(line: 1020, column: 51, scope: !13220)
!13223 = !DILocalVariable(name: "err", scope: !13220, file: !3, line: 1022, type: !6)
!13224 = !DILocation(line: 1022, column: 6, scope: !13220)
!13225 = !DILocation(line: 1024, column: 7, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 1024, column: 6)
!13227 = !DILocation(line: 1024, column: 12, scope: !13226)
!13228 = !DILocation(line: 1024, column: 16, scope: !13226)
!13229 = !DILocation(line: 1024, column: 6, scope: !13220)
!13230 = !DILocation(line: 1025, column: 3, scope: !13226)
!13231 = !DILocation(line: 1027, column: 44, scope: !13220)
!13232 = !DILocation(line: 1027, column: 49, scope: !13220)
!13233 = !DILocation(line: 1029, column: 9, scope: !13220)
!13234 = !DILocation(line: 1029, column: 14, scope: !13220)
!13235 = !DILocation(line: 1029, column: 18, scope: !13220)
!13236 = !DILocation(line: 1027, column: 8, scope: !13220)
!13237 = !DILocation(line: 1027, column: 6, scope: !13220)
!13238 = !DILocation(line: 1030, column: 6, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 1030, column: 6)
!13240 = !DILocation(line: 1030, column: 6, scope: !13220)
!13241 = !DILocation(line: 1031, column: 3, scope: !13239)
!13242 = !DILocation(line: 1033, column: 2, scope: !13220)
!13243 = !DILocation(line: 1033, column: 7, scope: !13220)
!13244 = !DILocation(line: 1033, column: 11, scope: !13220)
!13245 = !DILocation(line: 1033, column: 19, scope: !13220)
!13246 = !DILocation(line: 1034, column: 1, scope: !13220)
!13247 = distinct !DISubprogram(name: "mlx5_eswitch_enable", scope: !3, file: !3, line: 1652, type: !13248, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{!6, !10791, !6}
!13250 = !DILocalVariable(name: "esw", arg: 1, scope: !13247, file: !3, line: 1652, type: !10791)
!13251 = !DILocation(line: 1652, column: 46, scope: !13247)
!13252 = !DILocalVariable(name: "num_vfs", arg: 2, scope: !13247, file: !3, line: 1652, type: !6)
!13253 = !DILocation(line: 1652, column: 55, scope: !13247)
!13254 = !DILocalVariable(name: "ret", scope: !13247, file: !3, line: 1654, type: !6)
!13255 = !DILocation(line: 1654, column: 6, scope: !13247)
!13256 = !DILocation(line: 1656, column: 7, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13247, file: !3, line: 1656, column: 6)
!13258 = !DILocation(line: 1656, column: 6, scope: !13247)
!13259 = !DILocation(line: 1657, column: 3, scope: !13257)
!13260 = !DILocation(line: 1659, column: 14, scope: !13247)
!13261 = !DILocation(line: 1659, column: 19, scope: !13247)
!13262 = !DILocation(line: 1659, column: 2, scope: !13247)
!13263 = !DILocation(line: 1660, column: 6, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13247, file: !3, line: 1660, column: 6)
!13265 = !DILocation(line: 1660, column: 11, scope: !13264)
!13266 = !DILocation(line: 1660, column: 16, scope: !13264)
!13267 = !DILocation(line: 1660, column: 6, scope: !13247)
!13268 = !DILocation(line: 1661, column: 36, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13264, file: !3, line: 1660, column: 38)
!13270 = !DILocation(line: 1661, column: 62, scope: !13269)
!13271 = !DILocation(line: 1661, column: 9, scope: !13269)
!13272 = !DILocation(line: 1661, column: 7, scope: !13269)
!13273 = !DILocation(line: 1662, column: 2, scope: !13269)
!13274 = !DILocalVariable(name: "vport_events", scope: !13275, file: !3, line: 1663, type: !11042)
!13275 = distinct !DILexicalBlock(scope: !13264, file: !3, line: 1662, column: 9)
!13276 = !DILocation(line: 1663, column: 33, scope: !13275)
!13277 = !DILocation(line: 1665, column: 19, scope: !13275)
!13278 = !DILocation(line: 1665, column: 24, scope: !13275)
!13279 = !DILocation(line: 1665, column: 29, scope: !13275)
!13280 = !DILocation(line: 1665, column: 18, scope: !13275)
!13281 = !DILocation(line: 1665, column: 16, scope: !13275)
!13282 = !DILocation(line: 1667, column: 37, scope: !13275)
!13283 = !DILocation(line: 1667, column: 42, scope: !13275)
!13284 = !DILocation(line: 1667, column: 51, scope: !13275)
!13285 = !DILocation(line: 1667, column: 9, scope: !13275)
!13286 = !DILocation(line: 1667, column: 7, scope: !13275)
!13287 = !DILocation(line: 1668, column: 8, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13275, file: !3, line: 1668, column: 7)
!13289 = !DILocation(line: 1668, column: 7, scope: !13275)
!13290 = !DILocation(line: 1669, column: 29, scope: !13288)
!13291 = !DILocation(line: 1669, column: 4, scope: !13288)
!13292 = !DILocation(line: 1669, column: 9, scope: !13288)
!13293 = !DILocation(line: 1669, column: 19, scope: !13288)
!13294 = !DILocation(line: 1669, column: 27, scope: !13288)
!13295 = !DILocation(line: 1671, column: 16, scope: !13247)
!13296 = !DILocation(line: 1671, column: 21, scope: !13247)
!13297 = !DILocation(line: 1671, column: 2, scope: !13247)
!13298 = !DILocation(line: 1672, column: 9, scope: !13247)
!13299 = !DILocation(line: 1672, column: 2, scope: !13247)
!13300 = !DILocation(line: 1673, column: 1, scope: !13247)
!13301 = distinct !DISubprogram(name: "mlx5_eswitch_disable_locked", scope: !3, file: !3, line: 1675, type: !13302, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13302 = !DISubroutineType(types: !13303)
!13303 = !{null, !10791, !299}
!13304 = !DILocalVariable(name: "esw", arg: 1, scope: !13301, file: !3, line: 1675, type: !10791)
!13305 = !DILocation(line: 1675, column: 55, scope: !13301)
!13306 = !DILocalVariable(name: "clear_vf", arg: 2, scope: !13301, file: !3, line: 1675, type: !299)
!13307 = !DILocation(line: 1675, column: 65, scope: !13301)
!13308 = !DILocalVariable(name: "old_mode", scope: !13301, file: !3, line: 1677, type: !6)
!13309 = !DILocation(line: 1677, column: 6, scope: !13301)
!13310 = !DILocation(line: 1679, column: 2, scope: !13301)
!13311 = !DILocation(line: 1679, column: 2, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13301, file: !3, line: 1679, column: 2)
!13313 = !DILocation(line: 1681, column: 6, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13301, file: !3, line: 1681, column: 6)
!13315 = !DILocation(line: 1681, column: 11, scope: !13314)
!13316 = !DILocation(line: 1681, column: 16, scope: !13314)
!13317 = !DILocation(line: 1681, column: 6, scope: !13301)
!13318 = !DILocation(line: 1682, column: 3, scope: !13314)
!13319 = !DILocation(line: 1684, column: 2, scope: !13301)
!13320 = !DILocation(line: 1688, column: 41, scope: !13301)
!13321 = !DILocation(line: 1688, column: 2, scope: !13301)
!13322 = !DILocation(line: 1690, column: 6, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13301, file: !3, line: 1690, column: 6)
!13324 = !DILocation(line: 1690, column: 11, scope: !13323)
!13325 = !DILocation(line: 1690, column: 16, scope: !13323)
!13326 = !DILocation(line: 1690, column: 6, scope: !13301)
!13327 = !DILocation(line: 1691, column: 22, scope: !13323)
!13328 = !DILocation(line: 1691, column: 3, scope: !13323)
!13329 = !DILocation(line: 1692, column: 11, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13323, file: !3, line: 1692, column: 11)
!13331 = !DILocation(line: 1692, column: 16, scope: !13330)
!13332 = !DILocation(line: 1692, column: 21, scope: !13330)
!13333 = !DILocation(line: 1692, column: 11, scope: !13323)
!13334 = !DILocation(line: 1693, column: 24, scope: !13330)
!13335 = !DILocation(line: 1693, column: 3, scope: !13330)
!13336 = !DILocation(line: 1695, column: 13, scope: !13301)
!13337 = !DILocation(line: 1695, column: 18, scope: !13301)
!13338 = !DILocation(line: 1695, column: 11, scope: !13301)
!13339 = !DILocation(line: 1696, column: 2, scope: !13301)
!13340 = !DILocation(line: 1696, column: 7, scope: !13301)
!13341 = !DILocation(line: 1696, column: 12, scope: !13301)
!13342 = !DILocation(line: 1698, column: 18, scope: !13301)
!13343 = !DILocation(line: 1698, column: 23, scope: !13301)
!13344 = !DILocation(line: 1698, column: 2, scope: !13301)
!13345 = !DILocation(line: 1700, column: 6, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13301, file: !3, line: 1700, column: 6)
!13347 = !DILocation(line: 1700, column: 15, scope: !13346)
!13348 = !DILocation(line: 1700, column: 6, scope: !13301)
!13349 = !DILocation(line: 1701, column: 25, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13346, file: !3, line: 1700, column: 41)
!13351 = !DILocation(line: 1701, column: 30, scope: !13350)
!13352 = !DILocation(line: 1701, column: 3, scope: !13350)
!13353 = !DILocation(line: 1702, column: 25, scope: !13350)
!13354 = !DILocation(line: 1702, column: 30, scope: !13350)
!13355 = !DILocation(line: 1702, column: 3, scope: !13350)
!13356 = !DILocation(line: 1703, column: 2, scope: !13350)
!13357 = !DILocation(line: 1704, column: 19, scope: !13301)
!13358 = !DILocation(line: 1704, column: 2, scope: !13301)
!13359 = !DILocation(line: 1706, column: 6, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13301, file: !3, line: 1706, column: 6)
!13361 = !DILocation(line: 1706, column: 6, scope: !13301)
!13362 = !DILocation(line: 1707, column: 37, scope: !13360)
!13363 = !DILocation(line: 1707, column: 3, scope: !13360)
!13364 = !DILocation(line: 1708, column: 1, scope: !13301)
!13365 = distinct !DISubprogram(name: "mlx5_eswitch_event_handlers_unregister", scope: !3, file: !3, line: 1399, type: !12881, scopeLine: 1400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13366 = !DILocalVariable(name: "esw", arg: 1, scope: !13365, file: !3, line: 1399, type: !10791)
!13367 = !DILocation(line: 1399, column: 73, scope: !13365)
!13368 = !DILocation(line: 1401, column: 6, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 1401, column: 6)
!13370 = !DILocation(line: 1401, column: 11, scope: !13369)
!13371 = !DILocation(line: 1401, column: 16, scope: !13369)
!13372 = !DILocation(line: 1401, column: 41, scope: !13369)
!13373 = !DILocation(line: 1401, column: 74, scope: !13369)
!13374 = !DILocation(line: 1401, column: 79, scope: !13369)
!13375 = !DILocation(line: 1401, column: 44, scope: !13369)
!13376 = !DILocation(line: 1401, column: 6, scope: !13365)
!13377 = !DILocation(line: 1402, column: 31, scope: !13369)
!13378 = !DILocation(line: 1402, column: 36, scope: !13369)
!13379 = !DILocation(line: 1402, column: 42, scope: !13369)
!13380 = !DILocation(line: 1402, column: 47, scope: !13369)
!13381 = !DILocation(line: 1402, column: 57, scope: !13369)
!13382 = !DILocation(line: 1402, column: 3, scope: !13369)
!13383 = !DILocation(line: 1404, column: 30, scope: !13365)
!13384 = !DILocation(line: 1404, column: 35, scope: !13365)
!13385 = !DILocation(line: 1404, column: 41, scope: !13365)
!13386 = !DILocation(line: 1404, column: 46, scope: !13365)
!13387 = !DILocation(line: 1404, column: 2, scope: !13365)
!13388 = !DILocation(line: 1406, column: 18, scope: !13365)
!13389 = !DILocation(line: 1406, column: 23, scope: !13365)
!13390 = !DILocation(line: 1406, column: 2, scope: !13365)
!13391 = !DILocation(line: 1407, column: 1, scope: !13365)
!13392 = distinct !DISubprogram(name: "esw_legacy_disable", scope: !3, file: !3, line: 486, type: !12881, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13393 = !DILocalVariable(name: "esw", arg: 1, scope: !13392, file: !3, line: 486, type: !10791)
!13394 = !DILocation(line: 486, column: 53, scope: !13392)
!13395 = !DILocalVariable(name: "mc_promisc", scope: !13392, file: !3, line: 488, type: !12242)
!13396 = !DILocation(line: 488, column: 22, scope: !13392)
!13397 = !DILocation(line: 490, column: 36, scope: !13392)
!13398 = !DILocation(line: 490, column: 2, scope: !13392)
!13399 = !DILocation(line: 492, column: 16, scope: !13392)
!13400 = !DILocation(line: 492, column: 21, scope: !13392)
!13401 = !DILocation(line: 492, column: 13, scope: !13392)
!13402 = !DILocation(line: 493, column: 6, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 493, column: 6)
!13404 = !DILocation(line: 493, column: 18, scope: !13403)
!13405 = !DILocation(line: 493, column: 6, scope: !13392)
!13406 = !DILocation(line: 494, column: 23, scope: !13403)
!13407 = !DILocation(line: 494, column: 35, scope: !13403)
!13408 = !DILocation(line: 494, column: 3, scope: !13403)
!13409 = !DILocation(line: 496, column: 27, scope: !13392)
!13410 = !DILocation(line: 496, column: 2, scope: !13392)
!13411 = !DILocation(line: 497, column: 1, scope: !13392)
!13412 = distinct !DISubprogram(name: "mlx5_eswitch_clear_vf_vports_info", scope: !3, file: !3, line: 1409, type: !12881, scopeLine: 1410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13413 = !DILocalVariable(name: "esw", arg: 1, scope: !13412, file: !3, line: 1409, type: !10791)
!13414 = !DILocation(line: 1409, column: 68, scope: !13412)
!13415 = !DILocalVariable(name: "vport", scope: !13412, file: !3, line: 1411, type: !10958)
!13416 = !DILocation(line: 1411, column: 21, scope: !13412)
!13417 = !DILocalVariable(name: "i", scope: !13412, file: !3, line: 1412, type: !6)
!13418 = !DILocation(line: 1412, column: 6, scope: !13412)
!13419 = !DILocation(line: 1414, column: 2, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13412, file: !3, line: 1414, column: 2)
!13421 = !DILocation(line: 1414, column: 2, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 1414, column: 2)
!13423 = !DILocation(line: 1415, column: 11, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 1414, column: 68)
!13425 = !DILocation(line: 1415, column: 18, scope: !13424)
!13426 = !DILocation(line: 1415, column: 3, scope: !13424)
!13427 = !DILocation(line: 1416, column: 11, scope: !13424)
!13428 = !DILocation(line: 1416, column: 18, scope: !13424)
!13429 = !DILocation(line: 1416, column: 3, scope: !13424)
!13430 = !DILocation(line: 1417, column: 3, scope: !13424)
!13431 = !DILocation(line: 1417, column: 10, scope: !13424)
!13432 = !DILocation(line: 1417, column: 15, scope: !13424)
!13433 = !DILocation(line: 1417, column: 26, scope: !13424)
!13434 = !DILocation(line: 1418, column: 2, scope: !13424)
!13435 = distinct !{!13435, !13419, !13436}
!13436 = !DILocation(line: 1418, column: 2, scope: !13420)
!13437 = !DILocation(line: 1419, column: 1, scope: !13412)
!13438 = distinct !DISubprogram(name: "mlx5_eswitch_disable", scope: !3, file: !3, line: 1710, type: !13302, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13439 = !DILocalVariable(name: "esw", arg: 1, scope: !13438, file: !3, line: 1710, type: !10791)
!13440 = !DILocation(line: 1710, column: 48, scope: !13438)
!13441 = !DILocalVariable(name: "clear_vf", arg: 2, scope: !13438, file: !3, line: 1710, type: !299)
!13442 = !DILocation(line: 1710, column: 58, scope: !13438)
!13443 = !DILocation(line: 1712, column: 7, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13438, file: !3, line: 1712, column: 6)
!13445 = !DILocation(line: 1712, column: 6, scope: !13438)
!13446 = !DILocation(line: 1713, column: 3, scope: !13444)
!13447 = !DILocation(line: 1715, column: 14, scope: !13438)
!13448 = !DILocation(line: 1715, column: 19, scope: !13438)
!13449 = !DILocation(line: 1715, column: 2, scope: !13438)
!13450 = !DILocation(line: 1716, column: 30, scope: !13438)
!13451 = !DILocation(line: 1716, column: 35, scope: !13438)
!13452 = !DILocation(line: 1716, column: 2, scope: !13438)
!13453 = !DILocation(line: 1717, column: 2, scope: !13438)
!13454 = !DILocation(line: 1717, column: 7, scope: !13438)
!13455 = !DILocation(line: 1717, column: 17, scope: !13438)
!13456 = !DILocation(line: 1717, column: 25, scope: !13438)
!13457 = !DILocation(line: 1718, column: 16, scope: !13438)
!13458 = !DILocation(line: 1718, column: 21, scope: !13438)
!13459 = !DILocation(line: 1718, column: 2, scope: !13438)
!13460 = !DILocation(line: 1719, column: 1, scope: !13438)
!13461 = !DILocalVariable(name: "v", arg: 1, scope: !13462, file: !13463, line: 84, type: !13466)
!13462 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !13463, file: !13463, line: 84, type: !13464, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13463 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13464 = !DISubroutineType(types: !13465)
!13465 = !{null, !13466, !127}
!13466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13467, size: 64)
!13467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13468)
!13468 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!13469 = !DILocation(line: 84, column: 74, scope: !13462, inlinedAt: !13470)
!13470 = distinct !DILocation(line: 855, column: 2, scope: !13471, inlinedAt: !13476)
!13471 = distinct !DISubprogram(name: "atomic64_set", scope: !13472, file: !13472, line: 853, type: !13473, scopeLine: 854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13472 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13473 = !DISubroutineType(types: !13474)
!13474 = !{null, !13475, !563}
!13475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!13476 = distinct !DILocation(line: 1771, column: 2, scope: !2)
!13477 = !DILocalVariable(name: "size", arg: 2, scope: !13462, file: !13463, line: 84, type: !127)
!13478 = !DILocation(line: 84, column: 84, scope: !13462, inlinedAt: !13470)
!13479 = !DILocalVariable(name: "v", arg: 1, scope: !13471, file: !13472, line: 853, type: !13475)
!13480 = !DILocation(line: 853, column: 26, scope: !13471, inlinedAt: !13476)
!13481 = !DILocalVariable(name: "i", arg: 2, scope: !13471, file: !13472, line: 853, type: !563)
!13482 = !DILocation(line: 853, column: 33, scope: !13471, inlinedAt: !13476)
!13483 = !DILocalVariable(name: "dev", arg: 1, scope: !2, file: !3, line: 1721, type: !7)
!13484 = !DILocation(line: 1721, column: 45, scope: !2)
!13485 = !DILocalVariable(name: "esw", scope: !2, file: !3, line: 1723, type: !10791)
!13486 = !DILocation(line: 1723, column: 23, scope: !2)
!13487 = !DILocalVariable(name: "vport", scope: !2, file: !3, line: 1724, type: !10958)
!13488 = !DILocation(line: 1724, column: 21, scope: !2)
!13489 = !DILocalVariable(name: "total_vports", scope: !2, file: !3, line: 1725, type: !6)
!13490 = !DILocation(line: 1725, column: 6, scope: !2)
!13491 = !DILocalVariable(name: "err", scope: !2, file: !3, line: 1726, type: !6)
!13492 = !DILocation(line: 1726, column: 6, scope: !2)
!13493 = !DILocalVariable(name: "i", scope: !2, file: !3, line: 1726, type: !6)
!13494 = !DILocation(line: 1726, column: 11, scope: !2)
!13495 = !DILocation(line: 1728, column: 7, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1728, column: 6)
!13497 = !DILocation(line: 1728, column: 6, scope: !2)
!13498 = !DILocation(line: 1729, column: 3, scope: !13496)
!13499 = !DILocation(line: 1731, column: 47, scope: !2)
!13500 = !DILocation(line: 1731, column: 17, scope: !2)
!13501 = !DILocation(line: 1731, column: 15, scope: !2)
!13502 = !DILocation(line: 1733, column: 2, scope: !2)
!13503 = !DILocation(line: 1739, column: 8, scope: !2)
!13504 = !DILocation(line: 1739, column: 6, scope: !2)
!13505 = !DILocation(line: 1740, column: 7, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1740, column: 6)
!13507 = !DILocation(line: 1740, column: 6, scope: !2)
!13508 = !DILocation(line: 1741, column: 3, scope: !13506)
!13509 = !DILocation(line: 1743, column: 13, scope: !2)
!13510 = !DILocation(line: 1743, column: 2, scope: !2)
!13511 = !DILocation(line: 1743, column: 7, scope: !2)
!13512 = !DILocation(line: 1743, column: 11, scope: !2)
!13513 = !DILocation(line: 1744, column: 50, scope: !2)
!13514 = !DILocation(line: 1744, column: 23, scope: !2)
!13515 = !DILocation(line: 1744, column: 2, scope: !2)
!13516 = !DILocation(line: 1744, column: 7, scope: !2)
!13517 = !DILocation(line: 1744, column: 21, scope: !2)
!13518 = !DILocation(line: 1745, column: 60, scope: !2)
!13519 = !DILocation(line: 1745, column: 26, scope: !2)
!13520 = !DILocation(line: 1745, column: 2, scope: !2)
!13521 = !DILocation(line: 1745, column: 7, scope: !2)
!13522 = !DILocation(line: 1745, column: 24, scope: !2)
!13523 = !DILocation(line: 1747, column: 20, scope: !2)
!13524 = !DILocation(line: 1747, column: 2, scope: !2)
!13525 = !DILocation(line: 1747, column: 7, scope: !2)
!13526 = !DILocation(line: 1747, column: 18, scope: !2)
!13527 = !DILocation(line: 1748, column: 7, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1748, column: 6)
!13529 = !DILocation(line: 1748, column: 12, scope: !13528)
!13530 = !DILocation(line: 1748, column: 6, scope: !2)
!13531 = !DILocation(line: 1749, column: 7, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13528, file: !3, line: 1748, column: 24)
!13533 = !DILocation(line: 1750, column: 3, scope: !13532)
!13534 = !DILocation(line: 1753, column: 24, scope: !2)
!13535 = !DILocation(line: 1753, column: 16, scope: !2)
!13536 = !DILocation(line: 1753, column: 2, scope: !2)
!13537 = !DILocation(line: 1753, column: 7, scope: !2)
!13538 = !DILocation(line: 1753, column: 14, scope: !2)
!13539 = !DILocation(line: 1755, column: 7, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1755, column: 6)
!13541 = !DILocation(line: 1755, column: 12, scope: !13540)
!13542 = !DILocation(line: 1755, column: 6, scope: !2)
!13543 = !DILocation(line: 1756, column: 7, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1755, column: 20)
!13545 = !DILocation(line: 1757, column: 3, scope: !13544)
!13546 = !DILocation(line: 1760, column: 22, scope: !2)
!13547 = !DILocation(line: 1760, column: 2, scope: !2)
!13548 = !DILocation(line: 1760, column: 7, scope: !2)
!13549 = !DILocation(line: 1760, column: 20, scope: !2)
!13550 = !DILocation(line: 1762, column: 31, scope: !2)
!13551 = !DILocation(line: 1762, column: 8, scope: !2)
!13552 = !DILocation(line: 1762, column: 6, scope: !2)
!13553 = !DILocation(line: 1763, column: 6, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1763, column: 6)
!13555 = !DILocation(line: 1763, column: 6, scope: !2)
!13556 = !DILocation(line: 1764, column: 3, scope: !13554)
!13557 = !DILocation(line: 1766, column: 2, scope: !2)
!13558 = !DILocation(line: 1766, column: 2, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1766, column: 2)
!13560 = !DILocation(line: 1767, column: 2, scope: !2)
!13561 = !DILocation(line: 1768, column: 2, scope: !2)
!13562 = !DILocation(line: 1768, column: 2, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1768, column: 2)
!13564 = !DILocation(line: 1769, column: 2, scope: !2)
!13565 = !DILocation(line: 1770, column: 26, scope: !2)
!13566 = !DILocation(line: 1770, column: 31, scope: !2)
!13567 = !DILocation(line: 1770, column: 40, scope: !2)
!13568 = !DILocation(line: 1770, column: 2, scope: !2)
!13569 = !DILocation(line: 1771, column: 16, scope: !2)
!13570 = !DILocation(line: 1771, column: 21, scope: !2)
!13571 = !DILocation(line: 1771, column: 30, scope: !2)
!13572 = !DILocation(line: 855, column: 26, scope: !13471, inlinedAt: !13476)
!13573 = !DILocation(line: 86, column: 20, scope: !13462, inlinedAt: !13470)
!13574 = !DILocation(line: 86, column: 23, scope: !13462, inlinedAt: !13470)
!13575 = !DILocation(line: 86, column: 2, scope: !13462, inlinedAt: !13470)
!13576 = !DILocation(line: 87, column: 2, scope: !13462, inlinedAt: !13470)
!13577 = !DILocation(line: 856, column: 20, scope: !13471, inlinedAt: !13476)
!13578 = !DILocation(line: 856, column: 23, scope: !13471, inlinedAt: !13476)
!13579 = !DILocation(line: 856, column: 2, scope: !13471, inlinedAt: !13476)
!13580 = !DILocation(line: 1772, column: 12, scope: !2)
!13581 = !DILocation(line: 1772, column: 17, scope: !2)
!13582 = !DILocation(line: 1772, column: 26, scope: !2)
!13583 = !DILocation(line: 1772, column: 2, scope: !2)
!13584 = !DILocation(line: 1773, column: 2, scope: !2)
!13585 = !DILocation(line: 1773, column: 2, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1773, column: 2)
!13587 = !DILocation(line: 1774, column: 2, scope: !2)
!13588 = !DILocation(line: 1774, column: 2, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1774, column: 2)
!13590 = !DILocation(line: 1776, column: 2, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1776, column: 2)
!13592 = !DILocation(line: 1776, column: 2, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13591, file: !3, line: 1776, column: 2)
!13594 = !DILocation(line: 1777, column: 50, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13593, file: !3, line: 1776, column: 41)
!13596 = !DILocation(line: 1777, column: 55, scope: !13595)
!13597 = !DILocation(line: 1777, column: 18, scope: !13595)
!13598 = !DILocation(line: 1777, column: 3, scope: !13595)
!13599 = !DILocation(line: 1777, column: 10, scope: !13595)
!13600 = !DILocation(line: 1777, column: 16, scope: !13595)
!13601 = !DILocation(line: 1778, column: 3, scope: !13595)
!13602 = !DILocation(line: 1778, column: 10, scope: !13595)
!13603 = !DILocation(line: 1778, column: 15, scope: !13595)
!13604 = !DILocation(line: 1778, column: 26, scope: !13595)
!13605 = !DILocation(line: 1779, column: 16, scope: !13595)
!13606 = !DILocation(line: 1779, column: 3, scope: !13595)
!13607 = !DILocation(line: 1779, column: 10, scope: !13595)
!13608 = !DILocation(line: 1779, column: 14, scope: !13595)
!13609 = !DILocation(line: 1780, column: 3, scope: !13595)
!13610 = !DILocation(line: 1780, column: 3, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 1780, column: 3)
!13612 = !DILocation(line: 1782, column: 2, scope: !13595)
!13613 = distinct !{!13613, !13590, !13614}
!13614 = !DILocation(line: 1782, column: 2, scope: !13591)
!13615 = !DILocation(line: 1784, column: 2, scope: !2)
!13616 = !DILocation(line: 1784, column: 7, scope: !2)
!13617 = !DILocation(line: 1784, column: 22, scope: !2)
!13618 = !DILocation(line: 1785, column: 2, scope: !2)
!13619 = !DILocation(line: 1785, column: 7, scope: !2)
!13620 = !DILocation(line: 1785, column: 12, scope: !2)
!13621 = !DILocation(line: 1786, column: 2, scope: !2)
!13622 = !DILocation(line: 1786, column: 7, scope: !2)
!13623 = !DILocation(line: 1786, column: 16, scope: !2)
!13624 = !DILocation(line: 1786, column: 28, scope: !2)
!13625 = !DILocation(line: 1788, column: 22, scope: !2)
!13626 = !DILocation(line: 1788, column: 2, scope: !2)
!13627 = !DILocation(line: 1788, column: 7, scope: !2)
!13628 = !DILocation(line: 1788, column: 12, scope: !2)
!13629 = !DILocation(line: 1788, column: 20, scope: !2)
!13630 = !DILocation(line: 1789, column: 2, scope: !2)
!13631 = !DILabel(scope: !2, name: "abort", file: !3, line: 1790)
!13632 = !DILocation(line: 1790, column: 1, scope: !2)
!13633 = !DILocation(line: 1791, column: 6, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1791, column: 6)
!13635 = !DILocation(line: 1791, column: 11, scope: !13634)
!13636 = !DILocation(line: 1791, column: 6, scope: !2)
!13637 = !DILocation(line: 1792, column: 21, scope: !13634)
!13638 = !DILocation(line: 1792, column: 26, scope: !13634)
!13639 = !DILocation(line: 1792, column: 3, scope: !13634)
!13640 = !DILocation(line: 1793, column: 28, scope: !2)
!13641 = !DILocation(line: 1793, column: 2, scope: !2)
!13642 = !DILocation(line: 1794, column: 8, scope: !2)
!13643 = !DILocation(line: 1794, column: 13, scope: !2)
!13644 = !DILocation(line: 1794, column: 2, scope: !2)
!13645 = !DILocation(line: 1795, column: 8, scope: !2)
!13646 = !DILocation(line: 1795, column: 2, scope: !2)
!13647 = !DILocation(line: 1796, column: 9, scope: !2)
!13648 = !DILocation(line: 1796, column: 2, scope: !2)
!13649 = !DILocation(line: 1797, column: 1, scope: !2)
!13650 = distinct !DISubprogram(name: "mlx5_core_is_pf", scope: !9, file: !9, line: 1130, type: !12870, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13651 = !DILocalVariable(name: "dev", arg: 1, scope: !13650, file: !9, line: 1130, type: !12331)
!13652 = !DILocation(line: 1130, column: 64, scope: !13650)
!13653 = !DILocation(line: 1132, column: 9, scope: !13650)
!13654 = !DILocation(line: 1132, column: 14, scope: !13650)
!13655 = !DILocation(line: 1132, column: 27, scope: !13650)
!13656 = !DILocation(line: 1132, column: 2, scope: !13650)
!13657 = distinct !DISubprogram(name: "kzalloc", scope: !11867, file: !11867, line: 662, type: !12552, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13658 = !DILocalVariable(name: "s", arg: 1, scope: !13659, file: !11867, line: 445, type: !980)
!13659 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !11867, file: !11867, line: 445, type: !13660, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13660 = !DISubroutineType(types: !13661)
!13661 = !{!154, !980, !623, !127}
!13662 = !DILocation(line: 445, column: 72, scope: !13659, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 552, column: 10, scope: !13664, inlinedAt: !13667)
!13664 = distinct !DILexicalBlock(scope: !13665, file: !11867, line: 540, column: 34)
!13665 = distinct !DILexicalBlock(scope: !13666, file: !11867, line: 540, column: 6)
!13666 = distinct !DISubprogram(name: "kmalloc", scope: !11867, file: !11867, line: 538, type: !12552, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13667 = distinct !DILocation(line: 664, column: 9, scope: !13657)
!13668 = !DILocalVariable(name: "flags", arg: 2, scope: !13659, file: !11867, line: 446, type: !623)
!13669 = !DILocation(line: 446, column: 9, scope: !13659, inlinedAt: !13663)
!13670 = !DILocalVariable(name: "size", arg: 3, scope: !13659, file: !11867, line: 446, type: !127)
!13671 = !DILocation(line: 446, column: 23, scope: !13659, inlinedAt: !13663)
!13672 = !DILocalVariable(name: "ret", scope: !13659, file: !11867, line: 448, type: !154)
!13673 = !DILocation(line: 448, column: 8, scope: !13659, inlinedAt: !13663)
!13674 = !DILocalVariable(name: "flags", arg: 1, scope: !13675, file: !11867, line: 318, type: !623)
!13675 = distinct !DISubprogram(name: "kmalloc_type", scope: !11867, file: !11867, line: 318, type: !13676, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{!11866, !623}
!13678 = !DILocation(line: 318, column: 67, scope: !13675, inlinedAt: !13679)
!13679 = distinct !DILocation(line: 553, column: 20, scope: !13664, inlinedAt: !13667)
!13680 = !DILocalVariable(name: "size", arg: 1, scope: !13681, file: !11867, line: 346, type: !127)
!13681 = distinct !DISubprogram(name: "kmalloc_index", scope: !11867, file: !11867, line: 346, type: !13682, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13682 = !DISubroutineType(types: !13683)
!13683 = !{!194, !127}
!13684 = !DILocation(line: 346, column: 58, scope: !13681, inlinedAt: !13685)
!13685 = distinct !DILocation(line: 547, column: 11, scope: !13664, inlinedAt: !13667)
!13686 = !DILocalVariable(name: "size", arg: 1, scope: !13687, file: !11867, line: 472, type: !127)
!13687 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !11867, file: !11867, line: 472, type: !13688, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13688 = !DISubroutineType(types: !13689)
!13689 = !{!154, !127, !623, !194}
!13690 = !DILocation(line: 472, column: 28, scope: !13687, inlinedAt: !13691)
!13691 = distinct !DILocation(line: 481, column: 9, scope: !13692, inlinedAt: !13693)
!13692 = distinct !DISubprogram(name: "kmalloc_large", scope: !11867, file: !11867, line: 478, type: !12552, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13693 = distinct !DILocation(line: 545, column: 11, scope: !13694, inlinedAt: !13667)
!13694 = distinct !DILexicalBlock(scope: !13664, file: !11867, line: 544, column: 7)
!13695 = !DILocalVariable(name: "flags", arg: 2, scope: !13687, file: !11867, line: 472, type: !623)
!13696 = !DILocation(line: 472, column: 40, scope: !13687, inlinedAt: !13691)
!13697 = !DILocalVariable(name: "order", arg: 3, scope: !13687, file: !11867, line: 472, type: !194)
!13698 = !DILocation(line: 472, column: 60, scope: !13687, inlinedAt: !13691)
!13699 = !DILocalVariable(name: "size", arg: 1, scope: !13692, file: !11867, line: 478, type: !127)
!13700 = !DILocation(line: 478, column: 51, scope: !13692, inlinedAt: !13693)
!13701 = !DILocalVariable(name: "flags", arg: 2, scope: !13692, file: !11867, line: 478, type: !623)
!13702 = !DILocation(line: 478, column: 63, scope: !13692, inlinedAt: !13693)
!13703 = !DILocalVariable(name: "order", scope: !13692, file: !11867, line: 480, type: !194)
!13704 = !DILocation(line: 480, column: 15, scope: !13692, inlinedAt: !13693)
!13705 = !DILocalVariable(name: "size", arg: 1, scope: !13666, file: !11867, line: 538, type: !127)
!13706 = !DILocation(line: 538, column: 45, scope: !13666, inlinedAt: !13667)
!13707 = !DILocalVariable(name: "flags", arg: 2, scope: !13666, file: !11867, line: 538, type: !623)
!13708 = !DILocation(line: 538, column: 57, scope: !13666, inlinedAt: !13667)
!13709 = !DILocalVariable(name: "index", scope: !13664, file: !11867, line: 542, type: !194)
!13710 = !DILocation(line: 542, column: 16, scope: !13664, inlinedAt: !13667)
!13711 = !DILocalVariable(name: "size", arg: 1, scope: !13657, file: !11867, line: 662, type: !127)
!13712 = !DILocation(line: 662, column: 36, scope: !13657)
!13713 = !DILocalVariable(name: "flags", arg: 2, scope: !13657, file: !11867, line: 662, type: !623)
!13714 = !DILocation(line: 662, column: 48, scope: !13657)
!13715 = !DILocation(line: 664, column: 17, scope: !13657)
!13716 = !DILocation(line: 664, column: 23, scope: !13657)
!13717 = !DILocation(line: 664, column: 29, scope: !13657)
!13718 = !DILocation(line: 540, column: 27, scope: !13665, inlinedAt: !13667)
!13719 = !DILocation(line: 540, column: 6, scope: !13665, inlinedAt: !13667)
!13720 = !DILocation(line: 540, column: 6, scope: !13666, inlinedAt: !13667)
!13721 = !DILocation(line: 544, column: 7, scope: !13694, inlinedAt: !13667)
!13722 = !DILocation(line: 544, column: 12, scope: !13694, inlinedAt: !13667)
!13723 = !DILocation(line: 544, column: 7, scope: !13664, inlinedAt: !13667)
!13724 = !DILocation(line: 545, column: 25, scope: !13694, inlinedAt: !13667)
!13725 = !DILocation(line: 545, column: 31, scope: !13694, inlinedAt: !13667)
!13726 = !DILocation(line: 480, column: 33, scope: !13692, inlinedAt: !13693)
!13727 = !DILocation(line: 480, column: 23, scope: !13692, inlinedAt: !13693)
!13728 = !DILocation(line: 481, column: 29, scope: !13692, inlinedAt: !13693)
!13729 = !DILocation(line: 481, column: 35, scope: !13692, inlinedAt: !13693)
!13730 = !DILocation(line: 481, column: 42, scope: !13692, inlinedAt: !13693)
!13731 = !DILocation(line: 474, column: 23, scope: !13687, inlinedAt: !13691)
!13732 = !DILocation(line: 474, column: 29, scope: !13687, inlinedAt: !13691)
!13733 = !DILocation(line: 474, column: 36, scope: !13687, inlinedAt: !13691)
!13734 = !DILocation(line: 474, column: 9, scope: !13687, inlinedAt: !13691)
!13735 = !DILocation(line: 545, column: 4, scope: !13694, inlinedAt: !13667)
!13736 = !DILocation(line: 547, column: 25, scope: !13664, inlinedAt: !13667)
!13737 = !DILocation(line: 348, column: 7, scope: !13738, inlinedAt: !13685)
!13738 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 348, column: 6)
!13739 = !DILocation(line: 348, column: 6, scope: !13681, inlinedAt: !13685)
!13740 = !DILocation(line: 349, column: 3, scope: !13738, inlinedAt: !13685)
!13741 = !DILocation(line: 351, column: 6, scope: !13742, inlinedAt: !13685)
!13742 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 351, column: 6)
!13743 = !DILocation(line: 351, column: 11, scope: !13742, inlinedAt: !13685)
!13744 = !DILocation(line: 351, column: 6, scope: !13681, inlinedAt: !13685)
!13745 = !DILocation(line: 352, column: 3, scope: !13742, inlinedAt: !13685)
!13746 = !DILocation(line: 354, column: 32, scope: !13747, inlinedAt: !13685)
!13747 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 354, column: 6)
!13748 = !DILocation(line: 354, column: 37, scope: !13747, inlinedAt: !13685)
!13749 = !DILocation(line: 354, column: 42, scope: !13747, inlinedAt: !13685)
!13750 = !DILocation(line: 354, column: 45, scope: !13747, inlinedAt: !13685)
!13751 = !DILocation(line: 354, column: 50, scope: !13747, inlinedAt: !13685)
!13752 = !DILocation(line: 354, column: 6, scope: !13681, inlinedAt: !13685)
!13753 = !DILocation(line: 355, column: 3, scope: !13747, inlinedAt: !13685)
!13754 = !DILocation(line: 356, column: 32, scope: !13755, inlinedAt: !13685)
!13755 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 356, column: 6)
!13756 = !DILocation(line: 356, column: 37, scope: !13755, inlinedAt: !13685)
!13757 = !DILocation(line: 356, column: 43, scope: !13755, inlinedAt: !13685)
!13758 = !DILocation(line: 356, column: 46, scope: !13755, inlinedAt: !13685)
!13759 = !DILocation(line: 356, column: 51, scope: !13755, inlinedAt: !13685)
!13760 = !DILocation(line: 356, column: 6, scope: !13681, inlinedAt: !13685)
!13761 = !DILocation(line: 357, column: 3, scope: !13755, inlinedAt: !13685)
!13762 = !DILocation(line: 358, column: 6, scope: !13763, inlinedAt: !13685)
!13763 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 358, column: 6)
!13764 = !DILocation(line: 358, column: 11, scope: !13763, inlinedAt: !13685)
!13765 = !DILocation(line: 358, column: 6, scope: !13681, inlinedAt: !13685)
!13766 = !DILocation(line: 358, column: 26, scope: !13763, inlinedAt: !13685)
!13767 = !DILocation(line: 359, column: 6, scope: !13768, inlinedAt: !13685)
!13768 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 359, column: 6)
!13769 = !DILocation(line: 359, column: 11, scope: !13768, inlinedAt: !13685)
!13770 = !DILocation(line: 359, column: 6, scope: !13681, inlinedAt: !13685)
!13771 = !DILocation(line: 359, column: 26, scope: !13768, inlinedAt: !13685)
!13772 = !DILocation(line: 360, column: 6, scope: !13773, inlinedAt: !13685)
!13773 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 360, column: 6)
!13774 = !DILocation(line: 360, column: 11, scope: !13773, inlinedAt: !13685)
!13775 = !DILocation(line: 360, column: 6, scope: !13681, inlinedAt: !13685)
!13776 = !DILocation(line: 360, column: 26, scope: !13773, inlinedAt: !13685)
!13777 = !DILocation(line: 361, column: 6, scope: !13778, inlinedAt: !13685)
!13778 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 361, column: 6)
!13779 = !DILocation(line: 361, column: 11, scope: !13778, inlinedAt: !13685)
!13780 = !DILocation(line: 361, column: 6, scope: !13681, inlinedAt: !13685)
!13781 = !DILocation(line: 361, column: 26, scope: !13778, inlinedAt: !13685)
!13782 = !DILocation(line: 362, column: 6, scope: !13783, inlinedAt: !13685)
!13783 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 362, column: 6)
!13784 = !DILocation(line: 362, column: 11, scope: !13783, inlinedAt: !13685)
!13785 = !DILocation(line: 362, column: 6, scope: !13681, inlinedAt: !13685)
!13786 = !DILocation(line: 362, column: 26, scope: !13783, inlinedAt: !13685)
!13787 = !DILocation(line: 363, column: 6, scope: !13788, inlinedAt: !13685)
!13788 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 363, column: 6)
!13789 = !DILocation(line: 363, column: 11, scope: !13788, inlinedAt: !13685)
!13790 = !DILocation(line: 363, column: 6, scope: !13681, inlinedAt: !13685)
!13791 = !DILocation(line: 363, column: 26, scope: !13788, inlinedAt: !13685)
!13792 = !DILocation(line: 364, column: 6, scope: !13793, inlinedAt: !13685)
!13793 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 364, column: 6)
!13794 = !DILocation(line: 364, column: 11, scope: !13793, inlinedAt: !13685)
!13795 = !DILocation(line: 364, column: 6, scope: !13681, inlinedAt: !13685)
!13796 = !DILocation(line: 364, column: 26, scope: !13793, inlinedAt: !13685)
!13797 = !DILocation(line: 365, column: 6, scope: !13798, inlinedAt: !13685)
!13798 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 365, column: 6)
!13799 = !DILocation(line: 365, column: 11, scope: !13798, inlinedAt: !13685)
!13800 = !DILocation(line: 365, column: 6, scope: !13681, inlinedAt: !13685)
!13801 = !DILocation(line: 365, column: 26, scope: !13798, inlinedAt: !13685)
!13802 = !DILocation(line: 366, column: 6, scope: !13803, inlinedAt: !13685)
!13803 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 366, column: 6)
!13804 = !DILocation(line: 366, column: 11, scope: !13803, inlinedAt: !13685)
!13805 = !DILocation(line: 366, column: 6, scope: !13681, inlinedAt: !13685)
!13806 = !DILocation(line: 366, column: 26, scope: !13803, inlinedAt: !13685)
!13807 = !DILocation(line: 367, column: 6, scope: !13808, inlinedAt: !13685)
!13808 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 367, column: 6)
!13809 = !DILocation(line: 367, column: 11, scope: !13808, inlinedAt: !13685)
!13810 = !DILocation(line: 367, column: 6, scope: !13681, inlinedAt: !13685)
!13811 = !DILocation(line: 367, column: 26, scope: !13808, inlinedAt: !13685)
!13812 = !DILocation(line: 368, column: 6, scope: !13813, inlinedAt: !13685)
!13813 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 368, column: 6)
!13814 = !DILocation(line: 368, column: 11, scope: !13813, inlinedAt: !13685)
!13815 = !DILocation(line: 368, column: 6, scope: !13681, inlinedAt: !13685)
!13816 = !DILocation(line: 368, column: 26, scope: !13813, inlinedAt: !13685)
!13817 = !DILocation(line: 369, column: 6, scope: !13818, inlinedAt: !13685)
!13818 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 369, column: 6)
!13819 = !DILocation(line: 369, column: 11, scope: !13818, inlinedAt: !13685)
!13820 = !DILocation(line: 369, column: 6, scope: !13681, inlinedAt: !13685)
!13821 = !DILocation(line: 369, column: 26, scope: !13818, inlinedAt: !13685)
!13822 = !DILocation(line: 370, column: 6, scope: !13823, inlinedAt: !13685)
!13823 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 370, column: 6)
!13824 = !DILocation(line: 370, column: 11, scope: !13823, inlinedAt: !13685)
!13825 = !DILocation(line: 370, column: 6, scope: !13681, inlinedAt: !13685)
!13826 = !DILocation(line: 370, column: 26, scope: !13823, inlinedAt: !13685)
!13827 = !DILocation(line: 371, column: 6, scope: !13828, inlinedAt: !13685)
!13828 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 371, column: 6)
!13829 = !DILocation(line: 371, column: 11, scope: !13828, inlinedAt: !13685)
!13830 = !DILocation(line: 371, column: 6, scope: !13681, inlinedAt: !13685)
!13831 = !DILocation(line: 371, column: 26, scope: !13828, inlinedAt: !13685)
!13832 = !DILocation(line: 372, column: 6, scope: !13833, inlinedAt: !13685)
!13833 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 372, column: 6)
!13834 = !DILocation(line: 372, column: 11, scope: !13833, inlinedAt: !13685)
!13835 = !DILocation(line: 372, column: 6, scope: !13681, inlinedAt: !13685)
!13836 = !DILocation(line: 372, column: 26, scope: !13833, inlinedAt: !13685)
!13837 = !DILocation(line: 373, column: 6, scope: !13838, inlinedAt: !13685)
!13838 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 373, column: 6)
!13839 = !DILocation(line: 373, column: 11, scope: !13838, inlinedAt: !13685)
!13840 = !DILocation(line: 373, column: 6, scope: !13681, inlinedAt: !13685)
!13841 = !DILocation(line: 373, column: 26, scope: !13838, inlinedAt: !13685)
!13842 = !DILocation(line: 374, column: 6, scope: !13843, inlinedAt: !13685)
!13843 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 374, column: 6)
!13844 = !DILocation(line: 374, column: 11, scope: !13843, inlinedAt: !13685)
!13845 = !DILocation(line: 374, column: 6, scope: !13681, inlinedAt: !13685)
!13846 = !DILocation(line: 374, column: 26, scope: !13843, inlinedAt: !13685)
!13847 = !DILocation(line: 375, column: 6, scope: !13848, inlinedAt: !13685)
!13848 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 375, column: 6)
!13849 = !DILocation(line: 375, column: 11, scope: !13848, inlinedAt: !13685)
!13850 = !DILocation(line: 375, column: 6, scope: !13681, inlinedAt: !13685)
!13851 = !DILocation(line: 375, column: 27, scope: !13848, inlinedAt: !13685)
!13852 = !DILocation(line: 376, column: 6, scope: !13853, inlinedAt: !13685)
!13853 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 376, column: 6)
!13854 = !DILocation(line: 376, column: 11, scope: !13853, inlinedAt: !13685)
!13855 = !DILocation(line: 376, column: 6, scope: !13681, inlinedAt: !13685)
!13856 = !DILocation(line: 376, column: 32, scope: !13853, inlinedAt: !13685)
!13857 = !DILocation(line: 377, column: 6, scope: !13858, inlinedAt: !13685)
!13858 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 377, column: 6)
!13859 = !DILocation(line: 377, column: 11, scope: !13858, inlinedAt: !13685)
!13860 = !DILocation(line: 377, column: 6, scope: !13681, inlinedAt: !13685)
!13861 = !DILocation(line: 377, column: 32, scope: !13858, inlinedAt: !13685)
!13862 = !DILocation(line: 378, column: 6, scope: !13863, inlinedAt: !13685)
!13863 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 378, column: 6)
!13864 = !DILocation(line: 378, column: 11, scope: !13863, inlinedAt: !13685)
!13865 = !DILocation(line: 378, column: 6, scope: !13681, inlinedAt: !13685)
!13866 = !DILocation(line: 378, column: 32, scope: !13863, inlinedAt: !13685)
!13867 = !DILocation(line: 379, column: 6, scope: !13868, inlinedAt: !13685)
!13868 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 379, column: 6)
!13869 = !DILocation(line: 379, column: 11, scope: !13868, inlinedAt: !13685)
!13870 = !DILocation(line: 379, column: 6, scope: !13681, inlinedAt: !13685)
!13871 = !DILocation(line: 379, column: 33, scope: !13868, inlinedAt: !13685)
!13872 = !DILocation(line: 380, column: 6, scope: !13873, inlinedAt: !13685)
!13873 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 380, column: 6)
!13874 = !DILocation(line: 380, column: 11, scope: !13873, inlinedAt: !13685)
!13875 = !DILocation(line: 380, column: 6, scope: !13681, inlinedAt: !13685)
!13876 = !DILocation(line: 380, column: 33, scope: !13873, inlinedAt: !13685)
!13877 = !DILocation(line: 381, column: 6, scope: !13878, inlinedAt: !13685)
!13878 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 381, column: 6)
!13879 = !DILocation(line: 381, column: 11, scope: !13878, inlinedAt: !13685)
!13880 = !DILocation(line: 381, column: 6, scope: !13681, inlinedAt: !13685)
!13881 = !DILocation(line: 381, column: 33, scope: !13878, inlinedAt: !13685)
!13882 = !DILocation(line: 382, column: 2, scope: !13883, inlinedAt: !13685)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !11867, line: 382, column: 2)
!13884 = distinct !DILexicalBlock(scope: !13681, file: !11867, line: 382, column: 2)
!13885 = !{i32 -2142331175, i32 -2142331146, i32 -2142331100, i32 -2142331042, i32 -2142330988, i32 -2142330934, i32 -2142330879, i32 -2142330848}
!13886 = !DILocation(line: 382, column: 2, scope: !13887, inlinedAt: !13685)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !11867, line: 382, column: 2)
!13888 = distinct !DILexicalBlock(scope: !13884, file: !11867, line: 382, column: 2)
!13889 = !{i32 -2142330405, i32 -2142330398, i32 -2142330344, i32 -2142330313, i32 -2142330283}
!13890 = !DILocation(line: 382, column: 2, scope: !13888, inlinedAt: !13685)
!13891 = !DILocation(line: 386, column: 1, scope: !13681, inlinedAt: !13685)
!13892 = !DILocation(line: 547, column: 9, scope: !13664, inlinedAt: !13667)
!13893 = !DILocation(line: 549, column: 8, scope: !13894, inlinedAt: !13667)
!13894 = distinct !DILexicalBlock(scope: !13664, file: !11867, line: 549, column: 7)
!13895 = !DILocation(line: 549, column: 7, scope: !13664, inlinedAt: !13667)
!13896 = !DILocation(line: 550, column: 4, scope: !13894, inlinedAt: !13667)
!13897 = !DILocation(line: 553, column: 33, scope: !13664, inlinedAt: !13667)
!13898 = !DILocation(line: 325, column: 6, scope: !13899, inlinedAt: !13679)
!13899 = distinct !DILexicalBlock(scope: !13675, file: !11867, line: 325, column: 6)
!13900 = !DILocation(line: 325, column: 6, scope: !13675, inlinedAt: !13679)
!13901 = !DILocation(line: 326, column: 3, scope: !13899, inlinedAt: !13679)
!13902 = !DILocation(line: 332, column: 9, scope: !13675, inlinedAt: !13679)
!13903 = !DILocation(line: 332, column: 15, scope: !13675, inlinedAt: !13679)
!13904 = !DILocation(line: 332, column: 2, scope: !13675, inlinedAt: !13679)
!13905 = !DILocation(line: 336, column: 1, scope: !13675, inlinedAt: !13679)
!13906 = !DILocation(line: 553, column: 5, scope: !13664, inlinedAt: !13667)
!13907 = !DILocation(line: 553, column: 41, scope: !13664, inlinedAt: !13667)
!13908 = !DILocation(line: 554, column: 5, scope: !13664, inlinedAt: !13667)
!13909 = !DILocation(line: 554, column: 12, scope: !13664, inlinedAt: !13667)
!13910 = !DILocation(line: 448, column: 31, scope: !13659, inlinedAt: !13663)
!13911 = !DILocation(line: 448, column: 34, scope: !13659, inlinedAt: !13663)
!13912 = !DILocation(line: 448, column: 14, scope: !13659, inlinedAt: !13663)
!13913 = !DILocation(line: 450, column: 22, scope: !13659, inlinedAt: !13663)
!13914 = !DILocation(line: 450, column: 25, scope: !13659, inlinedAt: !13663)
!13915 = !DILocation(line: 450, column: 30, scope: !13659, inlinedAt: !13663)
!13916 = !DILocation(line: 450, column: 36, scope: !13659, inlinedAt: !13663)
!13917 = !DILocation(line: 450, column: 8, scope: !13659, inlinedAt: !13663)
!13918 = !DILocation(line: 450, column: 6, scope: !13659, inlinedAt: !13663)
!13919 = !DILocation(line: 451, column: 9, scope: !13659, inlinedAt: !13663)
!13920 = !DILocation(line: 552, column: 3, scope: !13664, inlinedAt: !13667)
!13921 = !DILocation(line: 557, column: 19, scope: !13666, inlinedAt: !13667)
!13922 = !DILocation(line: 557, column: 25, scope: !13666, inlinedAt: !13667)
!13923 = !DILocation(line: 557, column: 9, scope: !13666, inlinedAt: !13667)
!13924 = !DILocation(line: 557, column: 2, scope: !13666, inlinedAt: !13667)
!13925 = !DILocation(line: 558, column: 1, scope: !13666, inlinedAt: !13667)
!13926 = !DILocation(line: 664, column: 2, scope: !13657)
!13927 = distinct !DISubprogram(name: "mlx5_eswitch_manager_vport", scope: !10793, file: !10793, line: 484, type: !13928, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{!739, !7}
!13930 = !DILocalVariable(name: "dev", arg: 1, scope: !13927, file: !10793, line: 484, type: !7)
!13931 = !DILocation(line: 484, column: 68, scope: !13927)
!13932 = !DILocation(line: 486, column: 39, scope: !13927)
!13933 = !DILocation(line: 486, column: 9, scope: !13927)
!13934 = !DILocation(line: 486, column: 2, scope: !13927)
!13935 = distinct !DISubprogram(name: "mlx5_eswitch_first_host_vport_num", scope: !10793, file: !10793, line: 496, type: !13928, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13936 = !DILocalVariable(name: "dev", arg: 1, scope: !13935, file: !10793, line: 496, type: !7)
!13937 = !DILocation(line: 496, column: 75, scope: !13935)
!13938 = !DILocation(line: 498, column: 39, scope: !13935)
!13939 = !DILocation(line: 498, column: 9, scope: !13935)
!13940 = !DILocation(line: 498, column: 2, scope: !13935)
!13941 = distinct !DISubprogram(name: "kcalloc", scope: !11867, file: !11867, line: 601, type: !13942, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{!154, !127, !127, !623}
!13944 = !DILocalVariable(name: "n", arg: 1, scope: !13941, file: !11867, line: 601, type: !127)
!13945 = !DILocation(line: 601, column: 36, scope: !13941)
!13946 = !DILocalVariable(name: "size", arg: 2, scope: !13941, file: !11867, line: 601, type: !127)
!13947 = !DILocation(line: 601, column: 46, scope: !13941)
!13948 = !DILocalVariable(name: "flags", arg: 3, scope: !13941, file: !11867, line: 601, type: !623)
!13949 = !DILocation(line: 601, column: 58, scope: !13941)
!13950 = !DILocation(line: 603, column: 23, scope: !13941)
!13951 = !DILocation(line: 603, column: 26, scope: !13941)
!13952 = !DILocation(line: 603, column: 32, scope: !13941)
!13953 = !DILocation(line: 603, column: 38, scope: !13941)
!13954 = !DILocation(line: 603, column: 9, scope: !13941)
!13955 = !DILocation(line: 603, column: 2, scope: !13941)
!13956 = distinct !DISubprogram(name: "__hash_init", scope: !13957, file: !13957, line: 34, type: !13958, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13957 = !DIFile(filename: "./include/linux/hashtable.h", directory: "/home/lizy2001/genbc/linux")
!13958 = !DISubroutineType(types: !13959)
!13959 = !{null, !6692, !194}
!13960 = !DILocalVariable(name: "ht", arg: 1, scope: !13956, file: !13957, line: 34, type: !6692)
!13961 = !DILocation(line: 34, column: 51, scope: !13956)
!13962 = !DILocalVariable(name: "sz", arg: 2, scope: !13956, file: !13957, line: 34, type: !194)
!13963 = !DILocation(line: 34, column: 68, scope: !13956)
!13964 = !DILocalVariable(name: "i", scope: !13956, file: !13957, line: 36, type: !194)
!13965 = !DILocation(line: 36, column: 15, scope: !13956)
!13966 = !DILocation(line: 38, column: 9, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13956, file: !13957, line: 38, column: 2)
!13968 = !DILocation(line: 38, column: 7, scope: !13967)
!13969 = !DILocation(line: 38, column: 14, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13967, file: !13957, line: 38, column: 2)
!13971 = !DILocation(line: 38, column: 18, scope: !13970)
!13972 = !DILocation(line: 38, column: 16, scope: !13970)
!13973 = !DILocation(line: 38, column: 2, scope: !13967)
!13974 = !DILocation(line: 39, column: 3, scope: !13970)
!13975 = !DILocation(line: 38, column: 23, scope: !13970)
!13976 = !DILocation(line: 38, column: 2, scope: !13970)
!13977 = distinct !{!13977, !13973, !13978}
!13978 = !DILocation(line: 39, column: 3, scope: !13967)
!13979 = !DILocation(line: 40, column: 1, scope: !13956)
!13980 = distinct !DISubprogram(name: "ida_init", scope: !1557, file: !1557, line: 312, type: !13981, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{null, !13983}
!13983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10829, size: 64)
!13984 = !DILocalVariable(name: "ida", arg: 1, scope: !13980, file: !1557, line: 312, type: !13983)
!13985 = !DILocation(line: 312, column: 41, scope: !13980)
!13986 = !DILocation(line: 314, column: 17, scope: !13980)
!13987 = !DILocation(line: 314, column: 22, scope: !13980)
!13988 = !DILocation(line: 314, column: 2, scope: !13980)
!13989 = !DILocation(line: 315, column: 1, scope: !13980)
!13990 = distinct !DISubprogram(name: "mlx5_eswitch_index_to_vport_num", scope: !10793, file: !10793, line: 533, type: !13991, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!739, !10791, !6}
!13993 = !DILocalVariable(name: "esw", arg: 1, scope: !13990, file: !10793, line: 533, type: !10791)
!13994 = !DILocation(line: 533, column: 72, scope: !13990)
!13995 = !DILocalVariable(name: "index", arg: 2, scope: !13990, file: !10793, line: 534, type: !6)
!13996 = !DILocation(line: 534, column: 13, scope: !13990)
!13997 = !DILocation(line: 536, column: 6, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13990, file: !10793, line: 536, column: 6)
!13999 = !DILocation(line: 536, column: 37, scope: !13998)
!14000 = !DILocation(line: 536, column: 15, scope: !13998)
!14001 = !DILocation(line: 536, column: 12, scope: !13998)
!14002 = !DILocation(line: 536, column: 42, scope: !13998)
!14003 = !DILocation(line: 537, column: 29, scope: !13998)
!14004 = !DILocation(line: 537, column: 34, scope: !13998)
!14005 = !DILocation(line: 537, column: 6, scope: !13998)
!14006 = !DILocation(line: 536, column: 6, scope: !13990)
!14007 = !DILocation(line: 538, column: 3, scope: !13998)
!14008 = !DILocation(line: 540, column: 6, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !13990, file: !10793, line: 540, column: 6)
!14010 = !DILocation(line: 540, column: 39, scope: !14009)
!14011 = !DILocation(line: 540, column: 15, scope: !14009)
!14012 = !DILocation(line: 540, column: 12, scope: !14009)
!14013 = !DILocation(line: 540, column: 6, scope: !13990)
!14014 = !DILocation(line: 541, column: 3, scope: !14009)
!14015 = !DILocation(line: 543, column: 9, scope: !13990)
!14016 = !DILocation(line: 543, column: 2, scope: !13990)
!14017 = !DILocation(line: 544, column: 1, scope: !13990)
!14018 = distinct !DISubprogram(name: "__init_work", scope: !1724, file: !1724, line: 215, type: !14019, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14019 = !DISubroutineType(types: !14020)
!14020 = !{null, !1733, !6}
!14021 = !DILocalVariable(name: "work", arg: 1, scope: !14018, file: !1724, line: 215, type: !1733)
!14022 = !DILocation(line: 215, column: 52, scope: !14018)
!14023 = !DILocalVariable(name: "onstack", arg: 2, scope: !14018, file: !1724, line: 215, type: !6)
!14024 = !DILocation(line: 215, column: 62, scope: !14018)
!14025 = !DILocation(line: 215, column: 73, scope: !14018)
!14026 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !14027, file: !14027, line: 33, type: !14028, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14027 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!14028 = !DISubroutineType(types: !14029)
!14029 = !{null, !29}
!14030 = !DILocalVariable(name: "list", arg: 1, scope: !14026, file: !14027, line: 33, type: !29)
!14031 = !DILocation(line: 33, column: 53, scope: !14026)
!14032 = !DILocation(line: 35, column: 2, scope: !14026)
!14033 = !DILocation(line: 35, column: 2, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14026, file: !14027, line: 35, column: 2)
!14035 = !DILocation(line: 35, column: 2, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14034, file: !14027, line: 35, column: 2)
!14037 = !DILocation(line: 35, column: 2, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14034, file: !14027, line: 35, column: 2)
!14039 = !DILocation(line: 36, column: 15, scope: !14026)
!14040 = !DILocation(line: 36, column: 2, scope: !14026)
!14041 = !DILocation(line: 36, column: 8, scope: !14026)
!14042 = !DILocation(line: 36, column: 13, scope: !14026)
!14043 = !DILocation(line: 37, column: 1, scope: !14026)
!14044 = distinct !DISubprogram(name: "esw_vport_change_handler", scope: !3, file: !3, line: 953, type: !1731, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14045 = !DILocalVariable(name: "work", arg: 1, scope: !14044, file: !3, line: 953, type: !1733)
!14046 = !DILocation(line: 953, column: 58, scope: !14044)
!14047 = !DILocalVariable(name: "vport", scope: !14044, file: !3, line: 955, type: !10958)
!14048 = !DILocation(line: 955, column: 21, scope: !14044)
!14049 = !DILocalVariable(name: "__mptr", scope: !14050, file: !3, line: 956, type: !154)
!14050 = distinct !DILexicalBlock(scope: !14044, file: !3, line: 956, column: 3)
!14051 = !DILocation(line: 956, column: 3, scope: !14050)
!14052 = !DILocation(line: 956, column: 3, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14050, file: !3, line: 956, column: 3)
!14054 = !DILocalVariable(name: "esw", scope: !14044, file: !3, line: 957, type: !10791)
!14055 = !DILocation(line: 957, column: 23, scope: !14044)
!14056 = !DILocation(line: 957, column: 29, scope: !14044)
!14057 = !DILocation(line: 957, column: 36, scope: !14044)
!14058 = !DILocation(line: 957, column: 41, scope: !14044)
!14059 = !DILocation(line: 957, column: 46, scope: !14044)
!14060 = !DILocation(line: 959, column: 14, scope: !14044)
!14061 = !DILocation(line: 959, column: 19, scope: !14044)
!14062 = !DILocation(line: 959, column: 2, scope: !14044)
!14063 = !DILocation(line: 960, column: 33, scope: !14044)
!14064 = !DILocation(line: 960, column: 2, scope: !14044)
!14065 = !DILocation(line: 961, column: 16, scope: !14044)
!14066 = !DILocation(line: 961, column: 21, scope: !14044)
!14067 = !DILocation(line: 961, column: 2, scope: !14044)
!14068 = !DILocation(line: 962, column: 1, scope: !14044)
!14069 = distinct !DISubprogram(name: "mlx5_eswitch_cleanup", scope: !3, file: !3, line: 1799, type: !12881, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14070 = !DILocalVariable(name: "esw", arg: 1, scope: !14069, file: !3, line: 1799, type: !10791)
!14071 = !DILocation(line: 1799, column: 48, scope: !14069)
!14072 = !DILocation(line: 1801, column: 7, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14069, file: !3, line: 1801, column: 6)
!14074 = !DILocation(line: 1801, column: 11, scope: !14073)
!14075 = !DILocation(line: 1801, column: 15, scope: !14073)
!14076 = !DILocation(line: 1801, column: 6, scope: !14069)
!14077 = !DILocation(line: 1802, column: 3, scope: !14073)
!14078 = !DILocation(line: 1804, column: 2, scope: !14069)
!14079 = !DILocation(line: 1806, column: 2, scope: !14069)
!14080 = !DILocation(line: 1806, column: 7, scope: !14069)
!14081 = !DILocation(line: 1806, column: 12, scope: !14069)
!14082 = !DILocation(line: 1806, column: 17, scope: !14069)
!14083 = !DILocation(line: 1806, column: 25, scope: !14069)
!14084 = !DILocation(line: 1807, column: 20, scope: !14069)
!14085 = !DILocation(line: 1807, column: 25, scope: !14069)
!14086 = !DILocation(line: 1807, column: 2, scope: !14069)
!14087 = !DILocation(line: 1808, column: 28, scope: !14069)
!14088 = !DILocation(line: 1808, column: 2, scope: !14069)
!14089 = !DILocation(line: 1809, column: 17, scope: !14069)
!14090 = !DILocation(line: 1809, column: 22, scope: !14069)
!14091 = !DILocation(line: 1809, column: 2, scope: !14069)
!14092 = !DILocation(line: 1810, column: 17, scope: !14069)
!14093 = !DILocation(line: 1810, column: 22, scope: !14069)
!14094 = !DILocation(line: 1810, column: 2, scope: !14069)
!14095 = !DILocation(line: 1811, column: 15, scope: !14069)
!14096 = !DILocation(line: 1811, column: 20, scope: !14069)
!14097 = !DILocation(line: 1811, column: 29, scope: !14069)
!14098 = !DILocation(line: 1811, column: 2, scope: !14069)
!14099 = !DILocation(line: 1812, column: 29, scope: !14069)
!14100 = !DILocation(line: 1812, column: 34, scope: !14069)
!14101 = !DILocation(line: 1812, column: 43, scope: !14069)
!14102 = !DILocation(line: 1812, column: 2, scope: !14069)
!14103 = !DILocation(line: 1813, column: 17, scope: !14069)
!14104 = !DILocation(line: 1813, column: 22, scope: !14069)
!14105 = !DILocation(line: 1813, column: 31, scope: !14069)
!14106 = !DILocation(line: 1813, column: 2, scope: !14069)
!14107 = !DILocation(line: 1814, column: 17, scope: !14069)
!14108 = !DILocation(line: 1814, column: 22, scope: !14069)
!14109 = !DILocation(line: 1814, column: 31, scope: !14069)
!14110 = !DILocation(line: 1814, column: 2, scope: !14069)
!14111 = !DILocation(line: 1815, column: 8, scope: !14069)
!14112 = !DILocation(line: 1815, column: 13, scope: !14069)
!14113 = !DILocation(line: 1815, column: 2, scope: !14069)
!14114 = !DILocation(line: 1816, column: 8, scope: !14069)
!14115 = !DILocation(line: 1816, column: 2, scope: !14069)
!14116 = !DILocation(line: 1817, column: 1, scope: !14069)
!14117 = distinct !DISubprogram(name: "mutex_destroy", scope: !554, file: !554, line: 103, type: !14118, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14118 = !DISubroutineType(types: !14119)
!14119 = !{null, !14120}
!14120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!14121 = !DILocalVariable(name: "lock", arg: 1, scope: !14117, file: !554, line: 103, type: !14120)
!14122 = !DILocation(line: 103, column: 48, scope: !14117)
!14123 = !DILocation(line: 103, column: 55, scope: !14117)
!14124 = distinct !DISubprogram(name: "mlx5_eswitch_set_vport_mac", scope: !3, file: !3, line: 1859, type: !14125, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!6, !10791, !739, !4150}
!14127 = !DILocalVariable(name: "esw", arg: 1, scope: !14124, file: !3, line: 1859, type: !10791)
!14128 = !DILocation(line: 1859, column: 53, scope: !14124)
!14129 = !DILocalVariable(name: "vport", arg: 2, scope: !14124, file: !3, line: 1860, type: !739)
!14130 = !DILocation(line: 1860, column: 15, scope: !14124)
!14131 = !DILocalVariable(name: "mac", arg: 3, scope: !14124, file: !3, line: 1860, type: !4150)
!14132 = !DILocation(line: 1860, column: 32, scope: !14124)
!14133 = !DILocalVariable(name: "evport", scope: !14124, file: !3, line: 1862, type: !10958)
!14134 = !DILocation(line: 1862, column: 21, scope: !14124)
!14135 = !DILocation(line: 1862, column: 53, scope: !14124)
!14136 = !DILocation(line: 1862, column: 58, scope: !14124)
!14137 = !DILocation(line: 1862, column: 30, scope: !14124)
!14138 = !DILocalVariable(name: "err", scope: !14124, file: !3, line: 1863, type: !6)
!14139 = !DILocation(line: 1863, column: 6, scope: !14124)
!14140 = !DILocation(line: 1865, column: 13, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 1865, column: 6)
!14142 = !DILocation(line: 1865, column: 6, scope: !14141)
!14143 = !DILocation(line: 1865, column: 6, scope: !14124)
!14144 = !DILocation(line: 1866, column: 18, scope: !14141)
!14145 = !DILocation(line: 1866, column: 10, scope: !14141)
!14146 = !DILocation(line: 1866, column: 3, scope: !14141)
!14147 = !DILocation(line: 1868, column: 14, scope: !14124)
!14148 = !DILocation(line: 1868, column: 19, scope: !14124)
!14149 = !DILocation(line: 1868, column: 2, scope: !14124)
!14150 = !DILocation(line: 1869, column: 38, scope: !14124)
!14151 = !DILocation(line: 1869, column: 43, scope: !14124)
!14152 = !DILocation(line: 1869, column: 51, scope: !14124)
!14153 = !DILocation(line: 1869, column: 8, scope: !14124)
!14154 = !DILocation(line: 1869, column: 6, scope: !14124)
!14155 = !DILocation(line: 1870, column: 16, scope: !14124)
!14156 = !DILocation(line: 1870, column: 21, scope: !14124)
!14157 = !DILocation(line: 1870, column: 2, scope: !14124)
!14158 = !DILocation(line: 1871, column: 9, scope: !14124)
!14159 = !DILocation(line: 1871, column: 2, scope: !14124)
!14160 = !DILocation(line: 1872, column: 1, scope: !14124)
!14161 = distinct !DISubprogram(name: "IS_ERR", scope: !12347, file: !12347, line: 34, type: !14162, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14162 = !DISubroutineType(types: !14163)
!14163 = !{!299, !2449}
!14164 = !DILocalVariable(name: "ptr", arg: 1, scope: !14161, file: !12347, line: 34, type: !2449)
!14165 = !DILocation(line: 34, column: 60, scope: !14161)
!14166 = !DILocation(line: 36, column: 9, scope: !14161)
!14167 = !DILocation(line: 36, column: 2, scope: !14161)
!14168 = distinct !DISubprogram(name: "PTR_ERR", scope: !12347, file: !12347, line: 29, type: !14169, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14169 = !DISubroutineType(types: !14170)
!14170 = !{!115, !2449}
!14171 = !DILocalVariable(name: "ptr", arg: 1, scope: !14168, file: !12347, line: 29, type: !2449)
!14172 = !DILocation(line: 29, column: 61, scope: !14168)
!14173 = !DILocation(line: 31, column: 16, scope: !14168)
!14174 = !DILocation(line: 31, column: 9, scope: !14168)
!14175 = !DILocation(line: 31, column: 2, scope: !14168)
!14176 = distinct !DISubprogram(name: "mlx5_esw_set_vport_mac_locked", scope: !3, file: !3, line: 1821, type: !14177, scopeLine: 1823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{!6, !10791, !10958, !4150}
!14179 = !DILocalVariable(name: "pscr_ret__", scope: !14180, file: !14181, line: 15, type: !1262)
!14180 = distinct !DILexicalBlock(scope: !14182, file: !14181, line: 15, column: 9)
!14181 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!14182 = distinct !DISubprogram(name: "get_current", scope: !14181, file: !14181, line: 13, type: !14183, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{!1262}
!14185 = !DILocation(line: 15, column: 9, scope: !14180, inlinedAt: !14186)
!14186 = distinct !DILocation(line: 1847, column: 3, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 1846, column: 6)
!14188 = !DILocalVariable(name: "__vpp_verify", scope: !14189, file: !14181, line: 15, type: !2449)
!14189 = distinct !DILexicalBlock(scope: !14180, file: !14181, line: 15, column: 9)
!14190 = !DILocation(line: 15, column: 9, scope: !14189, inlinedAt: !14186)
!14191 = !DILocalVariable(name: "pfo_val__", scope: !14192, file: !14181, line: 15, type: !230)
!14192 = distinct !DILexicalBlock(scope: !14180, file: !14181, line: 15, column: 9)
!14193 = !DILocation(line: 15, column: 9, scope: !14192, inlinedAt: !14186)
!14194 = !DILocation(line: 15, column: 9, scope: !14180, inlinedAt: !14195)
!14195 = distinct !DILocation(line: 1838, column: 3, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14197, file: !3, line: 1837, column: 11)
!14197 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 1837, column: 6)
!14198 = !DILocation(line: 15, column: 9, scope: !14189, inlinedAt: !14195)
!14199 = !DILocation(line: 15, column: 9, scope: !14192, inlinedAt: !14195)
!14200 = !DILocation(line: 15, column: 9, scope: !14180, inlinedAt: !14201)
!14201 = distinct !DILocation(line: 1832, column: 3, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 1831, column: 6)
!14203 = !DILocation(line: 15, column: 9, scope: !14189, inlinedAt: !14201)
!14204 = !DILocation(line: 15, column: 9, scope: !14192, inlinedAt: !14201)
!14205 = !DILocalVariable(name: "esw", arg: 1, scope: !14176, file: !3, line: 1821, type: !10791)
!14206 = !DILocation(line: 1821, column: 52, scope: !14176)
!14207 = !DILocalVariable(name: "evport", arg: 2, scope: !14176, file: !3, line: 1822, type: !10958)
!14208 = !DILocation(line: 1822, column: 29, scope: !14176)
!14209 = !DILocalVariable(name: "mac", arg: 3, scope: !14176, file: !3, line: 1822, type: !4150)
!14210 = !DILocation(line: 1822, column: 47, scope: !14176)
!14211 = !DILocalVariable(name: "vport_num", scope: !14176, file: !3, line: 1824, type: !739)
!14212 = !DILocation(line: 1824, column: 6, scope: !14176)
!14213 = !DILocation(line: 1824, column: 18, scope: !14176)
!14214 = !DILocation(line: 1824, column: 26, scope: !14176)
!14215 = !DILocalVariable(name: "node_guid", scope: !14176, file: !3, line: 1825, type: !230)
!14216 = !DILocation(line: 1825, column: 6, scope: !14176)
!14217 = !DILocalVariable(name: "err", scope: !14176, file: !3, line: 1826, type: !6)
!14218 = !DILocation(line: 1826, column: 6, scope: !14176)
!14219 = !DILocation(line: 1828, column: 30, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 1828, column: 6)
!14221 = !DILocation(line: 1828, column: 6, scope: !14220)
!14222 = !DILocation(line: 1828, column: 6, scope: !14176)
!14223 = !DILocation(line: 1829, column: 3, scope: !14220)
!14224 = !DILocation(line: 1831, column: 6, scope: !14202)
!14225 = !DILocation(line: 1831, column: 14, scope: !14202)
!14226 = !DILocation(line: 1831, column: 19, scope: !14202)
!14227 = !DILocation(line: 1831, column: 28, scope: !14202)
!14228 = !DILocation(line: 1831, column: 52, scope: !14202)
!14229 = !DILocation(line: 1831, column: 32, scope: !14202)
!14230 = !DILocation(line: 1831, column: 6, scope: !14176)
!14231 = !DILocation(line: 1832, column: 3, scope: !14202)
!14232 = !{i32 -2146124366}
!14233 = !DILocation(line: 1836, column: 42, scope: !14176)
!14234 = !DILocation(line: 1836, column: 47, scope: !14176)
!14235 = !DILocation(line: 1836, column: 52, scope: !14176)
!14236 = !DILocation(line: 1836, column: 63, scope: !14176)
!14237 = !DILocation(line: 1836, column: 8, scope: !14176)
!14238 = !DILocation(line: 1836, column: 6, scope: !14176)
!14239 = !DILocation(line: 1837, column: 6, scope: !14197)
!14240 = !DILocation(line: 1837, column: 6, scope: !14176)
!14241 = !DILocation(line: 1838, column: 3, scope: !14196)
!14242 = !DILocation(line: 1841, column: 10, scope: !14196)
!14243 = !DILocation(line: 1841, column: 3, scope: !14196)
!14244 = !DILocation(line: 1844, column: 37, scope: !14176)
!14245 = !DILocation(line: 1844, column: 2, scope: !14176)
!14246 = !DILocation(line: 1845, column: 40, scope: !14176)
!14247 = !DILocation(line: 1845, column: 45, scope: !14176)
!14248 = !DILocation(line: 1845, column: 50, scope: !14176)
!14249 = !DILocation(line: 1845, column: 61, scope: !14176)
!14250 = !DILocation(line: 1845, column: 8, scope: !14176)
!14251 = !DILocation(line: 1845, column: 6, scope: !14176)
!14252 = !DILocation(line: 1846, column: 6, scope: !14187)
!14253 = !DILocation(line: 1846, column: 6, scope: !14176)
!14254 = !DILocation(line: 1847, column: 3, scope: !14187)
!14255 = !DILocation(line: 1851, column: 18, scope: !14176)
!14256 = !DILocation(line: 1851, column: 26, scope: !14176)
!14257 = !DILocation(line: 1851, column: 31, scope: !14176)
!14258 = !DILocation(line: 1851, column: 36, scope: !14176)
!14259 = !DILocation(line: 1851, column: 2, scope: !14176)
!14260 = !DILocation(line: 1852, column: 27, scope: !14176)
!14261 = !DILocation(line: 1852, column: 2, scope: !14176)
!14262 = !DILocation(line: 1852, column: 10, scope: !14176)
!14263 = !DILocation(line: 1852, column: 15, scope: !14176)
!14264 = !DILocation(line: 1852, column: 25, scope: !14176)
!14265 = !DILocation(line: 1853, column: 6, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 1853, column: 6)
!14267 = !DILocation(line: 1853, column: 14, scope: !14266)
!14268 = !DILocation(line: 1853, column: 22, scope: !14266)
!14269 = !DILocation(line: 1853, column: 25, scope: !14266)
!14270 = !DILocation(line: 1853, column: 30, scope: !14266)
!14271 = !DILocation(line: 1853, column: 35, scope: !14266)
!14272 = !DILocation(line: 1853, column: 6, scope: !14176)
!14273 = !DILocation(line: 1854, column: 36, scope: !14266)
!14274 = !DILocation(line: 1854, column: 41, scope: !14266)
!14275 = !DILocation(line: 1854, column: 9, scope: !14266)
!14276 = !DILocation(line: 1854, column: 7, scope: !14266)
!14277 = !DILocation(line: 1854, column: 3, scope: !14266)
!14278 = !DILocation(line: 1856, column: 9, scope: !14176)
!14279 = !DILocation(line: 1856, column: 2, scope: !14176)
!14280 = !DILocation(line: 1857, column: 1, scope: !14176)
!14281 = !DILocalVariable(name: "devlink", arg: 1, scope: !12256, file: !3, line: 1881, type: !3875)
!14282 = !DILocation(line: 1881, column: 60, scope: !12256)
!14283 = !DILocalVariable(name: "port", arg: 2, scope: !12256, file: !3, line: 1882, type: !3867)
!14284 = !DILocation(line: 1882, column: 30, scope: !12256)
!14285 = !DILocalVariable(name: "hw_addr", arg: 3, scope: !12256, file: !3, line: 1883, type: !2742)
!14286 = !DILocation(line: 1883, column: 13, scope: !12256)
!14287 = !DILocalVariable(name: "hw_addr_len", arg: 4, scope: !12256, file: !3, line: 1883, type: !535)
!14288 = !DILocation(line: 1883, column: 27, scope: !12256)
!14289 = !DILocalVariable(name: "extack", arg: 5, scope: !12256, file: !3, line: 1884, type: !2491)
!14290 = !DILocation(line: 1884, column: 33, scope: !12256)
!14291 = !DILocalVariable(name: "esw", scope: !12256, file: !3, line: 1886, type: !10791)
!14292 = !DILocation(line: 1886, column: 23, scope: !12256)
!14293 = !DILocalVariable(name: "vport", scope: !12256, file: !3, line: 1887, type: !10958)
!14294 = !DILocation(line: 1887, column: 21, scope: !12256)
!14295 = !DILocalVariable(name: "err", scope: !12256, file: !3, line: 1888, type: !6)
!14296 = !DILocation(line: 1888, column: 6, scope: !12256)
!14297 = !DILocalVariable(name: "vport_num", scope: !12256, file: !3, line: 1889, type: !739)
!14298 = !DILocation(line: 1889, column: 6, scope: !12256)
!14299 = !DILocation(line: 1891, column: 33, scope: !12256)
!14300 = !DILocation(line: 1891, column: 8, scope: !12256)
!14301 = !DILocation(line: 1891, column: 6, scope: !12256)
!14302 = !DILocation(line: 1892, column: 13, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 1892, column: 6)
!14304 = !DILocation(line: 1892, column: 6, scope: !14303)
!14305 = !DILocation(line: 1892, column: 6, scope: !12256)
!14306 = !DILocation(line: 1893, column: 18, scope: !14303)
!14307 = !DILocation(line: 1893, column: 10, scope: !14303)
!14308 = !DILocation(line: 1893, column: 3, scope: !14303)
!14309 = !DILocation(line: 1895, column: 55, scope: !12256)
!14310 = !DILocation(line: 1895, column: 61, scope: !12256)
!14311 = !DILocation(line: 1895, column: 14, scope: !12256)
!14312 = !DILocation(line: 1895, column: 12, scope: !12256)
!14313 = !DILocation(line: 1896, column: 34, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 1896, column: 6)
!14315 = !DILocation(line: 1896, column: 39, scope: !14314)
!14316 = !DILocation(line: 1896, column: 7, scope: !14314)
!14317 = !DILocation(line: 1896, column: 6, scope: !12256)
!14318 = !DILocation(line: 1897, column: 3, scope: !14314)
!14319 = !DILocation(line: 1899, column: 33, scope: !12256)
!14320 = !DILocation(line: 1899, column: 38, scope: !12256)
!14321 = !DILocation(line: 1899, column: 10, scope: !12256)
!14322 = !DILocation(line: 1899, column: 8, scope: !12256)
!14323 = !DILocation(line: 1900, column: 13, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 1900, column: 6)
!14325 = !DILocation(line: 1900, column: 6, scope: !14324)
!14326 = !DILocation(line: 1900, column: 6, scope: !12256)
!14327 = !DILocation(line: 1901, column: 3, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14324, file: !3, line: 1900, column: 21)
!14329 = !DILocalVariable(name: "__extack", scope: !14330, file: !3, line: 1901, type: !2491)
!14330 = distinct !DILexicalBlock(scope: !14328, file: !3, line: 1901, column: 3)
!14331 = !DILocation(line: 1901, column: 3, scope: !14330)
!14332 = !DILocation(line: 1901, column: 3, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 1901, column: 3)
!14334 = !DILocation(line: 1902, column: 18, scope: !14328)
!14335 = !DILocation(line: 1902, column: 10, scope: !14328)
!14336 = !DILocation(line: 1902, column: 3, scope: !14328)
!14337 = !DILocation(line: 1905, column: 14, scope: !12256)
!14338 = !DILocation(line: 1905, column: 19, scope: !12256)
!14339 = !DILocation(line: 1905, column: 2, scope: !12256)
!14340 = !DILocation(line: 1906, column: 6, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 1906, column: 6)
!14342 = !DILocation(line: 1906, column: 13, scope: !14341)
!14343 = !DILocation(line: 1906, column: 6, scope: !12256)
!14344 = !DILocation(line: 1907, column: 19, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 1906, column: 22)
!14346 = !DILocation(line: 1907, column: 28, scope: !14345)
!14347 = !DILocation(line: 1907, column: 35, scope: !14345)
!14348 = !DILocation(line: 1907, column: 40, scope: !14345)
!14349 = !DILocation(line: 1907, column: 3, scope: !14345)
!14350 = !DILocation(line: 1908, column: 4, scope: !14345)
!14351 = !DILocation(line: 1908, column: 16, scope: !14345)
!14352 = !DILocation(line: 1909, column: 7, scope: !14345)
!14353 = !DILocation(line: 1910, column: 2, scope: !14345)
!14354 = !DILocation(line: 1911, column: 16, scope: !12256)
!14355 = !DILocation(line: 1911, column: 21, scope: !12256)
!14356 = !DILocation(line: 1911, column: 2, scope: !12256)
!14357 = !DILocation(line: 1912, column: 9, scope: !12256)
!14358 = !DILocation(line: 1912, column: 2, scope: !12256)
!14359 = !DILocation(line: 1913, column: 1, scope: !12256)
!14360 = distinct !DISubprogram(name: "mlx5_esw_devlink_port_index_to_vport_num", scope: !10793, file: !10793, line: 554, type: !14361, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{!739, !194}
!14363 = !DILocalVariable(name: "dl_port_index", arg: 1, scope: !14360, file: !10793, line: 554, type: !194)
!14364 = !DILocation(line: 554, column: 55, scope: !14360)
!14365 = !DILocation(line: 556, column: 9, scope: !14360)
!14366 = !DILocation(line: 556, column: 23, scope: !14360)
!14367 = !DILocation(line: 556, column: 2, scope: !14360)
!14368 = distinct !DISubprogram(name: "is_port_function_supported", scope: !3, file: !3, line: 1875, type: !14369, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14369 = !DISubroutineType(types: !14370)
!14370 = !{!299, !14371, !739}
!14371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14372, size: 64)
!14372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10792)
!14373 = !DILocalVariable(name: "esw", arg: 1, scope: !14368, file: !3, line: 1875, type: !14371)
!14374 = !DILocation(line: 1875, column: 55, scope: !14368)
!14375 = !DILocalVariable(name: "vport_num", arg: 2, scope: !14368, file: !3, line: 1875, type: !739)
!14376 = !DILocation(line: 1875, column: 64, scope: !14368)
!14377 = !DILocation(line: 1877, column: 9, scope: !14368)
!14378 = !DILocation(line: 1877, column: 19, scope: !14368)
!14379 = !DILocation(line: 1877, column: 36, scope: !14368)
!14380 = !DILocation(line: 1878, column: 34, scope: !14368)
!14381 = !DILocation(line: 1878, column: 39, scope: !14368)
!14382 = !DILocation(line: 1878, column: 9, scope: !14368)
!14383 = !DILocation(line: 1877, column: 2, scope: !14368)
!14384 = distinct !DISubprogram(name: "ether_addr_copy", scope: !14385, file: !14385, line: 287, type: !14386, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14385 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!14386 = !DISubroutineType(types: !14387)
!14387 = !{null, !2742, !4150}
!14388 = !DILocalVariable(name: "dst", arg: 1, scope: !14384, file: !14385, line: 287, type: !2742)
!14389 = !DILocation(line: 287, column: 40, scope: !14384)
!14390 = !DILocalVariable(name: "src", arg: 2, scope: !14384, file: !14385, line: 287, type: !4150)
!14391 = !DILocation(line: 287, column: 55, scope: !14384)
!14392 = !DILocation(line: 290, column: 30, scope: !14384)
!14393 = !DILocation(line: 290, column: 16, scope: !14384)
!14394 = !DILocation(line: 290, column: 10, scope: !14384)
!14395 = !DILocation(line: 290, column: 2, scope: !14384)
!14396 = !DILocation(line: 290, column: 14, scope: !14384)
!14397 = !DILocation(line: 291, column: 37, scope: !14384)
!14398 = !DILocation(line: 291, column: 41, scope: !14384)
!14399 = !DILocation(line: 291, column: 22, scope: !14384)
!14400 = !DILocation(line: 291, column: 11, scope: !14384)
!14401 = !DILocation(line: 291, column: 15, scope: !14384)
!14402 = !DILocation(line: 291, column: 2, scope: !14384)
!14403 = !DILocation(line: 291, column: 20, scope: !14384)
!14404 = !DILocation(line: 300, column: 1, scope: !14384)
!14405 = !DILocalVariable(name: "devlink", arg: 1, scope: !12260, file: !3, line: 1915, type: !3875)
!14406 = !DILocation(line: 1915, column: 60, scope: !12260)
!14407 = !DILocalVariable(name: "port", arg: 2, scope: !12260, file: !3, line: 1916, type: !3867)
!14408 = !DILocation(line: 1916, column: 30, scope: !12260)
!14409 = !DILocalVariable(name: "hw_addr", arg: 3, scope: !12260, file: !3, line: 1917, type: !4150)
!14410 = !DILocation(line: 1917, column: 19, scope: !12260)
!14411 = !DILocalVariable(name: "hw_addr_len", arg: 4, scope: !12260, file: !3, line: 1917, type: !6)
!14412 = !DILocation(line: 1917, column: 32, scope: !12260)
!14413 = !DILocalVariable(name: "extack", arg: 5, scope: !12260, file: !3, line: 1918, type: !2491)
!14414 = !DILocation(line: 1918, column: 33, scope: !12260)
!14415 = !DILocalVariable(name: "esw", scope: !12260, file: !3, line: 1920, type: !10791)
!14416 = !DILocation(line: 1920, column: 23, scope: !12260)
!14417 = !DILocalVariable(name: "vport", scope: !12260, file: !3, line: 1921, type: !10958)
!14418 = !DILocation(line: 1921, column: 21, scope: !12260)
!14419 = !DILocalVariable(name: "err", scope: !12260, file: !3, line: 1922, type: !6)
!14420 = !DILocation(line: 1922, column: 6, scope: !12260)
!14421 = !DILocalVariable(name: "vport_num", scope: !12260, file: !3, line: 1923, type: !739)
!14422 = !DILocation(line: 1923, column: 6, scope: !12260)
!14423 = !DILocation(line: 1925, column: 33, scope: !12260)
!14424 = !DILocation(line: 1925, column: 8, scope: !12260)
!14425 = !DILocation(line: 1925, column: 6, scope: !12260)
!14426 = !DILocation(line: 1926, column: 13, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 1926, column: 6)
!14428 = !DILocation(line: 1926, column: 6, scope: !14427)
!14429 = !DILocation(line: 1926, column: 6, scope: !12260)
!14430 = !DILocation(line: 1927, column: 3, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 1926, column: 19)
!14432 = !DILocalVariable(name: "__extack", scope: !14433, file: !3, line: 1927, type: !2491)
!14433 = distinct !DILexicalBlock(scope: !14431, file: !3, line: 1927, column: 3)
!14434 = !DILocation(line: 1927, column: 3, scope: !14433)
!14435 = !DILocation(line: 1927, column: 3, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 1927, column: 3)
!14437 = !DILocation(line: 1928, column: 18, scope: !14431)
!14438 = !DILocation(line: 1928, column: 10, scope: !14431)
!14439 = !DILocation(line: 1928, column: 3, scope: !14431)
!14440 = !DILocation(line: 1931, column: 55, scope: !12260)
!14441 = !DILocation(line: 1931, column: 61, scope: !12260)
!14442 = !DILocation(line: 1931, column: 14, scope: !12260)
!14443 = !DILocation(line: 1931, column: 12, scope: !12260)
!14444 = !DILocation(line: 1932, column: 34, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 1932, column: 6)
!14446 = !DILocation(line: 1932, column: 39, scope: !14445)
!14447 = !DILocation(line: 1932, column: 7, scope: !14445)
!14448 = !DILocation(line: 1932, column: 6, scope: !12260)
!14449 = !DILocation(line: 1933, column: 3, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14445, file: !3, line: 1932, column: 51)
!14451 = !DILocalVariable(name: "__extack", scope: !14452, file: !3, line: 1933, type: !2491)
!14452 = distinct !DILexicalBlock(scope: !14450, file: !3, line: 1933, column: 3)
!14453 = !DILocation(line: 1933, column: 3, scope: !14452)
!14454 = !DILocation(line: 1933, column: 3, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14452, file: !3, line: 1933, column: 3)
!14456 = !DILocation(line: 1934, column: 3, scope: !14450)
!14457 = !DILocation(line: 1936, column: 33, scope: !12260)
!14458 = !DILocation(line: 1936, column: 38, scope: !12260)
!14459 = !DILocation(line: 1936, column: 10, scope: !12260)
!14460 = !DILocation(line: 1936, column: 8, scope: !12260)
!14461 = !DILocation(line: 1937, column: 13, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 1937, column: 6)
!14463 = !DILocation(line: 1937, column: 6, scope: !14462)
!14464 = !DILocation(line: 1937, column: 6, scope: !12260)
!14465 = !DILocation(line: 1938, column: 3, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14462, file: !3, line: 1937, column: 21)
!14467 = !DILocalVariable(name: "__extack", scope: !14468, file: !3, line: 1938, type: !2491)
!14468 = distinct !DILexicalBlock(scope: !14466, file: !3, line: 1938, column: 3)
!14469 = !DILocation(line: 1938, column: 3, scope: !14468)
!14470 = !DILocation(line: 1938, column: 3, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14468, file: !3, line: 1938, column: 3)
!14472 = !DILocation(line: 1939, column: 18, scope: !14466)
!14473 = !DILocation(line: 1939, column: 10, scope: !14466)
!14474 = !DILocation(line: 1939, column: 3, scope: !14466)
!14475 = !DILocation(line: 1942, column: 14, scope: !12260)
!14476 = !DILocation(line: 1942, column: 19, scope: !12260)
!14477 = !DILocation(line: 1942, column: 2, scope: !12260)
!14478 = !DILocation(line: 1943, column: 6, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 1943, column: 6)
!14480 = !DILocation(line: 1943, column: 13, scope: !14479)
!14481 = !DILocation(line: 1943, column: 6, scope: !12260)
!14482 = !DILocation(line: 1944, column: 39, scope: !14479)
!14483 = !DILocation(line: 1944, column: 44, scope: !14479)
!14484 = !DILocation(line: 1944, column: 51, scope: !14479)
!14485 = !DILocation(line: 1944, column: 9, scope: !14479)
!14486 = !DILocation(line: 1944, column: 7, scope: !14479)
!14487 = !DILocation(line: 1944, column: 3, scope: !14479)
!14488 = !DILocation(line: 1946, column: 3, scope: !14479)
!14489 = !DILocalVariable(name: "__extack", scope: !14490, file: !3, line: 1946, type: !2491)
!14490 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 1946, column: 3)
!14491 = !DILocation(line: 1946, column: 3, scope: !14490)
!14492 = !DILocation(line: 1946, column: 3, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !14490, file: !3, line: 1946, column: 3)
!14494 = !DILocation(line: 1947, column: 16, scope: !12260)
!14495 = !DILocation(line: 1947, column: 21, scope: !12260)
!14496 = !DILocation(line: 1947, column: 2, scope: !12260)
!14497 = !DILocation(line: 1948, column: 9, scope: !12260)
!14498 = !DILocation(line: 1948, column: 2, scope: !12260)
!14499 = !DILocation(line: 1949, column: 1, scope: !12260)
!14500 = distinct !DISubprogram(name: "mlx5_eswitch_set_vport_state", scope: !3, file: !3, line: 1951, type: !14501, scopeLine: 1953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14501 = !DISubroutineType(types: !14502)
!14502 = !{!6, !10791, !739, !6}
!14503 = !DILocation(line: 15, column: 9, scope: !14180, inlinedAt: !14504)
!14504 = distinct !DILocation(line: 1973, column: 3, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14506, file: !3, line: 1972, column: 11)
!14506 = distinct !DILexicalBlock(scope: !14500, file: !3, line: 1972, column: 6)
!14507 = !DILocation(line: 15, column: 9, scope: !14189, inlinedAt: !14504)
!14508 = !DILocation(line: 15, column: 9, scope: !14192, inlinedAt: !14504)
!14509 = !DILocalVariable(name: "esw", arg: 1, scope: !14500, file: !3, line: 1951, type: !10791)
!14510 = !DILocation(line: 1951, column: 55, scope: !14500)
!14511 = !DILocalVariable(name: "vport", arg: 2, scope: !14500, file: !3, line: 1952, type: !739)
!14512 = !DILocation(line: 1952, column: 10, scope: !14500)
!14513 = !DILocalVariable(name: "link_state", arg: 3, scope: !14500, file: !3, line: 1952, type: !6)
!14514 = !DILocation(line: 1952, column: 21, scope: !14500)
!14515 = !DILocalVariable(name: "evport", scope: !14500, file: !3, line: 1954, type: !10958)
!14516 = !DILocation(line: 1954, column: 21, scope: !14500)
!14517 = !DILocation(line: 1954, column: 53, scope: !14500)
!14518 = !DILocation(line: 1954, column: 58, scope: !14500)
!14519 = !DILocation(line: 1954, column: 30, scope: !14500)
!14520 = !DILocalVariable(name: "opmod", scope: !14500, file: !3, line: 1955, type: !6)
!14521 = !DILocation(line: 1955, column: 6, scope: !14500)
!14522 = !DILocalVariable(name: "other_vport", scope: !14500, file: !3, line: 1956, type: !6)
!14523 = !DILocation(line: 1956, column: 6, scope: !14500)
!14524 = !DILocalVariable(name: "err", scope: !14500, file: !3, line: 1957, type: !6)
!14525 = !DILocation(line: 1957, column: 6, scope: !14500)
!14526 = !DILocation(line: 1959, column: 7, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14500, file: !3, line: 1959, column: 6)
!14528 = !DILocation(line: 1959, column: 6, scope: !14500)
!14529 = !DILocation(line: 1960, column: 3, scope: !14527)
!14530 = !DILocation(line: 1961, column: 13, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14500, file: !3, line: 1961, column: 6)
!14532 = !DILocation(line: 1961, column: 6, scope: !14531)
!14533 = !DILocation(line: 1961, column: 6, scope: !14500)
!14534 = !DILocation(line: 1962, column: 18, scope: !14531)
!14535 = !DILocation(line: 1962, column: 10, scope: !14531)
!14536 = !DILocation(line: 1962, column: 3, scope: !14531)
!14537 = !DILocation(line: 1964, column: 6, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14500, file: !3, line: 1964, column: 6)
!14539 = !DILocation(line: 1964, column: 12, scope: !14538)
!14540 = !DILocation(line: 1964, column: 6, scope: !14500)
!14541 = !DILocation(line: 1965, column: 9, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14538, file: !3, line: 1964, column: 34)
!14543 = !DILocation(line: 1966, column: 15, scope: !14542)
!14544 = !DILocation(line: 1967, column: 9, scope: !14542)
!14545 = !DILocation(line: 1968, column: 2, scope: !14542)
!14546 = !DILocation(line: 1969, column: 14, scope: !14500)
!14547 = !DILocation(line: 1969, column: 19, scope: !14500)
!14548 = !DILocation(line: 1969, column: 2, scope: !14500)
!14549 = !DILocation(line: 1971, column: 38, scope: !14500)
!14550 = !DILocation(line: 1971, column: 43, scope: !14500)
!14551 = !DILocation(line: 1971, column: 48, scope: !14500)
!14552 = !DILocation(line: 1971, column: 55, scope: !14500)
!14553 = !DILocation(line: 1971, column: 62, scope: !14500)
!14554 = !DILocation(line: 1971, column: 75, scope: !14500)
!14555 = !DILocation(line: 1971, column: 8, scope: !14500)
!14556 = !DILocation(line: 1971, column: 6, scope: !14500)
!14557 = !DILocation(line: 1972, column: 6, scope: !14506)
!14558 = !DILocation(line: 1972, column: 6, scope: !14500)
!14559 = !DILocation(line: 1973, column: 3, scope: !14505)
!14560 = !DILocation(line: 1975, column: 3, scope: !14505)
!14561 = !DILocation(line: 1978, column: 28, scope: !14500)
!14562 = !DILocation(line: 1978, column: 2, scope: !14500)
!14563 = !DILocation(line: 1978, column: 10, scope: !14500)
!14564 = !DILocation(line: 1978, column: 15, scope: !14500)
!14565 = !DILocation(line: 1978, column: 26, scope: !14500)
!14566 = !DILabel(scope: !14500, name: "unlock", file: !3, line: 1980)
!14567 = !DILocation(line: 1980, column: 1, scope: !14500)
!14568 = !DILocation(line: 1981, column: 16, scope: !14500)
!14569 = !DILocation(line: 1981, column: 21, scope: !14500)
!14570 = !DILocation(line: 1981, column: 2, scope: !14500)
!14571 = !DILocation(line: 1982, column: 9, scope: !14500)
!14572 = !DILocation(line: 1982, column: 2, scope: !14500)
!14573 = !DILocation(line: 1983, column: 1, scope: !14500)
!14574 = distinct !DISubprogram(name: "mlx5_eswitch_get_vport_config", scope: !3, file: !3, line: 1985, type: !14575, scopeLine: 1987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14575 = !DISubroutineType(types: !14576)
!14576 = !{!6, !10791, !739, !2760}
!14577 = !DILocalVariable(name: "esw", arg: 1, scope: !14574, file: !3, line: 1985, type: !10791)
!14578 = !DILocation(line: 1985, column: 56, scope: !14574)
!14579 = !DILocalVariable(name: "vport", arg: 2, scope: !14574, file: !3, line: 1986, type: !739)
!14580 = !DILocation(line: 1986, column: 11, scope: !14574)
!14581 = !DILocalVariable(name: "ivi", arg: 3, scope: !14574, file: !3, line: 1986, type: !2760)
!14582 = !DILocation(line: 1986, column: 39, scope: !14574)
!14583 = !DILocalVariable(name: "evport", scope: !14574, file: !3, line: 1988, type: !10958)
!14584 = !DILocation(line: 1988, column: 21, scope: !14574)
!14585 = !DILocation(line: 1988, column: 53, scope: !14574)
!14586 = !DILocation(line: 1988, column: 58, scope: !14574)
!14587 = !DILocation(line: 1988, column: 30, scope: !14574)
!14588 = !DILocation(line: 1990, column: 13, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14574, file: !3, line: 1990, column: 6)
!14590 = !DILocation(line: 1990, column: 6, scope: !14589)
!14591 = !DILocation(line: 1990, column: 6, scope: !14574)
!14592 = !DILocation(line: 1991, column: 18, scope: !14589)
!14593 = !DILocation(line: 1991, column: 10, scope: !14589)
!14594 = !DILocation(line: 1991, column: 3, scope: !14589)
!14595 = !DILocation(line: 1993, column: 9, scope: !14574)
!14596 = !DILocation(line: 1993, column: 2, scope: !14574)
!14597 = !DILocation(line: 1994, column: 12, scope: !14574)
!14598 = !DILocation(line: 1994, column: 18, scope: !14574)
!14599 = !DILocation(line: 1994, column: 2, scope: !14574)
!14600 = !DILocation(line: 1994, column: 7, scope: !14574)
!14601 = !DILocation(line: 1994, column: 10, scope: !14574)
!14602 = !DILocation(line: 1996, column: 14, scope: !14574)
!14603 = !DILocation(line: 1996, column: 19, scope: !14574)
!14604 = !DILocation(line: 1996, column: 2, scope: !14574)
!14605 = !DILocation(line: 1997, column: 18, scope: !14574)
!14606 = !DILocation(line: 1997, column: 23, scope: !14574)
!14607 = !DILocation(line: 1997, column: 28, scope: !14574)
!14608 = !DILocation(line: 1997, column: 36, scope: !14574)
!14609 = !DILocation(line: 1997, column: 41, scope: !14574)
!14610 = !DILocation(line: 1997, column: 2, scope: !14574)
!14611 = !DILocation(line: 1998, column: 19, scope: !14574)
!14612 = !DILocation(line: 1998, column: 27, scope: !14574)
!14613 = !DILocation(line: 1998, column: 32, scope: !14574)
!14614 = !DILocation(line: 1998, column: 2, scope: !14574)
!14615 = !DILocation(line: 1998, column: 7, scope: !14574)
!14616 = !DILocation(line: 1998, column: 17, scope: !14574)
!14617 = !DILocation(line: 1999, column: 14, scope: !14574)
!14618 = !DILocation(line: 1999, column: 22, scope: !14574)
!14619 = !DILocation(line: 1999, column: 27, scope: !14574)
!14620 = !DILocation(line: 1999, column: 2, scope: !14574)
!14621 = !DILocation(line: 1999, column: 7, scope: !14574)
!14622 = !DILocation(line: 1999, column: 12, scope: !14574)
!14623 = !DILocation(line: 2000, column: 13, scope: !14574)
!14624 = !DILocation(line: 2000, column: 21, scope: !14574)
!14625 = !DILocation(line: 2000, column: 26, scope: !14574)
!14626 = !DILocation(line: 2000, column: 2, scope: !14574)
!14627 = !DILocation(line: 2000, column: 7, scope: !14574)
!14628 = !DILocation(line: 2000, column: 11, scope: !14574)
!14629 = !DILocation(line: 2001, column: 18, scope: !14574)
!14630 = !DILocation(line: 2001, column: 26, scope: !14574)
!14631 = !DILocation(line: 2001, column: 31, scope: !14574)
!14632 = !DILocation(line: 2001, column: 2, scope: !14574)
!14633 = !DILocation(line: 2001, column: 7, scope: !14574)
!14634 = !DILocation(line: 2001, column: 16, scope: !14574)
!14635 = !DILocation(line: 2002, column: 17, scope: !14574)
!14636 = !DILocation(line: 2002, column: 25, scope: !14574)
!14637 = !DILocation(line: 2002, column: 30, scope: !14574)
!14638 = !DILocation(line: 2002, column: 2, scope: !14574)
!14639 = !DILocation(line: 2002, column: 7, scope: !14574)
!14640 = !DILocation(line: 2002, column: 15, scope: !14574)
!14641 = !DILocation(line: 2003, column: 21, scope: !14574)
!14642 = !DILocation(line: 2003, column: 29, scope: !14574)
!14643 = !DILocation(line: 2003, column: 34, scope: !14574)
!14644 = !DILocation(line: 2003, column: 2, scope: !14574)
!14645 = !DILocation(line: 2003, column: 7, scope: !14574)
!14646 = !DILocation(line: 2003, column: 19, scope: !14574)
!14647 = !DILocation(line: 2004, column: 21, scope: !14574)
!14648 = !DILocation(line: 2004, column: 29, scope: !14574)
!14649 = !DILocation(line: 2004, column: 34, scope: !14574)
!14650 = !DILocation(line: 2004, column: 2, scope: !14574)
!14651 = !DILocation(line: 2004, column: 7, scope: !14574)
!14652 = !DILocation(line: 2004, column: 19, scope: !14574)
!14653 = !DILocation(line: 2005, column: 16, scope: !14574)
!14654 = !DILocation(line: 2005, column: 21, scope: !14574)
!14655 = !DILocation(line: 2005, column: 2, scope: !14574)
!14656 = !DILocation(line: 2007, column: 2, scope: !14574)
!14657 = !DILocation(line: 2008, column: 1, scope: !14574)
!14658 = distinct !DISubprogram(name: "__mlx5_eswitch_set_vport_vlan", scope: !3, file: !3, line: 2010, type: !14659, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!6, !10791, !739, !739, !1398, !1398}
!14661 = !DILocalVariable(name: "esw", arg: 1, scope: !14658, file: !3, line: 2010, type: !10791)
!14662 = !DILocation(line: 2010, column: 56, scope: !14658)
!14663 = !DILocalVariable(name: "vport", arg: 2, scope: !14658, file: !3, line: 2011, type: !739)
!14664 = !DILocation(line: 2011, column: 11, scope: !14658)
!14665 = !DILocalVariable(name: "vlan", arg: 3, scope: !14658, file: !3, line: 2011, type: !739)
!14666 = !DILocation(line: 2011, column: 22, scope: !14658)
!14667 = !DILocalVariable(name: "qos", arg: 4, scope: !14658, file: !3, line: 2011, type: !1398)
!14668 = !DILocation(line: 2011, column: 31, scope: !14658)
!14669 = !DILocalVariable(name: "set_flags", arg: 5, scope: !14658, file: !3, line: 2011, type: !1398)
!14670 = !DILocation(line: 2011, column: 39, scope: !14658)
!14671 = !DILocalVariable(name: "evport", scope: !14658, file: !3, line: 2013, type: !10958)
!14672 = !DILocation(line: 2013, column: 21, scope: !14658)
!14673 = !DILocation(line: 2013, column: 53, scope: !14658)
!14674 = !DILocation(line: 2013, column: 58, scope: !14658)
!14675 = !DILocation(line: 2013, column: 30, scope: !14658)
!14676 = !DILocalVariable(name: "err", scope: !14658, file: !3, line: 2014, type: !6)
!14677 = !DILocation(line: 2014, column: 6, scope: !14658)
!14678 = !DILocation(line: 2016, column: 13, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2016, column: 6)
!14680 = !DILocation(line: 2016, column: 6, scope: !14679)
!14681 = !DILocation(line: 2016, column: 6, scope: !14658)
!14682 = !DILocation(line: 2017, column: 18, scope: !14679)
!14683 = !DILocation(line: 2017, column: 10, scope: !14679)
!14684 = !DILocation(line: 2017, column: 3, scope: !14679)
!14685 = !DILocation(line: 2018, column: 6, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2018, column: 6)
!14687 = !DILocation(line: 2018, column: 11, scope: !14686)
!14688 = !DILocation(line: 2018, column: 18, scope: !14686)
!14689 = !DILocation(line: 2018, column: 21, scope: !14686)
!14690 = !DILocation(line: 2018, column: 25, scope: !14686)
!14691 = !DILocation(line: 2018, column: 6, scope: !14658)
!14692 = !DILocation(line: 2019, column: 3, scope: !14686)
!14693 = !DILocation(line: 2021, column: 31, scope: !14658)
!14694 = !DILocation(line: 2021, column: 36, scope: !14658)
!14695 = !DILocation(line: 2021, column: 41, scope: !14658)
!14696 = !DILocation(line: 2021, column: 48, scope: !14658)
!14697 = !DILocation(line: 2021, column: 54, scope: !14658)
!14698 = !DILocation(line: 2021, column: 59, scope: !14658)
!14699 = !DILocation(line: 2021, column: 8, scope: !14658)
!14700 = !DILocation(line: 2021, column: 6, scope: !14658)
!14701 = !DILocation(line: 2022, column: 6, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2022, column: 6)
!14703 = !DILocation(line: 2022, column: 6, scope: !14658)
!14704 = !DILocation(line: 2023, column: 10, scope: !14702)
!14705 = !DILocation(line: 2023, column: 3, scope: !14702)
!14706 = !DILocation(line: 2025, column: 22, scope: !14658)
!14707 = !DILocation(line: 2025, column: 2, scope: !14658)
!14708 = !DILocation(line: 2025, column: 10, scope: !14658)
!14709 = !DILocation(line: 2025, column: 15, scope: !14658)
!14710 = !DILocation(line: 2025, column: 20, scope: !14658)
!14711 = !DILocation(line: 2026, column: 21, scope: !14658)
!14712 = !DILocation(line: 2026, column: 2, scope: !14658)
!14713 = !DILocation(line: 2026, column: 10, scope: !14658)
!14714 = !DILocation(line: 2026, column: 15, scope: !14658)
!14715 = !DILocation(line: 2026, column: 19, scope: !14658)
!14716 = !DILocation(line: 2027, column: 6, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2027, column: 6)
!14718 = !DILocation(line: 2027, column: 14, scope: !14717)
!14719 = !DILocation(line: 2027, column: 22, scope: !14717)
!14720 = !DILocation(line: 2027, column: 25, scope: !14717)
!14721 = !DILocation(line: 2027, column: 30, scope: !14717)
!14722 = !DILocation(line: 2027, column: 35, scope: !14717)
!14723 = !DILocation(line: 2027, column: 6, scope: !14658)
!14724 = !DILocation(line: 2028, column: 36, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14717, file: !3, line: 2027, column: 59)
!14726 = !DILocation(line: 2028, column: 41, scope: !14725)
!14727 = !DILocation(line: 2028, column: 9, scope: !14725)
!14728 = !DILocation(line: 2028, column: 7, scope: !14725)
!14729 = !DILocation(line: 2029, column: 7, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14725, file: !3, line: 2029, column: 7)
!14731 = !DILocation(line: 2029, column: 7, scope: !14725)
!14732 = !DILocation(line: 2030, column: 11, scope: !14730)
!14733 = !DILocation(line: 2030, column: 4, scope: !14730)
!14734 = !DILocation(line: 2031, column: 35, scope: !14725)
!14735 = !DILocation(line: 2031, column: 40, scope: !14725)
!14736 = !DILocation(line: 2031, column: 9, scope: !14725)
!14737 = !DILocation(line: 2031, column: 7, scope: !14725)
!14738 = !DILocation(line: 2032, column: 2, scope: !14725)
!14739 = !DILocation(line: 2034, column: 9, scope: !14658)
!14740 = !DILocation(line: 2034, column: 2, scope: !14658)
!14741 = !DILocation(line: 2035, column: 1, scope: !14658)
!14742 = distinct !DISubprogram(name: "modify_esw_vport_cvlan", scope: !3, file: !3, line: 149, type: !14743, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14743 = !DISubroutineType(types: !14744)
!14744 = !{!6, !7, !739, !739, !1398, !1398}
!14745 = !DILocalVariable(name: "dev", arg: 1, scope: !14742, file: !3, line: 149, type: !7)
!14746 = !DILocation(line: 149, column: 57, scope: !14742)
!14747 = !DILocalVariable(name: "vport", arg: 2, scope: !14742, file: !3, line: 149, type: !739)
!14748 = !DILocation(line: 149, column: 66, scope: !14742)
!14749 = !DILocalVariable(name: "vlan", arg: 3, scope: !14742, file: !3, line: 150, type: !739)
!14750 = !DILocation(line: 150, column: 11, scope: !14742)
!14751 = !DILocalVariable(name: "qos", arg: 4, scope: !14742, file: !3, line: 150, type: !1398)
!14752 = !DILocation(line: 150, column: 20, scope: !14742)
!14753 = !DILocalVariable(name: "set_flags", arg: 5, scope: !14742, file: !3, line: 150, type: !1398)
!14754 = !DILocation(line: 150, column: 28, scope: !14742)
!14755 = !DILocalVariable(name: "in", scope: !14742, file: !3, line: 152, type: !14756)
!14756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 2176, elements: !14757)
!14757 = !{!14758}
!14758 = !DISubrange(count: 68)
!14759 = !DILocation(line: 152, column: 6, scope: !14742)
!14760 = !DILocation(line: 154, column: 7, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 154, column: 6)
!14762 = !DILocation(line: 154, column: 44, scope: !14761)
!14763 = !DILocation(line: 155, column: 7, scope: !14761)
!14764 = !DILocation(line: 154, column: 6, scope: !14742)
!14765 = !DILocation(line: 156, column: 3, scope: !14761)
!14766 = !DILocation(line: 158, column: 2, scope: !14742)
!14767 = !DILocation(line: 158, column: 2, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 158, column: 2)
!14769 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 158, column: 2)
!14770 = !DILocation(line: 158, column: 2, scope: !14769)
!14771 = !DILocation(line: 161, column: 6, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 161, column: 6)
!14773 = !DILocation(line: 161, column: 16, scope: !14772)
!14774 = !DILocation(line: 161, column: 6, scope: !14742)
!14775 = !DILocation(line: 162, column: 3, scope: !14772)
!14776 = !DILocalVariable(name: "_v", scope: !14777, file: !3, line: 162, type: !224)
!14777 = distinct !DILexicalBlock(scope: !14772, file: !3, line: 162, column: 3)
!14778 = !DILocation(line: 162, column: 3, scope: !14777)
!14779 = !DILocation(line: 162, column: 3, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14777, file: !3, line: 162, column: 3)
!14781 = !DILocation(line: 165, column: 6, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 165, column: 6)
!14783 = !DILocation(line: 165, column: 16, scope: !14782)
!14784 = !DILocation(line: 165, column: 6, scope: !14742)
!14785 = !DILocation(line: 167, column: 3, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14782, file: !3, line: 165, column: 35)
!14787 = !DILocalVariable(name: "_v", scope: !14788, file: !3, line: 167, type: !224)
!14788 = distinct !DILexicalBlock(scope: !14786, file: !3, line: 167, column: 3)
!14789 = !DILocation(line: 167, column: 3, scope: !14788)
!14790 = !DILocation(line: 167, column: 3, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14788, file: !3, line: 167, column: 3)
!14792 = !DILocation(line: 170, column: 3, scope: !14786)
!14793 = !DILocalVariable(name: "_v", scope: !14794, file: !3, line: 170, type: !224)
!14794 = distinct !DILexicalBlock(scope: !14786, file: !3, line: 170, column: 3)
!14795 = !DILocation(line: 170, column: 3, scope: !14794)
!14796 = !DILocation(line: 170, column: 3, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14794, file: !3, line: 170, column: 3)
!14798 = !DILocation(line: 172, column: 3, scope: !14786)
!14799 = !DILocalVariable(name: "_v", scope: !14800, file: !3, line: 172, type: !224)
!14800 = distinct !DILexicalBlock(scope: !14786, file: !3, line: 172, column: 3)
!14801 = !DILocation(line: 172, column: 3, scope: !14800)
!14802 = !DILocation(line: 172, column: 3, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14800, file: !3, line: 172, column: 3)
!14804 = !DILocation(line: 174, column: 2, scope: !14786)
!14805 = !DILocation(line: 176, column: 2, scope: !14742)
!14806 = !DILocalVariable(name: "_v", scope: !14807, file: !3, line: 176, type: !224)
!14807 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 176, column: 2)
!14808 = !DILocation(line: 176, column: 2, scope: !14807)
!14809 = !DILocation(line: 176, column: 2, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 176, column: 2)
!14811 = !DILocation(line: 178, column: 2, scope: !14742)
!14812 = !DILocalVariable(name: "_v", scope: !14813, file: !3, line: 178, type: !224)
!14813 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 178, column: 2)
!14814 = !DILocation(line: 178, column: 2, scope: !14813)
!14815 = !DILocation(line: 178, column: 2, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 178, column: 2)
!14817 = !DILocation(line: 181, column: 47, scope: !14742)
!14818 = !DILocation(line: 181, column: 52, scope: !14742)
!14819 = !DILocation(line: 181, column: 65, scope: !14742)
!14820 = !DILocation(line: 181, column: 9, scope: !14742)
!14821 = !DILocation(line: 181, column: 2, scope: !14742)
!14822 = !DILocation(line: 182, column: 1, scope: !14742)
!14823 = distinct !DISubprogram(name: "mlx5_eswitch_set_vport_vlan", scope: !3, file: !3, line: 2037, type: !14824, scopeLine: 2039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14824 = !DISubroutineType(types: !14825)
!14825 = !{!6, !10791, !739, !739, !1398}
!14826 = !DILocalVariable(name: "esw", arg: 1, scope: !14823, file: !3, line: 2037, type: !10791)
!14827 = !DILocation(line: 2037, column: 54, scope: !14823)
!14828 = !DILocalVariable(name: "vport", arg: 2, scope: !14823, file: !3, line: 2038, type: !739)
!14829 = !DILocation(line: 2038, column: 9, scope: !14823)
!14830 = !DILocalVariable(name: "vlan", arg: 3, scope: !14823, file: !3, line: 2038, type: !739)
!14831 = !DILocation(line: 2038, column: 20, scope: !14823)
!14832 = !DILocalVariable(name: "qos", arg: 4, scope: !14823, file: !3, line: 2038, type: !1398)
!14833 = !DILocation(line: 2038, column: 29, scope: !14823)
!14834 = !DILocalVariable(name: "set_flags", scope: !14823, file: !3, line: 2040, type: !1398)
!14835 = !DILocation(line: 2040, column: 5, scope: !14823)
!14836 = !DILocalVariable(name: "err", scope: !14823, file: !3, line: 2041, type: !6)
!14837 = !DILocation(line: 2041, column: 6, scope: !14823)
!14838 = !DILocation(line: 2043, column: 7, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 2043, column: 6)
!14840 = !DILocation(line: 2043, column: 6, scope: !14823)
!14841 = !DILocation(line: 2044, column: 3, scope: !14839)
!14842 = !DILocation(line: 2046, column: 6, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 2046, column: 6)
!14844 = !DILocation(line: 2046, column: 11, scope: !14843)
!14845 = !DILocation(line: 2046, column: 14, scope: !14843)
!14846 = !DILocation(line: 2046, column: 6, scope: !14823)
!14847 = !DILocation(line: 2047, column: 13, scope: !14843)
!14848 = !DILocation(line: 2047, column: 3, scope: !14843)
!14849 = !DILocation(line: 2049, column: 14, scope: !14823)
!14850 = !DILocation(line: 2049, column: 19, scope: !14823)
!14851 = !DILocation(line: 2049, column: 2, scope: !14823)
!14852 = !DILocation(line: 2050, column: 38, scope: !14823)
!14853 = !DILocation(line: 2050, column: 43, scope: !14823)
!14854 = !DILocation(line: 2050, column: 50, scope: !14823)
!14855 = !DILocation(line: 2050, column: 56, scope: !14823)
!14856 = !DILocation(line: 2050, column: 61, scope: !14823)
!14857 = !DILocation(line: 2050, column: 8, scope: !14823)
!14858 = !DILocation(line: 2050, column: 6, scope: !14823)
!14859 = !DILocation(line: 2051, column: 16, scope: !14823)
!14860 = !DILocation(line: 2051, column: 21, scope: !14823)
!14861 = !DILocation(line: 2051, column: 2, scope: !14823)
!14862 = !DILocation(line: 2053, column: 9, scope: !14823)
!14863 = !DILocation(line: 2053, column: 2, scope: !14823)
!14864 = !DILocation(line: 2054, column: 1, scope: !14823)
!14865 = distinct !DISubprogram(name: "mlx5_eswitch_set_vport_spoofchk", scope: !3, file: !3, line: 2056, type: !14866, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14866 = !DISubroutineType(types: !14867)
!14867 = !{!6, !10791, !739, !299}
!14868 = !DILocation(line: 15, column: 9, scope: !14180, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 2072, column: 3, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2071, column: 6)
!14871 = !DILocation(line: 15, column: 9, scope: !14189, inlinedAt: !14869)
!14872 = !DILocation(line: 15, column: 9, scope: !14192, inlinedAt: !14869)
!14873 = !DILocalVariable(name: "esw", arg: 1, scope: !14865, file: !3, line: 2056, type: !10791)
!14874 = !DILocation(line: 2056, column: 58, scope: !14865)
!14875 = !DILocalVariable(name: "vport", arg: 2, scope: !14865, file: !3, line: 2057, type: !739)
!14876 = !DILocation(line: 2057, column: 13, scope: !14865)
!14877 = !DILocalVariable(name: "spoofchk", arg: 3, scope: !14865, file: !3, line: 2057, type: !299)
!14878 = !DILocation(line: 2057, column: 25, scope: !14865)
!14879 = !DILocalVariable(name: "evport", scope: !14865, file: !3, line: 2059, type: !10958)
!14880 = !DILocation(line: 2059, column: 21, scope: !14865)
!14881 = !DILocation(line: 2059, column: 53, scope: !14865)
!14882 = !DILocation(line: 2059, column: 58, scope: !14865)
!14883 = !DILocation(line: 2059, column: 30, scope: !14865)
!14884 = !DILocalVariable(name: "pschk", scope: !14865, file: !3, line: 2060, type: !299)
!14885 = !DILocation(line: 2060, column: 7, scope: !14865)
!14886 = !DILocalVariable(name: "err", scope: !14865, file: !3, line: 2061, type: !6)
!14887 = !DILocation(line: 2061, column: 6, scope: !14865)
!14888 = !DILocation(line: 2063, column: 7, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2063, column: 6)
!14890 = !DILocation(line: 2063, column: 6, scope: !14865)
!14891 = !DILocation(line: 2064, column: 3, scope: !14889)
!14892 = !DILocation(line: 2065, column: 13, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2065, column: 6)
!14894 = !DILocation(line: 2065, column: 6, scope: !14893)
!14895 = !DILocation(line: 2065, column: 6, scope: !14865)
!14896 = !DILocation(line: 2066, column: 18, scope: !14893)
!14897 = !DILocation(line: 2066, column: 10, scope: !14893)
!14898 = !DILocation(line: 2066, column: 3, scope: !14893)
!14899 = !DILocation(line: 2068, column: 14, scope: !14865)
!14900 = !DILocation(line: 2068, column: 19, scope: !14865)
!14901 = !DILocation(line: 2068, column: 2, scope: !14865)
!14902 = !DILocation(line: 2069, column: 10, scope: !14865)
!14903 = !DILocation(line: 2069, column: 18, scope: !14865)
!14904 = !DILocation(line: 2069, column: 23, scope: !14865)
!14905 = !DILocation(line: 2069, column: 8, scope: !14865)
!14906 = !DILocation(line: 2070, column: 26, scope: !14865)
!14907 = !DILocation(line: 2070, column: 2, scope: !14865)
!14908 = !DILocation(line: 2070, column: 10, scope: !14865)
!14909 = !DILocation(line: 2070, column: 15, scope: !14865)
!14910 = !DILocation(line: 2070, column: 24, scope: !14865)
!14911 = !DILocation(line: 2071, column: 6, scope: !14870)
!14912 = !DILocation(line: 2071, column: 12, scope: !14870)
!14913 = !DILocation(line: 2071, column: 36, scope: !14870)
!14914 = !DILocation(line: 2071, column: 44, scope: !14870)
!14915 = !DILocation(line: 2071, column: 49, scope: !14870)
!14916 = !DILocation(line: 2071, column: 16, scope: !14870)
!14917 = !DILocation(line: 2071, column: 6, scope: !14865)
!14918 = !DILocation(line: 2072, column: 3, scope: !14870)
!14919 = !DILocation(line: 2075, column: 6, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2075, column: 6)
!14921 = !DILocation(line: 2075, column: 14, scope: !14920)
!14922 = !DILocation(line: 2075, column: 22, scope: !14920)
!14923 = !DILocation(line: 2075, column: 25, scope: !14920)
!14924 = !DILocation(line: 2075, column: 30, scope: !14920)
!14925 = !DILocation(line: 2075, column: 35, scope: !14920)
!14926 = !DILocation(line: 2075, column: 6, scope: !14865)
!14927 = !DILocation(line: 2076, column: 36, scope: !14920)
!14928 = !DILocation(line: 2076, column: 41, scope: !14920)
!14929 = !DILocation(line: 2076, column: 9, scope: !14920)
!14930 = !DILocation(line: 2076, column: 7, scope: !14920)
!14931 = !DILocation(line: 2076, column: 3, scope: !14920)
!14932 = !DILocation(line: 2077, column: 6, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2077, column: 6)
!14934 = !DILocation(line: 2077, column: 6, scope: !14865)
!14935 = !DILocation(line: 2078, column: 27, scope: !14933)
!14936 = !DILocation(line: 2078, column: 3, scope: !14933)
!14937 = !DILocation(line: 2078, column: 11, scope: !14933)
!14938 = !DILocation(line: 2078, column: 16, scope: !14933)
!14939 = !DILocation(line: 2078, column: 25, scope: !14933)
!14940 = !DILocation(line: 2079, column: 16, scope: !14865)
!14941 = !DILocation(line: 2079, column: 21, scope: !14865)
!14942 = !DILocation(line: 2079, column: 2, scope: !14865)
!14943 = !DILocation(line: 2081, column: 9, scope: !14865)
!14944 = !DILocation(line: 2081, column: 2, scope: !14865)
!14945 = !DILocation(line: 2082, column: 1, scope: !14865)
!14946 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !14385, file: !14385, line: 191, type: !14947, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14947 = !DISubroutineType(types: !14948)
!14948 = !{!299, !4150}
!14949 = !DILocalVariable(name: "addr", arg: 1, scope: !14946, file: !14385, line: 191, type: !4150)
!14950 = !DILocation(line: 191, column: 50, scope: !14946)
!14951 = !DILocation(line: 195, column: 34, scope: !14946)
!14952 = !DILocation(line: 195, column: 10, scope: !14946)
!14953 = !DILocation(line: 195, column: 40, scope: !14946)
!14954 = !DILocation(line: 195, column: 63, scope: !14946)
!14955 = !DILocation(line: 195, column: 44, scope: !14946)
!14956 = !DILocation(line: 195, column: 43, scope: !14946)
!14957 = !DILocation(line: 0, scope: !14946)
!14958 = !DILocation(line: 195, column: 2, scope: !14946)
!14959 = distinct !DISubprogram(name: "mlx5_eswitch_set_vepa", scope: !3, file: !3, line: 2159, type: !14960, scopeLine: 2160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!14960 = !DISubroutineType(types: !14961)
!14961 = !{!6, !10791, !1398}
!14962 = !DILocalVariable(name: "esw", arg: 1, scope: !14959, file: !3, line: 2159, type: !10791)
!14963 = !DILocation(line: 2159, column: 48, scope: !14959)
!14964 = !DILocalVariable(name: "setting", arg: 2, scope: !14959, file: !3, line: 2159, type: !1398)
!14965 = !DILocation(line: 2159, column: 56, scope: !14959)
!14966 = !DILocalVariable(name: "err", scope: !14959, file: !3, line: 2161, type: !6)
!14967 = !DILocation(line: 2161, column: 6, scope: !14959)
!14968 = !DILocation(line: 2163, column: 7, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14959, file: !3, line: 2163, column: 6)
!14970 = !DILocation(line: 2163, column: 6, scope: !14959)
!14971 = !DILocation(line: 2164, column: 3, scope: !14969)
!14972 = !DILocation(line: 2166, column: 7, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14959, file: !3, line: 2166, column: 6)
!14974 = !DILocation(line: 2166, column: 6, scope: !14959)
!14975 = !DILocation(line: 2167, column: 3, scope: !14973)
!14976 = !DILocation(line: 2169, column: 14, scope: !14959)
!14977 = !DILocation(line: 2169, column: 19, scope: !14959)
!14978 = !DILocation(line: 2169, column: 2, scope: !14959)
!14979 = !DILocation(line: 2170, column: 6, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14959, file: !3, line: 2170, column: 6)
!14981 = !DILocation(line: 2170, column: 11, scope: !14980)
!14982 = !DILocation(line: 2170, column: 16, scope: !14980)
!14983 = !DILocation(line: 2170, column: 6, scope: !14959)
!14984 = !DILocation(line: 2171, column: 7, scope: !14985)
!14985 = distinct !DILexicalBlock(scope: !14980, file: !3, line: 2170, column: 40)
!14986 = !DILocation(line: 2172, column: 3, scope: !14985)
!14987 = !DILocation(line: 2175, column: 38, scope: !14959)
!14988 = !DILocation(line: 2175, column: 43, scope: !14959)
!14989 = !DILocation(line: 2175, column: 8, scope: !14959)
!14990 = !DILocation(line: 2175, column: 6, scope: !14959)
!14991 = !DILocation(line: 2175, column: 2, scope: !14959)
!14992 = !DILabel(scope: !14959, name: "out", file: !3, line: 2177)
!14993 = !DILocation(line: 2177, column: 1, scope: !14959)
!14994 = !DILocation(line: 2178, column: 16, scope: !14959)
!14995 = !DILocation(line: 2178, column: 21, scope: !14959)
!14996 = !DILocation(line: 2178, column: 2, scope: !14959)
!14997 = !DILocation(line: 2179, column: 9, scope: !14959)
!14998 = !DILocation(line: 2179, column: 2, scope: !14959)
!14999 = !DILocation(line: 2180, column: 1, scope: !14959)
!15000 = distinct !DISubprogram(name: "_mlx5_eswitch_set_vepa_locked", scope: !3, file: !3, line: 2096, type: !14960, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!15001 = !DILocalVariable(name: "esw", arg: 1, scope: !15000, file: !3, line: 2096, type: !10791)
!15002 = !DILocation(line: 2096, column: 63, scope: !15000)
!15003 = !DILocalVariable(name: "setting", arg: 2, scope: !15000, file: !3, line: 2097, type: !1398)
!15004 = !DILocation(line: 2097, column: 10, scope: !15000)
!15005 = !DILocalVariable(name: "dest", scope: !15000, file: !3, line: 2099, type: !10856)
!15006 = !DILocation(line: 2099, column: 31, scope: !15000)
!15007 = !DILocalVariable(name: "flow_act", scope: !15000, file: !3, line: 2100, type: !15008)
!15008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_act", file: !10857, line: 207, size: 448, elements: !15009)
!15009 = !{!15010, !15011, !15012, !15013, !15019, !15020, !15027}
!15010 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !15008, file: !10857, line: 208, baseType: !224, size: 32)
!15011 = !DIDerivedType(tag: DW_TAG_member, name: "modify_hdr", scope: !15008, file: !10857, line: 209, baseType: !10990, size: 64, offset: 64)
!15012 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_reformat", scope: !15008, file: !10857, line: 210, baseType: !10881, size: 64, offset: 128)
!15013 = !DIDerivedType(tag: DW_TAG_member, scope: !15008, file: !10857, line: 211, baseType: !15014, size: 64, offset: 192)
!15014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15008, file: !10857, line: 211, size: 64, elements: !15015)
!15015 = !{!15016, !15017}
!15016 = !DIDerivedType(tag: DW_TAG_member, name: "ipsec_obj_id", scope: !15014, file: !10857, line: 212, baseType: !224, size: 32)
!15017 = !DIDerivedType(tag: DW_TAG_member, name: "esp_id", scope: !15014, file: !10857, line: 213, baseType: !15018, size: 64)
!15018 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !26, line: 37, baseType: !130)
!15019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15008, file: !10857, line: 215, baseType: !224, size: 32, offset: 256)
!15020 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !15008, file: !10857, line: 216, baseType: !15021, size: 96, offset: 288)
!15021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15022, size: 96, elements: !1906)
!15022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_vlan", file: !10857, line: 194, size: 48, elements: !15023)
!15023 = !{!15024, !15025, !15026}
!15024 = !DIDerivedType(tag: DW_TAG_member, name: "ethtype", scope: !15022, file: !10857, line: 195, baseType: !739, size: 16)
!15025 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !15022, file: !10857, line: 196, baseType: !739, size: 16, offset: 16)
!15026 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15022, file: !10857, line: 197, baseType: !1398, size: 8, offset: 32)
!15027 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !15008, file: !10857, line: 217, baseType: !15028, size: 64, offset: 384)
!15028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15029, size: 64)
!15029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_counters", file: !11911, line: 2233, size: 192, elements: !15030)
!15030 = !{!15031, !16589, !16590}
!15031 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15029, file: !11911, line: 2234, baseType: !15032, size: 64)
!15032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15033, size: 64)
!15033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device", file: !11911, line: 2629, size: 20736, elements: !15034)
!15034 = !{!15035, !15036, !16489, !16490, !16491, !16492, !16493, !16494, !16495, !16496, !16497, !16498, !16529, !16530, !16542, !16544, !16545, !16546, !16547, !16548, !16549, !16550, !16551, !16552, !16553, !16554, !16555, !16557, !16558, !16559, !16560, !16562, !16565, !16569, !16570, !16571, !16572, !16584, !16585, !16586, !16587, !16588}
!15035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_device", scope: !15033, file: !11911, line: 2631, baseType: !12, size: 64)
!15036 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !15033, file: !11911, line: 2632, baseType: !15037, size: 7936, offset: 64)
!15037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device_ops", file: !11911, line: 2286, size: 7936, elements: !15038)
!15038 = !{!15039, !15040, !15041, !15042, !15043, !15468, !15486, !15490, !15491, !15495, !15499, !15503, !15504, !15508, !15528, !15621, !15630, !15634, !15640, !15670, !15680, !15691, !15695, !15699, !15703, !15718, !15723, !15727, !15728, !15732, !15736, !15740, !15744, !15756, !15757, !15761, !15762, !15815, !15819, !15820, !15824, !15855, !15860, !15864, !15868, !15896, !15930, !15934, !15938, !15949, !15953, !15957, !15961, !15965, !15969, !15973, !15977, !15981, !15985, !15991, !16004, !16020, !16032, !16036, !16040, !16041, !16045, !16046, !16221, !16225, !16274, !16278, !16282, !16286, !16290, !16294, !16298, !16302, !16316, !16320, !16331, !16340, !16344, !16354, !16358, !16368, !16372, !16376, !16386, !16390, !16394, !16398, !16402, !16406, !16407, !16411, !16412, !16416, !16417, !16423, !16427, !16431, !16432, !16433, !16437, !16445, !16446, !16450, !16454, !16458, !16462, !16466, !16470, !16474, !16475, !16476, !16480, !16481, !16482, !16483, !16484, !16485, !16486, !16487, !16488}
!15039 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15037, file: !11911, line: 2287, baseType: !441, size: 64)
!15040 = !DIDerivedType(tag: DW_TAG_member, name: "driver_id", scope: !15037, file: !11911, line: 2288, baseType: !11877, size: 32, offset: 64)
!15041 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_abi_ver", scope: !15037, file: !11911, line: 2289, baseType: !224, size: 32, offset: 96)
!15042 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_no_driver_id_binding", scope: !15037, file: !11911, line: 2290, baseType: !194, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!15043 = !DIDerivedType(tag: DW_TAG_member, name: "post_send", scope: !15037, file: !11911, line: 2292, baseType: !15044, size: 64, offset: 192)
!15044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15045, size: 64)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!6, !15047, !15441, !15467}
!15047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15048, size: 64)
!15048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp", file: !11911, line: 1740, size: 2304, elements: !15049)
!15049 = !{!15050, !15051, !15155, !15328, !15329, !15330, !15331, !15332, !15333, !15334, !15335, !15336, !15337, !15338, !15339, !15342, !15343, !15344, !15363, !15364, !15365, !15366, !15367, !15368, !15379, !15406, !15407, !15408, !15409}
!15050 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15048, file: !11911, line: 1741, baseType: !15032, size: 64)
!15051 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !15048, file: !11911, line: 1742, baseType: !15052, size: 64, offset: 64)
!15052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15053, size: 64)
!15053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_pd", file: !11911, line: 1518, size: 832, elements: !15054)
!15054 = !{!15055, !15056, !15057, !15058, !15098, !15099, !15100, !15154}
!15055 = !DIDerivedType(tag: DW_TAG_member, name: "local_dma_lkey", scope: !15053, file: !11911, line: 1519, baseType: !224, size: 32)
!15056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15053, file: !11911, line: 1520, baseType: !224, size: 32, offset: 32)
!15057 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15053, file: !11911, line: 1521, baseType: !15032, size: 64, offset: 64)
!15058 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15053, file: !11911, line: 1522, baseType: !15059, size: 64, offset: 128)
!15059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15060, size: 64)
!15060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uobject", file: !11911, line: 1494, size: 704, elements: !15061)
!15061 = !{!15062, !15063, !15066, !15087, !15088, !15089, !15090, !15091, !15092, !15093, !15094}
!15062 = !DIDerivedType(tag: DW_TAG_member, name: "user_handle", scope: !15060, file: !11911, line: 1495, baseType: !230, size: 64)
!15063 = !DIDerivedType(tag: DW_TAG_member, name: "ufile", scope: !15060, file: !11911, line: 1497, baseType: !15064, size: 64, offset: 64)
!15064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15065, size: 64)
!15065 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uverbs_file", file: !11911, line: 1482, flags: DIFlagFwdDecl)
!15066 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !15060, file: !11911, line: 1499, baseType: !15067, size: 64, offset: 128)
!15067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15068, size: 64)
!15068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ucontext", file: !11911, line: 1480, size: 832, elements: !15069)
!15069 = !{!15070, !15071, !15072, !15073, !15075, !15086}
!15070 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15068, file: !11911, line: 1481, baseType: !15032, size: 64)
!15071 = !DIDerivedType(tag: DW_TAG_member, name: "ufile", scope: !15068, file: !11911, line: 1482, baseType: !15064, size: 64, offset: 64)
!15072 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_retryable", scope: !15068, file: !11911, line: 1484, baseType: !299, size: 8, offset: 128)
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "cg_obj", scope: !15068, file: !11911, line: 1486, baseType: !15074, offset: 136)
!15074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rdmacg_object", file: !11911, line: 1474, elements: !53)
!15075 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !15068, file: !11911, line: 1490, baseType: !15076, size: 512, offset: 192)
!15076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_restrack_entry", file: !11900, line: 61, size: 512, elements: !15077)
!15077 = !{!15078, !15079, !15080, !15081, !15082, !15083, !15084, !15085}
!15078 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !15076, file: !11900, line: 70, baseType: !299, size: 8)
!15079 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !15076, file: !11900, line: 74, baseType: !1551, size: 32, offset: 32)
!15080 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !15076, file: !11900, line: 78, baseType: !1784, size: 192, offset: 64)
!15081 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !15076, file: !11900, line: 88, baseType: !1262, size: 64, offset: 256)
!15082 = !DIDerivedType(tag: DW_TAG_member, name: "kern_name", scope: !15076, file: !11900, line: 92, baseType: !21, size: 64, offset: 320)
!15083 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15076, file: !11900, line: 96, baseType: !11899, size: 32, offset: 384)
!15084 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !15076, file: !11900, line: 100, baseType: !299, size: 8, offset: 416)
!15085 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !15076, file: !11900, line: 104, baseType: !224, size: 32, offset: 448)
!15086 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_xa", scope: !15068, file: !11911, line: 1491, baseType: !618, size: 128, offset: 704)
!15087 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !15060, file: !11911, line: 1500, baseType: !154, size: 64, offset: 192)
!15088 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !15060, file: !11911, line: 1501, baseType: !25, size: 128, offset: 256)
!15089 = !DIDerivedType(tag: DW_TAG_member, name: "cg_obj", scope: !15060, file: !11911, line: 1502, baseType: !15074, offset: 384)
!15090 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !15060, file: !11911, line: 1503, baseType: !6, size: 32, offset: 384)
!15091 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !15060, file: !11911, line: 1504, baseType: !1551, size: 32, offset: 416)
!15092 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15060, file: !11911, line: 1505, baseType: !627, size: 32, offset: 448)
!15093 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !15060, file: !11911, line: 1506, baseType: !173, size: 128, align: 64, offset: 512)
!15094 = !DIDerivedType(tag: DW_TAG_member, name: "uapi_object", scope: !15060, file: !11911, line: 1508, baseType: !15095, size: 64, offset: 640)
!15095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15096, size: 64)
!15096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15097)
!15097 = !DICompositeType(tag: DW_TAG_structure_type, name: "uverbs_api_object", file: !11911, line: 1508, flags: DIFlagFwdDecl)
!15098 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15053, file: !11911, line: 1523, baseType: !627, size: 32, offset: 192)
!15099 = !DIDerivedType(tag: DW_TAG_member, name: "unsafe_global_rkey", scope: !15053, file: !11911, line: 1525, baseType: !224, size: 32, offset: 224)
!15100 = !DIDerivedType(tag: DW_TAG_member, name: "__internal_mr", scope: !15053, file: !11911, line: 1530, baseType: !15101, size: 64, offset: 256)
!15101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15102, size: 64)
!15102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mr", file: !11911, line: 1789, size: 1216, elements: !15103)
!15103 = !{!15104, !15105, !15106, !15107, !15108, !15109, !15110, !15111, !15112, !15113, !15118, !15127, !15153}
!15104 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15102, file: !11911, line: 1790, baseType: !15032, size: 64)
!15105 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !15102, file: !11911, line: 1791, baseType: !15052, size: 64, offset: 64)
!15106 = !DIDerivedType(tag: DW_TAG_member, name: "lkey", scope: !15102, file: !11911, line: 1792, baseType: !224, size: 32, offset: 128)
!15107 = !DIDerivedType(tag: DW_TAG_member, name: "rkey", scope: !15102, file: !11911, line: 1793, baseType: !224, size: 32, offset: 160)
!15108 = !DIDerivedType(tag: DW_TAG_member, name: "iova", scope: !15102, file: !11911, line: 1794, baseType: !230, size: 64, offset: 192)
!15109 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !15102, file: !11911, line: 1795, baseType: !230, size: 64, offset: 256)
!15110 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !15102, file: !11911, line: 1796, baseType: !194, size: 32, offset: 320)
!15111 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15102, file: !11911, line: 1797, baseType: !11910, size: 32, offset: 352)
!15112 = !DIDerivedType(tag: DW_TAG_member, name: "need_inval", scope: !15102, file: !11911, line: 1798, baseType: !299, size: 8, offset: 384)
!15113 = !DIDerivedType(tag: DW_TAG_member, scope: !15102, file: !11911, line: 1799, baseType: !15114, size: 128, offset: 448)
!15114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15102, file: !11911, line: 1799, size: 128, elements: !15115)
!15115 = !{!15116, !15117}
!15116 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15114, file: !11911, line: 1800, baseType: !15059, size: 64)
!15117 = !DIDerivedType(tag: DW_TAG_member, name: "qp_entry", scope: !15114, file: !11911, line: 1801, baseType: !25, size: 128)
!15118 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !15102, file: !11911, line: 1804, baseType: !15119, size: 64, offset: 576)
!15119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15120, size: 64)
!15120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_dm", file: !11911, line: 1781, size: 256, elements: !15121)
!15121 = !{!15122, !15123, !15124, !15125, !15126}
!15122 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15120, file: !11911, line: 1782, baseType: !15032, size: 64)
!15123 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !15120, file: !11911, line: 1783, baseType: !224, size: 32, offset: 64)
!15124 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15120, file: !11911, line: 1784, baseType: !224, size: 32, offset: 96)
!15125 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15120, file: !11911, line: 1785, baseType: !15059, size: 64, offset: 128)
!15126 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15120, file: !11911, line: 1786, baseType: !627, size: 32, offset: 192)
!15127 = !DIDerivedType(tag: DW_TAG_member, name: "sig_attrs", scope: !15102, file: !11911, line: 1805, baseType: !15128, size: 64, offset: 640)
!15128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15129, size: 64)
!15129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sig_attrs", file: !11920, line: 87, size: 512, elements: !15130)
!15130 = !{!15131, !15132, !15151, !15152}
!15131 = !DIDerivedType(tag: DW_TAG_member, name: "check_mask", scope: !15129, file: !11920, line: 88, baseType: !1398, size: 8)
!15132 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !15129, file: !11920, line: 89, baseType: !15133, size: 224, offset: 32)
!15133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sig_domain", file: !11920, line: 73, size: 224, elements: !15134)
!15134 = !{!15135, !15136}
!15135 = !DIDerivedType(tag: DW_TAG_member, name: "sig_type", scope: !15133, file: !11920, line: 74, baseType: !11919, size: 32)
!15136 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !15133, file: !11920, line: 77, baseType: !15137, size: 192, offset: 32)
!15137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15133, file: !11920, line: 75, size: 192, elements: !15138)
!15138 = !{!15139}
!15139 = !DIDerivedType(tag: DW_TAG_member, name: "dif", scope: !15137, file: !11920, line: 76, baseType: !15140, size: 192)
!15140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_t10_dif_domain", file: !11920, line: 55, size: 192, elements: !15141)
!15141 = !{!15142, !15143, !15144, !15145, !15146, !15147, !15148, !15149, !15150}
!15142 = !DIDerivedType(tag: DW_TAG_member, name: "bg_type", scope: !15140, file: !11920, line: 56, baseType: !11924, size: 32)
!15143 = !DIDerivedType(tag: DW_TAG_member, name: "pi_interval", scope: !15140, file: !11920, line: 57, baseType: !739, size: 16, offset: 32)
!15144 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !15140, file: !11920, line: 58, baseType: !739, size: 16, offset: 48)
!15145 = !DIDerivedType(tag: DW_TAG_member, name: "app_tag", scope: !15140, file: !11920, line: 59, baseType: !739, size: 16, offset: 64)
!15146 = !DIDerivedType(tag: DW_TAG_member, name: "ref_tag", scope: !15140, file: !11920, line: 60, baseType: !224, size: 32, offset: 96)
!15147 = !DIDerivedType(tag: DW_TAG_member, name: "ref_remap", scope: !15140, file: !11920, line: 61, baseType: !299, size: 8, offset: 128)
!15148 = !DIDerivedType(tag: DW_TAG_member, name: "app_escape", scope: !15140, file: !11920, line: 62, baseType: !299, size: 8, offset: 136)
!15149 = !DIDerivedType(tag: DW_TAG_member, name: "ref_escape", scope: !15140, file: !11920, line: 63, baseType: !299, size: 8, offset: 144)
!15150 = !DIDerivedType(tag: DW_TAG_member, name: "apptag_check_mask", scope: !15140, file: !11920, line: 64, baseType: !739, size: 16, offset: 160)
!15151 = !DIDerivedType(tag: DW_TAG_member, name: "wire", scope: !15129, file: !11920, line: 90, baseType: !15133, size: 224, offset: 256)
!15152 = !DIDerivedType(tag: DW_TAG_member, name: "meta_length", scope: !15129, file: !11920, line: 91, baseType: !6, size: 32, offset: 480)
!15153 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !15102, file: !11911, line: 1809, baseType: !15076, size: 512, offset: 704)
!15154 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !15053, file: !11911, line: 1531, baseType: !15076, size: 512, offset: 320)
!15155 = !DIDerivedType(tag: DW_TAG_member, name: "send_cq", scope: !15048, file: !11911, line: 1743, baseType: !15156, size: 64, offset: 128)
!15156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15157, size: 64)
!15157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cq", file: !11911, line: 1561, size: 1728, elements: !15158)
!15158 = !{!15159, !15160, !15163, !15168, !15232, !15233, !15234, !15235, !15236, !15237, !15273, !15274, !15291, !15292, !15323, !15324, !15325, !15326, !15327}
!15159 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15157, file: !11911, line: 1562, baseType: !15032, size: 64)
!15160 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15157, file: !11911, line: 1563, baseType: !15161, size: 64, offset: 64)
!15161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15162, size: 64)
!15162 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ucq_object", file: !11911, line: 57, flags: DIFlagFwdDecl)
!15163 = !DIDerivedType(tag: DW_TAG_member, name: "comp_handler", scope: !15157, file: !11911, line: 1564, baseType: !15164, size: 64, offset: 128)
!15164 = !DIDerivedType(tag: DW_TAG_typedef, name: "ib_comp_handler", file: !11911, line: 1550, baseType: !15165)
!15165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15166, size: 64)
!15166 = !DISubroutineType(types: !15167)
!15167 = !{null, !15156, !154}
!15168 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !15157, file: !11911, line: 1565, baseType: !15169, size: 64, offset: 192)
!15169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15170, size: 64)
!15170 = !DISubroutineType(types: !15171)
!15171 = !{null, !15172, !154}
!15172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15173, size: 64)
!15173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_event", file: !11911, line: 731, size: 192, elements: !15174)
!15174 = !{!15175, !15176, !15231}
!15175 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15173, file: !11911, line: 732, baseType: !15032, size: 64)
!15176 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !15173, file: !11911, line: 739, baseType: !15177, size: 64, offset: 64)
!15177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15173, file: !11911, line: 733, size: 64, elements: !15178)
!15178 = !{!15179, !15180, !15181, !15214, !15230}
!15179 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !15177, file: !11911, line: 734, baseType: !15156, size: 64)
!15180 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !15177, file: !11911, line: 735, baseType: !15047, size: 64)
!15181 = !DIDerivedType(tag: DW_TAG_member, name: "srq", scope: !15177, file: !11911, line: 736, baseType: !15182, size: 64)
!15182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15183, size: 64)
!15183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_srq", file: !11911, line: 1592, size: 576, elements: !15184)
!15184 = !{!15185, !15186, !15187, !15190, !15191, !15192, !15193, !15194}
!15185 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15183, file: !11911, line: 1593, baseType: !15032, size: 64)
!15186 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !15183, file: !11911, line: 1594, baseType: !15052, size: 64, offset: 64)
!15187 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15183, file: !11911, line: 1595, baseType: !15188, size: 64, offset: 128)
!15188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15189, size: 64)
!15189 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_usrq_object", file: !11911, line: 49, flags: DIFlagFwdDecl)
!15190 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !15183, file: !11911, line: 1596, baseType: !15169, size: 64, offset: 192)
!15191 = !DIDerivedType(tag: DW_TAG_member, name: "srq_context", scope: !15183, file: !11911, line: 1597, baseType: !154, size: 64, offset: 256)
!15192 = !DIDerivedType(tag: DW_TAG_member, name: "srq_type", scope: !15183, file: !11911, line: 1598, baseType: !11928, size: 32, offset: 320)
!15193 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15183, file: !11911, line: 1599, baseType: !627, size: 32, offset: 352)
!15194 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !15183, file: !11911, line: 1609, baseType: !15195, size: 192, offset: 384)
!15195 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15183, file: !11911, line: 1601, size: 192, elements: !15196)
!15196 = !{!15197, !15198}
!15197 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !15195, file: !11911, line: 1602, baseType: !15156, size: 64)
!15198 = !DIDerivedType(tag: DW_TAG_member, scope: !15195, file: !11911, line: 1603, baseType: !15199, size: 128, offset: 64)
!15199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15195, file: !11911, line: 1603, size: 128, elements: !15200)
!15200 = !{!15201}
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "xrc", scope: !15199, file: !11911, line: 1607, baseType: !15202, size: 128)
!15202 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15199, file: !11911, line: 1604, size: 128, elements: !15203)
!15203 = !{!15204, !15213}
!15204 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !15202, file: !11911, line: 1605, baseType: !15205, size: 64)
!15205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15206, size: 64)
!15206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_xrcd", file: !11911, line: 1534, size: 576, elements: !15207)
!15207 = !{!15208, !15209, !15210, !15211, !15212}
!15208 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15206, file: !11911, line: 1535, baseType: !15032, size: 64)
!15209 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15206, file: !11911, line: 1536, baseType: !627, size: 32, offset: 64)
!15210 = !DIDerivedType(tag: DW_TAG_member, name: "inode", scope: !15206, file: !11911, line: 1537, baseType: !238, size: 64, offset: 128)
!15211 = !DIDerivedType(tag: DW_TAG_member, name: "tgt_qps_rwsem", scope: !15206, file: !11911, line: 1538, baseType: !647, size: 256, offset: 192)
!15212 = !DIDerivedType(tag: DW_TAG_member, name: "tgt_qps", scope: !15206, file: !11911, line: 1539, baseType: !618, size: 128, offset: 448)
!15213 = !DIDerivedType(tag: DW_TAG_member, name: "srq_num", scope: !15202, file: !11911, line: 1606, baseType: !224, size: 32, offset: 64)
!15214 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !15177, file: !11911, line: 737, baseType: !15215, size: 64)
!15215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15216, size: 64)
!15216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wq", file: !11911, line: 1638, size: 512, elements: !15217)
!15217 = !{!15218, !15219, !15222, !15223, !15224, !15225, !15226, !15227, !15228, !15229}
!15218 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15216, file: !11911, line: 1639, baseType: !15032, size: 64)
!15219 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15216, file: !11911, line: 1640, baseType: !15220, size: 64, offset: 64)
!15220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15221, size: 64)
!15221 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uwq_object", file: !11911, line: 50, flags: DIFlagFwdDecl)
!15222 = !DIDerivedType(tag: DW_TAG_member, name: "wq_context", scope: !15216, file: !11911, line: 1641, baseType: !154, size: 64, offset: 128)
!15223 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !15216, file: !11911, line: 1642, baseType: !15169, size: 64, offset: 192)
!15224 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !15216, file: !11911, line: 1643, baseType: !15052, size: 64, offset: 256)
!15225 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !15216, file: !11911, line: 1644, baseType: !15156, size: 64, offset: 320)
!15226 = !DIDerivedType(tag: DW_TAG_member, name: "wq_num", scope: !15216, file: !11911, line: 1645, baseType: !224, size: 32, offset: 384)
!15227 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15216, file: !11911, line: 1646, baseType: !11933, size: 32, offset: 416)
!15228 = !DIDerivedType(tag: DW_TAG_member, name: "wq_type", scope: !15216, file: !11911, line: 1647, baseType: !11938, size: 32, offset: 448)
!15229 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15216, file: !11911, line: 1648, baseType: !627, size: 32, offset: 480)
!15230 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !15177, file: !11911, line: 738, baseType: !1398, size: 8)
!15231 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !15173, file: !11911, line: 740, baseType: !11941, size: 32, offset: 128)
!15232 = !DIDerivedType(tag: DW_TAG_member, name: "cq_context", scope: !15157, file: !11911, line: 1566, baseType: !154, size: 64, offset: 256)
!15233 = !DIDerivedType(tag: DW_TAG_member, name: "cqe", scope: !15157, file: !11911, line: 1567, baseType: !6, size: 32, offset: 320)
!15234 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_used", scope: !15157, file: !11911, line: 1568, baseType: !194, size: 32, offset: 352)
!15235 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15157, file: !11911, line: 1569, baseType: !627, size: 32, offset: 384)
!15236 = !DIDerivedType(tag: DW_TAG_member, name: "poll_ctx", scope: !15157, file: !11911, line: 1570, baseType: !11963, size: 32, offset: 416)
!15237 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !15157, file: !11911, line: 1571, baseType: !15238, size: 64, offset: 448)
!15238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15239, size: 64)
!15239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wc", file: !11911, line: 988, size: 512, elements: !15240)
!15240 = !{!15241, !15253, !15254, !15255, !15256, !15257, !15258, !15263, !15264, !15265, !15266, !15267, !15268, !15269, !15270, !15271, !15272}
!15241 = !DIDerivedType(tag: DW_TAG_member, scope: !15239, file: !11911, line: 989, baseType: !15242, size: 64)
!15242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15239, file: !11911, line: 989, size: 64, elements: !15243)
!15243 = !{!15244, !15245}
!15244 = !DIDerivedType(tag: DW_TAG_member, name: "wr_id", scope: !15242, file: !11911, line: 990, baseType: !230, size: 64)
!15245 = !DIDerivedType(tag: DW_TAG_member, name: "wr_cqe", scope: !15242, file: !11911, line: 991, baseType: !15246, size: 64)
!15246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15247, size: 64)
!15247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cqe", file: !11911, line: 1346, size: 64, elements: !15248)
!15248 = !{!15249}
!15249 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !15247, file: !11911, line: 1347, baseType: !15250, size: 64)
!15250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15251, size: 64)
!15251 = !DISubroutineType(types: !15252)
!15252 = !{null, !15156, !15238}
!15253 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !15239, file: !11911, line: 993, baseType: !11970, size: 32, offset: 64)
!15254 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !15239, file: !11911, line: 994, baseType: !11994, size: 32, offset: 96)
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_err", scope: !15239, file: !11911, line: 995, baseType: !224, size: 32, offset: 128)
!15256 = !DIDerivedType(tag: DW_TAG_member, name: "byte_len", scope: !15239, file: !11911, line: 996, baseType: !224, size: 32, offset: 160)
!15257 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !15239, file: !11911, line: 997, baseType: !15047, size: 64, offset: 192)
!15258 = !DIDerivedType(tag: DW_TAG_member, name: "ex", scope: !15239, file: !11911, line: 1001, baseType: !15259, size: 32, offset: 256)
!15259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15239, file: !11911, line: 998, size: 32, elements: !15260)
!15260 = !{!15261, !15262}
!15261 = !DIDerivedType(tag: DW_TAG_member, name: "imm_data", scope: !15259, file: !11911, line: 999, baseType: !2014, size: 32)
!15262 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate_rkey", scope: !15259, file: !11911, line: 1000, baseType: !224, size: 32)
!15263 = !DIDerivedType(tag: DW_TAG_member, name: "src_qp", scope: !15239, file: !11911, line: 1002, baseType: !224, size: 32, offset: 288)
!15264 = !DIDerivedType(tag: DW_TAG_member, name: "slid", scope: !15239, file: !11911, line: 1003, baseType: !224, size: 32, offset: 320)
!15265 = !DIDerivedType(tag: DW_TAG_member, name: "wc_flags", scope: !15239, file: !11911, line: 1004, baseType: !6, size: 32, offset: 352)
!15266 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_index", scope: !15239, file: !11911, line: 1005, baseType: !739, size: 16, offset: 384)
!15267 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !15239, file: !11911, line: 1006, baseType: !1398, size: 8, offset: 400)
!15268 = !DIDerivedType(tag: DW_TAG_member, name: "dlid_path_bits", scope: !15239, file: !11911, line: 1007, baseType: !1398, size: 8, offset: 408)
!15269 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !15239, file: !11911, line: 1008, baseType: !1398, size: 8, offset: 416)
!15270 = !DIDerivedType(tag: DW_TAG_member, name: "smac", scope: !15239, file: !11911, line: 1009, baseType: !10953, size: 48, offset: 424)
!15271 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_id", scope: !15239, file: !11911, line: 1010, baseType: !739, size: 16, offset: 480)
!15272 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdr_type", scope: !15239, file: !11911, line: 1011, baseType: !1398, size: 8, offset: 496)
!15273 = !DIDerivedType(tag: DW_TAG_member, name: "pool_entry", scope: !15157, file: !11911, line: 1572, baseType: !25, size: 128, offset: 512)
!15274 = !DIDerivedType(tag: DW_TAG_member, scope: !15157, file: !11911, line: 1573, baseType: !15275, size: 320, offset: 640)
!15275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15157, file: !11911, line: 1573, size: 320, elements: !15276)
!15276 = !{!15277, !15290}
!15277 = !DIDerivedType(tag: DW_TAG_member, name: "iop", scope: !15275, file: !11911, line: 1574, baseType: !15278, size: 320)
!15278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_poll", file: !15279, line: 8, size: 320, elements: !15280)
!15279 = !DIFile(filename: "./include/linux/irq_poll.h", directory: "/home/lizy2001/genbc/linux")
!15280 = !{!15281, !15282, !15283, !15284}
!15281 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !15278, file: !15279, line: 9, baseType: !25, size: 128)
!15282 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15278, file: !15279, line: 10, baseType: !130, size: 64, offset: 128)
!15283 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !15278, file: !15279, line: 11, baseType: !6, size: 32, offset: 192)
!15284 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !15278, file: !15279, line: 12, baseType: !15285, size: 64, offset: 256)
!15285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15286, size: 64)
!15286 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_poll_fn", file: !15279, line: 6, baseType: !15287)
!15287 = !DISubroutineType(types: !15288)
!15288 = !{!6, !15289, !6}
!15289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15278, size: 64)
!15290 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !15275, file: !11911, line: 1575, baseType: !1723, size: 256)
!15291 = !DIDerivedType(tag: DW_TAG_member, name: "comp_wq", scope: !15157, file: !11911, line: 1577, baseType: !2573, size: 64, offset: 960)
!15292 = !DIDerivedType(tag: DW_TAG_member, name: "dim", scope: !15157, file: !11911, line: 1578, baseType: !15293, size: 64, offset: 1024)
!15293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15294, size: 64)
!15294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dim", file: !15295, line: 102, size: 960, elements: !15296)
!15295 = !DIFile(filename: "./include/linux/dim.h", directory: "/home/lizy2001/genbc/linux")
!15296 = !{!15297, !15298, !15306, !15314, !15315, !15316, !15317, !15318, !15319, !15320, !15321, !15322}
!15297 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15294, file: !15295, line: 103, baseType: !1398, size: 8)
!15298 = !DIDerivedType(tag: DW_TAG_member, name: "prev_stats", scope: !15294, file: !15295, line: 104, baseType: !15299, size: 160, offset: 32)
!15299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dim_stats", file: !15295, line: 77, size: 160, elements: !15300)
!15300 = !{!15301, !15302, !15303, !15304, !15305}
!15301 = !DIDerivedType(tag: DW_TAG_member, name: "ppms", scope: !15299, file: !15295, line: 78, baseType: !6, size: 32)
!15302 = !DIDerivedType(tag: DW_TAG_member, name: "bpms", scope: !15299, file: !15295, line: 79, baseType: !6, size: 32, offset: 32)
!15303 = !DIDerivedType(tag: DW_TAG_member, name: "epms", scope: !15299, file: !15295, line: 80, baseType: !6, size: 32, offset: 64)
!15304 = !DIDerivedType(tag: DW_TAG_member, name: "cpms", scope: !15299, file: !15295, line: 81, baseType: !6, size: 32, offset: 96)
!15305 = !DIDerivedType(tag: DW_TAG_member, name: "cpe_ratio", scope: !15299, file: !15295, line: 82, baseType: !6, size: 32, offset: 128)
!15306 = !DIDerivedType(tag: DW_TAG_member, name: "start_sample", scope: !15294, file: !15295, line: 105, baseType: !15307, size: 192, offset: 192)
!15307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dim_sample", file: !15295, line: 59, size: 192, elements: !15308)
!15308 = !{!15309, !15310, !15311, !15312, !15313}
!15309 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !15307, file: !15295, line: 60, baseType: !1342, size: 64)
!15310 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_ctr", scope: !15307, file: !15295, line: 61, baseType: !224, size: 32, offset: 64)
!15311 = !DIDerivedType(tag: DW_TAG_member, name: "byte_ctr", scope: !15307, file: !15295, line: 62, baseType: !224, size: 32, offset: 96)
!15312 = !DIDerivedType(tag: DW_TAG_member, name: "event_ctr", scope: !15307, file: !15295, line: 63, baseType: !739, size: 16, offset: 128)
!15313 = !DIDerivedType(tag: DW_TAG_member, name: "comp_ctr", scope: !15307, file: !15295, line: 64, baseType: !224, size: 32, offset: 160)
!15314 = !DIDerivedType(tag: DW_TAG_member, name: "measuring_sample", scope: !15294, file: !15295, line: 106, baseType: !15307, size: 192, offset: 384)
!15315 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !15294, file: !15295, line: 107, baseType: !1723, size: 256, offset: 576)
!15316 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !15294, file: !15295, line: 108, baseType: !154, size: 64, offset: 832)
!15317 = !DIDerivedType(tag: DW_TAG_member, name: "profile_ix", scope: !15294, file: !15295, line: 109, baseType: !1398, size: 8, offset: 896)
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !15294, file: !15295, line: 110, baseType: !1398, size: 8, offset: 904)
!15319 = !DIDerivedType(tag: DW_TAG_member, name: "tune_state", scope: !15294, file: !15295, line: 111, baseType: !1398, size: 8, offset: 912)
!15320 = !DIDerivedType(tag: DW_TAG_member, name: "steps_right", scope: !15294, file: !15295, line: 112, baseType: !1398, size: 8, offset: 920)
!15321 = !DIDerivedType(tag: DW_TAG_member, name: "steps_left", scope: !15294, file: !15295, line: 113, baseType: !1398, size: 8, offset: 928)
!15322 = !DIDerivedType(tag: DW_TAG_member, name: "tired", scope: !15294, file: !15295, line: 114, baseType: !1398, size: 8, offset: 936)
!15323 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !15157, file: !11911, line: 1581, baseType: !1342, size: 64, offset: 1088)
!15324 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt", scope: !15157, file: !11911, line: 1582, baseType: !1398, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!15325 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !15157, file: !11911, line: 1583, baseType: !1398, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!15326 = !DIDerivedType(tag: DW_TAG_member, name: "comp_vector", scope: !15157, file: !11911, line: 1584, baseType: !194, size: 32, offset: 1184)
!15327 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !15157, file: !11911, line: 1589, baseType: !15076, size: 512, offset: 1216)
!15328 = !DIDerivedType(tag: DW_TAG_member, name: "recv_cq", scope: !15048, file: !11911, line: 1744, baseType: !15156, size: 64, offset: 192)
!15329 = !DIDerivedType(tag: DW_TAG_member, name: "mr_lock", scope: !15048, file: !11911, line: 1745, baseType: !39, offset: 256)
!15330 = !DIDerivedType(tag: DW_TAG_member, name: "mrs_used", scope: !15048, file: !11911, line: 1746, baseType: !6, size: 32, offset: 256)
!15331 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_mrs", scope: !15048, file: !11911, line: 1747, baseType: !25, size: 128, offset: 320)
!15332 = !DIDerivedType(tag: DW_TAG_member, name: "sig_mrs", scope: !15048, file: !11911, line: 1748, baseType: !25, size: 128, offset: 448)
!15333 = !DIDerivedType(tag: DW_TAG_member, name: "srq", scope: !15048, file: !11911, line: 1749, baseType: !15182, size: 64, offset: 576)
!15334 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !15048, file: !11911, line: 1750, baseType: !15205, size: 64, offset: 640)
!15335 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd_list", scope: !15048, file: !11911, line: 1751, baseType: !25, size: 128, offset: 704)
!15336 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15048, file: !11911, line: 1754, baseType: !627, size: 32, offset: 832)
!15337 = !DIDerivedType(tag: DW_TAG_member, name: "open_list", scope: !15048, file: !11911, line: 1755, baseType: !25, size: 128, offset: 896)
!15338 = !DIDerivedType(tag: DW_TAG_member, name: "real_qp", scope: !15048, file: !11911, line: 1756, baseType: !15047, size: 64, offset: 1024)
!15339 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15048, file: !11911, line: 1757, baseType: !15340, size: 64, offset: 1088)
!15340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15341, size: 64)
!15341 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uqp_object", file: !11911, line: 48, flags: DIFlagFwdDecl)
!15342 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !15048, file: !11911, line: 1758, baseType: !15169, size: 64, offset: 1152)
!15343 = !DIDerivedType(tag: DW_TAG_member, name: "qp_context", scope: !15048, file: !11911, line: 1759, baseType: !154, size: 64, offset: 1216)
!15344 = !DIDerivedType(tag: DW_TAG_member, name: "av_sgid_attr", scope: !15048, file: !11911, line: 1761, baseType: !15345, size: 64, offset: 1280)
!15345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15346, size: 64)
!15346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15347)
!15347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_gid_attr", file: !11911, line: 148, size: 320, elements: !15348)
!15348 = !{!15349, !15350, !15351, !15360, !15361, !15362}
!15349 = !DIDerivedType(tag: DW_TAG_member, name: "ndev", scope: !15347, file: !11911, line: 149, baseType: !2164, size: 64)
!15350 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15347, file: !11911, line: 150, baseType: !15032, size: 64, offset: 64)
!15351 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !15347, file: !11911, line: 151, baseType: !15352, size: 128, offset: 128)
!15352 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ib_gid", file: !11911, line: 130, size: 128, elements: !15353)
!15353 = !{!15354, !15355}
!15354 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !15352, file: !11911, line: 131, baseType: !6093, size: 128)
!15355 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !15352, file: !11911, line: 135, baseType: !15356, size: 128)
!15356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15352, file: !11911, line: 132, size: 128, elements: !15357)
!15357 = !{!15358, !15359}
!15358 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_prefix", scope: !15356, file: !11911, line: 133, baseType: !10471, size: 64)
!15359 = !DIDerivedType(tag: DW_TAG_member, name: "interface_id", scope: !15356, file: !11911, line: 134, baseType: !10471, size: 64, offset: 64)
!15360 = !DIDerivedType(tag: DW_TAG_member, name: "gid_type", scope: !15347, file: !11911, line: 152, baseType: !12009, size: 32, offset: 256)
!15361 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !15347, file: !11911, line: 153, baseType: !739, size: 16, offset: 288)
!15362 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !15347, file: !11911, line: 154, baseType: !1398, size: 8, offset: 304)
!15363 = !DIDerivedType(tag: DW_TAG_member, name: "alt_path_sgid_attr", scope: !15048, file: !11911, line: 1762, baseType: !15345, size: 64, offset: 1344)
!15364 = !DIDerivedType(tag: DW_TAG_member, name: "qp_num", scope: !15048, file: !11911, line: 1763, baseType: !224, size: 32, offset: 1408)
!15365 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_sge", scope: !15048, file: !11911, line: 1764, baseType: !224, size: 32, offset: 1440)
!15366 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_sge", scope: !15048, file: !11911, line: 1765, baseType: !224, size: 32, offset: 1472)
!15367 = !DIDerivedType(tag: DW_TAG_member, name: "qp_type", scope: !15048, file: !11911, line: 1766, baseType: !12015, size: 32, offset: 1504)
!15368 = !DIDerivedType(tag: DW_TAG_member, name: "rwq_ind_tbl", scope: !15048, file: !11911, line: 1767, baseType: !15369, size: 64, offset: 1536)
!15369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15370, size: 64)
!15370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rwq_ind_table", file: !11911, line: 1682, size: 320, elements: !15371)
!15371 = !{!15372, !15373, !15374, !15375, !15376, !15377}
!15372 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15370, file: !11911, line: 1683, baseType: !15032, size: 64)
!15373 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15370, file: !11911, line: 1684, baseType: !15059, size: 64, offset: 64)
!15374 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15370, file: !11911, line: 1685, baseType: !627, size: 32, offset: 128)
!15375 = !DIDerivedType(tag: DW_TAG_member, name: "ind_tbl_num", scope: !15370, file: !11911, line: 1686, baseType: !224, size: 32, offset: 160)
!15376 = !DIDerivedType(tag: DW_TAG_member, name: "log_ind_tbl_size", scope: !15370, file: !11911, line: 1687, baseType: !224, size: 32, offset: 192)
!15377 = !DIDerivedType(tag: DW_TAG_member, name: "ind_tbl", scope: !15370, file: !11911, line: 1688, baseType: !15378, size: 64, offset: 256)
!15378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15215, size: 64)
!15379 = !DIDerivedType(tag: DW_TAG_member, name: "qp_sec", scope: !15048, file: !11911, line: 1768, baseType: !15380, size: 64, offset: 1600)
!15380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15381, size: 64)
!15381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_security", file: !11911, line: 1719, size: 896, elements: !15382)
!15382 = !{!15383, !15384, !15385, !15386, !15400, !15401, !15402, !15403, !15404, !15405}
!15383 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !15381, file: !11911, line: 1720, baseType: !15047, size: 64)
!15384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !15381, file: !11911, line: 1721, baseType: !15032, size: 64, offset: 64)
!15385 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !15381, file: !11911, line: 1723, baseType: !553, size: 192, offset: 128)
!15386 = !DIDerivedType(tag: DW_TAG_member, name: "ports_pkeys", scope: !15381, file: !11911, line: 1724, baseType: !15387, size: 64, offset: 320)
!15387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15388, size: 64)
!15388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ports_pkeys", file: !11911, line: 1714, size: 768, elements: !15389)
!15389 = !{!15390, !15399}
!15390 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !15388, file: !11911, line: 1715, baseType: !15391, size: 384)
!15391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_pkey", file: !11911, line: 1705, size: 384, elements: !15392)
!15392 = !{!15393, !15394, !15395, !15396, !15397, !15398}
!15393 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15391, file: !11911, line: 1706, baseType: !12039, size: 32)
!15394 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_index", scope: !15391, file: !11911, line: 1707, baseType: !739, size: 16, offset: 32)
!15395 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !15391, file: !11911, line: 1708, baseType: !1398, size: 8, offset: 48)
!15396 = !DIDerivedType(tag: DW_TAG_member, name: "qp_list", scope: !15391, file: !11911, line: 1709, baseType: !25, size: 128, offset: 64)
!15397 = !DIDerivedType(tag: DW_TAG_member, name: "to_error_list", scope: !15391, file: !11911, line: 1710, baseType: !25, size: 128, offset: 192)
!15398 = !DIDerivedType(tag: DW_TAG_member, name: "sec", scope: !15391, file: !11911, line: 1711, baseType: !15380, size: 64, offset: 320)
!15399 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !15388, file: !11911, line: 1716, baseType: !15391, size: 384, offset: 384)
!15400 = !DIDerivedType(tag: DW_TAG_member, name: "shared_qp_list", scope: !15381, file: !11911, line: 1728, baseType: !25, size: 128, offset: 384)
!15401 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !15381, file: !11911, line: 1729, baseType: !154, size: 64, offset: 512)
!15402 = !DIDerivedType(tag: DW_TAG_member, name: "destroying", scope: !15381, file: !11911, line: 1730, baseType: !299, size: 8, offset: 576)
!15403 = !DIDerivedType(tag: DW_TAG_member, name: "error_list_count", scope: !15381, file: !11911, line: 1731, baseType: !627, size: 32, offset: 608)
!15404 = !DIDerivedType(tag: DW_TAG_member, name: "error_complete", scope: !15381, file: !11911, line: 1732, baseType: !1784, size: 192, offset: 640)
!15405 = !DIDerivedType(tag: DW_TAG_member, name: "error_comps_pending", scope: !15381, file: !11911, line: 1733, baseType: !6, size: 32, offset: 832)
!15406 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !15048, file: !11911, line: 1769, baseType: !1398, size: 8, offset: 1664)
!15407 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_en", scope: !15048, file: !11911, line: 1771, baseType: !299, size: 8, offset: 1672)
!15408 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !15048, file: !11911, line: 1775, baseType: !15076, size: 512, offset: 1728)
!15409 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !15048, file: !11911, line: 1778, baseType: !15410, size: 64, offset: 2240)
!15410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15411, size: 64)
!15411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_counter", file: !15412, line: 35, size: 1088, elements: !15413)
!15412 = !DIFile(filename: "./include/rdma/rdma_counter.h", directory: "/home/lizy2001/genbc/linux")
!15413 = !{!15414, !15415, !15416, !15417, !15418, !15427, !15428, !15440}
!15414 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !15411, file: !15412, line: 36, baseType: !15076, size: 512)
!15415 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15411, file: !15412, line: 37, baseType: !15032, size: 64, offset: 512)
!15416 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !15411, file: !15412, line: 38, baseType: !368, size: 32, offset: 576)
!15417 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !15411, file: !15412, line: 39, baseType: !1551, size: 32, offset: 608)
!15418 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !15411, file: !15412, line: 40, baseType: !15419, size: 96, offset: 640)
!15419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_counter_mode", file: !15412, line: 22, size: 96, elements: !15420)
!15420 = !{!15421, !15422, !15423}
!15421 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !15419, file: !15412, line: 23, baseType: !12044, size: 32)
!15422 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !15419, file: !15412, line: 24, baseType: !12051, size: 32, offset: 32)
!15423 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !15419, file: !15412, line: 25, baseType: !15424, size: 32, offset: 64)
!15424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "auto_mode_param", file: !15412, line: 18, size: 32, elements: !15425)
!15425 = !{!15426}
!15426 = !DIDerivedType(tag: DW_TAG_member, name: "qp_type", scope: !15424, file: !15412, line: 19, baseType: !6, size: 32)
!15427 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15411, file: !15412, line: 41, baseType: !553, size: 192, offset: 768)
!15428 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !15411, file: !15412, line: 42, baseType: !15429, size: 64, offset: 960)
!15429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15430, size: 64)
!15430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_hw_stats", file: !11911, line: 564, size: 448, elements: !15431)
!15431 = !{!15432, !15433, !15434, !15435, !15437, !15438}
!15432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15430, file: !11911, line: 565, baseType: !553, size: 192)
!15433 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !15430, file: !11911, line: 566, baseType: !130, size: 64, offset: 192)
!15434 = !DIDerivedType(tag: DW_TAG_member, name: "lifespan", scope: !15430, file: !11911, line: 567, baseType: !130, size: 64, offset: 256)
!15435 = !DIDerivedType(tag: DW_TAG_member, name: "names", scope: !15430, file: !11911, line: 568, baseType: !15436, size: 64, offset: 320)
!15436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!15437 = !DIDerivedType(tag: DW_TAG_member, name: "num_counters", scope: !15430, file: !11911, line: 569, baseType: !6, size: 32, offset: 384)
!15438 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !15430, file: !11911, line: 570, baseType: !15439, offset: 448)
!15439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, elements: !2184)
!15440 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !15411, file: !15412, line: 43, baseType: !1398, size: 8, offset: 1024)
!15441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15442, size: 64)
!15442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15443)
!15443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_send_wr", file: !11911, line: 1350, size: 320, elements: !15444)
!15444 = !{!15445, !15447, !15452, !15459, !15460, !15461, !15462}
!15445 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15443, file: !11911, line: 1351, baseType: !15446, size: 64)
!15446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15443, size: 64)
!15447 = !DIDerivedType(tag: DW_TAG_member, scope: !15443, file: !11911, line: 1352, baseType: !15448, size: 64, offset: 64)
!15448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15443, file: !11911, line: 1352, size: 64, elements: !15449)
!15449 = !{!15450, !15451}
!15450 = !DIDerivedType(tag: DW_TAG_member, name: "wr_id", scope: !15448, file: !11911, line: 1353, baseType: !230, size: 64)
!15451 = !DIDerivedType(tag: DW_TAG_member, name: "wr_cqe", scope: !15448, file: !11911, line: 1354, baseType: !15246, size: 64)
!15452 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !15443, file: !11911, line: 1356, baseType: !15453, size: 64, offset: 128)
!15453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15454, size: 64)
!15454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sge", file: !11911, line: 1340, size: 128, elements: !15455)
!15455 = !{!15456, !15457, !15458}
!15456 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !15454, file: !11911, line: 1341, baseType: !230, size: 64)
!15457 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !15454, file: !11911, line: 1342, baseType: !224, size: 32, offset: 64)
!15458 = !DIDerivedType(tag: DW_TAG_member, name: "lkey", scope: !15454, file: !11911, line: 1343, baseType: !224, size: 32, offset: 96)
!15459 = !DIDerivedType(tag: DW_TAG_member, name: "num_sge", scope: !15443, file: !11911, line: 1357, baseType: !6, size: 32, offset: 192)
!15460 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !15443, file: !11911, line: 1358, baseType: !12055, size: 32, offset: 224)
!15461 = !DIDerivedType(tag: DW_TAG_member, name: "send_flags", scope: !15443, file: !11911, line: 1359, baseType: !6, size: 32, offset: 256)
!15462 = !DIDerivedType(tag: DW_TAG_member, name: "ex", scope: !15443, file: !11911, line: 1363, baseType: !15463, size: 32, offset: 288)
!15463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15443, file: !11911, line: 1360, size: 32, elements: !15464)
!15464 = !{!15465, !15466}
!15465 = !DIDerivedType(tag: DW_TAG_member, name: "imm_data", scope: !15463, file: !11911, line: 1361, baseType: !2014, size: 32)
!15466 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate_rkey", scope: !15463, file: !11911, line: 1362, baseType: !224, size: 32)
!15467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15441, size: 64)
!15468 = !DIDerivedType(tag: DW_TAG_member, name: "post_recv", scope: !15037, file: !11911, line: 2294, baseType: !15469, size: 64, offset: 256)
!15469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15470, size: 64)
!15470 = !DISubroutineType(types: !15471)
!15471 = !{!6, !15047, !15472, !15485}
!15472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15473, size: 64)
!15473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15474)
!15474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_recv_wr", file: !11911, line: 1421, size: 256, elements: !15475)
!15475 = !{!15476, !15478, !15483, !15484}
!15476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15474, file: !11911, line: 1422, baseType: !15477, size: 64)
!15477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15474, size: 64)
!15478 = !DIDerivedType(tag: DW_TAG_member, scope: !15474, file: !11911, line: 1423, baseType: !15479, size: 64, offset: 64)
!15479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15474, file: !11911, line: 1423, size: 64, elements: !15480)
!15480 = !{!15481, !15482}
!15481 = !DIDerivedType(tag: DW_TAG_member, name: "wr_id", scope: !15479, file: !11911, line: 1424, baseType: !230, size: 64)
!15482 = !DIDerivedType(tag: DW_TAG_member, name: "wr_cqe", scope: !15479, file: !11911, line: 1425, baseType: !15246, size: 64)
!15483 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !15474, file: !11911, line: 1427, baseType: !15453, size: 64, offset: 128)
!15484 = !DIDerivedType(tag: DW_TAG_member, name: "num_sge", scope: !15474, file: !11911, line: 1428, baseType: !6, size: 32, offset: 192)
!15485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15472, size: 64)
!15486 = !DIDerivedType(tag: DW_TAG_member, name: "drain_rq", scope: !15037, file: !11911, line: 2296, baseType: !15487, size: 64, offset: 320)
!15487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15488, size: 64)
!15488 = !DISubroutineType(types: !15489)
!15489 = !{null, !15047}
!15490 = !DIDerivedType(tag: DW_TAG_member, name: "drain_sq", scope: !15037, file: !11911, line: 2297, baseType: !15487, size: 64, offset: 384)
!15491 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cq", scope: !15037, file: !11911, line: 2298, baseType: !15492, size: 64, offset: 448)
!15492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15493, size: 64)
!15493 = !DISubroutineType(types: !15494)
!15494 = !{!6, !15156, !6, !15238}
!15495 = !DIDerivedType(tag: DW_TAG_member, name: "peek_cq", scope: !15037, file: !11911, line: 2299, baseType: !15496, size: 64, offset: 512)
!15496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15497, size: 64)
!15497 = !DISubroutineType(types: !15498)
!15498 = !{!6, !15156, !6}
!15499 = !DIDerivedType(tag: DW_TAG_member, name: "req_notify_cq", scope: !15037, file: !11911, line: 2300, baseType: !15500, size: 64, offset: 576)
!15500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15501, size: 64)
!15501 = !DISubroutineType(types: !15502)
!15502 = !{!6, !15156, !12083}
!15503 = !DIDerivedType(tag: DW_TAG_member, name: "req_ncomp_notif", scope: !15037, file: !11911, line: 2301, baseType: !15496, size: 64, offset: 640)
!15504 = !DIDerivedType(tag: DW_TAG_member, name: "post_srq_recv", scope: !15037, file: !11911, line: 2302, baseType: !15505, size: 64, offset: 704)
!15505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15506, size: 64)
!15506 = !DISubroutineType(types: !15507)
!15507 = !{!6, !15182, !15472, !15485}
!15508 = !DIDerivedType(tag: DW_TAG_member, name: "process_mad", scope: !15037, file: !11911, line: 2305, baseType: !15509, size: 64, offset: 768)
!15509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15510, size: 64)
!15510 = !DISubroutineType(types: !15511)
!15511 = !{!6, !15032, !6, !1398, !15512, !15514, !15524, !15527, !1769, !3999}
!15512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15513, size: 64)
!15513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15239)
!15514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15515, size: 64)
!15515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15516)
!15516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_grh", file: !11911, line: 765, size: 320, elements: !15517)
!15517 = !{!15518, !15519, !15520, !15521, !15522, !15523}
!15518 = !DIDerivedType(tag: DW_TAG_member, name: "version_tclass_flow", scope: !15516, file: !11911, line: 766, baseType: !2014, size: 32)
!15519 = !DIDerivedType(tag: DW_TAG_member, name: "paylen", scope: !15516, file: !11911, line: 767, baseType: !2032, size: 16, offset: 32)
!15520 = !DIDerivedType(tag: DW_TAG_member, name: "next_hdr", scope: !15516, file: !11911, line: 768, baseType: !1398, size: 8, offset: 48)
!15521 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !15516, file: !11911, line: 769, baseType: !1398, size: 8, offset: 56)
!15522 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !15516, file: !11911, line: 770, baseType: !15352, size: 128, offset: 64)
!15523 = !DIDerivedType(tag: DW_TAG_member, name: "dgid", scope: !15516, file: !11911, line: 771, baseType: !15352, size: 128, offset: 192)
!15524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15525, size: 64)
!15525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15526)
!15526 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mad", file: !11911, line: 2133, flags: DIFlagFwdDecl)
!15527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15526, size: 64)
!15528 = !DIDerivedType(tag: DW_TAG_member, name: "query_device", scope: !15037, file: !11911, line: 2310, baseType: !15529, size: 64, offset: 832)
!15529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15530, size: 64)
!15530 = !DISubroutineType(types: !15531)
!15531 = !{!6, !15032, !15532, !15614}
!15532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15533, size: 64)
!15533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device_attr", file: !11911, line: 378, size: 2368, elements: !15534)
!15534 = !{!15535, !15536, !15537, !15538, !15539, !15540, !15541, !15542, !15543, !15544, !15545, !15546, !15547, !15548, !15549, !15550, !15551, !15552, !15553, !15554, !15555, !15556, !15557, !15558, !15559, !15560, !15561, !15562, !15563, !15564, !15565, !15566, !15567, !15568, !15569, !15570, !15571, !15572, !15573, !15574, !15575, !15576, !15577, !15589, !15590, !15591, !15597, !15598, !15599, !15607, !15612, !15613}
!15535 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver", scope: !15533, file: !11911, line: 379, baseType: !230, size: 64)
!15536 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !15533, file: !11911, line: 380, baseType: !10471, size: 64, offset: 64)
!15537 = !DIDerivedType(tag: DW_TAG_member, name: "max_mr_size", scope: !15533, file: !11911, line: 381, baseType: !230, size: 64, offset: 128)
!15538 = !DIDerivedType(tag: DW_TAG_member, name: "page_size_cap", scope: !15533, file: !11911, line: 382, baseType: !230, size: 64, offset: 192)
!15539 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !15533, file: !11911, line: 383, baseType: !224, size: 32, offset: 256)
!15540 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_part_id", scope: !15533, file: !11911, line: 384, baseType: !224, size: 32, offset: 288)
!15541 = !DIDerivedType(tag: DW_TAG_member, name: "hw_ver", scope: !15533, file: !11911, line: 385, baseType: !224, size: 32, offset: 320)
!15542 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp", scope: !15533, file: !11911, line: 386, baseType: !6, size: 32, offset: 352)
!15543 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp_wr", scope: !15533, file: !11911, line: 387, baseType: !6, size: 32, offset: 384)
!15544 = !DIDerivedType(tag: DW_TAG_member, name: "device_cap_flags", scope: !15533, file: !11911, line: 388, baseType: !230, size: 64, offset: 448)
!15545 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_sge", scope: !15533, file: !11911, line: 389, baseType: !6, size: 32, offset: 512)
!15546 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_sge", scope: !15533, file: !11911, line: 390, baseType: !6, size: 32, offset: 544)
!15547 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge_rd", scope: !15533, file: !11911, line: 391, baseType: !6, size: 32, offset: 576)
!15548 = !DIDerivedType(tag: DW_TAG_member, name: "max_cq", scope: !15533, file: !11911, line: 392, baseType: !6, size: 32, offset: 608)
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "max_cqe", scope: !15533, file: !11911, line: 393, baseType: !6, size: 32, offset: 640)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "max_mr", scope: !15533, file: !11911, line: 394, baseType: !6, size: 32, offset: 672)
!15551 = !DIDerivedType(tag: DW_TAG_member, name: "max_pd", scope: !15533, file: !11911, line: 395, baseType: !6, size: 32, offset: 704)
!15552 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp_rd_atom", scope: !15533, file: !11911, line: 396, baseType: !6, size: 32, offset: 736)
!15553 = !DIDerivedType(tag: DW_TAG_member, name: "max_ee_rd_atom", scope: !15533, file: !11911, line: 397, baseType: !6, size: 32, offset: 768)
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "max_res_rd_atom", scope: !15533, file: !11911, line: 398, baseType: !6, size: 32, offset: 800)
!15555 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp_init_rd_atom", scope: !15533, file: !11911, line: 399, baseType: !6, size: 32, offset: 832)
!15556 = !DIDerivedType(tag: DW_TAG_member, name: "max_ee_init_rd_atom", scope: !15533, file: !11911, line: 400, baseType: !6, size: 32, offset: 864)
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_cap", scope: !15533, file: !11911, line: 401, baseType: !12089, size: 32, offset: 896)
!15558 = !DIDerivedType(tag: DW_TAG_member, name: "masked_atomic_cap", scope: !15533, file: !11911, line: 402, baseType: !12089, size: 32, offset: 928)
!15559 = !DIDerivedType(tag: DW_TAG_member, name: "max_ee", scope: !15533, file: !11911, line: 403, baseType: !6, size: 32, offset: 960)
!15560 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdd", scope: !15533, file: !11911, line: 404, baseType: !6, size: 32, offset: 992)
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "max_mw", scope: !15533, file: !11911, line: 405, baseType: !6, size: 32, offset: 1024)
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "max_raw_ipv6_qp", scope: !15533, file: !11911, line: 406, baseType: !6, size: 32, offset: 1056)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "max_raw_ethy_qp", scope: !15533, file: !11911, line: 407, baseType: !6, size: 32, offset: 1088)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "max_mcast_grp", scope: !15533, file: !11911, line: 408, baseType: !6, size: 32, offset: 1120)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "max_mcast_qp_attach", scope: !15533, file: !11911, line: 409, baseType: !6, size: 32, offset: 1152)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "max_total_mcast_qp_attach", scope: !15533, file: !11911, line: 410, baseType: !6, size: 32, offset: 1184)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "max_ah", scope: !15533, file: !11911, line: 411, baseType: !6, size: 32, offset: 1216)
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "max_srq", scope: !15533, file: !11911, line: 412, baseType: !6, size: 32, offset: 1248)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "max_srq_wr", scope: !15533, file: !11911, line: 413, baseType: !6, size: 32, offset: 1280)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "max_srq_sge", scope: !15533, file: !11911, line: 414, baseType: !6, size: 32, offset: 1312)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "max_fast_reg_page_list_len", scope: !15533, file: !11911, line: 415, baseType: !194, size: 32, offset: 1344)
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "max_pi_fast_reg_page_list_len", scope: !15533, file: !11911, line: 416, baseType: !194, size: 32, offset: 1376)
!15573 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkeys", scope: !15533, file: !11911, line: 417, baseType: !739, size: 16, offset: 1408)
!15574 = !DIDerivedType(tag: DW_TAG_member, name: "local_ca_ack_delay", scope: !15533, file: !11911, line: 418, baseType: !1398, size: 8, offset: 1424)
!15575 = !DIDerivedType(tag: DW_TAG_member, name: "sig_prot_cap", scope: !15533, file: !11911, line: 419, baseType: !6, size: 32, offset: 1440)
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "sig_guard_cap", scope: !15533, file: !11911, line: 420, baseType: !6, size: 32, offset: 1472)
!15577 = !DIDerivedType(tag: DW_TAG_member, name: "odp_caps", scope: !15533, file: !11911, line: 421, baseType: !15578, size: 192, offset: 1536)
!15578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_odp_caps", file: !11911, line: 313, size: 192, elements: !15579)
!15579 = !{!15580, !15582}
!15580 = !DIDerivedType(tag: DW_TAG_member, name: "general_caps", scope: !15578, file: !11911, line: 314, baseType: !15581, size: 64)
!15581 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !26, line: 107, baseType: !230)
!15582 = !DIDerivedType(tag: DW_TAG_member, name: "per_transport_caps", scope: !15578, file: !11911, line: 320, baseType: !15583, size: 128, offset: 64)
!15583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15578, file: !11911, line: 315, size: 128, elements: !15584)
!15584 = !{!15585, !15586, !15587, !15588}
!15585 = !DIDerivedType(tag: DW_TAG_member, name: "rc_odp_caps", scope: !15583, file: !11911, line: 316, baseType: !368, size: 32)
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "uc_odp_caps", scope: !15583, file: !11911, line: 317, baseType: !368, size: 32, offset: 32)
!15587 = !DIDerivedType(tag: DW_TAG_member, name: "ud_odp_caps", scope: !15583, file: !11911, line: 318, baseType: !368, size: 32, offset: 64)
!15588 = !DIDerivedType(tag: DW_TAG_member, name: "xrc_odp_caps", scope: !15583, file: !11911, line: 319, baseType: !368, size: 32, offset: 96)
!15589 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp_mask", scope: !15533, file: !11911, line: 422, baseType: !15581, size: 64, offset: 1728)
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "hca_core_clock", scope: !15533, file: !11911, line: 423, baseType: !15581, size: 64, offset: 1792)
!15591 = !DIDerivedType(tag: DW_TAG_member, name: "rss_caps", scope: !15533, file: !11911, line: 424, baseType: !15592, size: 96, offset: 1856)
!15592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rss_caps", file: !11911, line: 323, size: 96, elements: !15593)
!15593 = !{!15594, !15595, !15596}
!15594 = !DIDerivedType(tag: DW_TAG_member, name: "supported_qpts", scope: !15592, file: !11911, line: 328, baseType: !224, size: 32)
!15595 = !DIDerivedType(tag: DW_TAG_member, name: "max_rwq_indirection_tables", scope: !15592, file: !11911, line: 329, baseType: !224, size: 32, offset: 32)
!15596 = !DIDerivedType(tag: DW_TAG_member, name: "max_rwq_indirection_table_size", scope: !15592, file: !11911, line: 330, baseType: !224, size: 32, offset: 64)
!15597 = !DIDerivedType(tag: DW_TAG_member, name: "max_wq_type_rq", scope: !15533, file: !11911, line: 425, baseType: !224, size: 32, offset: 1952)
!15598 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_caps", scope: !15533, file: !11911, line: 426, baseType: !224, size: 32, offset: 1984)
!15599 = !DIDerivedType(tag: DW_TAG_member, name: "tm_caps", scope: !15533, file: !11911, line: 427, baseType: !15600, size: 160, offset: 2016)
!15600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_tm_caps", file: !11911, line: 338, size: 160, elements: !15601)
!15601 = !{!15602, !15603, !15604, !15605, !15606}
!15602 = !DIDerivedType(tag: DW_TAG_member, name: "max_rndv_hdr_size", scope: !15600, file: !11911, line: 340, baseType: !224, size: 32)
!15603 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_tags", scope: !15600, file: !11911, line: 342, baseType: !224, size: 32, offset: 32)
!15604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15600, file: !11911, line: 344, baseType: !224, size: 32, offset: 64)
!15605 = !DIDerivedType(tag: DW_TAG_member, name: "max_ops", scope: !15600, file: !11911, line: 346, baseType: !224, size: 32, offset: 96)
!15606 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge", scope: !15600, file: !11911, line: 348, baseType: !224, size: 32, offset: 128)
!15607 = !DIDerivedType(tag: DW_TAG_member, name: "cq_caps", scope: !15533, file: !11911, line: 428, baseType: !15608, size: 32, offset: 2176)
!15608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cq_caps", file: !11911, line: 361, size: 32, elements: !15609)
!15609 = !{!15610, !15611}
!15610 = !DIDerivedType(tag: DW_TAG_member, name: "max_cq_moderation_count", scope: !15608, file: !11911, line: 362, baseType: !739, size: 16)
!15611 = !DIDerivedType(tag: DW_TAG_member, name: "max_cq_moderation_period", scope: !15608, file: !11911, line: 363, baseType: !739, size: 16, offset: 16)
!15612 = !DIDerivedType(tag: DW_TAG_member, name: "max_dm_size", scope: !15533, file: !11911, line: 429, baseType: !230, size: 64, offset: 2240)
!15613 = !DIDerivedType(tag: DW_TAG_member, name: "max_sgl_rd", scope: !15533, file: !11911, line: 431, baseType: !224, size: 32, offset: 2304)
!15614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15615, size: 64)
!15615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_udata", file: !11911, line: 1511, size: 256, elements: !15616)
!15616 = !{!15617, !15618, !15619, !15620}
!15617 = !DIDerivedType(tag: DW_TAG_member, name: "inbuf", scope: !15615, file: !11911, line: 1512, baseType: !2449, size: 64)
!15618 = !DIDerivedType(tag: DW_TAG_member, name: "outbuf", scope: !15615, file: !11911, line: 1513, baseType: !154, size: 64, offset: 64)
!15619 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !15615, file: !11911, line: 1514, baseType: !127, size: 64, offset: 128)
!15620 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !15615, file: !11911, line: 1515, baseType: !127, size: 64, offset: 192)
!15621 = !DIDerivedType(tag: DW_TAG_member, name: "modify_device", scope: !15037, file: !11911, line: 2313, baseType: !15622, size: 64, offset: 896)
!15622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15623, size: 64)
!15623 = !DISubroutineType(types: !15624)
!15624 = !{!6, !15032, !6, !15625}
!15625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15626, size: 64)
!15626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device_modify", file: !11911, line: 688, size: 576, elements: !15627)
!15627 = !{!15628, !15629}
!15628 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !15626, file: !11911, line: 689, baseType: !230, size: 64)
!15629 = !DIDerivedType(tag: DW_TAG_member, name: "node_desc", scope: !15626, file: !11911, line: 690, baseType: !7617, size: 512, offset: 64)
!15630 = !DIDerivedType(tag: DW_TAG_member, name: "get_dev_fw_str", scope: !15037, file: !11911, line: 2315, baseType: !15631, size: 64, offset: 960)
!15631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15632, size: 64)
!15632 = !DISubroutineType(types: !15633)
!15633 = !{null, !15032, !80}
!15634 = !DIDerivedType(tag: DW_TAG_member, name: "get_vector_affinity", scope: !15037, file: !11911, line: 2316, baseType: !15635, size: 64, offset: 1024)
!15635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15636, size: 64)
!15636 = !DISubroutineType(types: !15637)
!15637 = !{!15638, !15032, !6}
!15638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15639, size: 64)
!15639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1413)
!15640 = !DIDerivedType(tag: DW_TAG_member, name: "query_port", scope: !15037, file: !11911, line: 2318, baseType: !15641, size: 64, offset: 1088)
!15641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15642, size: 64)
!15642 = !DISubroutineType(types: !15643)
!15643 = !{!6, !15032, !1398, !15644}
!15644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15645, size: 64)
!15645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_attr", file: !11911, line: 654, size: 576, elements: !15646)
!15646 = !{!15647, !15648, !15649, !15650, !15651, !15652, !15653, !15654, !15655, !15656, !15657, !15658, !15659, !15660, !15661, !15662, !15663, !15664, !15665, !15666, !15667, !15668, !15669}
!15647 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_prefix", scope: !15645, file: !11911, line: 655, baseType: !230, size: 64)
!15648 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15645, file: !11911, line: 656, baseType: !12094, size: 32, offset: 64)
!15649 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !15645, file: !11911, line: 657, baseType: !12102, size: 32, offset: 96)
!15650 = !DIDerivedType(tag: DW_TAG_member, name: "active_mtu", scope: !15645, file: !11911, line: 658, baseType: !12102, size: 32, offset: 128)
!15651 = !DIDerivedType(tag: DW_TAG_member, name: "phys_mtu", scope: !15645, file: !11911, line: 659, baseType: !224, size: 32, offset: 160)
!15652 = !DIDerivedType(tag: DW_TAG_member, name: "gid_tbl_len", scope: !15645, file: !11911, line: 660, baseType: !6, size: 32, offset: 192)
!15653 = !DIDerivedType(tag: DW_TAG_member, name: "ip_gids", scope: !15645, file: !11911, line: 661, baseType: !194, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!15654 = !DIDerivedType(tag: DW_TAG_member, name: "port_cap_flags", scope: !15645, file: !11911, line: 663, baseType: !224, size: 32, offset: 256)
!15655 = !DIDerivedType(tag: DW_TAG_member, name: "max_msg_sz", scope: !15645, file: !11911, line: 664, baseType: !224, size: 32, offset: 288)
!15656 = !DIDerivedType(tag: DW_TAG_member, name: "bad_pkey_cntr", scope: !15645, file: !11911, line: 665, baseType: !224, size: 32, offset: 320)
!15657 = !DIDerivedType(tag: DW_TAG_member, name: "qkey_viol_cntr", scope: !15645, file: !11911, line: 666, baseType: !224, size: 32, offset: 352)
!15658 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_tbl_len", scope: !15645, file: !11911, line: 667, baseType: !739, size: 16, offset: 384)
!15659 = !DIDerivedType(tag: DW_TAG_member, name: "sm_lid", scope: !15645, file: !11911, line: 668, baseType: !224, size: 32, offset: 416)
!15660 = !DIDerivedType(tag: DW_TAG_member, name: "lid", scope: !15645, file: !11911, line: 669, baseType: !224, size: 32, offset: 448)
!15661 = !DIDerivedType(tag: DW_TAG_member, name: "lmc", scope: !15645, file: !11911, line: 670, baseType: !1398, size: 8, offset: 480)
!15662 = !DIDerivedType(tag: DW_TAG_member, name: "max_vl_num", scope: !15645, file: !11911, line: 671, baseType: !1398, size: 8, offset: 488)
!15663 = !DIDerivedType(tag: DW_TAG_member, name: "sm_sl", scope: !15645, file: !11911, line: 672, baseType: !1398, size: 8, offset: 496)
!15664 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_timeout", scope: !15645, file: !11911, line: 673, baseType: !1398, size: 8, offset: 504)
!15665 = !DIDerivedType(tag: DW_TAG_member, name: "init_type_reply", scope: !15645, file: !11911, line: 674, baseType: !1398, size: 8, offset: 512)
!15666 = !DIDerivedType(tag: DW_TAG_member, name: "active_width", scope: !15645, file: !11911, line: 675, baseType: !1398, size: 8, offset: 520)
!15667 = !DIDerivedType(tag: DW_TAG_member, name: "active_speed", scope: !15645, file: !11911, line: 676, baseType: !739, size: 16, offset: 528)
!15668 = !DIDerivedType(tag: DW_TAG_member, name: "phys_state", scope: !15645, file: !11911, line: 677, baseType: !1398, size: 8, offset: 544)
!15669 = !DIDerivedType(tag: DW_TAG_member, name: "port_cap_flags2", scope: !15645, file: !11911, line: 678, baseType: !739, size: 16, offset: 560)
!15670 = !DIDerivedType(tag: DW_TAG_member, name: "modify_port", scope: !15037, file: !11911, line: 2320, baseType: !15671, size: 64, offset: 1152)
!15671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15672, size: 64)
!15672 = !DISubroutineType(types: !15673)
!15673 = !{!6, !15032, !1398, !6, !15674}
!15674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15675, size: 64)
!15675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_modify", file: !11911, line: 700, size: 96, elements: !15676)
!15676 = !{!15677, !15678, !15679}
!15677 = !DIDerivedType(tag: DW_TAG_member, name: "set_port_cap_mask", scope: !15675, file: !11911, line: 701, baseType: !224, size: 32)
!15678 = !DIDerivedType(tag: DW_TAG_member, name: "clr_port_cap_mask", scope: !15675, file: !11911, line: 702, baseType: !224, size: 32, offset: 32)
!15679 = !DIDerivedType(tag: DW_TAG_member, name: "init_type", scope: !15675, file: !11911, line: 703, baseType: !1398, size: 8, offset: 64)
!15680 = !DIDerivedType(tag: DW_TAG_member, name: "get_port_immutable", scope: !15037, file: !11911, line: 2329, baseType: !15681, size: 64, offset: 1216)
!15681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15682, size: 64)
!15682 = !DISubroutineType(types: !15683)
!15683 = !{!6, !15032, !1398, !15684}
!15684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15685, size: 64)
!15685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_immutable", file: !11911, line: 2157, size: 128, elements: !15686)
!15686 = !{!15687, !15688, !15689, !15690}
!15687 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_tbl_len", scope: !15685, file: !11911, line: 2158, baseType: !6, size: 32)
!15688 = !DIDerivedType(tag: DW_TAG_member, name: "gid_tbl_len", scope: !15685, file: !11911, line: 2159, baseType: !6, size: 32, offset: 32)
!15689 = !DIDerivedType(tag: DW_TAG_member, name: "core_cap_flags", scope: !15685, file: !11911, line: 2160, baseType: !224, size: 32, offset: 64)
!15690 = !DIDerivedType(tag: DW_TAG_member, name: "max_mad_size", scope: !15685, file: !11911, line: 2161, baseType: !224, size: 32, offset: 96)
!15691 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_layer", scope: !15037, file: !11911, line: 2331, baseType: !15692, size: 64, offset: 1280)
!15692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15693, size: 64)
!15693 = !DISubroutineType(types: !15694)
!15694 = !{!12109, !15032, !1398}
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "get_netdev", scope: !15037, file: !11911, line: 2341, baseType: !15696, size: 64, offset: 1344)
!15696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15697, size: 64)
!15697 = !DISubroutineType(types: !15698)
!15698 = !{!2164, !15032, !1398}
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_rdma_netdev", scope: !15037, file: !11911, line: 2348, baseType: !15700, size: 64, offset: 1408)
!15700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15701, size: 64)
!15701 = !DISubroutineType(types: !15702)
!15702 = !{!2164, !15032, !1398, !12114, !21, !236, !2261}
!15703 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_netdev_get_params", scope: !15037, file: !11911, line: 2353, baseType: !15704, size: 64, offset: 1472)
!15704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15705, size: 64)
!15705 = !DISubroutineType(types: !15706)
!15706 = !{!6, !15032, !1398, !12114, !15707}
!15707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15708, size: 64)
!15708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_netdev_alloc_params", file: !11911, line: 2217, size: 256, elements: !15709)
!15709 = !{!15710, !15711, !15712, !15713, !15714}
!15710 = !DIDerivedType(tag: DW_TAG_member, name: "sizeof_priv", scope: !15708, file: !11911, line: 2218, baseType: !127, size: 64)
!15711 = !DIDerivedType(tag: DW_TAG_member, name: "txqs", scope: !15708, file: !11911, line: 2219, baseType: !194, size: 32, offset: 64)
!15712 = !DIDerivedType(tag: DW_TAG_member, name: "rxqs", scope: !15708, file: !11911, line: 2220, baseType: !194, size: 32, offset: 96)
!15713 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !15708, file: !11911, line: 2221, baseType: !154, size: 64, offset: 128)
!15714 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rdma_netdev", scope: !15708, file: !11911, line: 2223, baseType: !15715, size: 64, offset: 192)
!15715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15716, size: 64)
!15716 = !DISubroutineType(types: !15717)
!15717 = !{!6, !15032, !1398, !2164, !154}
!15718 = !DIDerivedType(tag: DW_TAG_member, name: "query_gid", scope: !15037, file: !11911, line: 2361, baseType: !15719, size: 64, offset: 1536)
!15719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15720, size: 64)
!15720 = !DISubroutineType(types: !15721)
!15721 = !{!6, !15032, !1398, !6, !15722}
!15722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15352, size: 64)
!15723 = !DIDerivedType(tag: DW_TAG_member, name: "add_gid", scope: !15037, file: !11911, line: 2376, baseType: !15724, size: 64, offset: 1600)
!15724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15725, size: 64)
!15725 = !DISubroutineType(types: !15726)
!15726 = !{!6, !15345, !701}
!15727 = !DIDerivedType(tag: DW_TAG_member, name: "del_gid", scope: !15037, file: !11911, line: 2385, baseType: !15724, size: 64, offset: 1664)
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "query_pkey", scope: !15037, file: !11911, line: 2386, baseType: !15729, size: 64, offset: 1728)
!15729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15730, size: 64)
!15730 = !DISubroutineType(types: !15731)
!15731 = !{!6, !15032, !1398, !739, !3999}
!15732 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_ucontext", scope: !15037, file: !11911, line: 2388, baseType: !15733, size: 64, offset: 1792)
!15733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15734, size: 64)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{!6, !15067, !15614}
!15736 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_ucontext", scope: !15037, file: !11911, line: 2390, baseType: !15737, size: 64, offset: 1856)
!15737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15738, size: 64)
!15738 = !DISubroutineType(types: !15739)
!15739 = !{null, !15067}
!15740 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !15037, file: !11911, line: 2391, baseType: !15741, size: 64, offset: 1920)
!15741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15742, size: 64)
!15742 = !DISubroutineType(types: !15743)
!15743 = !{!6, !15067, !1027}
!15744 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_free", scope: !15037, file: !11911, line: 2398, baseType: !15745, size: 64, offset: 1984)
!15745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15746, size: 64)
!15746 = !DISubroutineType(types: !15747)
!15747 = !{null, !15748}
!15748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15749, size: 64)
!15749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_user_mmap_entry", file: !11911, line: 2266, size: 320, elements: !15750)
!15750 = !{!15751, !15752, !15753, !15754, !15755}
!15751 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !15749, file: !11911, line: 2267, baseType: !1551, size: 32)
!15752 = !DIDerivedType(tag: DW_TAG_member, name: "ucontext", scope: !15749, file: !11911, line: 2268, baseType: !15067, size: 64, offset: 64)
!15753 = !DIDerivedType(tag: DW_TAG_member, name: "start_pgoff", scope: !15749, file: !11911, line: 2269, baseType: !130, size: 64, offset: 128)
!15754 = !DIDerivedType(tag: DW_TAG_member, name: "npages", scope: !15749, file: !11911, line: 2270, baseType: !127, size: 64, offset: 192)
!15755 = !DIDerivedType(tag: DW_TAG_member, name: "driver_removed", scope: !15749, file: !11911, line: 2271, baseType: !299, size: 8, offset: 256)
!15756 = !DIDerivedType(tag: DW_TAG_member, name: "disassociate_ucontext", scope: !15037, file: !11911, line: 2399, baseType: !15737, size: 64, offset: 2048)
!15757 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_pd", scope: !15037, file: !11911, line: 2400, baseType: !15758, size: 64, offset: 2112)
!15758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15759, size: 64)
!15759 = !DISubroutineType(types: !15760)
!15760 = !{!6, !15052, !15614}
!15761 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_pd", scope: !15037, file: !11911, line: 2401, baseType: !15758, size: 64, offset: 2176)
!15762 = !DIDerivedType(tag: DW_TAG_member, name: "create_ah", scope: !15037, file: !11911, line: 2402, baseType: !15763, size: 64, offset: 2240)
!15763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15764, size: 64)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{!6, !15766, !15774, !15614}
!15766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15767, size: 64)
!15767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ah", file: !11911, line: 1542, size: 320, elements: !15768)
!15768 = !{!15769, !15770, !15771, !15772, !15773}
!15769 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !15767, file: !11911, line: 1543, baseType: !15032, size: 64)
!15770 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !15767, file: !11911, line: 1544, baseType: !15052, size: 64, offset: 64)
!15771 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15767, file: !11911, line: 1545, baseType: !15059, size: 64, offset: 128)
!15772 = !DIDerivedType(tag: DW_TAG_member, name: "sgid_attr", scope: !15767, file: !11911, line: 1546, baseType: !15345, size: 64, offset: 192)
!15773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15767, file: !11911, line: 1547, baseType: !12118, size: 32, offset: 256)
!15774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15775, size: 64)
!15775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_ah_init_attr", file: !11911, line: 889, size: 192, elements: !15776)
!15776 = !{!15777, !15813, !15814}
!15777 = !DIDerivedType(tag: DW_TAG_member, name: "ah_attr", scope: !15775, file: !11911, line: 890, baseType: !15778, size: 64)
!15778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15779, size: 64)
!15779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_ah_attr", file: !11911, line: 917, size: 384, elements: !15780)
!15780 = !{!15781, !15790, !15791, !15792, !15793, !15794, !15795}
!15781 = !DIDerivedType(tag: DW_TAG_member, name: "grh", scope: !15779, file: !11911, line: 918, baseType: !15782, size: 256)
!15782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_global_route", file: !11911, line: 756, size: 256, elements: !15783)
!15783 = !{!15784, !15785, !15786, !15787, !15788, !15789}
!15784 = !DIDerivedType(tag: DW_TAG_member, name: "sgid_attr", scope: !15782, file: !11911, line: 757, baseType: !15345, size: 64)
!15785 = !DIDerivedType(tag: DW_TAG_member, name: "dgid", scope: !15782, file: !11911, line: 758, baseType: !15352, size: 128, offset: 64)
!15786 = !DIDerivedType(tag: DW_TAG_member, name: "flow_label", scope: !15782, file: !11911, line: 759, baseType: !224, size: 32, offset: 192)
!15787 = !DIDerivedType(tag: DW_TAG_member, name: "sgid_index", scope: !15782, file: !11911, line: 760, baseType: !1398, size: 8, offset: 224)
!15788 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !15782, file: !11911, line: 761, baseType: !1398, size: 8, offset: 232)
!15789 = !DIDerivedType(tag: DW_TAG_member, name: "traffic_class", scope: !15782, file: !11911, line: 762, baseType: !1398, size: 8, offset: 240)
!15790 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !15779, file: !11911, line: 919, baseType: !1398, size: 8, offset: 256)
!15791 = !DIDerivedType(tag: DW_TAG_member, name: "static_rate", scope: !15779, file: !11911, line: 920, baseType: !1398, size: 8, offset: 264)
!15792 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !15779, file: !11911, line: 921, baseType: !1398, size: 8, offset: 272)
!15793 = !DIDerivedType(tag: DW_TAG_member, name: "ah_flags", scope: !15779, file: !11911, line: 922, baseType: !1398, size: 8, offset: 280)
!15794 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15779, file: !11911, line: 923, baseType: !12118, size: 32, offset: 288)
!15795 = !DIDerivedType(tag: DW_TAG_member, scope: !15779, file: !11911, line: 924, baseType: !15796, size: 64, offset: 320)
!15796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15779, file: !11911, line: 924, size: 64, elements: !15797)
!15797 = !{!15798, !15803, !15807}
!15798 = !DIDerivedType(tag: DW_TAG_member, name: "ib", scope: !15796, file: !11911, line: 925, baseType: !15799, size: 32)
!15799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ah_attr", file: !11911, line: 902, size: 32, elements: !15800)
!15800 = !{!15801, !15802}
!15801 = !DIDerivedType(tag: DW_TAG_member, name: "dlid", scope: !15799, file: !11911, line: 903, baseType: !739, size: 16)
!15802 = !DIDerivedType(tag: DW_TAG_member, name: "src_path_bits", scope: !15799, file: !11911, line: 904, baseType: !1398, size: 8, offset: 16)
!15803 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !15796, file: !11911, line: 926, baseType: !15804, size: 48)
!15804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "roce_ah_attr", file: !11911, line: 907, size: 48, elements: !15805)
!15805 = !{!15806}
!15806 = !DIDerivedType(tag: DW_TAG_member, name: "dmac", scope: !15804, file: !11911, line: 908, baseType: !10953, size: 48)
!15807 = !DIDerivedType(tag: DW_TAG_member, name: "opa", scope: !15796, file: !11911, line: 927, baseType: !15808, size: 64)
!15808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opa_ah_attr", file: !11911, line: 911, size: 64, elements: !15809)
!15809 = !{!15810, !15811, !15812}
!15810 = !DIDerivedType(tag: DW_TAG_member, name: "dlid", scope: !15808, file: !11911, line: 912, baseType: !224, size: 32)
!15811 = !DIDerivedType(tag: DW_TAG_member, name: "src_path_bits", scope: !15808, file: !11911, line: 913, baseType: !1398, size: 8, offset: 32)
!15812 = !DIDerivedType(tag: DW_TAG_member, name: "make_grd", scope: !15808, file: !11911, line: 914, baseType: !299, size: 8, offset: 40)
!15813 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15775, file: !11911, line: 891, baseType: !224, size: 32, offset: 64)
!15814 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_slave", scope: !15775, file: !11911, line: 892, baseType: !2164, size: 64, offset: 128)
!15815 = !DIDerivedType(tag: DW_TAG_member, name: "modify_ah", scope: !15037, file: !11911, line: 2404, baseType: !15816, size: 64, offset: 2304)
!15816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15817, size: 64)
!15817 = !DISubroutineType(types: !15818)
!15818 = !{!6, !15766, !15778}
!15819 = !DIDerivedType(tag: DW_TAG_member, name: "query_ah", scope: !15037, file: !11911, line: 2405, baseType: !15816, size: 64, offset: 2368)
!15820 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ah", scope: !15037, file: !11911, line: 2406, baseType: !15821, size: 64, offset: 2432)
!15821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15822, size: 64)
!15822 = !DISubroutineType(types: !15823)
!15823 = !{!6, !15766, !224}
!15824 = !DIDerivedType(tag: DW_TAG_member, name: "create_srq", scope: !15037, file: !11911, line: 2407, baseType: !15825, size: 64, offset: 2496)
!15825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15826, size: 64)
!15826 = !DISubroutineType(types: !15827)
!15827 = !{!6, !15182, !15828, !15614}
!15828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15829, size: 64)
!15829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_srq_init_attr", file: !11911, line: 1044, size: 384, elements: !15830)
!15830 = !{!15831, !15832, !15833, !15839, !15840}
!15831 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !15829, file: !11911, line: 1045, baseType: !15169, size: 64)
!15832 = !DIDerivedType(tag: DW_TAG_member, name: "srq_context", scope: !15829, file: !11911, line: 1046, baseType: !154, size: 64, offset: 64)
!15833 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !15829, file: !11911, line: 1047, baseType: !15834, size: 96, offset: 128)
!15834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_srq_attr", file: !11911, line: 1038, size: 96, elements: !15835)
!15835 = !{!15836, !15837, !15838}
!15836 = !DIDerivedType(tag: DW_TAG_member, name: "max_wr", scope: !15834, file: !11911, line: 1039, baseType: !224, size: 32)
!15837 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge", scope: !15834, file: !11911, line: 1040, baseType: !224, size: 32, offset: 32)
!15838 = !DIDerivedType(tag: DW_TAG_member, name: "srq_limit", scope: !15834, file: !11911, line: 1041, baseType: !224, size: 32, offset: 64)
!15839 = !DIDerivedType(tag: DW_TAG_member, name: "srq_type", scope: !15829, file: !11911, line: 1048, baseType: !11928, size: 32, offset: 224)
!15840 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !15829, file: !11911, line: 1061, baseType: !15841, size: 128, offset: 256)
!15841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15829, file: !11911, line: 1050, size: 128, elements: !15842)
!15842 = !{!15843, !15844}
!15843 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !15841, file: !11911, line: 1051, baseType: !15156, size: 64)
!15844 = !DIDerivedType(tag: DW_TAG_member, scope: !15841, file: !11911, line: 1052, baseType: !15845, size: 64, offset: 64)
!15845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15841, file: !11911, line: 1052, size: 64, elements: !15846)
!15846 = !{!15847, !15851}
!15847 = !DIDerivedType(tag: DW_TAG_member, name: "xrc", scope: !15845, file: !11911, line: 1055, baseType: !15848, size: 64)
!15848 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15845, file: !11911, line: 1053, size: 64, elements: !15849)
!15849 = !{!15850}
!15850 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !15848, file: !11911, line: 1054, baseType: !15205, size: 64)
!15851 = !DIDerivedType(tag: DW_TAG_member, name: "tag_matching", scope: !15845, file: !11911, line: 1059, baseType: !15852, size: 32)
!15852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15845, file: !11911, line: 1057, size: 32, elements: !15853)
!15853 = !{!15854}
!15854 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_tags", scope: !15852, file: !11911, line: 1058, baseType: !224, size: 32)
!15855 = !DIDerivedType(tag: DW_TAG_member, name: "modify_srq", scope: !15037, file: !11911, line: 2410, baseType: !15856, size: 64, offset: 2560)
!15856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15857, size: 64)
!15857 = !DISubroutineType(types: !15858)
!15858 = !{!6, !15182, !15859, !12124, !15614}
!15859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15834, size: 64)
!15860 = !DIDerivedType(tag: DW_TAG_member, name: "query_srq", scope: !15037, file: !11911, line: 2413, baseType: !15861, size: 64, offset: 2624)
!15861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15862, size: 64)
!15862 = !DISubroutineType(types: !15863)
!15863 = !{!6, !15182, !15859}
!15864 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_srq", scope: !15037, file: !11911, line: 2414, baseType: !15865, size: 64, offset: 2688)
!15865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15866, size: 64)
!15866 = !DISubroutineType(types: !15867)
!15867 = !{!6, !15182, !15614}
!15868 = !DIDerivedType(tag: DW_TAG_member, name: "create_qp", scope: !15037, file: !11911, line: 2415, baseType: !15869, size: 64, offset: 2752)
!15869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15870, size: 64)
!15870 = !DISubroutineType(types: !15871)
!15871 = !{!15047, !15052, !15872, !15614}
!15872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15873, size: 64)
!15873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_init_attr", file: !11911, line: 1146, size: 832, elements: !15874)
!15874 = !{!15875, !15876, !15877, !15878, !15879, !15880, !15881, !15890, !15891, !15892, !15893, !15894, !15895}
!15875 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !15873, file: !11911, line: 1148, baseType: !15169, size: 64)
!15876 = !DIDerivedType(tag: DW_TAG_member, name: "qp_context", scope: !15873, file: !11911, line: 1150, baseType: !154, size: 64, offset: 64)
!15877 = !DIDerivedType(tag: DW_TAG_member, name: "send_cq", scope: !15873, file: !11911, line: 1151, baseType: !15156, size: 64, offset: 128)
!15878 = !DIDerivedType(tag: DW_TAG_member, name: "recv_cq", scope: !15873, file: !11911, line: 1152, baseType: !15156, size: 64, offset: 192)
!15879 = !DIDerivedType(tag: DW_TAG_member, name: "srq", scope: !15873, file: !11911, line: 1153, baseType: !15182, size: 64, offset: 256)
!15880 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !15873, file: !11911, line: 1154, baseType: !15205, size: 64, offset: 320)
!15881 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !15873, file: !11911, line: 1155, baseType: !15882, size: 192, offset: 384)
!15882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_cap", file: !11911, line: 1064, size: 192, elements: !15883)
!15883 = !{!15884, !15885, !15886, !15887, !15888, !15889}
!15884 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_wr", scope: !15882, file: !11911, line: 1065, baseType: !224, size: 32)
!15885 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_wr", scope: !15882, file: !11911, line: 1066, baseType: !224, size: 32, offset: 32)
!15886 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_sge", scope: !15882, file: !11911, line: 1067, baseType: !224, size: 32, offset: 64)
!15887 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_sge", scope: !15882, file: !11911, line: 1068, baseType: !224, size: 32, offset: 96)
!15888 = !DIDerivedType(tag: DW_TAG_member, name: "max_inline_data", scope: !15882, file: !11911, line: 1069, baseType: !224, size: 32, offset: 128)
!15889 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdma_ctxs", scope: !15882, file: !11911, line: 1076, baseType: !224, size: 32, offset: 160)
!15890 = !DIDerivedType(tag: DW_TAG_member, name: "sq_sig_type", scope: !15873, file: !11911, line: 1156, baseType: !12128, size: 32, offset: 576)
!15891 = !DIDerivedType(tag: DW_TAG_member, name: "qp_type", scope: !15873, file: !11911, line: 1157, baseType: !12015, size: 32, offset: 608)
!15892 = !DIDerivedType(tag: DW_TAG_member, name: "create_flags", scope: !15873, file: !11911, line: 1158, baseType: !224, size: 32, offset: 640)
!15893 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !15873, file: !11911, line: 1163, baseType: !1398, size: 8, offset: 672)
!15894 = !DIDerivedType(tag: DW_TAG_member, name: "rwq_ind_tbl", scope: !15873, file: !11911, line: 1164, baseType: !15369, size: 64, offset: 704)
!15895 = !DIDerivedType(tag: DW_TAG_member, name: "source_qpn", scope: !15873, file: !11911, line: 1165, baseType: !224, size: 32, offset: 768)
!15896 = !DIDerivedType(tag: DW_TAG_member, name: "modify_qp", scope: !15037, file: !11911, line: 2418, baseType: !15897, size: 64, offset: 2816)
!15897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15898, size: 64)
!15898 = !DISubroutineType(types: !15899)
!15899 = !{!6, !15047, !15900, !6, !15614}
!15900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15901, size: 64)
!15901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_attr", file: !11911, line: 1260, size: 1536, elements: !15902)
!15902 = !{!15903, !15904, !15905, !15906, !15907, !15908, !15909, !15910, !15911, !15912, !15913, !15914, !15915, !15916, !15917, !15918, !15919, !15920, !15921, !15922, !15923, !15924, !15925, !15926, !15927, !15928, !15929}
!15903 = !DIDerivedType(tag: DW_TAG_member, name: "qp_state", scope: !15901, file: !11911, line: 1261, baseType: !12132, size: 32)
!15904 = !DIDerivedType(tag: DW_TAG_member, name: "cur_qp_state", scope: !15901, file: !11911, line: 1262, baseType: !12132, size: 32, offset: 32)
!15905 = !DIDerivedType(tag: DW_TAG_member, name: "path_mtu", scope: !15901, file: !11911, line: 1263, baseType: !12102, size: 32, offset: 64)
!15906 = !DIDerivedType(tag: DW_TAG_member, name: "path_mig_state", scope: !15901, file: !11911, line: 1264, baseType: !12141, size: 32, offset: 96)
!15907 = !DIDerivedType(tag: DW_TAG_member, name: "qkey", scope: !15901, file: !11911, line: 1265, baseType: !224, size: 32, offset: 128)
!15908 = !DIDerivedType(tag: DW_TAG_member, name: "rq_psn", scope: !15901, file: !11911, line: 1266, baseType: !224, size: 32, offset: 160)
!15909 = !DIDerivedType(tag: DW_TAG_member, name: "sq_psn", scope: !15901, file: !11911, line: 1267, baseType: !224, size: 32, offset: 192)
!15910 = !DIDerivedType(tag: DW_TAG_member, name: "dest_qp_num", scope: !15901, file: !11911, line: 1268, baseType: !224, size: 32, offset: 224)
!15911 = !DIDerivedType(tag: DW_TAG_member, name: "qp_access_flags", scope: !15901, file: !11911, line: 1269, baseType: !6, size: 32, offset: 256)
!15912 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !15901, file: !11911, line: 1270, baseType: !15882, size: 192, offset: 288)
!15913 = !DIDerivedType(tag: DW_TAG_member, name: "ah_attr", scope: !15901, file: !11911, line: 1271, baseType: !15779, size: 384, offset: 512)
!15914 = !DIDerivedType(tag: DW_TAG_member, name: "alt_ah_attr", scope: !15901, file: !11911, line: 1272, baseType: !15779, size: 384, offset: 896)
!15915 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_index", scope: !15901, file: !11911, line: 1273, baseType: !739, size: 16, offset: 1280)
!15916 = !DIDerivedType(tag: DW_TAG_member, name: "alt_pkey_index", scope: !15901, file: !11911, line: 1274, baseType: !739, size: 16, offset: 1296)
!15917 = !DIDerivedType(tag: DW_TAG_member, name: "en_sqd_async_notify", scope: !15901, file: !11911, line: 1275, baseType: !1398, size: 8, offset: 1312)
!15918 = !DIDerivedType(tag: DW_TAG_member, name: "sq_draining", scope: !15901, file: !11911, line: 1276, baseType: !1398, size: 8, offset: 1320)
!15919 = !DIDerivedType(tag: DW_TAG_member, name: "max_rd_atomic", scope: !15901, file: !11911, line: 1277, baseType: !1398, size: 8, offset: 1328)
!15920 = !DIDerivedType(tag: DW_TAG_member, name: "max_dest_rd_atomic", scope: !15901, file: !11911, line: 1278, baseType: !1398, size: 8, offset: 1336)
!15921 = !DIDerivedType(tag: DW_TAG_member, name: "min_rnr_timer", scope: !15901, file: !11911, line: 1279, baseType: !1398, size: 8, offset: 1344)
!15922 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !15901, file: !11911, line: 1280, baseType: !1398, size: 8, offset: 1352)
!15923 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15901, file: !11911, line: 1281, baseType: !1398, size: 8, offset: 1360)
!15924 = !DIDerivedType(tag: DW_TAG_member, name: "retry_cnt", scope: !15901, file: !11911, line: 1282, baseType: !1398, size: 8, offset: 1368)
!15925 = !DIDerivedType(tag: DW_TAG_member, name: "rnr_retry", scope: !15901, file: !11911, line: 1283, baseType: !1398, size: 8, offset: 1376)
!15926 = !DIDerivedType(tag: DW_TAG_member, name: "alt_port_num", scope: !15901, file: !11911, line: 1284, baseType: !1398, size: 8, offset: 1384)
!15927 = !DIDerivedType(tag: DW_TAG_member, name: "alt_timeout", scope: !15901, file: !11911, line: 1285, baseType: !1398, size: 8, offset: 1392)
!15928 = !DIDerivedType(tag: DW_TAG_member, name: "rate_limit", scope: !15901, file: !11911, line: 1286, baseType: !224, size: 32, offset: 1408)
!15929 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_slave", scope: !15901, file: !11911, line: 1287, baseType: !2164, size: 64, offset: 1472)
!15930 = !DIDerivedType(tag: DW_TAG_member, name: "query_qp", scope: !15037, file: !11911, line: 2420, baseType: !15931, size: 64, offset: 2880)
!15931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15932, size: 64)
!15932 = !DISubroutineType(types: !15933)
!15933 = !{!6, !15047, !15900, !6, !15872}
!15934 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_qp", scope: !15037, file: !11911, line: 2422, baseType: !15935, size: 64, offset: 2944)
!15935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15936, size: 64)
!15936 = !DISubroutineType(types: !15937)
!15937 = !{!6, !15047, !15614}
!15938 = !DIDerivedType(tag: DW_TAG_member, name: "create_cq", scope: !15037, file: !11911, line: 2423, baseType: !15939, size: 64, offset: 3008)
!15939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15940, size: 64)
!15940 = !DISubroutineType(types: !15941)
!15941 = !{!6, !15156, !15942, !15614}
!15942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15943, size: 64)
!15943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15944)
!15944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cq_init_attr", file: !11911, line: 351, size: 96, elements: !15945)
!15945 = !{!15946, !15947, !15948}
!15946 = !DIDerivedType(tag: DW_TAG_member, name: "cqe", scope: !15944, file: !11911, line: 352, baseType: !194, size: 32)
!15947 = !DIDerivedType(tag: DW_TAG_member, name: "comp_vector", scope: !15944, file: !11911, line: 353, baseType: !224, size: 32, offset: 32)
!15948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15944, file: !11911, line: 354, baseType: !224, size: 32, offset: 64)
!15949 = !DIDerivedType(tag: DW_TAG_member, name: "modify_cq", scope: !15037, file: !11911, line: 2425, baseType: !15950, size: 64, offset: 3072)
!15950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15951, size: 64)
!15951 = !DISubroutineType(types: !15952)
!15952 = !{!6, !15156, !739, !739}
!15953 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_cq", scope: !15037, file: !11911, line: 2426, baseType: !15954, size: 64, offset: 3136)
!15954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15955, size: 64)
!15955 = !DISubroutineType(types: !15956)
!15956 = !{!6, !15156, !15614}
!15957 = !DIDerivedType(tag: DW_TAG_member, name: "resize_cq", scope: !15037, file: !11911, line: 2427, baseType: !15958, size: 64, offset: 3200)
!15958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15959, size: 64)
!15959 = !DISubroutineType(types: !15960)
!15960 = !{!6, !15156, !6, !15614}
!15961 = !DIDerivedType(tag: DW_TAG_member, name: "get_dma_mr", scope: !15037, file: !11911, line: 2428, baseType: !15962, size: 64, offset: 3264)
!15962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15963, size: 64)
!15963 = !DISubroutineType(types: !15964)
!15964 = !{!15101, !15052, !6}
!15965 = !DIDerivedType(tag: DW_TAG_member, name: "reg_user_mr", scope: !15037, file: !11911, line: 2429, baseType: !15966, size: 64, offset: 3328)
!15966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15967, size: 64)
!15967 = !DISubroutineType(types: !15968)
!15968 = !{!15101, !15052, !230, !230, !230, !6, !15614}
!15969 = !DIDerivedType(tag: DW_TAG_member, name: "rereg_user_mr", scope: !15037, file: !11911, line: 2432, baseType: !15970, size: 64, offset: 3392)
!15970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15971, size: 64)
!15971 = !DISubroutineType(types: !15972)
!15972 = !{!6, !15101, !6, !230, !230, !230, !6, !15052, !15614}
!15973 = !DIDerivedType(tag: DW_TAG_member, name: "dereg_mr", scope: !15037, file: !11911, line: 2435, baseType: !15974, size: 64, offset: 3456)
!15974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15975, size: 64)
!15975 = !DISubroutineType(types: !15976)
!15976 = !{!6, !15101, !15614}
!15977 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mr", scope: !15037, file: !11911, line: 2436, baseType: !15978, size: 64, offset: 3520)
!15978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15979, size: 64)
!15979 = !DISubroutineType(types: !15980)
!15980 = !{!15101, !15052, !11910, !224}
!15981 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mr_integrity", scope: !15037, file: !11911, line: 2438, baseType: !15982, size: 64, offset: 3584)
!15982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15983, size: 64)
!15983 = !DISubroutineType(types: !15984)
!15984 = !{!15101, !15052, !224, !224}
!15985 = !DIDerivedType(tag: DW_TAG_member, name: "advise_mr", scope: !15037, file: !11911, line: 2441, baseType: !15986, size: 64, offset: 3648)
!15986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15987, size: 64)
!15987 = !DISubroutineType(types: !15988)
!15988 = !{!6, !15052, !12146, !224, !15453, !224, !15989}
!15989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15990, size: 64)
!15990 = !DICompositeType(tag: DW_TAG_structure_type, name: "uverbs_attr_bundle", file: !11911, line: 2246, flags: DIFlagFwdDecl)
!15991 = !DIDerivedType(tag: DW_TAG_member, name: "map_mr_sg", scope: !15037, file: !11911, line: 2445, baseType: !15992, size: 64, offset: 3712)
!15992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15993, size: 64)
!15993 = !DISubroutineType(types: !15994)
!15994 = !{!6, !15101, !15995, !6, !8977}
!15995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15996, size: 64)
!15996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !15997, line: 11, size: 256, elements: !15998)
!15997 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!15998 = !{!15999, !16000, !16001, !16002, !16003}
!15999 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !15996, file: !15997, line: 12, baseType: !130, size: 64)
!16000 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !15996, file: !15997, line: 13, baseType: !194, size: 32, offset: 64)
!16001 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !15996, file: !15997, line: 14, baseType: !194, size: 32, offset: 96)
!16002 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !15996, file: !15997, line: 15, baseType: !965, size: 64, offset: 128)
!16003 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !15996, file: !15997, line: 17, baseType: !194, size: 32, offset: 192)
!16004 = !DIDerivedType(tag: DW_TAG_member, name: "check_mr_status", scope: !15037, file: !11911, line: 2447, baseType: !16005, size: 64, offset: 3776)
!16005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16006, size: 64)
!16006 = !DISubroutineType(types: !16007)
!16007 = !{!6, !15101, !224, !16008}
!16008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16009, size: 64)
!16009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mr_status", file: !11911, line: 877, size: 320, elements: !16010)
!16010 = !{!16011, !16012}
!16011 = !DIDerivedType(tag: DW_TAG_member, name: "fail_status", scope: !16009, file: !11911, line: 878, baseType: !224, size: 32)
!16012 = !DIDerivedType(tag: DW_TAG_member, name: "sig_err", scope: !16009, file: !11911, line: 879, baseType: !16013, size: 256, offset: 64)
!16013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sig_err", file: !11920, line: 116, size: 256, elements: !16014)
!16014 = !{!16015, !16016, !16017, !16018, !16019}
!16015 = !DIDerivedType(tag: DW_TAG_member, name: "err_type", scope: !16013, file: !11920, line: 117, baseType: !12151, size: 32)
!16016 = !DIDerivedType(tag: DW_TAG_member, name: "expected", scope: !16013, file: !11920, line: 118, baseType: !224, size: 32, offset: 32)
!16017 = !DIDerivedType(tag: DW_TAG_member, name: "actual", scope: !16013, file: !11920, line: 119, baseType: !224, size: 32, offset: 64)
!16018 = !DIDerivedType(tag: DW_TAG_member, name: "sig_err_offset", scope: !16013, file: !11920, line: 120, baseType: !230, size: 64, offset: 128)
!16019 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16013, file: !11920, line: 121, baseType: !224, size: 32, offset: 192)
!16020 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mw", scope: !15037, file: !11911, line: 2449, baseType: !16021, size: 64, offset: 3840)
!16021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16022, size: 64)
!16022 = !DISubroutineType(types: !16023)
!16023 = !{!6, !16024, !15614}
!16024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16025, size: 64)
!16025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mw", file: !11911, line: 1812, size: 256, elements: !16026)
!16026 = !{!16027, !16028, !16029, !16030, !16031}
!16027 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !16025, file: !11911, line: 1813, baseType: !15032, size: 64)
!16028 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !16025, file: !11911, line: 1814, baseType: !15052, size: 64, offset: 64)
!16029 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !16025, file: !11911, line: 1815, baseType: !15059, size: 64, offset: 128)
!16030 = !DIDerivedType(tag: DW_TAG_member, name: "rkey", scope: !16025, file: !11911, line: 1816, baseType: !224, size: 32, offset: 192)
!16031 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16025, file: !11911, line: 1817, baseType: !12156, size: 32, offset: 224)
!16032 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_mw", scope: !15037, file: !11911, line: 2450, baseType: !16033, size: 64, offset: 3904)
!16033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16034, size: 64)
!16034 = !DISubroutineType(types: !16035)
!16035 = !{!6, !16024}
!16036 = !DIDerivedType(tag: DW_TAG_member, name: "attach_mcast", scope: !15037, file: !11911, line: 2451, baseType: !16037, size: 64, offset: 3968)
!16037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16038, size: 64)
!16038 = !DISubroutineType(types: !16039)
!16039 = !{!6, !15047, !15722, !739}
!16040 = !DIDerivedType(tag: DW_TAG_member, name: "detach_mcast", scope: !15037, file: !11911, line: 2452, baseType: !16037, size: 64, offset: 4032)
!16041 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_xrcd", scope: !15037, file: !11911, line: 2453, baseType: !16042, size: 64, offset: 4096)
!16042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16043, size: 64)
!16043 = !DISubroutineType(types: !16044)
!16044 = !{!6, !15205, !15614}
!16045 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_xrcd", scope: !15037, file: !11911, line: 2454, baseType: !16042, size: 64, offset: 4160)
!16046 = !DIDerivedType(tag: DW_TAG_member, name: "create_flow", scope: !15037, file: !11911, line: 2455, baseType: !16047, size: 64, offset: 4224)
!16047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16048, size: 64)
!16048 = !DISubroutineType(types: !16049)
!16049 = !{!16050, !15047, !16056, !15614}
!16050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16051, size: 64)
!16051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow", file: !11911, line: 2069, size: 192, elements: !16052)
!16052 = !{!16053, !16054, !16055}
!16053 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !16051, file: !11911, line: 2070, baseType: !15047, size: 64)
!16054 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !16051, file: !11911, line: 2071, baseType: !15032, size: 64, offset: 64)
!16055 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !16051, file: !11911, line: 2072, baseType: !15059, size: 64, offset: 128)
!16056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16057, size: 64)
!16057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_attr", file: !11911, line: 2059, size: 128, elements: !16058)
!16058 = !{!16059, !16060, !16061, !16062, !16063, !16064, !16065}
!16059 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16057, file: !11911, line: 2060, baseType: !12160, size: 32)
!16060 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16057, file: !11911, line: 2061, baseType: !739, size: 16, offset: 32)
!16061 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !16057, file: !11911, line: 2062, baseType: !739, size: 16, offset: 48)
!16062 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16057, file: !11911, line: 2063, baseType: !224, size: 32, offset: 64)
!16063 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_specs", scope: !16057, file: !11911, line: 2064, baseType: !1398, size: 8, offset: 96)
!16064 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !16057, file: !11911, line: 2065, baseType: !1398, size: 8, offset: 104)
!16065 = !DIDerivedType(tag: DW_TAG_member, name: "flows", scope: !16057, file: !11911, line: 2066, baseType: !16066, offset: 128)
!16066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16067, elements: !2184)
!16067 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ib_flow_spec", file: !11911, line: 2039, size: 704, elements: !16068)
!16068 = !{!16069, !16074, !16088, !16100, !16116, !16128, !16144, !16155, !16167, !16180, !16191, !16197, !16202, !16215}
!16069 = !DIDerivedType(tag: DW_TAG_member, scope: !16067, file: !11911, line: 2040, baseType: !16070, size: 64)
!16070 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16067, file: !11911, line: 2040, size: 64, elements: !16071)
!16071 = !{!16072, !16073}
!16072 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16070, file: !11911, line: 2041, baseType: !224, size: 32)
!16073 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16070, file: !11911, line: 2042, baseType: !739, size: 16, offset: 32)
!16074 = !DIDerivedType(tag: DW_TAG_member, name: "eth", scope: !16067, file: !11911, line: 2044, baseType: !16075, size: 320)
!16075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_eth", file: !11911, line: 1876, size: 320, elements: !16076)
!16076 = !{!16077, !16078, !16079, !16087}
!16077 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16075, file: !11911, line: 1877, baseType: !224, size: 32)
!16078 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16075, file: !11911, line: 1878, baseType: !739, size: 16, offset: 32)
!16079 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16075, file: !11911, line: 1879, baseType: !16080, size: 128, offset: 48)
!16080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_eth_filter", file: !11911, line: 1867, size: 128, elements: !16081)
!16081 = !{!16082, !16083, !16084, !16085, !16086}
!16082 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mac", scope: !16080, file: !11911, line: 1868, baseType: !10953, size: 48)
!16083 = !DIDerivedType(tag: DW_TAG_member, name: "src_mac", scope: !16080, file: !11911, line: 1869, baseType: !10953, size: 48, offset: 48)
!16084 = !DIDerivedType(tag: DW_TAG_member, name: "ether_type", scope: !16080, file: !11911, line: 1870, baseType: !2032, size: 16, offset: 96)
!16085 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tag", scope: !16080, file: !11911, line: 1871, baseType: !2032, size: 16, offset: 112)
!16086 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16080, file: !11911, line: 1873, baseType: !2474, offset: 128)
!16087 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16075, file: !11911, line: 1880, baseType: !16080, size: 128, offset: 176)
!16088 = !DIDerivedType(tag: DW_TAG_member, name: "ib", scope: !16067, file: !11911, line: 2045, baseType: !16089, size: 128)
!16089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_ib", file: !11911, line: 1890, size: 128, elements: !16090)
!16090 = !{!16091, !16092, !16093, !16099}
!16091 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16089, file: !11911, line: 1891, baseType: !224, size: 32)
!16092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16089, file: !11911, line: 1892, baseType: !739, size: 16, offset: 32)
!16093 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16089, file: !11911, line: 1893, baseType: !16094, size: 32, offset: 48)
!16094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_ib_filter", file: !11911, line: 1883, size: 32, elements: !16095)
!16095 = !{!16096, !16097, !16098}
!16096 = !DIDerivedType(tag: DW_TAG_member, name: "dlid", scope: !16094, file: !11911, line: 1884, baseType: !2032, size: 16)
!16097 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !16094, file: !11911, line: 1885, baseType: !1399, size: 8, offset: 16)
!16098 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16094, file: !11911, line: 1887, baseType: !2474, offset: 24)
!16099 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16089, file: !11911, line: 1894, baseType: !16094, size: 32, offset: 80)
!16100 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !16067, file: !11911, line: 2046, baseType: !16101, size: 256)
!16101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_ipv4", file: !11911, line: 1915, size: 256, elements: !16102)
!16102 = !{!16103, !16104, !16105, !16115}
!16103 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16101, file: !11911, line: 1916, baseType: !224, size: 32)
!16104 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16101, file: !11911, line: 1917, baseType: !739, size: 16, offset: 32)
!16105 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16101, file: !11911, line: 1918, baseType: !16106, size: 96, offset: 64)
!16106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_ipv4_filter", file: !11911, line: 1904, size: 96, elements: !16107)
!16107 = !{!16108, !16109, !16110, !16111, !16112, !16113, !16114}
!16108 = !DIDerivedType(tag: DW_TAG_member, name: "src_ip", scope: !16106, file: !11911, line: 1905, baseType: !2014, size: 32)
!16109 = !DIDerivedType(tag: DW_TAG_member, name: "dst_ip", scope: !16106, file: !11911, line: 1906, baseType: !2014, size: 32, offset: 32)
!16110 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !16106, file: !11911, line: 1907, baseType: !1398, size: 8, offset: 64)
!16111 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !16106, file: !11911, line: 1908, baseType: !1398, size: 8, offset: 72)
!16112 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !16106, file: !11911, line: 1909, baseType: !1398, size: 8, offset: 80)
!16113 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16106, file: !11911, line: 1910, baseType: !1398, size: 8, offset: 88)
!16114 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16106, file: !11911, line: 1912, baseType: !2474, offset: 96)
!16115 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16101, file: !11911, line: 1919, baseType: !16106, size: 96, offset: 160)
!16116 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_udp", scope: !16067, file: !11911, line: 2047, baseType: !16117, size: 128)
!16117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_tcp_udp", file: !11911, line: 1947, size: 128, elements: !16118)
!16118 = !{!16119, !16120, !16121, !16127}
!16119 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16117, file: !11911, line: 1948, baseType: !224, size: 32)
!16120 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16117, file: !11911, line: 1949, baseType: !739, size: 16, offset: 32)
!16121 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16117, file: !11911, line: 1950, baseType: !16122, size: 32, offset: 48)
!16122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_tcp_udp_filter", file: !11911, line: 1940, size: 32, elements: !16123)
!16123 = !{!16124, !16125, !16126}
!16124 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port", scope: !16122, file: !11911, line: 1941, baseType: !2032, size: 16)
!16125 = !DIDerivedType(tag: DW_TAG_member, name: "src_port", scope: !16122, file: !11911, line: 1942, baseType: !2032, size: 16, offset: 16)
!16126 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16122, file: !11911, line: 1944, baseType: !2474, offset: 32)
!16127 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16117, file: !11911, line: 1951, baseType: !16122, size: 32, offset: 80)
!16128 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !16067, file: !11911, line: 2048, baseType: !16129, size: 704)
!16129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_ipv6", file: !11911, line: 1933, size: 704, elements: !16130)
!16130 = !{!16131, !16132, !16133, !16143}
!16131 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16129, file: !11911, line: 1934, baseType: !224, size: 32)
!16132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16129, file: !11911, line: 1935, baseType: !739, size: 16, offset: 32)
!16133 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16129, file: !11911, line: 1936, baseType: !16134, size: 320, offset: 64)
!16134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_ipv6_filter", file: !11911, line: 1922, size: 320, elements: !16135)
!16135 = !{!16136, !16137, !16138, !16139, !16140, !16141, !16142}
!16136 = !DIDerivedType(tag: DW_TAG_member, name: "src_ip", scope: !16134, file: !11911, line: 1923, baseType: !6093, size: 128)
!16137 = !DIDerivedType(tag: DW_TAG_member, name: "dst_ip", scope: !16134, file: !11911, line: 1924, baseType: !6093, size: 128, offset: 128)
!16138 = !DIDerivedType(tag: DW_TAG_member, name: "flow_label", scope: !16134, file: !11911, line: 1925, baseType: !2014, size: 32, offset: 256)
!16139 = !DIDerivedType(tag: DW_TAG_member, name: "next_hdr", scope: !16134, file: !11911, line: 1926, baseType: !1398, size: 8, offset: 288)
!16140 = !DIDerivedType(tag: DW_TAG_member, name: "traffic_class", scope: !16134, file: !11911, line: 1927, baseType: !1398, size: 8, offset: 296)
!16141 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !16134, file: !11911, line: 1928, baseType: !1398, size: 8, offset: 304)
!16142 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16134, file: !11911, line: 1930, baseType: !2474, offset: 312)
!16143 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16129, file: !11911, line: 1937, baseType: !16134, size: 320, offset: 384)
!16144 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel", scope: !16067, file: !11911, line: 2049, baseType: !16145, size: 128)
!16145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_tunnel", file: !11911, line: 1962, size: 128, elements: !16146)
!16146 = !{!16147, !16148, !16149, !16154}
!16147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16145, file: !11911, line: 1963, baseType: !224, size: 32)
!16148 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16145, file: !11911, line: 1964, baseType: !739, size: 16, offset: 32)
!16149 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16145, file: !11911, line: 1965, baseType: !16150, size: 32, offset: 64)
!16150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_tunnel_filter", file: !11911, line: 1954, size: 32, elements: !16151)
!16151 = !{!16152, !16153}
!16152 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_id", scope: !16150, file: !11911, line: 1955, baseType: !2014, size: 32)
!16153 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16150, file: !11911, line: 1956, baseType: !2474, offset: 32)
!16154 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16145, file: !11911, line: 1966, baseType: !16150, size: 32, offset: 96)
!16155 = !DIDerivedType(tag: DW_TAG_member, name: "esp", scope: !16067, file: !11911, line: 2050, baseType: !16156, size: 192)
!16156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_esp", file: !11911, line: 1976, size: 192, elements: !16157)
!16157 = !{!16158, !16159, !16160, !16166}
!16158 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16156, file: !11911, line: 1977, baseType: !224, size: 32)
!16159 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16156, file: !11911, line: 1978, baseType: !739, size: 16, offset: 32)
!16160 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16156, file: !11911, line: 1979, baseType: !16161, size: 64, offset: 64)
!16161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_esp_filter", file: !11911, line: 1969, size: 64, elements: !16162)
!16162 = !{!16163, !16164, !16165}
!16163 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !16161, file: !11911, line: 1970, baseType: !2014, size: 32)
!16164 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !16161, file: !11911, line: 1971, baseType: !2014, size: 32, offset: 32)
!16165 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16161, file: !11911, line: 1973, baseType: !2474, offset: 64)
!16166 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16156, file: !11911, line: 1980, baseType: !16161, size: 64, offset: 128)
!16167 = !DIDerivedType(tag: DW_TAG_member, name: "gre", scope: !16067, file: !11911, line: 2051, baseType: !16168, size: 192)
!16168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_gre", file: !11911, line: 1991, size: 192, elements: !16169)
!16169 = !{!16170, !16171, !16172, !16179}
!16170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16168, file: !11911, line: 1992, baseType: !224, size: 32)
!16171 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16168, file: !11911, line: 1993, baseType: !739, size: 16, offset: 32)
!16172 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16168, file: !11911, line: 1994, baseType: !16173, size: 64, offset: 64)
!16173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_gre_filter", file: !11911, line: 1983, size: 64, elements: !16174)
!16174 = !{!16175, !16176, !16177, !16178}
!16175 = !DIDerivedType(tag: DW_TAG_member, name: "c_ks_res0_ver", scope: !16173, file: !11911, line: 1984, baseType: !2032, size: 16)
!16176 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !16173, file: !11911, line: 1985, baseType: !2032, size: 16, offset: 16)
!16177 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16173, file: !11911, line: 1986, baseType: !2014, size: 32, offset: 32)
!16178 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16173, file: !11911, line: 1988, baseType: !2474, offset: 64)
!16179 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16168, file: !11911, line: 1995, baseType: !16173, size: 64, offset: 128)
!16180 = !DIDerivedType(tag: DW_TAG_member, name: "mpls", scope: !16067, file: !11911, line: 2052, baseType: !16181, size: 128)
!16181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_mpls", file: !11911, line: 2004, size: 128, elements: !16182)
!16182 = !{!16183, !16184, !16185, !16190}
!16183 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16181, file: !11911, line: 2005, baseType: !224, size: 32)
!16184 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16181, file: !11911, line: 2006, baseType: !739, size: 16, offset: 32)
!16185 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !16181, file: !11911, line: 2007, baseType: !16186, size: 32, offset: 64)
!16186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_mpls_filter", file: !11911, line: 1998, size: 32, elements: !16187)
!16187 = !{!16188, !16189}
!16188 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !16186, file: !11911, line: 1999, baseType: !2014, size: 32)
!16189 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !16186, file: !11911, line: 2001, baseType: !2474, offset: 32)
!16190 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !16181, file: !11911, line: 2008, baseType: !16186, size: 32, offset: 96)
!16191 = !DIDerivedType(tag: DW_TAG_member, name: "flow_tag", scope: !16067, file: !11911, line: 2053, baseType: !16192, size: 96)
!16192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_tag", file: !11911, line: 2011, size: 96, elements: !16193)
!16193 = !{!16194, !16195, !16196}
!16194 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16192, file: !11911, line: 2012, baseType: !12166, size: 32)
!16195 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16192, file: !11911, line: 2013, baseType: !739, size: 16, offset: 32)
!16196 = !DIDerivedType(tag: DW_TAG_member, name: "tag_id", scope: !16192, file: !11911, line: 2014, baseType: !224, size: 32, offset: 64)
!16197 = !DIDerivedType(tag: DW_TAG_member, name: "drop", scope: !16067, file: !11911, line: 2054, baseType: !16198, size: 64)
!16198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_drop", file: !11911, line: 2017, size: 64, elements: !16199)
!16199 = !{!16200, !16201}
!16200 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16198, file: !11911, line: 2018, baseType: !12166, size: 32)
!16201 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16198, file: !11911, line: 2019, baseType: !739, size: 16, offset: 32)
!16202 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !16067, file: !11911, line: 2055, baseType: !16203, size: 128)
!16203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_handle", file: !11911, line: 2022, size: 128, elements: !16204)
!16204 = !{!16205, !16206, !16207}
!16205 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16203, file: !11911, line: 2023, baseType: !12166, size: 32)
!16206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16203, file: !11911, line: 2024, baseType: !739, size: 16, offset: 32)
!16207 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !16203, file: !11911, line: 2025, baseType: !16208, size: 64, offset: 64)
!16208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16209, size: 64)
!16209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action", file: !11911, line: 2126, size: 192, elements: !16210)
!16210 = !{!16211, !16212, !16213, !16214}
!16211 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !16209, file: !11911, line: 2127, baseType: !15032, size: 64)
!16212 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !16209, file: !11911, line: 2128, baseType: !15059, size: 64, offset: 64)
!16213 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16209, file: !11911, line: 2129, baseType: !12183, size: 32, offset: 128)
!16214 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !16209, file: !11911, line: 2130, baseType: !627, size: 32, offset: 160)
!16215 = !DIDerivedType(tag: DW_TAG_member, name: "flow_count", scope: !16067, file: !11911, line: 2056, baseType: !16216, size: 128)
!16216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_count", file: !11911, line: 2033, size: 128, elements: !16217)
!16217 = !{!16218, !16219, !16220}
!16218 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16216, file: !11911, line: 2034, baseType: !12166, size: 32)
!16219 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16216, file: !11911, line: 2035, baseType: !739, size: 16, offset: 32)
!16220 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !16216, file: !11911, line: 2036, baseType: !15028, size: 64, offset: 64)
!16221 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_flow", scope: !15037, file: !11911, line: 2458, baseType: !16222, size: 64, offset: 4288)
!16222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16223, size: 64)
!16223 = !DISubroutineType(types: !16224)
!16224 = !{!6, !16050}
!16225 = !DIDerivedType(tag: DW_TAG_member, name: "create_flow_action_esp", scope: !15037, file: !11911, line: 2459, baseType: !16226, size: 64, offset: 4352)
!16226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16227, size: 64)
!16227 = !DISubroutineType(types: !16228)
!16228 = !{!16208, !15032, !16229, !15989}
!16229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16230, size: 64)
!16230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16231)
!16231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action_attrs_esp", file: !11911, line: 2110, size: 448, elements: !16232)
!16232 = !{!16233, !16250, !16262, !16268, !16269, !16270, !16271, !16272, !16273}
!16233 = !DIDerivedType(tag: DW_TAG_member, name: "keymat", scope: !16231, file: !11911, line: 2111, baseType: !16234, size: 64)
!16234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16235, size: 64)
!16235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action_attrs_esp_keymats", file: !11911, line: 2080, size: 512, elements: !16236)
!16236 = !{!16237, !16238}
!16237 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !16235, file: !11911, line: 2081, baseType: !12187, size: 32)
!16238 = !DIDerivedType(tag: DW_TAG_member, name: "keymat", scope: !16235, file: !11911, line: 2084, baseType: !16239, size: 448, offset: 64)
!16239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16235, file: !11911, line: 2082, size: 448, elements: !16240)
!16240 = !{!16241}
!16241 = !DIDerivedType(tag: DW_TAG_member, name: "aes_gcm", scope: !16239, file: !11911, line: 2083, baseType: !16242, size: 448)
!16242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uverbs_flow_action_esp_keymat_aes_gcm", file: !11878, line: 152, size: 448, elements: !16243)
!16243 = !{!16244, !16245, !16246, !16247, !16248, !16249}
!16244 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !16242, file: !11878, line: 153, baseType: !231, size: 64, align: 64)
!16245 = !DIDerivedType(tag: DW_TAG_member, name: "iv_algo", scope: !16242, file: !11878, line: 154, baseType: !226, size: 32, offset: 64)
!16246 = !DIDerivedType(tag: DW_TAG_member, name: "salt", scope: !16242, file: !11878, line: 156, baseType: !226, size: 32, offset: 96)
!16247 = !DIDerivedType(tag: DW_TAG_member, name: "icv_len", scope: !16242, file: !11878, line: 157, baseType: !226, size: 32, offset: 128)
!16248 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !16242, file: !11878, line: 159, baseType: !226, size: 32, offset: 160)
!16249 = !DIDerivedType(tag: DW_TAG_member, name: "aes_key", scope: !16242, file: !11878, line: 160, baseType: !4714, size: 256, offset: 192)
!16250 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !16231, file: !11911, line: 2112, baseType: !16251, size: 64, offset: 64)
!16251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16252, size: 64)
!16252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action_attrs_esp_replays", file: !11911, line: 2087, size: 64, elements: !16253)
!16253 = !{!16254, !16255}
!16254 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !16252, file: !11911, line: 2088, baseType: !12190, size: 32)
!16255 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !16252, file: !11911, line: 2091, baseType: !16256, size: 32, offset: 32)
!16256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16252, file: !11911, line: 2089, size: 32, elements: !16257)
!16257 = !{!16258}
!16258 = !DIDerivedType(tag: DW_TAG_member, name: "bmp", scope: !16256, file: !11911, line: 2090, baseType: !16259, size: 32)
!16259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uverbs_flow_action_esp_replay_bmp", file: !11878, line: 168, size: 32, elements: !16260)
!16260 = !{!16261}
!16261 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16259, file: !11878, line: 169, baseType: !226, size: 32)
!16262 = !DIDerivedType(tag: DW_TAG_member, name: "encap", scope: !16231, file: !11911, line: 2113, baseType: !16263, size: 64, offset: 128)
!16263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16264, size: 64)
!16264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_list", file: !11911, line: 2105, size: 768, elements: !16265)
!16265 = !{!16266, !16267}
!16266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16264, file: !11911, line: 2106, baseType: !16263, size: 64)
!16267 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !16264, file: !11911, line: 2107, baseType: !16067, size: 704, offset: 64)
!16268 = !DIDerivedType(tag: DW_TAG_member, name: "esn", scope: !16231, file: !11911, line: 2117, baseType: !224, size: 32, offset: 192)
!16269 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !16231, file: !11911, line: 2118, baseType: !224, size: 32, offset: 224)
!16270 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !16231, file: !11911, line: 2119, baseType: !224, size: 32, offset: 256)
!16271 = !DIDerivedType(tag: DW_TAG_member, name: "tfc_pad", scope: !16231, file: !11911, line: 2120, baseType: !224, size: 32, offset: 288)
!16272 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16231, file: !11911, line: 2122, baseType: !230, size: 64, offset: 320)
!16273 = !DIDerivedType(tag: DW_TAG_member, name: "hard_limit_pkts", scope: !16231, file: !11911, line: 2123, baseType: !230, size: 64, offset: 384)
!16274 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_flow_action", scope: !15037, file: !11911, line: 2463, baseType: !16275, size: 64, offset: 4416)
!16275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16276, size: 64)
!16276 = !DISubroutineType(types: !16277)
!16277 = !{!6, !16208}
!16278 = !DIDerivedType(tag: DW_TAG_member, name: "modify_flow_action_esp", scope: !15037, file: !11911, line: 2464, baseType: !16279, size: 64, offset: 4480)
!16279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16280, size: 64)
!16280 = !DISubroutineType(types: !16281)
!16281 = !{!6, !16208, !16229, !15989}
!16282 = !DIDerivedType(tag: DW_TAG_member, name: "set_vf_link_state", scope: !15037, file: !11911, line: 2468, baseType: !16283, size: 64, offset: 4544)
!16283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16284, size: 64)
!16284 = !DISubroutineType(types: !16285)
!16285 = !{!6, !15032, !6, !1398, !6}
!16286 = !DIDerivedType(tag: DW_TAG_member, name: "get_vf_config", scope: !15037, file: !11911, line: 2470, baseType: !16287, size: 64, offset: 4608)
!16287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16288, size: 64)
!16288 = !DISubroutineType(types: !16289)
!16289 = !{!6, !15032, !6, !1398, !2760}
!16290 = !DIDerivedType(tag: DW_TAG_member, name: "get_vf_stats", scope: !15037, file: !11911, line: 2472, baseType: !16291, size: 64, offset: 4672)
!16291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16292, size: 64)
!16292 = !DISubroutineType(types: !16293)
!16293 = !{!6, !15032, !6, !1398, !2784}
!16294 = !DIDerivedType(tag: DW_TAG_member, name: "get_vf_guid", scope: !15037, file: !11911, line: 2474, baseType: !16295, size: 64, offset: 4736)
!16295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16296, size: 64)
!16296 = !DISubroutineType(types: !16297)
!16297 = !{!6, !15032, !6, !1398, !2809, !2809}
!16298 = !DIDerivedType(tag: DW_TAG_member, name: "set_vf_guid", scope: !15037, file: !11911, line: 2477, baseType: !16299, size: 64, offset: 4800)
!16299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16300, size: 64)
!16300 = !DISubroutineType(types: !16301)
!16301 = !{!6, !15032, !6, !1398, !230, !6}
!16302 = !DIDerivedType(tag: DW_TAG_member, name: "create_wq", scope: !15037, file: !11911, line: 2479, baseType: !16303, size: 64, offset: 4864)
!16303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16304, size: 64)
!16304 = !DISubroutineType(types: !16305)
!16305 = !{!15215, !15052, !16306, !15614}
!16306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16307, size: 64)
!16307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wq_init_attr", file: !11911, line: 1659, size: 384, elements: !16308)
!16308 = !{!16309, !16310, !16311, !16312, !16313, !16314, !16315}
!16309 = !DIDerivedType(tag: DW_TAG_member, name: "wq_context", scope: !16307, file: !11911, line: 1660, baseType: !154, size: 64)
!16310 = !DIDerivedType(tag: DW_TAG_member, name: "wq_type", scope: !16307, file: !11911, line: 1661, baseType: !11938, size: 32, offset: 64)
!16311 = !DIDerivedType(tag: DW_TAG_member, name: "max_wr", scope: !16307, file: !11911, line: 1662, baseType: !224, size: 32, offset: 96)
!16312 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge", scope: !16307, file: !11911, line: 1663, baseType: !224, size: 32, offset: 128)
!16313 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !16307, file: !11911, line: 1664, baseType: !15156, size: 64, offset: 192)
!16314 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !16307, file: !11911, line: 1665, baseType: !15169, size: 64, offset: 256)
!16315 = !DIDerivedType(tag: DW_TAG_member, name: "create_flags", scope: !16307, file: !11911, line: 1666, baseType: !224, size: 32, offset: 320)
!16316 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_wq", scope: !15037, file: !11911, line: 2482, baseType: !16317, size: 64, offset: 4928)
!16317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16318, size: 64)
!16318 = !DISubroutineType(types: !16319)
!16319 = !{!6, !15215, !15614}
!16320 = !DIDerivedType(tag: DW_TAG_member, name: "modify_wq", scope: !15037, file: !11911, line: 2483, baseType: !16321, size: 64, offset: 4992)
!16321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16322, size: 64)
!16322 = !DISubroutineType(types: !16323)
!16323 = !{!6, !15215, !16324, !224, !15614}
!16324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16325, size: 64)
!16325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wq_attr", file: !11911, line: 1675, size: 128, elements: !16326)
!16326 = !{!16327, !16328, !16329, !16330}
!16327 = !DIDerivedType(tag: DW_TAG_member, name: "wq_state", scope: !16325, file: !11911, line: 1676, baseType: !11933, size: 32)
!16328 = !DIDerivedType(tag: DW_TAG_member, name: "curr_wq_state", scope: !16325, file: !11911, line: 1677, baseType: !11933, size: 32, offset: 32)
!16329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16325, file: !11911, line: 1678, baseType: !224, size: 32, offset: 64)
!16330 = !DIDerivedType(tag: DW_TAG_member, name: "flags_mask", scope: !16325, file: !11911, line: 1679, baseType: !224, size: 32, offset: 96)
!16331 = !DIDerivedType(tag: DW_TAG_member, name: "create_rwq_ind_table", scope: !15037, file: !11911, line: 2485, baseType: !16332, size: 64, offset: 5056)
!16332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16333, size: 64)
!16333 = !DISubroutineType(types: !16334)
!16334 = !{!6, !15369, !16335, !15614}
!16335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16336, size: 64)
!16336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rwq_ind_table_init_attr", file: !11911, line: 1691, size: 128, elements: !16337)
!16337 = !{!16338, !16339}
!16338 = !DIDerivedType(tag: DW_TAG_member, name: "log_ind_tbl_size", scope: !16336, file: !11911, line: 1692, baseType: !224, size: 32)
!16339 = !DIDerivedType(tag: DW_TAG_member, name: "ind_tbl", scope: !16336, file: !11911, line: 1694, baseType: !15378, size: 64, offset: 64)
!16340 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_rwq_ind_table", scope: !15037, file: !11911, line: 2488, baseType: !16341, size: 64, offset: 5120)
!16341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16342, size: 64)
!16342 = !DISubroutineType(types: !16343)
!16343 = !{!6, !15369}
!16344 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dm", scope: !15037, file: !11911, line: 2489, baseType: !16345, size: 64, offset: 5184)
!16345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16346, size: 64)
!16346 = !DISubroutineType(types: !16347)
!16347 = !{!15119, !15032, !15067, !16348, !15989}
!16348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16349, size: 64)
!16349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_dm_alloc_attr", file: !11911, line: 372, size: 128, elements: !16350)
!16350 = !{!16351, !16352, !16353}
!16351 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !16349, file: !11911, line: 373, baseType: !230, size: 64)
!16352 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !16349, file: !11911, line: 374, baseType: !224, size: 32, offset: 64)
!16353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16349, file: !11911, line: 375, baseType: !224, size: 32, offset: 96)
!16354 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_dm", scope: !15037, file: !11911, line: 2493, baseType: !16355, size: 64, offset: 5248)
!16355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16356, size: 64)
!16356 = !DISubroutineType(types: !16357)
!16357 = !{!6, !15119, !15989}
!16358 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dm_mr", scope: !15037, file: !11911, line: 2494, baseType: !16359, size: 64, offset: 5312)
!16359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16360, size: 64)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{!15101, !15052, !15119, !16362, !15989}
!16362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16363, size: 64)
!16363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_dm_mr_attr", file: !11911, line: 366, size: 192, elements: !16364)
!16364 = !{!16365, !16366, !16367}
!16365 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !16363, file: !11911, line: 367, baseType: !230, size: 64)
!16366 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !16363, file: !11911, line: 368, baseType: !230, size: 64, offset: 64)
!16367 = !DIDerivedType(tag: DW_TAG_member, name: "access_flags", scope: !16363, file: !11911, line: 369, baseType: !224, size: 32, offset: 128)
!16368 = !DIDerivedType(tag: DW_TAG_member, name: "create_counters", scope: !15037, file: !11911, line: 2497, baseType: !16369, size: 64, offset: 5376)
!16369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16370, size: 64)
!16370 = !DISubroutineType(types: !16371)
!16371 = !{!6, !15028, !15989}
!16372 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_counters", scope: !15037, file: !11911, line: 2499, baseType: !16373, size: 64, offset: 5440)
!16373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16374, size: 64)
!16374 = !DISubroutineType(types: !16375)
!16375 = !{!6, !15028}
!16376 = !DIDerivedType(tag: DW_TAG_member, name: "read_counters", scope: !15037, file: !11911, line: 2500, baseType: !16377, size: 64, offset: 5504)
!16377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16378, size: 64)
!16378 = !DISubroutineType(types: !16379)
!16379 = !{!6, !15028, !16380, !15989}
!16380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16381, size: 64)
!16381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_counters_read_attr", file: !11911, line: 2240, size: 128, elements: !16382)
!16382 = !{!16383, !16384, !16385}
!16383 = !DIDerivedType(tag: DW_TAG_member, name: "counters_buff", scope: !16381, file: !11911, line: 2241, baseType: !3567, size: 64)
!16384 = !DIDerivedType(tag: DW_TAG_member, name: "ncounters", scope: !16381, file: !11911, line: 2242, baseType: !224, size: 32, offset: 64)
!16385 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16381, file: !11911, line: 2243, baseType: !224, size: 32, offset: 96)
!16386 = !DIDerivedType(tag: DW_TAG_member, name: "map_mr_sg_pi", scope: !15037, file: !11911, line: 2503, baseType: !16387, size: 64, offset: 5568)
!16387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16388, size: 64)
!16388 = !DISubroutineType(types: !16389)
!16389 = !{!6, !15101, !15995, !6, !8977, !15995, !6, !8977}
!16390 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hw_stats", scope: !15037, file: !11911, line: 2514, baseType: !16391, size: 64, offset: 5632)
!16391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16392, size: 64)
!16392 = !DISubroutineType(types: !16393)
!16393 = !{!15429, !15032, !1398}
!16394 = !DIDerivedType(tag: DW_TAG_member, name: "get_hw_stats", scope: !15037, file: !11911, line: 2528, baseType: !16395, size: 64, offset: 5696)
!16395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16396, size: 64)
!16396 = !DISubroutineType(types: !16397)
!16397 = !{!6, !15032, !15429, !1398, !6}
!16398 = !DIDerivedType(tag: DW_TAG_member, name: "init_port", scope: !15037, file: !11911, line: 2534, baseType: !16399, size: 64, offset: 5760)
!16399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16400, size: 64)
!16400 = !DISubroutineType(types: !16401)
!16401 = !{!6, !15032, !1398, !32}
!16402 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_mr_entry", scope: !15037, file: !11911, line: 2539, baseType: !16403, size: 64, offset: 5824)
!16403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16404, size: 64)
!16404 = !DISubroutineType(types: !16405)
!16405 = !{!6, !2148, !15101}
!16406 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_mr_entry_raw", scope: !15037, file: !11911, line: 2540, baseType: !16403, size: 64, offset: 5888)
!16407 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_cq_entry", scope: !15037, file: !11911, line: 2541, baseType: !16408, size: 64, offset: 5952)
!16408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16409, size: 64)
!16409 = !DISubroutineType(types: !16410)
!16410 = !{!6, !2148, !15156}
!16411 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_cq_entry_raw", scope: !15037, file: !11911, line: 2542, baseType: !16408, size: 64, offset: 6016)
!16412 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_qp_entry", scope: !15037, file: !11911, line: 2543, baseType: !16413, size: 64, offset: 6080)
!16413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16414, size: 64)
!16414 = !DISubroutineType(types: !16415)
!16415 = !{!6, !2148, !15047}
!16416 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_qp_entry_raw", scope: !15037, file: !11911, line: 2544, baseType: !16413, size: 64, offset: 6144)
!16417 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_cm_id_entry", scope: !15037, file: !11911, line: 2545, baseType: !16418, size: 64, offset: 6208)
!16418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16419, size: 64)
!16419 = !DISubroutineType(types: !16420)
!16420 = !{!6, !2148, !16421}
!16421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16422, size: 64)
!16422 = !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_cm_id", file: !11911, line: 51, flags: DIFlagFwdDecl)
!16423 = !DIDerivedType(tag: DW_TAG_member, name: "enable_driver", scope: !15037, file: !11911, line: 2552, baseType: !16424, size: 64, offset: 6272)
!16424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16425, size: 64)
!16425 = !DISubroutineType(types: !16426)
!16426 = !{!6, !15032}
!16427 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_driver", scope: !15037, file: !11911, line: 2556, baseType: !16428, size: 64, offset: 6336)
!16428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16429, size: 64)
!16429 = !DISubroutineType(types: !16430)
!16430 = !{null, !15032}
!16431 = !DIDerivedType(tag: DW_TAG_member, name: "iw_add_ref", scope: !15037, file: !11911, line: 2559, baseType: !15487, size: 64, offset: 6400)
!16432 = !DIDerivedType(tag: DW_TAG_member, name: "iw_rem_ref", scope: !15037, file: !11911, line: 2560, baseType: !15487, size: 64, offset: 6464)
!16433 = !DIDerivedType(tag: DW_TAG_member, name: "iw_get_qp", scope: !15037, file: !11911, line: 2561, baseType: !16434, size: 64, offset: 6528)
!16434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16435, size: 64)
!16435 = !DISubroutineType(types: !16436)
!16436 = !{!15047, !15032, !6}
!16437 = !DIDerivedType(tag: DW_TAG_member, name: "iw_connect", scope: !15037, file: !11911, line: 2562, baseType: !16438, size: 64, offset: 6592)
!16438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16439, size: 64)
!16439 = !DISubroutineType(types: !16440)
!16440 = !{!6, !16441, !16443}
!16441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16442, size: 64)
!16442 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_cm_id", file: !11911, line: 2247, flags: DIFlagFwdDecl)
!16443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16444, size: 64)
!16444 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_cm_conn_param", file: !11911, line: 2248, flags: DIFlagFwdDecl)
!16445 = !DIDerivedType(tag: DW_TAG_member, name: "iw_accept", scope: !15037, file: !11911, line: 2564, baseType: !16438, size: 64, offset: 6656)
!16446 = !DIDerivedType(tag: DW_TAG_member, name: "iw_reject", scope: !15037, file: !11911, line: 2566, baseType: !16447, size: 64, offset: 6720)
!16447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16448, size: 64)
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!6, !16441, !2449, !1398}
!16450 = !DIDerivedType(tag: DW_TAG_member, name: "iw_create_listen", scope: !15037, file: !11911, line: 2568, baseType: !16451, size: 64, offset: 6784)
!16451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16452, size: 64)
!16452 = !DISubroutineType(types: !16453)
!16453 = !{!6, !16441, !6}
!16454 = !DIDerivedType(tag: DW_TAG_member, name: "iw_destroy_listen", scope: !15037, file: !11911, line: 2569, baseType: !16455, size: 64, offset: 6848)
!16455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16456, size: 64)
!16456 = !DISubroutineType(types: !16457)
!16457 = !{!6, !16441}
!16458 = !DIDerivedType(tag: DW_TAG_member, name: "counter_bind_qp", scope: !15037, file: !11911, line: 2575, baseType: !16459, size: 64, offset: 6912)
!16459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16460, size: 64)
!16460 = !DISubroutineType(types: !16461)
!16461 = !{!6, !15410, !15047}
!16462 = !DIDerivedType(tag: DW_TAG_member, name: "counter_unbind_qp", scope: !15037, file: !11911, line: 2580, baseType: !16463, size: 64, offset: 6976)
!16463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16464, size: 64)
!16464 = !DISubroutineType(types: !16465)
!16465 = !{!6, !15047}
!16466 = !DIDerivedType(tag: DW_TAG_member, name: "counter_dealloc", scope: !15037, file: !11911, line: 2584, baseType: !16467, size: 64, offset: 7040)
!16467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16468, size: 64)
!16468 = !DISubroutineType(types: !16469)
!16469 = !{!6, !15410}
!16470 = !DIDerivedType(tag: DW_TAG_member, name: "counter_alloc_stats", scope: !15037, file: !11911, line: 2589, baseType: !16471, size: 64, offset: 7104)
!16471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16472, size: 64)
!16472 = !DISubroutineType(types: !16473)
!16473 = !{!15429, !15410}
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "counter_update_stats", scope: !15037, file: !11911, line: 2594, baseType: !16467, size: 64, offset: 7168)
!16475 = !DIDerivedType(tag: DW_TAG_member, name: "fill_stat_mr_entry", scope: !15037, file: !11911, line: 2600, baseType: !16403, size: 64, offset: 7232)
!16476 = !DIDerivedType(tag: DW_TAG_member, name: "query_ucontext", scope: !15037, file: !11911, line: 2603, baseType: !16477, size: 64, offset: 7296)
!16477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16478, size: 64)
!16478 = !DISubroutineType(types: !16479)
!16479 = !{!6, !15067, !15989}
!16480 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_ah", scope: !15037, file: !11911, line: 2606, baseType: !127, size: 64, offset: 7360)
!16481 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_counters", scope: !15037, file: !11911, line: 2607, baseType: !127, size: 64, offset: 7424)
!16482 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_cq", scope: !15037, file: !11911, line: 2608, baseType: !127, size: 64, offset: 7488)
!16483 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_mw", scope: !15037, file: !11911, line: 2609, baseType: !127, size: 64, offset: 7552)
!16484 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_pd", scope: !15037, file: !11911, line: 2610, baseType: !127, size: 64, offset: 7616)
!16485 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_rwq_ind_table", scope: !15037, file: !11911, line: 2611, baseType: !127, size: 64, offset: 7680)
!16486 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_srq", scope: !15037, file: !11911, line: 2612, baseType: !127, size: 64, offset: 7744)
!16487 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_ucontext", scope: !15037, file: !11911, line: 2613, baseType: !127, size: 64, offset: 7808)
!16488 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_xrcd", scope: !15037, file: !11911, line: 2614, baseType: !127, size: 64, offset: 7872)
!16489 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15033, file: !11911, line: 2633, baseType: !7617, size: 512, offset: 8000)
!16490 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !15033, file: !11911, line: 2634, baseType: !173, size: 128, align: 64, offset: 8512)
!16491 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler_list", scope: !15033, file: !11911, line: 2636, baseType: !25, size: 128, offset: 8640)
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler_rwsem", scope: !15033, file: !11911, line: 2638, baseType: !647, size: 256, offset: 8768)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "qp_open_list_lock", scope: !15033, file: !11911, line: 2641, baseType: !39, offset: 9024)
!16494 = !DIDerivedType(tag: DW_TAG_member, name: "client_data_rwsem", scope: !15033, file: !11911, line: 2643, baseType: !647, size: 256, offset: 9024)
!16495 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !15033, file: !11911, line: 2644, baseType: !618, size: 128, offset: 9280)
!16496 = !DIDerivedType(tag: DW_TAG_member, name: "unregistration_lock", scope: !15033, file: !11911, line: 2645, baseType: !553, size: 192, offset: 9408)
!16497 = !DIDerivedType(tag: DW_TAG_member, name: "cache_lock", scope: !15033, file: !11911, line: 2648, baseType: !829, offset: 9600)
!16498 = !DIDerivedType(tag: DW_TAG_member, name: "port_data", scope: !15033, file: !11911, line: 2652, baseType: !16499, size: 64, offset: 9600)
!16499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16500, size: 64)
!16500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_data", file: !11911, line: 2164, size: 1280, elements: !16501)
!16501 = !{!16502, !16503, !16504, !16505, !16506, !16518, !16519, !16520, !16521, !16528}
!16502 = !DIDerivedType(tag: DW_TAG_member, name: "ib_dev", scope: !16500, file: !11911, line: 2165, baseType: !15032, size: 64)
!16503 = !DIDerivedType(tag: DW_TAG_member, name: "immutable", scope: !16500, file: !11911, line: 2167, baseType: !15685, size: 128, offset: 64)
!16504 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_list_lock", scope: !16500, file: !11911, line: 2169, baseType: !39, offset: 192)
!16505 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_list", scope: !16500, file: !11911, line: 2170, baseType: !25, size: 128, offset: 192)
!16506 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16500, file: !11911, line: 2172, baseType: !16507, size: 256, offset: 320)
!16507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_cache", file: !11911, line: 2149, size: 256, elements: !16508)
!16508 = !{!16509, !16510, !16513, !16516, !16517}
!16509 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_prefix", scope: !16507, file: !11911, line: 2150, baseType: !230, size: 64)
!16510 = !DIDerivedType(tag: DW_TAG_member, name: "pkey", scope: !16507, file: !11911, line: 2151, baseType: !16511, size: 64, offset: 64)
!16511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16512, size: 64)
!16512 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_pkey_cache", file: !11911, line: 2151, flags: DIFlagFwdDecl)
!16513 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !16507, file: !11911, line: 2152, baseType: !16514, size: 64, offset: 128)
!16514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16515, size: 64)
!16515 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_gid_table", file: !11911, line: 2152, flags: DIFlagFwdDecl)
!16516 = !DIDerivedType(tag: DW_TAG_member, name: "lmc", scope: !16507, file: !11911, line: 2153, baseType: !1398, size: 8, offset: 192)
!16517 = !DIDerivedType(tag: DW_TAG_member, name: "port_state", scope: !16507, file: !11911, line: 2154, baseType: !12094, size: 32, offset: 224)
!16518 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_lock", scope: !16500, file: !11911, line: 2174, baseType: !39, offset: 576)
!16519 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !16500, file: !11911, line: 2175, baseType: !2164, size: 64, offset: 576)
!16520 = !DIDerivedType(tag: DW_TAG_member, name: "ndev_hash_link", scope: !16500, file: !11911, line: 2176, baseType: !450, size: 128, offset: 640)
!16521 = !DIDerivedType(tag: DW_TAG_member, name: "port_counter", scope: !16500, file: !11911, line: 2177, baseType: !16522, size: 448, offset: 768)
!16522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_port_counter", file: !15412, line: 28, size: 448, elements: !16523)
!16523 = !{!16524, !16525, !16526, !16527}
!16524 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !16522, file: !15412, line: 29, baseType: !15419, size: 96)
!16525 = !DIDerivedType(tag: DW_TAG_member, name: "hstats", scope: !16522, file: !15412, line: 30, baseType: !15429, size: 64, offset: 128)
!16526 = !DIDerivedType(tag: DW_TAG_member, name: "num_counters", scope: !16522, file: !15412, line: 31, baseType: !194, size: 32, offset: 192)
!16527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16522, file: !15412, line: 32, baseType: !553, size: 192, offset: 256)
!16528 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stats", scope: !16500, file: !11911, line: 2178, baseType: !15429, size: 64, offset: 1216)
!16529 = !DIDerivedType(tag: DW_TAG_member, name: "num_comp_vectors", scope: !15033, file: !11911, line: 2654, baseType: !6, size: 32, offset: 9664)
!16530 = !DIDerivedType(tag: DW_TAG_member, scope: !15033, file: !11911, line: 2656, baseType: !16531, size: 5888, offset: 9728)
!16531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15033, file: !11911, line: 2656, size: 5888, elements: !16532)
!16532 = !{!16533, !16534}
!16533 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !16531, file: !11911, line: 2657, baseType: !13, size: 5568)
!16534 = !DIDerivedType(tag: DW_TAG_member, name: "coredev", scope: !16531, file: !11911, line: 2658, baseType: !16535, size: 5888)
!16535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_core_device", file: !11911, line: 2617, size: 5888, elements: !16536)
!16536 = !{!16537, !16538, !16539, !16540, !16541}
!16537 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !16535, file: !11911, line: 2621, baseType: !13, size: 5568)
!16538 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_net", scope: !16535, file: !11911, line: 2622, baseType: !2423, size: 64, offset: 5568)
!16539 = !DIDerivedType(tag: DW_TAG_member, name: "ports_kobj", scope: !16535, file: !11911, line: 2623, baseType: !32, size: 64, offset: 5632)
!16540 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !16535, file: !11911, line: 2624, baseType: !25, size: 128, offset: 5696)
!16541 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16535, file: !11911, line: 2625, baseType: !15032, size: 64, offset: 5824)
!16542 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !15033, file: !11911, line: 2665, baseType: !16543, size: 192, offset: 15616)
!16543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 192, elements: !81)
!16544 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_cmd_mask", scope: !15033, file: !11911, line: 2667, baseType: !230, size: 64, offset: 15808)
!16545 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_ex_cmd_mask", scope: !15033, file: !11911, line: 2668, baseType: !230, size: 64, offset: 15872)
!16546 = !DIDerivedType(tag: DW_TAG_member, name: "node_desc", scope: !15033, file: !11911, line: 2670, baseType: !7617, size: 512, offset: 15936)
!16547 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !15033, file: !11911, line: 2671, baseType: !10471, size: 64, offset: 16448)
!16548 = !DIDerivedType(tag: DW_TAG_member, name: "local_dma_lkey", scope: !15033, file: !11911, line: 2672, baseType: !224, size: 32, offset: 16512)
!16549 = !DIDerivedType(tag: DW_TAG_member, name: "is_switch", scope: !15033, file: !11911, line: 2673, baseType: !739, size: 1, offset: 16544, flags: DIFlagBitField, extraData: i64 16544)
!16550 = !DIDerivedType(tag: DW_TAG_member, name: "kverbs_provider", scope: !15033, file: !11911, line: 2675, baseType: !739, size: 1, offset: 16545, flags: DIFlagBitField, extraData: i64 16544)
!16551 = !DIDerivedType(tag: DW_TAG_member, name: "use_cq_dim", scope: !15033, file: !11911, line: 2677, baseType: !739, size: 1, offset: 16546, flags: DIFlagBitField, extraData: i64 16544)
!16552 = !DIDerivedType(tag: DW_TAG_member, name: "node_type", scope: !15033, file: !11911, line: 2678, baseType: !1398, size: 8, offset: 16552)
!16553 = !DIDerivedType(tag: DW_TAG_member, name: "phys_port_cnt", scope: !15033, file: !11911, line: 2679, baseType: !1398, size: 8, offset: 16560)
!16554 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !15033, file: !11911, line: 2680, baseType: !15533, size: 2368, offset: 16576)
!16555 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stats_ag", scope: !15033, file: !11911, line: 2681, baseType: !16556, size: 64, offset: 18944)
!16556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!16557 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stats", scope: !15033, file: !11911, line: 2682, baseType: !15429, size: 64, offset: 19008)
!16558 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !15033, file: !11911, line: 2688, baseType: !224, size: 32, offset: 19072)
!16559 = !DIDerivedType(tag: DW_TAG_member, name: "cq_pools_lock", scope: !15033, file: !11911, line: 2690, baseType: !39, offset: 19104)
!16560 = !DIDerivedType(tag: DW_TAG_member, name: "cq_pools", scope: !15033, file: !11911, line: 2691, baseType: !16561, size: 384, offset: 19136)
!16561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 384, elements: !81)
!16562 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !15033, file: !11911, line: 2693, baseType: !16563, size: 64, offset: 19520)
!16563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16564, size: 64)
!16564 = !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_restrack_root", file: !11911, line: 2628, flags: DIFlagFwdDecl)
!16565 = !DIDerivedType(tag: DW_TAG_member, name: "driver_def", scope: !15033, file: !11911, line: 2695, baseType: !16566, size: 64, offset: 19584)
!16566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16567, size: 64)
!16567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16568)
!16568 = !DICompositeType(tag: DW_TAG_structure_type, name: "uapi_definition", file: !11911, line: 2695, flags: DIFlagFwdDecl)
!16569 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !15033, file: !11911, line: 2701, baseType: !875, size: 32, offset: 19648)
!16570 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_completion", scope: !15033, file: !11911, line: 2702, baseType: !1784, size: 192, offset: 19712)
!16571 = !DIDerivedType(tag: DW_TAG_member, name: "unregistration_work", scope: !15033, file: !11911, line: 2703, baseType: !1723, size: 256, offset: 19904)
!16572 = !DIDerivedType(tag: DW_TAG_member, name: "link_ops", scope: !15033, file: !11911, line: 2705, baseType: !16573, size: 64, offset: 20160)
!16573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16574, size: 64)
!16574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16575)
!16575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_link_ops", file: !16576, line: 113, size: 256, elements: !16577)
!16576 = !DIFile(filename: "./include/rdma/rdma_netlink.h", directory: "/home/lizy2001/genbc/linux")
!16577 = !{!16578, !16579, !16580}
!16578 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !16575, file: !16576, line: 114, baseType: !25, size: 128)
!16579 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16575, file: !16576, line: 115, baseType: !21, size: 64, offset: 128)
!16580 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !16575, file: !16576, line: 116, baseType: !16581, size: 64, offset: 192)
!16581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16582, size: 64)
!16582 = !DISubroutineType(types: !16583)
!16583 = !{!6, !21, !2164}
!16584 = !DIDerivedType(tag: DW_TAG_member, name: "compat_devs_mutex", scope: !15033, file: !11911, line: 2708, baseType: !553, size: 192, offset: 20224)
!16585 = !DIDerivedType(tag: DW_TAG_member, name: "compat_devs", scope: !15033, file: !11911, line: 2710, baseType: !618, size: 128, offset: 20416)
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "iw_ifname", scope: !15033, file: !11911, line: 2713, baseType: !1938, size: 128, offset: 20544)
!16587 = !DIDerivedType(tag: DW_TAG_member, name: "iw_driver_flags", scope: !15033, file: !11911, line: 2714, baseType: !224, size: 32, offset: 20672)
!16588 = !DIDerivedType(tag: DW_TAG_member, name: "lag_flags", scope: !15033, file: !11911, line: 2715, baseType: !224, size: 32, offset: 20704)
!16589 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !15029, file: !11911, line: 2235, baseType: !15059, size: 64, offset: 64)
!16590 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !15029, file: !11911, line: 2237, baseType: !627, size: 32, offset: 128)
!16591 = !DILocation(line: 2100, column: 23, scope: !15000)
!16592 = !DILocalVariable(name: "flow_rule", scope: !15000, file: !3, line: 2101, type: !10844)
!16593 = !DILocation(line: 2101, column: 27, scope: !15000)
!16594 = !DILocalVariable(name: "spec", scope: !15000, file: !3, line: 2102, type: !16595)
!16595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16596, size: 64)
!16596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_spec", file: !10857, line: 110, size: 8320, elements: !16597)
!16597 = !{!16598, !16599, !16601, !16602}
!16598 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria_enable", scope: !16596, file: !10857, line: 111, baseType: !1398, size: 8)
!16599 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria", scope: !16596, file: !10857, line: 112, baseType: !16600, size: 4096, offset: 32)
!16600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 4096, elements: !3216)
!16601 = !DIDerivedType(tag: DW_TAG_member, name: "match_value", scope: !16596, file: !10857, line: 113, baseType: !16600, size: 4096, offset: 4128)
!16602 = !DIDerivedType(tag: DW_TAG_member, name: "flow_context", scope: !16596, file: !10857, line: 114, baseType: !16603, size: 96, offset: 8224)
!16603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_context", file: !10857, line: 104, size: 96, elements: !16604)
!16604 = !{!16605, !16606, !16607}
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16603, file: !10857, line: 105, baseType: !224, size: 32)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "flow_tag", scope: !16603, file: !10857, line: 106, baseType: !224, size: 32, offset: 32)
!16607 = !DIDerivedType(tag: DW_TAG_member, name: "flow_source", scope: !16603, file: !10857, line: 107, baseType: !224, size: 32, offset: 64)
!16608 = !DILocation(line: 2102, column: 25, scope: !15000)
!16609 = !DILocalVariable(name: "err", scope: !15000, file: !3, line: 2103, type: !6)
!16610 = !DILocation(line: 2103, column: 6, scope: !15000)
!16611 = !DILocalVariable(name: "misc", scope: !15000, file: !3, line: 2104, type: !154)
!16612 = !DILocation(line: 2104, column: 8, scope: !15000)
!16613 = !DILocation(line: 2106, column: 7, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2106, column: 6)
!16615 = !DILocation(line: 2106, column: 6, scope: !15000)
!16616 = !DILocation(line: 2107, column: 26, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16614, file: !3, line: 2106, column: 16)
!16618 = !DILocation(line: 2107, column: 3, scope: !16617)
!16619 = !DILocation(line: 2108, column: 3, scope: !16617)
!16620 = !DILocation(line: 2111, column: 6, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2111, column: 6)
!16622 = !DILocation(line: 2111, column: 11, scope: !16621)
!16623 = !DILocation(line: 2111, column: 21, scope: !16621)
!16624 = !DILocation(line: 2111, column: 28, scope: !16621)
!16625 = !DILocation(line: 2111, column: 6, scope: !15000)
!16626 = !DILocation(line: 2112, column: 3, scope: !16621)
!16627 = !DILocation(line: 2114, column: 9, scope: !15000)
!16628 = !DILocation(line: 2114, column: 7, scope: !15000)
!16629 = !DILocation(line: 2115, column: 7, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2115, column: 6)
!16631 = !DILocation(line: 2115, column: 6, scope: !15000)
!16632 = !DILocation(line: 2116, column: 3, scope: !16630)
!16633 = !DILocation(line: 2119, column: 9, scope: !15000)
!16634 = !DILocation(line: 2119, column: 7, scope: !15000)
!16635 = !DILocation(line: 2120, column: 2, scope: !15000)
!16636 = !DILocalVariable(name: "_v", scope: !16637, file: !3, line: 2120, type: !224)
!16637 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2120, column: 2)
!16638 = !DILocation(line: 2120, column: 2, scope: !16637)
!16639 = !DILocation(line: 2120, column: 2, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16637, file: !3, line: 2120, column: 2)
!16641 = !DILocation(line: 2122, column: 9, scope: !15000)
!16642 = !DILocation(line: 2122, column: 7, scope: !15000)
!16643 = !DILocation(line: 2123, column: 2, scope: !15000)
!16644 = !DILocation(line: 2123, column: 2, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2123, column: 2)
!16646 = !DILocation(line: 2123, column: 2, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16645, file: !3, line: 2123, column: 2)
!16648 = !DILocation(line: 2125, column: 2, scope: !15000)
!16649 = !DILocation(line: 2125, column: 8, scope: !15000)
!16650 = !DILocation(line: 2125, column: 30, scope: !15000)
!16651 = !DILocation(line: 2126, column: 7, scope: !15000)
!16652 = !DILocation(line: 2126, column: 12, scope: !15000)
!16653 = !DILocation(line: 2127, column: 12, scope: !15000)
!16654 = !DILocation(line: 2127, column: 17, scope: !15000)
!16655 = !DILocation(line: 2127, column: 27, scope: !15000)
!16656 = !DILocation(line: 2127, column: 34, scope: !15000)
!16657 = !DILocation(line: 2127, column: 7, scope: !15000)
!16658 = !DILocation(line: 2127, column: 10, scope: !15000)
!16659 = !DILocation(line: 2128, column: 11, scope: !15000)
!16660 = !DILocation(line: 2128, column: 18, scope: !15000)
!16661 = !DILocation(line: 2129, column: 34, scope: !15000)
!16662 = !DILocation(line: 2129, column: 39, scope: !15000)
!16663 = !DILocation(line: 2129, column: 49, scope: !15000)
!16664 = !DILocation(line: 2129, column: 56, scope: !15000)
!16665 = !DILocation(line: 2129, column: 66, scope: !15000)
!16666 = !DILocation(line: 2129, column: 14, scope: !15000)
!16667 = !DILocation(line: 2129, column: 12, scope: !15000)
!16668 = !DILocation(line: 2131, column: 13, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2131, column: 6)
!16670 = !DILocation(line: 2131, column: 6, scope: !16669)
!16671 = !DILocation(line: 2131, column: 6, scope: !15000)
!16672 = !DILocation(line: 2132, column: 17, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16669, file: !3, line: 2131, column: 25)
!16674 = !DILocation(line: 2132, column: 9, scope: !16673)
!16675 = !DILocation(line: 2132, column: 7, scope: !16673)
!16676 = !DILocation(line: 2133, column: 3, scope: !16673)
!16677 = !DILocation(line: 2135, column: 44, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16669, file: !3, line: 2134, column: 9)
!16679 = !DILocation(line: 2135, column: 3, scope: !16678)
!16680 = !DILocation(line: 2135, column: 8, scope: !16678)
!16681 = !DILocation(line: 2135, column: 18, scope: !16678)
!16682 = !DILocation(line: 2135, column: 25, scope: !16678)
!16683 = !DILocation(line: 2135, column: 42, scope: !16678)
!16684 = !DILocation(line: 2139, column: 2, scope: !15000)
!16685 = !DILocation(line: 2140, column: 7, scope: !15000)
!16686 = !DILocation(line: 2140, column: 12, scope: !15000)
!16687 = !DILocation(line: 2141, column: 7, scope: !15000)
!16688 = !DILocation(line: 2141, column: 13, scope: !15000)
!16689 = !DILocation(line: 2141, column: 17, scope: !15000)
!16690 = !DILocation(line: 2142, column: 11, scope: !15000)
!16691 = !DILocation(line: 2142, column: 18, scope: !15000)
!16692 = !DILocation(line: 2143, column: 34, scope: !15000)
!16693 = !DILocation(line: 2143, column: 39, scope: !15000)
!16694 = !DILocation(line: 2143, column: 49, scope: !15000)
!16695 = !DILocation(line: 2143, column: 56, scope: !15000)
!16696 = !DILocation(line: 2143, column: 14, scope: !15000)
!16697 = !DILocation(line: 2143, column: 12, scope: !15000)
!16698 = !DILocation(line: 2145, column: 13, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2145, column: 6)
!16700 = !DILocation(line: 2145, column: 6, scope: !16699)
!16701 = !DILocation(line: 2145, column: 6, scope: !15000)
!16702 = !DILocation(line: 2146, column: 17, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16699, file: !3, line: 2145, column: 25)
!16704 = !DILocation(line: 2146, column: 9, scope: !16703)
!16705 = !DILocation(line: 2146, column: 7, scope: !16703)
!16706 = !DILocation(line: 2147, column: 3, scope: !16703)
!16707 = !DILocation(line: 2149, column: 42, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16699, file: !3, line: 2148, column: 9)
!16709 = !DILocation(line: 2149, column: 3, scope: !16708)
!16710 = !DILocation(line: 2149, column: 8, scope: !16708)
!16711 = !DILocation(line: 2149, column: 18, scope: !16708)
!16712 = !DILocation(line: 2149, column: 25, scope: !16708)
!16713 = !DILocation(line: 2149, column: 40, scope: !16708)
!16714 = !DILocation(line: 2145, column: 22, scope: !16699)
!16715 = !DILabel(scope: !15000, name: "out", file: !3, line: 2152)
!16716 = !DILocation(line: 2152, column: 1, scope: !15000)
!16717 = !DILocation(line: 2153, column: 9, scope: !15000)
!16718 = !DILocation(line: 2153, column: 2, scope: !15000)
!16719 = !DILocation(line: 2154, column: 6, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 2154, column: 6)
!16721 = !DILocation(line: 2154, column: 6, scope: !15000)
!16722 = !DILocation(line: 2155, column: 26, scope: !16720)
!16723 = !DILocation(line: 2155, column: 3, scope: !16720)
!16724 = !DILocation(line: 2156, column: 9, scope: !15000)
!16725 = !DILocation(line: 2156, column: 2, scope: !15000)
!16726 = !DILocation(line: 2157, column: 1, scope: !15000)
!16727 = distinct !DISubprogram(name: "mlx5_eswitch_get_vepa", scope: !3, file: !3, line: 2182, type: !16728, scopeLine: 2183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!16728 = !DISubroutineType(types: !16729)
!16729 = !{!6, !10791, !2742}
!16730 = !DILocalVariable(name: "esw", arg: 1, scope: !16727, file: !3, line: 2182, type: !10791)
!16731 = !DILocation(line: 2182, column: 48, scope: !16727)
!16732 = !DILocalVariable(name: "setting", arg: 2, scope: !16727, file: !3, line: 2182, type: !2742)
!16733 = !DILocation(line: 2182, column: 57, scope: !16727)
!16734 = !DILocation(line: 2184, column: 7, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16727, file: !3, line: 2184, column: 6)
!16736 = !DILocation(line: 2184, column: 6, scope: !16727)
!16737 = !DILocation(line: 2185, column: 3, scope: !16735)
!16738 = !DILocation(line: 2187, column: 7, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16727, file: !3, line: 2187, column: 6)
!16740 = !DILocation(line: 2187, column: 6, scope: !16727)
!16741 = !DILocation(line: 2188, column: 3, scope: !16739)
!16742 = !DILocation(line: 2190, column: 6, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16727, file: !3, line: 2190, column: 6)
!16744 = !DILocation(line: 2190, column: 11, scope: !16743)
!16745 = !DILocation(line: 2190, column: 16, scope: !16743)
!16746 = !DILocation(line: 2190, column: 6, scope: !16727)
!16747 = !DILocation(line: 2191, column: 3, scope: !16743)
!16748 = !DILocation(line: 2193, column: 13, scope: !16727)
!16749 = !DILocation(line: 2193, column: 18, scope: !16727)
!16750 = !DILocation(line: 2193, column: 28, scope: !16727)
!16751 = !DILocation(line: 2193, column: 35, scope: !16727)
!16752 = !DILocation(line: 2193, column: 3, scope: !16727)
!16753 = !DILocation(line: 2193, column: 11, scope: !16727)
!16754 = !DILocation(line: 2194, column: 2, scope: !16727)
!16755 = !DILocation(line: 2195, column: 1, scope: !16727)
!16756 = distinct !DISubprogram(name: "mlx5_eswitch_set_vport_trust", scope: !3, file: !3, line: 2197, type: !14866, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!16757 = !DILocalVariable(name: "esw", arg: 1, scope: !16756, file: !3, line: 2197, type: !10791)
!16758 = !DILocation(line: 2197, column: 55, scope: !16756)
!16759 = !DILocalVariable(name: "vport", arg: 2, scope: !16756, file: !3, line: 2198, type: !739)
!16760 = !DILocation(line: 2198, column: 10, scope: !16756)
!16761 = !DILocalVariable(name: "setting", arg: 3, scope: !16756, file: !3, line: 2198, type: !299)
!16762 = !DILocation(line: 2198, column: 22, scope: !16756)
!16763 = !DILocalVariable(name: "evport", scope: !16756, file: !3, line: 2200, type: !10958)
!16764 = !DILocation(line: 2200, column: 21, scope: !16756)
!16765 = !DILocation(line: 2200, column: 53, scope: !16756)
!16766 = !DILocation(line: 2200, column: 58, scope: !16756)
!16767 = !DILocation(line: 2200, column: 30, scope: !16756)
!16768 = !DILocation(line: 2202, column: 7, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16756, file: !3, line: 2202, column: 6)
!16770 = !DILocation(line: 2202, column: 6, scope: !16756)
!16771 = !DILocation(line: 2203, column: 3, scope: !16769)
!16772 = !DILocation(line: 2204, column: 13, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16756, file: !3, line: 2204, column: 6)
!16774 = !DILocation(line: 2204, column: 6, scope: !16773)
!16775 = !DILocation(line: 2204, column: 6, scope: !16756)
!16776 = !DILocation(line: 2205, column: 18, scope: !16773)
!16777 = !DILocation(line: 2205, column: 10, scope: !16773)
!16778 = !DILocation(line: 2205, column: 3, scope: !16773)
!16779 = !DILocation(line: 2207, column: 14, scope: !16756)
!16780 = !DILocation(line: 2207, column: 19, scope: !16756)
!16781 = !DILocation(line: 2207, column: 2, scope: !16756)
!16782 = !DILocation(line: 2208, column: 25, scope: !16756)
!16783 = !DILocation(line: 2208, column: 2, scope: !16756)
!16784 = !DILocation(line: 2208, column: 10, scope: !16756)
!16785 = !DILocation(line: 2208, column: 15, scope: !16756)
!16786 = !DILocation(line: 2208, column: 23, scope: !16756)
!16787 = !DILocation(line: 2209, column: 6, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16756, file: !3, line: 2209, column: 6)
!16789 = !DILocation(line: 2209, column: 14, scope: !16788)
!16790 = !DILocation(line: 2209, column: 6, scope: !16756)
!16791 = !DILocation(line: 2210, column: 34, scope: !16788)
!16792 = !DILocation(line: 2210, column: 3, scope: !16788)
!16793 = !DILocation(line: 2211, column: 16, scope: !16756)
!16794 = !DILocation(line: 2211, column: 21, scope: !16756)
!16795 = !DILocation(line: 2211, column: 2, scope: !16756)
!16796 = !DILocation(line: 2213, column: 2, scope: !16756)
!16797 = !DILocation(line: 2214, column: 1, scope: !16756)
!16798 = distinct !DISubprogram(name: "esw_vport_change_handle_locked", scope: !3, file: !3, line: 920, type: !16799, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!16799 = !DISubroutineType(types: !16800)
!16800 = !{null, !10958}
!16801 = !DILocalVariable(name: "vport", arg: 1, scope: !16798, file: !3, line: 920, type: !10958)
!16802 = !DILocation(line: 920, column: 63, scope: !16798)
!16803 = !DILocalVariable(name: "dev", scope: !16798, file: !3, line: 922, type: !7)
!16804 = !DILocation(line: 922, column: 24, scope: !16798)
!16805 = !DILocation(line: 922, column: 30, scope: !16798)
!16806 = !DILocation(line: 922, column: 37, scope: !16798)
!16807 = !DILocalVariable(name: "esw", scope: !16798, file: !3, line: 923, type: !10791)
!16808 = !DILocation(line: 923, column: 23, scope: !16798)
!16809 = !DILocation(line: 923, column: 29, scope: !16798)
!16810 = !DILocation(line: 923, column: 34, scope: !16798)
!16811 = !DILocation(line: 923, column: 39, scope: !16798)
!16812 = !DILocalVariable(name: "mac", scope: !16798, file: !3, line: 924, type: !10953)
!16813 = !DILocation(line: 924, column: 5, scope: !16798)
!16814 = !DILocation(line: 926, column: 35, scope: !16798)
!16815 = !DILocation(line: 926, column: 40, scope: !16798)
!16816 = !DILocation(line: 926, column: 47, scope: !16798)
!16817 = !DILocation(line: 926, column: 60, scope: !16798)
!16818 = !DILocation(line: 926, column: 2, scope: !16798)
!16819 = !DILocation(line: 927, column: 2, scope: !16798)
!16820 = !DILocation(line: 927, column: 2, scope: !16821)
!16821 = distinct !DILexicalBlock(scope: !16822, file: !3, line: 927, column: 2)
!16822 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 927, column: 2)
!16823 = !DILocation(line: 927, column: 2, scope: !16822)
!16824 = !DILocation(line: 930, column: 6, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 930, column: 6)
!16826 = !DILocation(line: 930, column: 13, scope: !16825)
!16827 = !DILocation(line: 930, column: 28, scope: !16825)
!16828 = !DILocation(line: 930, column: 6, scope: !16798)
!16829 = !DILocation(line: 931, column: 30, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 930, column: 57)
!16831 = !DILocation(line: 931, column: 35, scope: !16830)
!16832 = !DILocation(line: 931, column: 3, scope: !16830)
!16833 = !DILocation(line: 932, column: 29, scope: !16830)
!16834 = !DILocation(line: 932, column: 34, scope: !16830)
!16835 = !DILocation(line: 932, column: 3, scope: !16830)
!16836 = !DILocation(line: 933, column: 2, scope: !16830)
!16837 = !DILocation(line: 935, column: 6, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 935, column: 6)
!16839 = !DILocation(line: 935, column: 13, scope: !16838)
!16840 = !DILocation(line: 935, column: 28, scope: !16838)
!16841 = !DILocation(line: 935, column: 6, scope: !16798)
!16842 = !DILocation(line: 936, column: 30, scope: !16838)
!16843 = !DILocation(line: 936, column: 35, scope: !16838)
!16844 = !DILocation(line: 936, column: 3, scope: !16838)
!16845 = !DILocation(line: 938, column: 6, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 938, column: 6)
!16847 = !DILocation(line: 938, column: 13, scope: !16846)
!16848 = !DILocation(line: 938, column: 28, scope: !16846)
!16849 = !DILocation(line: 938, column: 6, scope: !16798)
!16850 = !DILocation(line: 939, column: 28, scope: !16851)
!16851 = distinct !DILexicalBlock(scope: !16846, file: !3, line: 938, column: 57)
!16852 = !DILocation(line: 939, column: 33, scope: !16851)
!16853 = !DILocation(line: 939, column: 3, scope: !16851)
!16854 = !DILocation(line: 940, column: 23, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16851, file: !3, line: 940, column: 7)
!16856 = !DILocation(line: 940, column: 30, scope: !16855)
!16857 = !DILocation(line: 940, column: 8, scope: !16855)
!16858 = !DILocation(line: 940, column: 7, scope: !16851)
!16859 = !DILocation(line: 941, column: 32, scope: !16855)
!16860 = !DILocation(line: 941, column: 37, scope: !16855)
!16861 = !DILocation(line: 941, column: 4, scope: !16855)
!16862 = !DILocation(line: 942, column: 2, scope: !16851)
!16863 = !DILocation(line: 944, column: 6, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 944, column: 6)
!16865 = !DILocation(line: 944, column: 13, scope: !16864)
!16866 = !DILocation(line: 944, column: 28, scope: !16864)
!16867 = !DILocation(line: 944, column: 6, scope: !16798)
!16868 = !DILocation(line: 945, column: 29, scope: !16864)
!16869 = !DILocation(line: 945, column: 34, scope: !16864)
!16870 = !DILocation(line: 945, column: 3, scope: !16864)
!16871 = !DILocation(line: 947, column: 2, scope: !16798)
!16872 = !DILocation(line: 947, column: 2, scope: !16873)
!16873 = distinct !DILexicalBlock(scope: !16874, file: !3, line: 947, column: 2)
!16874 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 947, column: 2)
!16875 = !DILocation(line: 947, column: 2, scope: !16874)
!16876 = !DILocation(line: 948, column: 6, scope: !16877)
!16877 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 948, column: 6)
!16878 = !DILocation(line: 948, column: 13, scope: !16877)
!16879 = !DILocation(line: 948, column: 6, scope: !16798)
!16880 = !DILocation(line: 949, column: 32, scope: !16877)
!16881 = !DILocation(line: 949, column: 37, scope: !16877)
!16882 = !DILocation(line: 949, column: 44, scope: !16877)
!16883 = !DILocation(line: 950, column: 11, scope: !16877)
!16884 = !DILocation(line: 950, column: 18, scope: !16877)
!16885 = !DILocation(line: 949, column: 3, scope: !16877)
!16886 = !DILocation(line: 951, column: 1, scope: !16798)
!16887 = distinct !DISubprogram(name: "mlx5_eswitch_set_vport_rate", scope: !3, file: !3, line: 2271, type: !16888, scopeLine: 2273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!16888 = !DISubroutineType(types: !16889)
!16889 = !{!6, !10791, !739, !224, !224}
!16890 = !DILocalVariable(name: "esw", arg: 1, scope: !16887, file: !3, line: 2271, type: !10791)
!16891 = !DILocation(line: 2271, column: 54, scope: !16887)
!16892 = !DILocalVariable(name: "vport", arg: 2, scope: !16887, file: !3, line: 2271, type: !739)
!16893 = !DILocation(line: 2271, column: 63, scope: !16887)
!16894 = !DILocalVariable(name: "max_rate", arg: 3, scope: !16887, file: !3, line: 2272, type: !224)
!16895 = !DILocation(line: 2272, column: 9, scope: !16887)
!16896 = !DILocalVariable(name: "min_rate", arg: 4, scope: !16887, file: !3, line: 2272, type: !224)
!16897 = !DILocation(line: 2272, column: 23, scope: !16887)
!16898 = !DILocalVariable(name: "evport", scope: !16887, file: !3, line: 2274, type: !10958)
!16899 = !DILocation(line: 2274, column: 21, scope: !16887)
!16900 = !DILocation(line: 2274, column: 53, scope: !16887)
!16901 = !DILocation(line: 2274, column: 58, scope: !16887)
!16902 = !DILocation(line: 2274, column: 30, scope: !16887)
!16903 = !DILocalVariable(name: "fw_max_bw_share", scope: !16887, file: !3, line: 2275, type: !224)
!16904 = !DILocation(line: 2275, column: 6, scope: !16887)
!16905 = !DILocalVariable(name: "previous_min_rate", scope: !16887, file: !3, line: 2276, type: !224)
!16906 = !DILocation(line: 2276, column: 6, scope: !16887)
!16907 = !DILocalVariable(name: "min_rate_supported", scope: !16887, file: !3, line: 2277, type: !299)
!16908 = !DILocation(line: 2277, column: 7, scope: !16887)
!16909 = !DILocalVariable(name: "max_rate_supported", scope: !16887, file: !3, line: 2278, type: !299)
!16910 = !DILocation(line: 2278, column: 7, scope: !16887)
!16911 = !DILocalVariable(name: "err", scope: !16887, file: !3, line: 2279, type: !6)
!16912 = !DILocation(line: 2279, column: 6, scope: !16887)
!16913 = !DILocation(line: 2281, column: 7, scope: !16914)
!16914 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 2281, column: 6)
!16915 = !DILocation(line: 2281, column: 6, scope: !16887)
!16916 = !DILocation(line: 2282, column: 3, scope: !16914)
!16917 = !DILocation(line: 2283, column: 13, scope: !16918)
!16918 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 2283, column: 6)
!16919 = !DILocation(line: 2283, column: 6, scope: !16918)
!16920 = !DILocation(line: 2283, column: 6, scope: !16887)
!16921 = !DILocation(line: 2284, column: 18, scope: !16918)
!16922 = !DILocation(line: 2284, column: 10, scope: !16918)
!16923 = !DILocation(line: 2284, column: 3, scope: !16918)
!16924 = !DILocation(line: 2286, column: 20, scope: !16887)
!16925 = !DILocation(line: 2286, column: 18, scope: !16887)
!16926 = !DILocation(line: 2287, column: 23, scope: !16887)
!16927 = !DILocation(line: 2287, column: 60, scope: !16887)
!16928 = !DILocation(line: 2288, column: 5, scope: !16887)
!16929 = !DILocation(line: 2288, column: 21, scope: !16887)
!16930 = !DILocation(line: 0, scope: !16887)
!16931 = !DILocation(line: 2287, column: 21, scope: !16887)
!16932 = !DILocation(line: 2289, column: 23, scope: !16887)
!16933 = !DILocation(line: 2289, column: 21, scope: !16887)
!16934 = !DILocation(line: 2291, column: 7, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 2291, column: 6)
!16936 = !DILocation(line: 2291, column: 16, scope: !16935)
!16937 = !DILocation(line: 2291, column: 20, scope: !16935)
!16938 = !DILocation(line: 2291, column: 40, scope: !16935)
!16939 = !DILocation(line: 2291, column: 44, scope: !16935)
!16940 = !DILocation(line: 2291, column: 53, scope: !16935)
!16941 = !DILocation(line: 2291, column: 57, scope: !16935)
!16942 = !DILocation(line: 2291, column: 6, scope: !16887)
!16943 = !DILocation(line: 2292, column: 3, scope: !16935)
!16944 = !DILocation(line: 2294, column: 14, scope: !16887)
!16945 = !DILocation(line: 2294, column: 19, scope: !16887)
!16946 = !DILocation(line: 2294, column: 2, scope: !16887)
!16947 = !DILocation(line: 2296, column: 6, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 2296, column: 6)
!16949 = !DILocation(line: 2296, column: 18, scope: !16948)
!16950 = !DILocation(line: 2296, column: 26, scope: !16948)
!16951 = !DILocation(line: 2296, column: 31, scope: !16948)
!16952 = !DILocation(line: 2296, column: 15, scope: !16948)
!16953 = !DILocation(line: 2296, column: 6, scope: !16887)
!16954 = !DILocation(line: 2297, column: 3, scope: !16948)
!16955 = !DILocation(line: 2299, column: 22, scope: !16887)
!16956 = !DILocation(line: 2299, column: 30, scope: !16887)
!16957 = !DILocation(line: 2299, column: 35, scope: !16887)
!16958 = !DILocation(line: 2299, column: 20, scope: !16887)
!16959 = !DILocation(line: 2300, column: 26, scope: !16887)
!16960 = !DILocation(line: 2300, column: 2, scope: !16887)
!16961 = !DILocation(line: 2300, column: 10, scope: !16887)
!16962 = !DILocation(line: 2300, column: 15, scope: !16887)
!16963 = !DILocation(line: 2300, column: 24, scope: !16887)
!16964 = !DILocation(line: 2301, column: 34, scope: !16887)
!16965 = !DILocation(line: 2301, column: 8, scope: !16887)
!16966 = !DILocation(line: 2301, column: 6, scope: !16887)
!16967 = !DILocation(line: 2302, column: 6, scope: !16968)
!16968 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 2302, column: 6)
!16969 = !DILocation(line: 2302, column: 6, scope: !16887)
!16970 = !DILocation(line: 2303, column: 27, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16968, file: !3, line: 2302, column: 11)
!16972 = !DILocation(line: 2303, column: 3, scope: !16971)
!16973 = !DILocation(line: 2303, column: 11, scope: !16971)
!16974 = !DILocation(line: 2303, column: 16, scope: !16971)
!16975 = !DILocation(line: 2303, column: 25, scope: !16971)
!16976 = !DILocation(line: 2304, column: 3, scope: !16971)
!16977 = !DILabel(scope: !16887, name: "set_max_rate", file: !3, line: 2307)
!16978 = !DILocation(line: 2307, column: 1, scope: !16887)
!16979 = !DILocation(line: 2308, column: 6, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 2308, column: 6)
!16981 = !DILocation(line: 2308, column: 18, scope: !16980)
!16982 = !DILocation(line: 2308, column: 26, scope: !16980)
!16983 = !DILocation(line: 2308, column: 31, scope: !16980)
!16984 = !DILocation(line: 2308, column: 15, scope: !16980)
!16985 = !DILocation(line: 2308, column: 6, scope: !16887)
!16986 = !DILocation(line: 2309, column: 3, scope: !16980)
!16987 = !DILocation(line: 2311, column: 29, scope: !16887)
!16988 = !DILocation(line: 2311, column: 34, scope: !16887)
!16989 = !DILocation(line: 2311, column: 42, scope: !16887)
!16990 = !DILocation(line: 2311, column: 52, scope: !16887)
!16991 = !DILocation(line: 2311, column: 60, scope: !16887)
!16992 = !DILocation(line: 2311, column: 64, scope: !16887)
!16993 = !DILocation(line: 2311, column: 8, scope: !16887)
!16994 = !DILocation(line: 2311, column: 6, scope: !16887)
!16995 = !DILocation(line: 2312, column: 7, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 2312, column: 6)
!16997 = !DILocation(line: 2312, column: 6, scope: !16887)
!16998 = !DILocation(line: 2313, column: 27, scope: !16996)
!16999 = !DILocation(line: 2313, column: 3, scope: !16996)
!17000 = !DILocation(line: 2313, column: 11, scope: !16996)
!17001 = !DILocation(line: 2313, column: 16, scope: !16996)
!17002 = !DILocation(line: 2313, column: 25, scope: !16996)
!17003 = !DILabel(scope: !16887, name: "unlock", file: !3, line: 2315)
!17004 = !DILocation(line: 2315, column: 1, scope: !16887)
!17005 = !DILocation(line: 2316, column: 16, scope: !16887)
!17006 = !DILocation(line: 2316, column: 21, scope: !16887)
!17007 = !DILocation(line: 2316, column: 2, scope: !16887)
!17008 = !DILocation(line: 2317, column: 9, scope: !16887)
!17009 = !DILocation(line: 2317, column: 2, scope: !16887)
!17010 = !DILocation(line: 2318, column: 1, scope: !16887)
!17011 = distinct !DISubprogram(name: "normalize_vports_min_rate", scope: !3, file: !3, line: 2234, type: !13149, scopeLine: 2235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17012 = !DILocalVariable(name: "esw", arg: 1, scope: !17011, file: !3, line: 2234, type: !10791)
!17013 = !DILocation(line: 2234, column: 59, scope: !17011)
!17014 = !DILocalVariable(name: "fw_max_bw_share", scope: !17011, file: !3, line: 2236, type: !224)
!17015 = !DILocation(line: 2236, column: 6, scope: !17011)
!17016 = !DILocation(line: 2236, column: 24, scope: !17011)
!17017 = !DILocalVariable(name: "divider", scope: !17011, file: !3, line: 2237, type: !224)
!17018 = !DILocation(line: 2237, column: 6, scope: !17011)
!17019 = !DILocation(line: 2237, column: 50, scope: !17011)
!17020 = !DILocation(line: 2237, column: 16, scope: !17011)
!17021 = !DILocalVariable(name: "evport", scope: !17011, file: !3, line: 2238, type: !10958)
!17022 = !DILocation(line: 2238, column: 21, scope: !17011)
!17023 = !DILocalVariable(name: "vport_max_rate", scope: !17011, file: !3, line: 2239, type: !224)
!17024 = !DILocation(line: 2239, column: 6, scope: !17011)
!17025 = !DILocalVariable(name: "vport_min_rate", scope: !17011, file: !3, line: 2240, type: !224)
!17026 = !DILocation(line: 2240, column: 6, scope: !17011)
!17027 = !DILocalVariable(name: "bw_share", scope: !17011, file: !3, line: 2241, type: !224)
!17028 = !DILocation(line: 2241, column: 6, scope: !17011)
!17029 = !DILocalVariable(name: "err", scope: !17011, file: !3, line: 2242, type: !6)
!17030 = !DILocation(line: 2242, column: 6, scope: !17011)
!17031 = !DILocalVariable(name: "i", scope: !17011, file: !3, line: 2243, type: !6)
!17032 = !DILocation(line: 2243, column: 6, scope: !17011)
!17033 = !DILocation(line: 2245, column: 2, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17011, file: !3, line: 2245, column: 2)
!17035 = !DILocation(line: 2245, column: 2, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17034, file: !3, line: 2245, column: 2)
!17037 = !DILocation(line: 2246, column: 8, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17039, file: !3, line: 2246, column: 7)
!17039 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 2245, column: 42)
!17040 = !DILocation(line: 2246, column: 16, scope: !17038)
!17041 = !DILocation(line: 2246, column: 7, scope: !17039)
!17042 = !DILocation(line: 2247, column: 4, scope: !17038)
!17043 = !DILocation(line: 2248, column: 20, scope: !17039)
!17044 = !DILocation(line: 2248, column: 28, scope: !17039)
!17045 = !DILocation(line: 2248, column: 33, scope: !17039)
!17046 = !DILocation(line: 2248, column: 18, scope: !17039)
!17047 = !DILocation(line: 2249, column: 20, scope: !17039)
!17048 = !DILocation(line: 2249, column: 28, scope: !17039)
!17049 = !DILocation(line: 2249, column: 33, scope: !17039)
!17050 = !DILocation(line: 2249, column: 18, scope: !17039)
!17051 = !DILocation(line: 2250, column: 12, scope: !17039)
!17052 = !DILocation(line: 2252, column: 7, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17039, file: !3, line: 2252, column: 7)
!17054 = !DILocation(line: 2252, column: 7, scope: !17039)
!17055 = !DILocalVariable(name: "__UNIQUE_ID___x739", scope: !17056, file: !3, line: 2253, type: !224)
!17056 = distinct !DILexicalBlock(scope: !17053, file: !3, line: 2253, column: 15)
!17057 = !DILocation(line: 2253, column: 15, scope: !17056)
!17058 = !DILocalVariable(name: "__UNIQUE_ID___x737", scope: !17059, file: !3, line: 2253, type: !224)
!17059 = distinct !DILexicalBlock(scope: !17056, file: !3, line: 2253, column: 15)
!17060 = !DILocation(line: 2253, column: 15, scope: !17059)
!17061 = !DILocalVariable(name: "__UNIQUE_ID___y738", scope: !17059, file: !3, line: 2253, type: !224)
!17062 = !DILocalVariable(name: "__UNIQUE_ID___y740", scope: !17056, file: !3, line: 2253, type: !224)
!17063 = !DILocation(line: 2253, column: 13, scope: !17053)
!17064 = !DILocation(line: 2253, column: 4, scope: !17053)
!17065 = !DILocation(line: 2257, column: 7, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17039, file: !3, line: 2257, column: 7)
!17067 = !DILocation(line: 2257, column: 19, scope: !17066)
!17068 = !DILocation(line: 2257, column: 27, scope: !17066)
!17069 = !DILocation(line: 2257, column: 31, scope: !17066)
!17070 = !DILocation(line: 2257, column: 16, scope: !17066)
!17071 = !DILocation(line: 2257, column: 7, scope: !17039)
!17072 = !DILocation(line: 2258, column: 4, scope: !17066)
!17073 = !DILocation(line: 2260, column: 30, scope: !17039)
!17074 = !DILocation(line: 2260, column: 35, scope: !17039)
!17075 = !DILocation(line: 2260, column: 43, scope: !17039)
!17076 = !DILocation(line: 2261, column: 9, scope: !17039)
!17077 = !DILocation(line: 2260, column: 9, scope: !17039)
!17078 = !DILocation(line: 2260, column: 7, scope: !17039)
!17079 = !DILocation(line: 2262, column: 8, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17039, file: !3, line: 2262, column: 7)
!17081 = !DILocation(line: 2262, column: 7, scope: !17039)
!17082 = !DILocation(line: 2263, column: 27, scope: !17080)
!17083 = !DILocation(line: 2263, column: 4, scope: !17080)
!17084 = !DILocation(line: 2263, column: 12, scope: !17080)
!17085 = !DILocation(line: 2263, column: 16, scope: !17080)
!17086 = !DILocation(line: 2263, column: 25, scope: !17080)
!17087 = !DILocation(line: 2265, column: 11, scope: !17080)
!17088 = !DILocation(line: 2265, column: 4, scope: !17080)
!17089 = !DILocation(line: 2266, column: 2, scope: !17039)
!17090 = distinct !{!17090, !17033, !17091}
!17091 = !DILocation(line: 2266, column: 2, scope: !17034)
!17092 = !DILocation(line: 2268, column: 2, scope: !17011)
!17093 = !DILocation(line: 2269, column: 1, scope: !17011)
!17094 = distinct !DISubprogram(name: "esw_vport_qos_config", scope: !3, file: !3, line: 1095, type: !17095, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17095 = !DISubroutineType(types: !17096)
!17096 = !{!6, !10791, !10958, !224, !224}
!17097 = !DILocalVariable(name: "esw", arg: 1, scope: !17094, file: !3, line: 1095, type: !10791)
!17098 = !DILocation(line: 1095, column: 54, scope: !17094)
!17099 = !DILocalVariable(name: "vport", arg: 2, scope: !17094, file: !3, line: 1096, type: !10958)
!17100 = !DILocation(line: 1096, column: 24, scope: !17094)
!17101 = !DILocalVariable(name: "max_rate", arg: 3, scope: !17094, file: !3, line: 1097, type: !224)
!17102 = !DILocation(line: 1097, column: 9, scope: !17094)
!17103 = !DILocalVariable(name: "bw_share", arg: 4, scope: !17094, file: !3, line: 1097, type: !224)
!17104 = !DILocation(line: 1097, column: 23, scope: !17094)
!17105 = !DILocalVariable(name: "sched_ctx", scope: !17094, file: !3, line: 1099, type: !10339)
!17106 = !DILocation(line: 1099, column: 6, scope: !17094)
!17107 = !DILocalVariable(name: "dev", scope: !17094, file: !3, line: 1100, type: !7)
!17108 = !DILocation(line: 1100, column: 24, scope: !17094)
!17109 = !DILocation(line: 1100, column: 30, scope: !17094)
!17110 = !DILocation(line: 1100, column: 35, scope: !17094)
!17111 = !DILocalVariable(name: "vport_elem", scope: !17094, file: !3, line: 1101, type: !154)
!17112 = !DILocation(line: 1101, column: 8, scope: !17094)
!17113 = !DILocalVariable(name: "bitmask", scope: !17094, file: !3, line: 1102, type: !224)
!17114 = !DILocation(line: 1102, column: 6, scope: !17094)
!17115 = !DILocalVariable(name: "err", scope: !17094, file: !3, line: 1103, type: !6)
!17116 = !DILocation(line: 1103, column: 6, scope: !17094)
!17117 = !DILocation(line: 1105, column: 7, scope: !17118)
!17118 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1105, column: 6)
!17119 = !DILocation(line: 1105, column: 30, scope: !17118)
!17120 = !DILocation(line: 1105, column: 34, scope: !17118)
!17121 = !DILocation(line: 1105, column: 6, scope: !17094)
!17122 = !DILocation(line: 1106, column: 3, scope: !17118)
!17123 = !DILocation(line: 1108, column: 7, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1108, column: 6)
!17125 = !DILocation(line: 1108, column: 14, scope: !17124)
!17126 = !DILocation(line: 1108, column: 18, scope: !17124)
!17127 = !DILocation(line: 1108, column: 6, scope: !17094)
!17128 = !DILocation(line: 1109, column: 3, scope: !17124)
!17129 = !DILocation(line: 1111, column: 2, scope: !17094)
!17130 = !DILocalVariable(name: "_v", scope: !17131, file: !3, line: 1111, type: !224)
!17131 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1111, column: 2)
!17132 = !DILocation(line: 1111, column: 2, scope: !17131)
!17133 = !DILocation(line: 1111, column: 2, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17131, file: !3, line: 1111, column: 2)
!17135 = !DILocation(line: 1113, column: 15, scope: !17094)
!17136 = !DILocation(line: 1113, column: 13, scope: !17094)
!17137 = !DILocation(line: 1115, column: 2, scope: !17094)
!17138 = !DILocalVariable(name: "_v", scope: !17139, file: !3, line: 1115, type: !224)
!17139 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1115, column: 2)
!17140 = !DILocation(line: 1115, column: 2, scope: !17139)
!17141 = !DILocation(line: 1115, column: 2, scope: !17142)
!17142 = distinct !DILexicalBlock(scope: !17139, file: !3, line: 1115, column: 2)
!17143 = !DILocation(line: 1116, column: 2, scope: !17094)
!17144 = !DILocalVariable(name: "_v", scope: !17145, file: !3, line: 1116, type: !224)
!17145 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1116, column: 2)
!17146 = !DILocation(line: 1116, column: 2, scope: !17145)
!17147 = !DILocation(line: 1116, column: 2, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17145, file: !3, line: 1116, column: 2)
!17149 = !DILocation(line: 1118, column: 2, scope: !17094)
!17150 = !DILocalVariable(name: "_v", scope: !17151, file: !3, line: 1118, type: !224)
!17151 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1118, column: 2)
!17152 = !DILocation(line: 1118, column: 2, scope: !17151)
!17153 = !DILocation(line: 1118, column: 2, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17151, file: !3, line: 1118, column: 2)
!17155 = !DILocation(line: 1120, column: 2, scope: !17094)
!17156 = !DILocalVariable(name: "_v", scope: !17157, file: !3, line: 1120, type: !224)
!17157 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1120, column: 2)
!17158 = !DILocation(line: 1120, column: 2, scope: !17157)
!17159 = !DILocation(line: 1120, column: 2, scope: !17160)
!17160 = distinct !DILexicalBlock(scope: !17157, file: !3, line: 1120, column: 2)
!17161 = !DILocation(line: 1121, column: 10, scope: !17094)
!17162 = !DILocation(line: 1122, column: 10, scope: !17094)
!17163 = !DILocation(line: 1124, column: 43, scope: !17094)
!17164 = !DILocation(line: 1126, column: 8, scope: !17094)
!17165 = !DILocation(line: 1127, column: 8, scope: !17094)
!17166 = !DILocation(line: 1127, column: 15, scope: !17094)
!17167 = !DILocation(line: 1127, column: 19, scope: !17094)
!17168 = !DILocation(line: 1128, column: 8, scope: !17094)
!17169 = !DILocation(line: 1124, column: 8, scope: !17094)
!17170 = !DILocation(line: 1124, column: 6, scope: !17094)
!17171 = !DILocation(line: 1129, column: 6, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 1129, column: 6)
!17173 = !DILocation(line: 1129, column: 6, scope: !17094)
!17174 = !DILocation(line: 1130, column: 3, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17172, file: !3, line: 1129, column: 11)
!17176 = !DILocation(line: 1132, column: 10, scope: !17175)
!17177 = !DILocation(line: 1132, column: 3, scope: !17175)
!17178 = !DILocation(line: 1135, column: 2, scope: !17094)
!17179 = !DILocation(line: 1136, column: 1, scope: !17094)
!17180 = distinct !DISubprogram(name: "mlx5_eswitch_get_vport_stats", scope: !3, file: !3, line: 2364, type: !17181, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17181 = !DISubroutineType(types: !17182)
!17182 = !{!6, !10791, !739, !2784}
!17183 = !DILocalVariable(name: "esw", arg: 1, scope: !17180, file: !3, line: 2364, type: !10791)
!17184 = !DILocation(line: 2364, column: 55, scope: !17180)
!17185 = !DILocalVariable(name: "vport_num", arg: 2, scope: !17180, file: !3, line: 2365, type: !739)
!17186 = !DILocation(line: 2365, column: 10, scope: !17180)
!17187 = !DILocalVariable(name: "vf_stats", arg: 3, scope: !17180, file: !3, line: 2366, type: !2784)
!17188 = !DILocation(line: 2366, column: 28, scope: !17180)
!17189 = !DILocalVariable(name: "vport", scope: !17180, file: !3, line: 2368, type: !10958)
!17190 = !DILocation(line: 2368, column: 21, scope: !17180)
!17191 = !DILocation(line: 2368, column: 52, scope: !17180)
!17192 = !DILocation(line: 2368, column: 57, scope: !17180)
!17193 = !DILocation(line: 2368, column: 29, scope: !17180)
!17194 = !DILocalVariable(name: "outlen", scope: !17180, file: !3, line: 2369, type: !6)
!17195 = !DILocation(line: 2369, column: 6, scope: !17180)
!17196 = !DILocalVariable(name: "in", scope: !17180, file: !3, line: 2370, type: !17197)
!17197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 256, elements: !1376)
!17198 = !DILocation(line: 2370, column: 6, scope: !17180)
!17199 = !DILocalVariable(name: "stats", scope: !17180, file: !3, line: 2371, type: !17200)
!17200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport_drop_stats", file: !10793, line: 111, size: 128, elements: !17201)
!17201 = !{!17202, !17203}
!17202 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !17200, file: !10793, line: 112, baseType: !230, size: 64)
!17203 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !17200, file: !10793, line: 113, baseType: !230, size: 64, offset: 64)
!17204 = !DILocation(line: 2371, column: 31, scope: !17180)
!17205 = !DILocalVariable(name: "err", scope: !17180, file: !3, line: 2372, type: !6)
!17206 = !DILocation(line: 2372, column: 6, scope: !17180)
!17207 = !DILocalVariable(name: "out", scope: !17180, file: !3, line: 2373, type: !1462)
!17208 = !DILocation(line: 2373, column: 7, scope: !17180)
!17209 = !DILocation(line: 2375, column: 13, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2375, column: 6)
!17211 = !DILocation(line: 2375, column: 6, scope: !17210)
!17212 = !DILocation(line: 2375, column: 6, scope: !17180)
!17213 = !DILocation(line: 2376, column: 18, scope: !17210)
!17214 = !DILocation(line: 2376, column: 10, scope: !17210)
!17215 = !DILocation(line: 2376, column: 3, scope: !17210)
!17216 = !DILocation(line: 2378, column: 17, scope: !17180)
!17217 = !DILocation(line: 2378, column: 8, scope: !17180)
!17218 = !DILocation(line: 2378, column: 6, scope: !17180)
!17219 = !DILocation(line: 2379, column: 7, scope: !17220)
!17220 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2379, column: 6)
!17221 = !DILocation(line: 2379, column: 6, scope: !17180)
!17222 = !DILocation(line: 2380, column: 3, scope: !17220)
!17223 = !DILocation(line: 2382, column: 2, scope: !17180)
!17224 = !DILocalVariable(name: "_v", scope: !17225, file: !3, line: 2382, type: !224)
!17225 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2382, column: 2)
!17226 = !DILocation(line: 2382, column: 2, scope: !17225)
!17227 = !DILocation(line: 2382, column: 2, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17225, file: !3, line: 2382, column: 2)
!17229 = !DILocation(line: 2384, column: 2, scope: !17180)
!17230 = !DILocalVariable(name: "_v", scope: !17231, file: !3, line: 2384, type: !224)
!17231 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2384, column: 2)
!17232 = !DILocation(line: 2384, column: 2, scope: !17231)
!17233 = !DILocation(line: 2384, column: 2, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17231, file: !3, line: 2384, column: 2)
!17235 = !DILocation(line: 2385, column: 2, scope: !17180)
!17236 = !DILocalVariable(name: "_v", scope: !17237, file: !3, line: 2385, type: !224)
!17237 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2385, column: 2)
!17238 = !DILocation(line: 2385, column: 2, scope: !17237)
!17239 = !DILocation(line: 2385, column: 2, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17237, file: !3, line: 2385, column: 2)
!17241 = !DILocation(line: 2386, column: 2, scope: !17180)
!17242 = !DILocalVariable(name: "_v", scope: !17243, file: !3, line: 2386, type: !224)
!17243 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2386, column: 2)
!17244 = !DILocation(line: 2386, column: 2, scope: !17243)
!17245 = !DILocation(line: 2386, column: 2, scope: !17246)
!17246 = distinct !DILexicalBlock(scope: !17243, file: !3, line: 2386, column: 2)
!17247 = !DILocation(line: 2388, column: 8, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2388, column: 8)
!17249 = !DILocation(line: 2388, column: 8, scope: !17180)
!17250 = !DILocation(line: 2388, column: 6, scope: !17180)
!17251 = !DILocation(line: 2389, column: 6, scope: !17252)
!17252 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2389, column: 6)
!17253 = !DILocation(line: 2389, column: 6, scope: !17180)
!17254 = !DILocation(line: 2390, column: 3, scope: !17252)
!17255 = !DILocation(line: 2395, column: 9, scope: !17180)
!17256 = !DILocation(line: 2395, column: 2, scope: !17180)
!17257 = !DILocation(line: 2397, column: 3, scope: !17180)
!17258 = !DILocation(line: 2398, column: 3, scope: !17180)
!17259 = !DILocation(line: 2397, column: 51, scope: !17180)
!17260 = !DILocation(line: 2399, column: 3, scope: !17180)
!17261 = !DILocation(line: 2398, column: 50, scope: !17180)
!17262 = !DILocation(line: 2400, column: 3, scope: !17180)
!17263 = !DILocation(line: 2399, column: 53, scope: !17180)
!17264 = !DILocation(line: 2401, column: 3, scope: !17180)
!17265 = !DILocation(line: 2400, column: 52, scope: !17180)
!17266 = !DILocation(line: 2396, column: 2, scope: !17180)
!17267 = !DILocation(line: 2396, column: 12, scope: !17180)
!17268 = !DILocation(line: 2396, column: 23, scope: !17180)
!17269 = !DILocation(line: 2404, column: 3, scope: !17180)
!17270 = !DILocation(line: 2405, column: 3, scope: !17180)
!17271 = !DILocation(line: 2404, column: 50, scope: !17180)
!17272 = !DILocation(line: 2406, column: 3, scope: !17180)
!17273 = !DILocation(line: 2405, column: 49, scope: !17180)
!17274 = !DILocation(line: 2407, column: 3, scope: !17180)
!17275 = !DILocation(line: 2406, column: 52, scope: !17180)
!17276 = !DILocation(line: 2408, column: 3, scope: !17180)
!17277 = !DILocation(line: 2407, column: 51, scope: !17180)
!17278 = !DILocation(line: 2403, column: 2, scope: !17180)
!17279 = !DILocation(line: 2403, column: 12, scope: !17180)
!17280 = !DILocation(line: 2403, column: 21, scope: !17180)
!17281 = !DILocation(line: 2411, column: 3, scope: !17180)
!17282 = !DILocation(line: 2412, column: 3, scope: !17180)
!17283 = !DILocation(line: 2411, column: 54, scope: !17180)
!17284 = !DILocation(line: 2413, column: 3, scope: !17180)
!17285 = !DILocation(line: 2412, column: 53, scope: !17180)
!17286 = !DILocation(line: 2414, column: 3, scope: !17180)
!17287 = !DILocation(line: 2413, column: 56, scope: !17180)
!17288 = !DILocation(line: 2415, column: 3, scope: !17180)
!17289 = !DILocation(line: 2414, column: 55, scope: !17180)
!17290 = !DILocation(line: 2410, column: 2, scope: !17180)
!17291 = !DILocation(line: 2410, column: 12, scope: !17180)
!17292 = !DILocation(line: 2410, column: 23, scope: !17180)
!17293 = !DILocation(line: 2418, column: 3, scope: !17180)
!17294 = !DILocation(line: 2419, column: 3, scope: !17180)
!17295 = !DILocation(line: 2418, column: 53, scope: !17180)
!17296 = !DILocation(line: 2420, column: 3, scope: !17180)
!17297 = !DILocation(line: 2419, column: 52, scope: !17180)
!17298 = !DILocation(line: 2421, column: 3, scope: !17180)
!17299 = !DILocation(line: 2420, column: 55, scope: !17180)
!17300 = !DILocation(line: 2422, column: 3, scope: !17180)
!17301 = !DILocation(line: 2421, column: 54, scope: !17180)
!17302 = !DILocation(line: 2417, column: 2, scope: !17180)
!17303 = !DILocation(line: 2417, column: 12, scope: !17180)
!17304 = !DILocation(line: 2417, column: 21, scope: !17180)
!17305 = !DILocation(line: 2425, column: 3, scope: !17180)
!17306 = !DILocation(line: 2426, column: 3, scope: !17180)
!17307 = !DILocation(line: 2425, column: 53, scope: !17180)
!17308 = !DILocation(line: 2424, column: 2, scope: !17180)
!17309 = !DILocation(line: 2424, column: 12, scope: !17180)
!17310 = !DILocation(line: 2424, column: 22, scope: !17180)
!17311 = !DILocation(line: 2429, column: 3, scope: !17180)
!17312 = !DILocation(line: 2428, column: 2, scope: !17180)
!17313 = !DILocation(line: 2428, column: 12, scope: !17180)
!17314 = !DILocation(line: 2428, column: 22, scope: !17180)
!17315 = !DILocation(line: 2431, column: 44, scope: !17180)
!17316 = !DILocation(line: 2431, column: 49, scope: !17180)
!17317 = !DILocation(line: 2431, column: 54, scope: !17180)
!17318 = !DILocation(line: 2431, column: 8, scope: !17180)
!17319 = !DILocation(line: 2431, column: 6, scope: !17180)
!17320 = !DILocation(line: 2432, column: 6, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 2432, column: 6)
!17322 = !DILocation(line: 2432, column: 6, scope: !17180)
!17323 = !DILocation(line: 2433, column: 3, scope: !17321)
!17324 = !DILocation(line: 2434, column: 31, scope: !17180)
!17325 = !DILocation(line: 2434, column: 2, scope: !17180)
!17326 = !DILocation(line: 2434, column: 12, scope: !17180)
!17327 = !DILocation(line: 2434, column: 23, scope: !17180)
!17328 = !DILocation(line: 2435, column: 31, scope: !17180)
!17329 = !DILocation(line: 2435, column: 2, scope: !17180)
!17330 = !DILocation(line: 2435, column: 12, scope: !17180)
!17331 = !DILocation(line: 2435, column: 23, scope: !17180)
!17332 = !DILabel(scope: !17180, name: "free_out", file: !3, line: 2437)
!17333 = !DILocation(line: 2437, column: 1, scope: !17180)
!17334 = !DILocation(line: 2438, column: 9, scope: !17180)
!17335 = !DILocation(line: 2438, column: 2, scope: !17180)
!17336 = !DILocation(line: 2439, column: 9, scope: !17180)
!17337 = !DILocation(line: 2439, column: 2, scope: !17180)
!17338 = !DILocation(line: 2440, column: 1, scope: !17180)
!17339 = distinct !DISubprogram(name: "__fswab64", scope: !12396, file: !12396, line: 66, type: !17340, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17340 = !DISubroutineType(types: !17341)
!17341 = !{!231, !231}
!17342 = !DILocalVariable(name: "val", arg: 1, scope: !17339, file: !12396, line: 66, type: !231)
!17343 = !DILocation(line: 66, column: 57, scope: !17339)
!17344 = !DILocation(line: 69, column: 23, scope: !17339)
!17345 = !DILocation(line: 69, column: 9, scope: !17339)
!17346 = !DILocation(line: 69, column: 2, scope: !17339)
!17347 = distinct !DISubprogram(name: "mlx5_eswitch_query_vport_drop_stats", scope: !3, file: !3, line: 2320, type: !17348, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{!6, !7, !10958, !17350}
!17350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17200, size: 64)
!17351 = !DILocalVariable(name: "dev", arg: 1, scope: !17347, file: !3, line: 2320, type: !7)
!17352 = !DILocation(line: 2320, column: 70, scope: !17347)
!17353 = !DILocalVariable(name: "vport", arg: 2, scope: !17347, file: !3, line: 2321, type: !10958)
!17354 = !DILocation(line: 2321, column: 32, scope: !17347)
!17355 = !DILocalVariable(name: "stats", arg: 3, scope: !17347, file: !3, line: 2322, type: !17350)
!17356 = !DILocation(line: 2322, column: 43, scope: !17347)
!17357 = !DILocalVariable(name: "esw", scope: !17347, file: !3, line: 2324, type: !10791)
!17358 = !DILocation(line: 2324, column: 23, scope: !17347)
!17359 = !DILocation(line: 2324, column: 29, scope: !17347)
!17360 = !DILocation(line: 2324, column: 34, scope: !17347)
!17361 = !DILocation(line: 2324, column: 39, scope: !17347)
!17362 = !DILocalVariable(name: "rx_discard_vport_down", scope: !17347, file: !3, line: 2325, type: !230)
!17363 = !DILocation(line: 2325, column: 6, scope: !17347)
!17364 = !DILocalVariable(name: "tx_discard_vport_down", scope: !17347, file: !3, line: 2325, type: !230)
!17365 = !DILocation(line: 2325, column: 29, scope: !17347)
!17366 = !DILocalVariable(name: "bytes", scope: !17347, file: !3, line: 2326, type: !230)
!17367 = !DILocation(line: 2326, column: 6, scope: !17347)
!17368 = !DILocalVariable(name: "err", scope: !17347, file: !3, line: 2327, type: !6)
!17369 = !DILocation(line: 2327, column: 6, scope: !17347)
!17370 = !DILocation(line: 2329, column: 6, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2329, column: 6)
!17372 = !DILocation(line: 2329, column: 11, scope: !17371)
!17373 = !DILocation(line: 2329, column: 16, scope: !17371)
!17374 = !DILocation(line: 2329, column: 6, scope: !17347)
!17375 = !DILocation(line: 2330, column: 3, scope: !17371)
!17376 = !DILocation(line: 2332, column: 14, scope: !17347)
!17377 = !DILocation(line: 2332, column: 19, scope: !17347)
!17378 = !DILocation(line: 2332, column: 2, scope: !17347)
!17379 = !DILocation(line: 2333, column: 7, scope: !17380)
!17380 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2333, column: 6)
!17381 = !DILocation(line: 2333, column: 14, scope: !17380)
!17382 = !DILocation(line: 2333, column: 6, scope: !17347)
!17383 = !DILocation(line: 2334, column: 3, scope: !17380)
!17384 = !DILocation(line: 2336, column: 22, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2336, column: 6)
!17386 = !DILocation(line: 2336, column: 29, scope: !17385)
!17387 = !DILocation(line: 2336, column: 36, scope: !17385)
!17388 = !DILocation(line: 2336, column: 43, scope: !17385)
!17389 = !DILocation(line: 2336, column: 7, scope: !17385)
!17390 = !DILocation(line: 2336, column: 6, scope: !17347)
!17391 = !DILocation(line: 2337, column: 17, scope: !17385)
!17392 = !DILocation(line: 2337, column: 22, scope: !17385)
!17393 = !DILocation(line: 2337, column: 29, scope: !17385)
!17394 = !DILocation(line: 2337, column: 36, scope: !17385)
!17395 = !DILocation(line: 2337, column: 43, scope: !17385)
!17396 = !DILocation(line: 2338, column: 11, scope: !17385)
!17397 = !DILocation(line: 2338, column: 18, scope: !17385)
!17398 = !DILocation(line: 2337, column: 3, scope: !17385)
!17399 = !DILocation(line: 2340, column: 6, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2340, column: 6)
!17401 = !DILocation(line: 2340, column: 13, scope: !17400)
!17402 = !DILocation(line: 2340, column: 21, scope: !17400)
!17403 = !DILocation(line: 2340, column: 28, scope: !17400)
!17404 = !DILocation(line: 2340, column: 6, scope: !17347)
!17405 = !DILocation(line: 2341, column: 17, scope: !17400)
!17406 = !DILocation(line: 2341, column: 22, scope: !17400)
!17407 = !DILocation(line: 2341, column: 29, scope: !17400)
!17408 = !DILocation(line: 2341, column: 37, scope: !17400)
!17409 = !DILocation(line: 2341, column: 44, scope: !17400)
!17410 = !DILocation(line: 2342, column: 11, scope: !17400)
!17411 = !DILocation(line: 2342, column: 18, scope: !17400)
!17412 = !DILocation(line: 2341, column: 3, scope: !17400)
!17413 = !DILocation(line: 2344, column: 7, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2344, column: 6)
!17415 = !DILocation(line: 2344, column: 53, scope: !17414)
!17416 = !DILocation(line: 2345, column: 7, scope: !17414)
!17417 = !DILocation(line: 2344, column: 6, scope: !17347)
!17418 = !DILocation(line: 2346, column: 3, scope: !17414)
!17419 = !DILocation(line: 2348, column: 36, scope: !17347)
!17420 = !DILocation(line: 2348, column: 41, scope: !17347)
!17421 = !DILocation(line: 2348, column: 48, scope: !17347)
!17422 = !DILocation(line: 2348, column: 8, scope: !17347)
!17423 = !DILocation(line: 2348, column: 6, scope: !17347)
!17424 = !DILocation(line: 2351, column: 6, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2351, column: 6)
!17426 = !DILocation(line: 2351, column: 6, scope: !17347)
!17427 = !DILocation(line: 2352, column: 3, scope: !17425)
!17428 = !DILocation(line: 2354, column: 6, scope: !17429)
!17429 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2354, column: 6)
!17430 = !DILocation(line: 2354, column: 6, scope: !17347)
!17431 = !DILocation(line: 2355, column: 24, scope: !17429)
!17432 = !DILocation(line: 2355, column: 3, scope: !17429)
!17433 = !DILocation(line: 2355, column: 10, scope: !17429)
!17434 = !DILocation(line: 2355, column: 21, scope: !17429)
!17435 = !DILocation(line: 2356, column: 6, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 2356, column: 6)
!17437 = !DILocation(line: 2356, column: 6, scope: !17347)
!17438 = !DILocation(line: 2357, column: 24, scope: !17436)
!17439 = !DILocation(line: 2357, column: 3, scope: !17436)
!17440 = !DILocation(line: 2357, column: 10, scope: !17436)
!17441 = !DILocation(line: 2357, column: 21, scope: !17436)
!17442 = !DILabel(scope: !17347, name: "unlock", file: !3, line: 2359)
!17443 = !DILocation(line: 2359, column: 1, scope: !17347)
!17444 = !DILocation(line: 2360, column: 16, scope: !17347)
!17445 = !DILocation(line: 2360, column: 21, scope: !17347)
!17446 = !DILocation(line: 2360, column: 2, scope: !17347)
!17447 = !DILocation(line: 2361, column: 9, scope: !17347)
!17448 = !DILocation(line: 2361, column: 2, scope: !17347)
!17449 = !DILocation(line: 2362, column: 1, scope: !17347)
!17450 = distinct !DISubprogram(name: "mlx5_eswitch_mode", scope: !3, file: !3, line: 2442, type: !17451, scopeLine: 2443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17451 = !DISubroutineType(types: !17452)
!17452 = !{!1398, !10791}
!17453 = !DILocalVariable(name: "esw", arg: 1, scope: !17450, file: !3, line: 2442, type: !10791)
!17454 = !DILocation(line: 2442, column: 43, scope: !17450)
!17455 = !DILocation(line: 2444, column: 9, scope: !17450)
!17456 = !DILocation(line: 2444, column: 28, scope: !17450)
!17457 = !DILocation(line: 2444, column: 33, scope: !17450)
!17458 = !DILocation(line: 2444, column: 2, scope: !17450)
!17459 = distinct !DISubprogram(name: "mlx5_eswitch_get_encap_mode", scope: !3, file: !3, line: 2449, type: !17460, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17460 = !DISubroutineType(types: !17461)
!17461 = !{!4038, !12331}
!17462 = !DILocalVariable(name: "dev", arg: 1, scope: !17459, file: !3, line: 2449, type: !12331)
!17463 = !DILocation(line: 2449, column: 57, scope: !17459)
!17464 = !DILocalVariable(name: "esw", scope: !17459, file: !3, line: 2451, type: !10791)
!17465 = !DILocation(line: 2451, column: 23, scope: !17459)
!17466 = !DILocation(line: 2453, column: 8, scope: !17459)
!17467 = !DILocation(line: 2453, column: 13, scope: !17459)
!17468 = !DILocation(line: 2453, column: 18, scope: !17459)
!17469 = !DILocation(line: 2453, column: 6, scope: !17459)
!17470 = !DILocation(line: 2454, column: 9, scope: !17459)
!17471 = !DILocation(line: 2454, column: 28, scope: !17459)
!17472 = !DILocation(line: 2454, column: 33, scope: !17459)
!17473 = !DILocation(line: 2454, column: 42, scope: !17459)
!17474 = !DILocation(line: 2454, column: 2, scope: !17459)
!17475 = distinct !DISubprogram(name: "mlx5_esw_lag_prereq", scope: !3, file: !3, line: 2459, type: !17476, scopeLine: 2460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17476 = !DISubroutineType(types: !17477)
!17477 = !{!299, !7, !7}
!17478 = !DILocalVariable(name: "dev0", arg: 1, scope: !17475, file: !3, line: 2459, type: !7)
!17479 = !DILocation(line: 2459, column: 48, scope: !17475)
!17480 = !DILocalVariable(name: "dev1", arg: 2, scope: !17475, file: !3, line: 2459, type: !7)
!17481 = !DILocation(line: 2459, column: 76, scope: !17475)
!17482 = !DILocation(line: 2461, column: 7, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17475, file: !3, line: 2461, column: 6)
!17484 = !DILocation(line: 2461, column: 13, scope: !17483)
!17485 = !DILocation(line: 2461, column: 18, scope: !17483)
!17486 = !DILocation(line: 2461, column: 27, scope: !17483)
!17487 = !DILocation(line: 2461, column: 32, scope: !17483)
!17488 = !DILocation(line: 2461, column: 53, scope: !17483)
!17489 = !DILocation(line: 2462, column: 7, scope: !17483)
!17490 = !DILocation(line: 2462, column: 13, scope: !17483)
!17491 = !DILocation(line: 2462, column: 18, scope: !17483)
!17492 = !DILocation(line: 2462, column: 27, scope: !17483)
!17493 = !DILocation(line: 2462, column: 32, scope: !17483)
!17494 = !DILocation(line: 2462, column: 54, scope: !17483)
!17495 = !DILocation(line: 2463, column: 7, scope: !17483)
!17496 = !DILocation(line: 2463, column: 13, scope: !17483)
!17497 = !DILocation(line: 2463, column: 18, scope: !17483)
!17498 = !DILocation(line: 2463, column: 27, scope: !17483)
!17499 = !DILocation(line: 2463, column: 32, scope: !17483)
!17500 = !DILocation(line: 2463, column: 57, scope: !17483)
!17501 = !DILocation(line: 2464, column: 7, scope: !17483)
!17502 = !DILocation(line: 2464, column: 13, scope: !17483)
!17503 = !DILocation(line: 2464, column: 18, scope: !17483)
!17504 = !DILocation(line: 2464, column: 27, scope: !17483)
!17505 = !DILocation(line: 2464, column: 32, scope: !17483)
!17506 = !DILocation(line: 2461, column: 6, scope: !17475)
!17507 = !DILocation(line: 2465, column: 3, scope: !17483)
!17508 = !DILocation(line: 2467, column: 2, scope: !17475)
!17509 = !DILocation(line: 2468, column: 1, scope: !17475)
!17510 = distinct !DISubprogram(name: "mlx5_esw_multipath_prereq", scope: !3, file: !3, line: 2470, type: !17476, scopeLine: 2472, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17511 = !DILocalVariable(name: "dev0", arg: 1, scope: !17510, file: !3, line: 2470, type: !7)
!17512 = !DILocation(line: 2470, column: 54, scope: !17510)
!17513 = !DILocalVariable(name: "dev1", arg: 2, scope: !17510, file: !3, line: 2471, type: !7)
!17514 = !DILocation(line: 2471, column: 33, scope: !17510)
!17515 = !DILocation(line: 2473, column: 10, scope: !17510)
!17516 = !DILocation(line: 2473, column: 16, scope: !17510)
!17517 = !DILocation(line: 2473, column: 21, scope: !17510)
!17518 = !DILocation(line: 2473, column: 30, scope: !17510)
!17519 = !DILocation(line: 2473, column: 35, scope: !17510)
!17520 = !DILocation(line: 2473, column: 60, scope: !17510)
!17521 = !DILocation(line: 2474, column: 3, scope: !17510)
!17522 = !DILocation(line: 2474, column: 9, scope: !17510)
!17523 = !DILocation(line: 2474, column: 14, scope: !17510)
!17524 = !DILocation(line: 2474, column: 23, scope: !17510)
!17525 = !DILocation(line: 2474, column: 28, scope: !17510)
!17526 = !DILocation(line: 0, scope: !17510)
!17527 = !DILocation(line: 2473, column: 2, scope: !17510)
!17528 = distinct !DISubprogram(name: "__arch_swab32", scope: !17529, file: !17529, line: 8, type: !12397, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17529 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!17530 = !DILocalVariable(name: "val", arg: 1, scope: !17528, file: !17529, line: 8, type: !226)
!17531 = !DILocation(line: 8, column: 61, scope: !17528)
!17532 = !DILocation(line: 10, column: 38, scope: !17528)
!17533 = !DILocation(line: 10, column: 2, scope: !17528)
!17534 = !{i32 577233}
!17535 = !DILocation(line: 11, column: 9, scope: !17528)
!17536 = !DILocation(line: 11, column: 2, scope: !17528)
!17537 = distinct !DISubprogram(name: "mlx5_eswitch_ecpf_idx", scope: !10793, file: !10793, line: 513, type: !13149, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17538 = !DILocalVariable(name: "esw", arg: 1, scope: !17537, file: !10793, line: 513, type: !10791)
!17539 = !DILocation(line: 513, column: 62, scope: !17537)
!17540 = !DILocation(line: 515, column: 9, scope: !17537)
!17541 = !DILocation(line: 515, column: 14, scope: !17537)
!17542 = !DILocation(line: 515, column: 27, scope: !17537)
!17543 = !DILocation(line: 515, column: 2, scope: !17537)
!17544 = distinct !DISubprogram(name: "mlx5_eswitch_uplink_idx", scope: !10793, file: !10793, line: 507, type: !13149, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17545 = !DILocalVariable(name: "esw", arg: 1, scope: !17544, file: !10793, line: 507, type: !10791)
!17546 = !DILocation(line: 507, column: 64, scope: !17544)
!17547 = !DILocation(line: 510, column: 9, scope: !17544)
!17548 = !DILocation(line: 510, column: 14, scope: !17544)
!17549 = !DILocation(line: 510, column: 27, scope: !17544)
!17550 = !DILocation(line: 510, column: 2, scope: !17544)
!17551 = distinct !DISubprogram(name: "kvmalloc", scope: !1058, file: !1058, line: 763, type: !12552, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17552 = !DILocalVariable(name: "size", arg: 1, scope: !17551, file: !1058, line: 763, type: !127)
!17553 = !DILocation(line: 763, column: 37, scope: !17551)
!17554 = !DILocalVariable(name: "flags", arg: 2, scope: !17551, file: !1058, line: 763, type: !623)
!17555 = !DILocation(line: 763, column: 49, scope: !17551)
!17556 = !DILocation(line: 765, column: 23, scope: !17551)
!17557 = !DILocation(line: 765, column: 29, scope: !17551)
!17558 = !DILocation(line: 765, column: 9, scope: !17551)
!17559 = !DILocation(line: 765, column: 2, scope: !17551)
!17560 = distinct !DISubprogram(name: "esw_vport_setup", scope: !3, file: !3, line: 1224, type: !17561, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17561 = !DISubroutineType(types: !17562)
!17562 = !{!6, !10791, !10958}
!17563 = !DILocalVariable(name: "esw", arg: 1, scope: !17560, file: !3, line: 1224, type: !10791)
!17564 = !DILocation(line: 1224, column: 49, scope: !17560)
!17565 = !DILocalVariable(name: "vport", arg: 2, scope: !17560, file: !3, line: 1224, type: !10958)
!17566 = !DILocation(line: 1224, column: 73, scope: !17560)
!17567 = !DILocalVariable(name: "vport_num", scope: !17560, file: !3, line: 1226, type: !739)
!17568 = !DILocation(line: 1226, column: 6, scope: !17560)
!17569 = !DILocation(line: 1226, column: 18, scope: !17560)
!17570 = !DILocation(line: 1226, column: 25, scope: !17560)
!17571 = !DILocalVariable(name: "flags", scope: !17560, file: !3, line: 1227, type: !6)
!17572 = !DILocation(line: 1227, column: 6, scope: !17560)
!17573 = !DILocalVariable(name: "err", scope: !17560, file: !3, line: 1228, type: !6)
!17574 = !DILocation(line: 1228, column: 6, scope: !17560)
!17575 = !DILocation(line: 1230, column: 28, scope: !17560)
!17576 = !DILocation(line: 1230, column: 33, scope: !17560)
!17577 = !DILocation(line: 1230, column: 8, scope: !17560)
!17578 = !DILocation(line: 1230, column: 6, scope: !17560)
!17579 = !DILocation(line: 1231, column: 6, scope: !17580)
!17580 = distinct !DILexicalBlock(scope: !17560, file: !3, line: 1231, column: 6)
!17581 = !DILocation(line: 1231, column: 6, scope: !17560)
!17582 = !DILocation(line: 1232, column: 10, scope: !17580)
!17583 = !DILocation(line: 1232, column: 3, scope: !17580)
!17584 = !DILocation(line: 1235, column: 23, scope: !17560)
!17585 = !DILocation(line: 1235, column: 28, scope: !17560)
!17586 = !DILocation(line: 1235, column: 35, scope: !17560)
!17587 = !DILocation(line: 1235, column: 42, scope: !17560)
!17588 = !DILocation(line: 1235, column: 47, scope: !17560)
!17589 = !DILocation(line: 1235, column: 57, scope: !17560)
!17590 = !DILocation(line: 1235, column: 64, scope: !17560)
!17591 = !DILocation(line: 1235, column: 68, scope: !17560)
!17592 = !DILocation(line: 1235, column: 2, scope: !17560)
!17593 = !DILocation(line: 1237, column: 32, scope: !17594)
!17594 = distinct !DILexicalBlock(scope: !17560, file: !3, line: 1237, column: 6)
!17595 = !DILocation(line: 1237, column: 37, scope: !17594)
!17596 = !DILocation(line: 1237, column: 6, scope: !17594)
!17597 = !DILocation(line: 1237, column: 6, scope: !17560)
!17598 = !DILocation(line: 1238, column: 3, scope: !17594)
!17599 = !DILocation(line: 1240, column: 32, scope: !17560)
!17600 = !DILocation(line: 1240, column: 37, scope: !17560)
!17601 = !DILocation(line: 1242, column: 11, scope: !17560)
!17602 = !DILocation(line: 1243, column: 11, scope: !17560)
!17603 = !DILocation(line: 1243, column: 18, scope: !17560)
!17604 = !DILocation(line: 1243, column: 23, scope: !17560)
!17605 = !DILocation(line: 1240, column: 2, scope: !17560)
!17606 = !DILocation(line: 1246, column: 6, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17560, file: !3, line: 1246, column: 6)
!17608 = !DILocation(line: 1246, column: 6, scope: !17560)
!17609 = !DILocation(line: 1247, column: 37, scope: !17610)
!17610 = distinct !DILexicalBlock(scope: !17607, file: !3, line: 1246, column: 17)
!17611 = !DILocation(line: 1247, column: 42, scope: !17610)
!17612 = !DILocation(line: 1247, column: 47, scope: !17610)
!17613 = !DILocation(line: 1248, column: 9, scope: !17610)
!17614 = !DILocation(line: 1248, column: 16, scope: !17610)
!17615 = !DILocation(line: 1248, column: 21, scope: !17610)
!17616 = !DILocation(line: 1247, column: 3, scope: !17610)
!17617 = !DILocation(line: 1249, column: 35, scope: !17610)
!17618 = !DILocation(line: 1249, column: 40, scope: !17610)
!17619 = !DILocation(line: 1249, column: 45, scope: !17610)
!17620 = !DILocation(line: 1250, column: 7, scope: !17610)
!17621 = !DILocation(line: 1250, column: 14, scope: !17610)
!17622 = !DILocation(line: 1250, column: 19, scope: !17610)
!17623 = !DILocation(line: 1249, column: 3, scope: !17610)
!17624 = !DILocation(line: 1251, column: 2, scope: !17610)
!17625 = !DILocation(line: 1253, column: 11, scope: !17560)
!17626 = !DILocation(line: 1253, column: 18, scope: !17560)
!17627 = !DILocation(line: 1253, column: 23, scope: !17560)
!17628 = !DILocation(line: 1253, column: 28, scope: !17560)
!17629 = !DILocation(line: 1253, column: 31, scope: !17560)
!17630 = !DILocation(line: 1253, column: 38, scope: !17560)
!17631 = !DILocation(line: 1253, column: 43, scope: !17560)
!17632 = !DILocation(line: 1253, column: 10, scope: !17560)
!17633 = !DILocation(line: 1253, column: 8, scope: !17560)
!17634 = !DILocation(line: 1255, column: 25, scope: !17560)
!17635 = !DILocation(line: 1255, column: 30, scope: !17560)
!17636 = !DILocation(line: 1255, column: 35, scope: !17560)
!17637 = !DILocation(line: 1255, column: 46, scope: !17560)
!17638 = !DILocation(line: 1255, column: 53, scope: !17560)
!17639 = !DILocation(line: 1255, column: 58, scope: !17560)
!17640 = !DILocation(line: 1256, column: 11, scope: !17560)
!17641 = !DILocation(line: 1256, column: 18, scope: !17560)
!17642 = !DILocation(line: 1256, column: 23, scope: !17560)
!17643 = !DILocation(line: 1256, column: 28, scope: !17560)
!17644 = !DILocation(line: 1255, column: 2, scope: !17560)
!17645 = !DILocation(line: 1258, column: 2, scope: !17560)
!17646 = !DILocation(line: 1259, column: 1, scope: !17560)
!17647 = distinct !DISubprogram(name: "mlx5_esw_is_manager_vport", scope: !10793, file: !10793, line: 491, type: !14369, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17648 = !DILocalVariable(name: "esw", arg: 1, scope: !17647, file: !10793, line: 491, type: !14371)
!17649 = !DILocation(line: 491, column: 54, scope: !17647)
!17650 = !DILocalVariable(name: "vport_num", arg: 2, scope: !17647, file: !10793, line: 491, type: !739)
!17651 = !DILocation(line: 491, column: 63, scope: !17647)
!17652 = !DILocation(line: 493, column: 9, scope: !17647)
!17653 = !DILocation(line: 493, column: 14, scope: !17647)
!17654 = !DILocation(line: 493, column: 31, scope: !17647)
!17655 = !DILocation(line: 493, column: 28, scope: !17647)
!17656 = !DILocation(line: 493, column: 2, scope: !17647)
!17657 = distinct !DISubprogram(name: "mlx5_core_is_ecpf", scope: !9, file: !9, line: 1140, type: !17658, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17658 = !DISubroutineType(types: !17659)
!17659 = !{!299, !7}
!17660 = !DILocalVariable(name: "dev", arg: 1, scope: !17657, file: !9, line: 1140, type: !7)
!17661 = !DILocation(line: 1140, column: 60, scope: !17657)
!17662 = !DILocation(line: 1142, column: 9, scope: !17657)
!17663 = !DILocation(line: 1142, column: 14, scope: !17657)
!17664 = !DILocation(line: 1142, column: 19, scope: !17657)
!17665 = !DILocation(line: 1142, column: 2, scope: !17657)
!17666 = distinct !DISubprogram(name: "esw_vport_setup_acl", scope: !3, file: !3, line: 1195, type: !17561, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17667 = !DILocalVariable(name: "esw", arg: 1, scope: !17666, file: !3, line: 1195, type: !10791)
!17668 = !DILocation(line: 1195, column: 53, scope: !17666)
!17669 = !DILocalVariable(name: "vport", arg: 2, scope: !17666, file: !3, line: 1196, type: !10958)
!17670 = !DILocation(line: 1196, column: 30, scope: !17666)
!17671 = !DILocation(line: 1198, column: 6, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17666, file: !3, line: 1198, column: 6)
!17673 = !DILocation(line: 1198, column: 11, scope: !17672)
!17674 = !DILocation(line: 1198, column: 16, scope: !17672)
!17675 = !DILocation(line: 1198, column: 6, scope: !17666)
!17676 = !DILocation(line: 1199, column: 45, scope: !17672)
!17677 = !DILocation(line: 1199, column: 50, scope: !17672)
!17678 = !DILocation(line: 1199, column: 10, scope: !17672)
!17679 = !DILocation(line: 1199, column: 3, scope: !17672)
!17680 = !DILocation(line: 1201, column: 47, scope: !17672)
!17681 = !DILocation(line: 1201, column: 52, scope: !17672)
!17682 = !DILocation(line: 1201, column: 10, scope: !17672)
!17683 = !DILocation(line: 1201, column: 3, scope: !17672)
!17684 = !DILocation(line: 1202, column: 1, scope: !17666)
!17685 = distinct !DISubprogram(name: "esw_vport_enable_qos", scope: !3, file: !3, line: 1036, type: !17095, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17686 = !DILocalVariable(name: "esw", arg: 1, scope: !17685, file: !3, line: 1036, type: !10791)
!17687 = !DILocation(line: 1036, column: 54, scope: !17685)
!17688 = !DILocalVariable(name: "vport", arg: 2, scope: !17685, file: !3, line: 1037, type: !10958)
!17689 = !DILocation(line: 1037, column: 24, scope: !17685)
!17690 = !DILocalVariable(name: "initial_max_rate", arg: 3, scope: !17685, file: !3, line: 1038, type: !224)
!17691 = !DILocation(line: 1038, column: 9, scope: !17685)
!17692 = !DILocalVariable(name: "initial_bw_share", arg: 4, scope: !17685, file: !3, line: 1038, type: !224)
!17693 = !DILocation(line: 1038, column: 31, scope: !17685)
!17694 = !DILocalVariable(name: "sched_ctx", scope: !17685, file: !3, line: 1040, type: !10339)
!17695 = !DILocation(line: 1040, column: 6, scope: !17685)
!17696 = !DILocalVariable(name: "dev", scope: !17685, file: !3, line: 1041, type: !7)
!17697 = !DILocation(line: 1041, column: 24, scope: !17685)
!17698 = !DILocation(line: 1041, column: 30, scope: !17685)
!17699 = !DILocation(line: 1041, column: 35, scope: !17685)
!17700 = !DILocalVariable(name: "vport_elem", scope: !17685, file: !3, line: 1042, type: !154)
!17701 = !DILocation(line: 1042, column: 8, scope: !17685)
!17702 = !DILocalVariable(name: "err", scope: !17685, file: !3, line: 1043, type: !6)
!17703 = !DILocation(line: 1043, column: 6, scope: !17685)
!17704 = !DILocation(line: 1045, column: 7, scope: !17705)
!17705 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1045, column: 6)
!17706 = !DILocation(line: 1045, column: 12, scope: !17705)
!17707 = !DILocation(line: 1045, column: 16, scope: !17705)
!17708 = !DILocation(line: 1045, column: 24, scope: !17705)
!17709 = !DILocation(line: 1045, column: 28, scope: !17705)
!17710 = !DILocation(line: 1045, column: 51, scope: !17705)
!17711 = !DILocation(line: 1046, column: 7, scope: !17705)
!17712 = !DILocation(line: 1045, column: 6, scope: !17685)
!17713 = !DILocation(line: 1047, column: 3, scope: !17705)
!17714 = !DILocation(line: 1049, column: 6, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1049, column: 6)
!17716 = !DILocation(line: 1049, column: 13, scope: !17715)
!17717 = !DILocation(line: 1049, column: 17, scope: !17715)
!17718 = !DILocation(line: 1049, column: 6, scope: !17685)
!17719 = !DILocation(line: 1050, column: 3, scope: !17715)
!17720 = !DILocation(line: 1052, column: 2, scope: !17685)
!17721 = !DILocalVariable(name: "_v", scope: !17722, file: !3, line: 1052, type: !224)
!17722 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1052, column: 2)
!17723 = !DILocation(line: 1052, column: 2, scope: !17722)
!17724 = !DILocation(line: 1052, column: 2, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17722, file: !3, line: 1052, column: 2)
!17726 = !DILocation(line: 1054, column: 15, scope: !17685)
!17727 = !DILocation(line: 1054, column: 13, scope: !17685)
!17728 = !DILocation(line: 1056, column: 2, scope: !17685)
!17729 = !DILocalVariable(name: "_v", scope: !17730, file: !3, line: 1056, type: !224)
!17730 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1056, column: 2)
!17731 = !DILocation(line: 1056, column: 2, scope: !17730)
!17732 = !DILocation(line: 1056, column: 2, scope: !17733)
!17733 = distinct !DILexicalBlock(scope: !17730, file: !3, line: 1056, column: 2)
!17734 = !DILocation(line: 1057, column: 2, scope: !17685)
!17735 = !DILocalVariable(name: "_v", scope: !17736, file: !3, line: 1057, type: !224)
!17736 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1057, column: 2)
!17737 = !DILocation(line: 1057, column: 2, scope: !17736)
!17738 = !DILocation(line: 1057, column: 2, scope: !17739)
!17739 = distinct !DILexicalBlock(scope: !17736, file: !3, line: 1057, column: 2)
!17740 = !DILocation(line: 1059, column: 2, scope: !17685)
!17741 = !DILocalVariable(name: "_v", scope: !17742, file: !3, line: 1059, type: !224)
!17742 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1059, column: 2)
!17743 = !DILocation(line: 1059, column: 2, scope: !17742)
!17744 = !DILocation(line: 1059, column: 2, scope: !17745)
!17745 = distinct !DILexicalBlock(scope: !17742, file: !3, line: 1059, column: 2)
!17746 = !DILocation(line: 1061, column: 2, scope: !17685)
!17747 = !DILocalVariable(name: "_v", scope: !17748, file: !3, line: 1061, type: !224)
!17748 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1061, column: 2)
!17749 = !DILocation(line: 1061, column: 2, scope: !17748)
!17750 = !DILocation(line: 1061, column: 2, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17748, file: !3, line: 1061, column: 2)
!17752 = !DILocation(line: 1063, column: 43, scope: !17685)
!17753 = !DILocation(line: 1065, column: 8, scope: !17685)
!17754 = !DILocation(line: 1066, column: 9, scope: !17685)
!17755 = !DILocation(line: 1066, column: 16, scope: !17685)
!17756 = !DILocation(line: 1066, column: 20, scope: !17685)
!17757 = !DILocation(line: 1063, column: 8, scope: !17685)
!17758 = !DILocation(line: 1063, column: 6, scope: !17685)
!17759 = !DILocation(line: 1067, column: 6, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1067, column: 6)
!17761 = !DILocation(line: 1067, column: 6, scope: !17685)
!17762 = !DILocation(line: 1068, column: 3, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17760, file: !3, line: 1067, column: 11)
!17764 = !DILocation(line: 1070, column: 10, scope: !17763)
!17765 = !DILocation(line: 1070, column: 3, scope: !17763)
!17766 = !DILocation(line: 1073, column: 2, scope: !17685)
!17767 = !DILocation(line: 1073, column: 9, scope: !17685)
!17768 = !DILocation(line: 1073, column: 13, scope: !17685)
!17769 = !DILocation(line: 1073, column: 21, scope: !17685)
!17770 = !DILocation(line: 1074, column: 2, scope: !17685)
!17771 = !DILocation(line: 1075, column: 1, scope: !17685)
!17772 = distinct !DISubprogram(name: "esw_vport_create_legacy_acl_tables", scope: !3, file: !3, line: 1170, type: !17561, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17773 = !DILocalVariable(name: "esw", arg: 1, scope: !17772, file: !3, line: 1170, type: !10791)
!17774 = !DILocation(line: 1170, column: 68, scope: !17772)
!17775 = !DILocalVariable(name: "vport", arg: 2, scope: !17772, file: !3, line: 1171, type: !10958)
!17776 = !DILocation(line: 1171, column: 31, scope: !17772)
!17777 = !DILocalVariable(name: "ret", scope: !17772, file: !3, line: 1173, type: !6)
!17778 = !DILocation(line: 1173, column: 6, scope: !17772)
!17779 = !DILocation(line: 1176, column: 32, scope: !17780)
!17780 = distinct !DILexicalBlock(scope: !17772, file: !3, line: 1176, column: 6)
!17781 = !DILocation(line: 1176, column: 37, scope: !17780)
!17782 = !DILocation(line: 1176, column: 44, scope: !17780)
!17783 = !DILocation(line: 1176, column: 6, scope: !17780)
!17784 = !DILocation(line: 1176, column: 6, scope: !17772)
!17785 = !DILocation(line: 1177, column: 3, scope: !17780)
!17786 = !DILocation(line: 1179, column: 35, scope: !17772)
!17787 = !DILocation(line: 1179, column: 40, scope: !17772)
!17788 = !DILocation(line: 1179, column: 8, scope: !17772)
!17789 = !DILocation(line: 1179, column: 6, scope: !17772)
!17790 = !DILocation(line: 1180, column: 6, scope: !17791)
!17791 = distinct !DILexicalBlock(scope: !17772, file: !3, line: 1180, column: 6)
!17792 = !DILocation(line: 1180, column: 6, scope: !17772)
!17793 = !DILocation(line: 1181, column: 3, scope: !17791)
!17794 = !DILocation(line: 1183, column: 34, scope: !17772)
!17795 = !DILocation(line: 1183, column: 39, scope: !17772)
!17796 = !DILocation(line: 1183, column: 8, scope: !17772)
!17797 = !DILocation(line: 1183, column: 6, scope: !17772)
!17798 = !DILocation(line: 1184, column: 6, scope: !17799)
!17799 = distinct !DILexicalBlock(scope: !17772, file: !3, line: 1184, column: 6)
!17800 = !DILocation(line: 1184, column: 6, scope: !17772)
!17801 = !DILocation(line: 1185, column: 3, scope: !17799)
!17802 = !DILocation(line: 1187, column: 2, scope: !17772)
!17803 = !DILabel(scope: !17772, name: "egress_err", file: !3, line: 1189)
!17804 = !DILocation(line: 1189, column: 1, scope: !17772)
!17805 = !DILocation(line: 1190, column: 31, scope: !17772)
!17806 = !DILocation(line: 1190, column: 36, scope: !17772)
!17807 = !DILocation(line: 1190, column: 2, scope: !17772)
!17808 = !DILabel(scope: !17772, name: "ingress_err", file: !3, line: 1191)
!17809 = !DILocation(line: 1191, column: 1, scope: !17772)
!17810 = !DILocation(line: 1192, column: 9, scope: !17772)
!17811 = !DILocation(line: 1192, column: 2, scope: !17772)
!17812 = !DILocation(line: 1193, column: 1, scope: !17772)
!17813 = distinct !DISubprogram(name: "arm_vport_context_events_cmd", scope: !3, file: !3, line: 109, type: !17814, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17814 = !DISubroutineType(types: !17815)
!17815 = !{!6, !7, !739, !224}
!17816 = !DILocalVariable(name: "dev", arg: 1, scope: !17813, file: !3, line: 109, type: !7)
!17817 = !DILocation(line: 109, column: 63, scope: !17813)
!17818 = !DILocalVariable(name: "vport", arg: 2, scope: !17813, file: !3, line: 109, type: !739)
!17819 = !DILocation(line: 109, column: 72, scope: !17813)
!17820 = !DILocalVariable(name: "events_mask", arg: 3, scope: !17813, file: !3, line: 110, type: !224)
!17821 = !DILocation(line: 110, column: 10, scope: !17813)
!17822 = !DILocalVariable(name: "in", scope: !17813, file: !3, line: 112, type: !16600)
!17823 = !DILocation(line: 112, column: 6, scope: !17813)
!17824 = !DILocalVariable(name: "nic_vport_ctx", scope: !17813, file: !3, line: 113, type: !154)
!17825 = !DILocation(line: 113, column: 8, scope: !17813)
!17826 = !DILocation(line: 115, column: 2, scope: !17813)
!17827 = !DILocalVariable(name: "_v", scope: !17828, file: !3, line: 115, type: !224)
!17828 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 115, column: 2)
!17829 = !DILocation(line: 115, column: 2, scope: !17828)
!17830 = !DILocation(line: 115, column: 2, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17828, file: !3, line: 115, column: 2)
!17832 = !DILocation(line: 117, column: 2, scope: !17813)
!17833 = !DILocalVariable(name: "_v", scope: !17834, file: !3, line: 117, type: !224)
!17834 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 117, column: 2)
!17835 = !DILocation(line: 117, column: 2, scope: !17834)
!17836 = !DILocation(line: 117, column: 2, scope: !17837)
!17837 = distinct !DILexicalBlock(scope: !17834, file: !3, line: 117, column: 2)
!17838 = !DILocation(line: 118, column: 2, scope: !17813)
!17839 = !DILocalVariable(name: "_v", scope: !17840, file: !3, line: 118, type: !224)
!17840 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 118, column: 2)
!17841 = !DILocation(line: 118, column: 2, scope: !17840)
!17842 = !DILocation(line: 118, column: 2, scope: !17843)
!17843 = distinct !DILexicalBlock(scope: !17840, file: !3, line: 118, column: 2)
!17844 = !DILocation(line: 119, column: 2, scope: !17813)
!17845 = !DILocalVariable(name: "_v", scope: !17846, file: !3, line: 119, type: !224)
!17846 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 119, column: 2)
!17847 = !DILocation(line: 119, column: 2, scope: !17846)
!17848 = !DILocation(line: 119, column: 2, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17846, file: !3, line: 119, column: 2)
!17850 = !DILocation(line: 120, column: 18, scope: !17813)
!17851 = !DILocation(line: 120, column: 16, scope: !17813)
!17852 = !DILocation(line: 123, column: 2, scope: !17813)
!17853 = !DILocalVariable(name: "_v", scope: !17854, file: !3, line: 123, type: !224)
!17854 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 123, column: 2)
!17855 = !DILocation(line: 123, column: 2, scope: !17854)
!17856 = !DILocation(line: 123, column: 2, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17854, file: !3, line: 123, column: 2)
!17858 = !DILocation(line: 125, column: 6, scope: !17859)
!17859 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 125, column: 6)
!17860 = !DILocation(line: 125, column: 18, scope: !17859)
!17861 = !DILocation(line: 125, column: 6, scope: !17813)
!17862 = !DILocation(line: 126, column: 3, scope: !17859)
!17863 = !DILocalVariable(name: "_v", scope: !17864, file: !3, line: 126, type: !224)
!17864 = distinct !DILexicalBlock(scope: !17859, file: !3, line: 126, column: 3)
!17865 = !DILocation(line: 126, column: 3, scope: !17864)
!17866 = !DILocation(line: 126, column: 3, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17864, file: !3, line: 126, column: 3)
!17868 = !DILocation(line: 128, column: 6, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 128, column: 6)
!17870 = !DILocation(line: 128, column: 18, scope: !17869)
!17871 = !DILocation(line: 128, column: 6, scope: !17813)
!17872 = !DILocation(line: 129, column: 3, scope: !17869)
!17873 = !DILocalVariable(name: "_v", scope: !17874, file: !3, line: 129, type: !224)
!17874 = distinct !DILexicalBlock(scope: !17869, file: !3, line: 129, column: 3)
!17875 = !DILocation(line: 129, column: 3, scope: !17874)
!17876 = !DILocation(line: 129, column: 3, scope: !17877)
!17877 = distinct !DILexicalBlock(scope: !17874, file: !3, line: 129, column: 3)
!17878 = !DILocation(line: 131, column: 6, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 131, column: 6)
!17880 = !DILocation(line: 131, column: 18, scope: !17879)
!17881 = !DILocation(line: 131, column: 6, scope: !17813)
!17882 = !DILocation(line: 132, column: 3, scope: !17879)
!17883 = !DILocalVariable(name: "_v", scope: !17884, file: !3, line: 132, type: !224)
!17884 = distinct !DILexicalBlock(scope: !17879, file: !3, line: 132, column: 3)
!17885 = !DILocation(line: 132, column: 3, scope: !17884)
!17886 = !DILocation(line: 132, column: 3, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 132, column: 3)
!17888 = !DILocalVariable(name: "_out", scope: !17889, file: !3, line: 135, type: !12466)
!17889 = distinct !DILexicalBlock(scope: !17813, file: !3, line: 135, column: 9)
!17890 = !DILocation(line: 135, column: 9, scope: !17889)
!17891 = !DILocation(line: 135, column: 9, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17889, file: !3, line: 135, column: 9)
!17893 = !DILocation(line: 135, column: 2, scope: !17813)
!17894 = distinct !DISubprogram(name: "esw_vport_cleanup", scope: !3, file: !3, line: 1262, type: !17895, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17895 = !DISubroutineType(types: !17896)
!17896 = !{null, !10791, !10958}
!17897 = !DILocalVariable(name: "esw", arg: 1, scope: !17894, file: !3, line: 1262, type: !10791)
!17898 = !DILocation(line: 1262, column: 52, scope: !17894)
!17899 = !DILocalVariable(name: "vport", arg: 2, scope: !17894, file: !3, line: 1262, type: !10958)
!17900 = !DILocation(line: 1262, column: 76, scope: !17894)
!17901 = !DILocalVariable(name: "vport_num", scope: !17894, file: !3, line: 1264, type: !739)
!17902 = !DILocation(line: 1264, column: 6, scope: !17894)
!17903 = !DILocation(line: 1264, column: 18, scope: !17894)
!17904 = !DILocation(line: 1264, column: 25, scope: !17894)
!17905 = !DILocation(line: 1266, column: 33, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17894, file: !3, line: 1266, column: 6)
!17907 = !DILocation(line: 1266, column: 38, scope: !17906)
!17908 = !DILocation(line: 1266, column: 7, scope: !17906)
!17909 = !DILocation(line: 1266, column: 6, scope: !17894)
!17910 = !DILocation(line: 1267, column: 33, scope: !17906)
!17911 = !DILocation(line: 1267, column: 38, scope: !17906)
!17912 = !DILocation(line: 1269, column: 12, scope: !17906)
!17913 = !DILocation(line: 1267, column: 3, scope: !17906)
!17914 = !DILocation(line: 1272, column: 24, scope: !17894)
!17915 = !DILocation(line: 1272, column: 29, scope: !17894)
!17916 = !DILocation(line: 1272, column: 2, scope: !17894)
!17917 = !DILocation(line: 1273, column: 24, scope: !17894)
!17918 = !DILocation(line: 1273, column: 29, scope: !17894)
!17919 = !DILocation(line: 1273, column: 2, scope: !17894)
!17920 = !DILocation(line: 1274, column: 1, scope: !17894)
!17921 = distinct !DISubprogram(name: "esw_vport_disable_qos", scope: !3, file: !3, line: 1077, type: !17895, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17922 = !DILocalVariable(name: "esw", arg: 1, scope: !17921, file: !3, line: 1077, type: !10791)
!17923 = !DILocation(line: 1077, column: 56, scope: !17921)
!17924 = !DILocalVariable(name: "vport", arg: 2, scope: !17921, file: !3, line: 1078, type: !10958)
!17925 = !DILocation(line: 1078, column: 26, scope: !17921)
!17926 = !DILocalVariable(name: "err", scope: !17921, file: !3, line: 1080, type: !6)
!17927 = !DILocation(line: 1080, column: 6, scope: !17921)
!17928 = !DILocation(line: 1082, column: 7, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17921, file: !3, line: 1082, column: 6)
!17930 = !DILocation(line: 1082, column: 14, scope: !17929)
!17931 = !DILocation(line: 1082, column: 18, scope: !17929)
!17932 = !DILocation(line: 1082, column: 6, scope: !17921)
!17933 = !DILocation(line: 1083, column: 3, scope: !17929)
!17934 = !DILocation(line: 1085, column: 44, scope: !17921)
!17935 = !DILocation(line: 1085, column: 49, scope: !17921)
!17936 = !DILocation(line: 1087, column: 9, scope: !17921)
!17937 = !DILocation(line: 1087, column: 16, scope: !17921)
!17938 = !DILocation(line: 1087, column: 20, scope: !17921)
!17939 = !DILocation(line: 1085, column: 8, scope: !17921)
!17940 = !DILocation(line: 1085, column: 6, scope: !17921)
!17941 = !DILocation(line: 1088, column: 6, scope: !17942)
!17942 = distinct !DILexicalBlock(scope: !17921, file: !3, line: 1088, column: 6)
!17943 = !DILocation(line: 1088, column: 6, scope: !17921)
!17944 = !DILocation(line: 1089, column: 3, scope: !17942)
!17945 = !DILocation(line: 1092, column: 2, scope: !17921)
!17946 = !DILocation(line: 1092, column: 9, scope: !17921)
!17947 = !DILocation(line: 1092, column: 13, scope: !17921)
!17948 = !DILocation(line: 1092, column: 21, scope: !17921)
!17949 = !DILocation(line: 1093, column: 1, scope: !17921)
!17950 = distinct !DISubprogram(name: "esw_vport_cleanup_acl", scope: !3, file: !3, line: 1215, type: !17895, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17951 = !DILocalVariable(name: "esw", arg: 1, scope: !17950, file: !3, line: 1215, type: !10791)
!17952 = !DILocation(line: 1215, column: 56, scope: !17950)
!17953 = !DILocalVariable(name: "vport", arg: 2, scope: !17950, file: !3, line: 1216, type: !10958)
!17954 = !DILocation(line: 1216, column: 26, scope: !17950)
!17955 = !DILocation(line: 1218, column: 6, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !17950, file: !3, line: 1218, column: 6)
!17957 = !DILocation(line: 1218, column: 11, scope: !17956)
!17958 = !DILocation(line: 1218, column: 16, scope: !17956)
!17959 = !DILocation(line: 1218, column: 6, scope: !17950)
!17960 = !DILocation(line: 1219, column: 39, scope: !17956)
!17961 = !DILocation(line: 1219, column: 44, scope: !17956)
!17962 = !DILocation(line: 1219, column: 3, scope: !17956)
!17963 = !DILocation(line: 1221, column: 41, scope: !17956)
!17964 = !DILocation(line: 1221, column: 46, scope: !17956)
!17965 = !DILocation(line: 1221, column: 3, scope: !17956)
!17966 = !DILocation(line: 1222, column: 1, scope: !17950)
!17967 = distinct !DISubprogram(name: "esw_vport_destroy_legacy_acl_tables", scope: !3, file: !3, line: 1204, type: !17895, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17968 = !DILocalVariable(name: "esw", arg: 1, scope: !17967, file: !3, line: 1204, type: !10791)
!17969 = !DILocation(line: 1204, column: 70, scope: !17967)
!17970 = !DILocalVariable(name: "vport", arg: 2, scope: !17967, file: !3, line: 1205, type: !10958)
!17971 = !DILocation(line: 1205, column: 26, scope: !17967)
!17972 = !DILocation(line: 1208, column: 32, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17967, file: !3, line: 1208, column: 6)
!17974 = !DILocation(line: 1208, column: 37, scope: !17973)
!17975 = !DILocation(line: 1208, column: 44, scope: !17973)
!17976 = !DILocation(line: 1208, column: 6, scope: !17973)
!17977 = !DILocation(line: 1208, column: 6, scope: !17967)
!17978 = !DILocation(line: 1209, column: 3, scope: !17973)
!17979 = !DILocation(line: 1211, column: 30, scope: !17967)
!17980 = !DILocation(line: 1211, column: 35, scope: !17967)
!17981 = !DILocation(line: 1211, column: 2, scope: !17967)
!17982 = !DILocation(line: 1212, column: 31, scope: !17967)
!17983 = !DILocation(line: 1212, column: 36, scope: !17967)
!17984 = !DILocation(line: 1212, column: 2, scope: !17967)
!17985 = !DILocation(line: 1213, column: 1, scope: !17967)
!17986 = distinct !DISubprogram(name: "priv_to_devlink", scope: !3869, file: !3869, line: 1356, type: !17987, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!17987 = !DISubroutineType(types: !17988)
!17988 = !{!3875, !154}
!17989 = !DILocalVariable(name: "priv", arg: 1, scope: !17986, file: !3869, line: 1356, type: !154)
!17990 = !DILocation(line: 1356, column: 53, scope: !17986)
!17991 = !DILocation(line: 1358, column: 2, scope: !17986)
!17992 = !DILocation(line: 1358, column: 2, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17994, file: !3869, line: 1358, column: 2)
!17994 = distinct !DILexicalBlock(scope: !17986, file: !3869, line: 1358, column: 2)
!17995 = !DILocation(line: 1358, column: 2, scope: !17994)
!17996 = !DILocation(line: 1358, column: 2, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17993, file: !3869, line: 1358, column: 2)
!17998 = !DILocation(line: 1358, column: 2, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17997, file: !3869, line: 1358, column: 2)
!18000 = !DILocation(line: 1358, column: 2, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !17997, file: !3869, line: 1358, column: 2)
!18002 = !{i32 -2137049508, i32 -2137049479, i32 -2137049433, i32 -2137049375, i32 -2137049321, i32 -2137049267, i32 -2137049212, i32 -2137049181}
!18003 = !DILocation(line: 1358, column: 2, scope: !18004)
!18004 = distinct !DILexicalBlock(scope: !18005, file: !3869, line: 1358, column: 2)
!18005 = distinct !DILexicalBlock(scope: !17997, file: !3869, line: 1358, column: 2)
!18006 = !{i32 -2137048736, i32 -2137048729, i32 -2137048675, i32 -2137048644, i32 -2137048614}
!18007 = !DILocation(line: 1358, column: 2, scope: !18005)
!18008 = !DILocalVariable(name: "__mptr", scope: !18009, file: !3869, line: 1359, type: !154)
!18009 = distinct !DILexicalBlock(scope: !17986, file: !3869, line: 1359, column: 9)
!18010 = !DILocation(line: 1359, column: 9, scope: !18009)
!18011 = !DILocation(line: 1359, column: 9, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !18009, file: !3869, line: 1359, column: 9)
!18013 = !DILocation(line: 1359, column: 2, scope: !17986)
!18014 = distinct !DISubprogram(name: "mlx5_core_is_ecpf_esw_manager", scope: !9, file: !9, line: 1146, type: !12870, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18015 = !DILocalVariable(name: "dev", arg: 1, scope: !18014, file: !9, line: 1146, type: !12331)
!18016 = !DILocation(line: 1146, column: 59, scope: !18014)
!18017 = !DILocation(line: 1148, column: 9, scope: !18014)
!18018 = !DILocation(line: 1148, column: 14, scope: !18014)
!18019 = !DILocation(line: 1148, column: 19, scope: !18014)
!18020 = !DILocation(line: 1148, column: 32, scope: !18014)
!18021 = !DILocation(line: 1148, column: 35, scope: !18014)
!18022 = !DILocation(line: 0, scope: !18014)
!18023 = !DILocation(line: 1148, column: 2, scope: !18014)
!18024 = distinct !DISubprogram(name: "element_type_supported", scope: !3, file: !3, line: 964, type: !18025, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18025 = !DISubroutineType(types: !18026)
!18026 = !{!299, !10791, !6}
!18027 = !DILocalVariable(name: "esw", arg: 1, scope: !18024, file: !3, line: 964, type: !10791)
!18028 = !DILocation(line: 964, column: 57, scope: !18024)
!18029 = !DILocalVariable(name: "type", arg: 2, scope: !18024, file: !3, line: 964, type: !6)
!18030 = !DILocation(line: 964, column: 66, scope: !18024)
!18031 = !DILocalVariable(name: "dev", scope: !18024, file: !3, line: 966, type: !12331)
!18032 = !DILocation(line: 966, column: 30, scope: !18024)
!18033 = !DILocation(line: 966, column: 36, scope: !18024)
!18034 = !DILocation(line: 966, column: 41, scope: !18024)
!18035 = !DILocation(line: 968, column: 10, scope: !18024)
!18036 = !DILocation(line: 968, column: 2, scope: !18024)
!18037 = !DILocation(line: 970, column: 10, scope: !18038)
!18038 = distinct !DILexicalBlock(scope: !18024, file: !3, line: 968, column: 16)
!18039 = !DILocation(line: 970, column: 46, scope: !18038)
!18040 = !DILocation(line: 970, column: 3, scope: !18038)
!18041 = !DILocation(line: 973, column: 10, scope: !18038)
!18042 = !DILocation(line: 973, column: 46, scope: !18038)
!18043 = !DILocation(line: 973, column: 3, scope: !18038)
!18044 = !DILocation(line: 976, column: 10, scope: !18038)
!18045 = !DILocation(line: 976, column: 46, scope: !18038)
!18046 = !DILocation(line: 976, column: 3, scope: !18038)
!18047 = !DILocation(line: 979, column: 10, scope: !18038)
!18048 = !DILocation(line: 979, column: 46, scope: !18038)
!18049 = !DILocation(line: 979, column: 3, scope: !18038)
!18050 = !DILocation(line: 982, column: 2, scope: !18024)
!18051 = !DILocation(line: 983, column: 1, scope: !18024)
!18052 = distinct !DISubprogram(name: "esw_create_legacy_table", scope: !3, file: !3, line: 440, type: !13149, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18053 = !DILocalVariable(name: "esw", arg: 1, scope: !18052, file: !3, line: 440, type: !10791)
!18054 = !DILocation(line: 440, column: 57, scope: !18052)
!18055 = !DILocalVariable(name: "err", scope: !18052, file: !3, line: 442, type: !6)
!18056 = !DILocation(line: 442, column: 6, scope: !18052)
!18057 = !DILocation(line: 444, column: 10, scope: !18052)
!18058 = !DILocation(line: 444, column: 15, scope: !18052)
!18059 = !DILocation(line: 444, column: 25, scope: !18052)
!18060 = !DILocation(line: 444, column: 2, scope: !18052)
!18061 = !DILocation(line: 446, column: 37, scope: !18052)
!18062 = !DILocation(line: 446, column: 8, scope: !18052)
!18063 = !DILocation(line: 446, column: 6, scope: !18052)
!18064 = !DILocation(line: 447, column: 6, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18052, file: !3, line: 447, column: 6)
!18066 = !DILocation(line: 447, column: 6, scope: !18052)
!18067 = !DILocation(line: 448, column: 10, scope: !18065)
!18068 = !DILocation(line: 448, column: 3, scope: !18065)
!18069 = !DILocation(line: 450, column: 36, scope: !18052)
!18070 = !DILocation(line: 450, column: 8, scope: !18052)
!18071 = !DILocation(line: 450, column: 6, scope: !18052)
!18072 = !DILocation(line: 451, column: 6, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18052, file: !3, line: 451, column: 6)
!18074 = !DILocation(line: 451, column: 6, scope: !18052)
!18075 = !DILocation(line: 452, column: 33, scope: !18073)
!18076 = !DILocation(line: 452, column: 3, scope: !18073)
!18077 = !DILocation(line: 454, column: 9, scope: !18052)
!18078 = !DILocation(line: 454, column: 2, scope: !18052)
!18079 = !DILocation(line: 455, column: 1, scope: !18052)
!18080 = distinct !DISubprogram(name: "esw_destroy_legacy_table", scope: !3, file: !3, line: 457, type: !12881, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18081 = !DILocalVariable(name: "esw", arg: 1, scope: !18080, file: !3, line: 457, type: !10791)
!18082 = !DILocation(line: 457, column: 59, scope: !18080)
!18083 = !DILocation(line: 459, column: 25, scope: !18080)
!18084 = !DILocation(line: 459, column: 2, scope: !18080)
!18085 = !DILocation(line: 460, column: 31, scope: !18080)
!18086 = !DILocation(line: 460, column: 2, scope: !18080)
!18087 = !DILocation(line: 461, column: 32, scope: !18080)
!18088 = !DILocation(line: 461, column: 2, scope: !18080)
!18089 = !DILocation(line: 462, column: 1, scope: !18080)
!18090 = distinct !DISubprogram(name: "esw_create_legacy_vepa_table", scope: !3, file: !3, line: 286, type: !13149, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18091 = !DILocalVariable(name: "esw", arg: 1, scope: !18090, file: !3, line: 286, type: !10791)
!18092 = !DILocation(line: 286, column: 62, scope: !18090)
!18093 = !DILocalVariable(name: "ft_attr", scope: !18090, file: !3, line: 288, type: !18094)
!18094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_table_attr", file: !10857, line: 153, size: 256, elements: !18095)
!18095 = !{!18096, !18097, !18098, !18099, !18100, !18101}
!18096 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18094, file: !10857, line: 154, baseType: !6, size: 32)
!18097 = !DIDerivedType(tag: DW_TAG_member, name: "max_fte", scope: !18094, file: !10857, line: 155, baseType: !6, size: 32, offset: 32)
!18098 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !18094, file: !10857, line: 156, baseType: !224, size: 32, offset: 64)
!18099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !18094, file: !10857, line: 157, baseType: !224, size: 32, offset: 96)
!18100 = !DIDerivedType(tag: DW_TAG_member, name: "next_ft", scope: !18094, file: !10857, line: 158, baseType: !10729, size: 64, offset: 128)
!18101 = !DIDerivedType(tag: DW_TAG_member, name: "autogroup", scope: !18094, file: !10857, line: 163, baseType: !18102, size: 64, offset: 192)
!18102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18094, file: !10857, line: 160, size: 64, elements: !18103)
!18103 = !{!18104, !18105}
!18104 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_groups", scope: !18102, file: !10857, line: 161, baseType: !6, size: 32)
!18105 = !DIDerivedType(tag: DW_TAG_member, name: "num_reserved_entries", scope: !18102, file: !10857, line: 162, baseType: !6, size: 32, offset: 32)
!18106 = !DILocation(line: 288, column: 30, scope: !18090)
!18107 = !DILocalVariable(name: "dev", scope: !18090, file: !3, line: 289, type: !7)
!18108 = !DILocation(line: 289, column: 24, scope: !18090)
!18109 = !DILocation(line: 289, column: 30, scope: !18090)
!18110 = !DILocation(line: 289, column: 35, scope: !18090)
!18111 = !DILocalVariable(name: "root_ns", scope: !18090, file: !3, line: 290, type: !10769)
!18112 = !DILocation(line: 290, column: 30, scope: !18090)
!18113 = !DILocalVariable(name: "fdb", scope: !18090, file: !3, line: 291, type: !10729)
!18114 = !DILocation(line: 291, column: 26, scope: !18090)
!18115 = !DILocalVariable(name: "err", scope: !18090, file: !3, line: 292, type: !6)
!18116 = !DILocation(line: 292, column: 6, scope: !18090)
!18117 = !DILocation(line: 294, column: 32, scope: !18090)
!18118 = !DILocation(line: 294, column: 12, scope: !18090)
!18119 = !DILocation(line: 294, column: 10, scope: !18090)
!18120 = !DILocation(line: 295, column: 7, scope: !18121)
!18121 = distinct !DILexicalBlock(scope: !18090, file: !3, line: 295, column: 6)
!18122 = !DILocation(line: 295, column: 6, scope: !18090)
!18123 = !DILocation(line: 296, column: 3, scope: !18124)
!18124 = distinct !DILexicalBlock(scope: !18121, file: !3, line: 295, column: 16)
!18125 = !DILocation(line: 297, column: 3, scope: !18124)
!18126 = !DILocation(line: 301, column: 10, scope: !18090)
!18127 = !DILocation(line: 301, column: 15, scope: !18090)
!18128 = !DILocation(line: 302, column: 10, scope: !18090)
!18129 = !DILocation(line: 302, column: 18, scope: !18090)
!18130 = !DILocation(line: 303, column: 10, scope: !18090)
!18131 = !DILocation(line: 303, column: 20, scope: !18090)
!18132 = !DILocation(line: 303, column: 35, scope: !18090)
!18133 = !DILocation(line: 304, column: 44, scope: !18090)
!18134 = !DILocation(line: 304, column: 8, scope: !18090)
!18135 = !DILocation(line: 304, column: 6, scope: !18090)
!18136 = !DILocation(line: 305, column: 13, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18090, file: !3, line: 305, column: 6)
!18138 = !DILocation(line: 305, column: 6, scope: !18137)
!18139 = !DILocation(line: 305, column: 6, scope: !18090)
!18140 = !DILocation(line: 306, column: 17, scope: !18141)
!18141 = distinct !DILexicalBlock(scope: !18137, file: !3, line: 305, column: 19)
!18142 = !DILocation(line: 306, column: 9, scope: !18141)
!18143 = !DILocation(line: 306, column: 7, scope: !18141)
!18144 = !DILocation(line: 307, column: 3, scope: !18141)
!18145 = !DILocation(line: 308, column: 10, scope: !18141)
!18146 = !DILocation(line: 308, column: 3, scope: !18141)
!18147 = !DILocation(line: 310, column: 35, scope: !18090)
!18148 = !DILocation(line: 310, column: 2, scope: !18090)
!18149 = !DILocation(line: 310, column: 7, scope: !18090)
!18150 = !DILocation(line: 310, column: 17, scope: !18090)
!18151 = !DILocation(line: 310, column: 24, scope: !18090)
!18152 = !DILocation(line: 310, column: 33, scope: !18090)
!18153 = !DILocation(line: 312, column: 2, scope: !18090)
!18154 = !DILocation(line: 313, column: 1, scope: !18090)
!18155 = distinct !DISubprogram(name: "esw_create_legacy_fdb_table", scope: !3, file: !3, line: 315, type: !13149, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18156 = !DILocalVariable(name: "esw", arg: 1, scope: !18155, file: !3, line: 315, type: !10791)
!18157 = !DILocation(line: 315, column: 61, scope: !18155)
!18158 = !DILocalVariable(name: "inlen", scope: !18155, file: !3, line: 317, type: !6)
!18159 = !DILocation(line: 317, column: 6, scope: !18155)
!18160 = !DILocalVariable(name: "ft_attr", scope: !18155, file: !3, line: 318, type: !18094)
!18161 = !DILocation(line: 318, column: 30, scope: !18155)
!18162 = !DILocalVariable(name: "dev", scope: !18155, file: !3, line: 319, type: !7)
!18163 = !DILocation(line: 319, column: 24, scope: !18155)
!18164 = !DILocation(line: 319, column: 30, scope: !18155)
!18165 = !DILocation(line: 319, column: 35, scope: !18155)
!18166 = !DILocalVariable(name: "root_ns", scope: !18155, file: !3, line: 320, type: !10769)
!18167 = !DILocation(line: 320, column: 30, scope: !18155)
!18168 = !DILocalVariable(name: "fdb", scope: !18155, file: !3, line: 321, type: !10729)
!18169 = !DILocation(line: 321, column: 26, scope: !18155)
!18170 = !DILocalVariable(name: "g", scope: !18155, file: !3, line: 322, type: !10808)
!18171 = !DILocation(line: 322, column: 26, scope: !18155)
!18172 = !DILocalVariable(name: "match_criteria", scope: !18155, file: !3, line: 323, type: !154)
!18173 = !DILocation(line: 323, column: 8, scope: !18155)
!18174 = !DILocalVariable(name: "table_size", scope: !18155, file: !3, line: 324, type: !6)
!18175 = !DILocation(line: 324, column: 6, scope: !18155)
!18176 = !DILocalVariable(name: "flow_group_in", scope: !18155, file: !3, line: 325, type: !1462)
!18177 = !DILocation(line: 325, column: 7, scope: !18155)
!18178 = !DILocalVariable(name: "dmac", scope: !18155, file: !3, line: 326, type: !2742)
!18179 = !DILocation(line: 326, column: 6, scope: !18155)
!18180 = !DILocalVariable(name: "err", scope: !18155, file: !3, line: 327, type: !6)
!18181 = !DILocation(line: 327, column: 6, scope: !18155)
!18182 = !DILocation(line: 329, column: 2, scope: !18155)
!18183 = !DILocation(line: 329, column: 2, scope: !18184)
!18184 = distinct !DILexicalBlock(scope: !18185, file: !3, line: 329, column: 2)
!18185 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 329, column: 2)
!18186 = !DILocation(line: 329, column: 2, scope: !18185)
!18187 = !DILocation(line: 332, column: 32, scope: !18155)
!18188 = !DILocation(line: 332, column: 12, scope: !18155)
!18189 = !DILocation(line: 332, column: 10, scope: !18155)
!18190 = !DILocation(line: 333, column: 7, scope: !18191)
!18191 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 333, column: 6)
!18192 = !DILocation(line: 333, column: 6, scope: !18155)
!18193 = !DILocation(line: 334, column: 3, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18191, file: !3, line: 333, column: 16)
!18195 = !DILocation(line: 335, column: 3, scope: !18194)
!18196 = !DILocation(line: 338, column: 27, scope: !18155)
!18197 = !DILocation(line: 338, column: 18, scope: !18155)
!18198 = !DILocation(line: 338, column: 16, scope: !18155)
!18199 = !DILocation(line: 339, column: 7, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 339, column: 6)
!18201 = !DILocation(line: 339, column: 6, scope: !18155)
!18202 = !DILocation(line: 340, column: 3, scope: !18200)
!18203 = !DILocation(line: 342, column: 15, scope: !18155)
!18204 = !DILocation(line: 342, column: 13, scope: !18155)
!18205 = !DILocation(line: 343, column: 20, scope: !18155)
!18206 = !DILocation(line: 343, column: 10, scope: !18155)
!18207 = !DILocation(line: 343, column: 18, scope: !18155)
!18208 = !DILocation(line: 344, column: 10, scope: !18155)
!18209 = !DILocation(line: 344, column: 15, scope: !18155)
!18210 = !DILocation(line: 345, column: 31, scope: !18155)
!18211 = !DILocation(line: 345, column: 8, scope: !18155)
!18212 = !DILocation(line: 345, column: 6, scope: !18155)
!18213 = !DILocation(line: 346, column: 13, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 346, column: 6)
!18215 = !DILocation(line: 346, column: 6, scope: !18214)
!18216 = !DILocation(line: 346, column: 6, scope: !18155)
!18217 = !DILocation(line: 347, column: 17, scope: !18218)
!18218 = distinct !DILexicalBlock(scope: !18214, file: !3, line: 346, column: 19)
!18219 = !DILocation(line: 347, column: 9, scope: !18218)
!18220 = !DILocation(line: 347, column: 7, scope: !18218)
!18221 = !DILocation(line: 348, column: 3, scope: !18218)
!18222 = !DILocation(line: 349, column: 3, scope: !18218)
!18223 = !DILocation(line: 351, column: 30, scope: !18155)
!18224 = !DILocation(line: 351, column: 2, scope: !18155)
!18225 = !DILocation(line: 351, column: 7, scope: !18155)
!18226 = !DILocation(line: 351, column: 17, scope: !18155)
!18227 = !DILocation(line: 351, column: 24, scope: !18155)
!18228 = !DILocation(line: 351, column: 28, scope: !18155)
!18229 = !DILocation(line: 354, column: 2, scope: !18155)
!18230 = !DILocalVariable(name: "_v", scope: !18231, file: !3, line: 354, type: !224)
!18231 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 354, column: 2)
!18232 = !DILocation(line: 354, column: 2, scope: !18231)
!18233 = !DILocation(line: 354, column: 2, scope: !18234)
!18234 = distinct !DILexicalBlock(scope: !18231, file: !3, line: 354, column: 2)
!18235 = !DILocation(line: 356, column: 19, scope: !18155)
!18236 = !DILocation(line: 356, column: 17, scope: !18155)
!18237 = !DILocation(line: 357, column: 9, scope: !18155)
!18238 = !DILocation(line: 357, column: 7, scope: !18155)
!18239 = !DILocation(line: 358, column: 2, scope: !18155)
!18240 = !DILocalVariable(name: "_v", scope: !18241, file: !3, line: 358, type: !224)
!18241 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 358, column: 2)
!18242 = !DILocation(line: 358, column: 2, scope: !18241)
!18243 = !DILocation(line: 358, column: 2, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !18241, file: !3, line: 358, column: 2)
!18245 = !DILocation(line: 360, column: 2, scope: !18155)
!18246 = !DILocalVariable(name: "_v", scope: !18247, file: !3, line: 360, type: !224)
!18247 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 360, column: 2)
!18248 = !DILocation(line: 360, column: 2, scope: !18247)
!18249 = !DILocation(line: 360, column: 2, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18247, file: !3, line: 360, column: 2)
!18251 = !DILocation(line: 361, column: 21, scope: !18155)
!18252 = !DILocation(line: 361, column: 2, scope: !18155)
!18253 = !DILocation(line: 362, column: 29, scope: !18155)
!18254 = !DILocation(line: 362, column: 34, scope: !18155)
!18255 = !DILocation(line: 362, column: 6, scope: !18155)
!18256 = !DILocation(line: 362, column: 4, scope: !18155)
!18257 = !DILocation(line: 363, column: 13, scope: !18258)
!18258 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 363, column: 6)
!18259 = !DILocation(line: 363, column: 6, scope: !18258)
!18260 = !DILocation(line: 363, column: 6, scope: !18155)
!18261 = !DILocation(line: 364, column: 17, scope: !18262)
!18262 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 363, column: 17)
!18263 = !DILocation(line: 364, column: 9, scope: !18262)
!18264 = !DILocation(line: 364, column: 7, scope: !18262)
!18265 = !DILocation(line: 365, column: 3, scope: !18262)
!18266 = !DILocation(line: 366, column: 3, scope: !18262)
!18267 = !DILocation(line: 368, column: 35, scope: !18155)
!18268 = !DILocation(line: 368, column: 2, scope: !18155)
!18269 = !DILocation(line: 368, column: 7, scope: !18155)
!18270 = !DILocation(line: 368, column: 17, scope: !18155)
!18271 = !DILocation(line: 368, column: 24, scope: !18155)
!18272 = !DILocation(line: 368, column: 33, scope: !18155)
!18273 = !DILocation(line: 371, column: 2, scope: !18155)
!18274 = !DILocalVariable(name: "_v", scope: !18275, file: !3, line: 371, type: !224)
!18275 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 371, column: 2)
!18276 = !DILocation(line: 371, column: 2, scope: !18275)
!18277 = !DILocation(line: 371, column: 2, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18275, file: !3, line: 371, column: 2)
!18279 = !DILocation(line: 373, column: 2, scope: !18155)
!18280 = !DILocalVariable(name: "_v", scope: !18281, file: !3, line: 373, type: !224)
!18281 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 373, column: 2)
!18282 = !DILocation(line: 373, column: 2, scope: !18281)
!18283 = !DILocation(line: 373, column: 2, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !18281, file: !3, line: 373, column: 2)
!18285 = !DILocation(line: 374, column: 2, scope: !18155)
!18286 = !DILocalVariable(name: "_v", scope: !18287, file: !3, line: 374, type: !224)
!18287 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 374, column: 2)
!18288 = !DILocation(line: 374, column: 2, scope: !18287)
!18289 = !DILocation(line: 374, column: 2, scope: !18290)
!18290 = distinct !DILexicalBlock(scope: !18287, file: !3, line: 374, column: 2)
!18291 = !DILocation(line: 375, column: 16, scope: !18155)
!18292 = !DILocation(line: 375, column: 2, scope: !18155)
!18293 = !DILocation(line: 376, column: 2, scope: !18155)
!18294 = !DILocation(line: 376, column: 10, scope: !18155)
!18295 = !DILocation(line: 377, column: 29, scope: !18155)
!18296 = !DILocation(line: 377, column: 34, scope: !18155)
!18297 = !DILocation(line: 377, column: 6, scope: !18155)
!18298 = !DILocation(line: 377, column: 4, scope: !18155)
!18299 = !DILocation(line: 378, column: 13, scope: !18300)
!18300 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 378, column: 6)
!18301 = !DILocation(line: 378, column: 6, scope: !18300)
!18302 = !DILocation(line: 378, column: 6, scope: !18155)
!18303 = !DILocation(line: 379, column: 17, scope: !18304)
!18304 = distinct !DILexicalBlock(scope: !18300, file: !3, line: 378, column: 17)
!18305 = !DILocation(line: 379, column: 9, scope: !18304)
!18306 = !DILocation(line: 379, column: 7, scope: !18304)
!18307 = !DILocation(line: 380, column: 3, scope: !18304)
!18308 = !DILocation(line: 381, column: 3, scope: !18304)
!18309 = !DILocation(line: 383, column: 39, scope: !18155)
!18310 = !DILocation(line: 383, column: 2, scope: !18155)
!18311 = !DILocation(line: 383, column: 7, scope: !18155)
!18312 = !DILocation(line: 383, column: 17, scope: !18155)
!18313 = !DILocation(line: 383, column: 24, scope: !18155)
!18314 = !DILocation(line: 383, column: 37, scope: !18155)
!18315 = !DILocation(line: 388, column: 16, scope: !18155)
!18316 = !DILocation(line: 388, column: 2, scope: !18155)
!18317 = !DILocation(line: 389, column: 2, scope: !18155)
!18318 = !DILocalVariable(name: "_v", scope: !18319, file: !3, line: 389, type: !224)
!18319 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 389, column: 2)
!18320 = !DILocation(line: 389, column: 2, scope: !18319)
!18321 = !DILocation(line: 389, column: 2, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 389, column: 2)
!18323 = !DILocation(line: 391, column: 2, scope: !18155)
!18324 = !DILocation(line: 391, column: 2, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 391, column: 2)
!18326 = !DILocation(line: 391, column: 2, scope: !18327)
!18327 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 391, column: 2)
!18328 = !DILocation(line: 392, column: 2, scope: !18155)
!18329 = !DILocalVariable(name: "_v", scope: !18330, file: !3, line: 392, type: !224)
!18330 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 392, column: 2)
!18331 = !DILocation(line: 392, column: 2, scope: !18330)
!18332 = !DILocation(line: 392, column: 2, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !18330, file: !3, line: 392, column: 2)
!18334 = !DILocation(line: 393, column: 2, scope: !18155)
!18335 = !DILocalVariable(name: "_v", scope: !18336, file: !3, line: 393, type: !224)
!18336 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 393, column: 2)
!18337 = !DILocation(line: 393, column: 2, scope: !18336)
!18338 = !DILocation(line: 393, column: 2, scope: !18339)
!18339 = distinct !DILexicalBlock(scope: !18336, file: !3, line: 393, column: 2)
!18340 = !DILocation(line: 394, column: 29, scope: !18155)
!18341 = !DILocation(line: 394, column: 34, scope: !18155)
!18342 = !DILocation(line: 394, column: 6, scope: !18155)
!18343 = !DILocation(line: 394, column: 4, scope: !18155)
!18344 = !DILocation(line: 395, column: 13, scope: !18345)
!18345 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 395, column: 6)
!18346 = !DILocation(line: 395, column: 6, scope: !18345)
!18347 = !DILocation(line: 395, column: 6, scope: !18155)
!18348 = !DILocation(line: 396, column: 17, scope: !18349)
!18349 = distinct !DILexicalBlock(scope: !18345, file: !3, line: 395, column: 17)
!18350 = !DILocation(line: 396, column: 9, scope: !18349)
!18351 = !DILocation(line: 396, column: 7, scope: !18349)
!18352 = !DILocation(line: 397, column: 3, scope: !18349)
!18353 = !DILocation(line: 398, column: 3, scope: !18349)
!18354 = !DILocation(line: 400, column: 38, scope: !18155)
!18355 = !DILocation(line: 400, column: 2, scope: !18155)
!18356 = !DILocation(line: 400, column: 7, scope: !18155)
!18357 = !DILocation(line: 400, column: 17, scope: !18155)
!18358 = !DILocation(line: 400, column: 24, scope: !18155)
!18359 = !DILocation(line: 400, column: 36, scope: !18155)
!18360 = !DILabel(scope: !18155, name: "out", file: !3, line: 402)
!18361 = !DILocation(line: 402, column: 1, scope: !18155)
!18362 = !DILocation(line: 403, column: 6, scope: !18363)
!18363 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 403, column: 6)
!18364 = !DILocation(line: 403, column: 6, scope: !18155)
!18365 = !DILocation(line: 404, column: 32, scope: !18363)
!18366 = !DILocation(line: 404, column: 3, scope: !18363)
!18367 = !DILocation(line: 406, column: 9, scope: !18155)
!18368 = !DILocation(line: 406, column: 2, scope: !18155)
!18369 = !DILocation(line: 407, column: 9, scope: !18155)
!18370 = !DILocation(line: 407, column: 2, scope: !18155)
!18371 = !DILocation(line: 408, column: 1, scope: !18155)
!18372 = distinct !DISubprogram(name: "esw_destroy_legacy_vepa_table", scope: !3, file: !3, line: 410, type: !12881, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18373 = !DILocalVariable(name: "esw", arg: 1, scope: !18372, file: !3, line: 410, type: !10791)
!18374 = !DILocation(line: 410, column: 64, scope: !18372)
!18375 = !DILocation(line: 412, column: 2, scope: !18372)
!18376 = !DILocation(line: 412, column: 2, scope: !18377)
!18377 = distinct !DILexicalBlock(scope: !18378, file: !3, line: 412, column: 2)
!18378 = distinct !DILexicalBlock(scope: !18372, file: !3, line: 412, column: 2)
!18379 = !DILocation(line: 412, column: 2, scope: !18378)
!18380 = !DILocation(line: 413, column: 7, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18372, file: !3, line: 413, column: 6)
!18382 = !DILocation(line: 413, column: 12, scope: !18381)
!18383 = !DILocation(line: 413, column: 22, scope: !18381)
!18384 = !DILocation(line: 413, column: 29, scope: !18381)
!18385 = !DILocation(line: 413, column: 6, scope: !18372)
!18386 = !DILocation(line: 414, column: 3, scope: !18381)
!18387 = !DILocation(line: 416, column: 26, scope: !18372)
!18388 = !DILocation(line: 416, column: 31, scope: !18372)
!18389 = !DILocation(line: 416, column: 41, scope: !18372)
!18390 = !DILocation(line: 416, column: 48, scope: !18372)
!18391 = !DILocation(line: 416, column: 2, scope: !18372)
!18392 = !DILocation(line: 417, column: 2, scope: !18372)
!18393 = !DILocation(line: 417, column: 7, scope: !18372)
!18394 = !DILocation(line: 417, column: 17, scope: !18372)
!18395 = !DILocation(line: 417, column: 24, scope: !18372)
!18396 = !DILocation(line: 417, column: 33, scope: !18372)
!18397 = !DILocation(line: 418, column: 1, scope: !18372)
!18398 = distinct !DISubprogram(name: "eth_broadcast_addr", scope: !14385, file: !14385, line: 238, type: !18399, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18399 = !DISubroutineType(types: !18400)
!18400 = !{null, !2742}
!18401 = !DILocalVariable(name: "addr", arg: 1, scope: !18398, file: !14385, line: 238, type: !2742)
!18402 = !DILocation(line: 238, column: 43, scope: !18398)
!18403 = !DILocation(line: 240, column: 9, scope: !18398)
!18404 = !DILocation(line: 240, column: 2, scope: !18398)
!18405 = !DILocation(line: 241, column: 1, scope: !18398)
!18406 = distinct !DISubprogram(name: "eth_zero_addr", scope: !14385, file: !14385, line: 249, type: !18399, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18407 = !DILocalVariable(name: "addr", arg: 1, scope: !18406, file: !14385, line: 249, type: !2742)
!18408 = !DILocation(line: 249, column: 38, scope: !18406)
!18409 = !DILocation(line: 251, column: 9, scope: !18406)
!18410 = !DILocation(line: 251, column: 2, scope: !18406)
!18411 = !DILocation(line: 252, column: 1, scope: !18406)
!18412 = distinct !DISubprogram(name: "esw_destroy_legacy_fdb_table", scope: !3, file: !3, line: 420, type: !12881, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18413 = !DILocalVariable(name: "esw", arg: 1, scope: !18412, file: !3, line: 420, type: !10791)
!18414 = !DILocation(line: 420, column: 63, scope: !18412)
!18415 = !DILocation(line: 422, column: 2, scope: !18412)
!18416 = !DILocation(line: 422, column: 2, scope: !18417)
!18417 = distinct !DILexicalBlock(scope: !18418, file: !3, line: 422, column: 2)
!18418 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 422, column: 2)
!18419 = !DILocation(line: 422, column: 2, scope: !18418)
!18420 = !DILocation(line: 423, column: 7, scope: !18421)
!18421 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 423, column: 6)
!18422 = !DILocation(line: 423, column: 12, scope: !18421)
!18423 = !DILocation(line: 423, column: 22, scope: !18421)
!18424 = !DILocation(line: 423, column: 29, scope: !18421)
!18425 = !DILocation(line: 423, column: 6, scope: !18412)
!18426 = !DILocation(line: 424, column: 3, scope: !18421)
!18427 = !DILocation(line: 426, column: 6, scope: !18428)
!18428 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 426, column: 6)
!18429 = !DILocation(line: 426, column: 11, scope: !18428)
!18430 = !DILocation(line: 426, column: 21, scope: !18428)
!18431 = !DILocation(line: 426, column: 28, scope: !18428)
!18432 = !DILocation(line: 426, column: 6, scope: !18412)
!18433 = !DILocation(line: 427, column: 27, scope: !18428)
!18434 = !DILocation(line: 427, column: 32, scope: !18428)
!18435 = !DILocation(line: 427, column: 42, scope: !18428)
!18436 = !DILocation(line: 427, column: 49, scope: !18428)
!18437 = !DILocation(line: 427, column: 3, scope: !18428)
!18438 = !DILocation(line: 428, column: 6, scope: !18439)
!18439 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 428, column: 6)
!18440 = !DILocation(line: 428, column: 11, scope: !18439)
!18441 = !DILocation(line: 428, column: 21, scope: !18439)
!18442 = !DILocation(line: 428, column: 28, scope: !18439)
!18443 = !DILocation(line: 428, column: 6, scope: !18412)
!18444 = !DILocation(line: 429, column: 27, scope: !18439)
!18445 = !DILocation(line: 429, column: 32, scope: !18439)
!18446 = !DILocation(line: 429, column: 42, scope: !18439)
!18447 = !DILocation(line: 429, column: 49, scope: !18439)
!18448 = !DILocation(line: 429, column: 3, scope: !18439)
!18449 = !DILocation(line: 430, column: 6, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 430, column: 6)
!18451 = !DILocation(line: 430, column: 11, scope: !18450)
!18452 = !DILocation(line: 430, column: 21, scope: !18450)
!18453 = !DILocation(line: 430, column: 28, scope: !18450)
!18454 = !DILocation(line: 430, column: 6, scope: !18412)
!18455 = !DILocation(line: 431, column: 27, scope: !18450)
!18456 = !DILocation(line: 431, column: 32, scope: !18450)
!18457 = !DILocation(line: 431, column: 42, scope: !18450)
!18458 = !DILocation(line: 431, column: 49, scope: !18450)
!18459 = !DILocation(line: 431, column: 3, scope: !18450)
!18460 = !DILocation(line: 432, column: 26, scope: !18412)
!18461 = !DILocation(line: 432, column: 31, scope: !18412)
!18462 = !DILocation(line: 432, column: 41, scope: !18412)
!18463 = !DILocation(line: 432, column: 48, scope: !18412)
!18464 = !DILocation(line: 432, column: 2, scope: !18412)
!18465 = !DILocation(line: 434, column: 2, scope: !18412)
!18466 = !DILocation(line: 434, column: 7, scope: !18412)
!18467 = !DILocation(line: 434, column: 17, scope: !18412)
!18468 = !DILocation(line: 434, column: 24, scope: !18412)
!18469 = !DILocation(line: 434, column: 28, scope: !18412)
!18470 = !DILocation(line: 435, column: 2, scope: !18412)
!18471 = !DILocation(line: 435, column: 7, scope: !18412)
!18472 = !DILocation(line: 435, column: 17, scope: !18412)
!18473 = !DILocation(line: 435, column: 24, scope: !18412)
!18474 = !DILocation(line: 435, column: 33, scope: !18412)
!18475 = !DILocation(line: 436, column: 2, scope: !18412)
!18476 = !DILocation(line: 436, column: 7, scope: !18412)
!18477 = !DILocation(line: 436, column: 17, scope: !18412)
!18478 = !DILocation(line: 436, column: 24, scope: !18412)
!18479 = !DILocation(line: 436, column: 37, scope: !18412)
!18480 = !DILocation(line: 437, column: 2, scope: !18412)
!18481 = !DILocation(line: 437, column: 7, scope: !18412)
!18482 = !DILocation(line: 437, column: 17, scope: !18412)
!18483 = !DILocation(line: 437, column: 24, scope: !18412)
!18484 = !DILocation(line: 437, column: 36, scope: !18412)
!18485 = !DILocation(line: 438, column: 1, scope: !18412)
!18486 = distinct !DISubprogram(name: "esw_cleanup_vepa_rules", scope: !3, file: !3, line: 2084, type: !12881, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18487 = !DILocalVariable(name: "esw", arg: 1, scope: !18486, file: !3, line: 2084, type: !10791)
!18488 = !DILocation(line: 2084, column: 57, scope: !18486)
!18489 = !DILocation(line: 2086, column: 6, scope: !18490)
!18490 = distinct !DILexicalBlock(scope: !18486, file: !3, line: 2086, column: 6)
!18491 = !DILocation(line: 2086, column: 11, scope: !18490)
!18492 = !DILocation(line: 2086, column: 21, scope: !18490)
!18493 = !DILocation(line: 2086, column: 28, scope: !18490)
!18494 = !DILocation(line: 2086, column: 6, scope: !18486)
!18495 = !DILocation(line: 2087, column: 23, scope: !18490)
!18496 = !DILocation(line: 2087, column: 28, scope: !18490)
!18497 = !DILocation(line: 2087, column: 38, scope: !18490)
!18498 = !DILocation(line: 2087, column: 45, scope: !18490)
!18499 = !DILocation(line: 2087, column: 3, scope: !18490)
!18500 = !DILocation(line: 2089, column: 6, scope: !18501)
!18501 = distinct !DILexicalBlock(scope: !18486, file: !3, line: 2089, column: 6)
!18502 = !DILocation(line: 2089, column: 11, scope: !18501)
!18503 = !DILocation(line: 2089, column: 21, scope: !18501)
!18504 = !DILocation(line: 2089, column: 28, scope: !18501)
!18505 = !DILocation(line: 2089, column: 6, scope: !18486)
!18506 = !DILocation(line: 2090, column: 23, scope: !18501)
!18507 = !DILocation(line: 2090, column: 28, scope: !18501)
!18508 = !DILocation(line: 2090, column: 38, scope: !18501)
!18509 = !DILocation(line: 2090, column: 45, scope: !18501)
!18510 = !DILocation(line: 2090, column: 3, scope: !18501)
!18511 = !DILocation(line: 2092, column: 2, scope: !18486)
!18512 = !DILocation(line: 2092, column: 7, scope: !18486)
!18513 = !DILocation(line: 2092, column: 17, scope: !18486)
!18514 = !DILocation(line: 2092, column: 24, scope: !18486)
!18515 = !DILocation(line: 2092, column: 41, scope: !18486)
!18516 = !DILocation(line: 2093, column: 2, scope: !18486)
!18517 = !DILocation(line: 2093, column: 7, scope: !18486)
!18518 = !DILocation(line: 2093, column: 17, scope: !18486)
!18519 = !DILocation(line: 2093, column: 24, scope: !18486)
!18520 = !DILocation(line: 2093, column: 39, scope: !18486)
!18521 = !DILocation(line: 2094, column: 1, scope: !18486)
!18522 = distinct !DISubprogram(name: "eswitch_vport_event", scope: !3, file: !3, line: 1342, type: !6705, scopeLine: 1344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18523 = !DILocalVariable(name: "nb", arg: 1, scope: !18522, file: !3, line: 1342, type: !6699)
!18524 = !DILocation(line: 1342, column: 55, scope: !18522)
!18525 = !DILocalVariable(name: "type", arg: 2, scope: !18522, file: !3, line: 1343, type: !130)
!18526 = !DILocation(line: 1343, column: 25, scope: !18522)
!18527 = !DILocalVariable(name: "data", arg: 3, scope: !18522, file: !3, line: 1343, type: !154)
!18528 = !DILocation(line: 1343, column: 37, scope: !18522)
!18529 = !DILocalVariable(name: "esw", scope: !18522, file: !3, line: 1345, type: !10791)
!18530 = !DILocation(line: 1345, column: 23, scope: !18522)
!18531 = !DILocalVariable(name: "__mptr", scope: !18532, file: !3, line: 1345, type: !154)
!18532 = distinct !DILexicalBlock(scope: !18522, file: !3, line: 1345, column: 29)
!18533 = !DILocation(line: 1345, column: 29, scope: !18532)
!18534 = !DILocalVariable(name: "__mptr", scope: !18535, file: !3, line: 1345, type: !154)
!18535 = distinct !DILexicalBlock(scope: !18532, file: !3, line: 1345, column: 29)
!18536 = !DILocation(line: 1345, column: 29, scope: !18535)
!18537 = !DILocation(line: 1345, column: 29, scope: !18538)
!18538 = distinct !DILexicalBlock(scope: !18535, file: !3, line: 1345, column: 29)
!18539 = !DILocation(line: 1345, column: 29, scope: !18540)
!18540 = distinct !DILexicalBlock(scope: !18532, file: !3, line: 1345, column: 29)
!18541 = !DILocalVariable(name: "eqe", scope: !18522, file: !3, line: 1346, type: !18542)
!18542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18543, size: 64)
!18543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe", file: !10464, line: 741, size: 512, elements: !18544)
!18544 = !{!18545, !18546, !18547, !18548, !18549, !18551, !18692, !18693, !18694}
!18545 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !18543, file: !10464, line: 742, baseType: !1398, size: 8)
!18546 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !18543, file: !10464, line: 743, baseType: !1398, size: 8, offset: 8)
!18547 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !18543, file: !10464, line: 744, baseType: !1398, size: 8, offset: 16)
!18548 = !DIDerivedType(tag: DW_TAG_member, name: "sub_type", scope: !18543, file: !10464, line: 745, baseType: !1398, size: 8, offset: 24)
!18549 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !18543, file: !10464, line: 746, baseType: !18550, size: 224, offset: 32)
!18550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 224, elements: !4785)
!18551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !18543, file: !10464, line: 747, baseType: !18552, size: 224, offset: 256)
!18552 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ev_data", file: !10464, line: 720, size: 224, elements: !18553)
!18553 = !{!18554, !18555, !18561, !18566, !18573, !18580, !18585, !18590, !18596, !18601, !18608, !18634, !18641, !18651, !18671, !18676, !18681, !18687}
!18554 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !18552, file: !10464, line: 721, baseType: !18550, size: 224)
!18555 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !18552, file: !10464, line: 722, baseType: !18556, size: 224)
!18556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_cmd", file: !10464, line: 631, size: 224, elements: !18557)
!18557 = !{!18558, !18559}
!18558 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !18556, file: !10464, line: 632, baseType: !2014, size: 32)
!18559 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !18556, file: !10464, line: 633, baseType: !18560, size: 192, offset: 32)
!18560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 192, elements: !1663)
!18561 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !18552, file: !10464, line: 723, baseType: !18562, size: 224)
!18562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_comp", file: !10464, line: 586, size: 224, elements: !18563)
!18563 = !{!18564, !18565}
!18564 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !18562, file: !10464, line: 587, baseType: !18560, size: 192)
!18565 = !DIDerivedType(tag: DW_TAG_member, name: "cqn", scope: !18562, file: !10464, line: 588, baseType: !2014, size: 32, offset: 192)
!18566 = !DIDerivedType(tag: DW_TAG_member, name: "qp_srq", scope: !18552, file: !10464, line: 724, baseType: !18567, size: 224)
!18567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_qp_srq", file: !10464, line: 591, size: 224, elements: !18568)
!18568 = !{!18569, !18570, !18571, !18572}
!18569 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !18567, file: !10464, line: 592, baseType: !10560, size: 160)
!18570 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !18567, file: !10464, line: 593, baseType: !1398, size: 8, offset: 160)
!18571 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !18567, file: !10464, line: 594, baseType: !10468, size: 24, offset: 168)
!18572 = !DIDerivedType(tag: DW_TAG_member, name: "qp_srq_n", scope: !18567, file: !10464, line: 595, baseType: !2014, size: 32, offset: 192)
!18573 = !DIDerivedType(tag: DW_TAG_member, name: "cq_err", scope: !18552, file: !10464, line: 725, baseType: !18574, size: 96)
!18574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_cq_err", file: !10464, line: 598, size: 96, elements: !18575)
!18575 = !{!18576, !18577, !18579}
!18576 = !DIDerivedType(tag: DW_TAG_member, name: "cqn", scope: !18574, file: !10464, line: 599, baseType: !2014, size: 32)
!18577 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !18574, file: !10464, line: 600, baseType: !18578, size: 56, offset: 32)
!18578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 56, elements: !4785)
!18579 = !DIDerivedType(tag: DW_TAG_member, name: "syndrome", scope: !18574, file: !10464, line: 601, baseType: !1398, size: 8, offset: 88)
!18580 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !18552, file: !10464, line: 726, baseType: !18581, size: 72)
!18581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_port_state", file: !10464, line: 610, size: 72, elements: !18582)
!18582 = !{!18583, !18584}
!18583 = !DIDerivedType(tag: DW_TAG_member, name: "reserved0", scope: !18581, file: !10464, line: 611, baseType: !3123, size: 64)
!18584 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !18581, file: !10464, line: 612, baseType: !1398, size: 8, offset: 64)
!18585 = !DIDerivedType(tag: DW_TAG_member, name: "gpio", scope: !18552, file: !10464, line: 727, baseType: !18586, size: 128)
!18586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_gpio", file: !10464, line: 615, size: 128, elements: !18587)
!18587 = !{!18588, !18589}
!18588 = !DIDerivedType(tag: DW_TAG_member, name: "reserved0", scope: !18586, file: !10464, line: 616, baseType: !4602, size: 64)
!18589 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_event", scope: !18586, file: !10464, line: 617, baseType: !10471, size: 64, offset: 64)
!18590 = !DIDerivedType(tag: DW_TAG_member, name: "cong", scope: !18552, file: !10464, line: 728, baseType: !18591, size: 24)
!18591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_congestion", file: !10464, line: 620, size: 24, elements: !18592)
!18592 = !{!18593, !18594, !18595}
!18593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !18591, file: !10464, line: 621, baseType: !1398, size: 8)
!18594 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !18591, file: !10464, line: 622, baseType: !1398, size: 8, offset: 8)
!18595 = !DIDerivedType(tag: DW_TAG_member, name: "congestion_level", scope: !18591, file: !10464, line: 623, baseType: !1398, size: 8, offset: 16)
!18596 = !DIDerivedType(tag: DW_TAG_member, name: "stall_vl", scope: !18552, file: !10464, line: 729, baseType: !18597, size: 32)
!18597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_stall_vl", file: !10464, line: 626, size: 32, elements: !18598)
!18598 = !{!18599, !18600}
!18599 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !18597, file: !10464, line: 627, baseType: !10468, size: 24)
!18600 = !DIDerivedType(tag: DW_TAG_member, name: "port_vl", scope: !18597, file: !10464, line: 628, baseType: !1398, size: 8, offset: 24)
!18601 = !DIDerivedType(tag: DW_TAG_member, name: "req_pages", scope: !18552, file: !10464, line: 730, baseType: !18602, size: 224)
!18602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_page_req", file: !10464, line: 636, size: 224, elements: !18603)
!18603 = !{!18604, !18605, !18606, !18607}
!18604 = !DIDerivedType(tag: DW_TAG_member, name: "ec_function", scope: !18602, file: !10464, line: 637, baseType: !2032, size: 16)
!18605 = !DIDerivedType(tag: DW_TAG_member, name: "func_id", scope: !18602, file: !10464, line: 638, baseType: !2032, size: 16, offset: 16)
!18606 = !DIDerivedType(tag: DW_TAG_member, name: "num_pages", scope: !18602, file: !10464, line: 639, baseType: !2014, size: 32, offset: 32)
!18607 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !18602, file: !10464, line: 640, baseType: !10560, size: 160, offset: 64)
!18608 = !DIDerivedType(tag: DW_TAG_member, name: "page_fault", scope: !18552, file: !10464, line: 731, baseType: !18609, size: 224)
!18609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_page_fault", file: !10464, line: 643, size: 224, elements: !18610)
!18610 = !{!18611, !18612}
!18611 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_committed", scope: !18609, file: !10464, line: 644, baseType: !2014, size: 32)
!18612 = !DIDerivedType(tag: DW_TAG_member, scope: !18609, file: !10464, line: 645, baseType: !18613, size: 192, offset: 32)
!18613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18609, file: !10464, line: 645, size: 192, elements: !18614)
!18614 = !{!18615, !18625}
!18615 = !DIDerivedType(tag: DW_TAG_member, name: "wqe", scope: !18613, file: !10464, line: 654, baseType: !18616, size: 192)
!18616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18613, file: !10464, line: 646, size: 192, elements: !18617)
!18617 = !{!18618, !18619, !18620, !18621, !18622, !18623, !18624}
!18618 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !18616, file: !10464, line: 647, baseType: !739, size: 16)
!18619 = !DIDerivedType(tag: DW_TAG_member, name: "wqe_index", scope: !18616, file: !10464, line: 648, baseType: !2032, size: 16, offset: 16)
!18620 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !18616, file: !10464, line: 649, baseType: !739, size: 16, offset: 32)
!18621 = !DIDerivedType(tag: DW_TAG_member, name: "packet_length", scope: !18616, file: !10464, line: 650, baseType: !2032, size: 16, offset: 48)
!18622 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !18616, file: !10464, line: 651, baseType: !2014, size: 32, offset: 64)
!18623 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !18616, file: !10464, line: 652, baseType: !3123, size: 64, offset: 96)
!18624 = !DIDerivedType(tag: DW_TAG_member, name: "pftype_wq", scope: !18616, file: !10464, line: 653, baseType: !2014, size: 32, offset: 160)
!18625 = !DIDerivedType(tag: DW_TAG_member, name: "rdma", scope: !18613, file: !10464, line: 662, baseType: !18626, size: 192)
!18626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18613, file: !10464, line: 655, size: 192, elements: !18627)
!18627 = !{!18628, !18629, !18630, !18631, !18632, !18633}
!18628 = !DIDerivedType(tag: DW_TAG_member, name: "r_key", scope: !18626, file: !10464, line: 656, baseType: !2014, size: 32)
!18629 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !18626, file: !10464, line: 657, baseType: !739, size: 16, offset: 32)
!18630 = !DIDerivedType(tag: DW_TAG_member, name: "packet_length", scope: !18626, file: !10464, line: 658, baseType: !2032, size: 16, offset: 48)
!18631 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_op_len", scope: !18626, file: !10464, line: 659, baseType: !2014, size: 32, offset: 64)
!18632 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_va", scope: !18626, file: !10464, line: 660, baseType: !10471, size: 64, offset: 96)
!18633 = !DIDerivedType(tag: DW_TAG_member, name: "pftype_token", scope: !18626, file: !10464, line: 661, baseType: !2014, size: 32, offset: 160)
!18634 = !DIDerivedType(tag: DW_TAG_member, name: "vport_change", scope: !18552, file: !10464, line: 732, baseType: !18635, size: 224)
!18635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_vport_change", file: !10464, line: 666, size: 224, elements: !18636)
!18636 = !{!18637, !18639, !18640}
!18637 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !18635, file: !10464, line: 667, baseType: !18638, size: 16)
!18638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 16, elements: !1906)
!18639 = !DIDerivedType(tag: DW_TAG_member, name: "vport_num", scope: !18635, file: !10464, line: 668, baseType: !2032, size: 16, offset: 16)
!18640 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !18635, file: !10464, line: 669, baseType: !18560, size: 192, offset: 32)
!18641 = !DIDerivedType(tag: DW_TAG_member, name: "port_module", scope: !18552, file: !10464, line: 733, baseType: !18642, size: 56)
!18642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_port_module", file: !10464, line: 672, size: 56, elements: !18643)
!18643 = !{!18644, !18646, !18647, !18648, !18649, !18650}
!18644 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_at_0", scope: !18642, file: !10464, line: 673, baseType: !18645, size: 8)
!18645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 8, elements: !1417)
!18646 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !18642, file: !10464, line: 674, baseType: !1398, size: 8, offset: 8)
!18647 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_at_2", scope: !18642, file: !10464, line: 675, baseType: !18645, size: 8, offset: 16)
!18648 = !DIDerivedType(tag: DW_TAG_member, name: "module_status", scope: !18642, file: !10464, line: 676, baseType: !1398, size: 8, offset: 24)
!18649 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_at_4", scope: !18642, file: !10464, line: 677, baseType: !18638, size: 16, offset: 32)
!18650 = !DIDerivedType(tag: DW_TAG_member, name: "error_type", scope: !18642, file: !10464, line: 678, baseType: !1398, size: 8, offset: 48)
!18651 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !18552, file: !10464, line: 734, baseType: !18652, size: 224)
!18652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_pps", file: !10464, line: 681, size: 224, elements: !18653)
!18653 = !{!18654, !18655, !18656, !18658, !18670}
!18654 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !18652, file: !10464, line: 682, baseType: !10468, size: 24)
!18655 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !18652, file: !10464, line: 683, baseType: !1398, size: 8, offset: 24)
!18656 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !18652, file: !10464, line: 684, baseType: !18657, size: 32, offset: 32)
!18657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 32, elements: !1207)
!18658 = !DIDerivedType(tag: DW_TAG_member, scope: !18652, file: !10464, line: 685, baseType: !18659, size: 64, offset: 64)
!18659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18652, file: !10464, line: 685, size: 64, elements: !18660)
!18660 = !{!18661, !18666}
!18661 = !DIDerivedType(tag: DW_TAG_member, scope: !18659, file: !10464, line: 686, baseType: !18662, size: 64)
!18662 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18659, file: !10464, line: 686, size: 64, elements: !18663)
!18663 = !{!18664, !18665}
!18664 = !DIDerivedType(tag: DW_TAG_member, name: "time_sec", scope: !18662, file: !10464, line: 687, baseType: !2014, size: 32)
!18665 = !DIDerivedType(tag: DW_TAG_member, name: "time_nsec", scope: !18662, file: !10464, line: 688, baseType: !2014, size: 32, offset: 32)
!18666 = !DIDerivedType(tag: DW_TAG_member, scope: !18659, file: !10464, line: 690, baseType: !18667, size: 64)
!18667 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18659, file: !10464, line: 690, size: 64, elements: !18668)
!18668 = !{!18669}
!18669 = !DIDerivedType(tag: DW_TAG_member, name: "time_stamp", scope: !18667, file: !10464, line: 691, baseType: !10471, size: 64)
!18670 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !18652, file: !10464, line: 694, baseType: !3199, size: 96, offset: 128)
!18671 = !DIDerivedType(tag: DW_TAG_member, name: "dct", scope: !18552, file: !10464, line: 735, baseType: !18672, size: 224)
!18672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_dct", file: !10464, line: 697, size: 224, elements: !18673)
!18673 = !{!18674, !18675}
!18674 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !18672, file: !10464, line: 698, baseType: !18560, size: 192)
!18675 = !DIDerivedType(tag: DW_TAG_member, name: "dctn", scope: !18672, file: !10464, line: 699, baseType: !2014, size: 32, offset: 192)
!18676 = !DIDerivedType(tag: DW_TAG_member, name: "temp_warning", scope: !18552, file: !10464, line: 736, baseType: !18677, size: 128)
!18677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_temp_warning", file: !10464, line: 702, size: 128, elements: !18678)
!18678 = !{!18679, !18680}
!18679 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_warning_msb", scope: !18677, file: !10464, line: 703, baseType: !10471, size: 64)
!18680 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_warning_lsb", scope: !18677, file: !10464, line: 704, baseType: !10471, size: 64, offset: 64)
!18681 = !DIDerivedType(tag: DW_TAG_member, name: "xrq_err", scope: !18552, file: !10464, line: 737, baseType: !18682, size: 224)
!18682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_xrq_err", file: !10464, line: 604, size: 224, elements: !18683)
!18683 = !{!18684, !18685, !18686}
!18684 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !18682, file: !10464, line: 605, baseType: !10560, size: 160)
!18685 = !DIDerivedType(tag: DW_TAG_member, name: "type_xrqn", scope: !18682, file: !10464, line: 606, baseType: !2014, size: 32, offset: 160)
!18686 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !18682, file: !10464, line: 607, baseType: !2014, size: 32, offset: 192)
!18687 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fw_update", scope: !18552, file: !10464, line: 738, baseType: !18688, size: 32)
!18688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eqe_sync_fw_update", file: !10464, line: 715, size: 32, elements: !18689)
!18689 = !{!18690, !18691}
!18690 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_at_0", scope: !18688, file: !10464, line: 716, baseType: !10468, size: 24)
!18691 = !DIDerivedType(tag: DW_TAG_member, name: "sync_rst_state", scope: !18688, file: !10464, line: 717, baseType: !1398, size: 8, offset: 24)
!18692 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !18543, file: !10464, line: 748, baseType: !2032, size: 16, offset: 480)
!18693 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !18543, file: !10464, line: 749, baseType: !1398, size: 8, offset: 496)
!18694 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !18543, file: !10464, line: 750, baseType: !1398, size: 8, offset: 504)
!18695 = !DILocation(line: 1346, column: 19, scope: !18522)
!18696 = !DILocation(line: 1346, column: 25, scope: !18522)
!18697 = !DILocalVariable(name: "vport", scope: !18522, file: !3, line: 1347, type: !10958)
!18698 = !DILocation(line: 1347, column: 21, scope: !18522)
!18699 = !DILocalVariable(name: "vport_num", scope: !18522, file: !3, line: 1348, type: !739)
!18700 = !DILocation(line: 1348, column: 6, scope: !18522)
!18701 = !DILocation(line: 1350, column: 14, scope: !18522)
!18702 = !DILocation(line: 1350, column: 12, scope: !18522)
!18703 = !DILocation(line: 1351, column: 33, scope: !18522)
!18704 = !DILocation(line: 1351, column: 38, scope: !18522)
!18705 = !DILocation(line: 1351, column: 10, scope: !18522)
!18706 = !DILocation(line: 1351, column: 8, scope: !18522)
!18707 = !DILocation(line: 1352, column: 14, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18522, file: !3, line: 1352, column: 6)
!18709 = !DILocation(line: 1352, column: 7, scope: !18708)
!18710 = !DILocation(line: 1352, column: 6, scope: !18522)
!18711 = !DILocation(line: 1353, column: 14, scope: !18708)
!18712 = !DILocation(line: 1353, column: 19, scope: !18708)
!18713 = !DILocation(line: 1353, column: 32, scope: !18708)
!18714 = !DILocation(line: 1353, column: 39, scope: !18708)
!18715 = !DILocation(line: 1353, column: 3, scope: !18708)
!18716 = !DILocation(line: 1354, column: 2, scope: !18522)
!18717 = distinct !DISubprogram(name: "mlx5_eswitch_is_funcs_handler", scope: !10793, file: !10793, line: 502, type: !12870, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18718 = !DILocalVariable(name: "dev", arg: 1, scope: !18717, file: !10793, line: 502, type: !12331)
!18719 = !DILocation(line: 502, column: 78, scope: !18717)
!18720 = !DILocation(line: 504, column: 39, scope: !18717)
!18721 = !DILocation(line: 504, column: 9, scope: !18717)
!18722 = !DILocation(line: 504, column: 2, scope: !18717)
!18723 = distinct !DISubprogram(name: "__fswab16", scope: !12396, file: !12396, line: 48, type: !18724, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18724 = !DISubroutineType(types: !18725)
!18725 = !{!740, !740}
!18726 = !DILocalVariable(name: "val", arg: 1, scope: !18723, file: !12396, line: 48, type: !740)
!18727 = !DILocation(line: 48, column: 57, scope: !18723)
!18728 = !DILocation(line: 53, column: 9, scope: !18723)
!18729 = !DILocation(line: 53, column: 2, scope: !18723)
!18730 = distinct !DISubprogram(name: "queue_work", scope: !1724, file: !1724, line: 504, type: !18731, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18731 = !DISubroutineType(types: !18732)
!18732 = !{!299, !2573, !1733}
!18733 = !DILocalVariable(name: "wq", arg: 1, scope: !18730, file: !1724, line: 504, type: !2573)
!18734 = !DILocation(line: 504, column: 56, scope: !18730)
!18735 = !DILocalVariable(name: "work", arg: 2, scope: !18730, file: !1724, line: 505, type: !1733)
!18736 = !DILocation(line: 505, column: 30, scope: !18730)
!18737 = !DILocation(line: 507, column: 41, scope: !18730)
!18738 = !DILocation(line: 507, column: 45, scope: !18730)
!18739 = !DILocation(line: 507, column: 9, scope: !18730)
!18740 = !DILocation(line: 507, column: 2, scope: !18730)
!18741 = distinct !DISubprogram(name: "get_order", scope: !18742, file: !18742, line: 29, type: !18743, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18742 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!18743 = !DISubroutineType(types: !18744)
!18744 = !{!6, !130}
!18745 = !DILocalVariable(name: "x", arg: 1, scope: !18746, file: !18747, line: 366, type: !231)
!18746 = distinct !DISubprogram(name: "fls64", scope: !18747, file: !18747, line: 366, type: !18748, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18747 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!18748 = !DISubroutineType(types: !18749)
!18749 = !{!6, !231}
!18750 = !DILocation(line: 366, column: 40, scope: !18746, inlinedAt: !18751)
!18751 = distinct !DILocation(line: 46, column: 9, scope: !18741)
!18752 = !DILocalVariable(name: "bitpos", scope: !18746, file: !18747, line: 368, type: !6)
!18753 = !DILocation(line: 368, column: 6, scope: !18746, inlinedAt: !18751)
!18754 = !DILocalVariable(name: "size", arg: 1, scope: !18741, file: !18742, line: 29, type: !130)
!18755 = !DILocation(line: 29, column: 63, scope: !18741)
!18756 = !DILocation(line: 31, column: 27, scope: !18757)
!18757 = distinct !DILexicalBlock(scope: !18741, file: !18742, line: 31, column: 6)
!18758 = !DILocation(line: 31, column: 6, scope: !18757)
!18759 = !DILocation(line: 31, column: 6, scope: !18741)
!18760 = !DILocation(line: 32, column: 8, scope: !18761)
!18761 = distinct !DILexicalBlock(scope: !18762, file: !18742, line: 32, column: 7)
!18762 = distinct !DILexicalBlock(scope: !18757, file: !18742, line: 31, column: 34)
!18763 = !DILocation(line: 32, column: 7, scope: !18762)
!18764 = !DILocation(line: 33, column: 4, scope: !18761)
!18765 = !DILocation(line: 35, column: 7, scope: !18766)
!18766 = distinct !DILexicalBlock(scope: !18762, file: !18742, line: 35, column: 7)
!18767 = !DILocation(line: 35, column: 12, scope: !18766)
!18768 = !DILocation(line: 35, column: 7, scope: !18762)
!18769 = !DILocation(line: 36, column: 4, scope: !18766)
!18770 = !DILocation(line: 38, column: 10, scope: !18762)
!18771 = !DILocation(line: 38, column: 28, scope: !18762)
!18772 = !DILocation(line: 38, column: 41, scope: !18762)
!18773 = !DILocation(line: 38, column: 3, scope: !18762)
!18774 = !DILocation(line: 41, column: 6, scope: !18741)
!18775 = !DILocation(line: 42, column: 7, scope: !18741)
!18776 = !DILocation(line: 46, column: 15, scope: !18741)
!18777 = !DILocation(line: 374, column: 2, scope: !18746, inlinedAt: !18751)
!18778 = !DILocation(line: 376, column: 14, scope: !18746, inlinedAt: !18751)
!18779 = !{i32 457009}
!18780 = !DILocation(line: 377, column: 9, scope: !18746, inlinedAt: !18751)
!18781 = !DILocation(line: 377, column: 16, scope: !18746, inlinedAt: !18751)
!18782 = !DILocation(line: 46, column: 2, scope: !18741)
!18783 = !DILocation(line: 48, column: 1, scope: !18741)
!18784 = distinct !DISubprogram(name: "__ilog2_u64", scope: !18785, file: !18785, line: 30, type: !18786, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18785 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!18786 = !DISubroutineType(types: !18787)
!18787 = !{!6, !230}
!18788 = !DILocation(line: 366, column: 40, scope: !18746, inlinedAt: !18789)
!18789 = distinct !DILocation(line: 32, column: 9, scope: !18784)
!18790 = !DILocation(line: 368, column: 6, scope: !18746, inlinedAt: !18789)
!18791 = !DILocalVariable(name: "n", arg: 1, scope: !18784, file: !18785, line: 30, type: !230)
!18792 = !DILocation(line: 30, column: 21, scope: !18784)
!18793 = !DILocation(line: 32, column: 15, scope: !18784)
!18794 = !DILocation(line: 374, column: 2, scope: !18746, inlinedAt: !18789)
!18795 = !DILocation(line: 376, column: 14, scope: !18746, inlinedAt: !18789)
!18796 = !DILocation(line: 377, column: 9, scope: !18746, inlinedAt: !18789)
!18797 = !DILocation(line: 377, column: 16, scope: !18746, inlinedAt: !18789)
!18798 = !DILocation(line: 32, column: 18, scope: !18784)
!18799 = !DILocation(line: 32, column: 2, scope: !18784)
!18800 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !18801, file: !18801, line: 137, type: !18802, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18801 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!18802 = !DISubroutineType(types: !18803)
!18803 = !{!154, !980, !2449, !127, !623}
!18804 = !DILocalVariable(name: "s", arg: 1, scope: !18800, file: !18801, line: 137, type: !980)
!18805 = !DILocation(line: 137, column: 54, scope: !18800)
!18806 = !DILocalVariable(name: "object", arg: 2, scope: !18800, file: !18801, line: 137, type: !2449)
!18807 = !DILocation(line: 137, column: 69, scope: !18800)
!18808 = !DILocalVariable(name: "size", arg: 3, scope: !18800, file: !18801, line: 138, type: !127)
!18809 = !DILocation(line: 138, column: 12, scope: !18800)
!18810 = !DILocalVariable(name: "flags", arg: 4, scope: !18800, file: !18801, line: 138, type: !623)
!18811 = !DILocation(line: 138, column: 24, scope: !18800)
!18812 = !DILocation(line: 140, column: 17, scope: !18800)
!18813 = !DILocation(line: 140, column: 2, scope: !18800)
!18814 = distinct !DISubprogram(name: "kmalloc_array", scope: !11867, file: !11867, line: 584, type: !13942, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!18815 = !DILocation(line: 445, column: 72, scope: !13659, inlinedAt: !18816)
!18816 = distinct !DILocation(line: 552, column: 10, scope: !13664, inlinedAt: !18817)
!18817 = distinct !DILocation(line: 591, column: 10, scope: !18818)
!18818 = distinct !DILexicalBlock(scope: !18814, file: !11867, line: 590, column: 6)
!18819 = !DILocation(line: 446, column: 9, scope: !13659, inlinedAt: !18816)
!18820 = !DILocation(line: 446, column: 23, scope: !13659, inlinedAt: !18816)
!18821 = !DILocation(line: 448, column: 8, scope: !13659, inlinedAt: !18816)
!18822 = !DILocation(line: 318, column: 67, scope: !13675, inlinedAt: !18823)
!18823 = distinct !DILocation(line: 553, column: 20, scope: !13664, inlinedAt: !18817)
!18824 = !DILocation(line: 346, column: 58, scope: !13681, inlinedAt: !18825)
!18825 = distinct !DILocation(line: 547, column: 11, scope: !13664, inlinedAt: !18817)
!18826 = !DILocation(line: 472, column: 28, scope: !13687, inlinedAt: !18827)
!18827 = distinct !DILocation(line: 481, column: 9, scope: !13692, inlinedAt: !18828)
!18828 = distinct !DILocation(line: 545, column: 11, scope: !13694, inlinedAt: !18817)
!18829 = !DILocation(line: 472, column: 40, scope: !13687, inlinedAt: !18827)
!18830 = !DILocation(line: 472, column: 60, scope: !13687, inlinedAt: !18827)
!18831 = !DILocation(line: 478, column: 51, scope: !13692, inlinedAt: !18828)
!18832 = !DILocation(line: 478, column: 63, scope: !13692, inlinedAt: !18828)
!18833 = !DILocation(line: 480, column: 15, scope: !13692, inlinedAt: !18828)
!18834 = !DILocation(line: 538, column: 45, scope: !13666, inlinedAt: !18817)
!18835 = !DILocation(line: 538, column: 57, scope: !13666, inlinedAt: !18817)
!18836 = !DILocation(line: 542, column: 16, scope: !13664, inlinedAt: !18817)
!18837 = !DILocalVariable(name: "n", arg: 1, scope: !18814, file: !11867, line: 584, type: !127)
!18838 = !DILocation(line: 584, column: 42, scope: !18814)
!18839 = !DILocalVariable(name: "size", arg: 2, scope: !18814, file: !11867, line: 584, type: !127)
!18840 = !DILocation(line: 584, column: 52, scope: !18814)
!18841 = !DILocalVariable(name: "flags", arg: 3, scope: !18814, file: !11867, line: 584, type: !623)
!18842 = !DILocation(line: 584, column: 64, scope: !18814)
!18843 = !DILocalVariable(name: "bytes", scope: !18814, file: !11867, line: 586, type: !127)
!18844 = !DILocation(line: 586, column: 9, scope: !18814)
!18845 = !DILocalVariable(name: "__a", scope: !18846, file: !11867, line: 588, type: !127)
!18846 = distinct !DILexicalBlock(scope: !18847, file: !11867, line: 588, column: 6)
!18847 = distinct !DILexicalBlock(scope: !18814, file: !11867, line: 588, column: 6)
!18848 = !DILocation(line: 588, column: 6, scope: !18846)
!18849 = !DILocalVariable(name: "__b", scope: !18846, file: !11867, line: 588, type: !127)
!18850 = !DILocalVariable(name: "__d", scope: !18846, file: !11867, line: 588, type: !1769)
!18851 = !DILocation(line: 588, column: 6, scope: !18847)
!18852 = !DILocation(line: 588, column: 6, scope: !18814)
!18853 = !DILocation(line: 589, column: 3, scope: !18847)
!18854 = !DILocation(line: 590, column: 27, scope: !18818)
!18855 = !DILocation(line: 590, column: 6, scope: !18818)
!18856 = !DILocation(line: 590, column: 30, scope: !18818)
!18857 = !DILocation(line: 590, column: 54, scope: !18818)
!18858 = !DILocation(line: 590, column: 33, scope: !18818)
!18859 = !DILocation(line: 590, column: 6, scope: !18814)
!18860 = !DILocation(line: 591, column: 18, scope: !18818)
!18861 = !DILocation(line: 591, column: 25, scope: !18818)
!18862 = !DILocation(line: 540, column: 27, scope: !13665, inlinedAt: !18817)
!18863 = !DILocation(line: 540, column: 6, scope: !13665, inlinedAt: !18817)
!18864 = !DILocation(line: 540, column: 6, scope: !13666, inlinedAt: !18817)
!18865 = !DILocation(line: 544, column: 7, scope: !13694, inlinedAt: !18817)
!18866 = !DILocation(line: 544, column: 12, scope: !13694, inlinedAt: !18817)
!18867 = !DILocation(line: 544, column: 7, scope: !13664, inlinedAt: !18817)
!18868 = !DILocation(line: 545, column: 25, scope: !13694, inlinedAt: !18817)
!18869 = !DILocation(line: 545, column: 31, scope: !13694, inlinedAt: !18817)
!18870 = !DILocation(line: 480, column: 33, scope: !13692, inlinedAt: !18828)
!18871 = !DILocation(line: 480, column: 23, scope: !13692, inlinedAt: !18828)
!18872 = !DILocation(line: 481, column: 29, scope: !13692, inlinedAt: !18828)
!18873 = !DILocation(line: 481, column: 35, scope: !13692, inlinedAt: !18828)
!18874 = !DILocation(line: 481, column: 42, scope: !13692, inlinedAt: !18828)
!18875 = !DILocation(line: 474, column: 23, scope: !13687, inlinedAt: !18827)
!18876 = !DILocation(line: 474, column: 29, scope: !13687, inlinedAt: !18827)
!18877 = !DILocation(line: 474, column: 36, scope: !13687, inlinedAt: !18827)
!18878 = !DILocation(line: 474, column: 9, scope: !13687, inlinedAt: !18827)
!18879 = !DILocation(line: 545, column: 4, scope: !13694, inlinedAt: !18817)
!18880 = !DILocation(line: 547, column: 25, scope: !13664, inlinedAt: !18817)
!18881 = !DILocation(line: 348, column: 7, scope: !13738, inlinedAt: !18825)
!18882 = !DILocation(line: 348, column: 6, scope: !13681, inlinedAt: !18825)
!18883 = !DILocation(line: 349, column: 3, scope: !13738, inlinedAt: !18825)
!18884 = !DILocation(line: 351, column: 6, scope: !13742, inlinedAt: !18825)
!18885 = !DILocation(line: 351, column: 11, scope: !13742, inlinedAt: !18825)
!18886 = !DILocation(line: 351, column: 6, scope: !13681, inlinedAt: !18825)
!18887 = !DILocation(line: 352, column: 3, scope: !13742, inlinedAt: !18825)
!18888 = !DILocation(line: 354, column: 32, scope: !13747, inlinedAt: !18825)
!18889 = !DILocation(line: 354, column: 37, scope: !13747, inlinedAt: !18825)
!18890 = !DILocation(line: 354, column: 42, scope: !13747, inlinedAt: !18825)
!18891 = !DILocation(line: 354, column: 45, scope: !13747, inlinedAt: !18825)
!18892 = !DILocation(line: 354, column: 50, scope: !13747, inlinedAt: !18825)
!18893 = !DILocation(line: 354, column: 6, scope: !13681, inlinedAt: !18825)
!18894 = !DILocation(line: 355, column: 3, scope: !13747, inlinedAt: !18825)
!18895 = !DILocation(line: 356, column: 32, scope: !13755, inlinedAt: !18825)
!18896 = !DILocation(line: 356, column: 37, scope: !13755, inlinedAt: !18825)
!18897 = !DILocation(line: 356, column: 43, scope: !13755, inlinedAt: !18825)
!18898 = !DILocation(line: 356, column: 46, scope: !13755, inlinedAt: !18825)
!18899 = !DILocation(line: 356, column: 51, scope: !13755, inlinedAt: !18825)
!18900 = !DILocation(line: 356, column: 6, scope: !13681, inlinedAt: !18825)
!18901 = !DILocation(line: 357, column: 3, scope: !13755, inlinedAt: !18825)
!18902 = !DILocation(line: 358, column: 6, scope: !13763, inlinedAt: !18825)
!18903 = !DILocation(line: 358, column: 11, scope: !13763, inlinedAt: !18825)
!18904 = !DILocation(line: 358, column: 6, scope: !13681, inlinedAt: !18825)
!18905 = !DILocation(line: 358, column: 26, scope: !13763, inlinedAt: !18825)
!18906 = !DILocation(line: 359, column: 6, scope: !13768, inlinedAt: !18825)
!18907 = !DILocation(line: 359, column: 11, scope: !13768, inlinedAt: !18825)
!18908 = !DILocation(line: 359, column: 6, scope: !13681, inlinedAt: !18825)
!18909 = !DILocation(line: 359, column: 26, scope: !13768, inlinedAt: !18825)
!18910 = !DILocation(line: 360, column: 6, scope: !13773, inlinedAt: !18825)
!18911 = !DILocation(line: 360, column: 11, scope: !13773, inlinedAt: !18825)
!18912 = !DILocation(line: 360, column: 6, scope: !13681, inlinedAt: !18825)
!18913 = !DILocation(line: 360, column: 26, scope: !13773, inlinedAt: !18825)
!18914 = !DILocation(line: 361, column: 6, scope: !13778, inlinedAt: !18825)
!18915 = !DILocation(line: 361, column: 11, scope: !13778, inlinedAt: !18825)
!18916 = !DILocation(line: 361, column: 6, scope: !13681, inlinedAt: !18825)
!18917 = !DILocation(line: 361, column: 26, scope: !13778, inlinedAt: !18825)
!18918 = !DILocation(line: 362, column: 6, scope: !13783, inlinedAt: !18825)
!18919 = !DILocation(line: 362, column: 11, scope: !13783, inlinedAt: !18825)
!18920 = !DILocation(line: 362, column: 6, scope: !13681, inlinedAt: !18825)
!18921 = !DILocation(line: 362, column: 26, scope: !13783, inlinedAt: !18825)
!18922 = !DILocation(line: 363, column: 6, scope: !13788, inlinedAt: !18825)
!18923 = !DILocation(line: 363, column: 11, scope: !13788, inlinedAt: !18825)
!18924 = !DILocation(line: 363, column: 6, scope: !13681, inlinedAt: !18825)
!18925 = !DILocation(line: 363, column: 26, scope: !13788, inlinedAt: !18825)
!18926 = !DILocation(line: 364, column: 6, scope: !13793, inlinedAt: !18825)
!18927 = !DILocation(line: 364, column: 11, scope: !13793, inlinedAt: !18825)
!18928 = !DILocation(line: 364, column: 6, scope: !13681, inlinedAt: !18825)
!18929 = !DILocation(line: 364, column: 26, scope: !13793, inlinedAt: !18825)
!18930 = !DILocation(line: 365, column: 6, scope: !13798, inlinedAt: !18825)
!18931 = !DILocation(line: 365, column: 11, scope: !13798, inlinedAt: !18825)
!18932 = !DILocation(line: 365, column: 6, scope: !13681, inlinedAt: !18825)
!18933 = !DILocation(line: 365, column: 26, scope: !13798, inlinedAt: !18825)
!18934 = !DILocation(line: 366, column: 6, scope: !13803, inlinedAt: !18825)
!18935 = !DILocation(line: 366, column: 11, scope: !13803, inlinedAt: !18825)
!18936 = !DILocation(line: 366, column: 6, scope: !13681, inlinedAt: !18825)
!18937 = !DILocation(line: 366, column: 26, scope: !13803, inlinedAt: !18825)
!18938 = !DILocation(line: 367, column: 6, scope: !13808, inlinedAt: !18825)
!18939 = !DILocation(line: 367, column: 11, scope: !13808, inlinedAt: !18825)
!18940 = !DILocation(line: 367, column: 6, scope: !13681, inlinedAt: !18825)
!18941 = !DILocation(line: 367, column: 26, scope: !13808, inlinedAt: !18825)
!18942 = !DILocation(line: 368, column: 6, scope: !13813, inlinedAt: !18825)
!18943 = !DILocation(line: 368, column: 11, scope: !13813, inlinedAt: !18825)
!18944 = !DILocation(line: 368, column: 6, scope: !13681, inlinedAt: !18825)
!18945 = !DILocation(line: 368, column: 26, scope: !13813, inlinedAt: !18825)
!18946 = !DILocation(line: 369, column: 6, scope: !13818, inlinedAt: !18825)
!18947 = !DILocation(line: 369, column: 11, scope: !13818, inlinedAt: !18825)
!18948 = !DILocation(line: 369, column: 6, scope: !13681, inlinedAt: !18825)
!18949 = !DILocation(line: 369, column: 26, scope: !13818, inlinedAt: !18825)
!18950 = !DILocation(line: 370, column: 6, scope: !13823, inlinedAt: !18825)
!18951 = !DILocation(line: 370, column: 11, scope: !13823, inlinedAt: !18825)
!18952 = !DILocation(line: 370, column: 6, scope: !13681, inlinedAt: !18825)
!18953 = !DILocation(line: 370, column: 26, scope: !13823, inlinedAt: !18825)
!18954 = !DILocation(line: 371, column: 6, scope: !13828, inlinedAt: !18825)
!18955 = !DILocation(line: 371, column: 11, scope: !13828, inlinedAt: !18825)
!18956 = !DILocation(line: 371, column: 6, scope: !13681, inlinedAt: !18825)
!18957 = !DILocation(line: 371, column: 26, scope: !13828, inlinedAt: !18825)
!18958 = !DILocation(line: 372, column: 6, scope: !13833, inlinedAt: !18825)
!18959 = !DILocation(line: 372, column: 11, scope: !13833, inlinedAt: !18825)
!18960 = !DILocation(line: 372, column: 6, scope: !13681, inlinedAt: !18825)
!18961 = !DILocation(line: 372, column: 26, scope: !13833, inlinedAt: !18825)
!18962 = !DILocation(line: 373, column: 6, scope: !13838, inlinedAt: !18825)
!18963 = !DILocation(line: 373, column: 11, scope: !13838, inlinedAt: !18825)
!18964 = !DILocation(line: 373, column: 6, scope: !13681, inlinedAt: !18825)
!18965 = !DILocation(line: 373, column: 26, scope: !13838, inlinedAt: !18825)
!18966 = !DILocation(line: 374, column: 6, scope: !13843, inlinedAt: !18825)
!18967 = !DILocation(line: 374, column: 11, scope: !13843, inlinedAt: !18825)
!18968 = !DILocation(line: 374, column: 6, scope: !13681, inlinedAt: !18825)
!18969 = !DILocation(line: 374, column: 26, scope: !13843, inlinedAt: !18825)
!18970 = !DILocation(line: 375, column: 6, scope: !13848, inlinedAt: !18825)
!18971 = !DILocation(line: 375, column: 11, scope: !13848, inlinedAt: !18825)
!18972 = !DILocation(line: 375, column: 6, scope: !13681, inlinedAt: !18825)
!18973 = !DILocation(line: 375, column: 27, scope: !13848, inlinedAt: !18825)
!18974 = !DILocation(line: 376, column: 6, scope: !13853, inlinedAt: !18825)
!18975 = !DILocation(line: 376, column: 11, scope: !13853, inlinedAt: !18825)
!18976 = !DILocation(line: 376, column: 6, scope: !13681, inlinedAt: !18825)
!18977 = !DILocation(line: 376, column: 32, scope: !13853, inlinedAt: !18825)
!18978 = !DILocation(line: 377, column: 6, scope: !13858, inlinedAt: !18825)
!18979 = !DILocation(line: 377, column: 11, scope: !13858, inlinedAt: !18825)
!18980 = !DILocation(line: 377, column: 6, scope: !13681, inlinedAt: !18825)
!18981 = !DILocation(line: 377, column: 32, scope: !13858, inlinedAt: !18825)
!18982 = !DILocation(line: 378, column: 6, scope: !13863, inlinedAt: !18825)
!18983 = !DILocation(line: 378, column: 11, scope: !13863, inlinedAt: !18825)
!18984 = !DILocation(line: 378, column: 6, scope: !13681, inlinedAt: !18825)
!18985 = !DILocation(line: 378, column: 32, scope: !13863, inlinedAt: !18825)
!18986 = !DILocation(line: 379, column: 6, scope: !13868, inlinedAt: !18825)
!18987 = !DILocation(line: 379, column: 11, scope: !13868, inlinedAt: !18825)
!18988 = !DILocation(line: 379, column: 6, scope: !13681, inlinedAt: !18825)
!18989 = !DILocation(line: 379, column: 33, scope: !13868, inlinedAt: !18825)
!18990 = !DILocation(line: 380, column: 6, scope: !13873, inlinedAt: !18825)
!18991 = !DILocation(line: 380, column: 11, scope: !13873, inlinedAt: !18825)
!18992 = !DILocation(line: 380, column: 6, scope: !13681, inlinedAt: !18825)
!18993 = !DILocation(line: 380, column: 33, scope: !13873, inlinedAt: !18825)
!18994 = !DILocation(line: 381, column: 6, scope: !13878, inlinedAt: !18825)
!18995 = !DILocation(line: 381, column: 11, scope: !13878, inlinedAt: !18825)
!18996 = !DILocation(line: 381, column: 6, scope: !13681, inlinedAt: !18825)
!18997 = !DILocation(line: 381, column: 33, scope: !13878, inlinedAt: !18825)
!18998 = !DILocation(line: 382, column: 2, scope: !13883, inlinedAt: !18825)
!18999 = !DILocation(line: 382, column: 2, scope: !13887, inlinedAt: !18825)
!19000 = !DILocation(line: 382, column: 2, scope: !13888, inlinedAt: !18825)
!19001 = !DILocation(line: 386, column: 1, scope: !13681, inlinedAt: !18825)
!19002 = !DILocation(line: 547, column: 9, scope: !13664, inlinedAt: !18817)
!19003 = !DILocation(line: 549, column: 8, scope: !13894, inlinedAt: !18817)
!19004 = !DILocation(line: 549, column: 7, scope: !13664, inlinedAt: !18817)
!19005 = !DILocation(line: 550, column: 4, scope: !13894, inlinedAt: !18817)
!19006 = !DILocation(line: 553, column: 33, scope: !13664, inlinedAt: !18817)
!19007 = !DILocation(line: 325, column: 6, scope: !13899, inlinedAt: !18823)
!19008 = !DILocation(line: 325, column: 6, scope: !13675, inlinedAt: !18823)
!19009 = !DILocation(line: 326, column: 3, scope: !13899, inlinedAt: !18823)
!19010 = !DILocation(line: 332, column: 9, scope: !13675, inlinedAt: !18823)
!19011 = !DILocation(line: 332, column: 15, scope: !13675, inlinedAt: !18823)
!19012 = !DILocation(line: 332, column: 2, scope: !13675, inlinedAt: !18823)
!19013 = !DILocation(line: 336, column: 1, scope: !13675, inlinedAt: !18823)
!19014 = !DILocation(line: 553, column: 5, scope: !13664, inlinedAt: !18817)
!19015 = !DILocation(line: 553, column: 41, scope: !13664, inlinedAt: !18817)
!19016 = !DILocation(line: 554, column: 5, scope: !13664, inlinedAt: !18817)
!19017 = !DILocation(line: 554, column: 12, scope: !13664, inlinedAt: !18817)
!19018 = !DILocation(line: 448, column: 31, scope: !13659, inlinedAt: !18816)
!19019 = !DILocation(line: 448, column: 34, scope: !13659, inlinedAt: !18816)
!19020 = !DILocation(line: 448, column: 14, scope: !13659, inlinedAt: !18816)
!19021 = !DILocation(line: 450, column: 22, scope: !13659, inlinedAt: !18816)
!19022 = !DILocation(line: 450, column: 25, scope: !13659, inlinedAt: !18816)
!19023 = !DILocation(line: 450, column: 30, scope: !13659, inlinedAt: !18816)
!19024 = !DILocation(line: 450, column: 36, scope: !13659, inlinedAt: !18816)
!19025 = !DILocation(line: 450, column: 8, scope: !13659, inlinedAt: !18816)
!19026 = !DILocation(line: 450, column: 6, scope: !13659, inlinedAt: !18816)
!19027 = !DILocation(line: 451, column: 9, scope: !13659, inlinedAt: !18816)
!19028 = !DILocation(line: 552, column: 3, scope: !13664, inlinedAt: !18817)
!19029 = !DILocation(line: 557, column: 19, scope: !13666, inlinedAt: !18817)
!19030 = !DILocation(line: 557, column: 25, scope: !13666, inlinedAt: !18817)
!19031 = !DILocation(line: 557, column: 9, scope: !13666, inlinedAt: !18817)
!19032 = !DILocation(line: 557, column: 2, scope: !13666, inlinedAt: !18817)
!19033 = !DILocation(line: 558, column: 1, scope: !13666, inlinedAt: !18817)
!19034 = !DILocation(line: 591, column: 3, scope: !18818)
!19035 = !DILocation(line: 592, column: 19, scope: !18814)
!19036 = !DILocation(line: 592, column: 26, scope: !18814)
!19037 = !DILocation(line: 592, column: 9, scope: !18814)
!19038 = !DILocation(line: 592, column: 2, scope: !18814)
!19039 = !DILocation(line: 593, column: 1, scope: !18814)
!19040 = distinct !DISubprogram(name: "__must_check_overflow", scope: !19041, file: !19041, line: 52, type: !19042, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19041 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!19042 = !DISubroutineType(types: !19043)
!19043 = !{!299, !299}
!19044 = !DILocalVariable(name: "overflow", arg: 1, scope: !19040, file: !19041, line: 52, type: !299)
!19045 = !DILocation(line: 52, column: 60, scope: !19040)
!19046 = !DILocation(line: 54, column: 9, scope: !19040)
!19047 = !DILocation(line: 54, column: 2, scope: !19040)
!19048 = distinct !DISubprogram(name: "arch_atomic64_set", scope: !19049, file: !19049, line: 32, type: !13473, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19049 = !DIFile(filename: "./arch/x86/include/asm/atomic64_64.h", directory: "/home/lizy2001/genbc/linux")
!19050 = !DILocalVariable(name: "v", arg: 1, scope: !19048, file: !19049, line: 32, type: !13475)
!19051 = !DILocation(line: 32, column: 50, scope: !19048)
!19052 = !DILocalVariable(name: "i", arg: 2, scope: !19048, file: !19049, line: 32, type: !563)
!19053 = !DILocation(line: 32, column: 57, scope: !19048)
!19054 = !DILocation(line: 34, column: 2, scope: !19048)
!19055 = !DILocation(line: 34, column: 2, scope: !19056)
!19056 = distinct !DILexicalBlock(scope: !19048, file: !19049, line: 34, column: 2)
!19057 = !DILocation(line: 35, column: 1, scope: !19048)
!19058 = distinct !DISubprogram(name: "kasan_check_write", scope: !19059, file: !19059, line: 38, type: !19060, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19059 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!19060 = !DISubroutineType(types: !19061)
!19061 = !{!299, !13466, !194}
!19062 = !DILocalVariable(name: "p", arg: 1, scope: !19058, file: !19059, line: 38, type: !13466)
!19063 = !DILocation(line: 38, column: 59, scope: !19058)
!19064 = !DILocalVariable(name: "size", arg: 2, scope: !19058, file: !19059, line: 38, type: !194)
!19065 = !DILocation(line: 38, column: 75, scope: !19058)
!19066 = !DILocation(line: 40, column: 2, scope: !19058)
!19067 = distinct !DISubprogram(name: "kcsan_check_access", scope: !19068, file: !19068, line: 178, type: !19069, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19068 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!19069 = !DISubroutineType(types: !19070)
!19070 = !{null, !13466, !127, !6}
!19071 = !DILocalVariable(name: "ptr", arg: 1, scope: !19067, file: !19068, line: 178, type: !13466)
!19072 = !DILocation(line: 178, column: 60, scope: !19067)
!19073 = !DILocalVariable(name: "size", arg: 2, scope: !19067, file: !19068, line: 178, type: !127)
!19074 = !DILocation(line: 178, column: 72, scope: !19067)
!19075 = !DILocalVariable(name: "type", arg: 3, scope: !19067, file: !19068, line: 179, type: !6)
!19076 = !DILocation(line: 179, column: 15, scope: !19067)
!19077 = !DILocation(line: 179, column: 23, scope: !19067)
!19078 = distinct !DISubprogram(name: "xa_init_flags", scope: !619, file: !619, line: 374, type: !19079, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19079 = !DISubroutineType(types: !19080)
!19080 = !{null, !19081, !623}
!19081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!19082 = !DILocalVariable(name: "lock", arg: 1, scope: !19083, file: !19084, line: 327, type: !1111)
!19083 = distinct !DISubprogram(name: "spinlock_check", scope: !19084, file: !19084, line: 327, type: !19085, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19084 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!19085 = !DISubroutineType(types: !19086)
!19086 = !{!19087, !1111}
!19087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!19088 = !DILocation(line: 327, column: 67, scope: !19083, inlinedAt: !19089)
!19089 = distinct !DILocation(line: 376, column: 2, scope: !19090)
!19090 = distinct !DILexicalBlock(scope: !19078, file: !619, line: 376, column: 2)
!19091 = !DILocalVariable(name: "xa", arg: 1, scope: !19078, file: !619, line: 374, type: !19081)
!19092 = !DILocation(line: 374, column: 49, scope: !19078)
!19093 = !DILocalVariable(name: "flags", arg: 2, scope: !19078, file: !619, line: 374, type: !623)
!19094 = !DILocation(line: 374, column: 59, scope: !19078)
!19095 = !DILocation(line: 376, column: 2, scope: !19078)
!19096 = !DILocation(line: 376, column: 2, scope: !19090)
!19097 = !DILocation(line: 329, column: 10, scope: !19083, inlinedAt: !19089)
!19098 = !DILocation(line: 329, column: 16, scope: !19083, inlinedAt: !19089)
!19099 = !DILocation(line: 377, column: 17, scope: !19078)
!19100 = !DILocation(line: 377, column: 2, scope: !19078)
!19101 = !DILocation(line: 377, column: 6, scope: !19078)
!19102 = !DILocation(line: 377, column: 15, scope: !19078)
!19103 = !DILocation(line: 378, column: 2, scope: !19078)
!19104 = !DILocation(line: 378, column: 6, scope: !19078)
!19105 = !DILocation(line: 378, column: 14, scope: !19078)
!19106 = !DILocation(line: 379, column: 1, scope: !19078)
!19107 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !14385, file: !14385, line: 116, type: !14947, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19108 = !DILocalVariable(name: "addr", arg: 1, scope: !19107, file: !14385, line: 116, type: !4150)
!19109 = !DILocation(line: 116, column: 54, scope: !19107)
!19110 = !DILocalVariable(name: "a", scope: !19107, file: !14385, line: 119, type: !224)
!19111 = !DILocation(line: 119, column: 6, scope: !19107)
!19112 = !DILocation(line: 119, column: 24, scope: !19107)
!19113 = !DILocation(line: 119, column: 10, scope: !19107)
!19114 = !DILocation(line: 126, column: 16, scope: !19107)
!19115 = !DILocation(line: 126, column: 14, scope: !19107)
!19116 = !DILocation(line: 126, column: 9, scope: !19107)
!19117 = !DILocation(line: 126, column: 2, scope: !19107)
!19118 = distinct !DISubprogram(name: "node_guid_gen_from_mac", scope: !3, file: !3, line: 1158, type: !19119, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19119 = !DISubroutineType(types: !19120)
!19120 = !{null, !3567, !4150}
!19121 = !DILocalVariable(name: "node_guid", arg: 1, scope: !19118, file: !3, line: 1158, type: !3567)
!19122 = !DILocation(line: 1158, column: 41, scope: !19118)
!19123 = !DILocalVariable(name: "mac", arg: 2, scope: !19118, file: !3, line: 1158, type: !4150)
!19124 = !DILocation(line: 1158, column: 62, scope: !19118)
!19125 = !DILocation(line: 1160, column: 25, scope: !19118)
!19126 = !DILocation(line: 1160, column: 9, scope: !19118)
!19127 = !DILocation(line: 1160, column: 2, scope: !19118)
!19128 = !DILocation(line: 1160, column: 23, scope: !19118)
!19129 = !DILocation(line: 1161, column: 25, scope: !19118)
!19130 = !DILocation(line: 1161, column: 9, scope: !19118)
!19131 = !DILocation(line: 1161, column: 2, scope: !19118)
!19132 = !DILocation(line: 1161, column: 23, scope: !19118)
!19133 = !DILocation(line: 1162, column: 25, scope: !19118)
!19134 = !DILocation(line: 1162, column: 9, scope: !19118)
!19135 = !DILocation(line: 1162, column: 2, scope: !19118)
!19136 = !DILocation(line: 1162, column: 23, scope: !19118)
!19137 = !DILocation(line: 1163, column: 9, scope: !19118)
!19138 = !DILocation(line: 1163, column: 2, scope: !19118)
!19139 = !DILocation(line: 1163, column: 23, scope: !19118)
!19140 = !DILocation(line: 1164, column: 9, scope: !19118)
!19141 = !DILocation(line: 1164, column: 2, scope: !19118)
!19142 = !DILocation(line: 1164, column: 23, scope: !19118)
!19143 = !DILocation(line: 1165, column: 25, scope: !19118)
!19144 = !DILocation(line: 1165, column: 9, scope: !19118)
!19145 = !DILocation(line: 1165, column: 2, scope: !19118)
!19146 = !DILocation(line: 1165, column: 23, scope: !19118)
!19147 = !DILocation(line: 1166, column: 25, scope: !19118)
!19148 = !DILocation(line: 1166, column: 9, scope: !19118)
!19149 = !DILocation(line: 1166, column: 2, scope: !19118)
!19150 = !DILocation(line: 1166, column: 23, scope: !19118)
!19151 = !DILocation(line: 1167, column: 25, scope: !19118)
!19152 = !DILocation(line: 1167, column: 9, scope: !19118)
!19153 = !DILocation(line: 1167, column: 2, scope: !19118)
!19154 = !DILocation(line: 1167, column: 23, scope: !19118)
!19155 = !DILocation(line: 1168, column: 1, scope: !19118)
!19156 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !14385, file: !14385, line: 98, type: !14947, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19157 = !DILocalVariable(name: "addr", arg: 1, scope: !19156, file: !14385, line: 98, type: !4150)
!19158 = !DILocation(line: 98, column: 49, scope: !19156)
!19159 = !DILocation(line: 101, column: 25, scope: !19156)
!19160 = !DILocation(line: 101, column: 11, scope: !19156)
!19161 = !DILocation(line: 101, column: 49, scope: !19156)
!19162 = !DILocation(line: 101, column: 54, scope: !19156)
!19163 = !DILocation(line: 101, column: 34, scope: !19156)
!19164 = !DILocation(line: 101, column: 33, scope: !19156)
!19165 = !DILocation(line: 101, column: 31, scope: !19156)
!19166 = !DILocation(line: 101, column: 61, scope: !19156)
!19167 = !DILocation(line: 101, column: 2, scope: !19156)
!19168 = distinct !DISubprogram(name: "esw_update_vport_addr_list", scope: !3, file: !3, line: 727, type: !19169, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19169 = !DISubroutineType(types: !19170)
!19170 = !{null, !10791, !10958, !6}
!19171 = !DILocalVariable(name: "esw", arg: 1, scope: !19168, file: !3, line: 727, type: !10791)
!19172 = !DILocation(line: 727, column: 61, scope: !19168)
!19173 = !DILocalVariable(name: "vport", arg: 2, scope: !19168, file: !3, line: 728, type: !10958)
!19174 = !DILocation(line: 728, column: 31, scope: !19168)
!19175 = !DILocalVariable(name: "list_type", arg: 3, scope: !19168, file: !3, line: 728, type: !6)
!19176 = !DILocation(line: 728, column: 42, scope: !19168)
!19177 = !DILocalVariable(name: "is_uc", scope: !19168, file: !3, line: 730, type: !299)
!19178 = !DILocation(line: 730, column: 7, scope: !19168)
!19179 = !DILocation(line: 730, column: 15, scope: !19168)
!19180 = !DILocation(line: 730, column: 25, scope: !19168)
!19181 = !DILocalVariable(name: "mac_list", scope: !19168, file: !3, line: 731, type: !19182)
!19182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10953, size: 64)
!19183 = !DILocation(line: 731, column: 7, scope: !19168)
!19184 = !DILocalVariable(name: "node", scope: !19168, file: !3, line: 732, type: !12232)
!19185 = !DILocation(line: 732, column: 22, scope: !19168)
!19186 = !DILocalVariable(name: "addr", scope: !19168, file: !3, line: 733, type: !12233)
!19187 = !DILocation(line: 733, column: 21, scope: !19168)
!19188 = !DILocalVariable(name: "hash", scope: !19168, file: !3, line: 734, type: !6692)
!19189 = !DILocation(line: 734, column: 21, scope: !19168)
!19190 = !DILocalVariable(name: "tmp", scope: !19168, file: !3, line: 735, type: !449)
!19191 = !DILocation(line: 735, column: 21, scope: !19168)
!19192 = !DILocalVariable(name: "size", scope: !19168, file: !3, line: 736, type: !6)
!19193 = !DILocation(line: 736, column: 6, scope: !19168)
!19194 = !DILocalVariable(name: "err", scope: !19168, file: !3, line: 737, type: !6)
!19195 = !DILocation(line: 737, column: 6, scope: !19168)
!19196 = !DILocalVariable(name: "hi", scope: !19168, file: !3, line: 738, type: !6)
!19197 = !DILocation(line: 738, column: 6, scope: !19168)
!19198 = !DILocalVariable(name: "i", scope: !19168, file: !3, line: 739, type: !6)
!19199 = !DILocation(line: 739, column: 6, scope: !19168)
!19200 = !DILocation(line: 741, column: 9, scope: !19168)
!19201 = !DILocation(line: 741, column: 17, scope: !19168)
!19202 = !DILocation(line: 742, column: 10, scope: !19168)
!19203 = !DILocation(line: 741, column: 7, scope: !19168)
!19204 = !DILocation(line: 744, column: 21, scope: !19168)
!19205 = !DILocation(line: 744, column: 13, scope: !19168)
!19206 = !DILocation(line: 744, column: 11, scope: !19168)
!19207 = !DILocation(line: 745, column: 7, scope: !19208)
!19208 = distinct !DILexicalBlock(scope: !19168, file: !3, line: 745, column: 6)
!19209 = !DILocation(line: 745, column: 6, scope: !19168)
!19210 = !DILocation(line: 746, column: 3, scope: !19208)
!19211 = !DILocation(line: 748, column: 9, scope: !19168)
!19212 = !DILocation(line: 748, column: 17, scope: !19168)
!19213 = !DILocation(line: 748, column: 24, scope: !19168)
!19214 = !DILocation(line: 748, column: 34, scope: !19168)
!19215 = !DILocation(line: 748, column: 41, scope: !19168)
!19216 = !DILocation(line: 748, column: 7, scope: !19168)
!19217 = !DILocation(line: 750, column: 2, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19168, file: !3, line: 750, column: 2)
!19219 = !DILocation(line: 750, column: 2, scope: !19220)
!19220 = distinct !DILexicalBlock(scope: !19218, file: !3, line: 750, column: 2)
!19221 = !DILocalVariable(name: "____ptr", scope: !19222, file: !3, line: 750, type: !449)
!19222 = distinct !DILexicalBlock(scope: !19223, file: !3, line: 750, column: 2)
!19223 = distinct !DILexicalBlock(scope: !19220, file: !3, line: 750, column: 2)
!19224 = !DILocation(line: 750, column: 2, scope: !19222)
!19225 = !DILocalVariable(name: "__mptr", scope: !19226, file: !3, line: 750, type: !154)
!19226 = distinct !DILexicalBlock(scope: !19222, file: !3, line: 750, column: 2)
!19227 = !DILocation(line: 750, column: 2, scope: !19226)
!19228 = !DILocation(line: 750, column: 2, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19226, file: !3, line: 750, column: 2)
!19230 = !DILocation(line: 750, column: 2, scope: !19223)
!19231 = !DILocation(line: 750, column: 2, scope: !19232)
!19232 = distinct !DILexicalBlock(scope: !19223, file: !3, line: 750, column: 2)
!19233 = !DILocation(line: 750, column: 2, scope: !19234)
!19234 = distinct !DILexicalBlock(scope: !19232, file: !3, line: 750, column: 2)
!19235 = !DILocation(line: 0, scope: !19232)
!19236 = !DILocalVariable(name: "__mptr", scope: !19237, file: !3, line: 751, type: !154)
!19237 = distinct !DILexicalBlock(scope: !19238, file: !3, line: 751, column: 10)
!19238 = distinct !DILexicalBlock(scope: !19232, file: !3, line: 750, column: 44)
!19239 = !DILocation(line: 751, column: 10, scope: !19237)
!19240 = !DILocation(line: 751, column: 10, scope: !19241)
!19241 = distinct !DILexicalBlock(scope: !19237, file: !3, line: 751, column: 10)
!19242 = !DILocation(line: 751, column: 8, scope: !19238)
!19243 = !DILocation(line: 752, column: 3, scope: !19238)
!19244 = !DILocation(line: 752, column: 9, scope: !19238)
!19245 = !DILocation(line: 752, column: 16, scope: !19238)
!19246 = !DILocation(line: 753, column: 2, scope: !19238)
!19247 = !DILocalVariable(name: "____ptr", scope: !19248, file: !3, line: 750, type: !449)
!19248 = distinct !DILexicalBlock(scope: !19232, file: !3, line: 750, column: 2)
!19249 = !DILocation(line: 750, column: 2, scope: !19248)
!19250 = !DILocalVariable(name: "__mptr", scope: !19251, file: !3, line: 750, type: !154)
!19251 = distinct !DILexicalBlock(scope: !19248, file: !3, line: 750, column: 2)
!19252 = !DILocation(line: 750, column: 2, scope: !19251)
!19253 = !DILocation(line: 750, column: 2, scope: !19254)
!19254 = distinct !DILexicalBlock(scope: !19251, file: !3, line: 750, column: 2)
!19255 = distinct !{!19255, !19230, !19256}
!19256 = !DILocation(line: 753, column: 2, scope: !19223)
!19257 = distinct !{!19257, !19217, !19258}
!19258 = !DILocation(line: 753, column: 2, scope: !19218)
!19259 = !DILocation(line: 755, column: 7, scope: !19260)
!19260 = distinct !DILexicalBlock(scope: !19168, file: !3, line: 755, column: 6)
!19261 = !DILocation(line: 755, column: 14, scope: !19260)
!19262 = !DILocation(line: 755, column: 6, scope: !19168)
!19263 = !DILocation(line: 756, column: 3, scope: !19260)
!19264 = !DILocation(line: 758, column: 38, scope: !19168)
!19265 = !DILocation(line: 758, column: 43, scope: !19168)
!19266 = !DILocation(line: 758, column: 48, scope: !19168)
!19267 = !DILocation(line: 758, column: 55, scope: !19168)
!19268 = !DILocation(line: 758, column: 62, scope: !19168)
!19269 = !DILocation(line: 759, column: 10, scope: !19168)
!19270 = !DILocation(line: 758, column: 8, scope: !19168)
!19271 = !DILocation(line: 758, column: 6, scope: !19168)
!19272 = !DILocation(line: 760, column: 6, scope: !19273)
!19273 = distinct !DILexicalBlock(scope: !19168, file: !3, line: 760, column: 6)
!19274 = !DILocation(line: 760, column: 6, scope: !19168)
!19275 = !DILocation(line: 761, column: 3, scope: !19273)
!19276 = !DILocation(line: 762, column: 2, scope: !19168)
!19277 = !DILocation(line: 762, column: 2, scope: !19278)
!19278 = distinct !DILexicalBlock(scope: !19279, file: !3, line: 762, column: 2)
!19279 = distinct !DILexicalBlock(scope: !19168, file: !3, line: 762, column: 2)
!19280 = !DILocation(line: 762, column: 2, scope: !19279)
!19281 = !DILocation(line: 765, column: 9, scope: !19282)
!19282 = distinct !DILexicalBlock(scope: !19168, file: !3, line: 765, column: 2)
!19283 = !DILocation(line: 765, column: 7, scope: !19282)
!19284 = !DILocation(line: 765, column: 14, scope: !19285)
!19285 = distinct !DILexicalBlock(scope: !19282, file: !3, line: 765, column: 2)
!19286 = !DILocation(line: 765, column: 18, scope: !19285)
!19287 = !DILocation(line: 765, column: 16, scope: !19285)
!19288 = !DILocation(line: 765, column: 2, scope: !19282)
!19289 = !DILocation(line: 766, column: 7, scope: !19290)
!19290 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 766, column: 7)
!19291 = distinct !DILexicalBlock(scope: !19285, file: !3, line: 765, column: 29)
!19292 = !DILocation(line: 766, column: 13, scope: !19290)
!19293 = !DILocation(line: 766, column: 37, scope: !19290)
!19294 = !DILocation(line: 766, column: 46, scope: !19290)
!19295 = !DILocation(line: 766, column: 17, scope: !19290)
!19296 = !DILocation(line: 766, column: 7, scope: !19291)
!19297 = !DILocation(line: 767, column: 4, scope: !19290)
!19298 = !DILocation(line: 769, column: 8, scope: !19299)
!19299 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 769, column: 7)
!19300 = !DILocation(line: 769, column: 14, scope: !19299)
!19301 = !DILocation(line: 769, column: 42, scope: !19299)
!19302 = !DILocation(line: 769, column: 51, scope: !19299)
!19303 = !DILocation(line: 769, column: 18, scope: !19299)
!19304 = !DILocation(line: 769, column: 7, scope: !19291)
!19305 = !DILocation(line: 770, column: 4, scope: !19299)
!19306 = !DILocalVariable(name: "ix", scope: !19307, file: !3, line: 772, type: !6)
!19307 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 772, column: 10)
!19308 = !DILocation(line: 772, column: 10, scope: !19307)
!19309 = !DILocalVariable(name: "found", scope: !19307, file: !3, line: 772, type: !299)
!19310 = !DILocalVariable(name: "ptr", scope: !19307, file: !3, line: 772, type: !12233)
!19311 = !DILocalVariable(name: "____ptr", scope: !19312, file: !3, line: 772, type: !449)
!19312 = distinct !DILexicalBlock(scope: !19313, file: !3, line: 772, column: 10)
!19313 = distinct !DILexicalBlock(scope: !19307, file: !3, line: 772, column: 10)
!19314 = !DILocation(line: 772, column: 10, scope: !19312)
!19315 = !DILocalVariable(name: "__mptr", scope: !19316, file: !3, line: 772, type: !154)
!19316 = distinct !DILexicalBlock(scope: !19312, file: !3, line: 772, column: 10)
!19317 = !DILocation(line: 772, column: 10, scope: !19316)
!19318 = !DILocation(line: 772, column: 10, scope: !19319)
!19319 = distinct !DILexicalBlock(scope: !19316, file: !3, line: 772, column: 10)
!19320 = !DILocation(line: 772, column: 10, scope: !19313)
!19321 = !DILocation(line: 772, column: 10, scope: !19322)
!19322 = distinct !DILexicalBlock(scope: !19313, file: !3, line: 772, column: 10)
!19323 = !DILocation(line: 772, column: 10, scope: !19324)
!19324 = distinct !DILexicalBlock(scope: !19322, file: !3, line: 772, column: 10)
!19325 = !DILocation(line: 772, column: 10, scope: !19326)
!19326 = distinct !DILexicalBlock(scope: !19324, file: !3, line: 772, column: 10)
!19327 = !DILocalVariable(name: "____ptr", scope: !19328, file: !3, line: 772, type: !449)
!19328 = distinct !DILexicalBlock(scope: !19322, file: !3, line: 772, column: 10)
!19329 = !DILocation(line: 772, column: 10, scope: !19328)
!19330 = !DILocalVariable(name: "__mptr", scope: !19331, file: !3, line: 772, type: !154)
!19331 = distinct !DILexicalBlock(scope: !19328, file: !3, line: 772, column: 10)
!19332 = !DILocation(line: 772, column: 10, scope: !19331)
!19333 = !DILocation(line: 772, column: 10, scope: !19334)
!19334 = distinct !DILexicalBlock(scope: !19331, file: !3, line: 772, column: 10)
!19335 = distinct !{!19335, !19320, !19320}
!19336 = !DILocation(line: 772, column: 10, scope: !19337)
!19337 = distinct !DILexicalBlock(scope: !19307, file: !3, line: 772, column: 10)
!19338 = !DILocation(line: 772, column: 8, scope: !19291)
!19339 = !DILocation(line: 773, column: 7, scope: !19340)
!19340 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 773, column: 7)
!19341 = !DILocation(line: 773, column: 7, scope: !19291)
!19342 = !DILocation(line: 774, column: 4, scope: !19343)
!19343 = distinct !DILexicalBlock(scope: !19340, file: !3, line: 773, column: 13)
!19344 = !DILocation(line: 774, column: 10, scope: !19343)
!19345 = !DILocation(line: 774, column: 17, scope: !19343)
!19346 = !DILocation(line: 779, column: 8, scope: !19347)
!19347 = distinct !DILexicalBlock(scope: !19343, file: !3, line: 779, column: 8)
!19348 = !DILocation(line: 779, column: 14, scope: !19347)
!19349 = !DILocation(line: 779, column: 8, scope: !19343)
!19350 = !DILocalVariable(name: "esw_mc", scope: !19351, file: !3, line: 780, type: !12242)
!19351 = distinct !DILexicalBlock(scope: !19347, file: !3, line: 779, column: 26)
!19352 = !DILocation(line: 780, column: 25, scope: !19351)
!19353 = !DILocalVariable(name: "ix", scope: !19354, file: !3, line: 781, type: !6)
!19354 = distinct !DILexicalBlock(scope: !19351, file: !3, line: 781, column: 6)
!19355 = !DILocation(line: 781, column: 6, scope: !19354)
!19356 = !DILocalVariable(name: "found", scope: !19354, file: !3, line: 781, type: !299)
!19357 = !DILocalVariable(name: "ptr", scope: !19354, file: !3, line: 781, type: !12242)
!19358 = !DILocalVariable(name: "____ptr", scope: !19359, file: !3, line: 781, type: !449)
!19359 = distinct !DILexicalBlock(scope: !19360, file: !3, line: 781, column: 6)
!19360 = distinct !DILexicalBlock(scope: !19354, file: !3, line: 781, column: 6)
!19361 = !DILocation(line: 781, column: 6, scope: !19359)
!19362 = !DILocalVariable(name: "__mptr", scope: !19363, file: !3, line: 781, type: !154)
!19363 = distinct !DILexicalBlock(scope: !19359, file: !3, line: 781, column: 6)
!19364 = !DILocation(line: 781, column: 6, scope: !19363)
!19365 = !DILocation(line: 781, column: 6, scope: !19366)
!19366 = distinct !DILexicalBlock(scope: !19363, file: !3, line: 781, column: 6)
!19367 = !DILocation(line: 781, column: 6, scope: !19360)
!19368 = !DILocation(line: 781, column: 6, scope: !19369)
!19369 = distinct !DILexicalBlock(scope: !19360, file: !3, line: 781, column: 6)
!19370 = !DILocation(line: 781, column: 6, scope: !19371)
!19371 = distinct !DILexicalBlock(scope: !19369, file: !3, line: 781, column: 6)
!19372 = !DILocation(line: 781, column: 6, scope: !19373)
!19373 = distinct !DILexicalBlock(scope: !19371, file: !3, line: 781, column: 6)
!19374 = !DILocalVariable(name: "____ptr", scope: !19375, file: !3, line: 781, type: !449)
!19375 = distinct !DILexicalBlock(scope: !19369, file: !3, line: 781, column: 6)
!19376 = !DILocation(line: 781, column: 6, scope: !19375)
!19377 = !DILocalVariable(name: "__mptr", scope: !19378, file: !3, line: 781, type: !154)
!19378 = distinct !DILexicalBlock(scope: !19375, file: !3, line: 781, column: 6)
!19379 = !DILocation(line: 781, column: 6, scope: !19378)
!19380 = !DILocation(line: 781, column: 6, scope: !19381)
!19381 = distinct !DILexicalBlock(scope: !19378, file: !3, line: 781, column: 6)
!19382 = distinct !{!19382, !19367, !19367}
!19383 = !DILocation(line: 781, column: 6, scope: !19384)
!19384 = distinct !DILexicalBlock(scope: !19354, file: !3, line: 781, column: 6)
!19385 = !DILocation(line: 784, column: 10, scope: !19386)
!19386 = distinct !DILexicalBlock(scope: !19351, file: !3, line: 784, column: 9)
!19387 = !DILocation(line: 784, column: 9, scope: !19351)
!19388 = !DILocation(line: 785, column: 6, scope: !19389)
!19389 = distinct !DILexicalBlock(scope: !19386, file: !3, line: 784, column: 18)
!19390 = !DILocation(line: 788, column: 6, scope: !19389)
!19391 = !DILocation(line: 790, column: 5, scope: !19351)
!19392 = !DILocation(line: 790, column: 13, scope: !19351)
!19393 = !DILocation(line: 790, column: 19, scope: !19351)
!19394 = !DILocation(line: 791, column: 5, scope: !19351)
!19395 = !DILocation(line: 791, column: 11, scope: !19351)
!19396 = !DILocation(line: 791, column: 22, scope: !19351)
!19397 = !DILocation(line: 792, column: 4, scope: !19351)
!19398 = !DILocation(line: 793, column: 4, scope: !19343)
!19399 = !DILocalVariable(name: "ix", scope: !19400, file: !3, line: 796, type: !6)
!19400 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 796, column: 10)
!19401 = !DILocation(line: 796, column: 10, scope: !19400)
!19402 = !DILocalVariable(name: "ptr", scope: !19400, file: !3, line: 796, type: !12233)
!19403 = !DILocation(line: 796, column: 10, scope: !19404)
!19404 = distinct !DILexicalBlock(scope: !19400, file: !3, line: 796, column: 10)
!19405 = !DILocation(line: 796, column: 10, scope: !19406)
!19406 = distinct !DILexicalBlock(scope: !19404, file: !3, line: 796, column: 10)
!19407 = !DILocation(line: 796, column: 8, scope: !19291)
!19408 = !DILocation(line: 798, column: 8, scope: !19409)
!19409 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 798, column: 7)
!19410 = !DILocation(line: 798, column: 7, scope: !19291)
!19411 = !DILocation(line: 799, column: 4, scope: !19412)
!19412 = distinct !DILexicalBlock(scope: !19409, file: !3, line: 798, column: 14)
!19413 = !DILocation(line: 802, column: 4, scope: !19412)
!19414 = !DILocation(line: 804, column: 17, scope: !19291)
!19415 = !DILocation(line: 804, column: 24, scope: !19291)
!19416 = !DILocation(line: 804, column: 3, scope: !19291)
!19417 = !DILocation(line: 804, column: 9, scope: !19291)
!19418 = !DILocation(line: 804, column: 15, scope: !19291)
!19419 = !DILocation(line: 805, column: 3, scope: !19291)
!19420 = !DILocation(line: 805, column: 9, scope: !19291)
!19421 = !DILocation(line: 805, column: 16, scope: !19291)
!19422 = !DILocation(line: 806, column: 2, scope: !19291)
!19423 = !DILocation(line: 765, column: 25, scope: !19285)
!19424 = !DILocation(line: 765, column: 2, scope: !19285)
!19425 = distinct !{!19425, !19288, !19426}
!19426 = !DILocation(line: 806, column: 2, scope: !19282)
!19427 = !DILabel(scope: !19168, name: "out", file: !3, line: 807)
!19428 = !DILocation(line: 807, column: 1, scope: !19168)
!19429 = !DILocation(line: 808, column: 8, scope: !19168)
!19430 = !DILocation(line: 808, column: 2, scope: !19168)
!19431 = !DILocation(line: 809, column: 1, scope: !19168)
!19432 = distinct !DISubprogram(name: "esw_apply_vport_addr_list", scope: !3, file: !3, line: 693, type: !19169, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19433 = !DILocalVariable(name: "esw", arg: 1, scope: !19432, file: !3, line: 693, type: !10791)
!19434 = !DILocation(line: 693, column: 60, scope: !19432)
!19435 = !DILocalVariable(name: "vport", arg: 2, scope: !19432, file: !3, line: 694, type: !10958)
!19436 = !DILocation(line: 694, column: 30, scope: !19432)
!19437 = !DILocalVariable(name: "list_type", arg: 3, scope: !19432, file: !3, line: 694, type: !6)
!19438 = !DILocation(line: 694, column: 41, scope: !19432)
!19439 = !DILocalVariable(name: "is_uc", scope: !19432, file: !3, line: 696, type: !299)
!19440 = !DILocation(line: 696, column: 7, scope: !19432)
!19441 = !DILocation(line: 696, column: 15, scope: !19432)
!19442 = !DILocation(line: 696, column: 25, scope: !19432)
!19443 = !DILocalVariable(name: "vport_addr_add", scope: !19432, file: !3, line: 697, type: !19444)
!19444 = !DIDerivedType(tag: DW_TAG_typedef, name: "vport_addr_action", file: !3, line: 500, baseType: !19445)
!19445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19446, size: 64)
!19446 = !DISubroutineType(types: !19447)
!19447 = !{!6, !10791, !12233}
!19448 = !DILocation(line: 697, column: 20, scope: !19432)
!19449 = !DILocalVariable(name: "vport_addr_del", scope: !19432, file: !3, line: 698, type: !19444)
!19450 = !DILocation(line: 698, column: 20, scope: !19432)
!19451 = !DILocalVariable(name: "addr", scope: !19432, file: !3, line: 699, type: !12233)
!19452 = !DILocation(line: 699, column: 21, scope: !19432)
!19453 = !DILocalVariable(name: "node", scope: !19432, file: !3, line: 700, type: !12232)
!19454 = !DILocation(line: 700, column: 22, scope: !19432)
!19455 = !DILocalVariable(name: "hash", scope: !19432, file: !3, line: 701, type: !6692)
!19456 = !DILocation(line: 701, column: 21, scope: !19432)
!19457 = !DILocalVariable(name: "tmp", scope: !19432, file: !3, line: 702, type: !449)
!19458 = !DILocation(line: 702, column: 21, scope: !19432)
!19459 = !DILocalVariable(name: "hi", scope: !19432, file: !3, line: 703, type: !6)
!19460 = !DILocation(line: 703, column: 6, scope: !19432)
!19461 = !DILocation(line: 705, column: 19, scope: !19432)
!19462 = !DILocation(line: 705, column: 17, scope: !19432)
!19463 = !DILocation(line: 707, column: 19, scope: !19432)
!19464 = !DILocation(line: 707, column: 17, scope: !19432)
!19465 = !DILocation(line: 710, column: 9, scope: !19432)
!19466 = !DILocation(line: 710, column: 17, scope: !19432)
!19467 = !DILocation(line: 710, column: 24, scope: !19432)
!19468 = !DILocation(line: 710, column: 34, scope: !19432)
!19469 = !DILocation(line: 710, column: 41, scope: !19432)
!19470 = !DILocation(line: 710, column: 7, scope: !19432)
!19471 = !DILocation(line: 711, column: 2, scope: !19472)
!19472 = distinct !DILexicalBlock(scope: !19432, file: !3, line: 711, column: 2)
!19473 = !DILocation(line: 711, column: 2, scope: !19474)
!19474 = distinct !DILexicalBlock(scope: !19472, file: !3, line: 711, column: 2)
!19475 = !DILocalVariable(name: "____ptr", scope: !19476, file: !3, line: 711, type: !449)
!19476 = distinct !DILexicalBlock(scope: !19477, file: !3, line: 711, column: 2)
!19477 = distinct !DILexicalBlock(scope: !19474, file: !3, line: 711, column: 2)
!19478 = !DILocation(line: 711, column: 2, scope: !19476)
!19479 = !DILocalVariable(name: "__mptr", scope: !19480, file: !3, line: 711, type: !154)
!19480 = distinct !DILexicalBlock(scope: !19476, file: !3, line: 711, column: 2)
!19481 = !DILocation(line: 711, column: 2, scope: !19480)
!19482 = !DILocation(line: 711, column: 2, scope: !19483)
!19483 = distinct !DILexicalBlock(scope: !19480, file: !3, line: 711, column: 2)
!19484 = !DILocation(line: 711, column: 2, scope: !19477)
!19485 = !DILocation(line: 711, column: 2, scope: !19486)
!19486 = distinct !DILexicalBlock(scope: !19477, file: !3, line: 711, column: 2)
!19487 = !DILocation(line: 711, column: 2, scope: !19488)
!19488 = distinct !DILexicalBlock(scope: !19486, file: !3, line: 711, column: 2)
!19489 = !DILocation(line: 0, scope: !19486)
!19490 = !DILocalVariable(name: "__mptr", scope: !19491, file: !3, line: 712, type: !154)
!19491 = distinct !DILexicalBlock(scope: !19492, file: !3, line: 712, column: 10)
!19492 = distinct !DILexicalBlock(scope: !19486, file: !3, line: 711, column: 44)
!19493 = !DILocation(line: 712, column: 10, scope: !19491)
!19494 = !DILocation(line: 712, column: 10, scope: !19495)
!19495 = distinct !DILexicalBlock(scope: !19491, file: !3, line: 712, column: 10)
!19496 = !DILocation(line: 712, column: 8, scope: !19492)
!19497 = !DILocation(line: 713, column: 11, scope: !19492)
!19498 = !DILocation(line: 713, column: 17, scope: !19492)
!19499 = !DILocation(line: 713, column: 3, scope: !19492)
!19500 = !DILocation(line: 715, column: 4, scope: !19501)
!19501 = distinct !DILexicalBlock(scope: !19492, file: !3, line: 713, column: 25)
!19502 = !DILocation(line: 715, column: 19, scope: !19501)
!19503 = !DILocation(line: 715, column: 24, scope: !19501)
!19504 = !DILocation(line: 716, column: 4, scope: !19501)
!19505 = !DILocation(line: 716, column: 10, scope: !19501)
!19506 = !DILocation(line: 716, column: 17, scope: !19501)
!19507 = !DILocation(line: 717, column: 4, scope: !19501)
!19508 = !DILocation(line: 719, column: 4, scope: !19501)
!19509 = !DILocation(line: 719, column: 19, scope: !19501)
!19510 = !DILocation(line: 719, column: 24, scope: !19501)
!19511 = !DILocation(line: 720, column: 4, scope: !19512)
!19512 = distinct !DILexicalBlock(scope: !19501, file: !3, line: 720, column: 4)
!19513 = !DILocation(line: 721, column: 4, scope: !19501)
!19514 = !DILocation(line: 723, column: 2, scope: !19492)
!19515 = !DILocalVariable(name: "____ptr", scope: !19516, file: !3, line: 711, type: !449)
!19516 = distinct !DILexicalBlock(scope: !19486, file: !3, line: 711, column: 2)
!19517 = !DILocation(line: 711, column: 2, scope: !19516)
!19518 = !DILocalVariable(name: "__mptr", scope: !19519, file: !3, line: 711, type: !154)
!19519 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 711, column: 2)
!19520 = !DILocation(line: 711, column: 2, scope: !19519)
!19521 = !DILocation(line: 711, column: 2, scope: !19522)
!19522 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 711, column: 2)
!19523 = distinct !{!19523, !19484, !19524}
!19524 = !DILocation(line: 723, column: 2, scope: !19477)
!19525 = distinct !{!19525, !19471, !19526}
!19526 = !DILocation(line: 723, column: 2, scope: !19472)
!19527 = !DILocation(line: 724, column: 1, scope: !19432)
!19528 = distinct !DISubprogram(name: "esw_update_vport_rx_mode", scope: !3, file: !3, line: 892, type: !17895, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19529 = !DILocalVariable(name: "esw", arg: 1, scope: !19528, file: !3, line: 892, type: !10791)
!19530 = !DILocation(line: 892, column: 59, scope: !19528)
!19531 = !DILocalVariable(name: "vport", arg: 2, scope: !19528, file: !3, line: 893, type: !10958)
!19532 = !DILocation(line: 893, column: 29, scope: !19528)
!19533 = !DILocalVariable(name: "promisc_all", scope: !19528, file: !3, line: 895, type: !6)
!19534 = !DILocation(line: 895, column: 6, scope: !19528)
!19535 = !DILocalVariable(name: "promisc_uc", scope: !19528, file: !3, line: 896, type: !6)
!19536 = !DILocation(line: 896, column: 6, scope: !19528)
!19537 = !DILocalVariable(name: "promisc_mc", scope: !19528, file: !3, line: 897, type: !6)
!19538 = !DILocation(line: 897, column: 6, scope: !19528)
!19539 = !DILocalVariable(name: "err", scope: !19528, file: !3, line: 898, type: !6)
!19540 = !DILocation(line: 898, column: 6, scope: !19528)
!19541 = !DILocation(line: 900, column: 37, scope: !19528)
!19542 = !DILocation(line: 900, column: 42, scope: !19528)
!19543 = !DILocation(line: 901, column: 9, scope: !19528)
!19544 = !DILocation(line: 901, column: 16, scope: !19528)
!19545 = !DILocation(line: 900, column: 8, scope: !19528)
!19546 = !DILocation(line: 900, column: 6, scope: !19528)
!19547 = !DILocation(line: 905, column: 6, scope: !19548)
!19548 = distinct !DILexicalBlock(scope: !19528, file: !3, line: 905, column: 6)
!19549 = !DILocation(line: 905, column: 6, scope: !19528)
!19550 = !DILocation(line: 906, column: 3, scope: !19548)
!19551 = !DILocation(line: 907, column: 2, scope: !19528)
!19552 = !DILocation(line: 907, column: 2, scope: !19553)
!19553 = distinct !DILexicalBlock(scope: !19554, file: !3, line: 907, column: 2)
!19554 = distinct !DILexicalBlock(scope: !19528, file: !3, line: 907, column: 2)
!19555 = !DILocation(line: 907, column: 2, scope: !19554)
!19556 = !DILocation(line: 910, column: 7, scope: !19557)
!19557 = distinct !DILexicalBlock(scope: !19528, file: !3, line: 910, column: 6)
!19558 = !DILocation(line: 910, column: 14, scope: !19557)
!19559 = !DILocation(line: 910, column: 19, scope: !19557)
!19560 = !DILocation(line: 910, column: 27, scope: !19557)
!19561 = !DILocation(line: 910, column: 31, scope: !19557)
!19562 = !DILocation(line: 910, column: 38, scope: !19557)
!19563 = !DILocation(line: 910, column: 6, scope: !19528)
!19564 = !DILocation(line: 911, column: 14, scope: !19565)
!19565 = distinct !DILexicalBlock(scope: !19557, file: !3, line: 910, column: 47)
!19566 = !DILocation(line: 912, column: 14, scope: !19565)
!19567 = !DILocation(line: 913, column: 15, scope: !19565)
!19568 = !DILocation(line: 914, column: 2, scope: !19565)
!19569 = !DILocation(line: 916, column: 26, scope: !19528)
!19570 = !DILocation(line: 916, column: 31, scope: !19528)
!19571 = !DILocation(line: 916, column: 38, scope: !19528)
!19572 = !DILocation(line: 917, column: 6, scope: !19528)
!19573 = !DILocation(line: 917, column: 18, scope: !19528)
!19574 = !DILocation(line: 917, column: 21, scope: !19528)
!19575 = !DILocation(line: 916, column: 2, scope: !19528)
!19576 = !DILocation(line: 918, column: 1, scope: !19528)
!19577 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !12347, file: !12347, line: 39, type: !14162, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19578 = !DILocalVariable(name: "ptr", arg: 1, scope: !19577, file: !12347, line: 39, type: !2449)
!19579 = !DILocation(line: 39, column: 68, scope: !19577)
!19580 = !DILocation(line: 41, column: 9, scope: !19577)
!19581 = !DILocation(line: 41, column: 24, scope: !19577)
!19582 = !DILocation(line: 41, column: 27, scope: !19577)
!19583 = !DILocation(line: 41, column: 2, scope: !19577)
!19584 = distinct !DISubprogram(name: "esw_update_vport_mc_promisc", scope: !3, file: !3, line: 814, type: !17895, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19585 = !DILocalVariable(name: "esw", arg: 1, scope: !19584, file: !3, line: 814, type: !10791)
!19586 = !DILocation(line: 814, column: 62, scope: !19584)
!19587 = !DILocalVariable(name: "vport", arg: 2, scope: !19584, file: !3, line: 815, type: !10958)
!19588 = !DILocation(line: 815, column: 25, scope: !19584)
!19589 = !DILocalVariable(name: "node", scope: !19584, file: !3, line: 817, type: !12232)
!19590 = !DILocation(line: 817, column: 22, scope: !19584)
!19591 = !DILocalVariable(name: "addr", scope: !19584, file: !3, line: 818, type: !12233)
!19592 = !DILocation(line: 818, column: 21, scope: !19584)
!19593 = !DILocalVariable(name: "hash", scope: !19584, file: !3, line: 819, type: !6692)
!19594 = !DILocation(line: 819, column: 21, scope: !19584)
!19595 = !DILocalVariable(name: "tmp", scope: !19584, file: !3, line: 820, type: !449)
!19596 = !DILocation(line: 820, column: 21, scope: !19584)
!19597 = !DILocalVariable(name: "hi", scope: !19584, file: !3, line: 821, type: !6)
!19598 = !DILocation(line: 821, column: 6, scope: !19584)
!19599 = !DILocation(line: 823, column: 9, scope: !19584)
!19600 = !DILocation(line: 823, column: 16, scope: !19584)
!19601 = !DILocation(line: 823, column: 7, scope: !19584)
!19602 = !DILocation(line: 825, column: 2, scope: !19603)
!19603 = distinct !DILexicalBlock(scope: !19584, file: !3, line: 825, column: 2)
!19604 = !DILocation(line: 825, column: 2, scope: !19605)
!19605 = distinct !DILexicalBlock(scope: !19603, file: !3, line: 825, column: 2)
!19606 = !DILocalVariable(name: "____ptr", scope: !19607, file: !3, line: 825, type: !449)
!19607 = distinct !DILexicalBlock(scope: !19608, file: !3, line: 825, column: 2)
!19608 = distinct !DILexicalBlock(scope: !19605, file: !3, line: 825, column: 2)
!19609 = !DILocation(line: 825, column: 2, scope: !19607)
!19610 = !DILocalVariable(name: "__mptr", scope: !19611, file: !3, line: 825, type: !154)
!19611 = distinct !DILexicalBlock(scope: !19607, file: !3, line: 825, column: 2)
!19612 = !DILocation(line: 825, column: 2, scope: !19611)
!19613 = !DILocation(line: 825, column: 2, scope: !19614)
!19614 = distinct !DILexicalBlock(scope: !19611, file: !3, line: 825, column: 2)
!19615 = !DILocation(line: 825, column: 2, scope: !19608)
!19616 = !DILocation(line: 825, column: 2, scope: !19617)
!19617 = distinct !DILexicalBlock(scope: !19608, file: !3, line: 825, column: 2)
!19618 = !DILocation(line: 825, column: 2, scope: !19619)
!19619 = distinct !DILexicalBlock(scope: !19617, file: !3, line: 825, column: 2)
!19620 = !DILocation(line: 0, scope: !19617)
!19621 = !DILocalVariable(name: "mac", scope: !19622, file: !3, line: 826, type: !2742)
!19622 = distinct !DILexicalBlock(scope: !19617, file: !3, line: 825, column: 53)
!19623 = !DILocation(line: 826, column: 7, scope: !19622)
!19624 = !DILocation(line: 826, column: 13, scope: !19622)
!19625 = !DILocation(line: 826, column: 19, scope: !19622)
!19626 = !DILocalVariable(name: "ix", scope: !19627, file: !3, line: 828, type: !6)
!19627 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 828, column: 10)
!19628 = !DILocation(line: 828, column: 10, scope: !19627)
!19629 = !DILocalVariable(name: "found", scope: !19627, file: !3, line: 828, type: !299)
!19630 = !DILocalVariable(name: "ptr", scope: !19627, file: !3, line: 828, type: !12233)
!19631 = !DILocalVariable(name: "____ptr", scope: !19632, file: !3, line: 828, type: !449)
!19632 = distinct !DILexicalBlock(scope: !19633, file: !3, line: 828, column: 10)
!19633 = distinct !DILexicalBlock(scope: !19627, file: !3, line: 828, column: 10)
!19634 = !DILocation(line: 828, column: 10, scope: !19632)
!19635 = !DILocalVariable(name: "__mptr", scope: !19636, file: !3, line: 828, type: !154)
!19636 = distinct !DILexicalBlock(scope: !19632, file: !3, line: 828, column: 10)
!19637 = !DILocation(line: 828, column: 10, scope: !19636)
!19638 = !DILocation(line: 828, column: 10, scope: !19639)
!19639 = distinct !DILexicalBlock(scope: !19636, file: !3, line: 828, column: 10)
!19640 = !DILocation(line: 828, column: 10, scope: !19633)
!19641 = !DILocation(line: 828, column: 10, scope: !19642)
!19642 = distinct !DILexicalBlock(scope: !19633, file: !3, line: 828, column: 10)
!19643 = !DILocation(line: 828, column: 10, scope: !19644)
!19644 = distinct !DILexicalBlock(scope: !19642, file: !3, line: 828, column: 10)
!19645 = !DILocation(line: 828, column: 10, scope: !19646)
!19646 = distinct !DILexicalBlock(scope: !19644, file: !3, line: 828, column: 10)
!19647 = !DILocalVariable(name: "____ptr", scope: !19648, file: !3, line: 828, type: !449)
!19648 = distinct !DILexicalBlock(scope: !19642, file: !3, line: 828, column: 10)
!19649 = !DILocation(line: 828, column: 10, scope: !19648)
!19650 = !DILocalVariable(name: "__mptr", scope: !19651, file: !3, line: 828, type: !154)
!19651 = distinct !DILexicalBlock(scope: !19648, file: !3, line: 828, column: 10)
!19652 = !DILocation(line: 828, column: 10, scope: !19651)
!19653 = !DILocation(line: 828, column: 10, scope: !19654)
!19654 = distinct !DILexicalBlock(scope: !19651, file: !3, line: 828, column: 10)
!19655 = distinct !{!19655, !19640, !19640}
!19656 = !DILocation(line: 828, column: 10, scope: !19657)
!19657 = distinct !DILexicalBlock(scope: !19627, file: !3, line: 828, column: 10)
!19658 = !DILocation(line: 828, column: 8, scope: !19622)
!19659 = !DILocation(line: 829, column: 7, scope: !19660)
!19660 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 829, column: 7)
!19661 = !DILocation(line: 829, column: 7, scope: !19622)
!19662 = !DILocation(line: 830, column: 8, scope: !19663)
!19663 = distinct !DILexicalBlock(scope: !19664, file: !3, line: 830, column: 8)
!19664 = distinct !DILexicalBlock(scope: !19660, file: !3, line: 829, column: 13)
!19665 = !DILocation(line: 830, column: 14, scope: !19663)
!19666 = !DILocation(line: 830, column: 21, scope: !19663)
!19667 = !DILocation(line: 830, column: 8, scope: !19664)
!19668 = !DILocation(line: 831, column: 5, scope: !19663)
!19669 = !DILocation(line: 831, column: 11, scope: !19663)
!19670 = !DILocation(line: 831, column: 18, scope: !19663)
!19671 = !DILocation(line: 832, column: 4, scope: !19664)
!19672 = !DILocalVariable(name: "ix", scope: !19673, file: !3, line: 834, type: !6)
!19673 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 834, column: 10)
!19674 = !DILocation(line: 834, column: 10, scope: !19673)
!19675 = !DILocalVariable(name: "ptr", scope: !19673, file: !3, line: 834, type: !12233)
!19676 = !DILocation(line: 834, column: 10, scope: !19677)
!19677 = distinct !DILexicalBlock(scope: !19673, file: !3, line: 834, column: 10)
!19678 = !DILocation(line: 834, column: 10, scope: !19679)
!19679 = distinct !DILexicalBlock(scope: !19677, file: !3, line: 834, column: 10)
!19680 = !DILocation(line: 834, column: 8, scope: !19622)
!19681 = !DILocation(line: 836, column: 8, scope: !19682)
!19682 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 836, column: 7)
!19683 = !DILocation(line: 836, column: 7, scope: !19622)
!19684 = !DILocation(line: 837, column: 4, scope: !19685)
!19685 = distinct !DILexicalBlock(scope: !19682, file: !3, line: 836, column: 14)
!19686 = !DILocation(line: 840, column: 4, scope: !19685)
!19687 = !DILocation(line: 842, column: 17, scope: !19622)
!19688 = !DILocation(line: 842, column: 24, scope: !19622)
!19689 = !DILocation(line: 842, column: 3, scope: !19622)
!19690 = !DILocation(line: 842, column: 9, scope: !19622)
!19691 = !DILocation(line: 842, column: 15, scope: !19622)
!19692 = !DILocation(line: 843, column: 3, scope: !19622)
!19693 = !DILocation(line: 843, column: 9, scope: !19622)
!19694 = !DILocation(line: 843, column: 16, scope: !19622)
!19695 = !DILocation(line: 844, column: 3, scope: !19622)
!19696 = !DILocation(line: 844, column: 9, scope: !19622)
!19697 = !DILocation(line: 844, column: 20, scope: !19622)
!19698 = !DILocation(line: 845, column: 2, scope: !19622)
!19699 = !DILocalVariable(name: "____ptr", scope: !19700, file: !3, line: 825, type: !449)
!19700 = distinct !DILexicalBlock(scope: !19617, file: !3, line: 825, column: 2)
!19701 = !DILocation(line: 825, column: 2, scope: !19700)
!19702 = !DILocalVariable(name: "__mptr", scope: !19703, file: !3, line: 825, type: !154)
!19703 = distinct !DILexicalBlock(scope: !19700, file: !3, line: 825, column: 2)
!19704 = !DILocation(line: 825, column: 2, scope: !19703)
!19705 = !DILocation(line: 825, column: 2, scope: !19706)
!19706 = distinct !DILexicalBlock(scope: !19703, file: !3, line: 825, column: 2)
!19707 = distinct !{!19707, !19615, !19708}
!19708 = !DILocation(line: 845, column: 2, scope: !19608)
!19709 = distinct !{!19709, !19602, !19710}
!19710 = !DILocation(line: 845, column: 2, scope: !19603)
!19711 = !DILocation(line: 846, column: 1, scope: !19584)
!19712 = distinct !DISubprogram(name: "ether_addr_equal", scope: !14385, file: !14385, line: 326, type: !19713, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19713 = !DISubroutineType(types: !19714)
!19714 = !{!299, !4150, !4150}
!19715 = !DILocalVariable(name: "addr1", arg: 1, scope: !19712, file: !14385, line: 326, type: !4150)
!19716 = !DILocation(line: 326, column: 47, scope: !19712)
!19717 = !DILocalVariable(name: "addr2", arg: 2, scope: !19712, file: !14385, line: 326, type: !4150)
!19718 = !DILocation(line: 326, column: 64, scope: !19712)
!19719 = !DILocalVariable(name: "fold", scope: !19712, file: !14385, line: 329, type: !224)
!19720 = !DILocation(line: 329, column: 6, scope: !19712)
!19721 = !DILocation(line: 329, column: 29, scope: !19712)
!19722 = !DILocation(line: 329, column: 15, scope: !19712)
!19723 = !DILocation(line: 329, column: 53, scope: !19712)
!19724 = !DILocation(line: 329, column: 39, scope: !19712)
!19725 = !DILocation(line: 329, column: 36, scope: !19712)
!19726 = !DILocation(line: 330, column: 23, scope: !19712)
!19727 = !DILocation(line: 330, column: 29, scope: !19712)
!19728 = !DILocation(line: 330, column: 8, scope: !19712)
!19729 = !DILocation(line: 330, column: 7, scope: !19712)
!19730 = !DILocation(line: 330, column: 53, scope: !19712)
!19731 = !DILocation(line: 330, column: 59, scope: !19712)
!19732 = !DILocation(line: 330, column: 38, scope: !19712)
!19733 = !DILocation(line: 330, column: 37, scope: !19712)
!19734 = !DILocation(line: 330, column: 35, scope: !19712)
!19735 = !DILocation(line: 329, column: 61, scope: !19712)
!19736 = !DILocation(line: 332, column: 9, scope: !19712)
!19737 = !DILocation(line: 332, column: 14, scope: !19712)
!19738 = !DILocation(line: 332, column: 2, scope: !19712)
!19739 = distinct !DISubprogram(name: "hlist_add_head", scope: !14027, file: !14027, line: 879, type: !19740, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19740 = !DISubroutineType(types: !19741)
!19741 = !{null, !449, !6692}
!19742 = !DILocalVariable(name: "n", arg: 1, scope: !19739, file: !14027, line: 879, type: !449)
!19743 = !DILocation(line: 879, column: 54, scope: !19739)
!19744 = !DILocalVariable(name: "h", arg: 2, scope: !19739, file: !14027, line: 879, type: !6692)
!19745 = !DILocation(line: 879, column: 76, scope: !19739)
!19746 = !DILocalVariable(name: "first", scope: !19739, file: !14027, line: 881, type: !449)
!19747 = !DILocation(line: 881, column: 21, scope: !19739)
!19748 = !DILocation(line: 881, column: 29, scope: !19739)
!19749 = !DILocation(line: 881, column: 32, scope: !19739)
!19750 = !DILocation(line: 882, column: 2, scope: !19739)
!19751 = !DILocation(line: 882, column: 2, scope: !19752)
!19752 = distinct !DILexicalBlock(scope: !19739, file: !14027, line: 882, column: 2)
!19753 = !DILocation(line: 882, column: 2, scope: !19754)
!19754 = distinct !DILexicalBlock(scope: !19752, file: !14027, line: 882, column: 2)
!19755 = !DILocation(line: 882, column: 2, scope: !19756)
!19756 = distinct !DILexicalBlock(scope: !19752, file: !14027, line: 882, column: 2)
!19757 = !DILocation(line: 883, column: 6, scope: !19758)
!19758 = distinct !DILexicalBlock(scope: !19739, file: !14027, line: 883, column: 6)
!19759 = !DILocation(line: 883, column: 6, scope: !19739)
!19760 = !DILocation(line: 884, column: 3, scope: !19758)
!19761 = !DILocation(line: 884, column: 3, scope: !19762)
!19762 = distinct !DILexicalBlock(scope: !19758, file: !14027, line: 884, column: 3)
!19763 = !DILocation(line: 884, column: 3, scope: !19764)
!19764 = distinct !DILexicalBlock(scope: !19762, file: !14027, line: 884, column: 3)
!19765 = !DILocation(line: 884, column: 3, scope: !19766)
!19766 = distinct !DILexicalBlock(scope: !19762, file: !14027, line: 884, column: 3)
!19767 = !DILocation(line: 885, column: 2, scope: !19739)
!19768 = !DILocation(line: 885, column: 2, scope: !19769)
!19769 = distinct !DILexicalBlock(scope: !19739, file: !14027, line: 885, column: 2)
!19770 = !DILocation(line: 885, column: 2, scope: !19771)
!19771 = distinct !DILexicalBlock(scope: !19769, file: !14027, line: 885, column: 2)
!19772 = !DILocation(line: 885, column: 2, scope: !19773)
!19773 = distinct !DILexicalBlock(scope: !19769, file: !14027, line: 885, column: 2)
!19774 = !DILocation(line: 886, column: 2, scope: !19739)
!19775 = !DILocation(line: 886, column: 2, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19739, file: !14027, line: 886, column: 2)
!19777 = !DILocation(line: 886, column: 2, scope: !19778)
!19778 = distinct !DILexicalBlock(scope: !19776, file: !14027, line: 886, column: 2)
!19779 = !DILocation(line: 886, column: 2, scope: !19780)
!19780 = distinct !DILexicalBlock(scope: !19776, file: !14027, line: 886, column: 2)
!19781 = !DILocation(line: 887, column: 1, scope: !19739)
!19782 = distinct !DISubprogram(name: "esw_add_uc_addr", scope: !3, file: !3, line: 503, type: !19446, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19783 = !DILocalVariable(name: "esw", arg: 1, scope: !19782, file: !3, line: 503, type: !10791)
!19784 = !DILocation(line: 503, column: 49, scope: !19782)
!19785 = !DILocalVariable(name: "vaddr", arg: 2, scope: !19782, file: !3, line: 503, type: !12233)
!19786 = !DILocation(line: 503, column: 73, scope: !19782)
!19787 = !DILocalVariable(name: "mac", scope: !19782, file: !3, line: 505, type: !2742)
!19788 = !DILocation(line: 505, column: 6, scope: !19782)
!19789 = !DILocation(line: 505, column: 12, scope: !19782)
!19790 = !DILocation(line: 505, column: 19, scope: !19782)
!19791 = !DILocation(line: 505, column: 24, scope: !19782)
!19792 = !DILocalVariable(name: "vport", scope: !19782, file: !3, line: 506, type: !739)
!19793 = !DILocation(line: 506, column: 6, scope: !19782)
!19794 = !DILocation(line: 506, column: 14, scope: !19782)
!19795 = !DILocation(line: 506, column: 21, scope: !19782)
!19796 = !DILocalVariable(name: "err", scope: !19782, file: !3, line: 507, type: !6)
!19797 = !DILocation(line: 507, column: 6, scope: !19782)
!19798 = !DILocation(line: 512, column: 32, scope: !19799)
!19799 = distinct !DILexicalBlock(scope: !19782, file: !3, line: 512, column: 6)
!19800 = !DILocation(line: 512, column: 37, scope: !19799)
!19801 = !DILocation(line: 512, column: 6, scope: !19799)
!19802 = !DILocation(line: 512, column: 6, scope: !19782)
!19803 = !DILocation(line: 513, column: 3, scope: !19799)
!19804 = !DILocation(line: 515, column: 26, scope: !19782)
!19805 = !DILocation(line: 515, column: 31, scope: !19782)
!19806 = !DILocation(line: 515, column: 36, scope: !19782)
!19807 = !DILocation(line: 515, column: 8, scope: !19782)
!19808 = !DILocation(line: 515, column: 6, scope: !19782)
!19809 = !DILocation(line: 516, column: 6, scope: !19810)
!19810 = distinct !DILexicalBlock(scope: !19782, file: !3, line: 516, column: 6)
!19811 = !DILocation(line: 516, column: 6, scope: !19782)
!19812 = !DILocation(line: 517, column: 3, scope: !19813)
!19813 = distinct !DILexicalBlock(scope: !19810, file: !3, line: 516, column: 11)
!19814 = !DILocation(line: 520, column: 10, scope: !19813)
!19815 = !DILocation(line: 520, column: 3, scope: !19813)
!19816 = !DILocation(line: 522, column: 2, scope: !19782)
!19817 = !DILocation(line: 522, column: 9, scope: !19782)
!19818 = !DILocation(line: 522, column: 14, scope: !19782)
!19819 = !DILabel(scope: !19782, name: "fdb_add", file: !3, line: 524)
!19820 = !DILocation(line: 524, column: 1, scope: !19782)
!19821 = !DILocation(line: 526, column: 6, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19782, file: !3, line: 526, column: 6)
!19823 = !DILocation(line: 526, column: 11, scope: !19822)
!19824 = !DILocation(line: 526, column: 21, scope: !19822)
!19825 = !DILocation(line: 526, column: 28, scope: !19822)
!19826 = !DILocation(line: 526, column: 32, scope: !19822)
!19827 = !DILocation(line: 526, column: 35, scope: !19822)
!19828 = !DILocation(line: 526, column: 40, scope: !19822)
!19829 = !DILocation(line: 526, column: 45, scope: !19822)
!19830 = !DILocation(line: 526, column: 6, scope: !19782)
!19831 = !DILocation(line: 527, column: 45, scope: !19822)
!19832 = !DILocation(line: 527, column: 50, scope: !19822)
!19833 = !DILocation(line: 527, column: 55, scope: !19822)
!19834 = !DILocation(line: 527, column: 22, scope: !19822)
!19835 = !DILocation(line: 527, column: 3, scope: !19822)
!19836 = !DILocation(line: 527, column: 10, scope: !19822)
!19837 = !DILocation(line: 527, column: 20, scope: !19822)
!19838 = !DILocation(line: 529, column: 2, scope: !19782)
!19839 = !DILocation(line: 529, column: 2, scope: !19840)
!19840 = distinct !DILexicalBlock(scope: !19841, file: !3, line: 529, column: 2)
!19841 = distinct !DILexicalBlock(scope: !19782, file: !3, line: 529, column: 2)
!19842 = !DILocation(line: 529, column: 2, scope: !19841)
!19843 = !DILocation(line: 532, column: 2, scope: !19782)
!19844 = !DILocation(line: 533, column: 1, scope: !19782)
!19845 = distinct !DISubprogram(name: "esw_add_mc_addr", scope: !3, file: !3, line: 610, type: !19446, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19846 = !DILocalVariable(name: "esw", arg: 1, scope: !19845, file: !3, line: 610, type: !10791)
!19847 = !DILocation(line: 610, column: 49, scope: !19845)
!19848 = !DILocalVariable(name: "vaddr", arg: 2, scope: !19845, file: !3, line: 610, type: !12233)
!19849 = !DILocation(line: 610, column: 73, scope: !19845)
!19850 = !DILocalVariable(name: "hash", scope: !19845, file: !3, line: 612, type: !6692)
!19851 = !DILocation(line: 612, column: 21, scope: !19845)
!19852 = !DILocation(line: 612, column: 28, scope: !19845)
!19853 = !DILocation(line: 612, column: 33, scope: !19845)
!19854 = !DILocalVariable(name: "esw_mc", scope: !19845, file: !3, line: 613, type: !12242)
!19855 = !DILocation(line: 613, column: 22, scope: !19845)
!19856 = !DILocalVariable(name: "mac", scope: !19845, file: !3, line: 614, type: !2742)
!19857 = !DILocation(line: 614, column: 6, scope: !19845)
!19858 = !DILocation(line: 614, column: 12, scope: !19845)
!19859 = !DILocation(line: 614, column: 19, scope: !19845)
!19860 = !DILocation(line: 614, column: 24, scope: !19845)
!19861 = !DILocalVariable(name: "vport", scope: !19845, file: !3, line: 615, type: !739)
!19862 = !DILocation(line: 615, column: 6, scope: !19845)
!19863 = !DILocation(line: 615, column: 14, scope: !19845)
!19864 = !DILocation(line: 615, column: 21, scope: !19845)
!19865 = !DILocation(line: 617, column: 7, scope: !19866)
!19866 = distinct !DILexicalBlock(scope: !19845, file: !3, line: 617, column: 6)
!19867 = !DILocation(line: 617, column: 12, scope: !19866)
!19868 = !DILocation(line: 617, column: 22, scope: !19866)
!19869 = !DILocation(line: 617, column: 29, scope: !19866)
!19870 = !DILocation(line: 617, column: 6, scope: !19845)
!19871 = !DILocation(line: 618, column: 3, scope: !19866)
!19872 = !DILocalVariable(name: "ix", scope: !19873, file: !3, line: 620, type: !6)
!19873 = distinct !DILexicalBlock(scope: !19845, file: !3, line: 620, column: 11)
!19874 = !DILocation(line: 620, column: 11, scope: !19873)
!19875 = !DILocalVariable(name: "found", scope: !19873, file: !3, line: 620, type: !299)
!19876 = !DILocalVariable(name: "ptr", scope: !19873, file: !3, line: 620, type: !12242)
!19877 = !DILocalVariable(name: "____ptr", scope: !19878, file: !3, line: 620, type: !449)
!19878 = distinct !DILexicalBlock(scope: !19879, file: !3, line: 620, column: 11)
!19879 = distinct !DILexicalBlock(scope: !19873, file: !3, line: 620, column: 11)
!19880 = !DILocation(line: 620, column: 11, scope: !19878)
!19881 = !DILocalVariable(name: "__mptr", scope: !19882, file: !3, line: 620, type: !154)
!19882 = distinct !DILexicalBlock(scope: !19878, file: !3, line: 620, column: 11)
!19883 = !DILocation(line: 620, column: 11, scope: !19882)
!19884 = !DILocation(line: 620, column: 11, scope: !19885)
!19885 = distinct !DILexicalBlock(scope: !19882, file: !3, line: 620, column: 11)
!19886 = !DILocation(line: 620, column: 11, scope: !19879)
!19887 = !DILocation(line: 620, column: 11, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19879, file: !3, line: 620, column: 11)
!19889 = !DILocation(line: 620, column: 11, scope: !19890)
!19890 = distinct !DILexicalBlock(scope: !19888, file: !3, line: 620, column: 11)
!19891 = !DILocation(line: 620, column: 11, scope: !19892)
!19892 = distinct !DILexicalBlock(scope: !19890, file: !3, line: 620, column: 11)
!19893 = !DILocalVariable(name: "____ptr", scope: !19894, file: !3, line: 620, type: !449)
!19894 = distinct !DILexicalBlock(scope: !19888, file: !3, line: 620, column: 11)
!19895 = !DILocation(line: 620, column: 11, scope: !19894)
!19896 = !DILocalVariable(name: "__mptr", scope: !19897, file: !3, line: 620, type: !154)
!19897 = distinct !DILexicalBlock(scope: !19894, file: !3, line: 620, column: 11)
!19898 = !DILocation(line: 620, column: 11, scope: !19897)
!19899 = !DILocation(line: 620, column: 11, scope: !19900)
!19900 = distinct !DILexicalBlock(scope: !19897, file: !3, line: 620, column: 11)
!19901 = distinct !{!19901, !19886, !19886}
!19902 = !DILocation(line: 620, column: 11, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19873, file: !3, line: 620, column: 11)
!19904 = !DILocation(line: 620, column: 9, scope: !19845)
!19905 = !DILocation(line: 621, column: 6, scope: !19906)
!19906 = distinct !DILexicalBlock(scope: !19845, file: !3, line: 621, column: 6)
!19907 = !DILocation(line: 621, column: 6, scope: !19845)
!19908 = !DILocation(line: 622, column: 3, scope: !19906)
!19909 = !DILocalVariable(name: "ix", scope: !19910, file: !3, line: 624, type: !6)
!19910 = distinct !DILexicalBlock(scope: !19845, file: !3, line: 624, column: 11)
!19911 = !DILocation(line: 624, column: 11, scope: !19910)
!19912 = !DILocalVariable(name: "ptr", scope: !19910, file: !3, line: 624, type: !12242)
!19913 = !DILocation(line: 624, column: 11, scope: !19914)
!19914 = distinct !DILexicalBlock(scope: !19910, file: !3, line: 624, column: 11)
!19915 = !DILocation(line: 624, column: 11, scope: !19916)
!19916 = distinct !DILexicalBlock(scope: !19914, file: !3, line: 624, column: 11)
!19917 = !DILocation(line: 624, column: 9, scope: !19845)
!19918 = !DILocation(line: 625, column: 7, scope: !19919)
!19919 = distinct !DILexicalBlock(scope: !19845, file: !3, line: 625, column: 6)
!19920 = !DILocation(line: 625, column: 6, scope: !19845)
!19921 = !DILocation(line: 626, column: 3, scope: !19919)
!19922 = !DILocation(line: 629, column: 26, scope: !19845)
!19923 = !DILocation(line: 629, column: 31, scope: !19845)
!19924 = !DILocation(line: 629, column: 3, scope: !19845)
!19925 = !DILocation(line: 628, column: 2, scope: !19845)
!19926 = !DILocation(line: 628, column: 10, scope: !19845)
!19927 = !DILocation(line: 628, column: 22, scope: !19845)
!19928 = !DILocation(line: 632, column: 25, scope: !19845)
!19929 = !DILocation(line: 632, column: 30, scope: !19845)
!19930 = !DILocation(line: 632, column: 37, scope: !19845)
!19931 = !DILocation(line: 632, column: 2, scope: !19845)
!19932 = !DILabel(scope: !19845, name: "add", file: !3, line: 634)
!19933 = !DILocation(line: 634, column: 1, scope: !19845)
!19934 = !DILocation(line: 638, column: 7, scope: !19935)
!19935 = distinct !DILexicalBlock(scope: !19845, file: !3, line: 638, column: 6)
!19936 = !DILocation(line: 638, column: 14, scope: !19935)
!19937 = !DILocation(line: 638, column: 6, scope: !19845)
!19938 = !DILocation(line: 639, column: 3, scope: !19935)
!19939 = !DILocation(line: 639, column: 11, scope: !19935)
!19940 = !DILocation(line: 639, column: 17, scope: !19935)
!19941 = !DILocation(line: 642, column: 44, scope: !19845)
!19942 = !DILocation(line: 642, column: 49, scope: !19845)
!19943 = !DILocation(line: 642, column: 54, scope: !19845)
!19944 = !DILocation(line: 642, column: 21, scope: !19845)
!19945 = !DILocation(line: 642, column: 2, scope: !19845)
!19946 = !DILocation(line: 642, column: 9, scope: !19845)
!19947 = !DILocation(line: 642, column: 19, scope: !19845)
!19948 = !DILocation(line: 643, column: 2, scope: !19845)
!19949 = !DILocation(line: 643, column: 2, scope: !19950)
!19950 = distinct !DILexicalBlock(scope: !19951, file: !3, line: 643, column: 2)
!19951 = distinct !DILexicalBlock(scope: !19845, file: !3, line: 643, column: 2)
!19952 = !DILocation(line: 643, column: 2, scope: !19951)
!19953 = !DILocation(line: 647, column: 2, scope: !19845)
!19954 = !DILocation(line: 648, column: 1, scope: !19845)
!19955 = distinct !DISubprogram(name: "esw_del_uc_addr", scope: !3, file: !3, line: 535, type: !19446, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!19956 = !DILocalVariable(name: "esw", arg: 1, scope: !19955, file: !3, line: 535, type: !10791)
!19957 = !DILocation(line: 535, column: 49, scope: !19955)
!19958 = !DILocalVariable(name: "vaddr", arg: 2, scope: !19955, file: !3, line: 535, type: !12233)
!19959 = !DILocation(line: 535, column: 73, scope: !19955)
!19960 = !DILocalVariable(name: "mac", scope: !19955, file: !3, line: 537, type: !2742)
!19961 = !DILocation(line: 537, column: 6, scope: !19955)
!19962 = !DILocation(line: 537, column: 12, scope: !19955)
!19963 = !DILocation(line: 537, column: 19, scope: !19955)
!19964 = !DILocation(line: 537, column: 24, scope: !19955)
!19965 = !DILocalVariable(name: "vport", scope: !19955, file: !3, line: 538, type: !739)
!19966 = !DILocation(line: 538, column: 6, scope: !19955)
!19967 = !DILocation(line: 538, column: 14, scope: !19955)
!19968 = !DILocation(line: 538, column: 21, scope: !19955)
!19969 = !DILocalVariable(name: "err", scope: !19955, file: !3, line: 539, type: !6)
!19970 = !DILocation(line: 539, column: 6, scope: !19955)
!19971 = !DILocation(line: 544, column: 7, scope: !19972)
!19972 = distinct !DILexicalBlock(scope: !19955, file: !3, line: 544, column: 6)
!19973 = !DILocation(line: 544, column: 14, scope: !19972)
!19974 = !DILocation(line: 544, column: 19, scope: !19972)
!19975 = !DILocation(line: 544, column: 48, scope: !19972)
!19976 = !DILocation(line: 544, column: 53, scope: !19972)
!19977 = !DILocation(line: 544, column: 22, scope: !19972)
!19978 = !DILocation(line: 544, column: 6, scope: !19955)
!19979 = !DILocation(line: 545, column: 3, scope: !19972)
!19980 = !DILocation(line: 547, column: 26, scope: !19955)
!19981 = !DILocation(line: 547, column: 31, scope: !19955)
!19982 = !DILocation(line: 547, column: 36, scope: !19955)
!19983 = !DILocation(line: 547, column: 8, scope: !19955)
!19984 = !DILocation(line: 547, column: 6, scope: !19955)
!19985 = !DILocation(line: 548, column: 6, scope: !19986)
!19986 = distinct !DILexicalBlock(scope: !19955, file: !3, line: 548, column: 6)
!19987 = !DILocation(line: 548, column: 6, scope: !19955)
!19988 = !DILocation(line: 549, column: 3, scope: !19986)
!19989 = !DILocation(line: 552, column: 2, scope: !19955)
!19990 = !DILocation(line: 552, column: 9, scope: !19955)
!19991 = !DILocation(line: 552, column: 14, scope: !19955)
!19992 = !DILabel(scope: !19955, name: "fdb_del", file: !3, line: 554)
!19993 = !DILocation(line: 554, column: 1, scope: !19955)
!19994 = !DILocation(line: 555, column: 6, scope: !19995)
!19995 = distinct !DILexicalBlock(scope: !19955, file: !3, line: 555, column: 6)
!19996 = !DILocation(line: 555, column: 13, scope: !19995)
!19997 = !DILocation(line: 555, column: 6, scope: !19955)
!19998 = !DILocation(line: 556, column: 23, scope: !19995)
!19999 = !DILocation(line: 556, column: 30, scope: !19995)
!20000 = !DILocation(line: 556, column: 3, scope: !19995)
!20001 = !DILocation(line: 557, column: 2, scope: !19955)
!20002 = !DILocation(line: 557, column: 9, scope: !19955)
!20003 = !DILocation(line: 557, column: 19, scope: !19955)
!20004 = !DILocation(line: 559, column: 2, scope: !19955)
!20005 = distinct !DISubprogram(name: "esw_del_mc_addr", scope: !3, file: !3, line: 650, type: !19446, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20006 = !DILocalVariable(name: "esw", arg: 1, scope: !20005, file: !3, line: 650, type: !10791)
!20007 = !DILocation(line: 650, column: 49, scope: !20005)
!20008 = !DILocalVariable(name: "vaddr", arg: 2, scope: !20005, file: !3, line: 650, type: !12233)
!20009 = !DILocation(line: 650, column: 73, scope: !20005)
!20010 = !DILocalVariable(name: "hash", scope: !20005, file: !3, line: 652, type: !6692)
!20011 = !DILocation(line: 652, column: 21, scope: !20005)
!20012 = !DILocation(line: 652, column: 28, scope: !20005)
!20013 = !DILocation(line: 652, column: 33, scope: !20005)
!20014 = !DILocalVariable(name: "esw_mc", scope: !20005, file: !3, line: 653, type: !12242)
!20015 = !DILocation(line: 653, column: 22, scope: !20005)
!20016 = !DILocalVariable(name: "mac", scope: !20005, file: !3, line: 654, type: !2742)
!20017 = !DILocation(line: 654, column: 6, scope: !20005)
!20018 = !DILocation(line: 654, column: 12, scope: !20005)
!20019 = !DILocation(line: 654, column: 19, scope: !20005)
!20020 = !DILocation(line: 654, column: 24, scope: !20005)
!20021 = !DILocalVariable(name: "vport", scope: !20005, file: !3, line: 655, type: !739)
!20022 = !DILocation(line: 655, column: 6, scope: !20005)
!20023 = !DILocation(line: 655, column: 14, scope: !20005)
!20024 = !DILocation(line: 655, column: 21, scope: !20005)
!20025 = !DILocation(line: 657, column: 7, scope: !20026)
!20026 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 657, column: 6)
!20027 = !DILocation(line: 657, column: 12, scope: !20026)
!20028 = !DILocation(line: 657, column: 22, scope: !20026)
!20029 = !DILocation(line: 657, column: 29, scope: !20026)
!20030 = !DILocation(line: 657, column: 6, scope: !20005)
!20031 = !DILocation(line: 658, column: 3, scope: !20026)
!20032 = !DILocalVariable(name: "ix", scope: !20033, file: !3, line: 660, type: !6)
!20033 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 660, column: 11)
!20034 = !DILocation(line: 660, column: 11, scope: !20033)
!20035 = !DILocalVariable(name: "found", scope: !20033, file: !3, line: 660, type: !299)
!20036 = !DILocalVariable(name: "ptr", scope: !20033, file: !3, line: 660, type: !12242)
!20037 = !DILocalVariable(name: "____ptr", scope: !20038, file: !3, line: 660, type: !449)
!20038 = distinct !DILexicalBlock(scope: !20039, file: !3, line: 660, column: 11)
!20039 = distinct !DILexicalBlock(scope: !20033, file: !3, line: 660, column: 11)
!20040 = !DILocation(line: 660, column: 11, scope: !20038)
!20041 = !DILocalVariable(name: "__mptr", scope: !20042, file: !3, line: 660, type: !154)
!20042 = distinct !DILexicalBlock(scope: !20038, file: !3, line: 660, column: 11)
!20043 = !DILocation(line: 660, column: 11, scope: !20042)
!20044 = !DILocation(line: 660, column: 11, scope: !20045)
!20045 = distinct !DILexicalBlock(scope: !20042, file: !3, line: 660, column: 11)
!20046 = !DILocation(line: 660, column: 11, scope: !20039)
!20047 = !DILocation(line: 660, column: 11, scope: !20048)
!20048 = distinct !DILexicalBlock(scope: !20039, file: !3, line: 660, column: 11)
!20049 = !DILocation(line: 660, column: 11, scope: !20050)
!20050 = distinct !DILexicalBlock(scope: !20048, file: !3, line: 660, column: 11)
!20051 = !DILocation(line: 660, column: 11, scope: !20052)
!20052 = distinct !DILexicalBlock(scope: !20050, file: !3, line: 660, column: 11)
!20053 = !DILocalVariable(name: "____ptr", scope: !20054, file: !3, line: 660, type: !449)
!20054 = distinct !DILexicalBlock(scope: !20048, file: !3, line: 660, column: 11)
!20055 = !DILocation(line: 660, column: 11, scope: !20054)
!20056 = !DILocalVariable(name: "__mptr", scope: !20057, file: !3, line: 660, type: !154)
!20057 = distinct !DILexicalBlock(scope: !20054, file: !3, line: 660, column: 11)
!20058 = !DILocation(line: 660, column: 11, scope: !20057)
!20059 = !DILocation(line: 660, column: 11, scope: !20060)
!20060 = distinct !DILexicalBlock(scope: !20057, file: !3, line: 660, column: 11)
!20061 = distinct !{!20061, !20046, !20046}
!20062 = !DILocation(line: 660, column: 11, scope: !20063)
!20063 = distinct !DILexicalBlock(scope: !20033, file: !3, line: 660, column: 11)
!20064 = !DILocation(line: 660, column: 9, scope: !20005)
!20065 = !DILocation(line: 661, column: 7, scope: !20066)
!20066 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 661, column: 6)
!20067 = !DILocation(line: 661, column: 6, scope: !20005)
!20068 = !DILocation(line: 662, column: 3, scope: !20069)
!20069 = distinct !DILexicalBlock(scope: !20066, file: !3, line: 661, column: 15)
!20070 = !DILocation(line: 665, column: 3, scope: !20069)
!20071 = !DILocation(line: 667, column: 2, scope: !20005)
!20072 = !DILocation(line: 667, column: 2, scope: !20073)
!20073 = distinct !DILexicalBlock(scope: !20074, file: !3, line: 667, column: 2)
!20074 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 667, column: 2)
!20075 = !DILocation(line: 667, column: 2, scope: !20074)
!20076 = !DILocation(line: 672, column: 6, scope: !20077)
!20077 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 672, column: 6)
!20078 = !DILocation(line: 672, column: 13, scope: !20077)
!20079 = !DILocation(line: 672, column: 6, scope: !20005)
!20080 = !DILocation(line: 673, column: 23, scope: !20077)
!20081 = !DILocation(line: 673, column: 30, scope: !20077)
!20082 = !DILocation(line: 673, column: 3, scope: !20077)
!20083 = !DILocation(line: 674, column: 2, scope: !20005)
!20084 = !DILocation(line: 674, column: 9, scope: !20005)
!20085 = !DILocation(line: 674, column: 19, scope: !20005)
!20086 = !DILocation(line: 679, column: 6, scope: !20087)
!20087 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 679, column: 6)
!20088 = !DILocation(line: 679, column: 13, scope: !20087)
!20089 = !DILocation(line: 679, column: 24, scope: !20087)
!20090 = !DILocation(line: 679, column: 30, scope: !20087)
!20091 = !DILocation(line: 679, column: 38, scope: !20087)
!20092 = !DILocation(line: 679, column: 28, scope: !20087)
!20093 = !DILocation(line: 679, column: 45, scope: !20087)
!20094 = !DILocation(line: 679, column: 6, scope: !20005)
!20095 = !DILocation(line: 680, column: 3, scope: !20087)
!20096 = !DILocation(line: 683, column: 25, scope: !20005)
!20097 = !DILocation(line: 683, column: 30, scope: !20005)
!20098 = !DILocation(line: 683, column: 37, scope: !20005)
!20099 = !DILocation(line: 683, column: 2, scope: !20005)
!20100 = !DILocation(line: 685, column: 6, scope: !20101)
!20101 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 685, column: 6)
!20102 = !DILocation(line: 685, column: 14, scope: !20101)
!20103 = !DILocation(line: 685, column: 6, scope: !20005)
!20104 = !DILocation(line: 686, column: 23, scope: !20101)
!20105 = !DILocation(line: 686, column: 31, scope: !20101)
!20106 = !DILocation(line: 686, column: 3, scope: !20101)
!20107 = !DILocation(line: 688, column: 2, scope: !20108)
!20108 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 688, column: 2)
!20109 = !DILocation(line: 689, column: 2, scope: !20005)
!20110 = !DILocation(line: 690, column: 1, scope: !20005)
!20111 = distinct !DISubprogram(name: "hlist_del", scope: !14027, file: !14027, line: 850, type: !20112, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20112 = !DISubroutineType(types: !20113)
!20113 = !{null, !449}
!20114 = !DILocalVariable(name: "n", arg: 1, scope: !20111, file: !14027, line: 850, type: !449)
!20115 = !DILocation(line: 850, column: 49, scope: !20111)
!20116 = !DILocation(line: 852, column: 14, scope: !20111)
!20117 = !DILocation(line: 852, column: 2, scope: !20111)
!20118 = !DILocation(line: 853, column: 2, scope: !20111)
!20119 = !DILocation(line: 853, column: 5, scope: !20111)
!20120 = !DILocation(line: 853, column: 10, scope: !20111)
!20121 = !DILocation(line: 854, column: 2, scope: !20111)
!20122 = !DILocation(line: 854, column: 5, scope: !20111)
!20123 = !DILocation(line: 854, column: 11, scope: !20111)
!20124 = !DILocation(line: 855, column: 1, scope: !20111)
!20125 = distinct !DISubprogram(name: "esw_fdb_set_vport_rule", scope: !3, file: !3, line: 249, type: !20126, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20126 = !DISubroutineType(types: !20127)
!20127 = !{!10844, !10791, !2742, !739}
!20128 = !DILocalVariable(name: "esw", arg: 1, scope: !20125, file: !3, line: 249, type: !10791)
!20129 = !DILocation(line: 249, column: 45, scope: !20125)
!20130 = !DILocalVariable(name: "mac", arg: 2, scope: !20125, file: !3, line: 249, type: !2742)
!20131 = !DILocation(line: 249, column: 53, scope: !20125)
!20132 = !DILocalVariable(name: "vport", arg: 3, scope: !20125, file: !3, line: 249, type: !739)
!20133 = !DILocation(line: 249, column: 72, scope: !20125)
!20134 = !DILocalVariable(name: "mac_c", scope: !20125, file: !3, line: 251, type: !10953)
!20135 = !DILocation(line: 251, column: 5, scope: !20125)
!20136 = !DILocation(line: 253, column: 21, scope: !20125)
!20137 = !DILocation(line: 253, column: 2, scope: !20125)
!20138 = !DILocation(line: 254, column: 34, scope: !20125)
!20139 = !DILocation(line: 254, column: 39, scope: !20125)
!20140 = !DILocation(line: 254, column: 53, scope: !20125)
!20141 = !DILocation(line: 254, column: 60, scope: !20125)
!20142 = !DILocation(line: 254, column: 9, scope: !20125)
!20143 = !DILocation(line: 254, column: 2, scope: !20125)
!20144 = distinct !DISubprogram(name: "__esw_fdb_set_vport_rule", scope: !3, file: !3, line: 186, type: !20145, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20145 = !DISubroutineType(types: !20146)
!20146 = !{!10844, !10791, !739, !299, !2742, !2742}
!20147 = !DILocalVariable(name: "esw", arg: 1, scope: !20144, file: !3, line: 186, type: !10791)
!20148 = !DILocation(line: 186, column: 47, scope: !20144)
!20149 = !DILocalVariable(name: "vport", arg: 2, scope: !20144, file: !3, line: 186, type: !739)
!20150 = !DILocation(line: 186, column: 56, scope: !20144)
!20151 = !DILocalVariable(name: "rx_rule", arg: 3, scope: !20144, file: !3, line: 186, type: !299)
!20152 = !DILocation(line: 186, column: 68, scope: !20144)
!20153 = !DILocalVariable(name: "mac_c", arg: 4, scope: !20144, file: !3, line: 187, type: !2742)
!20154 = !DILocation(line: 187, column: 8, scope: !20144)
!20155 = !DILocalVariable(name: "mac_v", arg: 5, scope: !20144, file: !3, line: 187, type: !2742)
!20156 = !DILocation(line: 187, column: 28, scope: !20144)
!20157 = !DILocalVariable(name: "match_header", scope: !20144, file: !3, line: 189, type: !6)
!20158 = !DILocation(line: 189, column: 6, scope: !20144)
!20159 = !DILocation(line: 189, column: 41, scope: !20144)
!20160 = !DILocation(line: 189, column: 22, scope: !20144)
!20161 = !DILocalVariable(name: "flow_rule", scope: !20144, file: !3, line: 191, type: !10844)
!20162 = !DILocation(line: 191, column: 27, scope: !20144)
!20163 = !DILocalVariable(name: "flow_act", scope: !20144, file: !3, line: 192, type: !15008)
!20164 = !DILocation(line: 192, column: 23, scope: !20144)
!20165 = !DILocalVariable(name: "dest", scope: !20144, file: !3, line: 193, type: !10856)
!20166 = !DILocation(line: 193, column: 31, scope: !20144)
!20167 = !DILocalVariable(name: "spec", scope: !20144, file: !3, line: 194, type: !16595)
!20168 = !DILocation(line: 194, column: 25, scope: !20144)
!20169 = !DILocalVariable(name: "mv_misc", scope: !20144, file: !3, line: 195, type: !154)
!20170 = !DILocation(line: 195, column: 8, scope: !20144)
!20171 = !DILocalVariable(name: "mc_misc", scope: !20144, file: !3, line: 196, type: !154)
!20172 = !DILocation(line: 196, column: 8, scope: !20144)
!20173 = !DILocalVariable(name: "dmac_v", scope: !20144, file: !3, line: 197, type: !2742)
!20174 = !DILocation(line: 197, column: 6, scope: !20144)
!20175 = !DILocalVariable(name: "dmac_c", scope: !20144, file: !3, line: 198, type: !2742)
!20176 = !DILocation(line: 198, column: 6, scope: !20144)
!20177 = !DILocation(line: 200, column: 6, scope: !20178)
!20178 = distinct !DILexicalBlock(scope: !20144, file: !3, line: 200, column: 6)
!20179 = !DILocation(line: 200, column: 6, scope: !20144)
!20180 = !DILocation(line: 201, column: 16, scope: !20178)
!20181 = !DILocation(line: 201, column: 3, scope: !20178)
!20182 = !DILocation(line: 203, column: 9, scope: !20144)
!20183 = !DILocation(line: 203, column: 7, scope: !20144)
!20184 = !DILocation(line: 204, column: 7, scope: !20185)
!20185 = distinct !DILexicalBlock(scope: !20144, file: !3, line: 204, column: 6)
!20186 = !DILocation(line: 204, column: 6, scope: !20144)
!20187 = !DILocation(line: 205, column: 3, scope: !20185)
!20188 = !DILocation(line: 207, column: 11, scope: !20144)
!20189 = !DILocation(line: 207, column: 9, scope: !20144)
!20190 = !DILocation(line: 209, column: 11, scope: !20144)
!20191 = !DILocation(line: 209, column: 9, scope: !20144)
!20192 = !DILocation(line: 212, column: 6, scope: !20193)
!20193 = distinct !DILexicalBlock(scope: !20144, file: !3, line: 212, column: 6)
!20194 = !DILocation(line: 212, column: 19, scope: !20193)
!20195 = !DILocation(line: 212, column: 6, scope: !20144)
!20196 = !DILocation(line: 213, column: 19, scope: !20197)
!20197 = distinct !DILexicalBlock(scope: !20193, file: !3, line: 212, column: 47)
!20198 = !DILocation(line: 213, column: 27, scope: !20197)
!20199 = !DILocation(line: 213, column: 3, scope: !20197)
!20200 = !DILocation(line: 214, column: 19, scope: !20197)
!20201 = !DILocation(line: 214, column: 27, scope: !20197)
!20202 = !DILocation(line: 214, column: 3, scope: !20197)
!20203 = !DILocation(line: 215, column: 2, scope: !20197)
!20204 = !DILocation(line: 217, column: 6, scope: !20205)
!20205 = distinct !DILexicalBlock(scope: !20144, file: !3, line: 217, column: 6)
!20206 = !DILocation(line: 217, column: 19, scope: !20205)
!20207 = !DILocation(line: 217, column: 6, scope: !20144)
!20208 = !DILocation(line: 218, column: 14, scope: !20209)
!20209 = distinct !DILexicalBlock(scope: !20205, file: !3, line: 217, column: 49)
!20210 = !DILocation(line: 218, column: 12, scope: !20209)
!20211 = !DILocation(line: 220, column: 14, scope: !20209)
!20212 = !DILocation(line: 220, column: 12, scope: !20209)
!20213 = !DILocation(line: 222, column: 3, scope: !20209)
!20214 = !DILocalVariable(name: "_v", scope: !20215, file: !3, line: 222, type: !224)
!20215 = distinct !DILexicalBlock(scope: !20209, file: !3, line: 222, column: 3)
!20216 = !DILocation(line: 222, column: 3, scope: !20215)
!20217 = !DILocation(line: 222, column: 3, scope: !20218)
!20218 = distinct !DILexicalBlock(scope: !20215, file: !3, line: 222, column: 3)
!20219 = !DILocation(line: 223, column: 3, scope: !20209)
!20220 = !DILocation(line: 223, column: 3, scope: !20221)
!20221 = distinct !DILexicalBlock(scope: !20209, file: !3, line: 223, column: 3)
!20222 = !DILocation(line: 223, column: 3, scope: !20223)
!20223 = distinct !DILexicalBlock(scope: !20221, file: !3, line: 223, column: 3)
!20224 = !DILocation(line: 224, column: 2, scope: !20209)
!20225 = !DILocation(line: 226, column: 7, scope: !20144)
!20226 = !DILocation(line: 226, column: 12, scope: !20144)
!20227 = !DILocation(line: 227, column: 19, scope: !20144)
!20228 = !DILocation(line: 227, column: 7, scope: !20144)
!20229 = !DILocation(line: 227, column: 13, scope: !20144)
!20230 = !DILocation(line: 227, column: 17, scope: !20144)
!20231 = !DILocation(line: 229, column: 2, scope: !20144)
!20232 = !DILocation(line: 229, column: 2, scope: !20233)
!20233 = distinct !DILexicalBlock(scope: !20234, file: !3, line: 229, column: 2)
!20234 = distinct !DILexicalBlock(scope: !20144, file: !3, line: 229, column: 2)
!20235 = !DILocation(line: 229, column: 2, scope: !20234)
!20236 = !DILocation(line: 232, column: 32, scope: !20144)
!20237 = !DILocation(line: 232, column: 2, scope: !20144)
!20238 = !DILocation(line: 232, column: 8, scope: !20144)
!20239 = !DILocation(line: 232, column: 30, scope: !20144)
!20240 = !DILocation(line: 233, column: 11, scope: !20144)
!20241 = !DILocation(line: 233, column: 18, scope: !20144)
!20242 = !DILocation(line: 235, column: 23, scope: !20144)
!20243 = !DILocation(line: 235, column: 28, scope: !20144)
!20244 = !DILocation(line: 235, column: 38, scope: !20144)
!20245 = !DILocation(line: 235, column: 45, scope: !20144)
!20246 = !DILocation(line: 235, column: 50, scope: !20144)
!20247 = !DILocation(line: 235, column: 3, scope: !20144)
!20248 = !DILocation(line: 234, column: 12, scope: !20144)
!20249 = !DILocation(line: 237, column: 13, scope: !20250)
!20250 = distinct !DILexicalBlock(scope: !20144, file: !3, line: 237, column: 6)
!20251 = !DILocation(line: 237, column: 6, scope: !20250)
!20252 = !DILocation(line: 237, column: 6, scope: !20144)
!20253 = !DILocation(line: 238, column: 3, scope: !20254)
!20254 = distinct !DILexicalBlock(scope: !20250, file: !3, line: 237, column: 25)
!20255 = !DILocation(line: 241, column: 13, scope: !20254)
!20256 = !DILocation(line: 242, column: 2, scope: !20254)
!20257 = !DILocation(line: 244, column: 9, scope: !20144)
!20258 = !DILocation(line: 244, column: 2, scope: !20144)
!20259 = !DILocation(line: 245, column: 9, scope: !20144)
!20260 = !DILocation(line: 245, column: 2, scope: !20144)
!20261 = !DILocation(line: 246, column: 1, scope: !20144)
!20262 = distinct !DISubprogram(name: "update_allmulti_vports", scope: !3, file: !3, line: 562, type: !20263, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20263 = !DISubroutineType(types: !20264)
!20264 = !{null, !10791, !12233, !12242}
!20265 = !DILocalVariable(name: "esw", arg: 1, scope: !20262, file: !3, line: 562, type: !10791)
!20266 = !DILocation(line: 562, column: 57, scope: !20262)
!20267 = !DILocalVariable(name: "vaddr", arg: 2, scope: !20262, file: !3, line: 563, type: !12233)
!20268 = !DILocation(line: 563, column: 27, scope: !20262)
!20269 = !DILocalVariable(name: "esw_mc", arg: 3, scope: !20262, file: !3, line: 564, type: !12242)
!20270 = !DILocation(line: 564, column: 28, scope: !20262)
!20271 = !DILocalVariable(name: "mac", scope: !20262, file: !3, line: 566, type: !2742)
!20272 = !DILocation(line: 566, column: 6, scope: !20262)
!20273 = !DILocation(line: 566, column: 12, scope: !20262)
!20274 = !DILocation(line: 566, column: 19, scope: !20262)
!20275 = !DILocation(line: 566, column: 24, scope: !20262)
!20276 = !DILocalVariable(name: "vport", scope: !20262, file: !3, line: 567, type: !10958)
!20277 = !DILocation(line: 567, column: 21, scope: !20262)
!20278 = !DILocalVariable(name: "i", scope: !20262, file: !3, line: 568, type: !739)
!20279 = !DILocation(line: 568, column: 6, scope: !20262)
!20280 = !DILocalVariable(name: "vport_num", scope: !20262, file: !3, line: 568, type: !739)
!20281 = !DILocation(line: 568, column: 9, scope: !20262)
!20282 = !DILocation(line: 570, column: 2, scope: !20283)
!20283 = distinct !DILexicalBlock(scope: !20262, file: !3, line: 570, column: 2)
!20284 = !DILocation(line: 570, column: 2, scope: !20285)
!20285 = distinct !DILexicalBlock(scope: !20283, file: !3, line: 570, column: 2)
!20286 = !DILocalVariable(name: "vport_hash", scope: !20287, file: !3, line: 571, type: !6692)
!20287 = distinct !DILexicalBlock(scope: !20285, file: !3, line: 570, column: 41)
!20288 = !DILocation(line: 571, column: 22, scope: !20287)
!20289 = !DILocation(line: 571, column: 35, scope: !20287)
!20290 = !DILocation(line: 571, column: 42, scope: !20287)
!20291 = !DILocalVariable(name: "iter_vaddr", scope: !20287, file: !3, line: 572, type: !12233)
!20292 = !DILocation(line: 572, column: 22, scope: !20287)
!20293 = !DILocalVariable(name: "ix", scope: !20294, file: !3, line: 573, type: !6)
!20294 = distinct !DILexicalBlock(scope: !20287, file: !3, line: 573, column: 6)
!20295 = !DILocation(line: 573, column: 6, scope: !20294)
!20296 = !DILocalVariable(name: "found", scope: !20294, file: !3, line: 573, type: !299)
!20297 = !DILocalVariable(name: "ptr", scope: !20294, file: !3, line: 573, type: !12233)
!20298 = !DILocalVariable(name: "____ptr", scope: !20299, file: !3, line: 573, type: !449)
!20299 = distinct !DILexicalBlock(scope: !20300, file: !3, line: 573, column: 6)
!20300 = distinct !DILexicalBlock(scope: !20294, file: !3, line: 573, column: 6)
!20301 = !DILocation(line: 573, column: 6, scope: !20299)
!20302 = !DILocalVariable(name: "__mptr", scope: !20303, file: !3, line: 573, type: !154)
!20303 = distinct !DILexicalBlock(scope: !20299, file: !3, line: 573, column: 6)
!20304 = !DILocation(line: 573, column: 6, scope: !20303)
!20305 = !DILocation(line: 573, column: 6, scope: !20306)
!20306 = distinct !DILexicalBlock(scope: !20303, file: !3, line: 573, column: 6)
!20307 = !DILocation(line: 573, column: 6, scope: !20300)
!20308 = !DILocation(line: 573, column: 6, scope: !20309)
!20309 = distinct !DILexicalBlock(scope: !20300, file: !3, line: 573, column: 6)
!20310 = !DILocation(line: 573, column: 6, scope: !20311)
!20311 = distinct !DILexicalBlock(scope: !20309, file: !3, line: 573, column: 6)
!20312 = !DILocation(line: 573, column: 6, scope: !20313)
!20313 = distinct !DILexicalBlock(scope: !20311, file: !3, line: 573, column: 6)
!20314 = !DILocalVariable(name: "____ptr", scope: !20315, file: !3, line: 573, type: !449)
!20315 = distinct !DILexicalBlock(scope: !20309, file: !3, line: 573, column: 6)
!20316 = !DILocation(line: 573, column: 6, scope: !20315)
!20317 = !DILocalVariable(name: "__mptr", scope: !20318, file: !3, line: 573, type: !154)
!20318 = distinct !DILexicalBlock(scope: !20315, file: !3, line: 573, column: 6)
!20319 = !DILocation(line: 573, column: 6, scope: !20318)
!20320 = !DILocation(line: 573, column: 6, scope: !20321)
!20321 = distinct !DILexicalBlock(scope: !20318, file: !3, line: 573, column: 6)
!20322 = distinct !{!20322, !20307, !20307}
!20323 = !DILocation(line: 573, column: 6, scope: !20324)
!20324 = distinct !DILexicalBlock(scope: !20294, file: !3, line: 573, column: 6)
!20325 = !DILocation(line: 576, column: 15, scope: !20287)
!20326 = !DILocation(line: 576, column: 22, scope: !20287)
!20327 = !DILocation(line: 576, column: 13, scope: !20287)
!20328 = !DILocation(line: 577, column: 22, scope: !20329)
!20329 = distinct !DILexicalBlock(scope: !20287, file: !3, line: 577, column: 7)
!20330 = !DILocation(line: 577, column: 29, scope: !20329)
!20331 = !DILocation(line: 577, column: 7, scope: !20329)
!20332 = !DILocation(line: 577, column: 44, scope: !20329)
!20333 = !DILocation(line: 578, column: 7, scope: !20329)
!20334 = !DILocation(line: 578, column: 14, scope: !20329)
!20335 = !DILocation(line: 578, column: 23, scope: !20329)
!20336 = !DILocation(line: 578, column: 20, scope: !20329)
!20337 = !DILocation(line: 577, column: 7, scope: !20287)
!20338 = !DILocation(line: 579, column: 4, scope: !20329)
!20339 = !DILocation(line: 580, column: 11, scope: !20287)
!20340 = !DILocation(line: 580, column: 18, scope: !20287)
!20341 = !DILocation(line: 580, column: 3, scope: !20287)
!20342 = !DILocation(line: 582, column: 8, scope: !20343)
!20343 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 582, column: 8)
!20344 = distinct !DILexicalBlock(scope: !20287, file: !3, line: 580, column: 26)
!20345 = !DILocation(line: 582, column: 8, scope: !20344)
!20346 = !DILocation(line: 583, column: 5, scope: !20343)
!20347 = !DILocalVariable(name: "ix", scope: !20348, file: !3, line: 584, type: !6)
!20348 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 584, column: 17)
!20349 = !DILocation(line: 584, column: 17, scope: !20348)
!20350 = !DILocalVariable(name: "ptr", scope: !20348, file: !3, line: 584, type: !12233)
!20351 = !DILocation(line: 584, column: 17, scope: !20352)
!20352 = distinct !DILexicalBlock(scope: !20348, file: !3, line: 584, column: 17)
!20353 = !DILocation(line: 584, column: 17, scope: !20354)
!20354 = distinct !DILexicalBlock(scope: !20352, file: !3, line: 584, column: 17)
!20355 = !DILocation(line: 584, column: 15, scope: !20344)
!20356 = !DILocation(line: 587, column: 9, scope: !20357)
!20357 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 587, column: 8)
!20358 = !DILocation(line: 587, column: 8, scope: !20344)
!20359 = !DILocation(line: 588, column: 5, scope: !20360)
!20360 = distinct !DILexicalBlock(scope: !20357, file: !3, line: 587, column: 21)
!20361 = !DILocation(line: 591, column: 5, scope: !20360)
!20362 = !DILocation(line: 593, column: 24, scope: !20344)
!20363 = !DILocation(line: 593, column: 4, scope: !20344)
!20364 = !DILocation(line: 593, column: 16, scope: !20344)
!20365 = !DILocation(line: 593, column: 22, scope: !20344)
!20366 = !DILocation(line: 595, column: 29, scope: !20344)
!20367 = !DILocation(line: 596, column: 15, scope: !20344)
!20368 = !DILocation(line: 597, column: 15, scope: !20344)
!20369 = !DILocation(line: 595, column: 6, scope: !20344)
!20370 = !DILocation(line: 594, column: 4, scope: !20344)
!20371 = !DILocation(line: 594, column: 16, scope: !20344)
!20372 = !DILocation(line: 594, column: 26, scope: !20344)
!20373 = !DILocation(line: 598, column: 4, scope: !20344)
!20374 = !DILocation(line: 598, column: 16, scope: !20344)
!20375 = !DILocation(line: 598, column: 27, scope: !20344)
!20376 = !DILocation(line: 599, column: 4, scope: !20344)
!20377 = !DILocation(line: 601, column: 9, scope: !20378)
!20378 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 601, column: 8)
!20379 = !DILocation(line: 601, column: 8, scope: !20344)
!20380 = !DILocation(line: 602, column: 5, scope: !20378)
!20381 = !DILocation(line: 603, column: 24, scope: !20344)
!20382 = !DILocation(line: 603, column: 36, scope: !20344)
!20383 = !DILocation(line: 603, column: 4, scope: !20344)
!20384 = !DILocation(line: 604, column: 4, scope: !20385)
!20385 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 604, column: 4)
!20386 = !DILocation(line: 605, column: 4, scope: !20344)
!20387 = !DILocation(line: 607, column: 2, scope: !20287)
!20388 = distinct !{!20388, !20282, !20389}
!20389 = !DILocation(line: 607, column: 2, scope: !20283)
!20390 = !DILocation(line: 608, column: 1, scope: !20262)
!20391 = distinct !DISubprogram(name: "__hlist_del", scope: !14027, file: !14027, line: 833, type: !20112, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20392 = !DILocalVariable(name: "n", arg: 1, scope: !20391, file: !14027, line: 833, type: !449)
!20393 = !DILocation(line: 833, column: 51, scope: !20391)
!20394 = !DILocalVariable(name: "next", scope: !20391, file: !14027, line: 835, type: !449)
!20395 = !DILocation(line: 835, column: 21, scope: !20391)
!20396 = !DILocation(line: 835, column: 28, scope: !20391)
!20397 = !DILocation(line: 835, column: 31, scope: !20391)
!20398 = !DILocalVariable(name: "pprev", scope: !20391, file: !14027, line: 836, type: !454)
!20399 = !DILocation(line: 836, column: 22, scope: !20391)
!20400 = !DILocation(line: 836, column: 30, scope: !20391)
!20401 = !DILocation(line: 836, column: 33, scope: !20391)
!20402 = !DILocation(line: 838, column: 2, scope: !20391)
!20403 = !DILocation(line: 838, column: 2, scope: !20404)
!20404 = distinct !DILexicalBlock(scope: !20391, file: !14027, line: 838, column: 2)
!20405 = !DILocation(line: 838, column: 2, scope: !20406)
!20406 = distinct !DILexicalBlock(scope: !20404, file: !14027, line: 838, column: 2)
!20407 = !DILocation(line: 838, column: 2, scope: !20408)
!20408 = distinct !DILexicalBlock(scope: !20404, file: !14027, line: 838, column: 2)
!20409 = !DILocation(line: 839, column: 6, scope: !20410)
!20410 = distinct !DILexicalBlock(scope: !20391, file: !14027, line: 839, column: 6)
!20411 = !DILocation(line: 839, column: 6, scope: !20391)
!20412 = !DILocation(line: 840, column: 3, scope: !20410)
!20413 = !DILocation(line: 840, column: 3, scope: !20414)
!20414 = distinct !DILexicalBlock(scope: !20410, file: !14027, line: 840, column: 3)
!20415 = !DILocation(line: 840, column: 3, scope: !20416)
!20416 = distinct !DILexicalBlock(scope: !20414, file: !14027, line: 840, column: 3)
!20417 = !DILocation(line: 840, column: 3, scope: !20418)
!20418 = distinct !DILexicalBlock(scope: !20414, file: !14027, line: 840, column: 3)
!20419 = !DILocation(line: 841, column: 1, scope: !20391)
!20420 = distinct !DISubprogram(name: "esw_apply_vport_rx_mode", scope: !3, file: !3, line: 849, type: !20421, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20421 = !DISubroutineType(types: !20422)
!20422 = !{null, !10791, !10958, !299, !299}
!20423 = !DILocalVariable(name: "esw", arg: 1, scope: !20420, file: !3, line: 849, type: !10791)
!20424 = !DILocation(line: 849, column: 58, scope: !20420)
!20425 = !DILocalVariable(name: "vport", arg: 2, scope: !20420, file: !3, line: 850, type: !10958)
!20426 = !DILocation(line: 850, column: 28, scope: !20420)
!20427 = !DILocalVariable(name: "promisc", arg: 3, scope: !20420, file: !3, line: 851, type: !299)
!20428 = !DILocation(line: 851, column: 14, scope: !20420)
!20429 = !DILocalVariable(name: "mc_promisc", arg: 4, scope: !20420, file: !3, line: 851, type: !299)
!20430 = !DILocation(line: 851, column: 28, scope: !20420)
!20431 = !DILocalVariable(name: "allmulti_addr", scope: !20420, file: !3, line: 853, type: !12242)
!20432 = !DILocation(line: 853, column: 22, scope: !20420)
!20433 = !DILocation(line: 853, column: 39, scope: !20420)
!20434 = !DILocation(line: 853, column: 44, scope: !20420)
!20435 = !DILocation(line: 855, column: 21, scope: !20436)
!20436 = distinct !DILexicalBlock(scope: !20420, file: !3, line: 855, column: 6)
!20437 = !DILocation(line: 855, column: 28, scope: !20436)
!20438 = !DILocation(line: 855, column: 6, scope: !20436)
!20439 = !DILocation(line: 855, column: 46, scope: !20436)
!20440 = !DILocation(line: 855, column: 43, scope: !20436)
!20441 = !DILocation(line: 855, column: 6, scope: !20420)
!20442 = !DILocation(line: 856, column: 3, scope: !20436)
!20443 = !DILocation(line: 858, column: 6, scope: !20444)
!20444 = distinct !DILexicalBlock(scope: !20420, file: !3, line: 858, column: 6)
!20445 = !DILocation(line: 858, column: 6, scope: !20420)
!20446 = !DILocation(line: 860, column: 36, scope: !20447)
!20447 = distinct !DILexicalBlock(scope: !20444, file: !3, line: 858, column: 18)
!20448 = !DILocation(line: 860, column: 41, scope: !20447)
!20449 = !DILocation(line: 860, column: 48, scope: !20447)
!20450 = !DILocation(line: 860, column: 4, scope: !20447)
!20451 = !DILocation(line: 859, column: 3, scope: !20447)
!20452 = !DILocation(line: 859, column: 10, scope: !20447)
!20453 = !DILocation(line: 859, column: 24, scope: !20447)
!20454 = !DILocation(line: 861, column: 8, scope: !20455)
!20455 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 861, column: 7)
!20456 = !DILocation(line: 861, column: 23, scope: !20455)
!20457 = !DILocation(line: 861, column: 7, scope: !20447)
!20458 = !DILocation(line: 863, column: 37, scope: !20455)
!20459 = !DILocation(line: 863, column: 5, scope: !20455)
!20460 = !DILocation(line: 862, column: 4, scope: !20455)
!20461 = !DILocation(line: 862, column: 19, scope: !20455)
!20462 = !DILocation(line: 862, column: 31, scope: !20455)
!20463 = !DILocation(line: 865, column: 3, scope: !20447)
!20464 = !DILocation(line: 865, column: 18, scope: !20447)
!20465 = !DILocation(line: 865, column: 24, scope: !20447)
!20466 = !DILocation(line: 866, column: 2, scope: !20447)
!20467 = !DILocation(line: 866, column: 13, scope: !20468)
!20468 = distinct !DILexicalBlock(scope: !20444, file: !3, line: 866, column: 13)
!20469 = !DILocation(line: 866, column: 20, scope: !20468)
!20470 = !DILocation(line: 866, column: 13, scope: !20444)
!20471 = !DILocation(line: 867, column: 23, scope: !20472)
!20472 = distinct !DILexicalBlock(scope: !20468, file: !3, line: 866, column: 35)
!20473 = !DILocation(line: 867, column: 30, scope: !20472)
!20474 = !DILocation(line: 867, column: 3, scope: !20472)
!20475 = !DILocation(line: 868, column: 3, scope: !20472)
!20476 = !DILocation(line: 868, column: 10, scope: !20472)
!20477 = !DILocation(line: 868, column: 24, scope: !20472)
!20478 = !DILocation(line: 870, column: 9, scope: !20479)
!20479 = distinct !DILexicalBlock(scope: !20472, file: !3, line: 870, column: 7)
!20480 = !DILocation(line: 870, column: 24, scope: !20479)
!20481 = !DILocation(line: 870, column: 7, scope: !20479)
!20482 = !DILocation(line: 870, column: 31, scope: !20479)
!20483 = !DILocation(line: 870, column: 7, scope: !20472)
!20484 = !DILocation(line: 871, column: 4, scope: !20479)
!20485 = !DILocation(line: 873, column: 7, scope: !20486)
!20486 = distinct !DILexicalBlock(scope: !20472, file: !3, line: 873, column: 7)
!20487 = !DILocation(line: 873, column: 22, scope: !20486)
!20488 = !DILocation(line: 873, column: 7, scope: !20472)
!20489 = !DILocation(line: 874, column: 24, scope: !20486)
!20490 = !DILocation(line: 874, column: 39, scope: !20486)
!20491 = !DILocation(line: 874, column: 4, scope: !20486)
!20492 = !DILocation(line: 875, column: 3, scope: !20472)
!20493 = !DILocation(line: 875, column: 18, scope: !20472)
!20494 = !DILocation(line: 875, column: 30, scope: !20472)
!20495 = !DILocation(line: 876, column: 2, scope: !20472)
!20496 = !DILabel(scope: !20420, name: "promisc", file: !3, line: 878)
!20497 = !DILocation(line: 878, column: 1, scope: !20420)
!20498 = !DILocation(line: 879, column: 21, scope: !20499)
!20499 = distinct !DILexicalBlock(scope: !20420, file: !3, line: 879, column: 6)
!20500 = !DILocation(line: 879, column: 28, scope: !20499)
!20501 = !DILocation(line: 879, column: 6, scope: !20499)
!20502 = !DILocation(line: 879, column: 45, scope: !20499)
!20503 = !DILocation(line: 879, column: 42, scope: !20499)
!20504 = !DILocation(line: 879, column: 6, scope: !20420)
!20505 = !DILocation(line: 880, column: 3, scope: !20499)
!20506 = !DILocation(line: 882, column: 6, scope: !20507)
!20507 = distinct !DILexicalBlock(scope: !20420, file: !3, line: 882, column: 6)
!20508 = !DILocation(line: 882, column: 6, scope: !20420)
!20509 = !DILocation(line: 884, column: 35, scope: !20510)
!20510 = distinct !DILexicalBlock(scope: !20507, file: !3, line: 882, column: 15)
!20511 = !DILocation(line: 884, column: 40, scope: !20510)
!20512 = !DILocation(line: 884, column: 47, scope: !20510)
!20513 = !DILocation(line: 884, column: 4, scope: !20510)
!20514 = !DILocation(line: 883, column: 3, scope: !20510)
!20515 = !DILocation(line: 883, column: 10, scope: !20510)
!20516 = !DILocation(line: 883, column: 23, scope: !20510)
!20517 = !DILocation(line: 885, column: 2, scope: !20510)
!20518 = !DILocation(line: 885, column: 13, scope: !20519)
!20519 = distinct !DILexicalBlock(scope: !20507, file: !3, line: 885, column: 13)
!20520 = !DILocation(line: 885, column: 20, scope: !20519)
!20521 = !DILocation(line: 885, column: 13, scope: !20507)
!20522 = !DILocation(line: 886, column: 23, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20519, file: !3, line: 885, column: 34)
!20524 = !DILocation(line: 886, column: 30, scope: !20523)
!20525 = !DILocation(line: 886, column: 3, scope: !20523)
!20526 = !DILocation(line: 887, column: 3, scope: !20523)
!20527 = !DILocation(line: 887, column: 10, scope: !20523)
!20528 = !DILocation(line: 887, column: 23, scope: !20523)
!20529 = !DILocation(line: 888, column: 2, scope: !20523)
!20530 = !DILocation(line: 889, column: 1, scope: !20420)
!20531 = distinct !DISubprogram(name: "esw_fdb_set_vport_allmulti_rule", scope: !3, file: !3, line: 258, type: !20532, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20532 = !DISubroutineType(types: !20533)
!20533 = !{!10844, !10791, !739}
!20534 = !DILocalVariable(name: "esw", arg: 1, scope: !20531, file: !3, line: 258, type: !10791)
!20535 = !DILocation(line: 258, column: 54, scope: !20531)
!20536 = !DILocalVariable(name: "vport", arg: 2, scope: !20531, file: !3, line: 258, type: !739)
!20537 = !DILocation(line: 258, column: 63, scope: !20531)
!20538 = !DILocalVariable(name: "mac_c", scope: !20531, file: !3, line: 260, type: !10953)
!20539 = !DILocation(line: 260, column: 5, scope: !20531)
!20540 = !DILocalVariable(name: "mac_v", scope: !20531, file: !3, line: 261, type: !10953)
!20541 = !DILocation(line: 261, column: 5, scope: !20531)
!20542 = !DILocation(line: 263, column: 16, scope: !20531)
!20543 = !DILocation(line: 263, column: 2, scope: !20531)
!20544 = !DILocation(line: 264, column: 16, scope: !20531)
!20545 = !DILocation(line: 264, column: 2, scope: !20531)
!20546 = !DILocation(line: 265, column: 2, scope: !20531)
!20547 = !DILocation(line: 265, column: 11, scope: !20531)
!20548 = !DILocation(line: 266, column: 2, scope: !20531)
!20549 = !DILocation(line: 266, column: 11, scope: !20531)
!20550 = !DILocation(line: 267, column: 34, scope: !20531)
!20551 = !DILocation(line: 267, column: 39, scope: !20531)
!20552 = !DILocation(line: 267, column: 53, scope: !20531)
!20553 = !DILocation(line: 267, column: 60, scope: !20531)
!20554 = !DILocation(line: 267, column: 9, scope: !20531)
!20555 = !DILocation(line: 267, column: 2, scope: !20531)
!20556 = distinct !DISubprogram(name: "esw_fdb_set_vport_promisc_rule", scope: !3, file: !3, line: 271, type: !20532, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20557 = !DILocalVariable(name: "esw", arg: 1, scope: !20556, file: !3, line: 271, type: !10791)
!20558 = !DILocation(line: 271, column: 53, scope: !20556)
!20559 = !DILocalVariable(name: "vport", arg: 2, scope: !20556, file: !3, line: 271, type: !739)
!20560 = !DILocation(line: 271, column: 62, scope: !20556)
!20561 = !DILocalVariable(name: "mac_c", scope: !20556, file: !3, line: 273, type: !10953)
!20562 = !DILocation(line: 273, column: 5, scope: !20556)
!20563 = !DILocalVariable(name: "mac_v", scope: !20556, file: !3, line: 274, type: !10953)
!20564 = !DILocation(line: 274, column: 5, scope: !20556)
!20565 = !DILocation(line: 276, column: 16, scope: !20556)
!20566 = !DILocation(line: 276, column: 2, scope: !20556)
!20567 = !DILocation(line: 277, column: 16, scope: !20556)
!20568 = !DILocation(line: 277, column: 2, scope: !20556)
!20569 = !DILocation(line: 278, column: 34, scope: !20556)
!20570 = !DILocation(line: 278, column: 39, scope: !20556)
!20571 = !DILocation(line: 278, column: 52, scope: !20556)
!20572 = !DILocation(line: 278, column: 59, scope: !20556)
!20573 = !DILocation(line: 278, column: 9, scope: !20556)
!20574 = !DILocation(line: 278, column: 2, scope: !20556)
!20575 = distinct !DISubprogram(name: "calculate_vports_min_rate_divider", scope: !3, file: !3, line: 2216, type: !20576, scopeLine: 2217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20576 = !DISubroutineType(types: !20577)
!20577 = !{!224, !10791}
!20578 = !DILocalVariable(name: "esw", arg: 1, scope: !20575, file: !3, line: 2216, type: !10791)
!20579 = !DILocation(line: 2216, column: 67, scope: !20575)
!20580 = !DILocalVariable(name: "fw_max_bw_share", scope: !20575, file: !3, line: 2218, type: !224)
!20581 = !DILocation(line: 2218, column: 6, scope: !20575)
!20582 = !DILocation(line: 2218, column: 24, scope: !20575)
!20583 = !DILocalVariable(name: "evport", scope: !20575, file: !3, line: 2219, type: !10958)
!20584 = !DILocation(line: 2219, column: 21, scope: !20575)
!20585 = !DILocalVariable(name: "max_guarantee", scope: !20575, file: !3, line: 2220, type: !224)
!20586 = !DILocation(line: 2220, column: 6, scope: !20575)
!20587 = !DILocalVariable(name: "i", scope: !20575, file: !3, line: 2221, type: !6)
!20588 = !DILocation(line: 2221, column: 6, scope: !20575)
!20589 = !DILocation(line: 2223, column: 2, scope: !20590)
!20590 = distinct !DILexicalBlock(scope: !20575, file: !3, line: 2223, column: 2)
!20591 = !DILocation(line: 2223, column: 2, scope: !20592)
!20592 = distinct !DILexicalBlock(scope: !20590, file: !3, line: 2223, column: 2)
!20593 = !DILocation(line: 2224, column: 8, scope: !20594)
!20594 = distinct !DILexicalBlock(scope: !20595, file: !3, line: 2224, column: 7)
!20595 = distinct !DILexicalBlock(scope: !20592, file: !3, line: 2223, column: 42)
!20596 = !DILocation(line: 2224, column: 16, scope: !20594)
!20597 = !DILocation(line: 2224, column: 24, scope: !20594)
!20598 = !DILocation(line: 2224, column: 27, scope: !20594)
!20599 = !DILocation(line: 2224, column: 35, scope: !20594)
!20600 = !DILocation(line: 2224, column: 40, scope: !20594)
!20601 = !DILocation(line: 2224, column: 51, scope: !20594)
!20602 = !DILocation(line: 2224, column: 49, scope: !20594)
!20603 = !DILocation(line: 2224, column: 7, scope: !20595)
!20604 = !DILocation(line: 2225, column: 4, scope: !20594)
!20605 = !DILocation(line: 2226, column: 19, scope: !20595)
!20606 = !DILocation(line: 2226, column: 27, scope: !20595)
!20607 = !DILocation(line: 2226, column: 32, scope: !20595)
!20608 = !DILocation(line: 2226, column: 17, scope: !20595)
!20609 = !DILocation(line: 2227, column: 2, scope: !20595)
!20610 = distinct !{!20610, !20589, !20611}
!20611 = !DILocation(line: 2227, column: 2, scope: !20590)
!20612 = !DILocation(line: 2229, column: 6, scope: !20613)
!20613 = distinct !DILexicalBlock(scope: !20575, file: !3, line: 2229, column: 6)
!20614 = !DILocation(line: 2229, column: 6, scope: !20575)
!20615 = !DILocalVariable(name: "__UNIQUE_ID___x735", scope: !20616, file: !3, line: 2230, type: !224)
!20616 = distinct !DILexicalBlock(scope: !20613, file: !3, line: 2230, column: 10)
!20617 = !DILocation(line: 2230, column: 10, scope: !20616)
!20618 = !DILocalVariable(name: "__UNIQUE_ID___y736", scope: !20616, file: !3, line: 2230, type: !224)
!20619 = !DILocation(line: 2230, column: 3, scope: !20613)
!20620 = !DILocation(line: 2231, column: 2, scope: !20575)
!20621 = !DILocation(line: 2232, column: 1, scope: !20575)
!20622 = distinct !DISubprogram(name: "__arch_swab64", scope: !17529, file: !17529, line: 15, type: !17340, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !53)
!20623 = !DILocalVariable(name: "val", arg: 1, scope: !20622, file: !17529, line: 15, type: !231)
!20624 = !DILocation(line: 15, column: 61, scope: !20622)
!20625 = !DILocation(line: 31, column: 38, scope: !20622)
!20626 = !DILocation(line: 31, column: 2, scope: !20622)
!20627 = !{i32 577637}
!20628 = !DILocation(line: 32, column: 9, scope: !20622)
!20629 = !DILocation(line: 32, column: 2, scope: !20622)
